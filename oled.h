#include <string.h>
#include <stdio.h>

/**
  OLED W Click Board display functionality header file

  @File Name
    oled.h

  @Description
    This header file provides functionality for OLED W Click Board display by Mikroelektronika.
  
  @OriginalSource
  http://microchipdeveloper.com/projects:8-bit-color-sensing-in-embedded-applications

 @ModifiedBy
  Sean Wernimont
*/



/*******************************************************************************************************/
/*******************************************************************************************************/



/*
    (c) 2017 Microchip Technology Inc. and its subsidiaries. You may use this
    software and any derivatives exclusively with Microchip products.

    THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS". NO WARRANTIES, WHETHER
    EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE, INCLUDING ANY IMPLIED
    WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS FOR A
    PARTICULAR PURPOSE, OR ITS INTERACTION WITH MICROCHIP PRODUCTS, COMBINATION
    WITH ANY OTHER PRODUCTS, OR USE IN ANY APPLICATION.

    IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE,
    INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND
    WHATSOEVER RELATED TO THE SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS
    BEEN ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE. TO THE
    FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN
    ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES, IF ANY,
    THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS SOFTWARE.

    MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE OF THESE
    TERMS.
*/

#ifndef _OLED_H
#define _OLED_H



/*******************************************************************************************************/
/*******************************************************************************************************/



/**
 Section: Macro definitions
 
 @Summary: SSD1306 display driver functions defined
 
 @Description: The following functions can be performed 
 
 SPI_Write:                                 Write 8 bit data onto the SPI bus
 
 SSD1306_96_39:                             SSD1306 is a single-chip CMOS OLED W Click Board driver with controller for light emitting 
                                            diode dot-matrix graphic display system
 
 SSD1306_LEDWIDTH:                          This command defines the OLED W Click Board width
 
 SSD1306_LEDHEIGHT:                         This command defines the OLED W Click Board height
 
 SSD1306_DISPLAYOFF:                        This command turns the OLED W Click Board panel display OFF
 
 SSD1306_SETDISPLAYCLOCKDIV:                This command has two parts to it. The 4 LSB [3:0] represents the ratio required to 
                                            generate the Display clock from the system clock. The 4 MSB [7:4] programs the 
                                            oscillator frequency
 
 SSD1306_SETMULTIPLEX:                      This command selects one of the COM0 to COM63 output pads to corresponding COM signal
 
 SSD1306_SETDISPLAYOFFSET:                  This command is used to offset the start of line by a certain amount
 
 SSD1306_SETSTARTLINE:                      This command decides the start address of display RAM
 
 *Note: SSD1306_SETDISPLAYCLOCKDIV, SSD1306_SETMULTIPLEX, SSD1306_SETDISPLAYOFFSET and SSD1306_SETSTARTLINE are the set of commands
 that must be written in order to set the start address and making sure the display RAM is read onto the right COM signal
 
 SSD1306_CHARGEPUMP:                        This command is used to control charge pump settings
 
 SSD1306_SETSEGMENTREMAP:                   This command sets the display data column address 127 and segment driver 0 mapped together
 
 SSD1306_SEGREMAP:                          This command sets the display data column address 0 and segment driver 0 mapped together for reset
 
 SSD1306_COMSCANDEC:                        This command sets the scan direction of the COM output
 
 SSD1306_SETCOMPINS:                        This command configures OLED W Click Board panel hardware layout to the COM signal pins
 
 SSD1306_SETCONTRAST:                       This command varies the contrast of display over 256 steps
 
 SSD1306_SETPRECHARGE:                      This command sets the pre-charge time
 
 SSD1306_SETVCOMDETECT:                     This command adjusts the VCOMH regulator output
 
 SSD1306_DISPLAYALLON_RESUME:               This command enables the display outputs to Graphics DDR RAM
 
 SSD1306_NORMALDISPLAY:                     This command sets the OLED W Click Board to normal display where RAM data has 1 
                                            implies pixel is ON and vice versa
 
 SSD1306_DISPLAYON:                         This command turns the OLED W Click Board panel display ON
 
 SSD1306_DISPLAYALLON:                      This command forces entire OLED W Click Board display ON regardless of display data RAM
 
 SSD1306_INVERTDISPLAY:                     This command sets the OLED W Click Board to invert display where RAM data has 
                                            1 implies pixel is OFF and vice versa
 
 SSD1306_SETLOWCOLUMN:                      This command specifies lower nibble of the column address for display data RAM
 
 SSD1306_SETHIGHCOLUMN:                     This command specifies higher nibble of the column address for display data RAM
 
 SSD1306_MEMORYMODE:                        This command sets the addressing mode
 
 SSD1306_COLUMNADDR:                        This command specifies the start of column address
 
 SSD1306_PAGEADDR:                          This command specifies the start of page address
 
 SSD1306_COMSCANINC:                        This command sets the normal direction of COM signal
 
 SSD1306_EXTERNALVCC:                       This command connects the Vcc to external source
 
 SSD1306_SWITCHCAPVCC:                      This command enables charge pump during display ON
 
 */
#define SPI_Write( x) SPI2_Exchange8bit( x)
#define SSD1306_96_39
#define SSD1306_LEDWIDTH                  96                //To set LED Width to 96
#define SSD1306_LEDHEIGHT                 39                //To set LED Height to 39
#define SSD1306_DISPLAYOFF                0xAE              //To set OLED W Click Board display OFF
#define SSD1306_SETDISPLAYCLOCKDIV        0xD5
#define SSD1306_SETMULTIPLEX              0xA8
#define SSD1306_SETDISPLAYOFFSET          0xD3
#define SSD1306_SETSTARTLINE              0x40
#define SSD1306_CHARGEPUMP                0x8D
#define SSD1306_SETSEGMENTREMAP           0xA1
#define SSD1306_SEGREMAP                  0xA0
#define SSD1306_COMSCANDEC                0xC8
#define SSD1306_SETCOMPINS                0xDA
#define SSD1306_SETCONTRAST               0x81
#define SSD1306_SETPRECHARGE              0xD9
#define SSD1306_SETVCOMDETECT             0xDB
#define SSD1306_DISPLAYALLON_RESUME       0xA4
#define SSD1306_NORMALDISPLAY             0xA6              //To set OLED W Click Board display to normal mode
#define SSD1306_DISPLAYON                 0xAF              //To set OLED W Click Board display ON
#define SSD1306_DISPLAYALLON              0xA5
#define SSD1306_INVERTDISPLAY             0xA7
#define SSD1306_SETLOWCOLUMN              0x00
#define SSD1306_SETHIGHCOLUMN             0x10
#define SSD1306_MEMORYMODE                0x20              //To set OLED W Click Board is set to horizontal addressing mode
#define SSD1306_COLUMNADDR                0x21
#define SSD1306_PAGEADDR                  0x22
#define SSD1306_COMSCANINC                0xC0
#define SSD1306_SEGREMAP                  0xA0
#define SSD1306_EXTERNALVCC               0x01
#define SSD1306_SWITCHCAPVCC              0x02

char CharacterArray[100];

/*******************************************************************************************************/
/*******************************************************************************************************/



/**
  Section: Variable declaration
 
 @Description:      
                lookup    Type:       const uint8_t
                            Function:   Specifies mapping of each ASCII character to OLED W Click Board pixel pattern

 
  
                default   Type:       uint8_t
                            Function:   Defines the default pixel mapping of the OLED W Click Board display         
*/
const uint8_t lookup[]={
    0x00,0x00,0x00,0x00,0x00,   0x00,0x00,0x5F,0x00,0x00,   0x00,0x07,0x00,0x07,0x00, //	'sp,!,"
    0x14,0x7F,0x14,0x7F,0x14,                                                         //    #
    0x24,0x2A,0x7F,0x2A,0x12,   0x23,0x13,0x08,0x64,0x62,   0x36,0x49,0x56,0x20,0x50, //	'$,%,&
    0x00,0x08,0x07,0x03,0x00,   0x00,0x1C,0x22,0x41,0x00,   0x00,0x41,0x22,0x1C,0x00, //	'',(,)
    0x2A,0x1C,0x7F,0x1C,0x2A,   0x08,0x08,0x3E,0x08,0x08,   0x00,0x00,0x70,0x30,0x00, //	'*,+,,
    0x08,0x08,0x08,0x08,0x08,   0x00,0x00,0x60,0x60,0x00,   0x20,0x10,0x08,0x04,0x02, //	'-,.,/
    0x3E,0x51,0x49,0x45,0x3E,   0x00,0x42,0x7F,0x40,0x00,   0x72,0x49,0x49,0x49,0x46, //	'0,1,2
    0x21,0x41,0x49,0x4D,0x33,   0x18,0x14,0x12,0x7F,0x10,   0x27,0x45,0x45,0x45,0x39, //	'3,4,5
    0x3C,0x4A,0x49,0x49,0x31,   0x41,0x21,0x11,0x09,0x07,   0x36,0x49,0x49,0x49,0x36, //	'6,7,8
    0x46,0x49,0x49,0x29,0x1E,   0x00,0x00,0x14,0x00,0x00,   0x00,0x40,0x34,0x00,0x00, //	'9,:,;
    0x00,0x08,0x14,0x22,0x41,   0x14,0x14,0x14,0x14,0x14,   0x00,0x41,0x22,0x14,0x08, //	'<,=,>
    0x02,0x01,0x59,0x09,0x06,   0x3E,0x41,0x5D,0x59,0x4E,                             //    '?,@
    0x7C,0x12,0x11,0x12,0x7C,                                                         //	'A
    0x7F,0x49,0x49,0x49,0x36,   0x3E,0x41,0x41,0x41,0x22,   0x7F,0x41,0x41,0x41,0x3E, //	'B,C,D
    0x7F,0x49,0x49,0x49,0x41,   0x7F,0x09,0x09,0x09,0x01,   0x3E,0x41,0x41,0x51,0x73, //	'E,F,G
    0x7F,0x08,0x08,0x08,0x7F,   0x00,0x41,0x7F,0x41,0x00,   0x20,0x40,0x41,0x3F,0x01, //	'H,I,J
    0x7F,0x08,0x14,0x22,0x41,   0x7F,0x40,0x40,0x40,0x40,   0x7F,0x02,0x1C,0x02,0x7F, //	'K,L,M
    0x7F,0x04,0x08,0x10,0x7F,   0x3E,0x41,0x41,0x41,0x3E,   0x7F,0x09,0x09,0x09,0x06, //	'N,O,P
    0x3E,0x41,0x51,0x21,0x5E,   0x7F,0x09,0x19,0x29,0x46,   0x26,0x49,0x49,0x49,0x32, //	'Q,R,S
    0x03,0x01,0x7F,0x01,0x03,   0x3F,0x40,0x40,0x40,0x3F,   0x1F,0x20,0x40,0x20,0x1F, //	'T,U,V
    0x3F,0x40,0x38,0x40,0x3F,   0x63,0x14,0x08,0x14,0x63,   0x03,0x04,0x78,0x04,0x03, //	'W,X,Y
    0x61,0x59,0x49,0x4D,0x43,                                                         //    'Z
    0x00,0x7F,0x41,0x41,0x41,   0x02,0x04,0x08,0x10,0x20,                             //	'[,\ 
    0x00,0x41,0x41,0x41,0x7F,   0x04,0x02,0x01,0x02,0x04,   0x40,0x40,0x40,0x40,0x40, //	'],^,_
    0x00,0x03,0x07,0x08,0x00,   0x20,0x54,0x54,0x38,0x40,   0x7F,0x28,0x44,0x44,0x38, //	'`,a,b
    0x38,0x44,0x44,0x44,0x28,   0x38,0x44,0x44,0x28,0x7F,   0x38,0x54,0x54,0x54,0x18, //	'c,d,e
    0x00,0x08,0x7E,0x09,0x02,   0x0C,0x52,0x52,0x4A,0x3C,   0x7F,0x08,0x04,0x04,0x78, //	'f,g,h
    0x00,0x44,0x7D,0x40,0x00,   0x20,0x40,0x40,0x3D,0x00,   0x7F,0x10,0x28,0x44,0x00, //	'i,j,k
    0x00,0x41,0x7F,0x40,0x00,   0x7C,0x04,0x78,0x04,0x78,   0x7C,0x08,0x04,0x04,0x78, //	'l,m,n
    0x38,0x44,0x44,0x44,0x38,   0x7C,0x18,0x24,0x24,0x18,   0x18,0x24,0x24,0x18,0x7C, //	'o,p,q
    0x7C,0x08,0x04,0x04,0x08,   0x48,0x54,0x54,0x54,0x24,   0x04,0x04,0x3F,0x44,0x24, //	'r,s,t
    0x3C,0x40,0x40,0x20,0x7C,   0x1C,0x20,0x40,0x20,0x1C,   0x3C,0x40,0x30,0x40,0x3C, //	'u,v,w
    0x44,0x28,0x10,0x28,0x44,   0x4C,0x50,0x50,0x50,0x3C,   0x44,0x64,0x54,0x4C,0x44, //	'x,y,z
    0x00,0x08,0x36,0x41,0x00,   0x00,0x00,0x77,0x00,0x00,   0x00,0x41,0x36,0x08,0x00, //	'{,|,}
    0x02,0x01,0x02,0x04,0x02                                                          //  '~  
};

uint8_t displayArray[] = {
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	

    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,

    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,

    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,

    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00
};

const uint8_t emptyArray[] = {
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	

    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,

    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,

    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,

    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00,	0x00,0x00,0x00,0x00,0x00
};
/*******************************************************************************************************/
/*******************************************************************************************************/



/**
  Section: Function definitions
 
*/ 
/**
  @Function
    OLED_Command
  @Summary
    Issues command to OLED W Click Board over SPI protocol

  @Description
    This routine issues a command to the OLED W Click Board to perform a particular task.
    It calls the OLED W Click Board SSD1306 display driver commands for OLED W Click Board that Set OLED W Click Board 
    Display On/Off,Set Display Clock Divide Ratio/Oscillator Frequency, Set 
    Multiplex Ratio,Set Segment Remap Inv, Set COM Output Scan Inv, Set Display
    Start Line, Set Display Offset, Set Charge Pump, Enable Charge Pump, Set
    COM Pins Hardware Configuration, Set Contrast Control, Set Pre-Charge Period,
    Set VCOMH Deselect Level, Set Entire Display On/Off, Set Normal/Inverse Display etc.

  @Param
    temp : Specifies what command should be sent to the SSD1306 display driver controller

  @Returns
    None

 */
void OLED_Command( uint8_t temp);



/*******************************************************************************************************/
/*******************************************************************************************************/



/**
  @Function
    OLED_Data
 
  @Summary
    Issues the pixel pattern for character to be displayed

  @Description
    This routine issues a character that has to be displayed on the OLED W Click Board. 
    It uses the 8-bit data sent to it as a parameter to decide what pattern
    needs to be issued to the OLED W Click Board for it to display that particular character
 
  @Param  
    temp : ASCII character to be displayed on the OLED W Click Board 
  @Returns
    None

 */
void OLED_Data( uint8_t temp);



/*******************************************************************************************************/
/*******************************************************************************************************/



/**
  @Function
    OLED_Initialize
 
  @Summary
    Initializes the OLED W Click Board

  @Description
    This routine issues commands for the initialization of the OLED W Click Board 
    to ensure proper working. It resets the OLED W Click Board and then issues the following commands to SSD1306 display driver controller:
    1.  The OLED W Click Board is set to Display Off
    2.  Display clock divide ratio/oscillator frequency is set
    3.  Multiplex ratio is set
    4.  Segment remap invert is set
    5.  COM output scan invert is set
    6.  Display start line is set
    7.  Display offset is set
    8.  Charge pump is set
    9.  Charge pump is enabled
    10. COM pins hardware configuration is set
    11. Contrast control is set
    12. Pre-Charge period is set
    13. VCOMH deselect level is selected
    14. Entire display ON
    15. Set normal display
    16. Set OLED W Click Board display ON

  @Param  
    temp : ASCII character to be displayed on the OLED W Click Board
  @Returns
    None
 */
void OLED_Initialize( void);



/*******************************************************************************************************/
/*******************************************************************************************************/



/**
  @Function
    OLED_SetRow
 
  @Summary
    Sets the row at which a character has to be displayed

  @Description
    This routine issues a command to the SSD1306 display driver controller to set address of the row
    at which OLED W Click Board will have to display the character
 
  @Param  
    address : Address of the row on the OLED W Click Board where the character has to be display
  @Returns
    None
 */
void OLED_SetRow( uint8_t address);



/*******************************************************************************************************/
/*******************************************************************************************************/



/**
  @Function
    OLED_SetColumn
 
  @Summary
    Sets the column at which a character has to be displayed

  @Description
    This routine issues a command to the SSD1306 display driver controller to set address of the column
    at which OLED W Click Board will have to display the character
 
  @Param  
    address: Address of the column on the OLED W Click Board where the character has to be display
  @Returns
    None
 */
void OLED_SetColumn( uint8_t address);



/*******************************************************************************************************/
/*******************************************************************************************************/



/**
  @Function
    OLED_PutPicture
 
  @Summary
    Used to display the complete OLED W Click Board pattern

  @Description
    This routine issues commands to display the complete pattern that needs to be on the OLED W Click Board.
    There are two for loops that change the row and column for each character to be displayed on the OLED W Click
    Board. The starting address of the pattern to be displayed is sent as an argument to the function to point to 
    the starting address of the pattern to be printed.
  @Param  
    *pic:  Starting address of the pattern to be displayed on the OLED W Click Board
  @Returns
    None
 */
void OLED_PutPicture( const uint8_t *pic);



/*******************************************************************************************************/
/*******************************************************************************************************/



/**
  @Function
    OLED_Clear
 
  @Summary
    Used to clear the complete OLED W Click Board display

  @Description
    This routine issues commands to clear off the OLED W Click Board display. 
  @Param  
    None
  @Returns
    None
 */
void OLED_Clear(void);

/*******************************************************************************************************/
/*******************************************************************************************************/

void Write_String(char message[]);

void Modify_Data(char c[], unsigned int offset, unsigned int limit);

#endif // _OLED_H