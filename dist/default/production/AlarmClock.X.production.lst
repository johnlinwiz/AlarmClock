

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Aug 28 22:53:53 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text88,local,class=CODE,merge=1,delta=2
   111                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text91,local,class=CODE,merge=1,delta=2
   114                           	psect	text92,local,class=CODE,merge=1,delta=2
   115                           	psect	text93,local,class=CODE,merge=1,delta=2
   116                           	psect	text94,local,class=CODE,merge=1,delta=2
   117                           	psect	text95,local,class=CODE,merge=1,delta=2
   118                           	psect	text96,local,class=CODE,merge=1,delta=2
   119                           	psect	text97,local,class=CODE,merge=1,delta=2
   120                           	psect	intentry,global,class=CODE,delta=2
   121                           	psect	text99,local,class=CODE,merge=1,delta=2
   122                           	psect	text100,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text101,local,class=CODE,merge=1,delta=2
   124                           	psect	text102,local,class=CODE,merge=1,delta=2
   125                           	psect	text103,local,class=CODE,merge=1,delta=2
   126                           	psect	text104,local,class=CODE,merge=1,delta=2
   127                           	psect	text105,local,class=CODE,merge=1,delta=2
   128                           	psect	text106,local,class=CODE,merge=1,delta=2
   129                           	psect	text107,local,class=CODE,merge=1,delta=2
   130                           	psect	text108,local,class=CODE,merge=1,delta=2
   131                           	psect	text109,local,class=CODE,merge=1,delta=2
   132                           	psect	text110,local,class=CODE,merge=1,delta=2
   133                           	psect	text111,local,class=CODE,merge=1,delta=2
   134                           	psect	text112,local,class=CODE,merge=1,delta=2
   135                           	psect	text113,local,class=CODE,merge=1,delta=2
   136                           	psect	text114,local,class=CODE,merge=1,delta=2
   137                           	psect	text115,local,class=CODE,merge=1,delta=2
   138                           	psect	text116,local,class=CODE,merge=1,delta=2
   139                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   140                           	psect	text118,local,class=CODE,merge=1,inline,delta=2
   141                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   142                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   143                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   144                           	psect	text122,local,class=CODE,merge=1,inline,delta=2
   145                           	psect	text123,local,class=CODE,merge=1,inline,delta=2
   146                           	psect	text124,local,class=CODE,merge=1,delta=2
   147                           	psect	text125,local,class=CODE,merge=1,delta=2
   148                           	psect	text126,local,class=CODE,merge=1,delta=2
   149                           	psect	text127,local,class=CODE,merge=1,delta=2
   150                           	psect	text128,local,class=CODE,merge=1,delta=2
   151                           	psect	text129,local,class=CODE,merge=1,delta=2
   152                           	psect	text130,local,class=CODE,merge=1,delta=2
   153                           	psect	text131,local,class=CODE,merge=1,delta=2
   154                           	psect	text132,local,class=CODE,merge=1,delta=2
   155                           	psect	text133,local,class=CODE,merge=1,delta=2
   156                           	psect	text134,local,class=CODE,merge=1,delta=2
   157                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   158                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   159                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   160                           	psect	text138,local,class=CODE,merge=1,delta=2
   161                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   162                           	dabs	1,0x620,48
   163                           	dabs	1,0x5BC,52
   164                           	dabs	1,0x5A0,28
   165                           	dabs	1,0x520,80
   166                           	dabs	1,0x4A0,80
   167                           	dabs	1,0x420,80
   168                           	dabs	1,0x3A0,80
   169                           	dabs	1,0x320,80
   170                           	dabs	1,0x2C1,47
   171                           	dabs	1,0x238C,0,_CharacterArray
   172                           	dabs	1,0x21B1,0,_displayArray
   173                           	dabs	1,0x7E,2
   174  0000                     
   175                           ; Version 1.45
   176                           ; Generated 16/11/2017 GMT
   177                           ; 
   178                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   179                           ; All rights reserved.
   180                           ; 
   181                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   182                           ; 
   183                           ; Redistribution and use in source and binary forms, with or without modification, are
   184                           ; permitted provided that the following conditions are met:
   185                           ; 
   186                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   187                           ;        conditions and the following disclaimer.
   188                           ; 
   189                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   190                           ;        of conditions and the following disclaimer in the documentation and/or other
   191                           ;        materials provided with the distribution.
   192                           ; 
   193                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   194                           ;        software without specific prior written permission.
   195                           ; 
   196                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   197                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   198                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   199                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   200                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   201                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   202                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   203                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   204                           ; 
   205                           ; 
   206                           ; Code-generator required, PIC16F18875 Definitions
   207                           ; 
   208                           ; SFR Addresses
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001C                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  008C                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0093                     	;# 
   252  0094                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0097                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009A                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  010E                     	;# 
   266  010E                     	;# 
   267  010F                     	;# 
   268  0110                     	;# 
   269  0110                     	;# 
   270  0111                     	;# 
   271  0112                     	;# 
   272  0112                     	;# 
   273  0113                     	;# 
   274  0114                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0116                     	;# 
   279  0117                     	;# 
   280  0119                     	;# 
   281  0119                     	;# 
   282  0119                     	;# 
   283  011A                     	;# 
   284  011A                     	;# 
   285  011A                     	;# 
   286  011B                     	;# 
   287  011B                     	;# 
   288  011B                     	;# 
   289  011B                     	;# 
   290  011B                     	;# 
   291  011C                     	;# 
   292  011C                     	;# 
   293  011C                     	;# 
   294  011D                     	;# 
   295  011D                     	;# 
   296  011D                     	;# 
   297  011E                     	;# 
   298  011E                     	;# 
   299  011E                     	;# 
   300  011F                     	;# 
   301  011F                     	;# 
   302  011F                     	;# 
   303  011F                     	;# 
   304  011F                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  018E                     	;# 
   308  018F                     	;# 
   309  0190                     	;# 
   310  0191                     	;# 
   311  0192                     	;# 
   312  0196                     	;# 
   313  0197                     	;# 
   314  0198                     	;# 
   315  0199                     	;# 
   316  019A                     	;# 
   317  019B                     	;# 
   318  019C                     	;# 
   319  020C                     	;# 
   320  020C                     	;# 
   321  020D                     	;# 
   322  020E                     	;# 
   323  020F                     	;# 
   324  020F                     	;# 
   325  0210                     	;# 
   326  0210                     	;# 
   327  0211                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0214                     	;# 
   333  0215                     	;# 
   334  0215                     	;# 
   335  0216                     	;# 
   336  0216                     	;# 
   337  0217                     	;# 
   338  0217                     	;# 
   339  0218                     	;# 
   340  0218                     	;# 
   341  0219                     	;# 
   342  021A                     	;# 
   343  021B                     	;# 
   344  021B                     	;# 
   345  021C                     	;# 
   346  021C                     	;# 
   347  021D                     	;# 
   348  021D                     	;# 
   349  021E                     	;# 
   350  021F                     	;# 
   351  028C                     	;# 
   352  028C                     	;# 
   353  028D                     	;# 
   354  028D                     	;# 
   355  028E                     	;# 
   356  028F                     	;# 
   357  0290                     	;# 
   358  0290                     	;# 
   359  0291                     	;# 
   360  0292                     	;# 
   361  0292                     	;# 
   362  0293                     	;# 
   363  0293                     	;# 
   364  0294                     	;# 
   365  0295                     	;# 
   366  0296                     	;# 
   367  0296                     	;# 
   368  0297                     	;# 
   369  0298                     	;# 
   370  0298                     	;# 
   371  0299                     	;# 
   372  0299                     	;# 
   373  029A                     	;# 
   374  029B                     	;# 
   375  029C                     	;# 
   376  029C                     	;# 
   377  029D                     	;# 
   378  030C                     	;# 
   379  030C                     	;# 
   380  030D                     	;# 
   381  030E                     	;# 
   382  030F                     	;# 
   383  0310                     	;# 
   384  0310                     	;# 
   385  0311                     	;# 
   386  0312                     	;# 
   387  0313                     	;# 
   388  0314                     	;# 
   389  0314                     	;# 
   390  0315                     	;# 
   391  0316                     	;# 
   392  0317                     	;# 
   393  0318                     	;# 
   394  0318                     	;# 
   395  0319                     	;# 
   396  031A                     	;# 
   397  031B                     	;# 
   398  031C                     	;# 
   399  031C                     	;# 
   400  031D                     	;# 
   401  031E                     	;# 
   402  031F                     	;# 
   403  038C                     	;# 
   404  038D                     	;# 
   405  038E                     	;# 
   406  0390                     	;# 
   407  0391                     	;# 
   408  0392                     	;# 
   409  040C                     	;# 
   410  040D                     	;# 
   411  040E                     	;# 
   412  040F                     	;# 
   413  0410                     	;# 
   414  0411                     	;# 
   415  0416                     	;# 
   416  0416                     	;# 
   417  0417                     	;# 
   418  0418                     	;# 
   419  0418                     	;# 
   420  0419                     	;# 
   421  041A                     	;# 
   422  041A                     	;# 
   423  041B                     	;# 
   424  041C                     	;# 
   425  041C                     	;# 
   426  041D                     	;# 
   427  041E                     	;# 
   428  041F                     	;# 
   429  048C                     	;# 
   430  048C                     	;# 
   431  048D                     	;# 
   432  048E                     	;# 
   433  048F                     	;# 
   434  048F                     	;# 
   435  0490                     	;# 
   436  0491                     	;# 
   437  0492                     	;# 
   438  0492                     	;# 
   439  0493                     	;# 
   440  0494                     	;# 
   441  0495                     	;# 
   442  0495                     	;# 
   443  0496                     	;# 
   444  0497                     	;# 
   445  0498                     	;# 
   446  0499                     	;# 
   447  049A                     	;# 
   448  049B                     	;# 
   449  049C                     	;# 
   450  049D                     	;# 
   451  050C                     	;# 
   452  050C                     	;# 
   453  050D                     	;# 
   454  050E                     	;# 
   455  050F                     	;# 
   456  050F                     	;# 
   457  0510                     	;# 
   458  0511                     	;# 
   459  0512                     	;# 
   460  0512                     	;# 
   461  0513                     	;# 
   462  0514                     	;# 
   463  0515                     	;# 
   464  0515                     	;# 
   465  0516                     	;# 
   466  0517                     	;# 
   467  0518                     	;# 
   468  0519                     	;# 
   469  051A                     	;# 
   470  051B                     	;# 
   471  051C                     	;# 
   472  051D                     	;# 
   473  058C                     	;# 
   474  058C                     	;# 
   475  058D                     	;# 
   476  058E                     	;# 
   477  058F                     	;# 
   478  058F                     	;# 
   479  0590                     	;# 
   480  0591                     	;# 
   481  0592                     	;# 
   482  0593                     	;# 
   483  060C                     	;# 
   484  060D                     	;# 
   485  060E                     	;# 
   486  060F                     	;# 
   487  0610                     	;# 
   488  0611                     	;# 
   489  0612                     	;# 
   490  0613                     	;# 
   491  0614                     	;# 
   492  0616                     	;# 
   493  0617                     	;# 
   494  0618                     	;# 
   495  0619                     	;# 
   496  061A                     	;# 
   497  061B                     	;# 
   498  061C                     	;# 
   499  061D                     	;# 
   500  061E                     	;# 
   501  068C                     	;# 
   502  068D                     	;# 
   503  068E                     	;# 
   504  068F                     	;# 
   505  0690                     	;# 
   506  0691                     	;# 
   507  0692                     	;# 
   508  0693                     	;# 
   509  0694                     	;# 
   510  070C                     	;# 
   511  070D                     	;# 
   512  070E                     	;# 
   513  070F                     	;# 
   514  0710                     	;# 
   515  0711                     	;# 
   516  0712                     	;# 
   517  0713                     	;# 
   518  0714                     	;# 
   519  0716                     	;# 
   520  0717                     	;# 
   521  0718                     	;# 
   522  0719                     	;# 
   523  071A                     	;# 
   524  071B                     	;# 
   525  071C                     	;# 
   526  071D                     	;# 
   527  071E                     	;# 
   528  0796                     	;# 
   529  0797                     	;# 
   530  0798                     	;# 
   531  0799                     	;# 
   532  079A                     	;# 
   533  079B                     	;# 
   534  080C                     	;# 
   535  080D                     	;# 
   536  080E                     	;# 
   537  080F                     	;# 
   538  0810                     	;# 
   539  0811                     	;# 
   540  0812                     	;# 
   541  0813                     	;# 
   542  0814                     	;# 
   543  081A                     	;# 
   544  081B                     	;# 
   545  081C                     	;# 
   546  081D                     	;# 
   547  081E                     	;# 
   548  081F                     	;# 
   549  088C                     	;# 
   550  088D                     	;# 
   551  088E                     	;# 
   552  088F                     	;# 
   553  0890                     	;# 
   554  0891                     	;# 
   555  0892                     	;# 
   556  0893                     	;# 
   557  0895                     	;# 
   558  0896                     	;# 
   559  0897                     	;# 
   560  0898                     	;# 
   561  0899                     	;# 
   562  089A                     	;# 
   563  089B                     	;# 
   564  090C                     	;# 
   565  090E                     	;# 
   566  090F                     	;# 
   567  091F                     	;# 
   568  091F                     	;# 
   569  098F                     	;# 
   570  098F                     	;# 
   571  0990                     	;# 
   572  0991                     	;# 
   573  0992                     	;# 
   574  0993                     	;# 
   575  0994                     	;# 
   576  0995                     	;# 
   577  0996                     	;# 
   578  0997                     	;# 
   579  0E0F                     	;# 
   580  0E10                     	;# 
   581  0E11                     	;# 
   582  0E12                     	;# 
   583  0E13                     	;# 
   584  0E14                     	;# 
   585  0E15                     	;# 
   586  0E16                     	;# 
   587  0E17                     	;# 
   588  0E18                     	;# 
   589  0E19                     	;# 
   590  0E1A                     	;# 
   591  0E1B                     	;# 
   592  0E1C                     	;# 
   593  0E1D                     	;# 
   594  0E1E                     	;# 
   595  0E1F                     	;# 
   596  0E20                     	;# 
   597  0E21                     	;# 
   598  0E22                     	;# 
   599  0E23                     	;# 
   600  0E24                     	;# 
   601  0E25                     	;# 
   602  0E26                     	;# 
   603  0E27                     	;# 
   604  0E28                     	;# 
   605  0E29                     	;# 
   606  0E2A                     	;# 
   607  0E2B                     	;# 
   608  0E2C                     	;# 
   609  0E2D                     	;# 
   610  0E2E                     	;# 
   611  0E2F                     	;# 
   612  0E30                     	;# 
   613  0E31                     	;# 
   614  0E32                     	;# 
   615  0E33                     	;# 
   616  0E34                     	;# 
   617  0E35                     	;# 
   618  0E36                     	;# 
   619  0E37                     	;# 
   620  0E8F                     	;# 
   621  0E90                     	;# 
   622  0E91                     	;# 
   623  0E92                     	;# 
   624  0E93                     	;# 
   625  0E94                     	;# 
   626  0E95                     	;# 
   627  0E96                     	;# 
   628  0E97                     	;# 
   629  0E9C                     	;# 
   630  0E9D                     	;# 
   631  0E9E                     	;# 
   632  0EA1                     	;# 
   633  0EA2                     	;# 
   634  0EA3                     	;# 
   635  0EA4                     	;# 
   636  0EA5                     	;# 
   637  0EA9                     	;# 
   638  0EAA                     	;# 
   639  0EAB                     	;# 
   640  0EAC                     	;# 
   641  0EB1                     	;# 
   642  0EB2                     	;# 
   643  0EB3                     	;# 
   644  0EB8                     	;# 
   645  0EB9                     	;# 
   646  0EBA                     	;# 
   647  0EBB                     	;# 
   648  0EBC                     	;# 
   649  0EBD                     	;# 
   650  0EBE                     	;# 
   651  0EC3                     	;# 
   652  0EC5                     	;# 
   653  0EC6                     	;# 
   654  0EC7                     	;# 
   655  0EC8                     	;# 
   656  0EC9                     	;# 
   657  0ECA                     	;# 
   658  0ECB                     	;# 
   659  0ECC                     	;# 
   660  0F10                     	;# 
   661  0F11                     	;# 
   662  0F12                     	;# 
   663  0F13                     	;# 
   664  0F14                     	;# 
   665  0F15                     	;# 
   666  0F16                     	;# 
   667  0F17                     	;# 
   668  0F18                     	;# 
   669  0F19                     	;# 
   670  0F1A                     	;# 
   671  0F1B                     	;# 
   672  0F1C                     	;# 
   673  0F1D                     	;# 
   674  0F1E                     	;# 
   675  0F1F                     	;# 
   676  0F20                     	;# 
   677  0F21                     	;# 
   678  0F22                     	;# 
   679  0F23                     	;# 
   680  0F24                     	;# 
   681  0F25                     	;# 
   682  0F26                     	;# 
   683  0F27                     	;# 
   684  0F28                     	;# 
   685  0F29                     	;# 
   686  0F2A                     	;# 
   687  0F2B                     	;# 
   688  0F2C                     	;# 
   689  0F2D                     	;# 
   690  0F2E                     	;# 
   691  0F2F                     	;# 
   692  0F30                     	;# 
   693  0F31                     	;# 
   694  0F32                     	;# 
   695  0F38                     	;# 
   696  0F39                     	;# 
   697  0F3A                     	;# 
   698  0F3B                     	;# 
   699  0F3C                     	;# 
   700  0F3D                     	;# 
   701  0F3E                     	;# 
   702  0F3F                     	;# 
   703  0F40                     	;# 
   704  0F41                     	;# 
   705  0F43                     	;# 
   706  0F44                     	;# 
   707  0F45                     	;# 
   708  0F46                     	;# 
   709  0F47                     	;# 
   710  0F48                     	;# 
   711  0F49                     	;# 
   712  0F4A                     	;# 
   713  0F4B                     	;# 
   714  0F4C                     	;# 
   715  0F4E                     	;# 
   716  0F4F                     	;# 
   717  0F50                     	;# 
   718  0F51                     	;# 
   719  0F52                     	;# 
   720  0F53                     	;# 
   721  0F54                     	;# 
   722  0F55                     	;# 
   723  0F56                     	;# 
   724  0F57                     	;# 
   725  0F59                     	;# 
   726  0F5A                     	;# 
   727  0F5B                     	;# 
   728  0F5C                     	;# 
   729  0F5D                     	;# 
   730  0F61                     	;# 
   731  0F62                     	;# 
   732  0F64                     	;# 
   733  0F65                     	;# 
   734  0F66                     	;# 
   735  0F67                     	;# 
   736  0F68                     	;# 
   737  0F69                     	;# 
   738  0F6A                     	;# 
   739  0F6B                     	;# 
   740  0F6C                     	;# 
   741  0F6D                     	;# 
   742  0FE4                     	;# 
   743  0FE5                     	;# 
   744  0FE6                     	;# 
   745  0FE7                     	;# 
   746  0FE8                     	;# 
   747  0FE9                     	;# 
   748  0FEA                     	;# 
   749  0FEB                     	;# 
   750  0FED                     	;# 
   751  0FEE                     	;# 
   752  0FEF                     	;# 
   753  0000                     	;# 
   754  0001                     	;# 
   755  0002                     	;# 
   756  0003                     	;# 
   757  0004                     	;# 
   758  0005                     	;# 
   759  0006                     	;# 
   760  0007                     	;# 
   761  0008                     	;# 
   762  0009                     	;# 
   763  000A                     	;# 
   764  000B                     	;# 
   765  000C                     	;# 
   766  000D                     	;# 
   767  000E                     	;# 
   768  000F                     	;# 
   769  0010                     	;# 
   770  0011                     	;# 
   771  0012                     	;# 
   772  0013                     	;# 
   773  0014                     	;# 
   774  0015                     	;# 
   775  0016                     	;# 
   776  0017                     	;# 
   777  0018                     	;# 
   778  0019                     	;# 
   779  001A                     	;# 
   780  001C                     	;# 
   781  001C                     	;# 
   782  001D                     	;# 
   783  001D                     	;# 
   784  001E                     	;# 
   785  001F                     	;# 
   786  008C                     	;# 
   787  008C                     	;# 
   788  008D                     	;# 
   789  008E                     	;# 
   790  008E                     	;# 
   791  008F                     	;# 
   792  0090                     	;# 
   793  0090                     	;# 
   794  0091                     	;# 
   795  0093                     	;# 
   796  0094                     	;# 
   797  0095                     	;# 
   798  0096                     	;# 
   799  0097                     	;# 
   800  0098                     	;# 
   801  0099                     	;# 
   802  009A                     	;# 
   803  009B                     	;# 
   804  009C                     	;# 
   805  009D                     	;# 
   806  009E                     	;# 
   807  010C                     	;# 
   808  010D                     	;# 
   809  010E                     	;# 
   810  010E                     	;# 
   811  010F                     	;# 
   812  0110                     	;# 
   813  0110                     	;# 
   814  0111                     	;# 
   815  0112                     	;# 
   816  0112                     	;# 
   817  0113                     	;# 
   818  0114                     	;# 
   819  0114                     	;# 
   820  0115                     	;# 
   821  0116                     	;# 
   822  0116                     	;# 
   823  0117                     	;# 
   824  0119                     	;# 
   825  0119                     	;# 
   826  0119                     	;# 
   827  011A                     	;# 
   828  011A                     	;# 
   829  011A                     	;# 
   830  011B                     	;# 
   831  011B                     	;# 
   832  011B                     	;# 
   833  011B                     	;# 
   834  011B                     	;# 
   835  011C                     	;# 
   836  011C                     	;# 
   837  011C                     	;# 
   838  011D                     	;# 
   839  011D                     	;# 
   840  011D                     	;# 
   841  011E                     	;# 
   842  011E                     	;# 
   843  011E                     	;# 
   844  011F                     	;# 
   845  011F                     	;# 
   846  011F                     	;# 
   847  011F                     	;# 
   848  011F                     	;# 
   849  018C                     	;# 
   850  018D                     	;# 
   851  018E                     	;# 
   852  018F                     	;# 
   853  0190                     	;# 
   854  0191                     	;# 
   855  0192                     	;# 
   856  0196                     	;# 
   857  0197                     	;# 
   858  0198                     	;# 
   859  0199                     	;# 
   860  019A                     	;# 
   861  019B                     	;# 
   862  019C                     	;# 
   863  020C                     	;# 
   864  020C                     	;# 
   865  020D                     	;# 
   866  020E                     	;# 
   867  020F                     	;# 
   868  020F                     	;# 
   869  0210                     	;# 
   870  0210                     	;# 
   871  0211                     	;# 
   872  0211                     	;# 
   873  0212                     	;# 
   874  0212                     	;# 
   875  0213                     	;# 
   876  0214                     	;# 
   877  0215                     	;# 
   878  0215                     	;# 
   879  0216                     	;# 
   880  0216                     	;# 
   881  0217                     	;# 
   882  0217                     	;# 
   883  0218                     	;# 
   884  0218                     	;# 
   885  0219                     	;# 
   886  021A                     	;# 
   887  021B                     	;# 
   888  021B                     	;# 
   889  021C                     	;# 
   890  021C                     	;# 
   891  021D                     	;# 
   892  021D                     	;# 
   893  021E                     	;# 
   894  021F                     	;# 
   895  028C                     	;# 
   896  028C                     	;# 
   897  028D                     	;# 
   898  028D                     	;# 
   899  028E                     	;# 
   900  028F                     	;# 
   901  0290                     	;# 
   902  0290                     	;# 
   903  0291                     	;# 
   904  0292                     	;# 
   905  0292                     	;# 
   906  0293                     	;# 
   907  0293                     	;# 
   908  0294                     	;# 
   909  0295                     	;# 
   910  0296                     	;# 
   911  0296                     	;# 
   912  0297                     	;# 
   913  0298                     	;# 
   914  0298                     	;# 
   915  0299                     	;# 
   916  0299                     	;# 
   917  029A                     	;# 
   918  029B                     	;# 
   919  029C                     	;# 
   920  029C                     	;# 
   921  029D                     	;# 
   922  030C                     	;# 
   923  030C                     	;# 
   924  030D                     	;# 
   925  030E                     	;# 
   926  030F                     	;# 
   927  0310                     	;# 
   928  0310                     	;# 
   929  0311                     	;# 
   930  0312                     	;# 
   931  0313                     	;# 
   932  0314                     	;# 
   933  0314                     	;# 
   934  0315                     	;# 
   935  0316                     	;# 
   936  0317                     	;# 
   937  0318                     	;# 
   938  0318                     	;# 
   939  0319                     	;# 
   940  031A                     	;# 
   941  031B                     	;# 
   942  031C                     	;# 
   943  031C                     	;# 
   944  031D                     	;# 
   945  031E                     	;# 
   946  031F                     	;# 
   947  038C                     	;# 
   948  038D                     	;# 
   949  038E                     	;# 
   950  0390                     	;# 
   951  0391                     	;# 
   952  0392                     	;# 
   953  040C                     	;# 
   954  040D                     	;# 
   955  040E                     	;# 
   956  040F                     	;# 
   957  0410                     	;# 
   958  0411                     	;# 
   959  0416                     	;# 
   960  0416                     	;# 
   961  0417                     	;# 
   962  0418                     	;# 
   963  0418                     	;# 
   964  0419                     	;# 
   965  041A                     	;# 
   966  041A                     	;# 
   967  041B                     	;# 
   968  041C                     	;# 
   969  041C                     	;# 
   970  041D                     	;# 
   971  041E                     	;# 
   972  041F                     	;# 
   973  048C                     	;# 
   974  048C                     	;# 
   975  048D                     	;# 
   976  048E                     	;# 
   977  048F                     	;# 
   978  048F                     	;# 
   979  0490                     	;# 
   980  0491                     	;# 
   981  0492                     	;# 
   982  0492                     	;# 
   983  0493                     	;# 
   984  0494                     	;# 
   985  0495                     	;# 
   986  0495                     	;# 
   987  0496                     	;# 
   988  0497                     	;# 
   989  0498                     	;# 
   990  0499                     	;# 
   991  049A                     	;# 
   992  049B                     	;# 
   993  049C                     	;# 
   994  049D                     	;# 
   995  050C                     	;# 
   996  050C                     	;# 
   997  050D                     	;# 
   998  050E                     	;# 
   999  050F                     	;# 
  1000  050F                     	;# 
  1001  0510                     	;# 
  1002  0511                     	;# 
  1003  0512                     	;# 
  1004  0512                     	;# 
  1005  0513                     	;# 
  1006  0514                     	;# 
  1007  0515                     	;# 
  1008  0515                     	;# 
  1009  0516                     	;# 
  1010  0517                     	;# 
  1011  0518                     	;# 
  1012  0519                     	;# 
  1013  051A                     	;# 
  1014  051B                     	;# 
  1015  051C                     	;# 
  1016  051D                     	;# 
  1017  058C                     	;# 
  1018  058C                     	;# 
  1019  058D                     	;# 
  1020  058E                     	;# 
  1021  058F                     	;# 
  1022  058F                     	;# 
  1023  0590                     	;# 
  1024  0591                     	;# 
  1025  0592                     	;# 
  1026  0593                     	;# 
  1027  060C                     	;# 
  1028  060D                     	;# 
  1029  060E                     	;# 
  1030  060F                     	;# 
  1031  0610                     	;# 
  1032  0611                     	;# 
  1033  0612                     	;# 
  1034  0613                     	;# 
  1035  0614                     	;# 
  1036  0616                     	;# 
  1037  0617                     	;# 
  1038  0618                     	;# 
  1039  0619                     	;# 
  1040  061A                     	;# 
  1041  061B                     	;# 
  1042  061C                     	;# 
  1043  061D                     	;# 
  1044  061E                     	;# 
  1045  068C                     	;# 
  1046  068D                     	;# 
  1047  068E                     	;# 
  1048  068F                     	;# 
  1049  0690                     	;# 
  1050  0691                     	;# 
  1051  0692                     	;# 
  1052  0693                     	;# 
  1053  0694                     	;# 
  1054  070C                     	;# 
  1055  070D                     	;# 
  1056  070E                     	;# 
  1057  070F                     	;# 
  1058  0710                     	;# 
  1059  0711                     	;# 
  1060  0712                     	;# 
  1061  0713                     	;# 
  1062  0714                     	;# 
  1063  0716                     	;# 
  1064  0717                     	;# 
  1065  0718                     	;# 
  1066  0719                     	;# 
  1067  071A                     	;# 
  1068  071B                     	;# 
  1069  071C                     	;# 
  1070  071D                     	;# 
  1071  071E                     	;# 
  1072  0796                     	;# 
  1073  0797                     	;# 
  1074  0798                     	;# 
  1075  0799                     	;# 
  1076  079A                     	;# 
  1077  079B                     	;# 
  1078  080C                     	;# 
  1079  080D                     	;# 
  1080  080E                     	;# 
  1081  080F                     	;# 
  1082  0810                     	;# 
  1083  0811                     	;# 
  1084  0812                     	;# 
  1085  0813                     	;# 
  1086  0814                     	;# 
  1087  081A                     	;# 
  1088  081B                     	;# 
  1089  081C                     	;# 
  1090  081D                     	;# 
  1091  081E                     	;# 
  1092  081F                     	;# 
  1093  088C                     	;# 
  1094  088D                     	;# 
  1095  088E                     	;# 
  1096  088F                     	;# 
  1097  0890                     	;# 
  1098  0891                     	;# 
  1099  0892                     	;# 
  1100  0893                     	;# 
  1101  0895                     	;# 
  1102  0896                     	;# 
  1103  0897                     	;# 
  1104  0898                     	;# 
  1105  0899                     	;# 
  1106  089A                     	;# 
  1107  089B                     	;# 
  1108  090C                     	;# 
  1109  090E                     	;# 
  1110  090F                     	;# 
  1111  091F                     	;# 
  1112  091F                     	;# 
  1113  098F                     	;# 
  1114  098F                     	;# 
  1115  0990                     	;# 
  1116  0991                     	;# 
  1117  0992                     	;# 
  1118  0993                     	;# 
  1119  0994                     	;# 
  1120  0995                     	;# 
  1121  0996                     	;# 
  1122  0997                     	;# 
  1123  0E0F                     	;# 
  1124  0E10                     	;# 
  1125  0E11                     	;# 
  1126  0E12                     	;# 
  1127  0E13                     	;# 
  1128  0E14                     	;# 
  1129  0E15                     	;# 
  1130  0E16                     	;# 
  1131  0E17                     	;# 
  1132  0E18                     	;# 
  1133  0E19                     	;# 
  1134  0E1A                     	;# 
  1135  0E1B                     	;# 
  1136  0E1C                     	;# 
  1137  0E1D                     	;# 
  1138  0E1E                     	;# 
  1139  0E1F                     	;# 
  1140  0E20                     	;# 
  1141  0E21                     	;# 
  1142  0E22                     	;# 
  1143  0E23                     	;# 
  1144  0E24                     	;# 
  1145  0E25                     	;# 
  1146  0E26                     	;# 
  1147  0E27                     	;# 
  1148  0E28                     	;# 
  1149  0E29                     	;# 
  1150  0E2A                     	;# 
  1151  0E2B                     	;# 
  1152  0E2C                     	;# 
  1153  0E2D                     	;# 
  1154  0E2E                     	;# 
  1155  0E2F                     	;# 
  1156  0E30                     	;# 
  1157  0E31                     	;# 
  1158  0E32                     	;# 
  1159  0E33                     	;# 
  1160  0E34                     	;# 
  1161  0E35                     	;# 
  1162  0E36                     	;# 
  1163  0E37                     	;# 
  1164  0E8F                     	;# 
  1165  0E90                     	;# 
  1166  0E91                     	;# 
  1167  0E92                     	;# 
  1168  0E93                     	;# 
  1169  0E94                     	;# 
  1170  0E95                     	;# 
  1171  0E96                     	;# 
  1172  0E97                     	;# 
  1173  0E9C                     	;# 
  1174  0E9D                     	;# 
  1175  0E9E                     	;# 
  1176  0EA1                     	;# 
  1177  0EA2                     	;# 
  1178  0EA3                     	;# 
  1179  0EA4                     	;# 
  1180  0EA5                     	;# 
  1181  0EA9                     	;# 
  1182  0EAA                     	;# 
  1183  0EAB                     	;# 
  1184  0EAC                     	;# 
  1185  0EB1                     	;# 
  1186  0EB2                     	;# 
  1187  0EB3                     	;# 
  1188  0EB8                     	;# 
  1189  0EB9                     	;# 
  1190  0EBA                     	;# 
  1191  0EBB                     	;# 
  1192  0EBC                     	;# 
  1193  0EBD                     	;# 
  1194  0EBE                     	;# 
  1195  0EC3                     	;# 
  1196  0EC5                     	;# 
  1197  0EC6                     	;# 
  1198  0EC7                     	;# 
  1199  0EC8                     	;# 
  1200  0EC9                     	;# 
  1201  0ECA                     	;# 
  1202  0ECB                     	;# 
  1203  0ECC                     	;# 
  1204  0F10                     	;# 
  1205  0F11                     	;# 
  1206  0F12                     	;# 
  1207  0F13                     	;# 
  1208  0F14                     	;# 
  1209  0F15                     	;# 
  1210  0F16                     	;# 
  1211  0F17                     	;# 
  1212  0F18                     	;# 
  1213  0F19                     	;# 
  1214  0F1A                     	;# 
  1215  0F1B                     	;# 
  1216  0F1C                     	;# 
  1217  0F1D                     	;# 
  1218  0F1E                     	;# 
  1219  0F1F                     	;# 
  1220  0F20                     	;# 
  1221  0F21                     	;# 
  1222  0F22                     	;# 
  1223  0F23                     	;# 
  1224  0F24                     	;# 
  1225  0F25                     	;# 
  1226  0F26                     	;# 
  1227  0F27                     	;# 
  1228  0F28                     	;# 
  1229  0F29                     	;# 
  1230  0F2A                     	;# 
  1231  0F2B                     	;# 
  1232  0F2C                     	;# 
  1233  0F2D                     	;# 
  1234  0F2E                     	;# 
  1235  0F2F                     	;# 
  1236  0F30                     	;# 
  1237  0F31                     	;# 
  1238  0F32                     	;# 
  1239  0F38                     	;# 
  1240  0F39                     	;# 
  1241  0F3A                     	;# 
  1242  0F3B                     	;# 
  1243  0F3C                     	;# 
  1244  0F3D                     	;# 
  1245  0F3E                     	;# 
  1246  0F3F                     	;# 
  1247  0F40                     	;# 
  1248  0F41                     	;# 
  1249  0F43                     	;# 
  1250  0F44                     	;# 
  1251  0F45                     	;# 
  1252  0F46                     	;# 
  1253  0F47                     	;# 
  1254  0F48                     	;# 
  1255  0F49                     	;# 
  1256  0F4A                     	;# 
  1257  0F4B                     	;# 
  1258  0F4C                     	;# 
  1259  0F4E                     	;# 
  1260  0F4F                     	;# 
  1261  0F50                     	;# 
  1262  0F51                     	;# 
  1263  0F52                     	;# 
  1264  0F53                     	;# 
  1265  0F54                     	;# 
  1266  0F55                     	;# 
  1267  0F56                     	;# 
  1268  0F57                     	;# 
  1269  0F59                     	;# 
  1270  0F5A                     	;# 
  1271  0F5B                     	;# 
  1272  0F5C                     	;# 
  1273  0F5D                     	;# 
  1274  0F61                     	;# 
  1275  0F62                     	;# 
  1276  0F64                     	;# 
  1277  0F65                     	;# 
  1278  0F66                     	;# 
  1279  0F67                     	;# 
  1280  0F68                     	;# 
  1281  0F69                     	;# 
  1282  0F6A                     	;# 
  1283  0F6B                     	;# 
  1284  0F6C                     	;# 
  1285  0F6D                     	;# 
  1286  0FE4                     	;# 
  1287  0FE5                     	;# 
  1288  0FE6                     	;# 
  1289  0FE7                     	;# 
  1290  0FE8                     	;# 
  1291  0FE9                     	;# 
  1292  0FEA                     	;# 
  1293  0FEB                     	;# 
  1294  0FED                     	;# 
  1295  0FEE                     	;# 
  1296  0FEF                     	;# 
  1297  0000                     	;# 
  1298  0001                     	;# 
  1299  0002                     	;# 
  1300  0003                     	;# 
  1301  0004                     	;# 
  1302  0005                     	;# 
  1303  0006                     	;# 
  1304  0007                     	;# 
  1305  0008                     	;# 
  1306  0009                     	;# 
  1307  000A                     	;# 
  1308  000B                     	;# 
  1309  000C                     	;# 
  1310  000D                     	;# 
  1311  000E                     	;# 
  1312  000F                     	;# 
  1313  0010                     	;# 
  1314  0011                     	;# 
  1315  0012                     	;# 
  1316  0013                     	;# 
  1317  0014                     	;# 
  1318  0015                     	;# 
  1319  0016                     	;# 
  1320  0017                     	;# 
  1321  0018                     	;# 
  1322  0019                     	;# 
  1323  001A                     	;# 
  1324  001C                     	;# 
  1325  001C                     	;# 
  1326  001D                     	;# 
  1327  001D                     	;# 
  1328  001E                     	;# 
  1329  001F                     	;# 
  1330  008C                     	;# 
  1331  008C                     	;# 
  1332  008D                     	;# 
  1333  008E                     	;# 
  1334  008E                     	;# 
  1335  008F                     	;# 
  1336  0090                     	;# 
  1337  0090                     	;# 
  1338  0091                     	;# 
  1339  0093                     	;# 
  1340  0094                     	;# 
  1341  0095                     	;# 
  1342  0096                     	;# 
  1343  0097                     	;# 
  1344  0098                     	;# 
  1345  0099                     	;# 
  1346  009A                     	;# 
  1347  009B                     	;# 
  1348  009C                     	;# 
  1349  009D                     	;# 
  1350  009E                     	;# 
  1351  010C                     	;# 
  1352  010D                     	;# 
  1353  010E                     	;# 
  1354  010E                     	;# 
  1355  010F                     	;# 
  1356  0110                     	;# 
  1357  0110                     	;# 
  1358  0111                     	;# 
  1359  0112                     	;# 
  1360  0112                     	;# 
  1361  0113                     	;# 
  1362  0114                     	;# 
  1363  0114                     	;# 
  1364  0115                     	;# 
  1365  0116                     	;# 
  1366  0116                     	;# 
  1367  0117                     	;# 
  1368  0119                     	;# 
  1369  0119                     	;# 
  1370  0119                     	;# 
  1371  011A                     	;# 
  1372  011A                     	;# 
  1373  011A                     	;# 
  1374  011B                     	;# 
  1375  011B                     	;# 
  1376  011B                     	;# 
  1377  011B                     	;# 
  1378  011B                     	;# 
  1379  011C                     	;# 
  1380  011C                     	;# 
  1381  011C                     	;# 
  1382  011D                     	;# 
  1383  011D                     	;# 
  1384  011D                     	;# 
  1385  011E                     	;# 
  1386  011E                     	;# 
  1387  011E                     	;# 
  1388  011F                     	;# 
  1389  011F                     	;# 
  1390  011F                     	;# 
  1391  011F                     	;# 
  1392  011F                     	;# 
  1393  018C                     	;# 
  1394  018D                     	;# 
  1395  018E                     	;# 
  1396  018F                     	;# 
  1397  0190                     	;# 
  1398  0191                     	;# 
  1399  0192                     	;# 
  1400  0196                     	;# 
  1401  0197                     	;# 
  1402  0198                     	;# 
  1403  0199                     	;# 
  1404  019A                     	;# 
  1405  019B                     	;# 
  1406  019C                     	;# 
  1407  020C                     	;# 
  1408  020C                     	;# 
  1409  020D                     	;# 
  1410  020E                     	;# 
  1411  020F                     	;# 
  1412  020F                     	;# 
  1413  0210                     	;# 
  1414  0210                     	;# 
  1415  0211                     	;# 
  1416  0211                     	;# 
  1417  0212                     	;# 
  1418  0212                     	;# 
  1419  0213                     	;# 
  1420  0214                     	;# 
  1421  0215                     	;# 
  1422  0215                     	;# 
  1423  0216                     	;# 
  1424  0216                     	;# 
  1425  0217                     	;# 
  1426  0217                     	;# 
  1427  0218                     	;# 
  1428  0218                     	;# 
  1429  0219                     	;# 
  1430  021A                     	;# 
  1431  021B                     	;# 
  1432  021B                     	;# 
  1433  021C                     	;# 
  1434  021C                     	;# 
  1435  021D                     	;# 
  1436  021D                     	;# 
  1437  021E                     	;# 
  1438  021F                     	;# 
  1439  028C                     	;# 
  1440  028C                     	;# 
  1441  028D                     	;# 
  1442  028D                     	;# 
  1443  028E                     	;# 
  1444  028F                     	;# 
  1445  0290                     	;# 
  1446  0290                     	;# 
  1447  0291                     	;# 
  1448  0292                     	;# 
  1449  0292                     	;# 
  1450  0293                     	;# 
  1451  0293                     	;# 
  1452  0294                     	;# 
  1453  0295                     	;# 
  1454  0296                     	;# 
  1455  0296                     	;# 
  1456  0297                     	;# 
  1457  0298                     	;# 
  1458  0298                     	;# 
  1459  0299                     	;# 
  1460  0299                     	;# 
  1461  029A                     	;# 
  1462  029B                     	;# 
  1463  029C                     	;# 
  1464  029C                     	;# 
  1465  029D                     	;# 
  1466  030C                     	;# 
  1467  030C                     	;# 
  1468  030D                     	;# 
  1469  030E                     	;# 
  1470  030F                     	;# 
  1471  0310                     	;# 
  1472  0310                     	;# 
  1473  0311                     	;# 
  1474  0312                     	;# 
  1475  0313                     	;# 
  1476  0314                     	;# 
  1477  0314                     	;# 
  1478  0315                     	;# 
  1479  0316                     	;# 
  1480  0317                     	;# 
  1481  0318                     	;# 
  1482  0318                     	;# 
  1483  0319                     	;# 
  1484  031A                     	;# 
  1485  031B                     	;# 
  1486  031C                     	;# 
  1487  031C                     	;# 
  1488  031D                     	;# 
  1489  031E                     	;# 
  1490  031F                     	;# 
  1491  038C                     	;# 
  1492  038D                     	;# 
  1493  038E                     	;# 
  1494  0390                     	;# 
  1495  0391                     	;# 
  1496  0392                     	;# 
  1497  040C                     	;# 
  1498  040D                     	;# 
  1499  040E                     	;# 
  1500  040F                     	;# 
  1501  0410                     	;# 
  1502  0411                     	;# 
  1503  0416                     	;# 
  1504  0416                     	;# 
  1505  0417                     	;# 
  1506  0418                     	;# 
  1507  0418                     	;# 
  1508  0419                     	;# 
  1509  041A                     	;# 
  1510  041A                     	;# 
  1511  041B                     	;# 
  1512  041C                     	;# 
  1513  041C                     	;# 
  1514  041D                     	;# 
  1515  041E                     	;# 
  1516  041F                     	;# 
  1517  048C                     	;# 
  1518  048C                     	;# 
  1519  048D                     	;# 
  1520  048E                     	;# 
  1521  048F                     	;# 
  1522  048F                     	;# 
  1523  0490                     	;# 
  1524  0491                     	;# 
  1525  0492                     	;# 
  1526  0492                     	;# 
  1527  0493                     	;# 
  1528  0494                     	;# 
  1529  0495                     	;# 
  1530  0495                     	;# 
  1531  0496                     	;# 
  1532  0497                     	;# 
  1533  0498                     	;# 
  1534  0499                     	;# 
  1535  049A                     	;# 
  1536  049B                     	;# 
  1537  049C                     	;# 
  1538  049D                     	;# 
  1539  050C                     	;# 
  1540  050C                     	;# 
  1541  050D                     	;# 
  1542  050E                     	;# 
  1543  050F                     	;# 
  1544  050F                     	;# 
  1545  0510                     	;# 
  1546  0511                     	;# 
  1547  0512                     	;# 
  1548  0512                     	;# 
  1549  0513                     	;# 
  1550  0514                     	;# 
  1551  0515                     	;# 
  1552  0515                     	;# 
  1553  0516                     	;# 
  1554  0517                     	;# 
  1555  0518                     	;# 
  1556  0519                     	;# 
  1557  051A                     	;# 
  1558  051B                     	;# 
  1559  051C                     	;# 
  1560  051D                     	;# 
  1561  058C                     	;# 
  1562  058C                     	;# 
  1563  058D                     	;# 
  1564  058E                     	;# 
  1565  058F                     	;# 
  1566  058F                     	;# 
  1567  0590                     	;# 
  1568  0591                     	;# 
  1569  0592                     	;# 
  1570  0593                     	;# 
  1571  060C                     	;# 
  1572  060D                     	;# 
  1573  060E                     	;# 
  1574  060F                     	;# 
  1575  0610                     	;# 
  1576  0611                     	;# 
  1577  0612                     	;# 
  1578  0613                     	;# 
  1579  0614                     	;# 
  1580  0616                     	;# 
  1581  0617                     	;# 
  1582  0618                     	;# 
  1583  0619                     	;# 
  1584  061A                     	;# 
  1585  061B                     	;# 
  1586  061C                     	;# 
  1587  061D                     	;# 
  1588  061E                     	;# 
  1589  068C                     	;# 
  1590  068D                     	;# 
  1591  068E                     	;# 
  1592  068F                     	;# 
  1593  0690                     	;# 
  1594  0691                     	;# 
  1595  0692                     	;# 
  1596  0693                     	;# 
  1597  0694                     	;# 
  1598  070C                     	;# 
  1599  070D                     	;# 
  1600  070E                     	;# 
  1601  070F                     	;# 
  1602  0710                     	;# 
  1603  0711                     	;# 
  1604  0712                     	;# 
  1605  0713                     	;# 
  1606  0714                     	;# 
  1607  0716                     	;# 
  1608  0717                     	;# 
  1609  0718                     	;# 
  1610  0719                     	;# 
  1611  071A                     	;# 
  1612  071B                     	;# 
  1613  071C                     	;# 
  1614  071D                     	;# 
  1615  071E                     	;# 
  1616  0796                     	;# 
  1617  0797                     	;# 
  1618  0798                     	;# 
  1619  0799                     	;# 
  1620  079A                     	;# 
  1621  079B                     	;# 
  1622  080C                     	;# 
  1623  080D                     	;# 
  1624  080E                     	;# 
  1625  080F                     	;# 
  1626  0810                     	;# 
  1627  0811                     	;# 
  1628  0812                     	;# 
  1629  0813                     	;# 
  1630  0814                     	;# 
  1631  081A                     	;# 
  1632  081B                     	;# 
  1633  081C                     	;# 
  1634  081D                     	;# 
  1635  081E                     	;# 
  1636  081F                     	;# 
  1637  088C                     	;# 
  1638  088D                     	;# 
  1639  088E                     	;# 
  1640  088F                     	;# 
  1641  0890                     	;# 
  1642  0891                     	;# 
  1643  0892                     	;# 
  1644  0893                     	;# 
  1645  0895                     	;# 
  1646  0896                     	;# 
  1647  0897                     	;# 
  1648  0898                     	;# 
  1649  0899                     	;# 
  1650  089A                     	;# 
  1651  089B                     	;# 
  1652  090C                     	;# 
  1653  090E                     	;# 
  1654  090F                     	;# 
  1655  091F                     	;# 
  1656  091F                     	;# 
  1657  098F                     	;# 
  1658  098F                     	;# 
  1659  0990                     	;# 
  1660  0991                     	;# 
  1661  0992                     	;# 
  1662  0993                     	;# 
  1663  0994                     	;# 
  1664  0995                     	;# 
  1665  0996                     	;# 
  1666  0997                     	;# 
  1667  0E0F                     	;# 
  1668  0E10                     	;# 
  1669  0E11                     	;# 
  1670  0E12                     	;# 
  1671  0E13                     	;# 
  1672  0E14                     	;# 
  1673  0E15                     	;# 
  1674  0E16                     	;# 
  1675  0E17                     	;# 
  1676  0E18                     	;# 
  1677  0E19                     	;# 
  1678  0E1A                     	;# 
  1679  0E1B                     	;# 
  1680  0E1C                     	;# 
  1681  0E1D                     	;# 
  1682  0E1E                     	;# 
  1683  0E1F                     	;# 
  1684  0E20                     	;# 
  1685  0E21                     	;# 
  1686  0E22                     	;# 
  1687  0E23                     	;# 
  1688  0E24                     	;# 
  1689  0E25                     	;# 
  1690  0E26                     	;# 
  1691  0E27                     	;# 
  1692  0E28                     	;# 
  1693  0E29                     	;# 
  1694  0E2A                     	;# 
  1695  0E2B                     	;# 
  1696  0E2C                     	;# 
  1697  0E2D                     	;# 
  1698  0E2E                     	;# 
  1699  0E2F                     	;# 
  1700  0E30                     	;# 
  1701  0E31                     	;# 
  1702  0E32                     	;# 
  1703  0E33                     	;# 
  1704  0E34                     	;# 
  1705  0E35                     	;# 
  1706  0E36                     	;# 
  1707  0E37                     	;# 
  1708  0E8F                     	;# 
  1709  0E90                     	;# 
  1710  0E91                     	;# 
  1711  0E92                     	;# 
  1712  0E93                     	;# 
  1713  0E94                     	;# 
  1714  0E95                     	;# 
  1715  0E96                     	;# 
  1716  0E97                     	;# 
  1717  0E9C                     	;# 
  1718  0E9D                     	;# 
  1719  0E9E                     	;# 
  1720  0EA1                     	;# 
  1721  0EA2                     	;# 
  1722  0EA3                     	;# 
  1723  0EA4                     	;# 
  1724  0EA5                     	;# 
  1725  0EA9                     	;# 
  1726  0EAA                     	;# 
  1727  0EAB                     	;# 
  1728  0EAC                     	;# 
  1729  0EB1                     	;# 
  1730  0EB2                     	;# 
  1731  0EB3                     	;# 
  1732  0EB8                     	;# 
  1733  0EB9                     	;# 
  1734  0EBA                     	;# 
  1735  0EBB                     	;# 
  1736  0EBC                     	;# 
  1737  0EBD                     	;# 
  1738  0EBE                     	;# 
  1739  0EC3                     	;# 
  1740  0EC5                     	;# 
  1741  0EC6                     	;# 
  1742  0EC7                     	;# 
  1743  0EC8                     	;# 
  1744  0EC9                     	;# 
  1745  0ECA                     	;# 
  1746  0ECB                     	;# 
  1747  0ECC                     	;# 
  1748  0F10                     	;# 
  1749  0F11                     	;# 
  1750  0F12                     	;# 
  1751  0F13                     	;# 
  1752  0F14                     	;# 
  1753  0F15                     	;# 
  1754  0F16                     	;# 
  1755  0F17                     	;# 
  1756  0F18                     	;# 
  1757  0F19                     	;# 
  1758  0F1A                     	;# 
  1759  0F1B                     	;# 
  1760  0F1C                     	;# 
  1761  0F1D                     	;# 
  1762  0F1E                     	;# 
  1763  0F1F                     	;# 
  1764  0F20                     	;# 
  1765  0F21                     	;# 
  1766  0F22                     	;# 
  1767  0F23                     	;# 
  1768  0F24                     	;# 
  1769  0F25                     	;# 
  1770  0F26                     	;# 
  1771  0F27                     	;# 
  1772  0F28                     	;# 
  1773  0F29                     	;# 
  1774  0F2A                     	;# 
  1775  0F2B                     	;# 
  1776  0F2C                     	;# 
  1777  0F2D                     	;# 
  1778  0F2E                     	;# 
  1779  0F2F                     	;# 
  1780  0F30                     	;# 
  1781  0F31                     	;# 
  1782  0F32                     	;# 
  1783  0F38                     	;# 
  1784  0F39                     	;# 
  1785  0F3A                     	;# 
  1786  0F3B                     	;# 
  1787  0F3C                     	;# 
  1788  0F3D                     	;# 
  1789  0F3E                     	;# 
  1790  0F3F                     	;# 
  1791  0F40                     	;# 
  1792  0F41                     	;# 
  1793  0F43                     	;# 
  1794  0F44                     	;# 
  1795  0F45                     	;# 
  1796  0F46                     	;# 
  1797  0F47                     	;# 
  1798  0F48                     	;# 
  1799  0F49                     	;# 
  1800  0F4A                     	;# 
  1801  0F4B                     	;# 
  1802  0F4C                     	;# 
  1803  0F4E                     	;# 
  1804  0F4F                     	;# 
  1805  0F50                     	;# 
  1806  0F51                     	;# 
  1807  0F52                     	;# 
  1808  0F53                     	;# 
  1809  0F54                     	;# 
  1810  0F55                     	;# 
  1811  0F56                     	;# 
  1812  0F57                     	;# 
  1813  0F59                     	;# 
  1814  0F5A                     	;# 
  1815  0F5B                     	;# 
  1816  0F5C                     	;# 
  1817  0F5D                     	;# 
  1818  0F61                     	;# 
  1819  0F62                     	;# 
  1820  0F64                     	;# 
  1821  0F65                     	;# 
  1822  0F66                     	;# 
  1823  0F67                     	;# 
  1824  0F68                     	;# 
  1825  0F69                     	;# 
  1826  0F6A                     	;# 
  1827  0F6B                     	;# 
  1828  0F6C                     	;# 
  1829  0F6D                     	;# 
  1830  0FE4                     	;# 
  1831  0FE5                     	;# 
  1832  0FE6                     	;# 
  1833  0FE7                     	;# 
  1834  0FE8                     	;# 
  1835  0FE9                     	;# 
  1836  0FEA                     	;# 
  1837  0FEB                     	;# 
  1838  0FED                     	;# 
  1839  0FEE                     	;# 
  1840  0FEF                     	;# 
  1841  0000                     	;# 
  1842  0001                     	;# 
  1843  0002                     	;# 
  1844  0003                     	;# 
  1845  0004                     	;# 
  1846  0005                     	;# 
  1847  0006                     	;# 
  1848  0007                     	;# 
  1849  0008                     	;# 
  1850  0009                     	;# 
  1851  000A                     	;# 
  1852  000B                     	;# 
  1853  000C                     	;# 
  1854  000D                     	;# 
  1855  000E                     	;# 
  1856  000F                     	;# 
  1857  0010                     	;# 
  1858  0011                     	;# 
  1859  0012                     	;# 
  1860  0013                     	;# 
  1861  0014                     	;# 
  1862  0015                     	;# 
  1863  0016                     	;# 
  1864  0017                     	;# 
  1865  0018                     	;# 
  1866  0019                     	;# 
  1867  001A                     	;# 
  1868  001C                     	;# 
  1869  001C                     	;# 
  1870  001D                     	;# 
  1871  001D                     	;# 
  1872  001E                     	;# 
  1873  001F                     	;# 
  1874  008C                     	;# 
  1875  008C                     	;# 
  1876  008D                     	;# 
  1877  008E                     	;# 
  1878  008E                     	;# 
  1879  008F                     	;# 
  1880  0090                     	;# 
  1881  0090                     	;# 
  1882  0091                     	;# 
  1883  0093                     	;# 
  1884  0094                     	;# 
  1885  0095                     	;# 
  1886  0096                     	;# 
  1887  0097                     	;# 
  1888  0098                     	;# 
  1889  0099                     	;# 
  1890  009A                     	;# 
  1891  009B                     	;# 
  1892  009C                     	;# 
  1893  009D                     	;# 
  1894  009E                     	;# 
  1895  010C                     	;# 
  1896  010D                     	;# 
  1897  010E                     	;# 
  1898  010E                     	;# 
  1899  010F                     	;# 
  1900  0110                     	;# 
  1901  0110                     	;# 
  1902  0111                     	;# 
  1903  0112                     	;# 
  1904  0112                     	;# 
  1905  0113                     	;# 
  1906  0114                     	;# 
  1907  0114                     	;# 
  1908  0115                     	;# 
  1909  0116                     	;# 
  1910  0116                     	;# 
  1911  0117                     	;# 
  1912  0119                     	;# 
  1913  0119                     	;# 
  1914  0119                     	;# 
  1915  011A                     	;# 
  1916  011A                     	;# 
  1917  011A                     	;# 
  1918  011B                     	;# 
  1919  011B                     	;# 
  1920  011B                     	;# 
  1921  011B                     	;# 
  1922  011B                     	;# 
  1923  011C                     	;# 
  1924  011C                     	;# 
  1925  011C                     	;# 
  1926  011D                     	;# 
  1927  011D                     	;# 
  1928  011D                     	;# 
  1929  011E                     	;# 
  1930  011E                     	;# 
  1931  011E                     	;# 
  1932  011F                     	;# 
  1933  011F                     	;# 
  1934  011F                     	;# 
  1935  011F                     	;# 
  1936  011F                     	;# 
  1937  018C                     	;# 
  1938  018D                     	;# 
  1939  018E                     	;# 
  1940  018F                     	;# 
  1941  0190                     	;# 
  1942  0191                     	;# 
  1943  0192                     	;# 
  1944  0196                     	;# 
  1945  0197                     	;# 
  1946  0198                     	;# 
  1947  0199                     	;# 
  1948  019A                     	;# 
  1949  019B                     	;# 
  1950  019C                     	;# 
  1951  020C                     	;# 
  1952  020C                     	;# 
  1953  020D                     	;# 
  1954  020E                     	;# 
  1955  020F                     	;# 
  1956  020F                     	;# 
  1957  0210                     	;# 
  1958  0210                     	;# 
  1959  0211                     	;# 
  1960  0211                     	;# 
  1961  0212                     	;# 
  1962  0212                     	;# 
  1963  0213                     	;# 
  1964  0214                     	;# 
  1965  0215                     	;# 
  1966  0215                     	;# 
  1967  0216                     	;# 
  1968  0216                     	;# 
  1969  0217                     	;# 
  1970  0217                     	;# 
  1971  0218                     	;# 
  1972  0218                     	;# 
  1973  0219                     	;# 
  1974  021A                     	;# 
  1975  021B                     	;# 
  1976  021B                     	;# 
  1977  021C                     	;# 
  1978  021C                     	;# 
  1979  021D                     	;# 
  1980  021D                     	;# 
  1981  021E                     	;# 
  1982  021F                     	;# 
  1983  028C                     	;# 
  1984  028C                     	;# 
  1985  028D                     	;# 
  1986  028D                     	;# 
  1987  028E                     	;# 
  1988  028F                     	;# 
  1989  0290                     	;# 
  1990  0290                     	;# 
  1991  0291                     	;# 
  1992  0292                     	;# 
  1993  0292                     	;# 
  1994  0293                     	;# 
  1995  0293                     	;# 
  1996  0294                     	;# 
  1997  0295                     	;# 
  1998  0296                     	;# 
  1999  0296                     	;# 
  2000  0297                     	;# 
  2001  0298                     	;# 
  2002  0298                     	;# 
  2003  0299                     	;# 
  2004  0299                     	;# 
  2005  029A                     	;# 
  2006  029B                     	;# 
  2007  029C                     	;# 
  2008  029C                     	;# 
  2009  029D                     	;# 
  2010  030C                     	;# 
  2011  030C                     	;# 
  2012  030D                     	;# 
  2013  030E                     	;# 
  2014  030F                     	;# 
  2015  0310                     	;# 
  2016  0310                     	;# 
  2017  0311                     	;# 
  2018  0312                     	;# 
  2019  0313                     	;# 
  2020  0314                     	;# 
  2021  0314                     	;# 
  2022  0315                     	;# 
  2023  0316                     	;# 
  2024  0317                     	;# 
  2025  0318                     	;# 
  2026  0318                     	;# 
  2027  0319                     	;# 
  2028  031A                     	;# 
  2029  031B                     	;# 
  2030  031C                     	;# 
  2031  031C                     	;# 
  2032  031D                     	;# 
  2033  031E                     	;# 
  2034  031F                     	;# 
  2035  038C                     	;# 
  2036  038D                     	;# 
  2037  038E                     	;# 
  2038  0390                     	;# 
  2039  0391                     	;# 
  2040  0392                     	;# 
  2041  040C                     	;# 
  2042  040D                     	;# 
  2043  040E                     	;# 
  2044  040F                     	;# 
  2045  0410                     	;# 
  2046  0411                     	;# 
  2047  0416                     	;# 
  2048  0416                     	;# 
  2049  0417                     	;# 
  2050  0418                     	;# 
  2051  0418                     	;# 
  2052  0419                     	;# 
  2053  041A                     	;# 
  2054  041A                     	;# 
  2055  041B                     	;# 
  2056  041C                     	;# 
  2057  041C                     	;# 
  2058  041D                     	;# 
  2059  041E                     	;# 
  2060  041F                     	;# 
  2061  048C                     	;# 
  2062  048C                     	;# 
  2063  048D                     	;# 
  2064  048E                     	;# 
  2065  048F                     	;# 
  2066  048F                     	;# 
  2067  0490                     	;# 
  2068  0491                     	;# 
  2069  0492                     	;# 
  2070  0492                     	;# 
  2071  0493                     	;# 
  2072  0494                     	;# 
  2073  0495                     	;# 
  2074  0495                     	;# 
  2075  0496                     	;# 
  2076  0497                     	;# 
  2077  0498                     	;# 
  2078  0499                     	;# 
  2079  049A                     	;# 
  2080  049B                     	;# 
  2081  049C                     	;# 
  2082  049D                     	;# 
  2083  050C                     	;# 
  2084  050C                     	;# 
  2085  050D                     	;# 
  2086  050E                     	;# 
  2087  050F                     	;# 
  2088  050F                     	;# 
  2089  0510                     	;# 
  2090  0511                     	;# 
  2091  0512                     	;# 
  2092  0512                     	;# 
  2093  0513                     	;# 
  2094  0514                     	;# 
  2095  0515                     	;# 
  2096  0515                     	;# 
  2097  0516                     	;# 
  2098  0517                     	;# 
  2099  0518                     	;# 
  2100  0519                     	;# 
  2101  051A                     	;# 
  2102  051B                     	;# 
  2103  051C                     	;# 
  2104  051D                     	;# 
  2105  058C                     	;# 
  2106  058C                     	;# 
  2107  058D                     	;# 
  2108  058E                     	;# 
  2109  058F                     	;# 
  2110  058F                     	;# 
  2111  0590                     	;# 
  2112  0591                     	;# 
  2113  0592                     	;# 
  2114  0593                     	;# 
  2115  060C                     	;# 
  2116  060D                     	;# 
  2117  060E                     	;# 
  2118  060F                     	;# 
  2119  0610                     	;# 
  2120  0611                     	;# 
  2121  0612                     	;# 
  2122  0613                     	;# 
  2123  0614                     	;# 
  2124  0616                     	;# 
  2125  0617                     	;# 
  2126  0618                     	;# 
  2127  0619                     	;# 
  2128  061A                     	;# 
  2129  061B                     	;# 
  2130  061C                     	;# 
  2131  061D                     	;# 
  2132  061E                     	;# 
  2133  068C                     	;# 
  2134  068D                     	;# 
  2135  068E                     	;# 
  2136  068F                     	;# 
  2137  0690                     	;# 
  2138  0691                     	;# 
  2139  0692                     	;# 
  2140  0693                     	;# 
  2141  0694                     	;# 
  2142  070C                     	;# 
  2143  070D                     	;# 
  2144  070E                     	;# 
  2145  070F                     	;# 
  2146  0710                     	;# 
  2147  0711                     	;# 
  2148  0712                     	;# 
  2149  0713                     	;# 
  2150  0714                     	;# 
  2151  0716                     	;# 
  2152  0717                     	;# 
  2153  0718                     	;# 
  2154  0719                     	;# 
  2155  071A                     	;# 
  2156  071B                     	;# 
  2157  071C                     	;# 
  2158  071D                     	;# 
  2159  071E                     	;# 
  2160  0796                     	;# 
  2161  0797                     	;# 
  2162  0798                     	;# 
  2163  0799                     	;# 
  2164  079A                     	;# 
  2165  079B                     	;# 
  2166  080C                     	;# 
  2167  080D                     	;# 
  2168  080E                     	;# 
  2169  080F                     	;# 
  2170  0810                     	;# 
  2171  0811                     	;# 
  2172  0812                     	;# 
  2173  0813                     	;# 
  2174  0814                     	;# 
  2175  081A                     	;# 
  2176  081B                     	;# 
  2177  081C                     	;# 
  2178  081D                     	;# 
  2179  081E                     	;# 
  2180  081F                     	;# 
  2181  088C                     	;# 
  2182  088D                     	;# 
  2183  088E                     	;# 
  2184  088F                     	;# 
  2185  0890                     	;# 
  2186  0891                     	;# 
  2187  0892                     	;# 
  2188  0893                     	;# 
  2189  0895                     	;# 
  2190  0896                     	;# 
  2191  0897                     	;# 
  2192  0898                     	;# 
  2193  0899                     	;# 
  2194  089A                     	;# 
  2195  089B                     	;# 
  2196  090C                     	;# 
  2197  090E                     	;# 
  2198  090F                     	;# 
  2199  091F                     	;# 
  2200  091F                     	;# 
  2201  098F                     	;# 
  2202  098F                     	;# 
  2203  0990                     	;# 
  2204  0991                     	;# 
  2205  0992                     	;# 
  2206  0993                     	;# 
  2207  0994                     	;# 
  2208  0995                     	;# 
  2209  0996                     	;# 
  2210  0997                     	;# 
  2211  0E0F                     	;# 
  2212  0E10                     	;# 
  2213  0E11                     	;# 
  2214  0E12                     	;# 
  2215  0E13                     	;# 
  2216  0E14                     	;# 
  2217  0E15                     	;# 
  2218  0E16                     	;# 
  2219  0E17                     	;# 
  2220  0E18                     	;# 
  2221  0E19                     	;# 
  2222  0E1A                     	;# 
  2223  0E1B                     	;# 
  2224  0E1C                     	;# 
  2225  0E1D                     	;# 
  2226  0E1E                     	;# 
  2227  0E1F                     	;# 
  2228  0E20                     	;# 
  2229  0E21                     	;# 
  2230  0E22                     	;# 
  2231  0E23                     	;# 
  2232  0E24                     	;# 
  2233  0E25                     	;# 
  2234  0E26                     	;# 
  2235  0E27                     	;# 
  2236  0E28                     	;# 
  2237  0E29                     	;# 
  2238  0E2A                     	;# 
  2239  0E2B                     	;# 
  2240  0E2C                     	;# 
  2241  0E2D                     	;# 
  2242  0E2E                     	;# 
  2243  0E2F                     	;# 
  2244  0E30                     	;# 
  2245  0E31                     	;# 
  2246  0E32                     	;# 
  2247  0E33                     	;# 
  2248  0E34                     	;# 
  2249  0E35                     	;# 
  2250  0E36                     	;# 
  2251  0E37                     	;# 
  2252  0E8F                     	;# 
  2253  0E90                     	;# 
  2254  0E91                     	;# 
  2255  0E92                     	;# 
  2256  0E93                     	;# 
  2257  0E94                     	;# 
  2258  0E95                     	;# 
  2259  0E96                     	;# 
  2260  0E97                     	;# 
  2261  0E9C                     	;# 
  2262  0E9D                     	;# 
  2263  0E9E                     	;# 
  2264  0EA1                     	;# 
  2265  0EA2                     	;# 
  2266  0EA3                     	;# 
  2267  0EA4                     	;# 
  2268  0EA5                     	;# 
  2269  0EA9                     	;# 
  2270  0EAA                     	;# 
  2271  0EAB                     	;# 
  2272  0EAC                     	;# 
  2273  0EB1                     	;# 
  2274  0EB2                     	;# 
  2275  0EB3                     	;# 
  2276  0EB8                     	;# 
  2277  0EB9                     	;# 
  2278  0EBA                     	;# 
  2279  0EBB                     	;# 
  2280  0EBC                     	;# 
  2281  0EBD                     	;# 
  2282  0EBE                     	;# 
  2283  0EC3                     	;# 
  2284  0EC5                     	;# 
  2285  0EC6                     	;# 
  2286  0EC7                     	;# 
  2287  0EC8                     	;# 
  2288  0EC9                     	;# 
  2289  0ECA                     	;# 
  2290  0ECB                     	;# 
  2291  0ECC                     	;# 
  2292  0F10                     	;# 
  2293  0F11                     	;# 
  2294  0F12                     	;# 
  2295  0F13                     	;# 
  2296  0F14                     	;# 
  2297  0F15                     	;# 
  2298  0F16                     	;# 
  2299  0F17                     	;# 
  2300  0F18                     	;# 
  2301  0F19                     	;# 
  2302  0F1A                     	;# 
  2303  0F1B                     	;# 
  2304  0F1C                     	;# 
  2305  0F1D                     	;# 
  2306  0F1E                     	;# 
  2307  0F1F                     	;# 
  2308  0F20                     	;# 
  2309  0F21                     	;# 
  2310  0F22                     	;# 
  2311  0F23                     	;# 
  2312  0F24                     	;# 
  2313  0F25                     	;# 
  2314  0F26                     	;# 
  2315  0F27                     	;# 
  2316  0F28                     	;# 
  2317  0F29                     	;# 
  2318  0F2A                     	;# 
  2319  0F2B                     	;# 
  2320  0F2C                     	;# 
  2321  0F2D                     	;# 
  2322  0F2E                     	;# 
  2323  0F2F                     	;# 
  2324  0F30                     	;# 
  2325  0F31                     	;# 
  2326  0F32                     	;# 
  2327  0F38                     	;# 
  2328  0F39                     	;# 
  2329  0F3A                     	;# 
  2330  0F3B                     	;# 
  2331  0F3C                     	;# 
  2332  0F3D                     	;# 
  2333  0F3E                     	;# 
  2334  0F3F                     	;# 
  2335  0F40                     	;# 
  2336  0F41                     	;# 
  2337  0F43                     	;# 
  2338  0F44                     	;# 
  2339  0F45                     	;# 
  2340  0F46                     	;# 
  2341  0F47                     	;# 
  2342  0F48                     	;# 
  2343  0F49                     	;# 
  2344  0F4A                     	;# 
  2345  0F4B                     	;# 
  2346  0F4C                     	;# 
  2347  0F4E                     	;# 
  2348  0F4F                     	;# 
  2349  0F50                     	;# 
  2350  0F51                     	;# 
  2351  0F52                     	;# 
  2352  0F53                     	;# 
  2353  0F54                     	;# 
  2354  0F55                     	;# 
  2355  0F56                     	;# 
  2356  0F57                     	;# 
  2357  0F59                     	;# 
  2358  0F5A                     	;# 
  2359  0F5B                     	;# 
  2360  0F5C                     	;# 
  2361  0F5D                     	;# 
  2362  0F61                     	;# 
  2363  0F62                     	;# 
  2364  0F64                     	;# 
  2365  0F65                     	;# 
  2366  0F66                     	;# 
  2367  0F67                     	;# 
  2368  0F68                     	;# 
  2369  0F69                     	;# 
  2370  0F6A                     	;# 
  2371  0F6B                     	;# 
  2372  0F6C                     	;# 
  2373  0F6D                     	;# 
  2374  0FE4                     	;# 
  2375  0FE5                     	;# 
  2376  0FE6                     	;# 
  2377  0FE7                     	;# 
  2378  0FE8                     	;# 
  2379  0FE9                     	;# 
  2380  0FEA                     	;# 
  2381  0FEB                     	;# 
  2382  0FED                     	;# 
  2383  0FEE                     	;# 
  2384  0FEF                     	;# 
  2385  0000                     	;# 
  2386  0001                     	;# 
  2387  0002                     	;# 
  2388  0003                     	;# 
  2389  0004                     	;# 
  2390  0005                     	;# 
  2391  0006                     	;# 
  2392  0007                     	;# 
  2393  0008                     	;# 
  2394  0009                     	;# 
  2395  000A                     	;# 
  2396  000B                     	;# 
  2397  000C                     	;# 
  2398  000D                     	;# 
  2399  000E                     	;# 
  2400  000F                     	;# 
  2401  0010                     	;# 
  2402  0011                     	;# 
  2403  0012                     	;# 
  2404  0013                     	;# 
  2405  0014                     	;# 
  2406  0015                     	;# 
  2407  0016                     	;# 
  2408  0017                     	;# 
  2409  0018                     	;# 
  2410  0019                     	;# 
  2411  001A                     	;# 
  2412  001C                     	;# 
  2413  001C                     	;# 
  2414  001D                     	;# 
  2415  001D                     	;# 
  2416  001E                     	;# 
  2417  001F                     	;# 
  2418  008C                     	;# 
  2419  008C                     	;# 
  2420  008D                     	;# 
  2421  008E                     	;# 
  2422  008E                     	;# 
  2423  008F                     	;# 
  2424  0090                     	;# 
  2425  0090                     	;# 
  2426  0091                     	;# 
  2427  0093                     	;# 
  2428  0094                     	;# 
  2429  0095                     	;# 
  2430  0096                     	;# 
  2431  0097                     	;# 
  2432  0098                     	;# 
  2433  0099                     	;# 
  2434  009A                     	;# 
  2435  009B                     	;# 
  2436  009C                     	;# 
  2437  009D                     	;# 
  2438  009E                     	;# 
  2439  010C                     	;# 
  2440  010D                     	;# 
  2441  010E                     	;# 
  2442  010E                     	;# 
  2443  010F                     	;# 
  2444  0110                     	;# 
  2445  0110                     	;# 
  2446  0111                     	;# 
  2447  0112                     	;# 
  2448  0112                     	;# 
  2449  0113                     	;# 
  2450  0114                     	;# 
  2451  0114                     	;# 
  2452  0115                     	;# 
  2453  0116                     	;# 
  2454  0116                     	;# 
  2455  0117                     	;# 
  2456  0119                     	;# 
  2457  0119                     	;# 
  2458  0119                     	;# 
  2459  011A                     	;# 
  2460  011A                     	;# 
  2461  011A                     	;# 
  2462  011B                     	;# 
  2463  011B                     	;# 
  2464  011B                     	;# 
  2465  011B                     	;# 
  2466  011B                     	;# 
  2467  011C                     	;# 
  2468  011C                     	;# 
  2469  011C                     	;# 
  2470  011D                     	;# 
  2471  011D                     	;# 
  2472  011D                     	;# 
  2473  011E                     	;# 
  2474  011E                     	;# 
  2475  011E                     	;# 
  2476  011F                     	;# 
  2477  011F                     	;# 
  2478  011F                     	;# 
  2479  011F                     	;# 
  2480  011F                     	;# 
  2481  018C                     	;# 
  2482  018D                     	;# 
  2483  018E                     	;# 
  2484  018F                     	;# 
  2485  0190                     	;# 
  2486  0191                     	;# 
  2487  0192                     	;# 
  2488  0196                     	;# 
  2489  0197                     	;# 
  2490  0198                     	;# 
  2491  0199                     	;# 
  2492  019A                     	;# 
  2493  019B                     	;# 
  2494  019C                     	;# 
  2495  020C                     	;# 
  2496  020C                     	;# 
  2497  020D                     	;# 
  2498  020E                     	;# 
  2499  020F                     	;# 
  2500  020F                     	;# 
  2501  0210                     	;# 
  2502  0210                     	;# 
  2503  0211                     	;# 
  2504  0211                     	;# 
  2505  0212                     	;# 
  2506  0212                     	;# 
  2507  0213                     	;# 
  2508  0214                     	;# 
  2509  0215                     	;# 
  2510  0215                     	;# 
  2511  0216                     	;# 
  2512  0216                     	;# 
  2513  0217                     	;# 
  2514  0217                     	;# 
  2515  0218                     	;# 
  2516  0218                     	;# 
  2517  0219                     	;# 
  2518  021A                     	;# 
  2519  021B                     	;# 
  2520  021B                     	;# 
  2521  021C                     	;# 
  2522  021C                     	;# 
  2523  021D                     	;# 
  2524  021D                     	;# 
  2525  021E                     	;# 
  2526  021F                     	;# 
  2527  028C                     	;# 
  2528  028C                     	;# 
  2529  028D                     	;# 
  2530  028D                     	;# 
  2531  028E                     	;# 
  2532  028F                     	;# 
  2533  0290                     	;# 
  2534  0290                     	;# 
  2535  0291                     	;# 
  2536  0292                     	;# 
  2537  0292                     	;# 
  2538  0293                     	;# 
  2539  0293                     	;# 
  2540  0294                     	;# 
  2541  0295                     	;# 
  2542  0296                     	;# 
  2543  0296                     	;# 
  2544  0297                     	;# 
  2545  0298                     	;# 
  2546  0298                     	;# 
  2547  0299                     	;# 
  2548  0299                     	;# 
  2549  029A                     	;# 
  2550  029B                     	;# 
  2551  029C                     	;# 
  2552  029C                     	;# 
  2553  029D                     	;# 
  2554  030C                     	;# 
  2555  030C                     	;# 
  2556  030D                     	;# 
  2557  030E                     	;# 
  2558  030F                     	;# 
  2559  0310                     	;# 
  2560  0310                     	;# 
  2561  0311                     	;# 
  2562  0312                     	;# 
  2563  0313                     	;# 
  2564  0314                     	;# 
  2565  0314                     	;# 
  2566  0315                     	;# 
  2567  0316                     	;# 
  2568  0317                     	;# 
  2569  0318                     	;# 
  2570  0318                     	;# 
  2571  0319                     	;# 
  2572  031A                     	;# 
  2573  031B                     	;# 
  2574  031C                     	;# 
  2575  031C                     	;# 
  2576  031D                     	;# 
  2577  031E                     	;# 
  2578  031F                     	;# 
  2579  038C                     	;# 
  2580  038D                     	;# 
  2581  038E                     	;# 
  2582  0390                     	;# 
  2583  0391                     	;# 
  2584  0392                     	;# 
  2585  040C                     	;# 
  2586  040D                     	;# 
  2587  040E                     	;# 
  2588  040F                     	;# 
  2589  0410                     	;# 
  2590  0411                     	;# 
  2591  0416                     	;# 
  2592  0416                     	;# 
  2593  0417                     	;# 
  2594  0418                     	;# 
  2595  0418                     	;# 
  2596  0419                     	;# 
  2597  041A                     	;# 
  2598  041A                     	;# 
  2599  041B                     	;# 
  2600  041C                     	;# 
  2601  041C                     	;# 
  2602  041D                     	;# 
  2603  041E                     	;# 
  2604  041F                     	;# 
  2605  048C                     	;# 
  2606  048C                     	;# 
  2607  048D                     	;# 
  2608  048E                     	;# 
  2609  048F                     	;# 
  2610  048F                     	;# 
  2611  0490                     	;# 
  2612  0491                     	;# 
  2613  0492                     	;# 
  2614  0492                     	;# 
  2615  0493                     	;# 
  2616  0494                     	;# 
  2617  0495                     	;# 
  2618  0495                     	;# 
  2619  0496                     	;# 
  2620  0497                     	;# 
  2621  0498                     	;# 
  2622  0499                     	;# 
  2623  049A                     	;# 
  2624  049B                     	;# 
  2625  049C                     	;# 
  2626  049D                     	;# 
  2627  050C                     	;# 
  2628  050C                     	;# 
  2629  050D                     	;# 
  2630  050E                     	;# 
  2631  050F                     	;# 
  2632  050F                     	;# 
  2633  0510                     	;# 
  2634  0511                     	;# 
  2635  0512                     	;# 
  2636  0512                     	;# 
  2637  0513                     	;# 
  2638  0514                     	;# 
  2639  0515                     	;# 
  2640  0515                     	;# 
  2641  0516                     	;# 
  2642  0517                     	;# 
  2643  0518                     	;# 
  2644  0519                     	;# 
  2645  051A                     	;# 
  2646  051B                     	;# 
  2647  051C                     	;# 
  2648  051D                     	;# 
  2649  058C                     	;# 
  2650  058C                     	;# 
  2651  058D                     	;# 
  2652  058E                     	;# 
  2653  058F                     	;# 
  2654  058F                     	;# 
  2655  0590                     	;# 
  2656  0591                     	;# 
  2657  0592                     	;# 
  2658  0593                     	;# 
  2659  060C                     	;# 
  2660  060D                     	;# 
  2661  060E                     	;# 
  2662  060F                     	;# 
  2663  0610                     	;# 
  2664  0611                     	;# 
  2665  0612                     	;# 
  2666  0613                     	;# 
  2667  0614                     	;# 
  2668  0616                     	;# 
  2669  0617                     	;# 
  2670  0618                     	;# 
  2671  0619                     	;# 
  2672  061A                     	;# 
  2673  061B                     	;# 
  2674  061C                     	;# 
  2675  061D                     	;# 
  2676  061E                     	;# 
  2677  068C                     	;# 
  2678  068D                     	;# 
  2679  068E                     	;# 
  2680  068F                     	;# 
  2681  0690                     	;# 
  2682  0691                     	;# 
  2683  0692                     	;# 
  2684  0693                     	;# 
  2685  0694                     	;# 
  2686  070C                     	;# 
  2687  070D                     	;# 
  2688  070E                     	;# 
  2689  070F                     	;# 
  2690  0710                     	;# 
  2691  0711                     	;# 
  2692  0712                     	;# 
  2693  0713                     	;# 
  2694  0714                     	;# 
  2695  0716                     	;# 
  2696  0717                     	;# 
  2697  0718                     	;# 
  2698  0719                     	;# 
  2699  071A                     	;# 
  2700  071B                     	;# 
  2701  071C                     	;# 
  2702  071D                     	;# 
  2703  071E                     	;# 
  2704  0796                     	;# 
  2705  0797                     	;# 
  2706  0798                     	;# 
  2707  0799                     	;# 
  2708  079A                     	;# 
  2709  079B                     	;# 
  2710  080C                     	;# 
  2711  080D                     	;# 
  2712  080E                     	;# 
  2713  080F                     	;# 
  2714  0810                     	;# 
  2715  0811                     	;# 
  2716  0812                     	;# 
  2717  0813                     	;# 
  2718  0814                     	;# 
  2719  081A                     	;# 
  2720  081B                     	;# 
  2721  081C                     	;# 
  2722  081D                     	;# 
  2723  081E                     	;# 
  2724  081F                     	;# 
  2725  088C                     	;# 
  2726  088D                     	;# 
  2727  088E                     	;# 
  2728  088F                     	;# 
  2729  0890                     	;# 
  2730  0891                     	;# 
  2731  0892                     	;# 
  2732  0893                     	;# 
  2733  0895                     	;# 
  2734  0896                     	;# 
  2735  0897                     	;# 
  2736  0898                     	;# 
  2737  0899                     	;# 
  2738  089A                     	;# 
  2739  089B                     	;# 
  2740  090C                     	;# 
  2741  090E                     	;# 
  2742  090F                     	;# 
  2743  091F                     	;# 
  2744  091F                     	;# 
  2745  098F                     	;# 
  2746  098F                     	;# 
  2747  0990                     	;# 
  2748  0991                     	;# 
  2749  0992                     	;# 
  2750  0993                     	;# 
  2751  0994                     	;# 
  2752  0995                     	;# 
  2753  0996                     	;# 
  2754  0997                     	;# 
  2755  0E0F                     	;# 
  2756  0E10                     	;# 
  2757  0E11                     	;# 
  2758  0E12                     	;# 
  2759  0E13                     	;# 
  2760  0E14                     	;# 
  2761  0E15                     	;# 
  2762  0E16                     	;# 
  2763  0E17                     	;# 
  2764  0E18                     	;# 
  2765  0E19                     	;# 
  2766  0E1A                     	;# 
  2767  0E1B                     	;# 
  2768  0E1C                     	;# 
  2769  0E1D                     	;# 
  2770  0E1E                     	;# 
  2771  0E1F                     	;# 
  2772  0E20                     	;# 
  2773  0E21                     	;# 
  2774  0E22                     	;# 
  2775  0E23                     	;# 
  2776  0E24                     	;# 
  2777  0E25                     	;# 
  2778  0E26                     	;# 
  2779  0E27                     	;# 
  2780  0E28                     	;# 
  2781  0E29                     	;# 
  2782  0E2A                     	;# 
  2783  0E2B                     	;# 
  2784  0E2C                     	;# 
  2785  0E2D                     	;# 
  2786  0E2E                     	;# 
  2787  0E2F                     	;# 
  2788  0E30                     	;# 
  2789  0E31                     	;# 
  2790  0E32                     	;# 
  2791  0E33                     	;# 
  2792  0E34                     	;# 
  2793  0E35                     	;# 
  2794  0E36                     	;# 
  2795  0E37                     	;# 
  2796  0E8F                     	;# 
  2797  0E90                     	;# 
  2798  0E91                     	;# 
  2799  0E92                     	;# 
  2800  0E93                     	;# 
  2801  0E94                     	;# 
  2802  0E95                     	;# 
  2803  0E96                     	;# 
  2804  0E97                     	;# 
  2805  0E9C                     	;# 
  2806  0E9D                     	;# 
  2807  0E9E                     	;# 
  2808  0EA1                     	;# 
  2809  0EA2                     	;# 
  2810  0EA3                     	;# 
  2811  0EA4                     	;# 
  2812  0EA5                     	;# 
  2813  0EA9                     	;# 
  2814  0EAA                     	;# 
  2815  0EAB                     	;# 
  2816  0EAC                     	;# 
  2817  0EB1                     	;# 
  2818  0EB2                     	;# 
  2819  0EB3                     	;# 
  2820  0EB8                     	;# 
  2821  0EB9                     	;# 
  2822  0EBA                     	;# 
  2823  0EBB                     	;# 
  2824  0EBC                     	;# 
  2825  0EBD                     	;# 
  2826  0EBE                     	;# 
  2827  0EC3                     	;# 
  2828  0EC5                     	;# 
  2829  0EC6                     	;# 
  2830  0EC7                     	;# 
  2831  0EC8                     	;# 
  2832  0EC9                     	;# 
  2833  0ECA                     	;# 
  2834  0ECB                     	;# 
  2835  0ECC                     	;# 
  2836  0F10                     	;# 
  2837  0F11                     	;# 
  2838  0F12                     	;# 
  2839  0F13                     	;# 
  2840  0F14                     	;# 
  2841  0F15                     	;# 
  2842  0F16                     	;# 
  2843  0F17                     	;# 
  2844  0F18                     	;# 
  2845  0F19                     	;# 
  2846  0F1A                     	;# 
  2847  0F1B                     	;# 
  2848  0F1C                     	;# 
  2849  0F1D                     	;# 
  2850  0F1E                     	;# 
  2851  0F1F                     	;# 
  2852  0F20                     	;# 
  2853  0F21                     	;# 
  2854  0F22                     	;# 
  2855  0F23                     	;# 
  2856  0F24                     	;# 
  2857  0F25                     	;# 
  2858  0F26                     	;# 
  2859  0F27                     	;# 
  2860  0F28                     	;# 
  2861  0F29                     	;# 
  2862  0F2A                     	;# 
  2863  0F2B                     	;# 
  2864  0F2C                     	;# 
  2865  0F2D                     	;# 
  2866  0F2E                     	;# 
  2867  0F2F                     	;# 
  2868  0F30                     	;# 
  2869  0F31                     	;# 
  2870  0F32                     	;# 
  2871  0F38                     	;# 
  2872  0F39                     	;# 
  2873  0F3A                     	;# 
  2874  0F3B                     	;# 
  2875  0F3C                     	;# 
  2876  0F3D                     	;# 
  2877  0F3E                     	;# 
  2878  0F3F                     	;# 
  2879  0F40                     	;# 
  2880  0F41                     	;# 
  2881  0F43                     	;# 
  2882  0F44                     	;# 
  2883  0F45                     	;# 
  2884  0F46                     	;# 
  2885  0F47                     	;# 
  2886  0F48                     	;# 
  2887  0F49                     	;# 
  2888  0F4A                     	;# 
  2889  0F4B                     	;# 
  2890  0F4C                     	;# 
  2891  0F4E                     	;# 
  2892  0F4F                     	;# 
  2893  0F50                     	;# 
  2894  0F51                     	;# 
  2895  0F52                     	;# 
  2896  0F53                     	;# 
  2897  0F54                     	;# 
  2898  0F55                     	;# 
  2899  0F56                     	;# 
  2900  0F57                     	;# 
  2901  0F59                     	;# 
  2902  0F5A                     	;# 
  2903  0F5B                     	;# 
  2904  0F5C                     	;# 
  2905  0F5D                     	;# 
  2906  0F61                     	;# 
  2907  0F62                     	;# 
  2908  0F64                     	;# 
  2909  0F65                     	;# 
  2910  0F66                     	;# 
  2911  0F67                     	;# 
  2912  0F68                     	;# 
  2913  0F69                     	;# 
  2914  0F6A                     	;# 
  2915  0F6B                     	;# 
  2916  0F6C                     	;# 
  2917  0F6D                     	;# 
  2918  0FE4                     	;# 
  2919  0FE5                     	;# 
  2920  0FE6                     	;# 
  2921  0FE7                     	;# 
  2922  0FE8                     	;# 
  2923  0FE9                     	;# 
  2924  0FEA                     	;# 
  2925  0FEB                     	;# 
  2926  0FED                     	;# 
  2927  0FEE                     	;# 
  2928  0FEF                     	;# 
  2929  0000                     	;# 
  2930  0001                     	;# 
  2931  0002                     	;# 
  2932  0003                     	;# 
  2933  0004                     	;# 
  2934  0005                     	;# 
  2935  0006                     	;# 
  2936  0007                     	;# 
  2937  0008                     	;# 
  2938  0009                     	;# 
  2939  000A                     	;# 
  2940  000B                     	;# 
  2941  000C                     	;# 
  2942  000D                     	;# 
  2943  000E                     	;# 
  2944  000F                     	;# 
  2945  0010                     	;# 
  2946  0011                     	;# 
  2947  0012                     	;# 
  2948  0013                     	;# 
  2949  0014                     	;# 
  2950  0015                     	;# 
  2951  0016                     	;# 
  2952  0017                     	;# 
  2953  0018                     	;# 
  2954  0019                     	;# 
  2955  001A                     	;# 
  2956  001C                     	;# 
  2957  001C                     	;# 
  2958  001D                     	;# 
  2959  001D                     	;# 
  2960  001E                     	;# 
  2961  001F                     	;# 
  2962  008C                     	;# 
  2963  008C                     	;# 
  2964  008D                     	;# 
  2965  008E                     	;# 
  2966  008E                     	;# 
  2967  008F                     	;# 
  2968  0090                     	;# 
  2969  0090                     	;# 
  2970  0091                     	;# 
  2971  0093                     	;# 
  2972  0094                     	;# 
  2973  0095                     	;# 
  2974  0096                     	;# 
  2975  0097                     	;# 
  2976  0098                     	;# 
  2977  0099                     	;# 
  2978  009A                     	;# 
  2979  009B                     	;# 
  2980  009C                     	;# 
  2981  009D                     	;# 
  2982  009E                     	;# 
  2983  010C                     	;# 
  2984  010D                     	;# 
  2985  010E                     	;# 
  2986  010E                     	;# 
  2987  010F                     	;# 
  2988  0110                     	;# 
  2989  0110                     	;# 
  2990  0111                     	;# 
  2991  0112                     	;# 
  2992  0112                     	;# 
  2993  0113                     	;# 
  2994  0114                     	;# 
  2995  0114                     	;# 
  2996  0115                     	;# 
  2997  0116                     	;# 
  2998  0116                     	;# 
  2999  0117                     	;# 
  3000  0119                     	;# 
  3001  0119                     	;# 
  3002  0119                     	;# 
  3003  011A                     	;# 
  3004  011A                     	;# 
  3005  011A                     	;# 
  3006  011B                     	;# 
  3007  011B                     	;# 
  3008  011B                     	;# 
  3009  011B                     	;# 
  3010  011B                     	;# 
  3011  011C                     	;# 
  3012  011C                     	;# 
  3013  011C                     	;# 
  3014  011D                     	;# 
  3015  011D                     	;# 
  3016  011D                     	;# 
  3017  011E                     	;# 
  3018  011E                     	;# 
  3019  011E                     	;# 
  3020  011F                     	;# 
  3021  011F                     	;# 
  3022  011F                     	;# 
  3023  011F                     	;# 
  3024  011F                     	;# 
  3025  018C                     	;# 
  3026  018D                     	;# 
  3027  018E                     	;# 
  3028  018F                     	;# 
  3029  0190                     	;# 
  3030  0191                     	;# 
  3031  0192                     	;# 
  3032  0196                     	;# 
  3033  0197                     	;# 
  3034  0198                     	;# 
  3035  0199                     	;# 
  3036  019A                     	;# 
  3037  019B                     	;# 
  3038  019C                     	;# 
  3039  020C                     	;# 
  3040  020C                     	;# 
  3041  020D                     	;# 
  3042  020E                     	;# 
  3043  020F                     	;# 
  3044  020F                     	;# 
  3045  0210                     	;# 
  3046  0210                     	;# 
  3047  0211                     	;# 
  3048  0211                     	;# 
  3049  0212                     	;# 
  3050  0212                     	;# 
  3051  0213                     	;# 
  3052  0214                     	;# 
  3053  0215                     	;# 
  3054  0215                     	;# 
  3055  0216                     	;# 
  3056  0216                     	;# 
  3057  0217                     	;# 
  3058  0217                     	;# 
  3059  0218                     	;# 
  3060  0218                     	;# 
  3061  0219                     	;# 
  3062  021A                     	;# 
  3063  021B                     	;# 
  3064  021B                     	;# 
  3065  021C                     	;# 
  3066  021C                     	;# 
  3067  021D                     	;# 
  3068  021D                     	;# 
  3069  021E                     	;# 
  3070  021F                     	;# 
  3071  028C                     	;# 
  3072  028C                     	;# 
  3073  028D                     	;# 
  3074  028D                     	;# 
  3075  028E                     	;# 
  3076  028F                     	;# 
  3077  0290                     	;# 
  3078  0290                     	;# 
  3079  0291                     	;# 
  3080  0292                     	;# 
  3081  0292                     	;# 
  3082  0293                     	;# 
  3083  0293                     	;# 
  3084  0294                     	;# 
  3085  0295                     	;# 
  3086  0296                     	;# 
  3087  0296                     	;# 
  3088  0297                     	;# 
  3089  0298                     	;# 
  3090  0298                     	;# 
  3091  0299                     	;# 
  3092  0299                     	;# 
  3093  029A                     	;# 
  3094  029B                     	;# 
  3095  029C                     	;# 
  3096  029C                     	;# 
  3097  029D                     	;# 
  3098  030C                     	;# 
  3099  030C                     	;# 
  3100  030D                     	;# 
  3101  030E                     	;# 
  3102  030F                     	;# 
  3103  0310                     	;# 
  3104  0310                     	;# 
  3105  0311                     	;# 
  3106  0312                     	;# 
  3107  0313                     	;# 
  3108  0314                     	;# 
  3109  0314                     	;# 
  3110  0315                     	;# 
  3111  0316                     	;# 
  3112  0317                     	;# 
  3113  0318                     	;# 
  3114  0318                     	;# 
  3115  0319                     	;# 
  3116  031A                     	;# 
  3117  031B                     	;# 
  3118  031C                     	;# 
  3119  031C                     	;# 
  3120  031D                     	;# 
  3121  031E                     	;# 
  3122  031F                     	;# 
  3123  038C                     	;# 
  3124  038D                     	;# 
  3125  038E                     	;# 
  3126  0390                     	;# 
  3127  0391                     	;# 
  3128  0392                     	;# 
  3129  040C                     	;# 
  3130  040D                     	;# 
  3131  040E                     	;# 
  3132  040F                     	;# 
  3133  0410                     	;# 
  3134  0411                     	;# 
  3135  0416                     	;# 
  3136  0416                     	;# 
  3137  0417                     	;# 
  3138  0418                     	;# 
  3139  0418                     	;# 
  3140  0419                     	;# 
  3141  041A                     	;# 
  3142  041A                     	;# 
  3143  041B                     	;# 
  3144  041C                     	;# 
  3145  041C                     	;# 
  3146  041D                     	;# 
  3147  041E                     	;# 
  3148  041F                     	;# 
  3149  048C                     	;# 
  3150  048C                     	;# 
  3151  048D                     	;# 
  3152  048E                     	;# 
  3153  048F                     	;# 
  3154  048F                     	;# 
  3155  0490                     	;# 
  3156  0491                     	;# 
  3157  0492                     	;# 
  3158  0492                     	;# 
  3159  0493                     	;# 
  3160  0494                     	;# 
  3161  0495                     	;# 
  3162  0495                     	;# 
  3163  0496                     	;# 
  3164  0497                     	;# 
  3165  0498                     	;# 
  3166  0499                     	;# 
  3167  049A                     	;# 
  3168  049B                     	;# 
  3169  049C                     	;# 
  3170  049D                     	;# 
  3171  050C                     	;# 
  3172  050C                     	;# 
  3173  050D                     	;# 
  3174  050E                     	;# 
  3175  050F                     	;# 
  3176  050F                     	;# 
  3177  0510                     	;# 
  3178  0511                     	;# 
  3179  0512                     	;# 
  3180  0512                     	;# 
  3181  0513                     	;# 
  3182  0514                     	;# 
  3183  0515                     	;# 
  3184  0515                     	;# 
  3185  0516                     	;# 
  3186  0517                     	;# 
  3187  0518                     	;# 
  3188  0519                     	;# 
  3189  051A                     	;# 
  3190  051B                     	;# 
  3191  051C                     	;# 
  3192  051D                     	;# 
  3193  058C                     	;# 
  3194  058C                     	;# 
  3195  058D                     	;# 
  3196  058E                     	;# 
  3197  058F                     	;# 
  3198  058F                     	;# 
  3199  0590                     	;# 
  3200  0591                     	;# 
  3201  0592                     	;# 
  3202  0593                     	;# 
  3203  060C                     	;# 
  3204  060D                     	;# 
  3205  060E                     	;# 
  3206  060F                     	;# 
  3207  0610                     	;# 
  3208  0611                     	;# 
  3209  0612                     	;# 
  3210  0613                     	;# 
  3211  0614                     	;# 
  3212  0616                     	;# 
  3213  0617                     	;# 
  3214  0618                     	;# 
  3215  0619                     	;# 
  3216  061A                     	;# 
  3217  061B                     	;# 
  3218  061C                     	;# 
  3219  061D                     	;# 
  3220  061E                     	;# 
  3221  068C                     	;# 
  3222  068D                     	;# 
  3223  068E                     	;# 
  3224  068F                     	;# 
  3225  0690                     	;# 
  3226  0691                     	;# 
  3227  0692                     	;# 
  3228  0693                     	;# 
  3229  0694                     	;# 
  3230  070C                     	;# 
  3231  070D                     	;# 
  3232  070E                     	;# 
  3233  070F                     	;# 
  3234  0710                     	;# 
  3235  0711                     	;# 
  3236  0712                     	;# 
  3237  0713                     	;# 
  3238  0714                     	;# 
  3239  0716                     	;# 
  3240  0717                     	;# 
  3241  0718                     	;# 
  3242  0719                     	;# 
  3243  071A                     	;# 
  3244  071B                     	;# 
  3245  071C                     	;# 
  3246  071D                     	;# 
  3247  071E                     	;# 
  3248  0796                     	;# 
  3249  0797                     	;# 
  3250  0798                     	;# 
  3251  0799                     	;# 
  3252  079A                     	;# 
  3253  079B                     	;# 
  3254  080C                     	;# 
  3255  080D                     	;# 
  3256  080E                     	;# 
  3257  080F                     	;# 
  3258  0810                     	;# 
  3259  0811                     	;# 
  3260  0812                     	;# 
  3261  0813                     	;# 
  3262  0814                     	;# 
  3263  081A                     	;# 
  3264  081B                     	;# 
  3265  081C                     	;# 
  3266  081D                     	;# 
  3267  081E                     	;# 
  3268  081F                     	;# 
  3269  088C                     	;# 
  3270  088D                     	;# 
  3271  088E                     	;# 
  3272  088F                     	;# 
  3273  0890                     	;# 
  3274  0891                     	;# 
  3275  0892                     	;# 
  3276  0893                     	;# 
  3277  0895                     	;# 
  3278  0896                     	;# 
  3279  0897                     	;# 
  3280  0898                     	;# 
  3281  0899                     	;# 
  3282  089A                     	;# 
  3283  089B                     	;# 
  3284  090C                     	;# 
  3285  090E                     	;# 
  3286  090F                     	;# 
  3287  091F                     	;# 
  3288  091F                     	;# 
  3289  098F                     	;# 
  3290  098F                     	;# 
  3291  0990                     	;# 
  3292  0991                     	;# 
  3293  0992                     	;# 
  3294  0993                     	;# 
  3295  0994                     	;# 
  3296  0995                     	;# 
  3297  0996                     	;# 
  3298  0997                     	;# 
  3299  0E0F                     	;# 
  3300  0E10                     	;# 
  3301  0E11                     	;# 
  3302  0E12                     	;# 
  3303  0E13                     	;# 
  3304  0E14                     	;# 
  3305  0E15                     	;# 
  3306  0E16                     	;# 
  3307  0E17                     	;# 
  3308  0E18                     	;# 
  3309  0E19                     	;# 
  3310  0E1A                     	;# 
  3311  0E1B                     	;# 
  3312  0E1C                     	;# 
  3313  0E1D                     	;# 
  3314  0E1E                     	;# 
  3315  0E1F                     	;# 
  3316  0E20                     	;# 
  3317  0E21                     	;# 
  3318  0E22                     	;# 
  3319  0E23                     	;# 
  3320  0E24                     	;# 
  3321  0E25                     	;# 
  3322  0E26                     	;# 
  3323  0E27                     	;# 
  3324  0E28                     	;# 
  3325  0E29                     	;# 
  3326  0E2A                     	;# 
  3327  0E2B                     	;# 
  3328  0E2C                     	;# 
  3329  0E2D                     	;# 
  3330  0E2E                     	;# 
  3331  0E2F                     	;# 
  3332  0E30                     	;# 
  3333  0E31                     	;# 
  3334  0E32                     	;# 
  3335  0E33                     	;# 
  3336  0E34                     	;# 
  3337  0E35                     	;# 
  3338  0E36                     	;# 
  3339  0E37                     	;# 
  3340  0E8F                     	;# 
  3341  0E90                     	;# 
  3342  0E91                     	;# 
  3343  0E92                     	;# 
  3344  0E93                     	;# 
  3345  0E94                     	;# 
  3346  0E95                     	;# 
  3347  0E96                     	;# 
  3348  0E97                     	;# 
  3349  0E9C                     	;# 
  3350  0E9D                     	;# 
  3351  0E9E                     	;# 
  3352  0EA1                     	;# 
  3353  0EA2                     	;# 
  3354  0EA3                     	;# 
  3355  0EA4                     	;# 
  3356  0EA5                     	;# 
  3357  0EA9                     	;# 
  3358  0EAA                     	;# 
  3359  0EAB                     	;# 
  3360  0EAC                     	;# 
  3361  0EB1                     	;# 
  3362  0EB2                     	;# 
  3363  0EB3                     	;# 
  3364  0EB8                     	;# 
  3365  0EB9                     	;# 
  3366  0EBA                     	;# 
  3367  0EBB                     	;# 
  3368  0EBC                     	;# 
  3369  0EBD                     	;# 
  3370  0EBE                     	;# 
  3371  0EC3                     	;# 
  3372  0EC5                     	;# 
  3373  0EC6                     	;# 
  3374  0EC7                     	;# 
  3375  0EC8                     	;# 
  3376  0EC9                     	;# 
  3377  0ECA                     	;# 
  3378  0ECB                     	;# 
  3379  0ECC                     	;# 
  3380  0F10                     	;# 
  3381  0F11                     	;# 
  3382  0F12                     	;# 
  3383  0F13                     	;# 
  3384  0F14                     	;# 
  3385  0F15                     	;# 
  3386  0F16                     	;# 
  3387  0F17                     	;# 
  3388  0F18                     	;# 
  3389  0F19                     	;# 
  3390  0F1A                     	;# 
  3391  0F1B                     	;# 
  3392  0F1C                     	;# 
  3393  0F1D                     	;# 
  3394  0F1E                     	;# 
  3395  0F1F                     	;# 
  3396  0F20                     	;# 
  3397  0F21                     	;# 
  3398  0F22                     	;# 
  3399  0F23                     	;# 
  3400  0F24                     	;# 
  3401  0F25                     	;# 
  3402  0F26                     	;# 
  3403  0F27                     	;# 
  3404  0F28                     	;# 
  3405  0F29                     	;# 
  3406  0F2A                     	;# 
  3407  0F2B                     	;# 
  3408  0F2C                     	;# 
  3409  0F2D                     	;# 
  3410  0F2E                     	;# 
  3411  0F2F                     	;# 
  3412  0F30                     	;# 
  3413  0F31                     	;# 
  3414  0F32                     	;# 
  3415  0F38                     	;# 
  3416  0F39                     	;# 
  3417  0F3A                     	;# 
  3418  0F3B                     	;# 
  3419  0F3C                     	;# 
  3420  0F3D                     	;# 
  3421  0F3E                     	;# 
  3422  0F3F                     	;# 
  3423  0F40                     	;# 
  3424  0F41                     	;# 
  3425  0F43                     	;# 
  3426  0F44                     	;# 
  3427  0F45                     	;# 
  3428  0F46                     	;# 
  3429  0F47                     	;# 
  3430  0F48                     	;# 
  3431  0F49                     	;# 
  3432  0F4A                     	;# 
  3433  0F4B                     	;# 
  3434  0F4C                     	;# 
  3435  0F4E                     	;# 
  3436  0F4F                     	;# 
  3437  0F50                     	;# 
  3438  0F51                     	;# 
  3439  0F52                     	;# 
  3440  0F53                     	;# 
  3441  0F54                     	;# 
  3442  0F55                     	;# 
  3443  0F56                     	;# 
  3444  0F57                     	;# 
  3445  0F59                     	;# 
  3446  0F5A                     	;# 
  3447  0F5B                     	;# 
  3448  0F5C                     	;# 
  3449  0F5D                     	;# 
  3450  0F61                     	;# 
  3451  0F62                     	;# 
  3452  0F64                     	;# 
  3453  0F65                     	;# 
  3454  0F66                     	;# 
  3455  0F67                     	;# 
  3456  0F68                     	;# 
  3457  0F69                     	;# 
  3458  0F6A                     	;# 
  3459  0F6B                     	;# 
  3460  0F6C                     	;# 
  3461  0F6D                     	;# 
  3462  0FE4                     	;# 
  3463  0FE5                     	;# 
  3464  0FE6                     	;# 
  3465  0FE7                     	;# 
  3466  0FE8                     	;# 
  3467  0FE9                     	;# 
  3468  0FEA                     	;# 
  3469  0FEB                     	;# 
  3470  0FED                     	;# 
  3471  0FEE                     	;# 
  3472  0FEF                     	;# 
  3473  0000                     	;# 
  3474  0001                     	;# 
  3475  0002                     	;# 
  3476  0003                     	;# 
  3477  0004                     	;# 
  3478  0005                     	;# 
  3479  0006                     	;# 
  3480  0007                     	;# 
  3481  0008                     	;# 
  3482  0009                     	;# 
  3483  000A                     	;# 
  3484  000B                     	;# 
  3485  000C                     	;# 
  3486  000D                     	;# 
  3487  000E                     	;# 
  3488  000F                     	;# 
  3489  0010                     	;# 
  3490  0011                     	;# 
  3491  0012                     	;# 
  3492  0013                     	;# 
  3493  0014                     	;# 
  3494  0015                     	;# 
  3495  0016                     	;# 
  3496  0017                     	;# 
  3497  0018                     	;# 
  3498  0019                     	;# 
  3499  001A                     	;# 
  3500  001C                     	;# 
  3501  001C                     	;# 
  3502  001D                     	;# 
  3503  001D                     	;# 
  3504  001E                     	;# 
  3505  001F                     	;# 
  3506  008C                     	;# 
  3507  008C                     	;# 
  3508  008D                     	;# 
  3509  008E                     	;# 
  3510  008E                     	;# 
  3511  008F                     	;# 
  3512  0090                     	;# 
  3513  0090                     	;# 
  3514  0091                     	;# 
  3515  0093                     	;# 
  3516  0094                     	;# 
  3517  0095                     	;# 
  3518  0096                     	;# 
  3519  0097                     	;# 
  3520  0098                     	;# 
  3521  0099                     	;# 
  3522  009A                     	;# 
  3523  009B                     	;# 
  3524  009C                     	;# 
  3525  009D                     	;# 
  3526  009E                     	;# 
  3527  010C                     	;# 
  3528  010D                     	;# 
  3529  010E                     	;# 
  3530  010E                     	;# 
  3531  010F                     	;# 
  3532  0110                     	;# 
  3533  0110                     	;# 
  3534  0111                     	;# 
  3535  0112                     	;# 
  3536  0112                     	;# 
  3537  0113                     	;# 
  3538  0114                     	;# 
  3539  0114                     	;# 
  3540  0115                     	;# 
  3541  0116                     	;# 
  3542  0116                     	;# 
  3543  0117                     	;# 
  3544  0119                     	;# 
  3545  0119                     	;# 
  3546  0119                     	;# 
  3547  011A                     	;# 
  3548  011A                     	;# 
  3549  011A                     	;# 
  3550  011B                     	;# 
  3551  011B                     	;# 
  3552  011B                     	;# 
  3553  011B                     	;# 
  3554  011B                     	;# 
  3555  011C                     	;# 
  3556  011C                     	;# 
  3557  011C                     	;# 
  3558  011D                     	;# 
  3559  011D                     	;# 
  3560  011D                     	;# 
  3561  011E                     	;# 
  3562  011E                     	;# 
  3563  011E                     	;# 
  3564  011F                     	;# 
  3565  011F                     	;# 
  3566  011F                     	;# 
  3567  011F                     	;# 
  3568  011F                     	;# 
  3569  018C                     	;# 
  3570  018D                     	;# 
  3571  018E                     	;# 
  3572  018F                     	;# 
  3573  0190                     	;# 
  3574  0191                     	;# 
  3575  0192                     	;# 
  3576  0196                     	;# 
  3577  0197                     	;# 
  3578  0198                     	;# 
  3579  0199                     	;# 
  3580  019A                     	;# 
  3581  019B                     	;# 
  3582  019C                     	;# 
  3583  020C                     	;# 
  3584  020C                     	;# 
  3585  020D                     	;# 
  3586  020E                     	;# 
  3587  020F                     	;# 
  3588  020F                     	;# 
  3589  0210                     	;# 
  3590  0210                     	;# 
  3591  0211                     	;# 
  3592  0211                     	;# 
  3593  0212                     	;# 
  3594  0212                     	;# 
  3595  0213                     	;# 
  3596  0214                     	;# 
  3597  0215                     	;# 
  3598  0215                     	;# 
  3599  0216                     	;# 
  3600  0216                     	;# 
  3601  0217                     	;# 
  3602  0217                     	;# 
  3603  0218                     	;# 
  3604  0218                     	;# 
  3605  0219                     	;# 
  3606  021A                     	;# 
  3607  021B                     	;# 
  3608  021B                     	;# 
  3609  021C                     	;# 
  3610  021C                     	;# 
  3611  021D                     	;# 
  3612  021D                     	;# 
  3613  021E                     	;# 
  3614  021F                     	;# 
  3615  028C                     	;# 
  3616  028C                     	;# 
  3617  028D                     	;# 
  3618  028D                     	;# 
  3619  028E                     	;# 
  3620  028F                     	;# 
  3621  0290                     	;# 
  3622  0290                     	;# 
  3623  0291                     	;# 
  3624  0292                     	;# 
  3625  0292                     	;# 
  3626  0293                     	;# 
  3627  0293                     	;# 
  3628  0294                     	;# 
  3629  0295                     	;# 
  3630  0296                     	;# 
  3631  0296                     	;# 
  3632  0297                     	;# 
  3633  0298                     	;# 
  3634  0298                     	;# 
  3635  0299                     	;# 
  3636  0299                     	;# 
  3637  029A                     	;# 
  3638  029B                     	;# 
  3639  029C                     	;# 
  3640  029C                     	;# 
  3641  029D                     	;# 
  3642  030C                     	;# 
  3643  030C                     	;# 
  3644  030D                     	;# 
  3645  030E                     	;# 
  3646  030F                     	;# 
  3647  0310                     	;# 
  3648  0310                     	;# 
  3649  0311                     	;# 
  3650  0312                     	;# 
  3651  0313                     	;# 
  3652  0314                     	;# 
  3653  0314                     	;# 
  3654  0315                     	;# 
  3655  0316                     	;# 
  3656  0317                     	;# 
  3657  0318                     	;# 
  3658  0318                     	;# 
  3659  0319                     	;# 
  3660  031A                     	;# 
  3661  031B                     	;# 
  3662  031C                     	;# 
  3663  031C                     	;# 
  3664  031D                     	;# 
  3665  031E                     	;# 
  3666  031F                     	;# 
  3667  038C                     	;# 
  3668  038D                     	;# 
  3669  038E                     	;# 
  3670  0390                     	;# 
  3671  0391                     	;# 
  3672  0392                     	;# 
  3673  040C                     	;# 
  3674  040D                     	;# 
  3675  040E                     	;# 
  3676  040F                     	;# 
  3677  0410                     	;# 
  3678  0411                     	;# 
  3679  0416                     	;# 
  3680  0416                     	;# 
  3681  0417                     	;# 
  3682  0418                     	;# 
  3683  0418                     	;# 
  3684  0419                     	;# 
  3685  041A                     	;# 
  3686  041A                     	;# 
  3687  041B                     	;# 
  3688  041C                     	;# 
  3689  041C                     	;# 
  3690  041D                     	;# 
  3691  041E                     	;# 
  3692  041F                     	;# 
  3693  048C                     	;# 
  3694  048C                     	;# 
  3695  048D                     	;# 
  3696  048E                     	;# 
  3697  048F                     	;# 
  3698  048F                     	;# 
  3699  0490                     	;# 
  3700  0491                     	;# 
  3701  0492                     	;# 
  3702  0492                     	;# 
  3703  0493                     	;# 
  3704  0494                     	;# 
  3705  0495                     	;# 
  3706  0495                     	;# 
  3707  0496                     	;# 
  3708  0497                     	;# 
  3709  0498                     	;# 
  3710  0499                     	;# 
  3711  049A                     	;# 
  3712  049B                     	;# 
  3713  049C                     	;# 
  3714  049D                     	;# 
  3715  050C                     	;# 
  3716  050C                     	;# 
  3717  050D                     	;# 
  3718  050E                     	;# 
  3719  050F                     	;# 
  3720  050F                     	;# 
  3721  0510                     	;# 
  3722  0511                     	;# 
  3723  0512                     	;# 
  3724  0512                     	;# 
  3725  0513                     	;# 
  3726  0514                     	;# 
  3727  0515                     	;# 
  3728  0515                     	;# 
  3729  0516                     	;# 
  3730  0517                     	;# 
  3731  0518                     	;# 
  3732  0519                     	;# 
  3733  051A                     	;# 
  3734  051B                     	;# 
  3735  051C                     	;# 
  3736  051D                     	;# 
  3737  058C                     	;# 
  3738  058C                     	;# 
  3739  058D                     	;# 
  3740  058E                     	;# 
  3741  058F                     	;# 
  3742  058F                     	;# 
  3743  0590                     	;# 
  3744  0591                     	;# 
  3745  0592                     	;# 
  3746  0593                     	;# 
  3747  060C                     	;# 
  3748  060D                     	;# 
  3749  060E                     	;# 
  3750  060F                     	;# 
  3751  0610                     	;# 
  3752  0611                     	;# 
  3753  0612                     	;# 
  3754  0613                     	;# 
  3755  0614                     	;# 
  3756  0616                     	;# 
  3757  0617                     	;# 
  3758  0618                     	;# 
  3759  0619                     	;# 
  3760  061A                     	;# 
  3761  061B                     	;# 
  3762  061C                     	;# 
  3763  061D                     	;# 
  3764  061E                     	;# 
  3765  068C                     	;# 
  3766  068D                     	;# 
  3767  068E                     	;# 
  3768  068F                     	;# 
  3769  0690                     	;# 
  3770  0691                     	;# 
  3771  0692                     	;# 
  3772  0693                     	;# 
  3773  0694                     	;# 
  3774  070C                     	;# 
  3775  070D                     	;# 
  3776  070E                     	;# 
  3777  070F                     	;# 
  3778  0710                     	;# 
  3779  0711                     	;# 
  3780  0712                     	;# 
  3781  0713                     	;# 
  3782  0714                     	;# 
  3783  0716                     	;# 
  3784  0717                     	;# 
  3785  0718                     	;# 
  3786  0719                     	;# 
  3787  071A                     	;# 
  3788  071B                     	;# 
  3789  071C                     	;# 
  3790  071D                     	;# 
  3791  071E                     	;# 
  3792  0796                     	;# 
  3793  0797                     	;# 
  3794  0798                     	;# 
  3795  0799                     	;# 
  3796  079A                     	;# 
  3797  079B                     	;# 
  3798  080C                     	;# 
  3799  080D                     	;# 
  3800  080E                     	;# 
  3801  080F                     	;# 
  3802  0810                     	;# 
  3803  0811                     	;# 
  3804  0812                     	;# 
  3805  0813                     	;# 
  3806  0814                     	;# 
  3807  081A                     	;# 
  3808  081B                     	;# 
  3809  081C                     	;# 
  3810  081D                     	;# 
  3811  081E                     	;# 
  3812  081F                     	;# 
  3813  088C                     	;# 
  3814  088D                     	;# 
  3815  088E                     	;# 
  3816  088F                     	;# 
  3817  0890                     	;# 
  3818  0891                     	;# 
  3819  0892                     	;# 
  3820  0893                     	;# 
  3821  0895                     	;# 
  3822  0896                     	;# 
  3823  0897                     	;# 
  3824  0898                     	;# 
  3825  0899                     	;# 
  3826  089A                     	;# 
  3827  089B                     	;# 
  3828  090C                     	;# 
  3829  090E                     	;# 
  3830  090F                     	;# 
  3831  091F                     	;# 
  3832  091F                     	;# 
  3833  098F                     	;# 
  3834  098F                     	;# 
  3835  0990                     	;# 
  3836  0991                     	;# 
  3837  0992                     	;# 
  3838  0993                     	;# 
  3839  0994                     	;# 
  3840  0995                     	;# 
  3841  0996                     	;# 
  3842  0997                     	;# 
  3843  0E0F                     	;# 
  3844  0E10                     	;# 
  3845  0E11                     	;# 
  3846  0E12                     	;# 
  3847  0E13                     	;# 
  3848  0E14                     	;# 
  3849  0E15                     	;# 
  3850  0E16                     	;# 
  3851  0E17                     	;# 
  3852  0E18                     	;# 
  3853  0E19                     	;# 
  3854  0E1A                     	;# 
  3855  0E1B                     	;# 
  3856  0E1C                     	;# 
  3857  0E1D                     	;# 
  3858  0E1E                     	;# 
  3859  0E1F                     	;# 
  3860  0E20                     	;# 
  3861  0E21                     	;# 
  3862  0E22                     	;# 
  3863  0E23                     	;# 
  3864  0E24                     	;# 
  3865  0E25                     	;# 
  3866  0E26                     	;# 
  3867  0E27                     	;# 
  3868  0E28                     	;# 
  3869  0E29                     	;# 
  3870  0E2A                     	;# 
  3871  0E2B                     	;# 
  3872  0E2C                     	;# 
  3873  0E2D                     	;# 
  3874  0E2E                     	;# 
  3875  0E2F                     	;# 
  3876  0E30                     	;# 
  3877  0E31                     	;# 
  3878  0E32                     	;# 
  3879  0E33                     	;# 
  3880  0E34                     	;# 
  3881  0E35                     	;# 
  3882  0E36                     	;# 
  3883  0E37                     	;# 
  3884  0E8F                     	;# 
  3885  0E90                     	;# 
  3886  0E91                     	;# 
  3887  0E92                     	;# 
  3888  0E93                     	;# 
  3889  0E94                     	;# 
  3890  0E95                     	;# 
  3891  0E96                     	;# 
  3892  0E97                     	;# 
  3893  0E9C                     	;# 
  3894  0E9D                     	;# 
  3895  0E9E                     	;# 
  3896  0EA1                     	;# 
  3897  0EA2                     	;# 
  3898  0EA3                     	;# 
  3899  0EA4                     	;# 
  3900  0EA5                     	;# 
  3901  0EA9                     	;# 
  3902  0EAA                     	;# 
  3903  0EAB                     	;# 
  3904  0EAC                     	;# 
  3905  0EB1                     	;# 
  3906  0EB2                     	;# 
  3907  0EB3                     	;# 
  3908  0EB8                     	;# 
  3909  0EB9                     	;# 
  3910  0EBA                     	;# 
  3911  0EBB                     	;# 
  3912  0EBC                     	;# 
  3913  0EBD                     	;# 
  3914  0EBE                     	;# 
  3915  0EC3                     	;# 
  3916  0EC5                     	;# 
  3917  0EC6                     	;# 
  3918  0EC7                     	;# 
  3919  0EC8                     	;# 
  3920  0EC9                     	;# 
  3921  0ECA                     	;# 
  3922  0ECB                     	;# 
  3923  0ECC                     	;# 
  3924  0F10                     	;# 
  3925  0F11                     	;# 
  3926  0F12                     	;# 
  3927  0F13                     	;# 
  3928  0F14                     	;# 
  3929  0F15                     	;# 
  3930  0F16                     	;# 
  3931  0F17                     	;# 
  3932  0F18                     	;# 
  3933  0F19                     	;# 
  3934  0F1A                     	;# 
  3935  0F1B                     	;# 
  3936  0F1C                     	;# 
  3937  0F1D                     	;# 
  3938  0F1E                     	;# 
  3939  0F1F                     	;# 
  3940  0F20                     	;# 
  3941  0F21                     	;# 
  3942  0F22                     	;# 
  3943  0F23                     	;# 
  3944  0F24                     	;# 
  3945  0F25                     	;# 
  3946  0F26                     	;# 
  3947  0F27                     	;# 
  3948  0F28                     	;# 
  3949  0F29                     	;# 
  3950  0F2A                     	;# 
  3951  0F2B                     	;# 
  3952  0F2C                     	;# 
  3953  0F2D                     	;# 
  3954  0F2E                     	;# 
  3955  0F2F                     	;# 
  3956  0F30                     	;# 
  3957  0F31                     	;# 
  3958  0F32                     	;# 
  3959  0F38                     	;# 
  3960  0F39                     	;# 
  3961  0F3A                     	;# 
  3962  0F3B                     	;# 
  3963  0F3C                     	;# 
  3964  0F3D                     	;# 
  3965  0F3E                     	;# 
  3966  0F3F                     	;# 
  3967  0F40                     	;# 
  3968  0F41                     	;# 
  3969  0F43                     	;# 
  3970  0F44                     	;# 
  3971  0F45                     	;# 
  3972  0F46                     	;# 
  3973  0F47                     	;# 
  3974  0F48                     	;# 
  3975  0F49                     	;# 
  3976  0F4A                     	;# 
  3977  0F4B                     	;# 
  3978  0F4C                     	;# 
  3979  0F4E                     	;# 
  3980  0F4F                     	;# 
  3981  0F50                     	;# 
  3982  0F51                     	;# 
  3983  0F52                     	;# 
  3984  0F53                     	;# 
  3985  0F54                     	;# 
  3986  0F55                     	;# 
  3987  0F56                     	;# 
  3988  0F57                     	;# 
  3989  0F59                     	;# 
  3990  0F5A                     	;# 
  3991  0F5B                     	;# 
  3992  0F5C                     	;# 
  3993  0F5D                     	;# 
  3994  0F61                     	;# 
  3995  0F62                     	;# 
  3996  0F64                     	;# 
  3997  0F65                     	;# 
  3998  0F66                     	;# 
  3999  0F67                     	;# 
  4000  0F68                     	;# 
  4001  0F69                     	;# 
  4002  0F6A                     	;# 
  4003  0F6B                     	;# 
  4004  0F6C                     	;# 
  4005  0F6D                     	;# 
  4006  0FE4                     	;# 
  4007  0FE5                     	;# 
  4008  0FE6                     	;# 
  4009  0FE7                     	;# 
  4010  0FE8                     	;# 
  4011  0FE9                     	;# 
  4012  0FEA                     	;# 
  4013  0FEB                     	;# 
  4014  0FED                     	;# 
  4015  0FEE                     	;# 
  4016  0FEF                     	;# 
  4017  0000                     	;# 
  4018  0001                     	;# 
  4019  0002                     	;# 
  4020  0003                     	;# 
  4021  0004                     	;# 
  4022  0005                     	;# 
  4023  0006                     	;# 
  4024  0007                     	;# 
  4025  0008                     	;# 
  4026  0009                     	;# 
  4027  000A                     	;# 
  4028  000B                     	;# 
  4029  000C                     	;# 
  4030  000D                     	;# 
  4031  000E                     	;# 
  4032  000F                     	;# 
  4033  0010                     	;# 
  4034  0011                     	;# 
  4035  0012                     	;# 
  4036  0013                     	;# 
  4037  0014                     	;# 
  4038  0015                     	;# 
  4039  0016                     	;# 
  4040  0017                     	;# 
  4041  0018                     	;# 
  4042  0019                     	;# 
  4043  001A                     	;# 
  4044  001C                     	;# 
  4045  001C                     	;# 
  4046  001D                     	;# 
  4047  001D                     	;# 
  4048  001E                     	;# 
  4049  001F                     	;# 
  4050  008C                     	;# 
  4051  008C                     	;# 
  4052  008D                     	;# 
  4053  008E                     	;# 
  4054  008E                     	;# 
  4055  008F                     	;# 
  4056  0090                     	;# 
  4057  0090                     	;# 
  4058  0091                     	;# 
  4059  0093                     	;# 
  4060  0094                     	;# 
  4061  0095                     	;# 
  4062  0096                     	;# 
  4063  0097                     	;# 
  4064  0098                     	;# 
  4065  0099                     	;# 
  4066  009A                     	;# 
  4067  009B                     	;# 
  4068  009C                     	;# 
  4069  009D                     	;# 
  4070  009E                     	;# 
  4071  010C                     	;# 
  4072  010D                     	;# 
  4073  010E                     	;# 
  4074  010E                     	;# 
  4075  010F                     	;# 
  4076  0110                     	;# 
  4077  0110                     	;# 
  4078  0111                     	;# 
  4079  0112                     	;# 
  4080  0112                     	;# 
  4081  0113                     	;# 
  4082  0114                     	;# 
  4083  0114                     	;# 
  4084  0115                     	;# 
  4085  0116                     	;# 
  4086  0116                     	;# 
  4087  0117                     	;# 
  4088  0119                     	;# 
  4089  0119                     	;# 
  4090  0119                     	;# 
  4091  011A                     	;# 
  4092  011A                     	;# 
  4093  011A                     	;# 
  4094  011B                     	;# 
  4095  011B                     	;# 
  4096  011B                     	;# 
  4097  011B                     	;# 
  4098  011B                     	;# 
  4099  011C                     	;# 
  4100  011C                     	;# 
  4101  011C                     	;# 
  4102  011D                     	;# 
  4103  011D                     	;# 
  4104  011D                     	;# 
  4105  011E                     	;# 
  4106  011E                     	;# 
  4107  011E                     	;# 
  4108  011F                     	;# 
  4109  011F                     	;# 
  4110  011F                     	;# 
  4111  011F                     	;# 
  4112  011F                     	;# 
  4113  018C                     	;# 
  4114  018D                     	;# 
  4115  018E                     	;# 
  4116  018F                     	;# 
  4117  0190                     	;# 
  4118  0191                     	;# 
  4119  0192                     	;# 
  4120  0196                     	;# 
  4121  0197                     	;# 
  4122  0198                     	;# 
  4123  0199                     	;# 
  4124  019A                     	;# 
  4125  019B                     	;# 
  4126  019C                     	;# 
  4127  020C                     	;# 
  4128  020C                     	;# 
  4129  020D                     	;# 
  4130  020E                     	;# 
  4131  020F                     	;# 
  4132  020F                     	;# 
  4133  0210                     	;# 
  4134  0210                     	;# 
  4135  0211                     	;# 
  4136  0211                     	;# 
  4137  0212                     	;# 
  4138  0212                     	;# 
  4139  0213                     	;# 
  4140  0214                     	;# 
  4141  0215                     	;# 
  4142  0215                     	;# 
  4143  0216                     	;# 
  4144  0216                     	;# 
  4145  0217                     	;# 
  4146  0217                     	;# 
  4147  0218                     	;# 
  4148  0218                     	;# 
  4149  0219                     	;# 
  4150  021A                     	;# 
  4151  021B                     	;# 
  4152  021B                     	;# 
  4153  021C                     	;# 
  4154  021C                     	;# 
  4155  021D                     	;# 
  4156  021D                     	;# 
  4157  021E                     	;# 
  4158  021F                     	;# 
  4159  028C                     	;# 
  4160  028C                     	;# 
  4161  028D                     	;# 
  4162  028D                     	;# 
  4163  028E                     	;# 
  4164  028F                     	;# 
  4165  0290                     	;# 
  4166  0290                     	;# 
  4167  0291                     	;# 
  4168  0292                     	;# 
  4169  0292                     	;# 
  4170  0293                     	;# 
  4171  0293                     	;# 
  4172  0294                     	;# 
  4173  0295                     	;# 
  4174  0296                     	;# 
  4175  0296                     	;# 
  4176  0297                     	;# 
  4177  0298                     	;# 
  4178  0298                     	;# 
  4179  0299                     	;# 
  4180  0299                     	;# 
  4181  029A                     	;# 
  4182  029B                     	;# 
  4183  029C                     	;# 
  4184  029C                     	;# 
  4185  029D                     	;# 
  4186  030C                     	;# 
  4187  030C                     	;# 
  4188  030D                     	;# 
  4189  030E                     	;# 
  4190  030F                     	;# 
  4191  0310                     	;# 
  4192  0310                     	;# 
  4193  0311                     	;# 
  4194  0312                     	;# 
  4195  0313                     	;# 
  4196  0314                     	;# 
  4197  0314                     	;# 
  4198  0315                     	;# 
  4199  0316                     	;# 
  4200  0317                     	;# 
  4201  0318                     	;# 
  4202  0318                     	;# 
  4203  0319                     	;# 
  4204  031A                     	;# 
  4205  031B                     	;# 
  4206  031C                     	;# 
  4207  031C                     	;# 
  4208  031D                     	;# 
  4209  031E                     	;# 
  4210  031F                     	;# 
  4211  038C                     	;# 
  4212  038D                     	;# 
  4213  038E                     	;# 
  4214  0390                     	;# 
  4215  0391                     	;# 
  4216  0392                     	;# 
  4217  040C                     	;# 
  4218  040D                     	;# 
  4219  040E                     	;# 
  4220  040F                     	;# 
  4221  0410                     	;# 
  4222  0411                     	;# 
  4223  0416                     	;# 
  4224  0416                     	;# 
  4225  0417                     	;# 
  4226  0418                     	;# 
  4227  0418                     	;# 
  4228  0419                     	;# 
  4229  041A                     	;# 
  4230  041A                     	;# 
  4231  041B                     	;# 
  4232  041C                     	;# 
  4233  041C                     	;# 
  4234  041D                     	;# 
  4235  041E                     	;# 
  4236  041F                     	;# 
  4237  048C                     	;# 
  4238  048C                     	;# 
  4239  048D                     	;# 
  4240  048E                     	;# 
  4241  048F                     	;# 
  4242  048F                     	;# 
  4243  0490                     	;# 
  4244  0491                     	;# 
  4245  0492                     	;# 
  4246  0492                     	;# 
  4247  0493                     	;# 
  4248  0494                     	;# 
  4249  0495                     	;# 
  4250  0495                     	;# 
  4251  0496                     	;# 
  4252  0497                     	;# 
  4253  0498                     	;# 
  4254  0499                     	;# 
  4255  049A                     	;# 
  4256  049B                     	;# 
  4257  049C                     	;# 
  4258  049D                     	;# 
  4259  050C                     	;# 
  4260  050C                     	;# 
  4261  050D                     	;# 
  4262  050E                     	;# 
  4263  050F                     	;# 
  4264  050F                     	;# 
  4265  0510                     	;# 
  4266  0511                     	;# 
  4267  0512                     	;# 
  4268  0512                     	;# 
  4269  0513                     	;# 
  4270  0514                     	;# 
  4271  0515                     	;# 
  4272  0515                     	;# 
  4273  0516                     	;# 
  4274  0517                     	;# 
  4275  0518                     	;# 
  4276  0519                     	;# 
  4277  051A                     	;# 
  4278  051B                     	;# 
  4279  051C                     	;# 
  4280  051D                     	;# 
  4281  058C                     	;# 
  4282  058C                     	;# 
  4283  058D                     	;# 
  4284  058E                     	;# 
  4285  058F                     	;# 
  4286  058F                     	;# 
  4287  0590                     	;# 
  4288  0591                     	;# 
  4289  0592                     	;# 
  4290  0593                     	;# 
  4291  060C                     	;# 
  4292  060D                     	;# 
  4293  060E                     	;# 
  4294  060F                     	;# 
  4295  0610                     	;# 
  4296  0611                     	;# 
  4297  0612                     	;# 
  4298  0613                     	;# 
  4299  0614                     	;# 
  4300  0616                     	;# 
  4301  0617                     	;# 
  4302  0618                     	;# 
  4303  0619                     	;# 
  4304  061A                     	;# 
  4305  061B                     	;# 
  4306  061C                     	;# 
  4307  061D                     	;# 
  4308  061E                     	;# 
  4309  068C                     	;# 
  4310  068D                     	;# 
  4311  068E                     	;# 
  4312  068F                     	;# 
  4313  0690                     	;# 
  4314  0691                     	;# 
  4315  0692                     	;# 
  4316  0693                     	;# 
  4317  0694                     	;# 
  4318  070C                     	;# 
  4319  070D                     	;# 
  4320  070E                     	;# 
  4321  070F                     	;# 
  4322  0710                     	;# 
  4323  0711                     	;# 
  4324  0712                     	;# 
  4325  0713                     	;# 
  4326  0714                     	;# 
  4327  0716                     	;# 
  4328  0717                     	;# 
  4329  0718                     	;# 
  4330  0719                     	;# 
  4331  071A                     	;# 
  4332  071B                     	;# 
  4333  071C                     	;# 
  4334  071D                     	;# 
  4335  071E                     	;# 
  4336  0796                     	;# 
  4337  0797                     	;# 
  4338  0798                     	;# 
  4339  0799                     	;# 
  4340  079A                     	;# 
  4341  079B                     	;# 
  4342  080C                     	;# 
  4343  080D                     	;# 
  4344  080E                     	;# 
  4345  080F                     	;# 
  4346  0810                     	;# 
  4347  0811                     	;# 
  4348  0812                     	;# 
  4349  0813                     	;# 
  4350  0814                     	;# 
  4351  081A                     	;# 
  4352  081B                     	;# 
  4353  081C                     	;# 
  4354  081D                     	;# 
  4355  081E                     	;# 
  4356  081F                     	;# 
  4357  088C                     	;# 
  4358  088D                     	;# 
  4359  088E                     	;# 
  4360  088F                     	;# 
  4361  0890                     	;# 
  4362  0891                     	;# 
  4363  0892                     	;# 
  4364  0893                     	;# 
  4365  0895                     	;# 
  4366  0896                     	;# 
  4367  0897                     	;# 
  4368  0898                     	;# 
  4369  0899                     	;# 
  4370  089A                     	;# 
  4371  089B                     	;# 
  4372  090C                     	;# 
  4373  090E                     	;# 
  4374  090F                     	;# 
  4375  091F                     	;# 
  4376  091F                     	;# 
  4377  098F                     	;# 
  4378  098F                     	;# 
  4379  0990                     	;# 
  4380  0991                     	;# 
  4381  0992                     	;# 
  4382  0993                     	;# 
  4383  0994                     	;# 
  4384  0995                     	;# 
  4385  0996                     	;# 
  4386  0997                     	;# 
  4387  0E0F                     	;# 
  4388  0E10                     	;# 
  4389  0E11                     	;# 
  4390  0E12                     	;# 
  4391  0E13                     	;# 
  4392  0E14                     	;# 
  4393  0E15                     	;# 
  4394  0E16                     	;# 
  4395  0E17                     	;# 
  4396  0E18                     	;# 
  4397  0E19                     	;# 
  4398  0E1A                     	;# 
  4399  0E1B                     	;# 
  4400  0E1C                     	;# 
  4401  0E1D                     	;# 
  4402  0E1E                     	;# 
  4403  0E1F                     	;# 
  4404  0E20                     	;# 
  4405  0E21                     	;# 
  4406  0E22                     	;# 
  4407  0E23                     	;# 
  4408  0E24                     	;# 
  4409  0E25                     	;# 
  4410  0E26                     	;# 
  4411  0E27                     	;# 
  4412  0E28                     	;# 
  4413  0E29                     	;# 
  4414  0E2A                     	;# 
  4415  0E2B                     	;# 
  4416  0E2C                     	;# 
  4417  0E2D                     	;# 
  4418  0E2E                     	;# 
  4419  0E2F                     	;# 
  4420  0E30                     	;# 
  4421  0E31                     	;# 
  4422  0E32                     	;# 
  4423  0E33                     	;# 
  4424  0E34                     	;# 
  4425  0E35                     	;# 
  4426  0E36                     	;# 
  4427  0E37                     	;# 
  4428  0E8F                     	;# 
  4429  0E90                     	;# 
  4430  0E91                     	;# 
  4431  0E92                     	;# 
  4432  0E93                     	;# 
  4433  0E94                     	;# 
  4434  0E95                     	;# 
  4435  0E96                     	;# 
  4436  0E97                     	;# 
  4437  0E9C                     	;# 
  4438  0E9D                     	;# 
  4439  0E9E                     	;# 
  4440  0EA1                     	;# 
  4441  0EA2                     	;# 
  4442  0EA3                     	;# 
  4443  0EA4                     	;# 
  4444  0EA5                     	;# 
  4445  0EA9                     	;# 
  4446  0EAA                     	;# 
  4447  0EAB                     	;# 
  4448  0EAC                     	;# 
  4449  0EB1                     	;# 
  4450  0EB2                     	;# 
  4451  0EB3                     	;# 
  4452  0EB8                     	;# 
  4453  0EB9                     	;# 
  4454  0EBA                     	;# 
  4455  0EBB                     	;# 
  4456  0EBC                     	;# 
  4457  0EBD                     	;# 
  4458  0EBE                     	;# 
  4459  0EC3                     	;# 
  4460  0EC5                     	;# 
  4461  0EC6                     	;# 
  4462  0EC7                     	;# 
  4463  0EC8                     	;# 
  4464  0EC9                     	;# 
  4465  0ECA                     	;# 
  4466  0ECB                     	;# 
  4467  0ECC                     	;# 
  4468  0F10                     	;# 
  4469  0F11                     	;# 
  4470  0F12                     	;# 
  4471  0F13                     	;# 
  4472  0F14                     	;# 
  4473  0F15                     	;# 
  4474  0F16                     	;# 
  4475  0F17                     	;# 
  4476  0F18                     	;# 
  4477  0F19                     	;# 
  4478  0F1A                     	;# 
  4479  0F1B                     	;# 
  4480  0F1C                     	;# 
  4481  0F1D                     	;# 
  4482  0F1E                     	;# 
  4483  0F1F                     	;# 
  4484  0F20                     	;# 
  4485  0F21                     	;# 
  4486  0F22                     	;# 
  4487  0F23                     	;# 
  4488  0F24                     	;# 
  4489  0F25                     	;# 
  4490  0F26                     	;# 
  4491  0F27                     	;# 
  4492  0F28                     	;# 
  4493  0F29                     	;# 
  4494  0F2A                     	;# 
  4495  0F2B                     	;# 
  4496  0F2C                     	;# 
  4497  0F2D                     	;# 
  4498  0F2E                     	;# 
  4499  0F2F                     	;# 
  4500  0F30                     	;# 
  4501  0F31                     	;# 
  4502  0F32                     	;# 
  4503  0F38                     	;# 
  4504  0F39                     	;# 
  4505  0F3A                     	;# 
  4506  0F3B                     	;# 
  4507  0F3C                     	;# 
  4508  0F3D                     	;# 
  4509  0F3E                     	;# 
  4510  0F3F                     	;# 
  4511  0F40                     	;# 
  4512  0F41                     	;# 
  4513  0F43                     	;# 
  4514  0F44                     	;# 
  4515  0F45                     	;# 
  4516  0F46                     	;# 
  4517  0F47                     	;# 
  4518  0F48                     	;# 
  4519  0F49                     	;# 
  4520  0F4A                     	;# 
  4521  0F4B                     	;# 
  4522  0F4C                     	;# 
  4523  0F4E                     	;# 
  4524  0F4F                     	;# 
  4525  0F50                     	;# 
  4526  0F51                     	;# 
  4527  0F52                     	;# 
  4528  0F53                     	;# 
  4529  0F54                     	;# 
  4530  0F55                     	;# 
  4531  0F56                     	;# 
  4532  0F57                     	;# 
  4533  0F59                     	;# 
  4534  0F5A                     	;# 
  4535  0F5B                     	;# 
  4536  0F5C                     	;# 
  4537  0F5D                     	;# 
  4538  0F61                     	;# 
  4539  0F62                     	;# 
  4540  0F64                     	;# 
  4541  0F65                     	;# 
  4542  0F66                     	;# 
  4543  0F67                     	;# 
  4544  0F68                     	;# 
  4545  0F69                     	;# 
  4546  0F6A                     	;# 
  4547  0F6B                     	;# 
  4548  0F6C                     	;# 
  4549  0F6D                     	;# 
  4550  0FE4                     	;# 
  4551  0FE5                     	;# 
  4552  0FE6                     	;# 
  4553  0FE7                     	;# 
  4554  0FE8                     	;# 
  4555  0FE9                     	;# 
  4556  0FEA                     	;# 
  4557  0FEB                     	;# 
  4558  0FED                     	;# 
  4559  0FEE                     	;# 
  4560  0FEF                     	;# 
  4561  0000                     	;# 
  4562  0001                     	;# 
  4563  0002                     	;# 
  4564  0003                     	;# 
  4565  0004                     	;# 
  4566  0005                     	;# 
  4567  0006                     	;# 
  4568  0007                     	;# 
  4569  0008                     	;# 
  4570  0009                     	;# 
  4571  000A                     	;# 
  4572  000B                     	;# 
  4573  000C                     	;# 
  4574  000D                     	;# 
  4575  000E                     	;# 
  4576  000F                     	;# 
  4577  0010                     	;# 
  4578  0011                     	;# 
  4579  0012                     	;# 
  4580  0013                     	;# 
  4581  0014                     	;# 
  4582  0015                     	;# 
  4583  0016                     	;# 
  4584  0017                     	;# 
  4585  0018                     	;# 
  4586  0019                     	;# 
  4587  001A                     	;# 
  4588  001C                     	;# 
  4589  001C                     	;# 
  4590  001D                     	;# 
  4591  001D                     	;# 
  4592  001E                     	;# 
  4593  001F                     	;# 
  4594  008C                     	;# 
  4595  008C                     	;# 
  4596  008D                     	;# 
  4597  008E                     	;# 
  4598  008E                     	;# 
  4599  008F                     	;# 
  4600  0090                     	;# 
  4601  0090                     	;# 
  4602  0091                     	;# 
  4603  0093                     	;# 
  4604  0094                     	;# 
  4605  0095                     	;# 
  4606  0096                     	;# 
  4607  0097                     	;# 
  4608  0098                     	;# 
  4609  0099                     	;# 
  4610  009A                     	;# 
  4611  009B                     	;# 
  4612  009C                     	;# 
  4613  009D                     	;# 
  4614  009E                     	;# 
  4615  010C                     	;# 
  4616  010D                     	;# 
  4617  010E                     	;# 
  4618  010E                     	;# 
  4619  010F                     	;# 
  4620  0110                     	;# 
  4621  0110                     	;# 
  4622  0111                     	;# 
  4623  0112                     	;# 
  4624  0112                     	;# 
  4625  0113                     	;# 
  4626  0114                     	;# 
  4627  0114                     	;# 
  4628  0115                     	;# 
  4629  0116                     	;# 
  4630  0116                     	;# 
  4631  0117                     	;# 
  4632  0119                     	;# 
  4633  0119                     	;# 
  4634  0119                     	;# 
  4635  011A                     	;# 
  4636  011A                     	;# 
  4637  011A                     	;# 
  4638  011B                     	;# 
  4639  011B                     	;# 
  4640  011B                     	;# 
  4641  011B                     	;# 
  4642  011B                     	;# 
  4643  011C                     	;# 
  4644  011C                     	;# 
  4645  011C                     	;# 
  4646  011D                     	;# 
  4647  011D                     	;# 
  4648  011D                     	;# 
  4649  011E                     	;# 
  4650  011E                     	;# 
  4651  011E                     	;# 
  4652  011F                     	;# 
  4653  011F                     	;# 
  4654  011F                     	;# 
  4655  011F                     	;# 
  4656  011F                     	;# 
  4657  018C                     	;# 
  4658  018D                     	;# 
  4659  018E                     	;# 
  4660  018F                     	;# 
  4661  0190                     	;# 
  4662  0191                     	;# 
  4663  0192                     	;# 
  4664  0196                     	;# 
  4665  0197                     	;# 
  4666  0198                     	;# 
  4667  0199                     	;# 
  4668  019A                     	;# 
  4669  019B                     	;# 
  4670  019C                     	;# 
  4671  020C                     	;# 
  4672  020C                     	;# 
  4673  020D                     	;# 
  4674  020E                     	;# 
  4675  020F                     	;# 
  4676  020F                     	;# 
  4677  0210                     	;# 
  4678  0210                     	;# 
  4679  0211                     	;# 
  4680  0211                     	;# 
  4681  0212                     	;# 
  4682  0212                     	;# 
  4683  0213                     	;# 
  4684  0214                     	;# 
  4685  0215                     	;# 
  4686  0215                     	;# 
  4687  0216                     	;# 
  4688  0216                     	;# 
  4689  0217                     	;# 
  4690  0217                     	;# 
  4691  0218                     	;# 
  4692  0218                     	;# 
  4693  0219                     	;# 
  4694  021A                     	;# 
  4695  021B                     	;# 
  4696  021B                     	;# 
  4697  021C                     	;# 
  4698  021C                     	;# 
  4699  021D                     	;# 
  4700  021D                     	;# 
  4701  021E                     	;# 
  4702  021F                     	;# 
  4703  028C                     	;# 
  4704  028C                     	;# 
  4705  028D                     	;# 
  4706  028D                     	;# 
  4707  028E                     	;# 
  4708  028F                     	;# 
  4709  0290                     	;# 
  4710  0290                     	;# 
  4711  0291                     	;# 
  4712  0292                     	;# 
  4713  0292                     	;# 
  4714  0293                     	;# 
  4715  0293                     	;# 
  4716  0294                     	;# 
  4717  0295                     	;# 
  4718  0296                     	;# 
  4719  0296                     	;# 
  4720  0297                     	;# 
  4721  0298                     	;# 
  4722  0298                     	;# 
  4723  0299                     	;# 
  4724  0299                     	;# 
  4725  029A                     	;# 
  4726  029B                     	;# 
  4727  029C                     	;# 
  4728  029C                     	;# 
  4729  029D                     	;# 
  4730  030C                     	;# 
  4731  030C                     	;# 
  4732  030D                     	;# 
  4733  030E                     	;# 
  4734  030F                     	;# 
  4735  0310                     	;# 
  4736  0310                     	;# 
  4737  0311                     	;# 
  4738  0312                     	;# 
  4739  0313                     	;# 
  4740  0314                     	;# 
  4741  0314                     	;# 
  4742  0315                     	;# 
  4743  0316                     	;# 
  4744  0317                     	;# 
  4745  0318                     	;# 
  4746  0318                     	;# 
  4747  0319                     	;# 
  4748  031A                     	;# 
  4749  031B                     	;# 
  4750  031C                     	;# 
  4751  031C                     	;# 
  4752  031D                     	;# 
  4753  031E                     	;# 
  4754  031F                     	;# 
  4755  038C                     	;# 
  4756  038D                     	;# 
  4757  038E                     	;# 
  4758  0390                     	;# 
  4759  0391                     	;# 
  4760  0392                     	;# 
  4761  040C                     	;# 
  4762  040D                     	;# 
  4763  040E                     	;# 
  4764  040F                     	;# 
  4765  0410                     	;# 
  4766  0411                     	;# 
  4767  0416                     	;# 
  4768  0416                     	;# 
  4769  0417                     	;# 
  4770  0418                     	;# 
  4771  0418                     	;# 
  4772  0419                     	;# 
  4773  041A                     	;# 
  4774  041A                     	;# 
  4775  041B                     	;# 
  4776  041C                     	;# 
  4777  041C                     	;# 
  4778  041D                     	;# 
  4779  041E                     	;# 
  4780  041F                     	;# 
  4781  048C                     	;# 
  4782  048C                     	;# 
  4783  048D                     	;# 
  4784  048E                     	;# 
  4785  048F                     	;# 
  4786  048F                     	;# 
  4787  0490                     	;# 
  4788  0491                     	;# 
  4789  0492                     	;# 
  4790  0492                     	;# 
  4791  0493                     	;# 
  4792  0494                     	;# 
  4793  0495                     	;# 
  4794  0495                     	;# 
  4795  0496                     	;# 
  4796  0497                     	;# 
  4797  0498                     	;# 
  4798  0499                     	;# 
  4799  049A                     	;# 
  4800  049B                     	;# 
  4801  049C                     	;# 
  4802  049D                     	;# 
  4803  050C                     	;# 
  4804  050C                     	;# 
  4805  050D                     	;# 
  4806  050E                     	;# 
  4807  050F                     	;# 
  4808  050F                     	;# 
  4809  0510                     	;# 
  4810  0511                     	;# 
  4811  0512                     	;# 
  4812  0512                     	;# 
  4813  0513                     	;# 
  4814  0514                     	;# 
  4815  0515                     	;# 
  4816  0515                     	;# 
  4817  0516                     	;# 
  4818  0517                     	;# 
  4819  0518                     	;# 
  4820  0519                     	;# 
  4821  051A                     	;# 
  4822  051B                     	;# 
  4823  051C                     	;# 
  4824  051D                     	;# 
  4825  058C                     	;# 
  4826  058C                     	;# 
  4827  058D                     	;# 
  4828  058E                     	;# 
  4829  058F                     	;# 
  4830  058F                     	;# 
  4831  0590                     	;# 
  4832  0591                     	;# 
  4833  0592                     	;# 
  4834  0593                     	;# 
  4835  060C                     	;# 
  4836  060D                     	;# 
  4837  060E                     	;# 
  4838  060F                     	;# 
  4839  0610                     	;# 
  4840  0611                     	;# 
  4841  0612                     	;# 
  4842  0613                     	;# 
  4843  0614                     	;# 
  4844  0616                     	;# 
  4845  0617                     	;# 
  4846  0618                     	;# 
  4847  0619                     	;# 
  4848  061A                     	;# 
  4849  061B                     	;# 
  4850  061C                     	;# 
  4851  061D                     	;# 
  4852  061E                     	;# 
  4853  068C                     	;# 
  4854  068D                     	;# 
  4855  068E                     	;# 
  4856  068F                     	;# 
  4857  0690                     	;# 
  4858  0691                     	;# 
  4859  0692                     	;# 
  4860  0693                     	;# 
  4861  0694                     	;# 
  4862  070C                     	;# 
  4863  070D                     	;# 
  4864  070E                     	;# 
  4865  070F                     	;# 
  4866  0710                     	;# 
  4867  0711                     	;# 
  4868  0712                     	;# 
  4869  0713                     	;# 
  4870  0714                     	;# 
  4871  0716                     	;# 
  4872  0717                     	;# 
  4873  0718                     	;# 
  4874  0719                     	;# 
  4875  071A                     	;# 
  4876  071B                     	;# 
  4877  071C                     	;# 
  4878  071D                     	;# 
  4879  071E                     	;# 
  4880  0796                     	;# 
  4881  0797                     	;# 
  4882  0798                     	;# 
  4883  0799                     	;# 
  4884  079A                     	;# 
  4885  079B                     	;# 
  4886  080C                     	;# 
  4887  080D                     	;# 
  4888  080E                     	;# 
  4889  080F                     	;# 
  4890  0810                     	;# 
  4891  0811                     	;# 
  4892  0812                     	;# 
  4893  0813                     	;# 
  4894  0814                     	;# 
  4895  081A                     	;# 
  4896  081B                     	;# 
  4897  081C                     	;# 
  4898  081D                     	;# 
  4899  081E                     	;# 
  4900  081F                     	;# 
  4901  088C                     	;# 
  4902  088D                     	;# 
  4903  088E                     	;# 
  4904  088F                     	;# 
  4905  0890                     	;# 
  4906  0891                     	;# 
  4907  0892                     	;# 
  4908  0893                     	;# 
  4909  0895                     	;# 
  4910  0896                     	;# 
  4911  0897                     	;# 
  4912  0898                     	;# 
  4913  0899                     	;# 
  4914  089A                     	;# 
  4915  089B                     	;# 
  4916  090C                     	;# 
  4917  090E                     	;# 
  4918  090F                     	;# 
  4919  091F                     	;# 
  4920  091F                     	;# 
  4921  098F                     	;# 
  4922  098F                     	;# 
  4923  0990                     	;# 
  4924  0991                     	;# 
  4925  0992                     	;# 
  4926  0993                     	;# 
  4927  0994                     	;# 
  4928  0995                     	;# 
  4929  0996                     	;# 
  4930  0997                     	;# 
  4931  0E0F                     	;# 
  4932  0E10                     	;# 
  4933  0E11                     	;# 
  4934  0E12                     	;# 
  4935  0E13                     	;# 
  4936  0E14                     	;# 
  4937  0E15                     	;# 
  4938  0E16                     	;# 
  4939  0E17                     	;# 
  4940  0E18                     	;# 
  4941  0E19                     	;# 
  4942  0E1A                     	;# 
  4943  0E1B                     	;# 
  4944  0E1C                     	;# 
  4945  0E1D                     	;# 
  4946  0E1E                     	;# 
  4947  0E1F                     	;# 
  4948  0E20                     	;# 
  4949  0E21                     	;# 
  4950  0E22                     	;# 
  4951  0E23                     	;# 
  4952  0E24                     	;# 
  4953  0E25                     	;# 
  4954  0E26                     	;# 
  4955  0E27                     	;# 
  4956  0E28                     	;# 
  4957  0E29                     	;# 
  4958  0E2A                     	;# 
  4959  0E2B                     	;# 
  4960  0E2C                     	;# 
  4961  0E2D                     	;# 
  4962  0E2E                     	;# 
  4963  0E2F                     	;# 
  4964  0E30                     	;# 
  4965  0E31                     	;# 
  4966  0E32                     	;# 
  4967  0E33                     	;# 
  4968  0E34                     	;# 
  4969  0E35                     	;# 
  4970  0E36                     	;# 
  4971  0E37                     	;# 
  4972  0E8F                     	;# 
  4973  0E90                     	;# 
  4974  0E91                     	;# 
  4975  0E92                     	;# 
  4976  0E93                     	;# 
  4977  0E94                     	;# 
  4978  0E95                     	;# 
  4979  0E96                     	;# 
  4980  0E97                     	;# 
  4981  0E9C                     	;# 
  4982  0E9D                     	;# 
  4983  0E9E                     	;# 
  4984  0EA1                     	;# 
  4985  0EA2                     	;# 
  4986  0EA3                     	;# 
  4987  0EA4                     	;# 
  4988  0EA5                     	;# 
  4989  0EA9                     	;# 
  4990  0EAA                     	;# 
  4991  0EAB                     	;# 
  4992  0EAC                     	;# 
  4993  0EB1                     	;# 
  4994  0EB2                     	;# 
  4995  0EB3                     	;# 
  4996  0EB8                     	;# 
  4997  0EB9                     	;# 
  4998  0EBA                     	;# 
  4999  0EBB                     	;# 
  5000  0EBC                     	;# 
  5001  0EBD                     	;# 
  5002  0EBE                     	;# 
  5003  0EC3                     	;# 
  5004  0EC5                     	;# 
  5005  0EC6                     	;# 
  5006  0EC7                     	;# 
  5007  0EC8                     	;# 
  5008  0EC9                     	;# 
  5009  0ECA                     	;# 
  5010  0ECB                     	;# 
  5011  0ECC                     	;# 
  5012  0F10                     	;# 
  5013  0F11                     	;# 
  5014  0F12                     	;# 
  5015  0F13                     	;# 
  5016  0F14                     	;# 
  5017  0F15                     	;# 
  5018  0F16                     	;# 
  5019  0F17                     	;# 
  5020  0F18                     	;# 
  5021  0F19                     	;# 
  5022  0F1A                     	;# 
  5023  0F1B                     	;# 
  5024  0F1C                     	;# 
  5025  0F1D                     	;# 
  5026  0F1E                     	;# 
  5027  0F1F                     	;# 
  5028  0F20                     	;# 
  5029  0F21                     	;# 
  5030  0F22                     	;# 
  5031  0F23                     	;# 
  5032  0F24                     	;# 
  5033  0F25                     	;# 
  5034  0F26                     	;# 
  5035  0F27                     	;# 
  5036  0F28                     	;# 
  5037  0F29                     	;# 
  5038  0F2A                     	;# 
  5039  0F2B                     	;# 
  5040  0F2C                     	;# 
  5041  0F2D                     	;# 
  5042  0F2E                     	;# 
  5043  0F2F                     	;# 
  5044  0F30                     	;# 
  5045  0F31                     	;# 
  5046  0F32                     	;# 
  5047  0F38                     	;# 
  5048  0F39                     	;# 
  5049  0F3A                     	;# 
  5050  0F3B                     	;# 
  5051  0F3C                     	;# 
  5052  0F3D                     	;# 
  5053  0F3E                     	;# 
  5054  0F3F                     	;# 
  5055  0F40                     	;# 
  5056  0F41                     	;# 
  5057  0F43                     	;# 
  5058  0F44                     	;# 
  5059  0F45                     	;# 
  5060  0F46                     	;# 
  5061  0F47                     	;# 
  5062  0F48                     	;# 
  5063  0F49                     	;# 
  5064  0F4A                     	;# 
  5065  0F4B                     	;# 
  5066  0F4C                     	;# 
  5067  0F4E                     	;# 
  5068  0F4F                     	;# 
  5069  0F50                     	;# 
  5070  0F51                     	;# 
  5071  0F52                     	;# 
  5072  0F53                     	;# 
  5073  0F54                     	;# 
  5074  0F55                     	;# 
  5075  0F56                     	;# 
  5076  0F57                     	;# 
  5077  0F59                     	;# 
  5078  0F5A                     	;# 
  5079  0F5B                     	;# 
  5080  0F5C                     	;# 
  5081  0F5D                     	;# 
  5082  0F61                     	;# 
  5083  0F62                     	;# 
  5084  0F64                     	;# 
  5085  0F65                     	;# 
  5086  0F66                     	;# 
  5087  0F67                     	;# 
  5088  0F68                     	;# 
  5089  0F69                     	;# 
  5090  0F6A                     	;# 
  5091  0F6B                     	;# 
  5092  0F6C                     	;# 
  5093  0F6D                     	;# 
  5094  0FE4                     	;# 
  5095  0FE5                     	;# 
  5096  0FE6                     	;# 
  5097  0FE7                     	;# 
  5098  0FE8                     	;# 
  5099  0FE9                     	;# 
  5100  0FEA                     	;# 
  5101  0FEB                     	;# 
  5102  0FED                     	;# 
  5103  0FEE                     	;# 
  5104  0FEF                     	;_displayArray
  5105                           
  5106                           	psect	idataBIGRAM
  5107  025C                     __pidataBIGRAM:	
  5108                           
  5109                           ;initializer for _displayArray
  5110  025C  343F               	retlw	63
  5111  025D  3440               	retlw	64
  5112  025E  3438               	retlw	56
  5113  025F  3440               	retlw	64
  5114  0260  343F               	retlw	63
  5115  0261  3438               	retlw	56
  5116  0262  3454               	retlw	84
  5117  0263  3454               	retlw	84
  5118  0264  3454               	retlw	84
  5119  0265  3418               	retlw	24
  5120  0266  3400               	retlw	0
  5121  0267  3441               	retlw	65
  5122  0268  347F               	retlw	127
  5123  0269  3440               	retlw	64
  5124  026A  3400               	retlw	0
  5125  026B  3438               	retlw	56
  5126  026C  3444               	retlw	68
  5127  026D  3444               	retlw	68
  5128  026E  3444               	retlw	68
  5129  026F  3428               	retlw	40
  5130  0270  3438               	retlw	56
  5131  0271  3444               	retlw	68
  5132  0272  3444               	retlw	68
  5133  0273  3444               	retlw	68
  5134  0274  3438               	retlw	56
  5135  0275  347C               	retlw	124
  5136  0276  3404               	retlw	4
  5137  0277  3478               	retlw	120
  5138  0278  3404               	retlw	4
  5139  0279  3478               	retlw	120
  5140  027A  3438               	retlw	56
  5141  027B  3454               	retlw	84
  5142  027C  3454               	retlw	84
  5143  027D  3454               	retlw	84
  5144  027E  3418               	retlw	24
  5145  027F  3400               	retlw	0
  5146  0280  3400               	retlw	0
  5147  0281  3400               	retlw	0
  5148  0282  3400               	retlw	0
  5149  0283  3400               	retlw	0
  5150  0284  3400               	retlw	0
  5151  0285  3400               	retlw	0
  5152  0286  3400               	retlw	0
  5153  0287  3400               	retlw	0
  5154  0288  3400               	retlw	0
  5155  0289  347F               	retlw	127
  5156  028A  3441               	retlw	65
  5157  028B  3441               	retlw	65
  5158  028C  3441               	retlw	65
  5159  028D  343E               	retlw	62
  5160  028E  3400               	retlw	0
  5161  028F  3444               	retlw	68
  5162  0290  347D               	retlw	125
  5163  0291  3440               	retlw	64
  5164  0292  3400               	retlw	0
  5165  0293  3400               	retlw	0
  5166  0294  3408               	retlw	8
  5167  0295  347E               	retlw	126
  5168  0296  3409               	retlw	9
  5169  0297  3402               	retlw	2
  5170  0298  3400               	retlw	0
  5171  0299  3408               	retlw	8
  5172  029A  347E               	retlw	126
  5173  029B  3409               	retlw	9
  5174  029C  3402               	retlw	2
  5175  029D  343C               	retlw	60
  5176  029E  3440               	retlw	64
  5177  029F  3440               	retlw	64
  5178  02A0  3420               	retlw	32
  5179  02A1  347C               	retlw	124
  5180  02A2  3448               	retlw	72
  5181  02A3  3454               	retlw	84
  5182  02A4  3454               	retlw	84
  5183  02A5  3454               	retlw	84
  5184  02A6  3424               	retlw	36
  5185  02A7  3438               	retlw	56
  5186  02A8  3454               	retlw	84
  5187  02A9  3454               	retlw	84
  5188  02AA  3454               	retlw	84
  5189  02AB  3418               	retlw	24
  5190  02AC  347C               	retlw	124
  5191  02AD  3408               	retlw	8
  5192  02AE  3404               	retlw	4
  5193  02AF  3404               	retlw	4
  5194  02B0  3408               	retlw	8
  5195  02B1  3400               	retlw	0
  5196  02B2  3400               	retlw	0
  5197  02B3  3400               	retlw	0
  5198  02B4  3400               	retlw	0
  5199  02B5  3400               	retlw	0
  5200  02B6  3400               	retlw	0
  5201  02B7  3400               	retlw	0
  5202  02B8  3400               	retlw	0
  5203  02B9  3400               	retlw	0
  5204  02BA  3400               	retlw	0
  5205  02BB  3400               	retlw	0
  5206  02BC  3400               	retlw	0
  5207  02BD  3400               	retlw	0
  5208  02BE  3400               	retlw	0
  5209  02BF  3400               	retlw	0
  5210  02C0  3400               	retlw	0
  5211  02C1  3400               	retlw	0
  5212  02C2  3400               	retlw	0
  5213  02C3  3400               	retlw	0
  5214  02C4  3400               	retlw	0
  5215  02C5  3400               	retlw	0
  5216  02C6  3400               	retlw	0
  5217  02C7  3400               	retlw	0
  5218  02C8  3400               	retlw	0
  5219  02C9  3400               	retlw	0
  5220  02CA  3400               	retlw	0
  5221  02CB  3400               	retlw	0
  5222  02CC  3400               	retlw	0
  5223  02CD  3400               	retlw	0
  5224  02CE  3400               	retlw	0
  5225  02CF  3400               	retlw	0
  5226  02D0  3400               	retlw	0
  5227  02D1  3400               	retlw	0
  5228  02D2  3400               	retlw	0
  5229  02D3  3400               	retlw	0
  5230  02D4  3400               	retlw	0
  5231  02D5  3400               	retlw	0
  5232  02D6  3400               	retlw	0
  5233  02D7  3400               	retlw	0
  5234  02D8  3400               	retlw	0
  5235  02D9  3400               	retlw	0
  5236  02DA  3400               	retlw	0
  5237  02DB  3400               	retlw	0
  5238  02DC  3400               	retlw	0
  5239  02DD  3400               	retlw	0
  5240  02DE  3400               	retlw	0
  5241  02DF  3400               	retlw	0
  5242  02E0  3400               	retlw	0
  5243  02E1  3400               	retlw	0
  5244  02E2  3400               	retlw	0
  5245  02E3  3400               	retlw	0
  5246  02E4  3400               	retlw	0
  5247  02E5  3400               	retlw	0
  5248  02E6  3400               	retlw	0
  5249  02E7  3400               	retlw	0
  5250  02E8  3400               	retlw	0
  5251  02E9  3400               	retlw	0
  5252  02EA  3400               	retlw	0
  5253  02EB  3400               	retlw	0
  5254  02EC  3400               	retlw	0
  5255  02ED  3400               	retlw	0
  5256  02EE  3400               	retlw	0
  5257  02EF  3400               	retlw	0
  5258  02F0  3400               	retlw	0
  5259  02F1  3400               	retlw	0
  5260  02F2  3400               	retlw	0
  5261  02F3  3400               	retlw	0
  5262  02F4  3400               	retlw	0
  5263  02F5  3400               	retlw	0
  5264  02F6  3400               	retlw	0
  5265  02F7  3400               	retlw	0
  5266  02F8  3400               	retlw	0
  5267  02F9  3400               	retlw	0
  5268  02FA  3400               	retlw	0
  5269  02FB  3400               	retlw	0
  5270  02FC  3400               	retlw	0
  5271  02FD  3400               	retlw	0
  5272  02FE  3400               	retlw	0
  5273  02FF  3400               	retlw	0
  5274  0300  3400               	retlw	0
  5275  0301  3400               	retlw	0
  5276  0302  3400               	retlw	0
  5277  0303  3400               	retlw	0
  5278  0304  3400               	retlw	0
  5279  0305  3400               	retlw	0
  5280  0306  3400               	retlw	0
  5281  0307  3400               	retlw	0
  5282  0308  3400               	retlw	0
  5283  0309  3400               	retlw	0
  5284  030A  3400               	retlw	0
  5285  030B  3400               	retlw	0
  5286  030C  3400               	retlw	0
  5287  030D  3400               	retlw	0
  5288  030E  3400               	retlw	0
  5289  030F  3400               	retlw	0
  5290  0310  3400               	retlw	0
  5291  0311  3400               	retlw	0
  5292  0312  3400               	retlw	0
  5293  0313  3400               	retlw	0
  5294  0314  3400               	retlw	0
  5295  0315  3400               	retlw	0
  5296  0316  3400               	retlw	0
  5297  0317  3400               	retlw	0
  5298  0318  3400               	retlw	0
  5299  0319  3400               	retlw	0
  5300  031A  3400               	retlw	0
  5301  031B  3400               	retlw	0
  5302  031C  3400               	retlw	0
  5303  031D  3400               	retlw	0
  5304  031E  3400               	retlw	0
  5305  031F  3400               	retlw	0
  5306  0320  3400               	retlw	0
  5307  0321  3400               	retlw	0
  5308  0322  3400               	retlw	0
  5309  0323  3400               	retlw	0
  5310  0324  3400               	retlw	0
  5311  0325  3400               	retlw	0
  5312  0326  3400               	retlw	0
  5313  0327  3400               	retlw	0
  5314  0328  3400               	retlw	0
  5315  0329  3400               	retlw	0
  5316  032A  3400               	retlw	0
  5317  032B  3400               	retlw	0
  5318  032C  3400               	retlw	0
  5319  032D  3400               	retlw	0
  5320  032E  3400               	retlw	0
  5321  032F  3400               	retlw	0
  5322  0330  3400               	retlw	0
  5323  0331  3400               	retlw	0
  5324  0332  3400               	retlw	0
  5325  0333  3400               	retlw	0
  5326  0334  3400               	retlw	0
  5327  0335  3400               	retlw	0
  5328  0336  3400               	retlw	0
  5329  0337  3400               	retlw	0
  5330  0338  3400               	retlw	0
  5331  0339  3400               	retlw	0
  5332  033A  3400               	retlw	0
  5333  033B  3400               	retlw	0
  5334  033C  3400               	retlw	0
  5335  033D  3400               	retlw	0
  5336  033E  3400               	retlw	0
  5337  033F  3400               	retlw	0
  5338  0340  3400               	retlw	0
  5339  0341  3400               	retlw	0
  5340  0342  3400               	retlw	0
  5341  0343  3400               	retlw	0
  5342  0344  3400               	retlw	0
  5343  0345  3400               	retlw	0
  5344  0346  3400               	retlw	0
  5345  0347  3400               	retlw	0
  5346  0348  3400               	retlw	0
  5347  0349  3400               	retlw	0
  5348  034A  3400               	retlw	0
  5349  034B  3400               	retlw	0
  5350  034C  3400               	retlw	0
  5351  034D  3400               	retlw	0
  5352  034E  3400               	retlw	0
  5353  034F  3400               	retlw	0
  5354  0350  3400               	retlw	0
  5355  0351  3400               	retlw	0
  5356  0352  3400               	retlw	0
  5357  0353  3400               	retlw	0
  5358  0354  3400               	retlw	0
  5359  0355  3400               	retlw	0
  5360  0356  3400               	retlw	0
  5361  0357  3400               	retlw	0
  5362  0358  3400               	retlw	0
  5363  0359  3400               	retlw	0
  5364  035A  3400               	retlw	0
  5365  035B  3400               	retlw	0
  5366  035C  3400               	retlw	0
  5367  035D  3400               	retlw	0
  5368  035E  3400               	retlw	0
  5369  035F  3400               	retlw	0
  5370  0360  3400               	retlw	0
  5371  0361  3400               	retlw	0
  5372  0362  3400               	retlw	0
  5373  0363  3400               	retlw	0
  5374  0364  3400               	retlw	0
  5375  0365  3400               	retlw	0
  5376  0366  3400               	retlw	0
  5377  0367  3400               	retlw	0
  5378  0368  3400               	retlw	0
  5379  0369  3400               	retlw	0
  5380  036A  3400               	retlw	0
  5381  036B  3400               	retlw	0
  5382  036C  3400               	retlw	0
  5383  036D  3400               	retlw	0
  5384  036E  3400               	retlw	0
  5385  036F  3400               	retlw	0
  5386  0370  3400               	retlw	0
  5387  0371  3400               	retlw	0
  5388  0372  3400               	retlw	0
  5389  0373  3400               	retlw	0
  5390  0374  3400               	retlw	0
  5391  0375  3400               	retlw	0
  5392  0376  3400               	retlw	0
  5393  0377  3400               	retlw	0
  5394  0378  3400               	retlw	0
  5395  0379  3400               	retlw	0
  5396  037A  3400               	retlw	0
  5397  037B  3400               	retlw	0
  5398  037C  3400               	retlw	0
  5399  037D  3400               	retlw	0
  5400  037E  3400               	retlw	0
  5401  037F  3400               	retlw	0
  5402  0380  3400               	retlw	0
  5403  0381  3400               	retlw	0
  5404  0382  3400               	retlw	0
  5405  0383  3400               	retlw	0
  5406  0384  3400               	retlw	0
  5407  0385  3400               	retlw	0
  5408  0386  3400               	retlw	0
  5409  0387  3400               	retlw	0
  5410  0388  3400               	retlw	0
  5411  0389  3400               	retlw	0
  5412  038A  3400               	retlw	0
  5413  038B  3400               	retlw	0
  5414  038C  3400               	retlw	0
  5415  038D  3400               	retlw	0
  5416  038E  3400               	retlw	0
  5417  038F  3400               	retlw	0
  5418  0390  3400               	retlw	0
  5419  0391  3400               	retlw	0
  5420  0392  3400               	retlw	0
  5421  0393  3400               	retlw	0
  5422  0394  3400               	retlw	0
  5423  0395  3400               	retlw	0
  5424  0396  3400               	retlw	0
  5425  0397  3400               	retlw	0
  5426  0398  3400               	retlw	0
  5427  0399  3400               	retlw	0
  5428  039A  3400               	retlw	0
  5429  039B  3400               	retlw	0
  5430  039C  3400               	retlw	0
  5431  039D  3400               	retlw	0
  5432  039E  3400               	retlw	0
  5433  039F  3400               	retlw	0
  5434  03A0  3400               	retlw	0
  5435  03A1  3400               	retlw	0
  5436  03A2  3400               	retlw	0
  5437  03A3  3400               	retlw	0
  5438  03A4  3400               	retlw	0
  5439  03A5  3400               	retlw	0
  5440  03A6  3400               	retlw	0
  5441  03A7  3400               	retlw	0
  5442  03A8  3400               	retlw	0
  5443  03A9  3400               	retlw	0
  5444  03AA  3400               	retlw	0
  5445  03AB  3400               	retlw	0
  5446  03AC  3400               	retlw	0
  5447  03AD  3400               	retlw	0
  5448  03AE  3400               	retlw	0
  5449  03AF  3400               	retlw	0
  5450  03B0  3400               	retlw	0
  5451  03B1  3400               	retlw	0
  5452  03B2  3400               	retlw	0
  5453  03B3  3400               	retlw	0
  5454  03B4  3400               	retlw	0
  5455  03B5  3400               	retlw	0
  5456  03B6  3400               	retlw	0
  5457  03B7  3400               	retlw	0
  5458  03B8  3400               	retlw	0
  5459  03B9  3400               	retlw	0
  5460  03BA  3400               	retlw	0
  5461  03BB  3400               	retlw	0
  5462  03BC  3400               	retlw	0
  5463  03BD  3400               	retlw	0
  5464  03BE  3400               	retlw	0
  5465  03BF  3400               	retlw	0
  5466  03C0  3400               	retlw	0
  5467  03C1  3400               	retlw	0
  5468  03C2  3400               	retlw	0
  5469  03C3  3400               	retlw	0
  5470  03C4  3400               	retlw	0
  5471  03C5  3400               	retlw	0
  5472  03C6  3400               	retlw	0
  5473  03C7  3400               	retlw	0
  5474  03C8  3400               	retlw	0
  5475  03C9  3400               	retlw	0
  5476  03CA  3400               	retlw	0
  5477  03CB  3400               	retlw	0
  5478  03CC  3400               	retlw	0
  5479  03CD  3400               	retlw	0
  5480  03CE  3400               	retlw	0
  5481  03CF  3400               	retlw	0
  5482  03D0  3400               	retlw	0
  5483  03D1  3400               	retlw	0
  5484  03D2  3400               	retlw	0
  5485  03D3  3400               	retlw	0
  5486  03D4  3400               	retlw	0
  5487  03D5  3400               	retlw	0
  5488  03D6  3400               	retlw	0
  5489  03D7  3400               	retlw	0
  5490  03D8  3400               	retlw	0
  5491  03D9  3400               	retlw	0
  5492  03DA  3400               	retlw	0
  5493  03DB  3400               	retlw	0
  5494  03DC  3400               	retlw	0
  5495  03DD  3400               	retlw	0
  5496  03DE  3400               	retlw	0
  5497  03DF  3400               	retlw	0
  5498  03E0  3400               	retlw	0
  5499  03E1  3400               	retlw	0
  5500  03E2  3400               	retlw	0
  5501  03E3  3400               	retlw	0
  5502  03E4  3400               	retlw	0
  5503  03E5  3400               	retlw	0
  5504  03E6  3400               	retlw	0
  5505  03E7  3400               	retlw	0
  5506  03E8  3400               	retlw	0
  5507  03E9  3400               	retlw	0
  5508  03EA  3400               	retlw	0
  5509  03EB  3400               	retlw	0
  5510  03EC  3400               	retlw	0
  5511  03ED  3400               	retlw	0
  5512  03EE  3400               	retlw	0
  5513  03EF  3400               	retlw	0
  5514  03F0  3400               	retlw	0
  5515  03F1  3400               	retlw	0
  5516  03F2  3400               	retlw	0
  5517  03F3  3400               	retlw	0
  5518  03F4  3400               	retlw	0
  5519  03F5  3400               	retlw	0
  5520  03F6  3400               	retlw	0
  5521  03F7  3400               	retlw	0
  5522  03F8  3400               	retlw	0
  5523  03F9  3400               	retlw	0
  5524  03FA  3400               	retlw	0
  5525  03FB  3400               	retlw	0
  5526  03FC  3400               	retlw	0
  5527  03FD  3400               	retlw	0
  5528  03FE  3400               	retlw	0
  5529  03FF  3400               	retlw	0
  5530  0400  3400               	retlw	0
  5531  0401  3400               	retlw	0
  5532  0402  3400               	retlw	0
  5533  0403  3400               	retlw	0
  5534  0404  3400               	retlw	0
  5535  0405  3400               	retlw	0
  5536  0406  3400               	retlw	0
  5537  0407  3400               	retlw	0
  5538  0408  3400               	retlw	0
  5539  0409  3400               	retlw	0
  5540  040A  3400               	retlw	0
  5541  040B  3400               	retlw	0
  5542  040C  3400               	retlw	0
  5543  040D  3400               	retlw	0
  5544  040E  3400               	retlw	0
  5545  040F  3400               	retlw	0
  5546  0410  3400               	retlw	0
  5547  0411  3400               	retlw	0
  5548  0412  3400               	retlw	0
  5549  0413  3400               	retlw	0
  5550  0414  3400               	retlw	0
  5551  0415  3400               	retlw	0
  5552  0416  3400               	retlw	0
  5553  0417  3400               	retlw	0
  5554  0418  3400               	retlw	0
  5555  0419  3400               	retlw	0
  5556  041A  3400               	retlw	0
  5557  041B  3400               	retlw	0
  5558  041C  3400               	retlw	0
  5559  041D  3400               	retlw	0
  5560  041E  3400               	retlw	0
  5561  041F  3400               	retlw	0
  5562  0420  3400               	retlw	0
  5563  0421  3400               	retlw	0
  5564  0422  3400               	retlw	0
  5565  0423  3400               	retlw	0
  5566  0424  3400               	retlw	0
  5567  0425  3400               	retlw	0
  5568  0426  3400               	retlw	0
  5569  0427  3400               	retlw	0
  5570  0428  3400               	retlw	0
  5571  0429  3400               	retlw	0
  5572  042A  3400               	retlw	0
  5573  042B  3400               	retlw	0
  5574  042C  3400               	retlw	0
  5575  042D  3400               	retlw	0
  5576  042E  3400               	retlw	0
  5577  042F  3400               	retlw	0
  5578  0430  3400               	retlw	0
  5579  0431  3400               	retlw	0
  5580  0432  3400               	retlw	0
  5581  0433  3400               	retlw	0
  5582  0434  3400               	retlw	0
  5583  0435  3400               	retlw	0
  5584  0436  3400               	retlw	0
  5585                           
  5586                           	psect	stringtext1
  5587  0437                     __pstringtext1:	
  5588  0437                     _lookup:	
  5589  0437  3400               	retlw	0
  5590  0438  3400               	retlw	0
  5591  0439  3400               	retlw	0
  5592  043A  3400               	retlw	0
  5593  043B  3400               	retlw	0
  5594  043C  3400               	retlw	0
  5595  043D  3400               	retlw	0
  5596  043E  345F               	retlw	95
  5597  043F  3400               	retlw	0
  5598  0440  3400               	retlw	0
  5599  0441  3400               	retlw	0
  5600  0442  3407               	retlw	7
  5601  0443  3400               	retlw	0
  5602  0444  3407               	retlw	7
  5603  0445  3400               	retlw	0
  5604  0446  3414               	retlw	20
  5605  0447  347F               	retlw	127
  5606  0448  3414               	retlw	20
  5607  0449  347F               	retlw	127
  5608  044A  3414               	retlw	20
  5609  044B  3424               	retlw	36
  5610  044C  342A               	retlw	42
  5611  044D  347F               	retlw	127
  5612  044E  342A               	retlw	42
  5613  044F  3412               	retlw	18
  5614  0450  3423               	retlw	35
  5615  0451  3413               	retlw	19
  5616  0452  3408               	retlw	8
  5617  0453  3464               	retlw	100
  5618  0454  3462               	retlw	98
  5619  0455  3436               	retlw	54
  5620  0456  3449               	retlw	73
  5621  0457  3456               	retlw	86
  5622  0458  3420               	retlw	32
  5623  0459  3450               	retlw	80
  5624  045A  3400               	retlw	0
  5625  045B  3408               	retlw	8
  5626  045C  3407               	retlw	7
  5627  045D  3403               	retlw	3
  5628  045E  3400               	retlw	0
  5629  045F  3400               	retlw	0
  5630  0460  341C               	retlw	28
  5631  0461  3422               	retlw	34
  5632  0462  3441               	retlw	65
  5633  0463  3400               	retlw	0
  5634  0464  3400               	retlw	0
  5635  0465  3441               	retlw	65
  5636  0466  3422               	retlw	34
  5637  0467  341C               	retlw	28
  5638  0468  3400               	retlw	0
  5639  0469  342A               	retlw	42
  5640  046A  341C               	retlw	28
  5641  046B  347F               	retlw	127
  5642  046C  341C               	retlw	28
  5643  046D  342A               	retlw	42
  5644  046E  3408               	retlw	8
  5645  046F  3408               	retlw	8
  5646  0470  343E               	retlw	62
  5647  0471  3408               	retlw	8
  5648  0472  3408               	retlw	8
  5649  0473  3400               	retlw	0
  5650  0474  3400               	retlw	0
  5651  0475  3470               	retlw	112
  5652  0476  3430               	retlw	48
  5653  0477  3400               	retlw	0
  5654  0478  3408               	retlw	8
  5655  0479  3408               	retlw	8
  5656  047A  3408               	retlw	8
  5657  047B  3408               	retlw	8
  5658  047C  3408               	retlw	8
  5659  047D  3400               	retlw	0
  5660  047E  3400               	retlw	0
  5661  047F  3460               	retlw	96
  5662  0480  3460               	retlw	96
  5663  0481  3400               	retlw	0
  5664  0482  3420               	retlw	32
  5665  0483  3410               	retlw	16
  5666  0484  3408               	retlw	8
  5667  0485  3404               	retlw	4
  5668  0486  3402               	retlw	2
  5669  0487  343E               	retlw	62
  5670  0488  3451               	retlw	81
  5671  0489  3449               	retlw	73
  5672  048A  3445               	retlw	69
  5673  048B  343E               	retlw	62
  5674  048C  3400               	retlw	0
  5675  048D  3442               	retlw	66
  5676  048E  347F               	retlw	127
  5677  048F  3440               	retlw	64
  5678  0490  3400               	retlw	0
  5679  0491  3472               	retlw	114
  5680  0492  3449               	retlw	73
  5681  0493  3449               	retlw	73
  5682  0494  3449               	retlw	73
  5683  0495  3446               	retlw	70
  5684  0496  3421               	retlw	33
  5685  0497  3441               	retlw	65
  5686  0498  3449               	retlw	73
  5687  0499  344D               	retlw	77
  5688  049A  3433               	retlw	51
  5689  049B  3418               	retlw	24
  5690  049C  3414               	retlw	20
  5691  049D  3412               	retlw	18
  5692  049E  347F               	retlw	127
  5693  049F  3410               	retlw	16
  5694  04A0  3427               	retlw	39
  5695  04A1  3445               	retlw	69
  5696  04A2  3445               	retlw	69
  5697  04A3  3445               	retlw	69
  5698  04A4  3439               	retlw	57
  5699  04A5  343C               	retlw	60
  5700  04A6  344A               	retlw	74
  5701  04A7  3449               	retlw	73
  5702  04A8  3449               	retlw	73
  5703  04A9  3431               	retlw	49
  5704  04AA  3441               	retlw	65
  5705  04AB  3421               	retlw	33
  5706  04AC  3411               	retlw	17
  5707  04AD  3409               	retlw	9
  5708  04AE  3407               	retlw	7
  5709  04AF  3436               	retlw	54
  5710  04B0  3449               	retlw	73
  5711  04B1  3449               	retlw	73
  5712  04B2  3449               	retlw	73
  5713  04B3  3436               	retlw	54
  5714  04B4  3446               	retlw	70
  5715  04B5  3449               	retlw	73
  5716  04B6  3449               	retlw	73
  5717  04B7  3429               	retlw	41
  5718  04B8  341E               	retlw	30
  5719  04B9  3400               	retlw	0
  5720  04BA  3400               	retlw	0
  5721  04BB  3414               	retlw	20
  5722  04BC  3400               	retlw	0
  5723  04BD  3400               	retlw	0
  5724  04BE  3400               	retlw	0
  5725  04BF  3440               	retlw	64
  5726  04C0  3434               	retlw	52
  5727  04C1  3400               	retlw	0
  5728  04C2  3400               	retlw	0
  5729  04C3  3400               	retlw	0
  5730  04C4  3408               	retlw	8
  5731  04C5  3414               	retlw	20
  5732  04C6  3422               	retlw	34
  5733  04C7  3441               	retlw	65
  5734  04C8  3414               	retlw	20
  5735  04C9  3414               	retlw	20
  5736  04CA  3414               	retlw	20
  5737  04CB  3414               	retlw	20
  5738  04CC  3414               	retlw	20
  5739  04CD  3400               	retlw	0
  5740  04CE  3441               	retlw	65
  5741  04CF  3422               	retlw	34
  5742  04D0  3414               	retlw	20
  5743  04D1  3408               	retlw	8
  5744  04D2  3402               	retlw	2
  5745  04D3  3401               	retlw	1
  5746  04D4  3459               	retlw	89
  5747  04D5  3409               	retlw	9
  5748  04D6  3406               	retlw	6
  5749  04D7  343E               	retlw	62
  5750  04D8  3441               	retlw	65
  5751  04D9  345D               	retlw	93
  5752  04DA  3459               	retlw	89
  5753  04DB  344E               	retlw	78
  5754  04DC  347C               	retlw	124
  5755  04DD  3412               	retlw	18
  5756  04DE  3411               	retlw	17
  5757  04DF  3412               	retlw	18
  5758  04E0  347C               	retlw	124
  5759  04E1  347F               	retlw	127
  5760  04E2  3449               	retlw	73
  5761  04E3  3449               	retlw	73
  5762  04E4  3449               	retlw	73
  5763  04E5  3436               	retlw	54
  5764  04E6  343E               	retlw	62
  5765  04E7  3441               	retlw	65
  5766  04E8  3441               	retlw	65
  5767  04E9  3441               	retlw	65
  5768  04EA  3422               	retlw	34
  5769  04EB  347F               	retlw	127
  5770  04EC  3441               	retlw	65
  5771  04ED  3441               	retlw	65
  5772  04EE  3441               	retlw	65
  5773  04EF  343E               	retlw	62
  5774  04F0  347F               	retlw	127
  5775  04F1  3449               	retlw	73
  5776  04F2  3449               	retlw	73
  5777  04F3  3449               	retlw	73
  5778  04F4  3441               	retlw	65
  5779  04F5  347F               	retlw	127
  5780  04F6  3409               	retlw	9
  5781  04F7  3409               	retlw	9
  5782  04F8  3409               	retlw	9
  5783  04F9  3401               	retlw	1
  5784  04FA  343E               	retlw	62
  5785  04FB  3441               	retlw	65
  5786  04FC  3441               	retlw	65
  5787  04FD  3451               	retlw	81
  5788  04FE  3473               	retlw	115
  5789  04FF  347F               	retlw	127
  5790  0500  3408               	retlw	8
  5791  0501  3408               	retlw	8
  5792  0502  3408               	retlw	8
  5793  0503  347F               	retlw	127
  5794  0504  3400               	retlw	0
  5795  0505  3441               	retlw	65
  5796  0506  347F               	retlw	127
  5797  0507  3441               	retlw	65
  5798  0508  3400               	retlw	0
  5799  0509  3420               	retlw	32
  5800  050A  3440               	retlw	64
  5801  050B  3441               	retlw	65
  5802  050C  343F               	retlw	63
  5803  050D  3401               	retlw	1
  5804  050E  347F               	retlw	127
  5805  050F  3408               	retlw	8
  5806  0510  3414               	retlw	20
  5807  0511  3422               	retlw	34
  5808  0512  3441               	retlw	65
  5809  0513  347F               	retlw	127
  5810  0514  3440               	retlw	64
  5811  0515  3440               	retlw	64
  5812  0516  3440               	retlw	64
  5813  0517  3440               	retlw	64
  5814  0518  347F               	retlw	127
  5815  0519  3402               	retlw	2
  5816  051A  341C               	retlw	28
  5817  051B  3402               	retlw	2
  5818  051C  347F               	retlw	127
  5819  051D  347F               	retlw	127
  5820  051E  3404               	retlw	4
  5821  051F  3408               	retlw	8
  5822  0520  3410               	retlw	16
  5823  0521  347F               	retlw	127
  5824  0522  343E               	retlw	62
  5825  0523  3441               	retlw	65
  5826  0524  3441               	retlw	65
  5827  0525  3441               	retlw	65
  5828  0526  343E               	retlw	62
  5829  0527  347F               	retlw	127
  5830  0528  3409               	retlw	9
  5831  0529  3409               	retlw	9
  5832  052A  3409               	retlw	9
  5833  052B  3406               	retlw	6
  5834  052C  343E               	retlw	62
  5835  052D  3441               	retlw	65
  5836  052E  3451               	retlw	81
  5837  052F  3421               	retlw	33
  5838  0530  345E               	retlw	94
  5839  0531  347F               	retlw	127
  5840  0532  3409               	retlw	9
  5841  0533  3419               	retlw	25
  5842  0534  3429               	retlw	41
  5843  0535  3446               	retlw	70
  5844  0536  3426               	retlw	38
  5845  0537  3449               	retlw	73
  5846  0538  3449               	retlw	73
  5847  0539  3449               	retlw	73
  5848  053A  3432               	retlw	50
  5849  053B  3403               	retlw	3
  5850  053C  3401               	retlw	1
  5851  053D  347F               	retlw	127
  5852  053E  3401               	retlw	1
  5853  053F  3403               	retlw	3
  5854  0540  343F               	retlw	63
  5855  0541  3440               	retlw	64
  5856  0542  3440               	retlw	64
  5857  0543  3440               	retlw	64
  5858  0544  343F               	retlw	63
  5859  0545  341F               	retlw	31
  5860  0546  3420               	retlw	32
  5861  0547  3440               	retlw	64
  5862  0548  3420               	retlw	32
  5863  0549  341F               	retlw	31
  5864  054A  343F               	retlw	63
  5865  054B  3440               	retlw	64
  5866  054C  3438               	retlw	56
  5867  054D  3440               	retlw	64
  5868  054E  343F               	retlw	63
  5869  054F  3463               	retlw	99
  5870  0550  3414               	retlw	20
  5871  0551  3408               	retlw	8
  5872  0552  3414               	retlw	20
  5873  0553  3463               	retlw	99
  5874  0554  3403               	retlw	3
  5875  0555  3404               	retlw	4
  5876  0556  3478               	retlw	120
  5877  0557  3404               	retlw	4
  5878  0558  3403               	retlw	3
  5879  0559  3461               	retlw	97
  5880  055A  3459               	retlw	89
  5881  055B  3449               	retlw	73
  5882  055C  344D               	retlw	77
  5883  055D  3443               	retlw	67
  5884  055E  3400               	retlw	0
  5885  055F  347F               	retlw	127
  5886  0560  3441               	retlw	65
  5887  0561  3441               	retlw	65
  5888  0562  3441               	retlw	65
  5889  0563  3402               	retlw	2
  5890  0564  3404               	retlw	4
  5891  0565  3408               	retlw	8
  5892  0566  3410               	retlw	16
  5893  0567  3420               	retlw	32
  5894  0568  3400               	retlw	0
  5895  0569  3441               	retlw	65
  5896  056A  3441               	retlw	65
  5897  056B  3441               	retlw	65
  5898  056C  347F               	retlw	127
  5899  056D  3404               	retlw	4
  5900  056E  3402               	retlw	2
  5901  056F  3401               	retlw	1
  5902  0570  3402               	retlw	2
  5903  0571  3404               	retlw	4
  5904  0572  3440               	retlw	64
  5905  0573  3440               	retlw	64
  5906  0574  3440               	retlw	64
  5907  0575  3440               	retlw	64
  5908  0576  3440               	retlw	64
  5909  0577  3400               	retlw	0
  5910  0578  3403               	retlw	3
  5911  0579  3407               	retlw	7
  5912  057A  3408               	retlw	8
  5913  057B  3400               	retlw	0
  5914  057C  3420               	retlw	32
  5915  057D  3454               	retlw	84
  5916  057E  3454               	retlw	84
  5917  057F  3438               	retlw	56
  5918  0580  3440               	retlw	64
  5919  0581  347F               	retlw	127
  5920  0582  3428               	retlw	40
  5921  0583  3444               	retlw	68
  5922  0584  3444               	retlw	68
  5923  0585  3438               	retlw	56
  5924  0586  3438               	retlw	56
  5925  0587  3444               	retlw	68
  5926  0588  3444               	retlw	68
  5927  0589  3444               	retlw	68
  5928  058A  3428               	retlw	40
  5929  058B  3438               	retlw	56
  5930  058C  3444               	retlw	68
  5931  058D  3444               	retlw	68
  5932  058E  3428               	retlw	40
  5933  058F  347F               	retlw	127
  5934  0590  3438               	retlw	56
  5935  0591  3454               	retlw	84
  5936  0592  3454               	retlw	84
  5937  0593  3454               	retlw	84
  5938  0594  3418               	retlw	24
  5939  0595  3400               	retlw	0
  5940  0596  3408               	retlw	8
  5941  0597  347E               	retlw	126
  5942  0598  3409               	retlw	9
  5943  0599  3402               	retlw	2
  5944  059A  340C               	retlw	12
  5945  059B  3452               	retlw	82
  5946  059C  3452               	retlw	82
  5947  059D  344A               	retlw	74
  5948  059E  343C               	retlw	60
  5949  059F  347F               	retlw	127
  5950  05A0  3408               	retlw	8
  5951  05A1  3404               	retlw	4
  5952  05A2  3404               	retlw	4
  5953  05A3  3478               	retlw	120
  5954  05A4  3400               	retlw	0
  5955  05A5  3444               	retlw	68
  5956  05A6  347D               	retlw	125
  5957  05A7  3440               	retlw	64
  5958  05A8  3400               	retlw	0
  5959  05A9  3420               	retlw	32
  5960  05AA  3440               	retlw	64
  5961  05AB  3440               	retlw	64
  5962  05AC  343D               	retlw	61
  5963  05AD  3400               	retlw	0
  5964  05AE  347F               	retlw	127
  5965  05AF  3410               	retlw	16
  5966  05B0  3428               	retlw	40
  5967  05B1  3444               	retlw	68
  5968  05B2  3400               	retlw	0
  5969  05B3  3400               	retlw	0
  5970  05B4  3441               	retlw	65
  5971  05B5  347F               	retlw	127
  5972  05B6  3440               	retlw	64
  5973  05B7  3400               	retlw	0
  5974  05B8  347C               	retlw	124
  5975  05B9  3404               	retlw	4
  5976  05BA  3478               	retlw	120
  5977  05BB  3404               	retlw	4
  5978  05BC  3478               	retlw	120
  5979  05BD  347C               	retlw	124
  5980  05BE  3408               	retlw	8
  5981  05BF  3404               	retlw	4
  5982  05C0  3404               	retlw	4
  5983  05C1  3478               	retlw	120
  5984  05C2  3438               	retlw	56
  5985  05C3  3444               	retlw	68
  5986  05C4  3444               	retlw	68
  5987  05C5  3444               	retlw	68
  5988  05C6  3438               	retlw	56
  5989  05C7  347C               	retlw	124
  5990  05C8  3418               	retlw	24
  5991  05C9  3424               	retlw	36
  5992  05CA  3424               	retlw	36
  5993  05CB  3418               	retlw	24
  5994  05CC  3418               	retlw	24
  5995  05CD  3424               	retlw	36
  5996  05CE  3424               	retlw	36
  5997  05CF  3418               	retlw	24
  5998  05D0  347C               	retlw	124
  5999  05D1  347C               	retlw	124
  6000  05D2  3408               	retlw	8
  6001  05D3  3404               	retlw	4
  6002  05D4  3404               	retlw	4
  6003  05D5  3408               	retlw	8
  6004  05D6  3448               	retlw	72
  6005  05D7  3454               	retlw	84
  6006  05D8  3454               	retlw	84
  6007  05D9  3454               	retlw	84
  6008  05DA  3424               	retlw	36
  6009  05DB  3404               	retlw	4
  6010  05DC  3404               	retlw	4
  6011  05DD  343F               	retlw	63
  6012  05DE  3444               	retlw	68
  6013  05DF  3424               	retlw	36
  6014  05E0  343C               	retlw	60
  6015  05E1  3440               	retlw	64
  6016  05E2  3440               	retlw	64
  6017  05E3  3420               	retlw	32
  6018  05E4  347C               	retlw	124
  6019  05E5  341C               	retlw	28
  6020  05E6  3420               	retlw	32
  6021  05E7  3440               	retlw	64
  6022  05E8  3420               	retlw	32
  6023  05E9  341C               	retlw	28
  6024  05EA  343C               	retlw	60
  6025  05EB  3440               	retlw	64
  6026  05EC  3430               	retlw	48
  6027  05ED  3440               	retlw	64
  6028  05EE  343C               	retlw	60
  6029  05EF  3444               	retlw	68
  6030  05F0  3428               	retlw	40
  6031  05F1  3410               	retlw	16
  6032  05F2  3428               	retlw	40
  6033  05F3  3444               	retlw	68
  6034  05F4  344C               	retlw	76
  6035  05F5  3450               	retlw	80
  6036  05F6  3450               	retlw	80
  6037  05F7  3450               	retlw	80
  6038  05F8  343C               	retlw	60
  6039  05F9  3444               	retlw	68
  6040  05FA  3464               	retlw	100
  6041  05FB  3454               	retlw	84
  6042  05FC  344C               	retlw	76
  6043  05FD  3444               	retlw	68
  6044  05FE  3400               	retlw	0
  6045  05FF  3408               	retlw	8
  6046  0600  3436               	retlw	54
  6047  0601  3441               	retlw	65
  6048  0602  3400               	retlw	0
  6049  0603  3400               	retlw	0
  6050  0604  3400               	retlw	0
  6051  0605  3477               	retlw	119
  6052  0606  3400               	retlw	0
  6053  0607  3400               	retlw	0
  6054  0608  3400               	retlw	0
  6055  0609  3441               	retlw	65
  6056  060A  3436               	retlw	54
  6057  060B  3408               	retlw	8
  6058  060C  3400               	retlw	0
  6059  060D  3402               	retlw	2
  6060  060E  3401               	retlw	1
  6061  060F  3402               	retlw	2
  6062  0610  3404               	retlw	4
  6063  0611  3402               	retlw	2
  6064  0612                     __end_of_lookup:	
  6065                           
  6066                           	psect	stringtext2
  6067  1800                     __pstringtext2:	
  6068  1800                     _fsmStateTable:	
  6069  1800  3437               	retlw	low _do_I2C_IDLE
  6070  1801  3410               	retlw	high _do_I2C_IDLE
  6071  1802  34B5               	retlw	low _do_I2C_SEND_ADR_READ
  6072  1803  3410               	retlw	high _do_I2C_SEND_ADR_READ
  6073  1804  347D               	retlw	low _do_I2C_SEND_ADR_WRITE
  6074  1805  3410               	retlw	high _do_I2C_SEND_ADR_WRITE
  6075  1806  3474               	retlw	low _do_I2C_TX
  6076  1807  3408               	retlw	high _do_I2C_TX
  6077  1808  34DB               	retlw	low _do_I2C_RX
  6078  1809  3416               	retlw	high _do_I2C_RX
  6079  180A  344A               	retlw	low _do_I2C_RCEN
  6080  180B  3410               	retlw	high _do_I2C_RCEN
  6081  180C  3444               	retlw	low _do_I2C_TX_EMPTY
  6082  180D  3414               	retlw	high _do_I2C_TX_EMPTY
  6083  180E  34E8               	retlw	low _do_I2C_SEND_RESTART_READ
  6084  180F  341F               	retlw	high _do_I2C_SEND_RESTART_READ
  6085  1810  34F0               	retlw	low _do_I2C_SEND_RESTART_WRITE
  6086  1811  341F               	retlw	high _do_I2C_SEND_RESTART_WRITE
  6087  1812  34F8               	retlw	low _do_I2C_SEND_RESTART
  6088  1813  341F               	retlw	high _do_I2C_SEND_RESTART
  6089  1814  3405               	retlw	low _do_I2C_SEND_STOP
  6090  1815  3410               	retlw	high _do_I2C_SEND_STOP
  6091  1816  340D               	retlw	low _do_I2C_DO_ACK
  6092  1817  3410               	retlw	high _do_I2C_DO_ACK
  6093  1818  3415               	retlw	low _do_I2C_DO_NACK_STOP
  6094  1819  3410               	retlw	high _do_I2C_DO_NACK_STOP
  6095  181A  341D               	retlw	low _do_I2C_DO_NACK_RESTART
  6096  181B  3410               	retlw	high _do_I2C_DO_NACK_RESTART
  6097  181C  3472               	retlw	low _do_I2C_RESET
  6098  181D  3410               	retlw	high _do_I2C_RESET
  6099  181E  3495               	retlw	low _do_I2C_DO_ADDRESS_NACK
  6100  181F  3413               	retlw	high _do_I2C_DO_ADDRESS_NACK
  6101  1820                     __end_of_fsmStateTable:	
  6102                           
  6103                           	psect	stringtext3
  6104  1855                     __pstringtext3:	
  6105  1855                     _moninit:	
  6106  1855  341F               	retlw	31
  6107  1856  341C               	retlw	28
  6108  1857  341F               	retlw	31
  6109  1858  341E               	retlw	30
  6110  1859  341F               	retlw	31
  6111  185A  341E               	retlw	30
  6112  185B  341F               	retlw	31
  6113  185C  341F               	retlw	31
  6114  185D  341E               	retlw	30
  6115  185E  341F               	retlw	31
  6116  185F  341E               	retlw	30
  6117  1860  341F               	retlw	31
  6118  1861                     __end_of_moninit:	
  6119                           
  6120                           	psect	stringtext4
  6121  1861                     __pstringtext4:	
  6122  1861                     _dpowers:	
  6123  1861  3401               	retlw	1
  6124  1862  3400               	retlw	0
  6125  1863  340A               	retlw	10
  6126  1864  3400               	retlw	0
  6127  1865  3464               	retlw	100
  6128  1866  3400               	retlw	0
  6129  1867  34E8               	retlw	232
  6130  1868  3403               	retlw	3
  6131  1869  3410               	retlw	16
  6132  186A  3427               	retlw	39
  6133  186B                     __end_of_dpowers:	
  6134                           
  6135                           	psect	stringtext5
  6136  005C                     __pstringtext5:	
  6137  005C                     _emptyArray:	
  6138  005C  3400               	retlw	0
  6139  005D  3400               	retlw	0
  6140  005E  3400               	retlw	0
  6141  005F  3400               	retlw	0
  6142  0060  3400               	retlw	0
  6143  0061  3400               	retlw	0
  6144  0062  3400               	retlw	0
  6145  0063  3400               	retlw	0
  6146  0064  3400               	retlw	0
  6147  0065  3400               	retlw	0
  6148  0066  3400               	retlw	0
  6149  0067  3400               	retlw	0
  6150  0068  3400               	retlw	0
  6151  0069  3400               	retlw	0
  6152  006A  3400               	retlw	0
  6153  006B  3400               	retlw	0
  6154  006C  3400               	retlw	0
  6155  006D  3400               	retlw	0
  6156  006E  3400               	retlw	0
  6157  006F  3400               	retlw	0
  6158  0070  3400               	retlw	0
  6159  0071  3400               	retlw	0
  6160  0072  3400               	retlw	0
  6161  0073  3400               	retlw	0
  6162  0074  3400               	retlw	0
  6163  0075  3400               	retlw	0
  6164  0076  3400               	retlw	0
  6165  0077  3400               	retlw	0
  6166  0078  3400               	retlw	0
  6167  0079  3400               	retlw	0
  6168  007A  3400               	retlw	0
  6169  007B  3400               	retlw	0
  6170  007C  3400               	retlw	0
  6171  007D  3400               	retlw	0
  6172  007E  3400               	retlw	0
  6173  007F  3400               	retlw	0
  6174  0080  3400               	retlw	0
  6175  0081  3400               	retlw	0
  6176  0082  3400               	retlw	0
  6177  0083  3400               	retlw	0
  6178  0084  3400               	retlw	0
  6179  0085  3400               	retlw	0
  6180  0086  3400               	retlw	0
  6181  0087  3400               	retlw	0
  6182  0088  3400               	retlw	0
  6183  0089  3400               	retlw	0
  6184  008A  3400               	retlw	0
  6185  008B  3400               	retlw	0
  6186  008C  3400               	retlw	0
  6187  008D  3400               	retlw	0
  6188  008E  3400               	retlw	0
  6189  008F  3400               	retlw	0
  6190  0090  3400               	retlw	0
  6191  0091  3400               	retlw	0
  6192  0092  3400               	retlw	0
  6193  0093  3400               	retlw	0
  6194  0094  3400               	retlw	0
  6195  0095  3400               	retlw	0
  6196  0096  3400               	retlw	0
  6197  0097  3400               	retlw	0
  6198  0098  3400               	retlw	0
  6199  0099  3400               	retlw	0
  6200  009A  3400               	retlw	0
  6201  009B  3400               	retlw	0
  6202  009C  3400               	retlw	0
  6203  009D  3400               	retlw	0
  6204  009E  3400               	retlw	0
  6205  009F  3400               	retlw	0
  6206  00A0  3400               	retlw	0
  6207  00A1  3400               	retlw	0
  6208  00A2  3400               	retlw	0
  6209  00A3  3400               	retlw	0
  6210  00A4  3400               	retlw	0
  6211  00A5  3400               	retlw	0
  6212  00A6  3400               	retlw	0
  6213  00A7  3400               	retlw	0
  6214  00A8  3400               	retlw	0
  6215  00A9  3400               	retlw	0
  6216  00AA  3400               	retlw	0
  6217  00AB  3400               	retlw	0
  6218  00AC  3400               	retlw	0
  6219  00AD  3400               	retlw	0
  6220  00AE  3400               	retlw	0
  6221  00AF  3400               	retlw	0
  6222  00B0  3400               	retlw	0
  6223  00B1  3400               	retlw	0
  6224  00B2  3400               	retlw	0
  6225  00B3  3400               	retlw	0
  6226  00B4  3400               	retlw	0
  6227  00B5  3400               	retlw	0
  6228  00B6  3400               	retlw	0
  6229  00B7  3400               	retlw	0
  6230  00B8  3400               	retlw	0
  6231  00B9  3400               	retlw	0
  6232  00BA  3400               	retlw	0
  6233  00BB  3400               	retlw	0
  6234  00BC  3400               	retlw	0
  6235  00BD  3400               	retlw	0
  6236  00BE  3400               	retlw	0
  6237  00BF  3400               	retlw	0
  6238  00C0  3400               	retlw	0
  6239  00C1  3400               	retlw	0
  6240  00C2  3400               	retlw	0
  6241  00C3  3400               	retlw	0
  6242  00C4  3400               	retlw	0
  6243  00C5  3400               	retlw	0
  6244  00C6  3400               	retlw	0
  6245  00C7  3400               	retlw	0
  6246  00C8  3400               	retlw	0
  6247  00C9  3400               	retlw	0
  6248  00CA  3400               	retlw	0
  6249  00CB  3400               	retlw	0
  6250  00CC  3400               	retlw	0
  6251  00CD  3400               	retlw	0
  6252  00CE  3400               	retlw	0
  6253  00CF  3400               	retlw	0
  6254  00D0  3400               	retlw	0
  6255  00D1  3400               	retlw	0
  6256  00D2  3400               	retlw	0
  6257  00D3  3400               	retlw	0
  6258  00D4  3400               	retlw	0
  6259  00D5  3400               	retlw	0
  6260  00D6  3400               	retlw	0
  6261  00D7  3400               	retlw	0
  6262  00D8  3400               	retlw	0
  6263  00D9  3400               	retlw	0
  6264  00DA  3400               	retlw	0
  6265  00DB  3400               	retlw	0
  6266  00DC  3400               	retlw	0
  6267  00DD  3400               	retlw	0
  6268  00DE  3400               	retlw	0
  6269  00DF  3400               	retlw	0
  6270  00E0  3400               	retlw	0
  6271  00E1  3400               	retlw	0
  6272  00E2  3400               	retlw	0
  6273  00E3  3400               	retlw	0
  6274  00E4  3400               	retlw	0
  6275  00E5  3400               	retlw	0
  6276  00E6  3400               	retlw	0
  6277  00E7  3400               	retlw	0
  6278  00E8  3400               	retlw	0
  6279  00E9  3400               	retlw	0
  6280  00EA  3400               	retlw	0
  6281  00EB  3400               	retlw	0
  6282  00EC  3400               	retlw	0
  6283  00ED  3400               	retlw	0
  6284  00EE  3400               	retlw	0
  6285  00EF  3400               	retlw	0
  6286  00F0  3400               	retlw	0
  6287  00F1  3400               	retlw	0
  6288  00F2  3400               	retlw	0
  6289  00F3  3400               	retlw	0
  6290  00F4  3400               	retlw	0
  6291  00F5  3400               	retlw	0
  6292  00F6  3400               	retlw	0
  6293  00F7  3400               	retlw	0
  6294  00F8  3400               	retlw	0
  6295  00F9  3400               	retlw	0
  6296  00FA  3400               	retlw	0
  6297  00FB  3400               	retlw	0
  6298  00FC  3400               	retlw	0
  6299  00FD  3400               	retlw	0
  6300  00FE  3400               	retlw	0
  6301  00FF  3400               	retlw	0
  6302  0100  3400               	retlw	0
  6303  0101  3400               	retlw	0
  6304  0102  3400               	retlw	0
  6305  0103  3400               	retlw	0
  6306  0104  3400               	retlw	0
  6307  0105  3400               	retlw	0
  6308  0106  3400               	retlw	0
  6309  0107  3400               	retlw	0
  6310  0108  3400               	retlw	0
  6311  0109  3400               	retlw	0
  6312  010A  3400               	retlw	0
  6313  010B  3400               	retlw	0
  6314  010C  3400               	retlw	0
  6315  010D  3400               	retlw	0
  6316  010E  3400               	retlw	0
  6317  010F  3400               	retlw	0
  6318  0110  3400               	retlw	0
  6319  0111  3400               	retlw	0
  6320  0112  3400               	retlw	0
  6321  0113  3400               	retlw	0
  6322  0114  3400               	retlw	0
  6323  0115  3400               	retlw	0
  6324  0116  3400               	retlw	0
  6325  0117  3400               	retlw	0
  6326  0118  3400               	retlw	0
  6327  0119  3400               	retlw	0
  6328  011A  3400               	retlw	0
  6329  011B  3400               	retlw	0
  6330  011C  3400               	retlw	0
  6331  011D  3400               	retlw	0
  6332  011E  3400               	retlw	0
  6333  011F  3400               	retlw	0
  6334  0120  3400               	retlw	0
  6335  0121  3400               	retlw	0
  6336  0122  3400               	retlw	0
  6337  0123  3400               	retlw	0
  6338  0124  3400               	retlw	0
  6339  0125  3400               	retlw	0
  6340  0126  3400               	retlw	0
  6341  0127  3400               	retlw	0
  6342  0128  3400               	retlw	0
  6343  0129  3400               	retlw	0
  6344  012A  3400               	retlw	0
  6345  012B  3400               	retlw	0
  6346  012C  3400               	retlw	0
  6347  012D  3400               	retlw	0
  6348  012E  3400               	retlw	0
  6349  012F  3400               	retlw	0
  6350  0130  3400               	retlw	0
  6351  0131  3400               	retlw	0
  6352  0132  3400               	retlw	0
  6353  0133  3400               	retlw	0
  6354  0134  3400               	retlw	0
  6355  0135  3400               	retlw	0
  6356  0136  3400               	retlw	0
  6357  0137  3400               	retlw	0
  6358  0138  3400               	retlw	0
  6359  0139  3400               	retlw	0
  6360  013A  3400               	retlw	0
  6361  013B  3400               	retlw	0
  6362  013C  3400               	retlw	0
  6363  013D  3400               	retlw	0
  6364  013E  3400               	retlw	0
  6365  013F  3400               	retlw	0
  6366  0140  3400               	retlw	0
  6367  0141  3400               	retlw	0
  6368  0142  3400               	retlw	0
  6369  0143  3400               	retlw	0
  6370  0144  3400               	retlw	0
  6371  0145  3400               	retlw	0
  6372  0146  3400               	retlw	0
  6373  0147  3400               	retlw	0
  6374  0148  3400               	retlw	0
  6375  0149  3400               	retlw	0
  6376  014A  3400               	retlw	0
  6377  014B  3400               	retlw	0
  6378  014C  3400               	retlw	0
  6379  014D  3400               	retlw	0
  6380  014E  3400               	retlw	0
  6381  014F  3400               	retlw	0
  6382  0150  3400               	retlw	0
  6383  0151  3400               	retlw	0
  6384  0152  3400               	retlw	0
  6385  0153  3400               	retlw	0
  6386  0154  3400               	retlw	0
  6387  0155  3400               	retlw	0
  6388  0156  3400               	retlw	0
  6389  0157  3400               	retlw	0
  6390  0158  3400               	retlw	0
  6391  0159  3400               	retlw	0
  6392  015A  3400               	retlw	0
  6393  015B  3400               	retlw	0
  6394  015C  3400               	retlw	0
  6395  015D  3400               	retlw	0
  6396  015E  3400               	retlw	0
  6397  015F  3400               	retlw	0
  6398  0160  3400               	retlw	0
  6399  0161  3400               	retlw	0
  6400  0162  3400               	retlw	0
  6401  0163  3400               	retlw	0
  6402  0164  3400               	retlw	0
  6403  0165  3400               	retlw	0
  6404  0166  3400               	retlw	0
  6405  0167  3400               	retlw	0
  6406  0168  3400               	retlw	0
  6407  0169  3400               	retlw	0
  6408  016A  3400               	retlw	0
  6409  016B  3400               	retlw	0
  6410  016C  3400               	retlw	0
  6411  016D  3400               	retlw	0
  6412  016E  3400               	retlw	0
  6413  016F  3400               	retlw	0
  6414  0170  3400               	retlw	0
  6415  0171  3400               	retlw	0
  6416  0172  3400               	retlw	0
  6417  0173  3400               	retlw	0
  6418  0174  3400               	retlw	0
  6419  0175  3400               	retlw	0
  6420  0176  3400               	retlw	0
  6421  0177  3400               	retlw	0
  6422  0178  3400               	retlw	0
  6423  0179  3400               	retlw	0
  6424  017A  3400               	retlw	0
  6425  017B  3400               	retlw	0
  6426  017C  3400               	retlw	0
  6427  017D  3400               	retlw	0
  6428  017E  3400               	retlw	0
  6429  017F  3400               	retlw	0
  6430  0180  3400               	retlw	0
  6431  0181  3400               	retlw	0
  6432  0182  3400               	retlw	0
  6433  0183  3400               	retlw	0
  6434  0184  3400               	retlw	0
  6435  0185  3400               	retlw	0
  6436  0186  3400               	retlw	0
  6437  0187  3400               	retlw	0
  6438  0188  3400               	retlw	0
  6439  0189  3400               	retlw	0
  6440  018A  3400               	retlw	0
  6441  018B  3400               	retlw	0
  6442  018C  3400               	retlw	0
  6443  018D  3400               	retlw	0
  6444  018E  3400               	retlw	0
  6445  018F  3400               	retlw	0
  6446  0190  3400               	retlw	0
  6447  0191  3400               	retlw	0
  6448  0192  3400               	retlw	0
  6449  0193  3400               	retlw	0
  6450  0194  3400               	retlw	0
  6451  0195  3400               	retlw	0
  6452  0196  3400               	retlw	0
  6453  0197  3400               	retlw	0
  6454  0198  3400               	retlw	0
  6455  0199  3400               	retlw	0
  6456  019A  3400               	retlw	0
  6457  019B  3400               	retlw	0
  6458  019C  3400               	retlw	0
  6459  019D  3400               	retlw	0
  6460  019E  3400               	retlw	0
  6461  019F  3400               	retlw	0
  6462  01A0  3400               	retlw	0
  6463  01A1  3400               	retlw	0
  6464  01A2  3400               	retlw	0
  6465  01A3  3400               	retlw	0
  6466  01A4  3400               	retlw	0
  6467  01A5  3400               	retlw	0
  6468  01A6  3400               	retlw	0
  6469  01A7  3400               	retlw	0
  6470  01A8  3400               	retlw	0
  6471  01A9  3400               	retlw	0
  6472  01AA  3400               	retlw	0
  6473  01AB  3400               	retlw	0
  6474  01AC  3400               	retlw	0
  6475  01AD  3400               	retlw	0
  6476  01AE  3400               	retlw	0
  6477  01AF  3400               	retlw	0
  6478  01B0  3400               	retlw	0
  6479  01B1  3400               	retlw	0
  6480  01B2  3400               	retlw	0
  6481  01B3  3400               	retlw	0
  6482  01B4  3400               	retlw	0
  6483  01B5  3400               	retlw	0
  6484  01B6  3400               	retlw	0
  6485  01B7  3400               	retlw	0
  6486  01B8  3400               	retlw	0
  6487  01B9  3400               	retlw	0
  6488  01BA  3400               	retlw	0
  6489  01BB  3400               	retlw	0
  6490  01BC  3400               	retlw	0
  6491  01BD  3400               	retlw	0
  6492  01BE  3400               	retlw	0
  6493  01BF  3400               	retlw	0
  6494  01C0  3400               	retlw	0
  6495  01C1  3400               	retlw	0
  6496  01C2  3400               	retlw	0
  6497  01C3  3400               	retlw	0
  6498  01C4  3400               	retlw	0
  6499  01C5  3400               	retlw	0
  6500  01C6  3400               	retlw	0
  6501  01C7  3400               	retlw	0
  6502  01C8  3400               	retlw	0
  6503  01C9  3400               	retlw	0
  6504  01CA  3400               	retlw	0
  6505  01CB  3400               	retlw	0
  6506  01CC  3400               	retlw	0
  6507  01CD  3400               	retlw	0
  6508  01CE  3400               	retlw	0
  6509  01CF  3400               	retlw	0
  6510  01D0  3400               	retlw	0
  6511  01D1  3400               	retlw	0
  6512  01D2  3400               	retlw	0
  6513  01D3  3400               	retlw	0
  6514  01D4  3400               	retlw	0
  6515  01D5  3400               	retlw	0
  6516  01D6  3400               	retlw	0
  6517  01D7  3400               	retlw	0
  6518  01D8  3400               	retlw	0
  6519  01D9  3400               	retlw	0
  6520  01DA  3400               	retlw	0
  6521  01DB  3400               	retlw	0
  6522  01DC  3400               	retlw	0
  6523  01DD  3400               	retlw	0
  6524  01DE  3400               	retlw	0
  6525  01DF  3400               	retlw	0
  6526  01E0  3400               	retlw	0
  6527  01E1  3400               	retlw	0
  6528  01E2  3400               	retlw	0
  6529  01E3  3400               	retlw	0
  6530  01E4  3400               	retlw	0
  6531  01E5  3400               	retlw	0
  6532  01E6  3400               	retlw	0
  6533  01E7  3400               	retlw	0
  6534  01E8  3400               	retlw	0
  6535  01E9  3400               	retlw	0
  6536  01EA  3400               	retlw	0
  6537  01EB  3400               	retlw	0
  6538  01EC  3400               	retlw	0
  6539  01ED  3400               	retlw	0
  6540  01EE  3400               	retlw	0
  6541  01EF  3400               	retlw	0
  6542  01F0  3400               	retlw	0
  6543  01F1  3400               	retlw	0
  6544  01F2  3400               	retlw	0
  6545  01F3  3400               	retlw	0
  6546  01F4  3400               	retlw	0
  6547  01F5  3400               	retlw	0
  6548  01F6  3400               	retlw	0
  6549  01F7  3400               	retlw	0
  6550  01F8  3400               	retlw	0
  6551  01F9  3400               	retlw	0
  6552  01FA  3400               	retlw	0
  6553  01FB  3400               	retlw	0
  6554  01FC  3400               	retlw	0
  6555  01FD  3400               	retlw	0
  6556  01FE  3400               	retlw	0
  6557  01FF  3400               	retlw	0
  6558  0200  3400               	retlw	0
  6559  0201  3400               	retlw	0
  6560  0202  3400               	retlw	0
  6561  0203  3400               	retlw	0
  6562  0204  3400               	retlw	0
  6563  0205  3400               	retlw	0
  6564  0206  3400               	retlw	0
  6565  0207  3400               	retlw	0
  6566  0208  3400               	retlw	0
  6567  0209  3400               	retlw	0
  6568  020A  3400               	retlw	0
  6569  020B  3400               	retlw	0
  6570  020C  3400               	retlw	0
  6571  020D  3400               	retlw	0
  6572  020E  3400               	retlw	0
  6573  020F  3400               	retlw	0
  6574  0210  3400               	retlw	0
  6575  0211  3400               	retlw	0
  6576  0212  3400               	retlw	0
  6577  0213  3400               	retlw	0
  6578  0214  3400               	retlw	0
  6579  0215  3400               	retlw	0
  6580  0216  3400               	retlw	0
  6581  0217  3400               	retlw	0
  6582  0218  3400               	retlw	0
  6583  0219  3400               	retlw	0
  6584  021A  3400               	retlw	0
  6585  021B  3400               	retlw	0
  6586  021C  3400               	retlw	0
  6587  021D  3400               	retlw	0
  6588  021E  3400               	retlw	0
  6589  021F  3400               	retlw	0
  6590  0220  3400               	retlw	0
  6591  0221  3400               	retlw	0
  6592  0222  3400               	retlw	0
  6593  0223  3400               	retlw	0
  6594  0224  3400               	retlw	0
  6595  0225  3400               	retlw	0
  6596  0226  3400               	retlw	0
  6597  0227  3400               	retlw	0
  6598  0228  3400               	retlw	0
  6599  0229  3400               	retlw	0
  6600  022A  3400               	retlw	0
  6601  022B  3400               	retlw	0
  6602  022C  3400               	retlw	0
  6603  022D  3400               	retlw	0
  6604  022E  3400               	retlw	0
  6605  022F  3400               	retlw	0
  6606  0230  3400               	retlw	0
  6607  0231  3400               	retlw	0
  6608  0232  3400               	retlw	0
  6609  0233  3400               	retlw	0
  6610  0234  3400               	retlw	0
  6611  0235  3400               	retlw	0
  6612  0236  3400               	retlw	0
  6613  0237                     __end_of_emptyArray:	
  6614  0019                     _LATDbits	set	25
  6615  0018                     _LATCbits	set	24
  6616  0016                     _LATAbits	set	22
  6617  000B                     _INTCONbits	set	11
  6618  0014                     _TRISD	set	20
  6619  0013                     _TRISC	set	19
  6620  0012                     _TRISB	set	18
  6621  0011                     _TRISA	set	17
  6622  0015                     _TRISE	set	21
  6623  0018                     _LATC	set	24
  6624  0017                     _LATB	set	23
  6625  0016                     _LATA	set	22
  6626  0019                     _LATD	set	25
  6627  001A                     _LATE	set	26
  6628  0003                     _STATUS	set	3
  6629  0199                     _SSP2STATbits	set	409
  6630  0196                     _SSP2BUF	set	406
  6631  019A                     _SSP2CON1bits	set	410
  6632  0197                     _SSP2ADD	set	407
  6633  019A                     _SSP2CON1	set	410
  6634  0199                     _SSP2STAT	set	409
  6635  018F                     _SSP1STATbits	set	399
  6636  018E                     _SSP1MSK	set	398
  6637  018C                     _SSP1BUF	set	396
  6638  0191                     _SSP1CON2bits	set	401
  6639  018D                     _SSP1ADD	set	397
  6640  0191                     _SSP1CON2	set	401
  6641  0190                     _SSP1CON1	set	400
  6642  018F                     _SSP1STAT	set	399
  6643  0190                     _SSP1CON1bits	set	400
  6644  070F                     _PIR3bits	set	1807
  6645  0719                     _PIE3bits	set	1817
  6646  079B                     _PMD5	set	1947
  6647  079A                     _PMD4	set	1946
  6648  0799                     _PMD3	set	1945
  6649  0798                     _PMD2	set	1944
  6650  0797                     _PMD1	set	1943
  6651  0796                     _PMD0	set	1942
  6652  0892                     _OSCTUNE	set	2194
  6653  0893                     _OSCFRQ	set	2195
  6654  0891                     _OSCEN	set	2193
  6655  088F                     _OSCCON3	set	2191
  6656  088D                     _OSCCON1	set	2189
  6657  0EC9                     _SSP2DATPPSbits	set	3785
  6658  0EC8                     _SSP2CLKPPSbits	set	3784
  6659  0EC6                     _SSP1DATPPSbits	set	3782
  6660  0EC5                     _SSP1CLKPPSbits	set	3781
  6661  0F1B                     _RB3PPS	set	3867
  6662  0F24                     _RC4PPS	set	3876
  6663  0F23                     _RC3PPS	set	3875
  6664  0F19                     _RB1PPS	set	3865
  6665  0F5B                     _ODCOND	set	3931
  6666  0F50                     _ODCONC	set	3920
  6667  0F45                     _ODCONB	set	3909
  6668  0F3A                     _ODCONA	set	3898
  6669  0F66                     _ODCONE	set	3942
  6670  0F4F                     _WPUC	set	3919
  6671  0F39                     _WPUA	set	3897
  6672  0F44                     _WPUB	set	3908
  6673  0F65                     _WPUE	set	3941
  6674  0F5A                     _WPUD	set	3930
  6675  0F38                     _ANSELA	set	3896
  6676  0F64                     _ANSELE	set	3940
  6677  0F43                     _ANSELB	set	3907
  6678  0F4E                     _ANSELC	set	3918
  6679  0F59                     _ANSELD	set	3929
  6680  0237                     STR_3:	
  6681  0237  344A               	retlw	74	;'J'
  6682  0238  3461               	retlw	97	;'a'
  6683  0239  346E               	retlw	110	;'n'
  6684  023A  3446               	retlw	70	;'F'
  6685  023B  3465               	retlw	101	;'e'
  6686  023C  3462               	retlw	98	;'b'
  6687  023D  344D               	retlw	77	;'M'
  6688  023E  3461               	retlw	97	;'a'
  6689  023F  3472               	retlw	114	;'r'
  6690  0240  3441               	retlw	65	;'A'
  6691  0241  3470               	retlw	112	;'p'
  6692  0242  3472               	retlw	114	;'r'
  6693  0243  344D               	retlw	77	;'M'
  6694  0244  3461               	retlw	97	;'a'
  6695  0245  3479               	retlw	121	;'y'
  6696  0246  344A               	retlw	74	;'J'
  6697  0247  3475               	retlw	117	;'u'
  6698  0248  346E               	retlw	110	;'n'
  6699  0249  344A               	retlw	74	;'J'
  6700  024A  3475               	retlw	117	;'u'
  6701  024B  346C               	retlw	108	;'l'
  6702  024C  3441               	retlw	65	;'A'
  6703  024D  3475               	retlw	117	;'u'
  6704  024E  3467               	retlw	103	;'g'
  6705  024F  3453               	retlw	83	;'S'
  6706  0250  3465               	retlw	101	;'e'
  6707  0251  3470               	retlw	112	;'p'
  6708  0252  344F               	retlw	79	;'O'
  6709  0253  3463               	retlw	99	;'c'
  6710  0254  3474               	retlw	116	;'t'
  6711  0255  344E               	retlw	78	;'N'
  6712  0256  346F               	retlw	111	;'o'
  6713  0257  3476               	retlw	118	;'v'
  6714  0258  3444               	retlw	68	;'D'
  6715  0259  3465               	retlw	101	;'e'
  6716  025A  3463               	retlw	99	;'c'
  6717  025B  3400               	retlw	0
  6718                           
  6719                           	psect	stringtext6
  6720  1820                     __pstringtext6:	
  6721  1820                     STR_1:	
  6722  1820  3425               	retlw	37	;'%'
  6723  1821  3430               	retlw	48	;'0'
  6724  1822  3434               	retlw	52	;'4'
  6725  1823  3464               	retlw	100	;'d'
  6726  1824  342D               	retlw	45	;'-'
  6727  1825  3425               	retlw	37	;'%'
  6728  1826  3430               	retlw	48	;'0'
  6729  1827  3432               	retlw	50	;'2'
  6730  1828  3464               	retlw	100	;'d'
  6731  1829  342D               	retlw	45	;'-'
  6732  182A  3425               	retlw	37	;'%'
  6733  182B  3430               	retlw	48	;'0'
  6734  182C  3432               	retlw	50	;'2'
  6735  182D  3464               	retlw	100	;'d'
  6736  182E  3420               	retlw	32	;' '
  6737  182F  3425               	retlw	37	;'%'
  6738  1830  3430               	retlw	48	;'0'
  6739  1831  3432               	retlw	50	;'2'
  6740  1832  3464               	retlw	100	;'d'
  6741  1833  343A               	retlw	58	;':'
  6742  1834  3425               	retlw	37	;'%'
  6743  1835  3430               	retlw	48	;'0'
  6744  1836  3432               	retlw	50	;'2'
  6745  1837  3464               	retlw	100	;'d'
  6746  1838  343A               	retlw	58	;':'
  6747  1839  3425               	retlw	37	;'%'
  6748  183A  3430               	retlw	48	;'0'
  6749  183B  3432               	retlw	50	;'2'
  6750  183C  3464               	retlw	100	;'d'
  6751  183D  340A               	retlw	10
  6752  183E  3400               	retlw	0
  6753                           
  6754                           	psect	stringtext7
  6755  183F                     __pstringtext7:	
  6756  183F                     STR_2:	
  6757  183F  3453               	retlw	83	;'S'
  6758  1840  3475               	retlw	117	;'u'
  6759  1841  346E               	retlw	110	;'n'
  6760  1842  344D               	retlw	77	;'M'
  6761  1843  346F               	retlw	111	;'o'
  6762  1844  346E               	retlw	110	;'n'
  6763  1845  3454               	retlw	84	;'T'
  6764  1846  3475               	retlw	117	;'u'
  6765  1847  3465               	retlw	101	;'e'
  6766  1848  3457               	retlw	87	;'W'
  6767  1849  3465               	retlw	101	;'e'
  6768  184A  3464               	retlw	100	;'d'
  6769  184B  3454               	retlw	84	;'T'
  6770  184C  3468               	retlw	104	;'h'
  6771  184D  3475               	retlw	117	;'u'
  6772  184E  3446               	retlw	70	;'F'
  6773  184F  3472               	retlw	114	;'r'
  6774  1850  3469               	retlw	105	;'i'
  6775  1851  3453               	retlw	83	;'S'
  6776  1852  3461               	retlw	97	;'a'
  6777  1853  3474               	retlw	116	;'t'
  6778  1854  3400               	retlw	0
  6779                           
  6780                           	psect	stringtext8
  6781  0000                     __pstringtext8:	
  6782                           
  6783                           ; #config settings
  6784  0000                     
  6785                           	psect	cinit
  6786  0024                     start_initialization:	
  6787  0024                     __initialization:		;BIGRAM
  6788                           
  6789                           ; Initialize objects allocated to BIGRAM
  6790  0024  305C               	movlw	low __pidataBIGRAM
  6791  0025  0084               	movwf	4
  6792  0026  3082               	movlw	(high __pidataBIGRAM)| (0+128)
  6793  0027  0085               	movwf	5
  6794  0028  30B1               	movlw	low (0+8625)
  6795  0029  0086               	movwf	6
  6796  002A  3021               	movlw	high (0+8625)
  6797  002B  0087               	movwf	7
  6798  002C  3001               	movlw	1
  6799  002D  00FF               	movwf	btemp+1
  6800  002E  30DB               	movlw	219
  6801  002F  3190  20CD  3180   	fcall	init_ram
  6802                           
  6803                           ; Clear objects allocated to BIGRAM
  6804  0032  308C               	movlw	low (0+9100)
  6805  0033  0084               	movwf	4
  6806  0034  3023               	movlw	high (0+9100)
  6807  0035  0085               	movwf	5
  6808  0036  3064               	movlw	100
  6809  0037  00FE               	movwf	btemp
  6810  0038  3000               	movlw	0
  6811  0039  00FF               	movwf	btemp+1
  6812  003A  3190  20C1  3180   	fcall	clear_ram0
  6813                           
  6814                           ; Clear objects allocated to COMMON
  6815  003D  01F8               	clrf	__pbssCOMMON& (0+127)
  6816  003E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  6817  003F  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  6818  0040  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  6819  0041  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  6820  0042  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  6821                           
  6822                           ; Clear objects allocated to BANK1
  6823  0043  30A0               	movlw	low __pbssBANK1
  6824  0044  0084               	movwf	4
  6825  0045  3000               	movlw	high __pbssBANK1
  6826  0046  0085               	movwf	5
  6827  0047  3033               	movlw	51
  6828  0048  00FE               	movwf	btemp
  6829  0049  3000               	movlw	0
  6830  004A  00FF               	movwf	btemp+1
  6831  004B  3190  20C1  3180   	fcall	clear_ram0
  6832                           
  6833                           ; Clear objects allocated to BANK2
  6834  004E  3020               	movlw	low __pbssBANK2
  6835  004F  0084               	movwf	4
  6836  0050  3001               	movlw	high __pbssBANK2
  6837  0051  0085               	movwf	5
  6838  0052  3029               	movlw	41
  6839  0053  00FE               	movwf	btemp
  6840  0054  3000               	movlw	0
  6841  0055  00FF               	movwf	btemp+1
  6842  0056  3190  20C1         	fcall	clear_ram0
  6843  0058                     end_of_initialization:	
  6844                           ;End of C runtime variable initialization code
  6845                           
  6846  0058                     __end_of__initialization:	
  6847  0058  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6848  0059  0020               	movlb	0
  6849  005A  318C  2C85         	ljmp	_main	;jump to C main() function
  6850                           
  6851                           	psect	bssCOMMON
  6852  0078                     __pbssCOMMON:	
  6853  0078                     _time_zone:	
  6854  0078                     	ds	2
  6855  007A                     _i2c1_driver_i2cISR:	
  6856  007A                     	ds	2
  6857  007C                     _i2c1_driver_busCollisionISR:	
  6858  007C                     	ds	2
  6859                           
  6860                           	psect	bssBANK1
  6861  00A0                     __pbssBANK1:	
  6862  00A0                     _i2c_status:	
  6863  00A0                     	ds	29
  6864  00BD                     _timezone:	
  6865  00BD                     	ds	4
  6866  00C1                     gmtime@tim:	
  6867  00C1                     	ds	18
  6868                           
  6869                           	psect	bssBANK2
  6870  0120                     __pbssBANK2:	
  6871  0120                     _dateTime:	
  6872  0120                     	ds	14
  6873  012E                     asctime@buf:	
  6874  012E                     	ds	27
  6875                           
  6876                           	psect	inittext
  6877  10CD                     init_ram:	
  6878  10CD  00FE               	movwf	126
  6879  10CE                     initloop:	
  6880  10CE  0012               	moviw fsr0++
  6881  10CF  001E               	movwi fsr1++
  6882  10D0  3001               	movlw	1
  6883  10D1  02FE               	subwf	126,f
  6884  10D2  3000               	movlw	0
  6885  10D3  3BFF               	subwfb	127,f
  6886  10D4  087F               	movf	127,w
  6887  10D5  047E               	iorwf	126,w
  6888  10D6  1903               	btfsc	3,2
  6889  10D7  3400               	retlw	0
  6890  10D8  28CE               	goto	initloop
  6891                           
  6892                           	psect	clrtext
  6893  10C1                     clear_ram0:	
  6894                           ;	Called with FSR0 containing the base address, and
  6895                           ;	btemp/btemp+1 has the size to clear
  6896                           
  6897  10C1  0064               	clrwdt	;clear the watchdog before getting into this loop
  6898  10C2                     clrloop0:	
  6899  10C2  0180               	clrf	0	;clear RAM location pointed to by FSR
  6900  10C3  3101               	addfsr 0,1
  6901  10C4  3001               	movlw	1
  6902  10C5  02FE               	subwf	126,f
  6903  10C6  3000               	movlw	0
  6904  10C7  3BFF               	subwfb	127,f
  6905  10C8  087F               	movf	127,w
  6906  10C9  047E               	iorwf	126,w
  6907  10CA  1903               	btfsc	3,2
  6908  10CB  3400               	retlw	0	;all done for this memory range, return
  6909  10CC  28C2               	goto	clrloop0	;have we reached the end yet?
  6910                           
  6911                           	psect	cstackBANK1
  6912  00D3                     __pcstackBANK1:	
  6913  00D3                     rtc6_GetTime@tm_t:	
  6914                           
  6915                           ; 18 bytes @ 0x0
  6916  00D3                     	ds	18
  6917  00E5                     main@timeStr:	
  6918  00E5                     main@tm_t:	
  6919                           ; 0 bytes @ 0x12
  6920                           
  6921                           
  6922                           ; 1 bytes @ 0x12
  6923  00E5                     	ds	1
  6924  00E6                     main@getTime:	
  6925                           
  6926                           ; 4 bytes @ 0x13
  6927  00E6                     	ds	4
  6928                           
  6929                           	psect	cstackCOMMON
  6930  0070                     __pcstackCOMMON:	
  6931  0070                     ?_isdigit:	
  6932  0070                     ?_mssp1_IRQisEnabled:	
  6933                           ; 1 bit 
  6934                           
  6935  0070                     ?_i2c1_driver_open:	
  6936                           ; 1 bit 
  6937                           
  6938  0070                     ?_i2c1_driver_isNACK:	
  6939                           ; 1 bit 
  6940                           
  6941  0070                     ?i1_i2c1_driver_isNACK:	
  6942                           ; 1 bit 
  6943                           
  6944  0070                     ?_i2c_busCollisionISR:	
  6945                           ; 1 bit 
  6946                           
  6947  0070                     ??_i2c_busCollisionISR:	
  6948                           ; 1 bytes @ 0x0
  6949                           
  6950  0070                     ?_i2c_ISR:	
  6951                           ; 1 bytes @ 0x0
  6952                           
  6953  0070                     ?_i2c_poller:	
  6954                           ; 1 bytes @ 0x0
  6955                           
  6956  0070                     ?_localtime:	
  6957                           ; 1 bytes @ 0x0
  6958                           
  6959  0070                     ?_PMD_Initialize:	
  6960                           ; 1 bytes @ 0x0
  6961                           
  6962  0070                     ?_OSCILLATOR_Initialize:	
  6963                           ; 1 bytes @ 0x0
  6964                           
  6965  0070                     ?_SPI2_Initialize:	
  6966                           ; 1 bytes @ 0x0
  6967                           
  6968  0070                     ?_OLED_Initialize:	
  6969                           ; 1 bytes @ 0x0
  6970                           
  6971  0070                     ?_SetupClock:	
  6972                           ; 1 bytes @ 0x0
  6973                           
  6974  0070                     ?_gmtime:	
  6975                           ; 1 bytes @ 0x0
  6976                           
  6977  0070                     ?_mssp1_disableIRQ:	
  6978                           ; 1 bytes @ 0x0
  6979                           
  6980  0070                     ?_mssp1_clearIRQ:	
  6981                           ; 1 bytes @ 0x0
  6982                           
  6983  0070                     ?_mssp1_setIRQ:	
  6984                           ; 1 bytes @ 0x0
  6985                           
  6986  0070                     ?_mssp1_waitForEvent:	
  6987                           ; 1 bytes @ 0x0
  6988                           
  6989  0070                     ?_i2c1_driver_resetBus:	
  6990                           ; 1 bytes @ 0x0
  6991                           
  6992  0070                     ?_i2c1_driver_start:	
  6993                           ; 1 bytes @ 0x0
  6994                           
  6995  0070                     ?_i2c1_driver_restart:	
  6996                           ; 1 bytes @ 0x0
  6997                           
  6998  0070                     ?_i2c1_driver_stop:	
  6999                           ; 1 bytes @ 0x0
  7000                           
  7001  0070                     ?_i2c1_driver_startRX:	
  7002                           ; 1 bytes @ 0x0
  7003                           
  7004  0070                     ?_i2c1_driver_getRXData:	
  7005                           ; 1 bytes @ 0x0
  7006                           
  7007  0070                     ?_i2c1_driver_TXData:	
  7008                           ; 1 bytes @ 0x0
  7009                           
  7010  0070                     ?_i2c1_driver_sendACK:	
  7011                           ; 1 bytes @ 0x0
  7012                           
  7013  0070                     ?_i2c1_driver_sendNACK:	
  7014                           ; 1 bytes @ 0x0
  7015                           
  7016  0070                     ?_i2c1_driver_clearBusCollision:	
  7017                           ; 1 bytes @ 0x0
  7018                           
  7019  0070                     ??_i2c1_driver_clearBusCollision:	
  7020                           ; 1 bytes @ 0x0
  7021                           
  7022  0070                     ?_i2c_open:	
  7023                           ; 1 bytes @ 0x0
  7024                           
  7025  0070                     ?_i2c_close:	
  7026                           ; 1 bytes @ 0x0
  7027                           
  7028  0070                     ?_i2c_masterOperation:	
  7029                           ; 1 bytes @ 0x0
  7030                           
  7031  0070                     ?_i2c_masterWrite:	
  7032                           ; 1 bytes @ 0x0
  7033                           
  7034  0070                     ?_do_I2C_RESET:	
  7035                           ; 1 bytes @ 0x0
  7036                           
  7037  0070                     ?_do_I2C_IDLE:	
  7038                           ; 1 bytes @ 0x0
  7039                           
  7040  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7041                           ; 1 bytes @ 0x0
  7042                           
  7043  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7044                           ; 1 bytes @ 0x0
  7045                           
  7046  0070                     ?_do_I2C_SEND_RESTART:	
  7047                           ; 1 bytes @ 0x0
  7048                           
  7049  0070                     ?_do_I2C_SEND_STOP:	
  7050                           ; 1 bytes @ 0x0
  7051                           
  7052  0070                     ?_do_I2C_SEND_ADR_READ:	
  7053                           ; 1 bytes @ 0x0
  7054                           
  7055  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7056                           ; 1 bytes @ 0x0
  7057                           
  7058  0070                     ?_do_I2C_RCEN:	
  7059                           ; 1 bytes @ 0x0
  7060                           
  7061  0070                     ?_do_I2C_DO_ACK:	
  7062                           ; 1 bytes @ 0x0
  7063                           
  7064  0070                     ?_do_I2C_DO_NACK_STOP:	
  7065                           ; 1 bytes @ 0x0
  7066                           
  7067  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7068                           ; 1 bytes @ 0x0
  7069                           
  7070  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7071                           ; 1 bytes @ 0x0
  7072                           
  7073  0070                     ?_do_I2C_TX:	
  7074                           ; 1 bytes @ 0x0
  7075                           
  7076  0070                     ?_do_I2C_RX:	
  7077                           ; 1 bytes @ 0x0
  7078                           
  7079  0070                     ?_do_I2C_TX_EMPTY:	
  7080                           ; 1 bytes @ 0x0
  7081                           
  7082  0070                     ?_rtcc_read:	
  7083                           ; 1 bytes @ 0x0
  7084                           
  7085  0070                     ?_rtc6_Initialize:	
  7086                           ; 1 bytes @ 0x0
  7087                           
  7088  0070                     ?_PIN_MANAGER_Initialize:	
  7089                           ; 1 bytes @ 0x0
  7090                           
  7091  0070                     ?_INTERRUPT_InterruptManager:	
  7092                           ; 1 bytes @ 0x0
  7093                           
  7094  0070                     ?_SYSTEM_Initialize:	
  7095                           ; 1 bytes @ 0x0
  7096                           
  7097  0070                     ?_main:	
  7098                           ; 1 bytes @ 0x0
  7099                           
  7100  0070                     ?_SPI2_Exchange8bit:	
  7101                           ; 1 bytes @ 0x0
  7102                           
  7103  0070                     ?_OLED_Command:	
  7104                           ; 1 bytes @ 0x0
  7105                           
  7106  0070                     ?_OLED_Data:	
  7107                           ; 1 bytes @ 0x0
  7108                           
  7109  0070                     ?_OLED_SetRow:	
  7110                           ; 1 bytes @ 0x0
  7111                           
  7112  0070                     ?_OLED_SetColumn:	
  7113                           ; 1 bytes @ 0x0
  7114                           
  7115  0070                     ?i1_mssp1_clearIRQ:	
  7116                           ; 1 bytes @ 0x0
  7117                           
  7118  0070                     ??i1_mssp1_clearIRQ:	
  7119                           ; 1 bytes @ 0x0
  7120                           
  7121  0070                     ?i1_mssp1_setIRQ:	
  7122                           ; 1 bytes @ 0x0
  7123                           
  7124  0070                     ??i1_mssp1_setIRQ:	
  7125                           ; 1 bytes @ 0x0
  7126                           
  7127  0070                     ?i1_i2c1_driver_resetBus:	
  7128                           ; 1 bytes @ 0x0
  7129                           
  7130  0070                     ??i1_i2c1_driver_resetBus:	
  7131                           ; 1 bytes @ 0x0
  7132                           
  7133  0070                     ?i1_i2c1_driver_restart:	
  7134                           ; 1 bytes @ 0x0
  7135                           
  7136  0070                     ??i1_i2c1_driver_restart:	
  7137                           ; 1 bytes @ 0x0
  7138                           
  7139  0070                     ?i1_i2c1_driver_stop:	
  7140                           ; 1 bytes @ 0x0
  7141                           
  7142  0070                     ??i1_i2c1_driver_stop:	
  7143                           ; 1 bytes @ 0x0
  7144                           
  7145  0070                     ??i1_i2c1_driver_isNACK:	
  7146                           ; 1 bytes @ 0x0
  7147                           
  7148  0070                     ?i1_i2c1_driver_startRX:	
  7149                           ; 1 bytes @ 0x0
  7150                           
  7151  0070                     ??i1_i2c1_driver_startRX:	
  7152                           ; 1 bytes @ 0x0
  7153                           
  7154  0070                     ?i1_i2c1_driver_getRXData:	
  7155                           ; 1 bytes @ 0x0
  7156                           
  7157  0070                     ??i1_i2c1_driver_getRXData:	
  7158                           ; 1 bytes @ 0x0
  7159                           
  7160  0070                     ?i1_i2c1_driver_TXData:	
  7161                           ; 1 bytes @ 0x0
  7162                           
  7163  0070                     ??i1_i2c1_driver_TXData:	
  7164                           ; 1 bytes @ 0x0
  7165                           
  7166  0070                     ?i1_i2c1_driver_sendACK:	
  7167                           ; 1 bytes @ 0x0
  7168                           
  7169  0070                     ??i1_i2c1_driver_sendACK:	
  7170                           ; 1 bytes @ 0x0
  7171                           
  7172  0070                     ?i1_i2c1_driver_sendNACK:	
  7173                           ; 1 bytes @ 0x0
  7174                           
  7175  0070                     ??i1_i2c1_driver_sendNACK:	
  7176                           ; 1 bytes @ 0x0
  7177                           
  7178  0070                     ?i1_i2c_setBuffer:	
  7179                           ; 1 bytes @ 0x0
  7180                           
  7181  0070                     ?i1_do_I2C_RESET:	
  7182                           ; 1 bytes @ 0x0
  7183                           
  7184  0070                     ??i1_do_I2C_RESET:	
  7185                           ; 1 bytes @ 0x0
  7186                           
  7187  0070                     ?i1_do_I2C_IDLE:	
  7188                           ; 1 bytes @ 0x0
  7189                           
  7190  0070                     ??i1_do_I2C_IDLE:	
  7191                           ; 1 bytes @ 0x0
  7192                           
  7193  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7194                           ; 1 bytes @ 0x0
  7195                           
  7196  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7197                           ; 1 bytes @ 0x0
  7198                           
  7199  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7200                           ; 1 bytes @ 0x0
  7201                           
  7202  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7203                           ; 1 bytes @ 0x0
  7204                           
  7205  0070                     ?i1_do_I2C_SEND_RESTART:	
  7206                           ; 1 bytes @ 0x0
  7207                           
  7208  0070                     ??i1_do_I2C_SEND_RESTART:	
  7209                           ; 1 bytes @ 0x0
  7210                           
  7211  0070                     ?i1_do_I2C_SEND_STOP:	
  7212                           ; 1 bytes @ 0x0
  7213                           
  7214  0070                     ??i1_do_I2C_SEND_STOP:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0070                     ?i1_do_I2C_RCEN:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0070                     ??i1_do_I2C_RCEN:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0070                     ?i1_do_I2C_DO_ACK:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0070                     ??i1_do_I2C_DO_ACK:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0070                     ?i1_do_I2C_TX:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0070                     ?i1_do_I2C_RX:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0070                     ??i1_do_I2C_RX:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0070                     ?i1_do_I2C_TX_EMPTY:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0070                     ??i1_do_I2C_TX_EMPTY:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0070                     ?i1_i2c_ISR:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0070                     ?i1_setCallBack:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0070                     i1i2c1_driver_TXData@d:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0070                     i1i2c_setBuffer@bufferSize:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0070                     i1setCallBack@cb:	
  7281                           ; 2 bytes @ 0x0
  7282                           
  7283                           
  7284                           ; 2 bytes @ 0x0
  7285  0070                     	ds	1
  7286  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7287  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7288                           ; 1 bytes @ 0x1
  7289                           
  7290  0071                     ??i1_do_I2C_TX:	
  7291                           ; 1 bytes @ 0x1
  7292                           
  7293                           
  7294                           ; 1 bytes @ 0x1
  7295  0071                     	ds	1
  7296  0072                     ??i1_i2c_setBuffer:	
  7297  0072                     i1setCallBack@p:	
  7298                           ; 1 bytes @ 0x2
  7299                           
  7300  0072                     i1_do_I2C_TX$723:	
  7301                           ; 1 bytes @ 0x2
  7302                           
  7303                           
  7304                           ; 2 bytes @ 0x2
  7305  0072                     	ds	1
  7306  0073                     ??i1_setCallBack:	
  7307  0073                     i1i2c_setBuffer@buffer:	
  7308                           ; 1 bytes @ 0x3
  7309                           
  7310                           
  7311                           ; 1 bytes @ 0x3
  7312  0073                     	ds	1
  7313  0074                     ??i1_i2c_ISR:	
  7314  0074                     i1setCallBack@idx:	
  7315                           ; 1 bytes @ 0x4
  7316                           
  7317                           
  7318                           ; 1 bytes @ 0x4
  7319  0074                     	ds	1
  7320  0075                     ?i1_i2c_setDataCompleteCallback:	
  7321  0075                     i1i2c_setDataCompleteCallback@cb:	
  7322                           ; 1 bytes @ 0x5
  7323                           
  7324                           
  7325                           ; 2 bytes @ 0x5
  7326  0075                     	ds	2
  7327  0077                     ??_INTERRUPT_InterruptManager:	
  7328  0077                     i1i2c_setDataCompleteCallback@p:	
  7329                           ; 1 bytes @ 0x7
  7330                           
  7331                           
  7332                           ; 1 bytes @ 0x7
  7333  0077                     	ds	1
  7334  0078                     ??i1_returnStop:	
  7335  0078                     ??i1_returnReset:	
  7336                           ; 1 bytes @ 0x8
  7337                           
  7338  0078                     ??i1_i2c_restartWrite:	
  7339                           ; 1 bytes @ 0x8
  7340                           
  7341  0078                     ??i1_wr1RegCompleteHandler:	
  7342                           ; 1 bytes @ 0x8
  7343                           
  7344  0078                     ??i1_rd1RegCompleteHandler:	
  7345                           ; 1 bytes @ 0x8
  7346                           
  7347  0078                     ??i1_rd2RegCompleteHandler:	
  7348                           ; 1 bytes @ 0x8
  7349                           
  7350  0078                     ??i1_wr2RegCompleteHandler:	
  7351                           ; 1 bytes @ 0x8
  7352                           
  7353  0078                     ??i1_rdBlkRegCompleteHandler:	
  7354                           ; 1 bytes @ 0x8
  7355                           
  7356                           
  7357                           	psect	cstackBANK0
  7358  0020                     __pcstackBANK0:	
  7359                           ; 1 bytes @ 0x8
  7360                           
  7361  0020                     ?_setCallBack:	
  7362  0020                     ?_memset:	
  7363                           ; 1 bytes @ 0x0
  7364                           
  7365  0020                     ??_PMD_Initialize:	
  7366                           ; 1 bytes @ 0x0
  7367                           
  7368  0020                     ??_OSCILLATOR_Initialize:	
  7369                           ; 1 bytes @ 0x0
  7370                           
  7371  0020                     ??_SPI2_Initialize:	
  7372                           ; 1 bytes @ 0x0
  7373                           
  7374  0020                     ??_isdigit:	
  7375                           ; 1 bytes @ 0x0
  7376                           
  7377  0020                     ??_mssp1_IRQisEnabled:	
  7378                           ; 1 bytes @ 0x0
  7379                           
  7380  0020                     ??_mssp1_disableIRQ:	
  7381                           ; 1 bytes @ 0x0
  7382                           
  7383  0020                     ??_mssp1_clearIRQ:	
  7384                           ; 1 bytes @ 0x0
  7385                           
  7386  0020                     ??_mssp1_setIRQ:	
  7387                           ; 1 bytes @ 0x0
  7388                           
  7389  0020                     ??_mssp1_waitForEvent:	
  7390                           ; 1 bytes @ 0x0
  7391                           
  7392  0020                     ??_i2c1_driver_open:	
  7393                           ; 1 bytes @ 0x0
  7394                           
  7395  0020                     ??_i2c1_driver_resetBus:	
  7396                           ; 1 bytes @ 0x0
  7397                           
  7398  0020                     ??_i2c1_driver_start:	
  7399                           ; 1 bytes @ 0x0
  7400                           
  7401  0020                     ??_i2c1_driver_restart:	
  7402                           ; 1 bytes @ 0x0
  7403                           
  7404  0020                     ??_i2c1_driver_stop:	
  7405                           ; 1 bytes @ 0x0
  7406                           
  7407  0020                     ??_i2c1_driver_isNACK:	
  7408                           ; 1 bytes @ 0x0
  7409                           
  7410  0020                     ??_i2c1_driver_startRX:	
  7411                           ; 1 bytes @ 0x0
  7412                           
  7413  0020                     ??_i2c1_driver_getRXData:	
  7414                           ; 1 bytes @ 0x0
  7415                           
  7416  0020                     ??_i2c1_driver_TXData:	
  7417                           ; 1 bytes @ 0x0
  7418                           
  7419  0020                     ??_i2c1_driver_sendACK:	
  7420                           ; 1 bytes @ 0x0
  7421                           
  7422  0020                     ??_i2c1_driver_sendNACK:	
  7423                           ; 1 bytes @ 0x0
  7424                           
  7425  0020                     ?_i2c1_driver_setBusCollisionISR:	
  7426                           ; 1 bytes @ 0x0
  7427                           
  7428  0020                     ?_i2c1_driver_setI2cISR:	
  7429                           ; 1 bytes @ 0x0
  7430                           
  7431  0020                     ??_i2c_close:	
  7432                           ; 1 bytes @ 0x0
  7433                           
  7434  0020                     ?_i2c_setBuffer:	
  7435                           ; 1 bytes @ 0x0
  7436                           
  7437  0020                     ??_do_I2C_RESET:	
  7438                           ; 1 bytes @ 0x0
  7439                           
  7440  0020                     ??_do_I2C_IDLE:	
  7441                           ; 1 bytes @ 0x0
  7442                           
  7443  0020                     ??_do_I2C_SEND_RESTART_READ:	
  7444                           ; 1 bytes @ 0x0
  7445                           
  7446  0020                     ??_do_I2C_SEND_RESTART_WRITE:	
  7447                           ; 1 bytes @ 0x0
  7448                           
  7449  0020                     ??_do_I2C_SEND_RESTART:	
  7450                           ; 1 bytes @ 0x0
  7451                           
  7452  0020                     ??_do_I2C_SEND_STOP:	
  7453                           ; 1 bytes @ 0x0
  7454                           
  7455  0020                     ??_do_I2C_RCEN:	
  7456                           ; 1 bytes @ 0x0
  7457                           
  7458  0020                     ??_do_I2C_DO_ACK:	
  7459                           ; 1 bytes @ 0x0
  7460                           
  7461  0020                     ??_do_I2C_DO_NACK_STOP:	
  7462                           ; 1 bytes @ 0x0
  7463                           
  7464  0020                     ??_do_I2C_DO_NACK_RESTART:	
  7465                           ; 1 bytes @ 0x0
  7466                           
  7467  0020                     ??_do_I2C_DO_ADDRESS_NACK:	
  7468                           ; 1 bytes @ 0x0
  7469                           
  7470  0020                     ??_do_I2C_RX:	
  7471                           ; 1 bytes @ 0x0
  7472                           
  7473  0020                     ??_do_I2C_TX_EMPTY:	
  7474                           ; 1 bytes @ 0x0
  7475                           
  7476  0020                     ??_PIN_MANAGER_Initialize:	
  7477                           ; 1 bytes @ 0x0
  7478                           
  7479  0020                     ??_SPI2_Exchange8bit:	
  7480                           ; 1 bytes @ 0x0
  7481                           
  7482  0020                     ?___bmul:	
  7483                           ; 1 bytes @ 0x0
  7484                           
  7485  0020                     ??i1_i2c_setDataCompleteCallback:	
  7486                           ; 1 bytes @ 0x0
  7487                           
  7488  0020                     ?_strlen:	
  7489                           ; 1 bytes @ 0x0
  7490                           
  7491  0020                     ?___wmul:	
  7492                           ; 2 bytes @ 0x0
  7493                           
  7494  0020                     ?___awdiv:	
  7495                           ; 2 bytes @ 0x0
  7496                           
  7497  0020                     ?___awmod:	
  7498                           ; 2 bytes @ 0x0
  7499                           
  7500  0020                     ?___lmul:	
  7501                           ; 2 bytes @ 0x0
  7502                           
  7503  0020                     ?___aldiv:	
  7504                           ; 4 bytes @ 0x0
  7505                           
  7506  0020                     ?___almod:	
  7507                           ; 4 bytes @ 0x0
  7508                           
  7509  0020                     mssp1_waitForEvent@timeout:	
  7510                           ; 4 bytes @ 0x0
  7511                           
  7512  0020                     i2c1_driver_TXData@d:	
  7513                           ; 1 bytes @ 0x0
  7514                           
  7515  0020                     SPI2_Exchange8bit@data:	
  7516                           ; 1 bytes @ 0x0
  7517                           
  7518  0020                     ___bmul@multiplicand:	
  7519                           ; 1 bytes @ 0x0
  7520                           
  7521  0020                     _isdigit$2049:	
  7522                           ; 1 bytes @ 0x0
  7523                           
  7524  0020                     i2c1_driver_setBusCollisionISR@f:	
  7525                           ; 1 bytes @ 0x0
  7526                           
  7527  0020                     i2c1_driver_setI2cISR@f:	
  7528                           ; 2 bytes @ 0x0
  7529                           
  7530  0020                     i2c_setBuffer@bufferSize:	
  7531                           ; 2 bytes @ 0x0
  7532                           
  7533  0020                     setCallBack@cb:	
  7534                           ; 2 bytes @ 0x0
  7535                           
  7536  0020                     ___wmul@multiplier:	
  7537                           ; 2 bytes @ 0x0
  7538                           
  7539  0020                     ___awdiv@divisor:	
  7540                           ; 2 bytes @ 0x0
  7541                           
  7542  0020                     ___awmod@divisor:	
  7543                           ; 2 bytes @ 0x0
  7544                           
  7545  0020                     memset@c:	
  7546                           ; 2 bytes @ 0x0
  7547                           
  7548  0020                     strlen@s:	
  7549                           ; 2 bytes @ 0x0
  7550                           
  7551  0020                     ___lmul@multiplier:	
  7552                           ; 2 bytes @ 0x0
  7553                           
  7554  0020                     ___aldiv@divisor:	
  7555                           ; 4 bytes @ 0x0
  7556                           
  7557  0020                     ___almod@divisor:	
  7558                           ; 4 bytes @ 0x0
  7559                           
  7560                           
  7561                           ; 4 bytes @ 0x0
  7562  0020                     	ds	1
  7563  0021                     ??_do_I2C_SEND_ADR_READ:	
  7564  0021                     ??_do_I2C_SEND_ADR_WRITE:	
  7565                           ; 1 bytes @ 0x1
  7566                           
  7567  0021                     ??_do_I2C_TX:	
  7568                           ; 1 bytes @ 0x1
  7569                           
  7570  0021                     ??_OLED_Command:	
  7571                           ; 1 bytes @ 0x1
  7572                           
  7573  0021                     ??_OLED_Data:	
  7574                           ; 1 bytes @ 0x1
  7575                           
  7576  0021                     ??___bmul:	
  7577                           ; 1 bytes @ 0x1
  7578                           
  7579  0021                     ?i1_returnStop:	
  7580                           ; 1 bytes @ 0x1
  7581                           
  7582  0021                     ?i1_returnReset:	
  7583                           ; 1 bytes @ 0x1
  7584                           
  7585  0021                     ?i1_i2c_restartWrite:	
  7586                           ; 1 bytes @ 0x1
  7587                           
  7588  0021                     ?i1_wr1RegCompleteHandler:	
  7589                           ; 1 bytes @ 0x1
  7590                           
  7591  0021                     ?i1_rd1RegCompleteHandler:	
  7592                           ; 1 bytes @ 0x1
  7593                           
  7594  0021                     ?i1_rd2RegCompleteHandler:	
  7595                           ; 1 bytes @ 0x1
  7596                           
  7597  0021                     ?i1_wr2RegCompleteHandler:	
  7598                           ; 1 bytes @ 0x1
  7599                           
  7600  0021                     ?i1_rdBlkRegCompleteHandler:	
  7601                           ; 1 bytes @ 0x1
  7602                           
  7603  0021                     i2c_close@ret:	
  7604                           ; 1 bytes @ 0x1
  7605                           
  7606  0021                     OLED_Command@temp:	
  7607                           ; 1 bytes @ 0x1
  7608                           
  7609  0021                     OLED_Data@temp:	
  7610                           ; 1 bytes @ 0x1
  7611                           
  7612  0021                     isdigit@c:	
  7613                           ; 1 bytes @ 0x1
  7614                           
  7615  0021                     i1returnStop@p:	
  7616                           ; 1 bytes @ 0x1
  7617                           
  7618  0021                     i1returnReset@p:	
  7619                           ; 1 bytes @ 0x1
  7620                           
  7621  0021                     i1i2c_restartWrite@p:	
  7622                           ; 1 bytes @ 0x1
  7623                           
  7624  0021                     i1wr1RegCompleteHandler@p:	
  7625                           ; 1 bytes @ 0x1
  7626                           
  7627  0021                     i1rd1RegCompleteHandler@p:	
  7628                           ; 1 bytes @ 0x1
  7629                           
  7630  0021                     i1rd2RegCompleteHandler@p:	
  7631                           ; 1 bytes @ 0x1
  7632                           
  7633  0021                     i1wr2RegCompleteHandler@p:	
  7634                           ; 1 bytes @ 0x1
  7635                           
  7636  0021                     i1rdBlkRegCompleteHandler@p:	
  7637                           ; 1 bytes @ 0x1
  7638                           
  7639                           
  7640                           ; 1 bytes @ 0x1
  7641  0021                     	ds	1
  7642  0022                     ??_OLED_Initialize:	
  7643  0022                     ??_strlen:	
  7644                           ; 1 bytes @ 0x2
  7645                           
  7646  0022                     ??_i2c1_driver_setBusCollisionISR:	
  7647                           ; 1 bytes @ 0x2
  7648                           
  7649  0022                     ??_i2c1_driver_setI2cISR:	
  7650                           ; 1 bytes @ 0x2
  7651                           
  7652  0022                     ??_i2c_open:	
  7653                           ; 1 bytes @ 0x2
  7654                           
  7655  0022                     ??_i2c_setBuffer:	
  7656                           ; 1 bytes @ 0x2
  7657                           
  7658  0022                     ??_OLED_SetRow:	
  7659                           ; 1 bytes @ 0x2
  7660                           
  7661  0022                     ??_OLED_SetColumn:	
  7662                           ; 1 bytes @ 0x2
  7663                           
  7664  0022                     setCallBack@p:	
  7665                           ; 1 bytes @ 0x2
  7666                           
  7667  0022                     ___bmul@product:	
  7668                           ; 1 bytes @ 0x2
  7669                           
  7670  0022                     _do_I2C_TX$723:	
  7671                           ; 1 bytes @ 0x2
  7672                           
  7673  0022                     ___wmul@multiplicand:	
  7674                           ; 2 bytes @ 0x2
  7675                           
  7676  0022                     ___awdiv@dividend:	
  7677                           ; 2 bytes @ 0x2
  7678                           
  7679  0022                     ___awmod@dividend:	
  7680                           ; 2 bytes @ 0x2
  7681                           
  7682  0022                     memset@n:	
  7683                           ; 2 bytes @ 0x2
  7684                           
  7685                           
  7686                           ; 2 bytes @ 0x2
  7687  0022                     	ds	1
  7688  0023                     ??_setCallBack:	
  7689  0023                     i2c_open@address:	
  7690                           ; 1 bytes @ 0x3
  7691                           
  7692  0023                     i2c_setBuffer@buffer:	
  7693                           ; 1 bytes @ 0x3
  7694                           
  7695  0023                     OLED_SetRow@address:	
  7696                           ; 1 bytes @ 0x3
  7697                           
  7698  0023                     OLED_SetColumn@address:	
  7699                           ; 1 bytes @ 0x3
  7700                           
  7701  0023                     ___bmul@multiplier:	
  7702                           ; 1 bytes @ 0x3
  7703                           
  7704                           
  7705                           ; 1 bytes @ 0x3
  7706  0023                     	ds	1
  7707  0024                     ??_i2c_ISR:	
  7708  0024                     ??_memset:	
  7709                           ; 1 bytes @ 0x4
  7710                           
  7711  0024                     ?_OLED_PutPicture:	
  7712                           ; 1 bytes @ 0x4
  7713                           
  7714  0024                     ??___wmul:	
  7715                           ; 1 bytes @ 0x4
  7716                           
  7717  0024                     ??___awdiv:	
  7718                           ; 1 bytes @ 0x4
  7719                           
  7720  0024                     ??___awmod:	
  7721                           ; 1 bytes @ 0x4
  7722                           
  7723  0024                     i2c_open@ret:	
  7724                           ; 1 bytes @ 0x4
  7725                           
  7726  0024                     setCallBack@idx:	
  7727                           ; 1 bytes @ 0x4
  7728                           
  7729  0024                     OLED_PutPicture@pic:	
  7730                           ; 1 bytes @ 0x4
  7731                           
  7732  0024                     ___wmul@product:	
  7733                           ; 2 bytes @ 0x4
  7734                           
  7735  0024                     strlen@cp:	
  7736                           ; 2 bytes @ 0x4
  7737                           
  7738  0024                     ___lmul@multiplicand:	
  7739                           ; 2 bytes @ 0x4
  7740                           
  7741  0024                     ___aldiv@dividend:	
  7742                           ; 4 bytes @ 0x4
  7743                           
  7744  0024                     ___almod@dividend:	
  7745                           ; 4 bytes @ 0x4
  7746                           
  7747                           
  7748                           ; 4 bytes @ 0x4
  7749  0024                     	ds	1
  7750  0025                     ?_i2c_setDataCompleteCallback:	
  7751  0025                     ?_i2c_setAddressNACKCallback:	
  7752                           ; 1 bytes @ 0x5
  7753                           
  7754  0025                     ___awdiv@counter:	
  7755                           ; 1 bytes @ 0x5
  7756                           
  7757  0025                     ___awmod@counter:	
  7758                           ; 1 bytes @ 0x5
  7759                           
  7760  0025                     memset@p:	
  7761                           ; 1 bytes @ 0x5
  7762                           
  7763  0025                     i2c_setDataCompleteCallback@cb:	
  7764                           ; 1 bytes @ 0x5
  7765                           
  7766  0025                     i2c_setAddressNACKCallback@cb:	
  7767                           ; 2 bytes @ 0x5
  7768                           
  7769                           
  7770                           ; 2 bytes @ 0x5
  7771  0025                     	ds	1
  7772  0026                     ?_Modify_Data:	
  7773  0026                     ??_OLED_PutPicture:	
  7774                           ; 1 bytes @ 0x6
  7775                           
  7776  0026                     ?___lwdiv:	
  7777                           ; 1 bytes @ 0x6
  7778                           
  7779  0026                     ___awdiv@sign:	
  7780                           ; 2 bytes @ 0x6
  7781                           
  7782  0026                     ___awmod@sign:	
  7783                           ; 1 bytes @ 0x6
  7784                           
  7785  0026                     memset@p1:	
  7786                           ; 1 bytes @ 0x6
  7787                           
  7788  0026                     OLED_PutPicture@j:	
  7789                           ; 1 bytes @ 0x6
  7790                           
  7791  0026                     Modify_Data@c:	
  7792                           ; 2 bytes @ 0x6
  7793                           
  7794  0026                     ___lwdiv@divisor:	
  7795                           ; 2 bytes @ 0x6
  7796                           
  7797                           
  7798                           ; 2 bytes @ 0x6
  7799  0026                     	ds	1
  7800  0027                     ??_i2c_poller:	
  7801  0027                     ??_i2c_masterOperation:	
  7802                           ; 1 bytes @ 0x7
  7803                           
  7804  0027                     i2c_setDataCompleteCallback@p:	
  7805                           ; 1 bytes @ 0x7
  7806                           
  7807  0027                     i2c_setAddressNACKCallback@p:	
  7808                           ; 1 bytes @ 0x7
  7809                           
  7810  0027                     ___awdiv@quotient:	
  7811                           ; 1 bytes @ 0x7
  7812                           
  7813                           
  7814                           ; 2 bytes @ 0x7
  7815  0027                     	ds	1
  7816  0028                     ??_i2c_setDataCompleteCallback:	
  7817  0028                     ??_i2c_setAddressNACKCallback:	
  7818                           ; 1 bytes @ 0x8
  7819                           
  7820  0028                     ??___lmul:	
  7821                           ; 1 bytes @ 0x8
  7822                           
  7823  0028                     ??___aldiv:	
  7824                           ; 1 bytes @ 0x8
  7825                           
  7826  0028                     ??___almod:	
  7827                           ; 1 bytes @ 0x8
  7828                           
  7829  0028                     i2c_masterOperation@read:	
  7830                           ; 1 bytes @ 0x8
  7831                           
  7832  0028                     OLED_PutPicture@i:	
  7833                           ; 1 bytes @ 0x8
  7834                           
  7835  0028                     Modify_Data@offset:	
  7836                           ; 2 bytes @ 0x8
  7837                           
  7838  0028                     ___lwdiv@dividend:	
  7839                           ; 2 bytes @ 0x8
  7840                           
  7841  0028                     ___lmul@product:	
  7842                           ; 2 bytes @ 0x8
  7843                           
  7844                           
  7845                           ; 4 bytes @ 0x8
  7846  0028                     	ds	1
  7847  0029                     ?_returnStop:	
  7848  0029                     ?_returnReset:	
  7849                           ; 1 bytes @ 0x9
  7850                           
  7851  0029                     ?_i2c_restartWrite:	
  7852                           ; 1 bytes @ 0x9
  7853                           
  7854  0029                     ?_wr1RegCompleteHandler:	
  7855                           ; 1 bytes @ 0x9
  7856                           
  7857  0029                     ?_rd1RegCompleteHandler:	
  7858                           ; 1 bytes @ 0x9
  7859                           
  7860  0029                     ?_rd2RegCompleteHandler:	
  7861                           ; 1 bytes @ 0x9
  7862                           
  7863  0029                     ?_wr2RegCompleteHandler:	
  7864                           ; 1 bytes @ 0x9
  7865                           
  7866  0029                     ?_rdBlkRegCompleteHandler:	
  7867                           ; 1 bytes @ 0x9
  7868                           
  7869  0029                     i2c_masterOperation@ret:	
  7870                           ; 1 bytes @ 0x9
  7871                           
  7872  0029                     returnStop@p:	
  7873                           ; 1 bytes @ 0x9
  7874                           
  7875  0029                     returnReset@p:	
  7876                           ; 1 bytes @ 0x9
  7877                           
  7878  0029                     i2c_restartWrite@p:	
  7879                           ; 1 bytes @ 0x9
  7880                           
  7881  0029                     wr1RegCompleteHandler@p:	
  7882                           ; 1 bytes @ 0x9
  7883                           
  7884  0029                     rd1RegCompleteHandler@p:	
  7885                           ; 1 bytes @ 0x9
  7886                           
  7887  0029                     rd2RegCompleteHandler@p:	
  7888                           ; 1 bytes @ 0x9
  7889                           
  7890  0029                     wr2RegCompleteHandler@p:	
  7891                           ; 1 bytes @ 0x9
  7892                           
  7893  0029                     rdBlkRegCompleteHandler@p:	
  7894                           ; 1 bytes @ 0x9
  7895                           
  7896  0029                     ___aldiv@counter:	
  7897                           ; 1 bytes @ 0x9
  7898                           
  7899  0029                     ___almod@counter:	
  7900                           ; 1 bytes @ 0x9
  7901                           
  7902                           
  7903                           ; 1 bytes @ 0x9
  7904  0029                     	ds	1
  7905  002A                     ??_returnStop:	
  7906  002A                     ??_returnReset:	
  7907                           ; 1 bytes @ 0xA
  7908                           
  7909  002A                     ?_i2c_read1ByteRegister:	
  7910                           ; 1 bytes @ 0xA
  7911                           
  7912  002A                     ?_i2c_write1ByteRegister:	
  7913                           ; 1 bytes @ 0xA
  7914                           
  7915  002A                     ??_i2c_masterWrite:	
  7916                           ; 1 bytes @ 0xA
  7917                           
  7918  002A                     ??_i2c_restartWrite:	
  7919                           ; 1 bytes @ 0xA
  7920                           
  7921  002A                     ??_wr1RegCompleteHandler:	
  7922                           ; 1 bytes @ 0xA
  7923                           
  7924  002A                     ??_rd1RegCompleteHandler:	
  7925                           ; 1 bytes @ 0xA
  7926                           
  7927  002A                     ??_rd2RegCompleteHandler:	
  7928                           ; 1 bytes @ 0xA
  7929                           
  7930  002A                     ??_wr2RegCompleteHandler:	
  7931                           ; 1 bytes @ 0xA
  7932                           
  7933  002A                     ??_rdBlkRegCompleteHandler:	
  7934                           ; 1 bytes @ 0xA
  7935                           
  7936  002A                     ??___lwdiv:	
  7937                           ; 1 bytes @ 0xA
  7938                           
  7939  002A                     i2c_write1ByteRegister@reg:	
  7940                           ; 1 bytes @ 0xA
  7941                           
  7942  002A                     i2c_read1ByteRegister@reg:	
  7943                           ; 1 bytes @ 0xA
  7944                           
  7945  002A                     ___aldiv@sign:	
  7946                           ; 1 bytes @ 0xA
  7947                           
  7948  002A                     ___almod@sign:	
  7949                           ; 1 bytes @ 0xA
  7950                           
  7951  002A                     Modify_Data@limit:	
  7952                           ; 1 bytes @ 0xA
  7953                           
  7954                           
  7955                           ; 2 bytes @ 0xA
  7956  002A                     	ds	1
  7957  002B                     ??_i2c_read1ByteRegister:	
  7958  002B                     i2c_write1ByteRegister@data:	
  7959                           ; 1 bytes @ 0xB
  7960                           
  7961  002B                     ___lwdiv@counter:	
  7962                           ; 1 bytes @ 0xB
  7963                           
  7964  002B                     ___aldiv@quotient:	
  7965                           ; 1 bytes @ 0xB
  7966                           
  7967                           
  7968                           ; 4 bytes @ 0xB
  7969  002B                     	ds	1
  7970  002C                     ??_i2c_write1ByteRegister:	
  7971  002C                     ??_Modify_Data:	
  7972                           ; 1 bytes @ 0xC
  7973                           
  7974  002C                     i2c_read1ByteRegister@address:	
  7975                           ; 1 bytes @ 0xC
  7976                           
  7977  002C                     ___lwdiv@quotient:	
  7978                           ; 1 bytes @ 0xC
  7979                           
  7980                           
  7981                           ; 2 bytes @ 0xC
  7982  002C                     	ds	1
  7983  002D                     i2c_write1ByteRegister@address:	
  7984  002D                     i2c_read1ByteRegister@e:	
  7985                           ; 1 bytes @ 0xD
  7986                           
  7987                           
  7988                           ; 1 bytes @ 0xD
  7989  002D                     	ds	1
  7990  002E                     ?_rtcc_write:	
  7991  002E                     ?___lwmod:	
  7992                           ; 1 bytes @ 0xE
  7993                           
  7994  002E                     ?_months_to_days:	
  7995                           ; 2 bytes @ 0xE
  7996                           
  7997  002E                     ?_years_to_days:	
  7998                           ; 2 bytes @ 0xE
  7999                           
  8000  002E                     rtcc_write@data:	
  8001                           ; 4 bytes @ 0xE
  8002                           
  8003  002E                     i2c_read1ByteRegister@x:	
  8004                           ; 1 bytes @ 0xE
  8005                           
  8006  002E                     ___lwmod@divisor:	
  8007                           ; 2 bytes @ 0xE
  8008                           
  8009  002E                     months_to_days@month:	
  8010                           ; 2 bytes @ 0xE
  8011                           
  8012  002E                     years_to_days@yr:	
  8013                           ; 2 bytes @ 0xE
  8014                           
  8015                           
  8016                           ; 2 bytes @ 0xE
  8017  002E                     	ds	1
  8018  002F                     ??_rtcc_write:	
  8019                           
  8020                           ; 1 bytes @ 0xF
  8021  002F                     	ds	1
  8022  0030                     ??_months_to_days:	
  8023  0030                     i2c_read1ByteRegister@d2:	
  8024                           ; 1 bytes @ 0x10
  8025                           
  8026  0030                     ___lwmod@dividend:	
  8027                           ; 1 bytes @ 0x10
  8028                           
  8029                           
  8030                           ; 2 bytes @ 0x10
  8031  0030                     	ds	1
  8032  0031                     ??_rtcc_read:	
  8033  0031                     rtcc_write@addr:	
  8034                           ; 1 bytes @ 0x11
  8035                           
  8036                           
  8037                           ; 1 bytes @ 0x11
  8038  0031                     	ds	1
  8039  0032                     ??___lwmod:	
  8040  0032                     ??_years_to_days:	
  8041                           ; 1 bytes @ 0x12
  8042                           
  8043  0032                     rtcc_read@addr:	
  8044                           ; 1 bytes @ 0x12
  8045                           
  8046                           
  8047                           ; 1 bytes @ 0x12
  8048  0032                     	ds	1
  8049  0033                     ??_rtc6_Initialize:	
  8050  0033                     ?_rtc6_SetComponent:	
  8051                           ; 1 bytes @ 0x13
  8052                           
  8053  0033                     ?_rtc6_GetComponent:	
  8054                           ; 1 bytes @ 0x13
  8055                           
  8056  0033                     rtc6_SetComponent@mask:	
  8057                           ; 1 bytes @ 0x13
  8058                           
  8059  0033                     rtc6_GetComponent@mask:	
  8060                           ; 1 bytes @ 0x13
  8061                           
  8062  0033                     ___lwmod@counter:	
  8063                           ; 1 bytes @ 0x13
  8064                           
  8065                           
  8066                           ; 1 bytes @ 0x13
  8067  0033                     	ds	1
  8068  0034                     ??_rtc6_GetComponent:	
  8069  0034                     ?_sprintf:	
  8070                           ; 1 bytes @ 0x14
  8071                           
  8072  0034                     ?_dylen:	
  8073                           ; 2 bytes @ 0x14
  8074                           
  8075  0034                     ?_isleap:	
  8076                           ; 2 bytes @ 0x14
  8077                           
  8078  0034                     rtc6_SetComponent@time:	
  8079                           ; 2 bytes @ 0x14
  8080                           
  8081  0034                     sprintf@sp:	
  8082                           ; 1 bytes @ 0x14
  8083                           
  8084  0034                     dylen@yr:	
  8085                           ; 2 bytes @ 0x14
  8086                           
  8087  0034                     isleap@yr:	
  8088                           ; 2 bytes @ 0x14
  8089                           
  8090                           
  8091                           ; 2 bytes @ 0x14
  8092  0034                     	ds	1
  8093  0035                     ??_rtc6_SetComponent:	
  8094  0035                     rtc6_Initialize@reg:	
  8095                           ; 1 bytes @ 0x15
  8096                           
  8097  0035                     Modify_Data@right:	
  8098                           ; 1 bytes @ 0x15
  8099                           
  8100                           
  8101                           ; 2 bytes @ 0x15
  8102  0035                     	ds	1
  8103  0036                     ??_SYSTEM_Initialize:	
  8104  0036                     ??_dylen:	
  8105                           ; 1 bytes @ 0x16
  8106                           
  8107  0036                     ??_isleap:	
  8108                           ; 1 bytes @ 0x16
  8109                           
  8110  0036                     sprintf@f:	
  8111                           ; 1 bytes @ 0x16
  8112                           
  8113                           
  8114                           ; 2 bytes @ 0x16
  8115  0036                     	ds	1
  8116  0037                     rtc6_GetComponent@location:	
  8117  0037                     Modify_Data@p:	
  8118                           ; 1 bytes @ 0x17
  8119                           
  8120                           
  8121                           ; 2 bytes @ 0x17
  8122  0037                     	ds	1
  8123  0038                     ??_gmtime:	
  8124  0038                     rtc6_GetComponent@working:	
  8125                           ; 1 bytes @ 0x18
  8126                           
  8127  0038                     _isleap$2117:	
  8128                           ; 1 bytes @ 0x18
  8129                           
  8130                           
  8131                           ; 1 bytes @ 0x18
  8132  0038                     	ds	1
  8133  0039                     Modify_Data@j:	
  8134                           
  8135                           ; 2 bytes @ 0x19
  8136  0039                     	ds	1
  8137  003A                     gmtime@tp:	
  8138                           
  8139                           ; 1 bytes @ 0x1A
  8140  003A                     	ds	1
  8141  003B                     rtc6_SetComponent@inMemory:	
  8142  003B                     gmtime@tc:	
  8143                           ; 1 bytes @ 0x1B
  8144                           
  8145                           
  8146                           ; 4 bytes @ 0x1B
  8147  003B                     	ds	1
  8148  003C                     rtc6_SetComponent@location:	
  8149                           
  8150                           ; 1 bytes @ 0x1C
  8151  003C                     	ds	3
  8152  003F                     ??_localtime:	
  8153                           
  8154                           ; 1 bytes @ 0x1F
  8155  003F                     	ds	1
  8156  0040                     ?_ymd_to_scalar:	
  8157  0040                     ymd_to_scalar@yr:	
  8158                           ; 4 bytes @ 0x20
  8159                           
  8160                           
  8161                           ; 2 bytes @ 0x20
  8162  0040                     	ds	2
  8163  0042                     ymd_to_scalar@mo:	
  8164                           
  8165                           ; 2 bytes @ 0x22
  8166  0042                     	ds	2
  8167  0044                     ??_sprintf:	
  8168  0044                     ymd_to_scalar@day:	
  8169                           ; 1 bytes @ 0x24
  8170                           
  8171                           
  8172                           ; 2 bytes @ 0x24
  8173  0044                     	ds	2
  8174  0046                     ??_ymd_to_scalar:	
  8175                           
  8176                           ; 1 bytes @ 0x26
  8177  0046                     	ds	1
  8178  0047                     localtime@t:	
  8179                           
  8180                           ; 4 bytes @ 0x27
  8181  0047                     	ds	1
  8182  0048                     sprintf@ap:	
  8183                           
  8184                           ; 1 bytes @ 0x28
  8185  0048                     	ds	1
  8186  0049                     sprintf@cp:	
  8187                           
  8188                           ; 1 bytes @ 0x29
  8189  0049                     	ds	1
  8190  004A                     sprintf@prec:	
  8191  004A                     _ymd_to_scalar$2129:	
  8192                           ; 1 bytes @ 0x2A
  8193                           
  8194                           
  8195                           ; 2 bytes @ 0x2A
  8196  004A                     	ds	1
  8197  004B                     localtime@tp:	
  8198  004B                     sprintf@len:	
  8199                           ; 1 bytes @ 0x2B
  8200                           
  8201                           
  8202                           ; 2 bytes @ 0x2B
  8203  004B                     	ds	1
  8204  004C                     ?_rtc6_SetTime:	
  8205  004C                     rtc6_SetTime@t:	
  8206                           ; 1 bytes @ 0x2C
  8207                           
  8208  004C                     ymd_to_scalar@scalar:	
  8209                           ; 4 bytes @ 0x2C
  8210                           
  8211                           
  8212                           ; 4 bytes @ 0x2C
  8213  004C                     	ds	1
  8214  004D                     sprintf@val:	
  8215                           
  8216                           ; 2 bytes @ 0x2D
  8217  004D                     	ds	2
  8218  004F                     sprintf@flag:	
  8219                           
  8220                           ; 1 bytes @ 0x2F
  8221  004F                     	ds	1
  8222  0050                     ??_rtc6_SetTime:	
  8223  0050                     ?_mktime:	
  8224                           ; 1 bytes @ 0x30
  8225                           
  8226  0050                     sprintf@width:	
  8227                           ; 4 bytes @ 0x30
  8228                           
  8229                           
  8230                           ; 2 bytes @ 0x30
  8231  0050                     	ds	2
  8232  0052                     sprintf@c:	
  8233  0052                     _rtc6_SetTime$2639:	
  8234                           ; 1 bytes @ 0x32
  8235                           
  8236                           
  8237                           ; 1 bytes @ 0x32
  8238  0052                     	ds	1
  8239  0053                     ?_Write_String:	
  8240  0053                     rtc6_SetTime@tm_t:	
  8241                           ; 1 bytes @ 0x33
  8242                           
  8243  0053                     Write_String@message:	
  8244                           ; 1 bytes @ 0x33
  8245                           
  8246                           
  8247                           ; 2 bytes @ 0x33
  8248  0053                     	ds	1
  8249  0054                     ??_mktime:	
  8250  0054                     ??_SetupClock:	
  8251                           ; 1 bytes @ 0x34
  8252                           
  8253                           
  8254                           ; 1 bytes @ 0x34
  8255  0054                     	ds	1
  8256  0055                     ??_Write_String:	
  8257  0055                     Write_String@len:	
  8258                           ; 1 bytes @ 0x35
  8259                           
  8260  0055                     SetupClock@setTime:	
  8261                           ; 2 bytes @ 0x35
  8262                           
  8263                           
  8264                           ; 4 bytes @ 0x35
  8265  0055                     	ds	4
  8266  0059                     SetupClock@initialTime:	
  8267                           
  8268                           ; 18 bytes @ 0x39
  8269  0059                     	ds	1
  8270  005A                     mktime@tt:	
  8271                           
  8272                           ; 4 bytes @ 0x3A
  8273  005A                     	ds	4
  8274  005E                     mktime@timeptr:	
  8275                           
  8276                           ; 1 bytes @ 0x3E
  8277  005E                     	ds	1
  8278  005F                     ?_rtc6_GetTime:	
  8279                           
  8280                           ; 4 bytes @ 0x3F
  8281  005F                     	ds	4
  8282  0063                     ??_rtc6_GetTime:	
  8283                           
  8284                           ; 1 bytes @ 0x43
  8285  0063                     	ds	8
  8286  006B                     ??_main:	
  8287                           
  8288                           ; 1 bytes @ 0x4B
  8289  006B                     	ds	4
  8290                           
  8291                           	psect	maintext
  8292  0C85                     __pmaintext:	
  8293 ;;
  8294 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8295 ;;
  8296 ;; *************** function _main *****************
  8297 ;; Defined at:
  8298 ;;		line 7 in file "main.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;  getTime         4   19[BANK1 ] volatile long 
  8303 ;;  tm_t            1   18[BANK1 ] PTR struct tm
  8304 ;;		 -> gmtime@tim(18), 
  8305 ;;  timeStr         0   18[BANK1 ] unsigned char [0]
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  1    wreg      void 
  8308 ;; Registers used:
  8309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : B1F/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Totals:         0       4       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;Total ram usage:        9 bytes
  8320 ;; Hardware stack levels required when called:   19
  8321 ;; This function calls:
  8322 ;;		_OLED_Initialize
  8323 ;;		_SYSTEM_Initialize
  8324 ;;		_SetupClock
  8325 ;;		_Write_String
  8326 ;;		_localtime
  8327 ;;		_rtc6_GetTime
  8328 ;;		_sprintf
  8329 ;; This function is called by:
  8330 ;;		Startup code after reset
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           
  8335                           ;psect for function _main
  8336  0C85                     _main:	
  8337                           
  8338                           ;main.c: 10: SYSTEM_Initialize();
  8339                           
  8340                           ;incstack = 0
  8341 ;; hardware stack exceeded
  8342                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8343  0C85  3191  210E  318C   	fcall	_SYSTEM_Initialize
  8344                           
  8345                           ;main.c: 11: OLED_Initialize();
  8346  0C88  318B  2389  318C   	fcall	_OLED_Initialize
  8347                           
  8348                           ;main.c: 12: SetupClock();
  8349  0C8B  3193  23BF  318C   	fcall	_SetupClock
  8350                           
  8351                           ;main.c: 14: (INTCONbits.GIE = 1);
  8352  0C8E  178B               	bsf	11,7	;volatile
  8353                           
  8354                           ;main.c: 16: (INTCONbits.PEIE = 1);
  8355  0C8F  170B               	bsf	11,6	;volatile
  8356  0C90                     l8455:	
  8357                           ;main.c: 18: volatile time_t getTime;
  8358                           ;main.c: 19: struct tm *tm_t;
  8359                           ;main.c: 20: char timeStr[];
  8360                           ;main.c: 21: while (1) {
  8361                           
  8362                           
  8363                           ;main.c: 22: getTime = rtc6_GetTime();
  8364  0C90  318D  2508  318C   	fcall	_rtc6_GetTime
  8365  0C93  0020               	movlb	0	; select bank0
  8366  0C94  0862               	movf	?_rtc6_GetTime+3,w
  8367  0C95  0021               	movlb	1	; select bank1
  8368  0C96  00E9               	movwf	(main@getTime+3)^(0+128)	;volatile
  8369  0C97  0020               	movlb	0	; select bank0
  8370  0C98  0861               	movf	?_rtc6_GetTime+2,w
  8371  0C99  0021               	movlb	1	; select bank1
  8372  0C9A  00E8               	movwf	(main@getTime+2)^(0+128)	;volatile
  8373  0C9B  0020               	movlb	0	; select bank0
  8374  0C9C  0860               	movf	?_rtc6_GetTime+1,w
  8375  0C9D  0021               	movlb	1	; select bank1
  8376  0C9E  00E7               	movwf	(main@getTime+1)^(0+128)	;volatile
  8377  0C9F  0020               	movlb	0	; select bank0
  8378  0CA0  085F               	movf	?_rtc6_GetTime,w
  8379  0CA1  0021               	movlb	1	; select bank1
  8380  0CA2  00E6               	movwf	main@getTime^(0+128)	;volatile
  8381                           
  8382                           ;main.c: 23: tm_t = localtime(&getTime);
  8383  0CA3  30E6               	movlw	(low (main@getTime| 0))& (0+255)
  8384  0CA4  3196  2696  318C   	fcall	_localtime
  8385  0CA7  0020               	movlb	0	; select bank0
  8386  0CA8  00EB               	movwf	??_main
  8387  0CA9  086B               	movf	??_main,w
  8388  0CAA  0021               	movlb	1	; select bank1
  8389  0CAB  00E5               	movwf	main@tm_t^(0+128)
  8390                           
  8391                           ;main.c: 24: sprintf(timeStr, "%04d-%02d-%02d %02d:%02d:%02d\n", tm_t->tm_year+1900, tm_
      +                          t->tm_mon+1, tm_t->tm_mday, tm_t->tm_hour, tm_t->tm_min, tm_t->tm_sec);
  8392  0CAC  30E5               	movlw	low main@timeStr
  8393  0CAD  0020               	movlb	0	; select bank0
  8394  0CAE  00B4               	movwf	sprintf@sp
  8395  0CAF  3000               	movlw	high main@timeStr
  8396  0CB0  00B5               	movwf	sprintf@sp+1
  8397  0CB1  3020               	movlw	low (STR_1| (0+32768))
  8398  0CB2  00B6               	movwf	sprintf@f
  8399  0CB3  3098               	movlw	high (STR_1| (0+32768))
  8400  0CB4  00B7               	movwf	sprintf@f+1
  8401  0CB5  0021               	movlb	1	; select bank1
  8402  0CB6  0865               	movf	main@tm_t^(0+128),w
  8403  0CB7  3E0A               	addlw	10
  8404  0CB8  0086               	movwf	6
  8405  0CB9  0187               	clrf	7
  8406  0CBA  3F40               	moviw [0]fsr1
  8407  0CBB  0020               	movlb	0	; select bank0
  8408  0CBC  00EB               	movwf	??_main
  8409  0CBD  3F41               	moviw [1]fsr1
  8410  0CBE  00EC               	movwf	??_main+1
  8411  0CBF  086B               	movf	??_main,w
  8412  0CC0  3E6C               	addlw	108
  8413  0CC1  00B8               	movwf	?_sprintf+4
  8414  0CC2  3007               	movlw	7
  8415  0CC3  3D6C               	addwfc	??_main+1,w
  8416  0CC4  00B9               	movwf	?_sprintf+5
  8417  0CC5  0021               	movlb	1	; select bank1
  8418  0CC6  0865               	movf	main@tm_t^(0+128),w
  8419  0CC7  3E08               	addlw	8
  8420  0CC8  0086               	movwf	6
  8421  0CC9  0187               	clrf	7
  8422  0CCA  3F40               	moviw [0]fsr1
  8423  0CCB  0020               	movlb	0	; select bank0
  8424  0CCC  00ED               	movwf	??_main+2
  8425  0CCD  3F41               	moviw [1]fsr1
  8426  0CCE  00EE               	movwf	??_main+3
  8427  0CCF  086D               	movf	??_main+2,w
  8428  0CD0  3E01               	addlw	1
  8429  0CD1  00BA               	movwf	?_sprintf+6
  8430  0CD2  3000               	movlw	0
  8431  0CD3  3D6E               	addwfc	??_main+3,w
  8432  0CD4  00BB               	movwf	?_sprintf+7
  8433  0CD5  0021               	movlb	1	; select bank1
  8434  0CD6  0865               	movf	main@tm_t^(0+128),w
  8435  0CD7  3E06               	addlw	6
  8436  0CD8  0086               	movwf	6
  8437  0CD9  0187               	clrf	7
  8438  0CDA  3F40               	moviw [0]fsr1
  8439  0CDB  0020               	movlb	0	; select bank0
  8440  0CDC  00BC               	movwf	?_sprintf+8
  8441  0CDD  3F41               	moviw [1]fsr1
  8442  0CDE  00BD               	movwf	?_sprintf+9
  8443  0CDF  0021               	movlb	1	; select bank1
  8444  0CE0  0865               	movf	main@tm_t^(0+128),w
  8445  0CE1  3E04               	addlw	4
  8446  0CE2  0086               	movwf	6
  8447  0CE3  0187               	clrf	7
  8448  0CE4  3F40               	moviw [0]fsr1
  8449  0CE5  0020               	movlb	0	; select bank0
  8450  0CE6  00BE               	movwf	?_sprintf+10
  8451  0CE7  3F41               	moviw [1]fsr1
  8452  0CE8  00BF               	movwf	?_sprintf+11
  8453  0CE9  0021               	movlb	1	; select bank1
  8454  0CEA  0865               	movf	main@tm_t^(0+128),w
  8455  0CEB  3E02               	addlw	2
  8456  0CEC  0086               	movwf	6
  8457  0CED  0187               	clrf	7
  8458  0CEE  3F40               	moviw [0]fsr1
  8459  0CEF  0020               	movlb	0	; select bank0
  8460  0CF0  00C0               	movwf	?_sprintf+12
  8461  0CF1  3F41               	moviw [1]fsr1
  8462  0CF2  00C1               	movwf	?_sprintf+13
  8463  0CF3  0021               	movlb	1	; select bank1
  8464  0CF4  0865               	movf	main@tm_t^(0+128),w
  8465  0CF5  0086               	movwf	6
  8466  0CF6  0187               	clrf	7
  8467  0CF7  3F40               	moviw [0]fsr1
  8468  0CF8  0020               	movlb	0	; select bank0
  8469  0CF9  00C2               	movwf	?_sprintf+14
  8470  0CFA  3F41               	moviw [1]fsr1
  8471  0CFB  00C3               	movwf	?_sprintf+15
  8472  0CFC  3186  2612  318C   	fcall	_sprintf
  8473                           
  8474                           ;main.c: 25: Write_String(timeStr);
  8475  0CFF  30E5               	movlw	low main@timeStr
  8476  0D00  0020               	movlb	0	; select bank0
  8477  0D01  00D3               	movwf	Write_String@message
  8478  0D02  3000               	movlw	high main@timeStr
  8479  0D03  00D4               	movwf	Write_String@message+1
  8480  0D04  3194  2472  318C   	fcall	_Write_String
  8481  0D07  2C90               	goto	l8455
  8482  0D08                     __end_of_main:	
  8483                           
  8484                           	psect	text1
  8485  0D08                     __ptext1:	
  8486 ;; *************** function _rtc6_GetTime *****************
  8487 ;; Defined at:
  8488 ;;		line 173 in file "mcc_generated_files/RTC6.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;		None
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  tm_t           18    0[BANK1 ] struct tm
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  4   63[BANK0 ] long 
  8495 ;; Registers used:
  8496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8503 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  8504 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8505 ;;      Totals:         0       7      18       0       0       0       0       0       0       0       0       0       
      +0       0
  8506 ;;Total ram usage:       25 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:   17
  8509 ;; This function calls:
  8510 ;;		_memset
  8511 ;;		_mktime
  8512 ;;		_rtc6_GetComponent
  8513 ;; This function is called by:
  8514 ;;		_main
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           
  8519                           ;psect for function _rtc6_GetTime
  8520  0D08                     _rtc6_GetTime:	
  8521                           
  8522                           ;RTC6.c: 174: struct tm tm_t;
  8523                           ;RTC6.c: 175: memset(&tm_t, 0, sizeof (tm_t));
  8524                           
  8525                           ;incstack = 0
  8526 ;; hardware stack exceeded
  8527                           ; Regs used in _rtc6_GetTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8528  0D08  3000               	movlw	0
  8529  0D09  0020               	movlb	0	; select bank0
  8530  0D0A  00A0               	movwf	memset@c
  8531  0D0B  00A1               	movwf	memset@c+1
  8532  0D0C  3012               	movlw	18
  8533  0D0D  00A2               	movwf	memset@n
  8534  0D0E  3000               	movlw	0
  8535  0D0F  00A3               	movwf	memset@n+1
  8536  0D10  30D3               	movlw	(low (rtc6_GetTime@tm_t| 0))& (0+255)
  8537  0D11  3192  224C  318D   	fcall	_memset
  8538                           
  8539                           ;RTC6.c: 177: tm_t.tm_year = rtc6_GetComponent(0x06, 0xFF) + 100;
  8540  0D14  30FF               	movlw	255
  8541  0D15  0020               	movlb	0	; select bank0
  8542  0D16  00E3               	movwf	??_rtc6_GetTime
  8543  0D17  0863               	movf	??_rtc6_GetTime,w
  8544  0D18  00B3               	movwf	rtc6_GetComponent@mask
  8545  0D19  3006               	movlw	6
  8546  0D1A  3192  22DE  318D   	fcall	_rtc6_GetComponent
  8547  0D1D  3E64               	addlw	100
  8548  0D1E  0021               	movlb	1	; select bank1
  8549  0D1F  00DD               	movwf	(rtc6_GetTime@tm_t^(0+128)+10)
  8550  0D20  3000               	movlw	0
  8551  0D21  1803               	skipnc
  8552  0D22  3001               	movlw	1
  8553  0D23  00DE               	movwf	(rtc6_GetTime@tm_t^(0+128)+11)
  8554                           
  8555                           ;RTC6.c: 178: tm_t.tm_mon = rtc6_GetComponent(0x05, 0x1F) - 1;
  8556  0D24  301F               	movlw	31
  8557  0D25  0020               	movlb	0	; select bank0
  8558  0D26  00E3               	movwf	??_rtc6_GetTime
  8559  0D27  0863               	movf	??_rtc6_GetTime,w
  8560  0D28  00B3               	movwf	rtc6_GetComponent@mask
  8561  0D29  3005               	movlw	5
  8562  0D2A  3192  22DE  318D   	fcall	_rtc6_GetComponent
  8563  0D2D  3EFF               	addlw	255
  8564  0D2E  0021               	movlb	1	; select bank1
  8565  0D2F  00DB               	movwf	(rtc6_GetTime@tm_t^(0+128)+8)
  8566  0D30  30FF               	movlw	255
  8567  0D31  1803               	skipnc
  8568  0D32  3000               	movlw	0
  8569  0D33  00DC               	movwf	(rtc6_GetTime@tm_t^(0+128)+9)
  8570                           
  8571                           ;RTC6.c: 179: tm_t.tm_mday = rtc6_GetComponent(0x04, 0x3F);
  8572  0D34  303F               	movlw	63
  8573  0D35  0020               	movlb	0	; select bank0
  8574  0D36  00E3               	movwf	??_rtc6_GetTime
  8575  0D37  0863               	movf	??_rtc6_GetTime,w
  8576  0D38  00B3               	movwf	rtc6_GetComponent@mask
  8577  0D39  3004               	movlw	4
  8578  0D3A  3192  22DE  318D   	fcall	_rtc6_GetComponent
  8579  0D3D  0020               	movlb	0	; select bank0
  8580  0D3E  00E4               	movwf	??_rtc6_GetTime+1
  8581  0D3F  01E5               	clrf	??_rtc6_GetTime+2
  8582  0D40  0864               	movf	??_rtc6_GetTime+1,w
  8583  0D41  0021               	movlb	1	; select bank1
  8584  0D42  00D9               	movwf	(rtc6_GetTime@tm_t^(0+128)+6)
  8585  0D43  0020               	movlb	0	; select bank0
  8586  0D44  0865               	movf	??_rtc6_GetTime+2,w
  8587  0D45  0021               	movlb	1	; select bank1
  8588  0D46  00DA               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+6)
  8589                           
  8590                           ;RTC6.c: 180: tm_t.tm_hour = rtc6_GetComponent(0x02, 0x3F);
  8591  0D47  303F               	movlw	63
  8592  0D48  0020               	movlb	0	; select bank0
  8593  0D49  00E3               	movwf	??_rtc6_GetTime
  8594  0D4A  0863               	movf	??_rtc6_GetTime,w
  8595  0D4B  00B3               	movwf	rtc6_GetComponent@mask
  8596  0D4C  3002               	movlw	2
  8597  0D4D  3192  22DE  318D   	fcall	_rtc6_GetComponent
  8598  0D50  0020               	movlb	0	; select bank0
  8599  0D51  00E4               	movwf	??_rtc6_GetTime+1
  8600  0D52  01E5               	clrf	??_rtc6_GetTime+2
  8601  0D53  0864               	movf	??_rtc6_GetTime+1,w
  8602  0D54  0021               	movlb	1	; select bank1
  8603  0D55  00D7               	movwf	(rtc6_GetTime@tm_t^(0+128)+4)
  8604  0D56  0020               	movlb	0	; select bank0
  8605  0D57  0865               	movf	??_rtc6_GetTime+2,w
  8606  0D58  0021               	movlb	1	; select bank1
  8607  0D59  00D8               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+4)
  8608                           
  8609                           ;RTC6.c: 181: tm_t.tm_min = rtc6_GetComponent(0x01, 0x7F);
  8610  0D5A  307F               	movlw	127
  8611  0D5B  0020               	movlb	0	; select bank0
  8612  0D5C  00E3               	movwf	??_rtc6_GetTime
  8613  0D5D  0863               	movf	??_rtc6_GetTime,w
  8614  0D5E  00B3               	movwf	rtc6_GetComponent@mask
  8615  0D5F  3001               	movlw	1
  8616  0D60  3192  22DE  318D   	fcall	_rtc6_GetComponent
  8617  0D63  0020               	movlb	0	; select bank0
  8618  0D64  00E4               	movwf	??_rtc6_GetTime+1
  8619  0D65  01E5               	clrf	??_rtc6_GetTime+2
  8620  0D66  0864               	movf	??_rtc6_GetTime+1,w
  8621  0D67  0021               	movlb	1	; select bank1
  8622  0D68  00D5               	movwf	(rtc6_GetTime@tm_t^(0+128)+2)
  8623  0D69  0020               	movlb	0	; select bank0
  8624  0D6A  0865               	movf	??_rtc6_GetTime+2,w
  8625  0D6B  0021               	movlb	1	; select bank1
  8626  0D6C  00D6               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+2)
  8627                           
  8628                           ;RTC6.c: 182: tm_t.tm_sec = rtc6_GetComponent(0x00, 0x7F);
  8629  0D6D  307F               	movlw	127
  8630  0D6E  0020               	movlb	0	; select bank0
  8631  0D6F  00E3               	movwf	??_rtc6_GetTime
  8632  0D70  0863               	movf	??_rtc6_GetTime,w
  8633  0D71  00B3               	movwf	rtc6_GetComponent@mask
  8634  0D72  3000               	movlw	0
  8635  0D73  3192  22DE  318D   	fcall	_rtc6_GetComponent
  8636  0D76  0020               	movlb	0	; select bank0
  8637  0D77  00E4               	movwf	??_rtc6_GetTime+1
  8638  0D78  01E5               	clrf	??_rtc6_GetTime+2
  8639  0D79  0864               	movf	??_rtc6_GetTime+1,w
  8640  0D7A  0021               	movlb	1	; select bank1
  8641  0D7B  00D3               	movwf	rtc6_GetTime@tm_t^(0+128)
  8642  0D7C  0020               	movlb	0	; select bank0
  8643  0D7D  0865               	movf	??_rtc6_GetTime+2,w
  8644  0D7E  0021               	movlb	1	; select bank1
  8645  0D7F  00D4               	movwf	(rtc6_GetTime@tm_t+1)^(0+128)
  8646                           
  8647                           ;RTC6.c: 184: return mktime(&tm_t);
  8648  0D80  30D3               	movlw	(low (rtc6_GetTime@tm_t| 0))& (0+255)
  8649  0D81  318D  258D         	fcall	_mktime
  8650  0D83  0020               	movlb	0	; select bank0
  8651  0D84  0853               	movf	?_mktime+3,w
  8652  0D85  00E2               	movwf	?_rtc6_GetTime+3
  8653  0D86  0852               	movf	?_mktime+2,w
  8654  0D87  00E1               	movwf	?_rtc6_GetTime+2
  8655  0D88  0851               	movf	?_mktime+1,w
  8656  0D89  00E0               	movwf	?_rtc6_GetTime+1
  8657  0D8A  0850               	movf	?_mktime,w
  8658  0D8B  00DF               	movwf	?_rtc6_GetTime
  8659  0D8C  0008               	return
  8660  0D8D                     __end_of_rtc6_GetTime:	
  8661                           
  8662                           	psect	text2
  8663  12DE                     __ptext2:	
  8664 ;; *************** function _rtc6_GetComponent *****************
  8665 ;; Defined at:
  8666 ;;		line 168 in file "mcc_generated_files/RTC6.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  location        1    wreg     unsigned char 
  8669 ;;  mask            1   19[BANK0 ] unsigned char 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  location        1   23[BANK0 ] unsigned char 
  8672 ;;  working         1   24[BANK0 ] unsigned char 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  1    wreg      unsigned char 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8682 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8685 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8686 ;;Total ram usage:        6 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:   16
  8689 ;; This function calls:
  8690 ;;		___bmul
  8691 ;;		_rtcc_read
  8692 ;; This function is called by:
  8693 ;;		_rtc6_GetTime
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           
  8698                           ;psect for function _rtc6_GetComponent
  8699  12DE                     _rtc6_GetComponent:	
  8700                           
  8701                           ;incstack = 0
  8702 ;; hardware stack exceeded
  8703                           ; Regs used in _rtc6_GetComponent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8704                           ;rtc6_GetComponent@location stored from wreg
  8705  12DE  0020               	movlb	0	; select bank0
  8706  12DF  00B7               	movwf	rtc6_GetComponent@location
  8707                           
  8708                           ;RTC6.c: 169: uint8_t working = rtcc_read(location) & mask;
  8709  12E0  0837               	movf	rtc6_GetComponent@location,w
  8710  12E1  3190  205E  3192   	fcall	_rtcc_read
  8711  12E4  0020               	movlb	0	; select bank0
  8712  12E5  0533               	andwf	rtc6_GetComponent@mask,w
  8713  12E6  00B4               	movwf	??_rtc6_GetComponent
  8714  12E7  0834               	movf	??_rtc6_GetComponent,w
  8715  12E8  00B8               	movwf	rtc6_GetComponent@working
  8716                           
  8717                           ;RTC6.c: 170: return (working & 0x0F) + (((working & (mask & 0xF0)) >> 4) * 10);
  8718  12E9  300F               	movlw	15
  8719  12EA  0538               	andwf	rtc6_GetComponent@working,w
  8720  12EB  00B4               	movwf	??_rtc6_GetComponent
  8721  12EC  300A               	movlw	10
  8722  12ED  00B5               	movwf	??_rtc6_GetComponent+1
  8723  12EE  0835               	movf	??_rtc6_GetComponent+1,w
  8724  12EF  00A0               	movwf	___bmul@multiplicand
  8725  12F0  0833               	movf	rtc6_GetComponent@mask,w
  8726  12F1  0538               	andwf	rtc6_GetComponent@working,w
  8727  12F2  00B6               	movwf	??_rtc6_GetComponent+2
  8728  12F3  3004               	movlw	4
  8729  12F4                     u6445:	
  8730  12F4  36B6               	lsrf	??_rtc6_GetComponent+2,f
  8731  12F5  0B89               	decfsz	9,f
  8732  12F6  2AF4               	goto	u6445
  8733  12F7  0836               	movf	??_rtc6_GetComponent+2,w
  8734  12F8  390F               	andlw	15
  8735  12F9  3191  2170         	fcall	___bmul
  8736  12FB  0020               	movlb	0	; select bank0
  8737  12FC  0734               	addwf	??_rtc6_GetComponent,w
  8738  12FD  0008               	return
  8739  12FE                     __end_of_rtc6_GetComponent:	
  8740                           
  8741                           	psect	text3
  8742  1170                     __ptext3:	
  8743 ;; *************** function ___bmul *****************
  8744 ;; Defined at:
  8745 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  multiplier      1    wreg     unsigned char 
  8748 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;  multiplier      1    3[BANK0 ] unsigned char 
  8751 ;;  product         1    2[BANK0 ] unsigned char 
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  1    wreg      unsigned char 
  8754 ;; Registers used:
  8755 ;;		wreg, status,2, status,0
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8761 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8763 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8765 ;;Total ram usage:        4 bytes
  8766 ;; Hardware stack levels used:    1
  8767 ;; Hardware stack levels required when called:    6
  8768 ;; This function calls:
  8769 ;;		Nothing
  8770 ;; This function is called by:
  8771 ;;		_rtc6_GetComponent
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           
  8776                           ;psect for function ___bmul
  8777  1170                     ___bmul:	
  8778                           
  8779                           ;incstack = 0
  8780                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8781                           ;___bmul@multiplier stored from wreg
  8782  1170  0020               	movlb	0	; select bank0
  8783  1171  00A3               	movwf	___bmul@multiplier
  8784  1172  01A2               	clrf	___bmul@product
  8785  1173                     l5951:	
  8786  1173  1C23               	btfss	___bmul@multiplier,0
  8787  1174  2979               	goto	l5955
  8788  1175  0820               	movf	___bmul@multiplicand,w
  8789  1176  00A1               	movwf	??___bmul
  8790  1177  0821               	movf	??___bmul,w
  8791  1178  07A2               	addwf	___bmul@product,f
  8792  1179                     l5955:	
  8793  1179  1003               	clrc
  8794  117A  0DA0               	rlf	___bmul@multiplicand,f
  8795  117B  1003               	clrc
  8796  117C  0CA3               	rrf	___bmul@multiplier,f
  8797  117D  0823               	movf	___bmul@multiplier,w
  8798  117E  1D03               	btfss	3,2
  8799  117F  2973               	goto	l5951
  8800  1180  0822               	movf	___bmul@product,w
  8801  1181  0008               	return
  8802  1182                     __end_of___bmul:	
  8803                           
  8804                           	psect	text4
  8805  0D8D                     __ptext4:	
  8806 ;; *************** function _mktime *****************
  8807 ;; Defined at:
  8808 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;  timeptr         1    wreg     PTR struct tm
  8811 ;;		 -> rtc6_GetTime@tm_t(18), 
  8812 ;; Auto vars:     Size  Location     Type
  8813 ;;  timeptr         1   62[BANK0 ] PTR struct tm
  8814 ;;		 -> rtc6_GetTime@tm_t(18), 
  8815 ;;  tt              4   58[BANK0 ] long 
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  4   48[BANK0 ] long 
  8818 ;; Registers used:
  8819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8825 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8826 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8827 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8828 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8829 ;;Total ram usage:       15 bytes
  8830 ;; Hardware stack levels used:    1
  8831 ;; Hardware stack levels required when called:    9
  8832 ;; This function calls:
  8833 ;;		___lmul
  8834 ;;		_ymd_to_scalar
  8835 ;; This function is called by:
  8836 ;;		_rtc6_GetTime
  8837 ;; This function uses a non-reentrant model
  8838 ;;
  8839                           
  8840                           
  8841                           ;psect for function _mktime
  8842  0D8D                     _mktime:	
  8843                           
  8844                           ;incstack = 0
  8845                           ; Regs used in _mktime: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8846                           ;mktime@timeptr stored from wreg
  8847  0D8D  0020               	movlb	0	; select bank0
  8848  0D8E  00DE               	movwf	mktime@timeptr
  8849  0D8F  085E               	movf	mktime@timeptr,w
  8850  0D90  3E0A               	addlw	10
  8851  0D91  0086               	movwf	6
  8852  0D92  0187               	clrf	7
  8853  0D93  3F40               	moviw [0]fsr1
  8854  0D94  00D4               	movwf	??_mktime
  8855  0D95  3F41               	moviw [1]fsr1
  8856  0D96  00D5               	movwf	??_mktime+1
  8857  0D97  0855               	movf	??_mktime+1,w
  8858  0D98  3A80               	xorlw	128
  8859  0D99  00D6               	movwf	??_mktime+2
  8860  0D9A  3080               	movlw	128
  8861  0D9B  0256               	subwf	??_mktime+2,w
  8862  0D9C  1D03               	skipz
  8863  0D9D  2DA0               	goto	u4575
  8864  0D9E  3046               	movlw	70
  8865  0D9F  0254               	subwf	??_mktime,w
  8866  0DA0                     u4575:	
  8867  0DA0  1C03               	skipc
  8868  0DA1  2DB6               	goto	l6065
  8869  0DA2  0020               	movlb	0	; select bank0
  8870  0DA3  085E               	movf	mktime@timeptr,w
  8871  0DA4  3E0A               	addlw	10
  8872  0DA5  0086               	movwf	6
  8873  0DA6  0187               	clrf	7
  8874  0DA7  3F40               	moviw [0]fsr1
  8875  0DA8  00D4               	movwf	??_mktime
  8876  0DA9  3F41               	moviw [1]fsr1
  8877  0DAA  00D5               	movwf	??_mktime+1
  8878  0DAB  0855               	movf	??_mktime+1,w
  8879  0DAC  3A80               	xorlw	128
  8880  0DAD  00D6               	movwf	??_mktime+2
  8881  0DAE  3080               	movlw	128
  8882  0DAF  0256               	subwf	??_mktime+2,w
  8883  0DB0  1D03               	skipz
  8884  0DB1  2DB4               	goto	u4585
  8885  0DB2  308B               	movlw	139
  8886  0DB3  0254               	subwf	??_mktime,w
  8887  0DB4                     u4585:	
  8888  0DB4  1C03               	skipc
  8889  0DB5  2DBF               	goto	l6067
  8890  0DB6                     l6065:	
  8891  0DB6  30FF               	movlw	255
  8892  0DB7  0020               	movlb	0	; select bank0
  8893  0DB8  00DD               	movwf	mktime@tt+3
  8894  0DB9  30FF               	movlw	255
  8895  0DBA  00DC               	movwf	mktime@tt+2
  8896  0DBB  30FF               	movlw	255
  8897  0DBC  00DB               	movwf	mktime@tt+1
  8898  0DBD  30FF               	movlw	255
  8899  0DBE  2EA4               	goto	L1
  8900  0DBF                     l6067:	
  8901  0DBF  0020               	movlb	0	; select bank0
  8902  0DC0  085E               	movf	mktime@timeptr,w
  8903  0DC1  3E0A               	addlw	10
  8904  0DC2  0086               	movwf	6
  8905  0DC3  0187               	clrf	7
  8906  0DC4  3F40               	moviw [0]fsr1
  8907  0DC5  00D4               	movwf	??_mktime
  8908  0DC6  3F41               	moviw [1]fsr1
  8909  0DC7  00D5               	movwf	??_mktime+1
  8910  0DC8  0854               	movf	??_mktime,w
  8911  0DC9  3E6C               	addlw	108
  8912  0DCA  00C0               	movwf	ymd_to_scalar@yr
  8913  0DCB  3007               	movlw	7
  8914  0DCC  3D55               	addwfc	??_mktime+1,w
  8915  0DCD  00C1               	movwf	ymd_to_scalar@yr+1
  8916  0DCE  085E               	movf	mktime@timeptr,w
  8917  0DCF  3E08               	addlw	8
  8918  0DD0  0086               	movwf	6
  8919  0DD1  0187               	clrf	7
  8920  0DD2  3F40               	moviw [0]fsr1
  8921  0DD3  00D6               	movwf	??_mktime+2
  8922  0DD4  3F41               	moviw [1]fsr1
  8923  0DD5  00D7               	movwf	??_mktime+3
  8924  0DD6  0856               	movf	??_mktime+2,w
  8925  0DD7  3E01               	addlw	1
  8926  0DD8  00C2               	movwf	ymd_to_scalar@mo
  8927  0DD9  3000               	movlw	0
  8928  0DDA  3D57               	addwfc	??_mktime+3,w
  8929  0DDB  00C3               	movwf	ymd_to_scalar@mo+1
  8930  0DDC  085E               	movf	mktime@timeptr,w
  8931  0DDD  3E06               	addlw	6
  8932  0DDE  0086               	movwf	6
  8933  0DDF  0187               	clrf	7
  8934  0DE0  3F40               	moviw [0]fsr1
  8935  0DE1  00C4               	movwf	ymd_to_scalar@day
  8936  0DE2  3F41               	moviw [1]fsr1
  8937  0DE3  00C5               	movwf	ymd_to_scalar@day+1
  8938  0DE4  3189  2116  318D   	fcall	_ymd_to_scalar
  8939  0DE7  0020               	movlb	0	; select bank0
  8940  0DE8  0843               	movf	?_ymd_to_scalar+3,w
  8941  0DE9  00DD               	movwf	mktime@tt+3
  8942  0DEA  0842               	movf	?_ymd_to_scalar+2,w
  8943  0DEB  00DC               	movwf	mktime@tt+2
  8944  0DEC  0841               	movf	?_ymd_to_scalar+1,w
  8945  0DED  00DB               	movwf	mktime@tt+1
  8946  0DEE  0840               	movf	?_ymd_to_scalar,w
  8947  0DEF  00DA               	movwf	mktime@tt
  8948  0DF0  30B2               	movlw	178
  8949  0DF1  00C0               	movwf	ymd_to_scalar@yr
  8950  0DF2  3007               	movlw	7
  8951  0DF3  00C1               	movwf	ymd_to_scalar@yr+1
  8952  0DF4  3001               	movlw	1
  8953  0DF5  00C2               	movwf	ymd_to_scalar@mo
  8954  0DF6  3000               	movlw	0
  8955  0DF7  00C3               	movwf	ymd_to_scalar@mo+1
  8956  0DF8  3001               	movlw	1
  8957  0DF9  00C4               	movwf	ymd_to_scalar@day
  8958  0DFA  3000               	movlw	0
  8959  0DFB  00C5               	movwf	ymd_to_scalar@day+1
  8960  0DFC  3189  2116  318D   	fcall	_ymd_to_scalar
  8961  0DFF  0020               	movlb	0	; select bank0
  8962  0E00  0840               	movf	?_ymd_to_scalar,w
  8963  0E01  02DA               	subwf	mktime@tt,f
  8964  0E02  0841               	movf	?_ymd_to_scalar+1,w
  8965  0E03  3BDB               	subwfb	mktime@tt+1,f
  8966  0E04  0842               	movf	?_ymd_to_scalar+2,w
  8967  0E05  3BDC               	subwfb	mktime@tt+2,f
  8968  0E06  0843               	movf	?_ymd_to_scalar+3,w
  8969  0E07  3BDD               	subwfb	mktime@tt+3,f
  8970  0E08  085E               	movf	mktime@timeptr,w
  8971  0E09  3E04               	addlw	4
  8972  0E0A  0086               	movwf	6
  8973  0E0B  0187               	clrf	7
  8974  0E0C  3F40               	moviw [0]fsr1
  8975  0E0D  00D4               	movwf	??_mktime
  8976  0E0E  3F41               	moviw [1]fsr1
  8977  0E0F  00D5               	movwf	??_mktime+1
  8978  0E10  0854               	movf	??_mktime,w
  8979  0E11  00D6               	movwf	??_mktime+2
  8980  0E12  0855               	movf	??_mktime+1,w
  8981  0E13  00D7               	movwf	??_mktime+3
  8982  0E14  3000               	movlw	0
  8983  0E15  1BD7               	btfsc	??_mktime+3,7
  8984  0E16  30FF               	movlw	255
  8985  0E17  00D8               	movwf	??_mktime+4
  8986  0E18  00D9               	movwf	??_mktime+5
  8987  0E19  085D               	movf	mktime@tt+3,w
  8988  0E1A  00A3               	movwf	___lmul@multiplier+3
  8989  0E1B  085C               	movf	mktime@tt+2,w
  8990  0E1C  00A2               	movwf	___lmul@multiplier+2
  8991  0E1D  085B               	movf	mktime@tt+1,w
  8992  0E1E  00A1               	movwf	___lmul@multiplier+1
  8993  0E1F  085A               	movf	mktime@tt,w
  8994  0E20  00A0               	movwf	___lmul@multiplier
  8995  0E21  3000               	movlw	0
  8996  0E22  00A7               	movwf	___lmul@multiplicand+3
  8997  0E23  3000               	movlw	0
  8998  0E24  00A6               	movwf	___lmul@multiplicand+2
  8999  0E25  3000               	movlw	0
  9000  0E26  00A5               	movwf	___lmul@multiplicand+1
  9001  0E27  3018               	movlw	24
  9002  0E28  00A4               	movwf	___lmul@multiplicand
  9003  0E29  3194  24A1  318D   	fcall	___lmul
  9004  0E2C  0020               	movlb	0	; select bank0
  9005  0E2D  0820               	movf	?___lmul,w
  9006  0E2E  07D6               	addwf	??_mktime+2,f
  9007  0E2F  0821               	movf	?___lmul+1,w
  9008  0E30  3DD7               	addwfc	??_mktime+3,f
  9009  0E31  0822               	movf	?___lmul+2,w
  9010  0E32  3DD8               	addwfc	??_mktime+4,f
  9011  0E33  0823               	movf	?___lmul+3,w
  9012  0E34  3DD9               	addwfc	??_mktime+5,f
  9013  0E35  0859               	movf	??_mktime+5,w
  9014  0E36  00DD               	movwf	mktime@tt+3
  9015  0E37  0858               	movf	??_mktime+4,w
  9016  0E38  00DC               	movwf	mktime@tt+2
  9017  0E39  0857               	movf	??_mktime+3,w
  9018  0E3A  00DB               	movwf	mktime@tt+1
  9019  0E3B  0856               	movf	??_mktime+2,w
  9020  0E3C  00DA               	movwf	mktime@tt
  9021  0E3D  085E               	movf	mktime@timeptr,w
  9022  0E3E  3E02               	addlw	2
  9023  0E3F  0086               	movwf	6
  9024  0E40  0187               	clrf	7
  9025  0E41  3F40               	moviw [0]fsr1
  9026  0E42  00D4               	movwf	??_mktime
  9027  0E43  3F41               	moviw [1]fsr1
  9028  0E44  00D5               	movwf	??_mktime+1
  9029  0E45  0854               	movf	??_mktime,w
  9030  0E46  00D6               	movwf	??_mktime+2
  9031  0E47  0855               	movf	??_mktime+1,w
  9032  0E48  00D7               	movwf	??_mktime+3
  9033  0E49  3000               	movlw	0
  9034  0E4A  1BD7               	btfsc	??_mktime+3,7
  9035  0E4B  30FF               	movlw	255
  9036  0E4C  00D8               	movwf	??_mktime+4
  9037  0E4D  00D9               	movwf	??_mktime+5
  9038  0E4E  085D               	movf	mktime@tt+3,w
  9039  0E4F  00A3               	movwf	___lmul@multiplier+3
  9040  0E50  085C               	movf	mktime@tt+2,w
  9041  0E51  00A2               	movwf	___lmul@multiplier+2
  9042  0E52  085B               	movf	mktime@tt+1,w
  9043  0E53  00A1               	movwf	___lmul@multiplier+1
  9044  0E54  085A               	movf	mktime@tt,w
  9045  0E55  00A0               	movwf	___lmul@multiplier
  9046  0E56  3000               	movlw	0
  9047  0E57  00A7               	movwf	___lmul@multiplicand+3
  9048  0E58  3000               	movlw	0
  9049  0E59  00A6               	movwf	___lmul@multiplicand+2
  9050  0E5A  3000               	movlw	0
  9051  0E5B  00A5               	movwf	___lmul@multiplicand+1
  9052  0E5C  303C               	movlw	60
  9053  0E5D  00A4               	movwf	___lmul@multiplicand
  9054  0E5E  3194  24A1  318D   	fcall	___lmul
  9055  0E61  0020               	movlb	0	; select bank0
  9056  0E62  0820               	movf	?___lmul,w
  9057  0E63  07D6               	addwf	??_mktime+2,f
  9058  0E64  0821               	movf	?___lmul+1,w
  9059  0E65  3DD7               	addwfc	??_mktime+3,f
  9060  0E66  0822               	movf	?___lmul+2,w
  9061  0E67  3DD8               	addwfc	??_mktime+4,f
  9062  0E68  0823               	movf	?___lmul+3,w
  9063  0E69  3DD9               	addwfc	??_mktime+5,f
  9064  0E6A  0859               	movf	??_mktime+5,w
  9065  0E6B  00DD               	movwf	mktime@tt+3
  9066  0E6C  0858               	movf	??_mktime+4,w
  9067  0E6D  00DC               	movwf	mktime@tt+2
  9068  0E6E  0857               	movf	??_mktime+3,w
  9069  0E6F  00DB               	movwf	mktime@tt+1
  9070  0E70  0856               	movf	??_mktime+2,w
  9071  0E71  00DA               	movwf	mktime@tt
  9072  0E72  085E               	movf	mktime@timeptr,w
  9073  0E73  0086               	movwf	6
  9074  0E74  0187               	clrf	7
  9075  0E75  3F40               	moviw [0]fsr1
  9076  0E76  00D4               	movwf	??_mktime
  9077  0E77  3F41               	moviw [1]fsr1
  9078  0E78  00D5               	movwf	??_mktime+1
  9079  0E79  0854               	movf	??_mktime,w
  9080  0E7A  00D6               	movwf	??_mktime+2
  9081  0E7B  0855               	movf	??_mktime+1,w
  9082  0E7C  00D7               	movwf	??_mktime+3
  9083  0E7D  3000               	movlw	0
  9084  0E7E  1BD7               	btfsc	??_mktime+3,7
  9085  0E7F  30FF               	movlw	255
  9086  0E80  00D8               	movwf	??_mktime+4
  9087  0E81  00D9               	movwf	??_mktime+5
  9088  0E82  085D               	movf	mktime@tt+3,w
  9089  0E83  00A3               	movwf	___lmul@multiplier+3
  9090  0E84  085C               	movf	mktime@tt+2,w
  9091  0E85  00A2               	movwf	___lmul@multiplier+2
  9092  0E86  085B               	movf	mktime@tt+1,w
  9093  0E87  00A1               	movwf	___lmul@multiplier+1
  9094  0E88  085A               	movf	mktime@tt,w
  9095  0E89  00A0               	movwf	___lmul@multiplier
  9096  0E8A  3000               	movlw	0
  9097  0E8B  00A7               	movwf	___lmul@multiplicand+3
  9098  0E8C  3000               	movlw	0
  9099  0E8D  00A6               	movwf	___lmul@multiplicand+2
  9100  0E8E  3000               	movlw	0
  9101  0E8F  00A5               	movwf	___lmul@multiplicand+1
  9102  0E90  303C               	movlw	60
  9103  0E91  00A4               	movwf	___lmul@multiplicand
  9104  0E92  3194  24A1         	fcall	___lmul
  9105  0E94  0020               	movlb	0	; select bank0
  9106  0E95  0820               	movf	?___lmul,w
  9107  0E96  07D6               	addwf	??_mktime+2,f
  9108  0E97  0821               	movf	?___lmul+1,w
  9109  0E98  3DD7               	addwfc	??_mktime+3,f
  9110  0E99  0822               	movf	?___lmul+2,w
  9111  0E9A  3DD8               	addwfc	??_mktime+4,f
  9112  0E9B  0823               	movf	?___lmul+3,w
  9113  0E9C  3DD9               	addwfc	??_mktime+5,f
  9114  0E9D  0859               	movf	??_mktime+5,w
  9115  0E9E  00DD               	movwf	mktime@tt+3
  9116  0E9F  0858               	movf	??_mktime+4,w
  9117  0EA0  00DC               	movwf	mktime@tt+2
  9118  0EA1  0857               	movf	??_mktime+3,w
  9119  0EA2  00DB               	movwf	mktime@tt+1
  9120  0EA3  0856               	movf	??_mktime+2,w
  9121  0EA4                     L1:	
  9122  0EA4  00DA               	movwf	mktime@tt
  9123  0EA5  085D               	movf	mktime@tt+3,w
  9124  0EA6  00D3               	movwf	?_mktime+3
  9125  0EA7  085C               	movf	mktime@tt+2,w
  9126  0EA8  00D2               	movwf	?_mktime+2
  9127  0EA9  085B               	movf	mktime@tt+1,w
  9128  0EAA  00D1               	movwf	?_mktime+1
  9129  0EAB  085A               	movf	mktime@tt,w
  9130  0EAC  00D0               	movwf	?_mktime
  9131  0EAD  0008               	return
  9132  0EAE                     __end_of_mktime:	
  9133                           
  9134                           	psect	text5
  9135  0916                     __ptext5:	
  9136 ;; *************** function _ymd_to_scalar *****************
  9137 ;; Defined at:
  9138 ;;		line 40 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;  yr              2   32[BANK0 ] unsigned int 
  9141 ;;  mo              2   34[BANK0 ] unsigned int 
  9142 ;;  day             2   36[BANK0 ] unsigned int 
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;  scalar          4   44[BANK0 ] long 
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  4   32[BANK0 ] long 
  9147 ;; Registers used:
  9148 ;;		wreg, status,2, status,0, pclath, cstack
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9154 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9158 ;;Total ram usage:       16 bytes
  9159 ;; Hardware stack levels used:    1
  9160 ;; Hardware stack levels required when called:    8
  9161 ;; This function calls:
  9162 ;;		_isleap
  9163 ;;		_months_to_days
  9164 ;;		_years_to_days
  9165 ;; This function is called by:
  9166 ;;		_mktime
  9167 ;; This function uses a non-reentrant model
  9168 ;;
  9169                           
  9170                           
  9171                           ;psect for function _ymd_to_scalar
  9172  0916                     _ymd_to_scalar:	
  9173                           
  9174                           ;incstack = 0
  9175                           ; Regs used in _ymd_to_scalar: [wreg+status,2+status,0+pclath+cstack]
  9176  0916  0020               	movlb	0	; select bank0
  9177  0917  0843               	movf	ymd_to_scalar@mo+1,w
  9178  0918  00AF               	movwf	months_to_days@month+1
  9179  0919  0842               	movf	ymd_to_scalar@mo,w
  9180  091A  00AE               	movwf	months_to_days@month
  9181  091B  3192  22BF  3189   	fcall	_months_to_days
  9182  091E  0020               	movlb	0	; select bank0
  9183  091F  0844               	movf	ymd_to_scalar@day,w
  9184  0920  072E               	addwf	?_months_to_days,w
  9185  0921  00CC               	movwf	ymd_to_scalar@scalar
  9186  0922  0845               	movf	ymd_to_scalar@day+1,w
  9187  0923  3D2F               	addwfc	?_months_to_days+1,w
  9188  0924  00CD               	movwf	ymd_to_scalar@scalar+1
  9189  0925  01CE               	clrf	ymd_to_scalar@scalar+2
  9190  0926  01CF               	clrf	ymd_to_scalar@scalar+3
  9191  0927  3000               	movlw	0
  9192  0928  0243               	subwf	ymd_to_scalar@mo+1,w
  9193  0929  3003               	movlw	3
  9194  092A  1903               	skipnz
  9195  092B  0242               	subwf	ymd_to_scalar@mo,w
  9196  092C  1C03               	skipc
  9197  092D  2951               	goto	l1391
  9198  092E  0841               	movf	ymd_to_scalar@yr+1,w
  9199  092F  00B5               	movwf	isleap@yr+1
  9200  0930  0840               	movf	ymd_to_scalar@yr,w
  9201  0931  00B4               	movwf	isleap@yr
  9202  0932  3195  2503  3189   	fcall	_isleap
  9203  0935  0020               	movlb	0	; select bank0
  9204  0936  0834               	movf	?_isleap,w
  9205  0937  0435               	iorwf	?_isleap+1,w
  9206  0938  1D03               	btfss	3,2
  9207  0939  293C               	goto	l5971
  9208  093A  3002               	movlw	2
  9209  093B  293D               	goto	L2
  9210  093C                     l5971:	
  9211  093C  3001               	movlw	1
  9212  093D                     L2:	
  9213  093D  00CA               	movwf	_ymd_to_scalar$2129
  9214  093E  3000               	movlw	0
  9215  093F  00CB               	movwf	_ymd_to_scalar$2129+1
  9216  0940  084A               	movf	_ymd_to_scalar$2129,w
  9217  0941  00C6               	movwf	??_ymd_to_scalar
  9218  0942  084B               	movf	_ymd_to_scalar$2129+1,w
  9219  0943  00C7               	movwf	??_ymd_to_scalar+1
  9220  0944  3000               	movlw	0
  9221  0945  1BC7               	btfsc	??_ymd_to_scalar+1,7
  9222  0946  30FF               	movlw	255
  9223  0947  00C8               	movwf	??_ymd_to_scalar+2
  9224  0948  00C9               	movwf	??_ymd_to_scalar+3
  9225  0949  0846               	movf	??_ymd_to_scalar,w
  9226  094A  02CC               	subwf	ymd_to_scalar@scalar,f
  9227  094B  0847               	movf	??_ymd_to_scalar+1,w
  9228  094C  3BCD               	subwfb	ymd_to_scalar@scalar+1,f
  9229  094D  0848               	movf	??_ymd_to_scalar+2,w
  9230  094E  3BCE               	subwfb	ymd_to_scalar@scalar+2,f
  9231  094F  0849               	movf	??_ymd_to_scalar+3,w
  9232  0950  3BCF               	subwfb	ymd_to_scalar@scalar+3,f
  9233  0951                     l1391:	
  9234  0951  3001               	movlw	1
  9235  0952  02C0               	subwf	ymd_to_scalar@yr,f
  9236  0953  3000               	movlw	0
  9237  0954  3BC1               	subwfb	ymd_to_scalar@yr+1,f
  9238  0955  0841               	movf	ymd_to_scalar@yr+1,w
  9239  0956  00AF               	movwf	years_to_days@yr+1
  9240  0957  0840               	movf	ymd_to_scalar@yr,w
  9241  0958  00AE               	movwf	years_to_days@yr
  9242  0959  318A  2234         	fcall	_years_to_days
  9243  095B  0020               	movlb	0	; select bank0
  9244  095C  082E               	movf	?_years_to_days,w
  9245  095D  07CC               	addwf	ymd_to_scalar@scalar,f
  9246  095E  082F               	movf	?_years_to_days+1,w
  9247  095F  3DCD               	addwfc	ymd_to_scalar@scalar+1,f
  9248  0960  0830               	movf	?_years_to_days+2,w
  9249  0961  3DCE               	addwfc	ymd_to_scalar@scalar+2,f
  9250  0962  0831               	movf	?_years_to_days+3,w
  9251  0963  3DCF               	addwfc	ymd_to_scalar@scalar+3,f
  9252  0964  084F               	movf	ymd_to_scalar@scalar+3,w
  9253  0965  00C3               	movwf	?_ymd_to_scalar+3
  9254  0966  084E               	movf	ymd_to_scalar@scalar+2,w
  9255  0967  00C2               	movwf	?_ymd_to_scalar+2
  9256  0968  084D               	movf	ymd_to_scalar@scalar+1,w
  9257  0969  00C1               	movwf	?_ymd_to_scalar+1
  9258  096A  084C               	movf	ymd_to_scalar@scalar,w
  9259  096B  00C0               	movwf	?_ymd_to_scalar
  9260  096C  0008               	return
  9261  096D                     __end_of_ymd_to_scalar:	
  9262                           
  9263                           	psect	text6
  9264  0A34                     __ptext6:	
  9265 ;; *************** function _years_to_days *****************
  9266 ;; Defined at:
  9267 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  yr              2   14[BANK0 ] unsigned int 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;		None
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  4   14[BANK0 ] long 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2, status,0, pclath, cstack
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;Total ram usage:       18 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    7
  9288 ;; This function calls:
  9289 ;;		___lmul
  9290 ;;		___lwdiv
  9291 ;; This function is called by:
  9292 ;;		_ymd_to_scalar
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           
  9297                           ;psect for function _years_to_days
  9298  0A34                     _years_to_days:	
  9299                           
  9300                           ;incstack = 0
  9301                           ; Regs used in _years_to_days: [wreg+status,2+status,0+pclath+cstack]
  9302  0A34  3064               	movlw	100
  9303  0A35  0020               	movlb	0	; select bank0
  9304  0A36  00A6               	movwf	___lwdiv@divisor
  9305  0A37  3000               	movlw	0
  9306  0A38  00A7               	movwf	___lwdiv@divisor+1
  9307  0A39  082F               	movf	years_to_days@yr+1,w
  9308  0A3A  00A9               	movwf	___lwdiv@dividend+1
  9309  0A3B  082E               	movf	years_to_days@yr,w
  9310  0A3C  00A8               	movwf	___lwdiv@dividend
  9311  0A3D  3195  2537  318A   	fcall	___lwdiv
  9312  0A40  0020               	movlb	0	; select bank0
  9313  0A41  0826               	movf	?___lwdiv,w
  9314  0A42  00B2               	movwf	??_years_to_days
  9315  0A43  0827               	movf	?___lwdiv+1,w
  9316  0A44  00B3               	movwf	??_years_to_days+1
  9317  0A45  01B4               	clrf	??_years_to_days+2
  9318  0A46  01B5               	clrf	??_years_to_days+3
  9319  0A47  09B2               	comf	??_years_to_days,f
  9320  0A48  09B3               	comf	??_years_to_days+1,f
  9321  0A49  09B4               	comf	??_years_to_days+2,f
  9322  0A4A  09B5               	comf	??_years_to_days+3,f
  9323  0A4B  0AB2               	incf	??_years_to_days,f
  9324  0A4C  1903               	skipnz
  9325  0A4D  0AB3               	incf	??_years_to_days+1,f
  9326  0A4E  1903               	skipnz
  9327  0A4F  0AB4               	incf	??_years_to_days+2,f
  9328  0A50  1903               	skipnz
  9329  0A51  0AB5               	incf	??_years_to_days+3,f
  9330  0A52  3090               	movlw	144
  9331  0A53  00A6               	movwf	___lwdiv@divisor
  9332  0A54  3001               	movlw	1
  9333  0A55  00A7               	movwf	___lwdiv@divisor+1
  9334  0A56  082F               	movf	years_to_days@yr+1,w
  9335  0A57  00A9               	movwf	___lwdiv@dividend+1
  9336  0A58  082E               	movf	years_to_days@yr,w
  9337  0A59  00A8               	movwf	___lwdiv@dividend
  9338  0A5A  3195  2537  318A   	fcall	___lwdiv
  9339  0A5D  0020               	movlb	0	; select bank0
  9340  0A5E  0826               	movf	?___lwdiv,w
  9341  0A5F  00B6               	movwf	??_years_to_days+4
  9342  0A60  0827               	movf	?___lwdiv+1,w
  9343  0A61  00B7               	movwf	??_years_to_days+5
  9344  0A62  01B8               	clrf	??_years_to_days+6
  9345  0A63  01B9               	clrf	??_years_to_days+7
  9346  0A64  082F               	movf	years_to_days@yr+1,w
  9347  0A65  00BB               	movwf	??_years_to_days+9
  9348  0A66  082E               	movf	years_to_days@yr,w
  9349  0A67  00BA               	movwf	??_years_to_days+8
  9350  0A68  36BB               	lsrf	??_years_to_days+9,f
  9351  0A69  0CBA               	rrf	??_years_to_days+8,f
  9352  0A6A  36BB               	lsrf	??_years_to_days+9,f
  9353  0A6B  0CBA               	rrf	??_years_to_days+8,f
  9354  0A6C  083A               	movf	??_years_to_days+8,w
  9355  0A6D  00BC               	movwf	??_years_to_days+10
  9356  0A6E  083B               	movf	??_years_to_days+9,w
  9357  0A6F  00BD               	movwf	??_years_to_days+11
  9358  0A70  01BE               	clrf	??_years_to_days+12
  9359  0A71  01BF               	clrf	??_years_to_days+13
  9360  0A72  082E               	movf	years_to_days@yr,w
  9361  0A73  00A0               	movwf	___lmul@multiplier
  9362  0A74  082F               	movf	years_to_days@yr+1,w
  9363  0A75  00A1               	movwf	___lmul@multiplier+1
  9364  0A76  01A2               	clrf	___lmul@multiplier+2
  9365  0A77  01A3               	clrf	___lmul@multiplier+3
  9366  0A78  3000               	movlw	0
  9367  0A79  00A7               	movwf	___lmul@multiplicand+3
  9368  0A7A  3000               	movlw	0
  9369  0A7B  00A6               	movwf	___lmul@multiplicand+2
  9370  0A7C  3001               	movlw	1
  9371  0A7D  00A5               	movwf	___lmul@multiplicand+1
  9372  0A7E  306D               	movlw	109
  9373  0A7F  00A4               	movwf	___lmul@multiplicand
  9374  0A80  3194  24A1         	fcall	___lmul
  9375  0A82  0020               	movlb	0	; select bank0
  9376  0A83  0820               	movf	?___lmul,w
  9377  0A84  07BC               	addwf	??_years_to_days+10,f
  9378  0A85  0821               	movf	?___lmul+1,w
  9379  0A86  3DBD               	addwfc	??_years_to_days+11,f
  9380  0A87  0822               	movf	?___lmul+2,w
  9381  0A88  3DBE               	addwfc	??_years_to_days+12,f
  9382  0A89  0823               	movf	?___lmul+3,w
  9383  0A8A  3DBF               	addwfc	??_years_to_days+13,f
  9384  0A8B  083C               	movf	??_years_to_days+10,w
  9385  0A8C  07B6               	addwf	??_years_to_days+4,f
  9386  0A8D  083D               	movf	??_years_to_days+11,w
  9387  0A8E  3DB7               	addwfc	??_years_to_days+5,f
  9388  0A8F  083E               	movf	??_years_to_days+12,w
  9389  0A90  3DB8               	addwfc	??_years_to_days+6,f
  9390  0A91  083F               	movf	??_years_to_days+13,w
  9391  0A92  3DB9               	addwfc	??_years_to_days+7,f
  9392  0A93  0836               	movf	??_years_to_days+4,w
  9393  0A94  07B2               	addwf	??_years_to_days,f
  9394  0A95  0837               	movf	??_years_to_days+5,w
  9395  0A96  3DB3               	addwfc	??_years_to_days+1,f
  9396  0A97  0838               	movf	??_years_to_days+6,w
  9397  0A98  3DB4               	addwfc	??_years_to_days+2,f
  9398  0A99  0839               	movf	??_years_to_days+7,w
  9399  0A9A  3DB5               	addwfc	??_years_to_days+3,f
  9400  0A9B  0835               	movf	??_years_to_days+3,w
  9401  0A9C  00B1               	movwf	?_years_to_days+3
  9402  0A9D  0834               	movf	??_years_to_days+2,w
  9403  0A9E  00B0               	movwf	?_years_to_days+2
  9404  0A9F  0833               	movf	??_years_to_days+1,w
  9405  0AA0  00AF               	movwf	?_years_to_days+1
  9406  0AA1  0832               	movf	??_years_to_days,w
  9407  0AA2  00AE               	movwf	?_years_to_days
  9408  0AA3  0008               	return
  9409  0AA4                     __end_of_years_to_days:	
  9410                           
  9411                           	psect	text7
  9412  12BF                     __ptext7:	
  9413 ;; *************** function _months_to_days *****************
  9414 ;; Defined at:
  9415 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
  9416 ;; Parameters:    Size  Location     Type
  9417 ;;  month           2   14[BANK0 ] unsigned int 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;		None
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  2   14[BANK0 ] unsigned int 
  9422 ;; Registers used:
  9423 ;;		wreg, status,2, status,0, pclath, cstack
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;Total ram usage:        2 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    7
  9436 ;; This function calls:
  9437 ;;		___lwdiv
  9438 ;;		___wmul
  9439 ;; This function is called by:
  9440 ;;		_ymd_to_scalar
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           
  9445                           ;psect for function _months_to_days
  9446  12BF                     _months_to_days:	
  9447                           
  9448                           ;incstack = 0
  9449                           ; Regs used in _months_to_days: [wreg+status,2+status,0+pclath+cstack]
  9450  12BF  3064               	movlw	100
  9451  12C0  0020               	movlb	0	; select bank0
  9452  12C1  00A6               	movwf	___lwdiv@divisor
  9453  12C2  3000               	movlw	0
  9454  12C3  00A7               	movwf	___lwdiv@divisor+1
  9455  12C4  082F               	movf	months_to_days@month+1,w
  9456  12C5  00A1               	movwf	___wmul@multiplier+1
  9457  12C6  082E               	movf	months_to_days@month,w
  9458  12C7  00A0               	movwf	___wmul@multiplier
  9459  12C8  30F1               	movlw	241
  9460  12C9  00A2               	movwf	___wmul@multiplicand
  9461  12CA  300B               	movlw	11
  9462  12CB  00A3               	movwf	___wmul@multiplicand+1
  9463  12CC  3192  2267  3192   	fcall	___wmul
  9464  12CF  0020               	movlb	0	; select bank0
  9465  12D0  0820               	movf	?___wmul,w
  9466  12D1  3E41               	addlw	65
  9467  12D2  00A8               	movwf	___lwdiv@dividend
  9468  12D3  30F4               	movlw	244
  9469  12D4  3D21               	addwfc	?___wmul+1,w
  9470  12D5  00A9               	movwf	___lwdiv@dividend+1
  9471  12D6  3195  2537         	fcall	___lwdiv
  9472  12D8  0020               	movlb	0	; select bank0
  9473  12D9  0827               	movf	?___lwdiv+1,w
  9474  12DA  00AF               	movwf	?_months_to_days+1
  9475  12DB  0826               	movf	?___lwdiv,w
  9476  12DC  00AE               	movwf	?_months_to_days
  9477  12DD  0008               	return
  9478  12DE                     __end_of_months_to_days:	
  9479                           
  9480                           	psect	text8
  9481  1503                     __ptext8:	
  9482 ;; *************** function _isleap *****************
  9483 ;; Defined at:
  9484 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  yr              2   20[BANK0 ] unsigned int 
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;		None
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  2   20[BANK0 ] int 
  9491 ;; Registers used:
  9492 ;;		wreg, status,2, status,0, pclath, cstack
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;Total ram usage:        5 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:    7
  9505 ;; This function calls:
  9506 ;;		___lwmod
  9507 ;; This function is called by:
  9508 ;;		_ymd_to_scalar
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           
  9513                           ;psect for function _isleap
  9514  1503                     _isleap:	
  9515                           
  9516                           ;incstack = 0
  9517                           ; Regs used in _isleap: [wreg+status,2+status,0+pclath+cstack]
  9518  1503  0020               	movlb	0	; select bank0
  9519  1504  01B8               	clrf	_isleap$2117
  9520  1505  0AB8               	incf	_isleap$2117,f
  9521  1506  3090               	movlw	144
  9522  1507  00AE               	movwf	___lwmod@divisor
  9523  1508  3001               	movlw	1
  9524  1509  00AF               	movwf	___lwmod@divisor+1
  9525  150A  0835               	movf	isleap@yr+1,w
  9526  150B  00B1               	movwf	___lwmod@dividend+1
  9527  150C  0834               	movf	isleap@yr,w
  9528  150D  00B0               	movwf	___lwmod@dividend
  9529  150E  3194  2417  3195   	fcall	___lwmod
  9530  1511  0020               	movlb	0	; select bank0
  9531  1512  082E               	movf	?___lwmod,w
  9532  1513  042F               	iorwf	?___lwmod+1,w
  9533  1514  1903               	btfsc	3,2
  9534  1515  2D2F               	goto	l5891
  9535  1516  3003               	movlw	3
  9536  1517  0534               	andwf	isleap@yr,w
  9537  1518  00B6               	movwf	??_isleap
  9538  1519  3000               	movlw	0
  9539  151A  0535               	andwf	isleap@yr+1,w
  9540  151B  00B7               	movwf	??_isleap+1
  9541  151C  0836               	movf	??_isleap,w
  9542  151D  0437               	iorwf	??_isleap+1,w
  9543  151E  1D03               	btfss	3,2
  9544  151F  2D2E               	goto	l5889
  9545  1520  3064               	movlw	100
  9546  1521  00AE               	movwf	___lwmod@divisor
  9547  1522  3000               	movlw	0
  9548  1523  00AF               	movwf	___lwmod@divisor+1
  9549  1524  0835               	movf	isleap@yr+1,w
  9550  1525  00B1               	movwf	___lwmod@dividend+1
  9551  1526  0834               	movf	isleap@yr,w
  9552  1527  00B0               	movwf	___lwmod@dividend
  9553  1528  3194  2417         	fcall	___lwmod
  9554  152A  0020               	movlb	0	; select bank0
  9555  152B  082E               	movf	?___lwmod,w
  9556  152C  042F               	iorwf	?___lwmod+1,w
  9557  152D  1903               	btfsc	3,2
  9558  152E                     l5889:	
  9559  152E  01B8               	clrf	_isleap$2117
  9560  152F                     l5891:	
  9561  152F  0838               	movf	_isleap$2117,w
  9562  1530  00B6               	movwf	??_isleap
  9563  1531  01B7               	clrf	??_isleap+1
  9564  1532  0836               	movf	??_isleap,w
  9565  1533  00B4               	movwf	?_isleap
  9566  1534  0837               	movf	??_isleap+1,w
  9567  1535  00B5               	movwf	?_isleap+1
  9568  1536  0008               	return
  9569  1537                     __end_of_isleap:	
  9570                           
  9571                           	psect	text9
  9572  1472                     __ptext9:	
  9573 ;; *************** function _Write_String *****************
  9574 ;; Defined at:
  9575 ;;		line 108 in file "oled.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;  message         2   51[BANK0 ] PTR unsigned char 
  9578 ;;		 -> main@timeStr(0), 
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;  len             2   53[BANK0 ] unsigned int 
  9581 ;; Return value:  Size  Location     Type
  9582 ;;                  1    wreg      void 
  9583 ;; Registers used:
  9584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9585 ;; Tracked objects:
  9586 ;;		On entry : 0/0
  9587 ;;		On exit  : 0/0
  9588 ;;		Unchanged: 0/0
  9589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9591 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9593 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;Total ram usage:        4 bytes
  9595 ;; Hardware stack levels used:    1
  9596 ;; Hardware stack levels required when called:   10
  9597 ;; This function calls:
  9598 ;;		_Modify_Data
  9599 ;;		_OLED_PutPicture
  9600 ;;		_sprintf
  9601 ;;		_strlen
  9602 ;; This function is called by:
  9603 ;;		_main
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           
  9608                           ;psect for function _Write_String
  9609  1472                     _Write_String:	
  9610                           
  9611                           ;oled.c: 109: size_t len = strlen(message);
  9612                           
  9613                           ;incstack = 0
  9614                           ; Regs used in _Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9615  1472  0020               	movlb	0	; select bank0
  9616  1473  0854               	movf	Write_String@message+1,w
  9617  1474  00A1               	movwf	strlen@s+1
  9618  1475  0853               	movf	Write_String@message,w
  9619  1476  00A0               	movwf	strlen@s
  9620  1477  3192  22A0  3194   	fcall	_strlen
  9621  147A  0020               	movlb	0	; select bank0
  9622  147B  0821               	movf	?_strlen+1,w
  9623  147C  00D6               	movwf	Write_String@len+1
  9624  147D  0820               	movf	?_strlen,w
  9625  147E  00D5               	movwf	Write_String@len
  9626                           
  9627                           ;oled.c: 110: sprintf(CharacterArray, message);
  9628  147F  308C               	movlw	140
  9629  1480  00B4               	movwf	sprintf@sp
  9630  1481  3023               	movlw	35
  9631  1482  00B5               	movwf	sprintf@sp+1
  9632  1483  0854               	movf	Write_String@message+1,w
  9633  1484  00B7               	movwf	sprintf@f+1
  9634  1485  0853               	movf	Write_String@message,w
  9635  1486  00B6               	movwf	sprintf@f
  9636  1487  3186  2612  3194   	fcall	_sprintf
  9637                           
  9638                           ;oled.c: 111: Modify_Data(CharacterArray, 0, len);
  9639  148A  308C               	movlw	140
  9640  148B  0020               	movlb	0	; select bank0
  9641  148C  00A6               	movwf	Modify_Data@c
  9642  148D  3023               	movlw	35
  9643  148E  00A7               	movwf	Modify_Data@c+1
  9644  148F  3000               	movlw	0
  9645  1490  00A8               	movwf	Modify_Data@offset
  9646  1491  00A9               	movwf	Modify_Data@offset+1
  9647  1492  0856               	movf	Write_String@len+1,w
  9648  1493  00AB               	movwf	Modify_Data@limit+1
  9649  1494  0855               	movf	Write_String@len,w
  9650  1495  00AA               	movwf	Modify_Data@limit
  9651  1496  318A  22A4  3194   	fcall	_Modify_Data
  9652                           
  9653                           ;oled.c: 112: OLED_PutPicture(displayArray);
  9654  1499  30B1               	movlw	177
  9655  149A  0020               	movlb	0	; select bank0
  9656  149B  00A4               	movwf	OLED_PutPicture@pic
  9657  149C  3021               	movlw	33
  9658  149D  00A5               	movwf	OLED_PutPicture@pic+1
  9659  149E  3195  25DC         	fcall	_OLED_PutPicture
  9660  14A0  0008               	return
  9661  14A1                     __end_of_Write_String:	
  9662                           
  9663                           	psect	text10
  9664  12A0                     __ptext10:	
  9665 ;; *************** function _strlen *****************
  9666 ;; Defined at:
  9667 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  9670 ;;		 -> main@timeStr(0), 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  9673 ;;		 -> main@timeStr(0), 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  2    0[BANK0 ] unsigned int 
  9676 ;; Registers used:
  9677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9683 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9687 ;;Total ram usage:        6 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    6
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_Write_String
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           
  9698                           ;psect for function _strlen
  9699  12A0                     _strlen:	
  9700                           
  9701                           ;incstack = 0
  9702                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9703  12A0  0020               	movlb	0	; select bank0
  9704  12A1  0821               	movf	strlen@s+1,w
  9705  12A2  00A5               	movwf	strlen@cp+1
  9706  12A3  0820               	movf	strlen@s,w
  9707  12A4  00A4               	movwf	strlen@cp
  9708  12A5                     l6321:	
  9709  12A5  0824               	movf	strlen@cp,w
  9710  12A6  0086               	movwf	6
  9711  12A7  0825               	movf	strlen@cp+1,w
  9712  12A8  0087               	movwf	7
  9713  12A9  0801               	movf	1,w
  9714  12AA  1903               	btfsc	3,2
  9715  12AB  2AB1               	goto	l6323
  9716  12AC  3001               	movlw	1
  9717  12AD  07A4               	addwf	strlen@cp,f
  9718  12AE  3000               	movlw	0
  9719  12AF  3DA5               	addwfc	strlen@cp+1,f
  9720  12B0  2AA5               	goto	l6321
  9721  12B1                     l6323:	
  9722  12B1  0920               	comf	strlen@s,w
  9723  12B2  00A2               	movwf	??_strlen
  9724  12B3  0921               	comf	strlen@s+1,w
  9725  12B4  00A3               	movwf	??_strlen+1
  9726  12B5  0AA2               	incf	??_strlen,f
  9727  12B6  1903               	skipnz
  9728  12B7  0AA3               	incf	??_strlen+1,f
  9729  12B8  0824               	movf	strlen@cp,w
  9730  12B9  0722               	addwf	??_strlen,w
  9731  12BA  00A0               	movwf	?_strlen
  9732  12BB  0825               	movf	strlen@cp+1,w
  9733  12BC  3D23               	addwfc	??_strlen+1,w
  9734  12BD  00A1               	movwf	?_strlen+1
  9735  12BE  0008               	return
  9736  12BF                     __end_of_strlen:	
  9737                           
  9738                           	psect	text11
  9739  0612                     __ptext11:	
  9740 ;; *************** function _sprintf *****************
  9741 ;; Defined at:
  9742 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  sp              2   20[BANK0 ] PTR unsigned char 
  9745 ;;		 -> CharacterArray(100), main@timeStr(0), 
  9746 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  9747 ;;		 -> STR_1(31), main@timeStr(0), 
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;  tmpval          4    0        struct .
  9750 ;;  width           2   48[BANK0 ] int 
  9751 ;;  val             2   45[BANK0 ] unsigned int 
  9752 ;;  len             2   43[BANK0 ] unsigned int 
  9753 ;;  c               1   50[BANK0 ] char 
  9754 ;;  flag            1   47[BANK0 ] unsigned char 
  9755 ;;  prec            1   42[BANK0 ] char 
  9756 ;;  cp              1   41[BANK0 ] PTR const unsigned char 
  9757 ;;		 -> sprintf@c(1), 
  9758 ;;  ap              1   40[BANK0 ] PTR void [1]
  9759 ;;		 -> ?_sprintf(2), 
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  2   20[BANK0 ] int 
  9762 ;; Registers used:
  9763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9769 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;Total ram usage:       31 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; Hardware stack levels required when called:    7
  9776 ;; This function calls:
  9777 ;;		___lwdiv
  9778 ;;		___lwmod
  9779 ;;		___wmul
  9780 ;;		_isdigit
  9781 ;; This function is called by:
  9782 ;;		_main
  9783 ;;		_Write_String
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787                           
  9788                           ;psect for function _sprintf
  9789  0612                     _sprintf:	
  9790                           
  9791                           ;doprnt.c: 494: va_list ap;
  9792                           ;doprnt.c: 499: signed char c;
  9793                           ;doprnt.c: 501: int width;
  9794                           ;doprnt.c: 506: signed char prec;
  9795                           ;doprnt.c: 508: unsigned char flag;
  9796                           ;doprnt.c: 523: union {
  9797                           ;doprnt.c: 524: unsigned long vd;
  9798                           ;doprnt.c: 525: double integ;
  9799                           ;doprnt.c: 526: } tmpval;
  9800                           ;doprnt.c: 528: unsigned int val;
  9801                           ;doprnt.c: 529: unsigned len;
  9802                           ;doprnt.c: 530: const char * cp;
  9803                           ;doprnt.c: 533: *ap = __va_start();
  9804                           
  9805                           ;incstack = 0
  9806                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9807  0612  3038               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  9808  0613  0020               	movlb	0	; select bank0
  9809  0614  00C4               	movwf	??_sprintf
  9810  0615  0844               	movf	??_sprintf,w
  9811  0616  00C8               	movwf	sprintf@ap
  9812  0617                     l6287:	
  9813                           ;doprnt.c: 536: while(c = *f++) {
  9814                           
  9815  0617  0837               	movf	sprintf@f+1,w
  9816  0618  00C5               	movwf	??_sprintf+1
  9817  0619  0836               	movf	sprintf@f,w
  9818  061A  00C4               	movwf	??_sprintf
  9819  061B  0AB6               	incf	sprintf@f,f
  9820  061C  1903               	skipnz
  9821  061D  0AB7               	incf	sprintf@f+1,f
  9822  061E  0844               	movf	??_sprintf,w
  9823  061F  0084               	movwf	4
  9824  0620  0845               	movf	??_sprintf+1,w
  9825  0621  0085               	movwf	5
  9826  0622  0800               	movf	0,w	;code access
  9827  0623  00C6               	movwf	??_sprintf+2
  9828  0624  0846               	movf	??_sprintf+2,w
  9829  0625  00D2               	movwf	sprintf@c
  9830  0626  0852               	movf	sprintf@c,w
  9831  0627  1903               	btfsc	3,2
  9832  0628  2FD5               	goto	l6289
  9833                           
  9834                           ;doprnt.c: 538: if(c != '%')
  9835  0629  3025               	movlw	37
  9836  062A  0652               	xorwf	sprintf@c,w
  9837  062B  1903               	btfsc	3,2
  9838  062C  2E38               	goto	l6169
  9839                           
  9840                           ;doprnt.c: 540: {
  9841                           ;doprnt.c: 541: ((*sp++ = (c)));
  9842  062D  0834               	movf	sprintf@sp,w
  9843  062E  0086               	movwf	6
  9844  062F  0835               	movf	sprintf@sp+1,w
  9845  0630  0087               	movwf	7
  9846  0631  0852               	movf	sprintf@c,w
  9847  0632  0081               	movwf	1
  9848  0633  3001               	movlw	1
  9849  0634  07B4               	addwf	sprintf@sp,f
  9850  0635  3000               	movlw	0
  9851  0636  3DB5               	addwfc	sprintf@sp+1,f
  9852                           
  9853                           ;doprnt.c: 542: continue;
  9854  0637  2E17               	goto	l6287
  9855  0638                     l6169:	
  9856                           
  9857                           ;doprnt.c: 543: }
  9858                           ;doprnt.c: 546: width = 0;
  9859  0638  01D0               	clrf	sprintf@width
  9860  0639  01D1               	clrf	sprintf@width+1
  9861                           
  9862                           ;doprnt.c: 548: flag = 0;
  9863  063A  01CF               	clrf	sprintf@flag
  9864                           
  9865                           ;doprnt.c: 551: switch(*f) {
  9866                           
  9867                           ;doprnt.c: 550: for(;;) {
  9868  063B  2E41               	goto	l6175
  9869  063C                     l855:	
  9870                           ;doprnt.c: 579: case '0':
  9871                           
  9872                           
  9873                           ;doprnt.c: 580: flag |= 0x04;
  9874  063C  154F               	bsf	sprintf@flag,2
  9875                           
  9876                           ;doprnt.c: 581: f++;
  9877  063D  3001               	movlw	1
  9878  063E  07B6               	addwf	sprintf@f,f
  9879  063F  3000               	movlw	0
  9880  0640  3DB7               	addwfc	sprintf@f+1,f
  9881  0641                     l6175:	
  9882                           ;doprnt.c: 584: }
  9883                           
  9884                           ;doprnt.c: 582: continue;
  9885                           
  9886  0641  0836               	movf	sprintf@f,w
  9887  0642  0084               	movwf	4
  9888  0643  0837               	movf	sprintf@f+1,w
  9889  0644  0085               	movwf	5
  9890  0645  0800               	movf	0,w	;code access
  9891                           
  9892                           ; Switch size 1, requested type "space"
  9893                           ; Number of cases is 1, Range of values is 48 to 48
  9894                           ; switch strategies available:
  9895                           ; Name         Instructions Cycles
  9896                           ; simple_byte            4     3 (average)
  9897                           ; direct_byte           11     9 (fixed)
  9898                           ; jumptable            263     9 (fixed)
  9899                           ;	Chosen strategy is simple_byte
  9900  0646  3A30               	xorlw	48	; case 48
  9901  0647  1903               	skipnz
  9902  0648  2E3C               	goto	l855
  9903  0649  2E4A               	goto	l6177
  9904  064A                     l6177:	
  9905                           ;doprnt.c: 586: }
  9906                           
  9907                           ;doprnt.c: 585: break;
  9908                           
  9909                           
  9910                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  9911  064A  0836               	movf	sprintf@f,w
  9912  064B  0084               	movwf	4
  9913  064C  0837               	movf	sprintf@f+1,w
  9914  064D  0085               	movwf	5
  9915  064E  0800               	movf	0,w	;code access
  9916  064F  3191  211D  3186   	fcall	_isdigit
  9917  0652  1C03               	btfss	3,0
  9918  0653  2ED1               	goto	l6213
  9919                           
  9920                           ;doprnt.c: 598: width = 0;
  9921  0654  0020               	movlb	0	; select bank0
  9922  0655  01D0               	clrf	sprintf@width
  9923  0656  01D1               	clrf	sprintf@width+1
  9924  0657                     l6181:	
  9925                           ;doprnt.c: 599: do {
  9926                           
  9927                           
  9928                           ;doprnt.c: 600: width *= 10;
  9929  0657  300A               	movlw	10
  9930  0658  0020               	movlb	0	; select bank0
  9931  0659  00A0               	movwf	___wmul@multiplier
  9932  065A  3000               	movlw	0
  9933  065B  00A1               	movwf	___wmul@multiplier+1
  9934  065C  0851               	movf	sprintf@width+1,w
  9935  065D  00A3               	movwf	___wmul@multiplicand+1
  9936  065E  0850               	movf	sprintf@width,w
  9937  065F  00A2               	movwf	___wmul@multiplicand
  9938  0660  3192  2267  3186   	fcall	___wmul
  9939  0663  0020               	movlb	0	; select bank0
  9940  0664  0821               	movf	?___wmul+1,w
  9941  0665  00D1               	movwf	sprintf@width+1
  9942  0666  0820               	movf	?___wmul,w
  9943  0667  00D0               	movwf	sprintf@width
  9944                           
  9945                           ;doprnt.c: 601: width += *f++ - '0';
  9946  0668  0836               	movf	sprintf@f,w
  9947  0669  0084               	movwf	4
  9948  066A  0837               	movf	sprintf@f+1,w
  9949  066B  0085               	movwf	5
  9950  066C  0800               	movf	0,w	;code access
  9951  066D  3ED0               	addlw	208
  9952  066E  00C4               	movwf	??_sprintf
  9953  066F  30FF               	movlw	255
  9954  0670  1803               	skipnc
  9955  0671  3000               	movlw	0
  9956  0672  00C5               	movwf	??_sprintf+1
  9957  0673  0844               	movf	??_sprintf,w
  9958  0674  07D0               	addwf	sprintf@width,f
  9959  0675  0845               	movf	??_sprintf+1,w
  9960  0676  3DD1               	addwfc	sprintf@width+1,f
  9961  0677  3001               	movlw	1
  9962  0678  07B6               	addwf	sprintf@f,f
  9963  0679  3000               	movlw	0
  9964  067A  3DB7               	addwfc	sprintf@f+1,f
  9965                           
  9966                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  9967  067B  0836               	movf	sprintf@f,w
  9968  067C  0084               	movwf	4
  9969  067D  0837               	movf	sprintf@f+1,w
  9970  067E  0085               	movwf	5
  9971  067F  0800               	movf	0,w	;code access
  9972  0680  3191  211D  3186   	fcall	_isdigit
  9973  0683  1C03               	btfss	3,0
  9974  0684  2ED1               	goto	l6213
  9975  0685  2E57               	goto	l6181
  9976  0686                     l6189:	
  9977                           ;doprnt.c: 750: dostring:
  9978                           
  9979                           ;doprnt.c: 698: case 'i':
  9980                           ;doprnt.c: 699: break;
  9981                           
  9982                           ;doprnt.c: 697: case 'd':
  9983                           
  9984                           ;doprnt.c: 638: goto alldone;
  9985                           
  9986                           ;doprnt.c: 637: case 0:
  9987                           
  9988                           ;doprnt.c: 608: }
  9989                           ;doprnt.c: 635: switch(c = *f++) {
  9990                           
  9991                           
  9992                           ;doprnt.c: 757: if(width > len)
  9993  0686  0020               	movlb	0	; select bank0
  9994  0687  0851               	movf	sprintf@width+1,w
  9995  0688  024C               	subwf	sprintf@len+1,w
  9996  0689  1D03               	skipz
  9997  068A  2E8D               	goto	u4625
  9998  068B  0850               	movf	sprintf@width,w
  9999  068C  024B               	subwf	sprintf@len,w
 10000  068D                     u4625:	
 10001  068D  1803               	skipnc
 10002  068E  2E94               	goto	l6193
 10003                           
 10004                           ;doprnt.c: 758: width -= len;
 10005  068F  084B               	movf	sprintf@len,w
 10006  0690  02D0               	subwf	sprintf@width,f
 10007  0691  084C               	movf	sprintf@len+1,w
 10008  0692  3BD1               	subwfb	sprintf@width+1,f
 10009  0693  2E96               	goto	l6199
 10010  0694                     l6193:	
 10011                           
 10012                           ;doprnt.c: 759: else
 10013                           ;doprnt.c: 760: width = 0;
 10014  0694  01D0               	clrf	sprintf@width
 10015  0695  01D1               	clrf	sprintf@width+1
 10016  0696                     l6199:	
 10017                           ;doprnt.c: 764: while(width--)
 10018                           
 10019  0696  30FF               	movlw	255
 10020  0697  07D0               	addwf	sprintf@width,f
 10021  0698  30FF               	movlw	255
 10022  0699  3DD1               	addwfc	sprintf@width+1,f
 10023  069A  0A50               	incf	sprintf@width,w
 10024  069B  1903               	btfsc	3,2
 10025  069C  0A51               	incf	sprintf@width+1,w
 10026  069D  1903               	btfsc	3,2
 10027  069E  2EBD               	goto	l6207
 10028                           
 10029                           ;doprnt.c: 765: ((*sp++ = (' ')));
 10030  069F  0834               	movf	sprintf@sp,w
 10031  06A0  0086               	movwf	6
 10032  06A1  0835               	movf	sprintf@sp+1,w
 10033  06A2  0087               	movwf	7
 10034  06A3  3020               	movlw	32
 10035  06A4  0081               	movwf	1
 10036  06A5  3001               	movlw	1
 10037  06A6  07B4               	addwf	sprintf@sp,f
 10038  06A7  3000               	movlw	0
 10039  06A8  3DB5               	addwfc	sprintf@sp+1,f
 10040  06A9  2E96               	goto	l6199
 10041  06AA                     l6201:	
 10042                           ;doprnt.c: 767: while(len--)
 10043                           
 10044                           
 10045                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 10046  06AA  0849               	movf	sprintf@cp,w
 10047  06AB  0086               	movwf	6
 10048  06AC  0187               	clrf	7
 10049  06AD  0801               	movf	1,w
 10050  06AE  00C4               	movwf	??_sprintf
 10051  06AF  0834               	movf	sprintf@sp,w
 10052  06B0  0086               	movwf	6
 10053  06B1  0835               	movf	sprintf@sp+1,w
 10054  06B2  0087               	movwf	7
 10055  06B3  0844               	movf	??_sprintf,w
 10056  06B4  0081               	movwf	1
 10057  06B5  3001               	movlw	1
 10058  06B6  00C4               	movwf	??_sprintf
 10059  06B7  0844               	movf	??_sprintf,w
 10060  06B8  07C9               	addwf	sprintf@cp,f
 10061  06B9  3001               	movlw	1
 10062  06BA  07B4               	addwf	sprintf@sp,f
 10063  06BB  3000               	movlw	0
 10064  06BC  3DB5               	addwfc	sprintf@sp+1,f
 10065  06BD                     l6207:	
 10066  06BD  3001               	movlw	1
 10067  06BE  02CB               	subwf	sprintf@len,f
 10068  06BF  3000               	movlw	0
 10069  06C0  3BCC               	subwfb	sprintf@len+1,f
 10070  06C1  0A4B               	incf	sprintf@len,w
 10071  06C2  1D03               	skipz
 10072  06C3  2EAA               	goto	l6201
 10073  06C4  0A4C               	incf	sprintf@len+1,w
 10074  06C5  1903               	btfsc	3,2
 10075  06C6  2E17               	goto	l6287
 10076  06C7  2EAA               	goto	l6201
 10077  06C8                     l6209:	
 10078                           ;doprnt.c: 802: default:
 10079                           
 10080                           ;doprnt.c: 774: continue;
 10081                           
 10082                           
 10083                           ;doprnt.c: 805: cp = (char *)&c;
 10084  06C8  3052               	movlw	(low (sprintf@c| 0))& (0+255)
 10085  06C9  00C4               	movwf	??_sprintf
 10086  06CA  0844               	movf	??_sprintf,w
 10087  06CB  00C9               	movwf	sprintf@cp
 10088                           
 10089                           ;doprnt.c: 806: len = 1;
 10090  06CC  3001               	movlw	1
 10091  06CD  00CB               	movwf	sprintf@len
 10092  06CE  3000               	movlw	0
 10093  06CF  00CC               	movwf	sprintf@len+1
 10094                           
 10095                           ;doprnt.c: 807: goto dostring;
 10096  06D0  2E86               	goto	l6189
 10097  06D1                     l6213:	
 10098                           ;doprnt.c: 822: }
 10099                           
 10100  06D1  0020               	movlb	0	; select bank0
 10101  06D2  0837               	movf	sprintf@f+1,w
 10102  06D3  00C5               	movwf	??_sprintf+1
 10103  06D4  0836               	movf	sprintf@f,w
 10104  06D5  00C4               	movwf	??_sprintf
 10105  06D6  0AB6               	incf	sprintf@f,f
 10106  06D7  1903               	skipnz
 10107  06D8  0AB7               	incf	sprintf@f+1,f
 10108  06D9  0844               	movf	??_sprintf,w
 10109  06DA  0084               	movwf	4
 10110  06DB  0845               	movf	??_sprintf+1,w
 10111  06DC  0085               	movwf	5
 10112  06DD  0800               	movf	0,w	;code access
 10113  06DE  00D2               	movwf	sprintf@c
 10114                           
 10115                           ; Switch size 1, requested type "space"
 10116                           ; Number of cases is 3, Range of values is 0 to 105
 10117                           ; switch strategies available:
 10118                           ; Name         Instructions Cycles
 10119                           ; simple_byte           10     6 (average)
 10120                           ; direct_byte          218     6 (fixed)
 10121                           ; jumptable            260     6 (fixed)
 10122                           ;	Chosen strategy is simple_byte
 10123  06DF  3A00               	xorlw	0	; case 0
 10124  06E0  1903               	skipnz
 10125  06E1  2FD5               	goto	l6289
 10126  06E2  3A64               	xorlw	100	; case 100
 10127  06E3  1903               	skipnz
 10128  06E4  2EE9               	goto	l6215
 10129  06E5  3A0D               	xorlw	13	; case 105
 10130  06E6  1903               	skipnz
 10131  06E7  2EE9               	goto	l6215
 10132  06E8  2EC8               	goto	l6209
 10133  06E9                     l6215:	
 10134                           
 10135                           ;doprnt.c: 1253: {
 10136                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 10137  06E9  0020               	movlb	0	; select bank0
 10138  06EA  0848               	movf	sprintf@ap,w
 10139  06EB  0086               	movwf	6
 10140  06EC  0187               	clrf	7
 10141  06ED  3F40               	moviw [0]fsr1
 10142  06EE  00CD               	movwf	sprintf@val
 10143  06EF  3F41               	moviw [1]fsr1
 10144  06F0  00CE               	movwf	sprintf@val+1
 10145  06F1  3002               	movlw	2
 10146  06F2  00C4               	movwf	??_sprintf
 10147  06F3  0844               	movf	??_sprintf,w
 10148  06F4  07C8               	addwf	sprintf@ap,f
 10149                           
 10150                           ;doprnt.c: 1261: if((int)val < 0) {
 10151  06F5  1FCE               	btfss	sprintf@val+1,7
 10152  06F6  2F00               	goto	l6225
 10153                           
 10154                           ;doprnt.c: 1262: flag |= 0x03;
 10155  06F7  3003               	movlw	3
 10156  06F8  00C4               	movwf	??_sprintf
 10157  06F9  0844               	movf	??_sprintf,w
 10158  06FA  04CF               	iorwf	sprintf@flag,f
 10159                           
 10160                           ;doprnt.c: 1263: val = -val;
 10161  06FB  09CD               	comf	sprintf@val,f
 10162  06FC  09CE               	comf	sprintf@val+1,f
 10163  06FD  0ACD               	incf	sprintf@val,f
 10164  06FE  1903               	skipnz
 10165  06FF  0ACE               	incf	sprintf@val+1,f
 10166  0700                     l6225:	
 10167                           
 10168                           ;doprnt.c: 1264: }
 10169                           ;doprnt.c: 1266: }
 10170                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10171  0700  01D2               	clrf	sprintf@c
 10172  0701  0AD2               	incf	sprintf@c,f
 10173  0702  3005               	movlw	5
 10174  0703  0652               	xorwf	sprintf@c,w
 10175  0704  1903               	btfsc	3,2
 10176  0705  2F25               	goto	l6237
 10177  0706                     l6231:	
 10178                           
 10179                           ;doprnt.c: 1306: if(val < dpowers[c])
 10180  0706  0852               	movf	sprintf@c,w
 10181  0707  00C4               	movwf	??_sprintf
 10182  0708  01C5               	clrf	??_sprintf+1
 10183  0709  35C4               	lslf	??_sprintf,f
 10184  070A  0DC5               	rlf	??_sprintf+1,f
 10185  070B  3061               	movlw	low (_dpowers| (0+32768))
 10186  070C  0744               	addwf	??_sprintf,w
 10187  070D  0084               	movwf	4
 10188  070E  3098               	movlw	high (_dpowers| (0+32768))
 10189  070F  3D45               	addwfc	??_sprintf+1,w
 10190  0710  0085               	movwf	5
 10191  0711  3F00               	moviw [0]fsr0
 10192  0712  00C6               	movwf	??_sprintf+2
 10193  0713  3F01               	moviw [1]fsr0
 10194  0714  00C7               	movwf	??_sprintf+3
 10195  0715  0847               	movf	??_sprintf+3,w
 10196  0716  024E               	subwf	sprintf@val+1,w
 10197  0717  1D03               	skipz
 10198  0718  2F1B               	goto	u4675
 10199  0719  0846               	movf	??_sprintf+2,w
 10200  071A  024D               	subwf	sprintf@val,w
 10201  071B                     u4675:	
 10202  071B  1C03               	btfss	3,0
 10203  071C  2F25               	goto	l6237
 10204                           
 10205                           ;doprnt.c: 1307: break;
 10206  071D  3001               	movlw	1
 10207  071E  00C4               	movwf	??_sprintf
 10208  071F  0844               	movf	??_sprintf,w
 10209  0720  07D2               	addwf	sprintf@c,f
 10210  0721  3005               	movlw	5
 10211  0722  0652               	xorwf	sprintf@c,w
 10212  0723  1D03               	btfss	3,2
 10213  0724  2F06               	goto	l6231
 10214  0725                     l6237:	
 10215                           
 10216                           ;doprnt.c: 1345: if(width && flag & 0x03)
 10217  0725  0850               	movf	sprintf@width,w
 10218  0726  0451               	iorwf	sprintf@width+1,w
 10219  0727  1903               	btfsc	3,2
 10220  0728  2F31               	goto	l882
 10221  0729  084F               	movf	sprintf@flag,w
 10222  072A  3903               	andlw	3
 10223  072B  1903               	btfsc	3,2
 10224  072C  2F31               	goto	l882
 10225                           
 10226                           ;doprnt.c: 1346: width--;
 10227  072D  30FF               	movlw	255
 10228  072E  07D0               	addwf	sprintf@width,f
 10229  072F  30FF               	movlw	255
 10230  0730  3DD1               	addwfc	sprintf@width+1,f
 10231  0731                     l882:	
 10232                           
 10233                           ;doprnt.c: 1381: if(width > c)
 10234  0731  0852               	movf	sprintf@c,w
 10235  0732  00C4               	movwf	??_sprintf
 10236  0733  01C5               	clrf	??_sprintf+1
 10237  0734  1BC4               	btfsc	??_sprintf,7
 10238  0735  03C5               	decf	??_sprintf+1,f
 10239  0736  0845               	movf	??_sprintf+1,w
 10240  0737  3A80               	xorlw	128
 10241  0738  00C6               	movwf	??_sprintf+2
 10242  0739  0851               	movf	sprintf@width+1,w
 10243  073A  3A80               	xorlw	128
 10244  073B  0246               	subwf	??_sprintf+2,w
 10245  073C  1D03               	skipz
 10246  073D  2F40               	goto	u4715
 10247  073E  0850               	movf	sprintf@width,w
 10248  073F  0244               	subwf	??_sprintf,w
 10249  0740                     u4715:	
 10250  0740  1803               	skipnc
 10251  0741  2F4D               	goto	l6245
 10252                           
 10253                           ;doprnt.c: 1382: width -= c;
 10254  0742  0020               	movlb	0	; select bank0
 10255  0743  0852               	movf	sprintf@c,w
 10256  0744  00C4               	movwf	??_sprintf
 10257  0745  01C5               	clrf	??_sprintf+1
 10258  0746  1BC4               	btfsc	??_sprintf,7
 10259  0747  03C5               	decf	??_sprintf+1,f
 10260  0748  0844               	movf	??_sprintf,w
 10261  0749  02D0               	subwf	sprintf@width,f
 10262  074A  0845               	movf	??_sprintf+1,w
 10263  074B  3BD1               	subwfb	sprintf@width+1,f
 10264  074C  2F50               	goto	l6247
 10265  074D                     l6245:	
 10266                           
 10267                           ;doprnt.c: 1383: else
 10268                           ;doprnt.c: 1384: width = 0;
 10269  074D  0020               	movlb	0	; select bank0
 10270  074E  01D0               	clrf	sprintf@width
 10271  074F  01D1               	clrf	sprintf@width+1
 10272  0750                     l6247:	
 10273                           
 10274                           ;doprnt.c: 1387: if(flag & 0x04) {
 10275  0750  1D4F               	btfss	sprintf@flag,2
 10276  0751  2F73               	goto	l6263
 10277                           
 10278                           ;doprnt.c: 1392: if(flag & 0x03)
 10279  0752  084F               	movf	sprintf@flag,w
 10280  0753  3903               	andlw	3
 10281  0754  1903               	btfsc	3,2
 10282  0755  2F60               	goto	l6255
 10283                           
 10284                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 10285  0756  0834               	movf	sprintf@sp,w
 10286  0757  0086               	movwf	6
 10287  0758  0835               	movf	sprintf@sp+1,w
 10288  0759  0087               	movwf	7
 10289  075A  302D               	movlw	45
 10290  075B  0081               	movwf	1
 10291  075C  3001               	movlw	1
 10292  075D  07B4               	addwf	sprintf@sp,f
 10293  075E  3000               	movlw	0
 10294  075F  3DB5               	addwfc	sprintf@sp+1,f
 10295  0760                     l6255:	
 10296                           
 10297                           ;doprnt.c: 1415: if(width)
 10298  0760  0850               	movf	sprintf@width,w
 10299  0761  0451               	iorwf	sprintf@width+1,w
 10300  0762  1903               	btfsc	3,2
 10301  0763  2F97               	goto	l6277
 10302                           
 10303                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 10304                           
 10305                           ;doprnt.c: 1416: do
 10306  0764  0834               	movf	sprintf@sp,w
 10307  0765  0086               	movwf	6
 10308  0766  0835               	movf	sprintf@sp+1,w
 10309  0767  0087               	movwf	7
 10310  0768  3030               	movlw	48
 10311  0769  0081               	movwf	1
 10312  076A  3001               	movlw	1
 10313  076B  07B4               	addwf	sprintf@sp,f
 10314  076C  3000               	movlw	0
 10315  076D  3DB5               	addwfc	sprintf@sp+1,f
 10316                           
 10317                           ;doprnt.c: 1418: while(--width);
 10318  076E  30FF               	movlw	255
 10319  076F  07D0               	addwf	sprintf@width,f
 10320  0770  30FF               	movlw	255
 10321  0771  3DD1               	addwfc	sprintf@width+1,f
 10322  0772  2F60               	goto	l6255
 10323  0773                     l6263:	
 10324                           ;doprnt.c: 1420: } else
 10325                           
 10326                           
 10327                           ;doprnt.c: 1422: {
 10328                           ;doprnt.c: 1424: if(width
 10329                           ;doprnt.c: 1428: )
 10330  0773  0850               	movf	sprintf@width,w
 10331  0774  0451               	iorwf	sprintf@width+1,w
 10332  0775  1903               	btfsc	3,2
 10333  0776  2F89               	goto	l6271
 10334  0777                     l6265:	
 10335                           ;doprnt.c: 1429: do
 10336                           
 10337                           
 10338                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 10339  0777  0834               	movf	sprintf@sp,w
 10340  0778  0086               	movwf	6
 10341  0779  0835               	movf	sprintf@sp+1,w
 10342  077A  0087               	movwf	7
 10343  077B  3020               	movlw	32
 10344  077C  0081               	movwf	1
 10345  077D  3001               	movlw	1
 10346  077E  07B4               	addwf	sprintf@sp,f
 10347  077F  3000               	movlw	0
 10348  0780  3DB5               	addwfc	sprintf@sp+1,f
 10349                           
 10350                           ;doprnt.c: 1431: while(--width);
 10351  0781  30FF               	movlw	255
 10352  0782  07D0               	addwf	sprintf@width,f
 10353  0783  30FF               	movlw	255
 10354  0784  3DD1               	addwfc	sprintf@width+1,f
 10355  0785  0850               	movf	sprintf@width,w
 10356  0786  0451               	iorwf	sprintf@width+1,w
 10357  0787  1D03               	btfss	3,2
 10358  0788  2F77               	goto	l6265
 10359  0789                     l6271:	
 10360                           
 10361                           ;doprnt.c: 1438: if(flag & 0x03)
 10362  0789  084F               	movf	sprintf@flag,w
 10363  078A  3903               	andlw	3
 10364  078B  1903               	btfsc	3,2
 10365  078C  2F97               	goto	l6277
 10366                           
 10367                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10368  078D  0834               	movf	sprintf@sp,w
 10369  078E  0086               	movwf	6
 10370  078F  0835               	movf	sprintf@sp+1,w
 10371  0790  0087               	movwf	7
 10372  0791  302D               	movlw	45
 10373  0792  0081               	movwf	1
 10374  0793  3001               	movlw	1
 10375  0794  07B4               	addwf	sprintf@sp,f
 10376  0795  3000               	movlw	0
 10377  0796  3DB5               	addwfc	sprintf@sp+1,f
 10378  0797                     l6277:	
 10379                           
 10380                           ;doprnt.c: 1469: }
 10381                           ;doprnt.c: 1472: prec = c;
 10382  0797  0852               	movf	sprintf@c,w
 10383  0798  00C4               	movwf	??_sprintf
 10384  0799  0844               	movf	??_sprintf,w
 10385  079A  00CA               	movwf	sprintf@prec
 10386  079B                     l6285:	
 10387                           ;doprnt.c: 1474: while(prec--) {
 10388                           
 10389  079B  30FF               	movlw	255
 10390  079C  00C4               	movwf	??_sprintf
 10391  079D  0844               	movf	??_sprintf,w
 10392  079E  07CA               	addwf	sprintf@prec,f
 10393  079F  0A4A               	incf	sprintf@prec,w
 10394  07A0  1903               	btfsc	3,2
 10395  07A1  2E17               	goto	l6287
 10396                           
 10397                           ;doprnt.c: 1478: {
 10398                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10399  07A2  300A               	movlw	10
 10400  07A3  00AE               	movwf	___lwmod@divisor
 10401  07A4  3000               	movlw	0
 10402  07A5  00AF               	movwf	___lwmod@divisor+1
 10403  07A6  084A               	movf	sprintf@prec,w
 10404  07A7  00C4               	movwf	??_sprintf
 10405  07A8  01C5               	clrf	??_sprintf+1
 10406  07A9  35C4               	lslf	??_sprintf,f
 10407  07AA  0DC5               	rlf	??_sprintf+1,f
 10408  07AB  3061               	movlw	low (_dpowers| (0+32768))
 10409  07AC  0744               	addwf	??_sprintf,w
 10410  07AD  0084               	movwf	4
 10411  07AE  3098               	movlw	high (_dpowers| (0+32768))
 10412  07AF  3D45               	addwfc	??_sprintf+1,w
 10413  07B0  0085               	movwf	5
 10414  07B1  3F00               	moviw [0]fsr0
 10415  07B2  00A6               	movwf	___lwdiv@divisor
 10416  07B3  3F01               	moviw [1]fsr0
 10417  07B4  00A7               	movwf	___lwdiv@divisor+1
 10418  07B5  084E               	movf	sprintf@val+1,w
 10419  07B6  00A9               	movwf	___lwdiv@dividend+1
 10420  07B7  084D               	movf	sprintf@val,w
 10421  07B8  00A8               	movwf	___lwdiv@dividend
 10422  07B9  3195  2537  3186   	fcall	___lwdiv
 10423  07BC  0020               	movlb	0	; select bank0
 10424  07BD  0827               	movf	?___lwdiv+1,w
 10425  07BE  00B1               	movwf	___lwmod@dividend+1
 10426  07BF  0826               	movf	?___lwdiv,w
 10427  07C0  00B0               	movwf	___lwmod@dividend
 10428  07C1  3194  2417  3186   	fcall	___lwmod
 10429  07C4  0020               	movlb	0	; select bank0
 10430  07C5  082E               	movf	?___lwmod,w
 10431  07C6  3E30               	addlw	48
 10432  07C7  00C6               	movwf	??_sprintf+2
 10433  07C8  0846               	movf	??_sprintf+2,w
 10434  07C9  00D2               	movwf	sprintf@c
 10435                           
 10436                           ;doprnt.c: 1523: }
 10437                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10438  07CA  0834               	movf	sprintf@sp,w
 10439  07CB  0086               	movwf	6
 10440  07CC  0835               	movf	sprintf@sp+1,w
 10441  07CD  0087               	movwf	7
 10442  07CE  0852               	movf	sprintf@c,w
 10443  07CF  0081               	movwf	1
 10444  07D0  3001               	movlw	1
 10445  07D1  07B4               	addwf	sprintf@sp,f
 10446  07D2  3000               	movlw	0
 10447  07D3  3DB5               	addwfc	sprintf@sp+1,f
 10448  07D4  2F9B               	goto	l6285
 10449  07D5                     l6289:	
 10450                           ;doprnt.c: 1525: }
 10451                           ;doprnt.c: 1533: }
 10452                           ;doprnt.c: 1535: alldone:
 10453                           
 10454                           
 10455                           ;doprnt.c: 1538: *sp = 0;
 10456  07D5  0020               	movlb	0	; select bank0
 10457  07D6  0834               	movf	sprintf@sp,w
 10458  07D7  0086               	movwf	6
 10459  07D8  0835               	movf	sprintf@sp+1,w
 10460  07D9  0087               	movwf	7
 10461  07DA  0181               	clrf	1
 10462  07DB  0008               	return
 10463  07DC                     __end_of_sprintf:	
 10464                           ;doprnt.c: 1540: return 0;
 10465                           ;	Return value of _sprintf is never used
 10466                           
 10467                           
 10468                           	psect	text12
 10469  111D                     __ptext12:	
 10470 ;; *************** function _isdigit *****************
 10471 ;; Defined at:
 10472 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;  c               1    wreg     unsigned char 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;  c               1    1[BANK0 ] unsigned char 
 10477 ;; Return value:  Size  Location     Type
 10478 ;;		None               void
 10479 ;; Registers used:
 10480 ;;		wreg, status,2, status,0
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10490 ;;Total ram usage:        2 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:    6
 10493 ;; This function calls:
 10494 ;;		Nothing
 10495 ;; This function is called by:
 10496 ;;		_sprintf
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499                           
 10500                           
 10501                           ;psect for function _isdigit
 10502  111D                     _isdigit:	
 10503                           
 10504                           ;incstack = 0
 10505                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10506                           ;isdigit@c stored from wreg
 10507  111D  0020               	movlb	0	; select bank0
 10508  111E  00A1               	movwf	isdigit@c
 10509  111F  01A0               	clrf	_isdigit$2049
 10510  1120  303A               	movlw	58
 10511  1121  0221               	subwf	isdigit@c,w
 10512  1122  1803               	skipnc
 10513  1123  292A               	goto	l5945
 10514  1124  3030               	movlw	48
 10515  1125  0221               	subwf	isdigit@c,w
 10516  1126  1C03               	skipc
 10517  1127  292A               	goto	l5945
 10518  1128  01A0               	clrf	_isdigit$2049
 10519  1129  0AA0               	incf	_isdigit$2049,f
 10520  112A                     l5945:	
 10521  112A  0C20               	rrf	_isdigit$2049,w
 10522  112B  0008               	return
 10523  112C                     __end_of_isdigit:	
 10524                           
 10525                           	psect	text13
 10526  1537                     __ptext13:	
 10527 ;; *************** function ___lwdiv *****************
 10528 ;; Defined at:
 10529 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;  divisor         2    6[BANK0 ] unsigned int 
 10532 ;;  dividend        2    8[BANK0 ] unsigned int 
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;  quotient        2   12[BANK0 ] unsigned int 
 10535 ;;  counter         1   11[BANK0 ] unsigned char 
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  2    6[BANK0 ] unsigned int 
 10538 ;; Registers used:
 10539 ;;		wreg, status,2, status,0
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10546 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10547 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10548 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;Total ram usage:        8 bytes
 10550 ;; Hardware stack levels used:    1
 10551 ;; Hardware stack levels required when called:    6
 10552 ;; This function calls:
 10553 ;;		Nothing
 10554 ;; This function is called by:
 10555 ;;		_sprintf
 10556 ;;		_months_to_days
 10557 ;;		_years_to_days
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           
 10562                           ;psect for function ___lwdiv
 10563  1537                     ___lwdiv:	
 10564                           
 10565                           ;incstack = 0
 10566                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10567  1537  0020               	movlb	0	; select bank0
 10568  1538  01AC               	clrf	___lwdiv@quotient
 10569  1539  01AD               	clrf	___lwdiv@quotient+1
 10570  153A  0826               	movf	___lwdiv@divisor,w
 10571  153B  0427               	iorwf	___lwdiv@divisor+1,w
 10572  153C  1903               	btfsc	3,2
 10573  153D  2D67               	goto	l5775
 10574  153E  01AB               	clrf	___lwdiv@counter
 10575  153F  0AAB               	incf	___lwdiv@counter,f
 10576  1540                     l5763:	
 10577  1540  1BA7               	btfsc	___lwdiv@divisor+1,7
 10578  1541  2D4C               	goto	l5765
 10579  1542  3001               	movlw	1
 10580  1543                     u4245:	
 10581  1543  35A6               	lslf	___lwdiv@divisor,f
 10582  1544  0DA7               	rlf	___lwdiv@divisor+1,f
 10583  1545  0B89               	decfsz	9,f
 10584  1546  2D43               	goto	u4245
 10585  1547  3001               	movlw	1
 10586  1548  00AA               	movwf	??___lwdiv
 10587  1549  082A               	movf	??___lwdiv,w
 10588  154A  07AB               	addwf	___lwdiv@counter,f
 10589  154B  2D40               	goto	l5763
 10590  154C                     l5765:	
 10591  154C  3001               	movlw	1
 10592  154D                     u4265:	
 10593  154D  35AC               	lslf	___lwdiv@quotient,f
 10594  154E  0DAD               	rlf	___lwdiv@quotient+1,f
 10595  154F  0B89               	decfsz	9,f
 10596  1550  2D4D               	goto	u4265
 10597  1551  0827               	movf	___lwdiv@divisor+1,w
 10598  1552  0229               	subwf	___lwdiv@dividend+1,w
 10599  1553  1D03               	skipz
 10600  1554  2D57               	goto	u4275
 10601  1555  0826               	movf	___lwdiv@divisor,w
 10602  1556  0228               	subwf	___lwdiv@dividend,w
 10603  1557                     u4275:	
 10604  1557  1C03               	skipc
 10605  1558  2D5E               	goto	l5771
 10606  1559  0826               	movf	___lwdiv@divisor,w
 10607  155A  02A8               	subwf	___lwdiv@dividend,f
 10608  155B  0827               	movf	___lwdiv@divisor+1,w
 10609  155C  3BA9               	subwfb	___lwdiv@dividend+1,f
 10610  155D  142C               	bsf	___lwdiv@quotient,0
 10611  155E                     l5771:	
 10612  155E  3001               	movlw	1
 10613  155F                     u4285:	
 10614  155F  36A7               	lsrf	___lwdiv@divisor+1,f
 10615  1560  0CA6               	rrf	___lwdiv@divisor,f
 10616  1561  0B89               	decfsz	9,f
 10617  1562  2D5F               	goto	u4285
 10618  1563  3001               	movlw	1
 10619  1564  02AB               	subwf	___lwdiv@counter,f
 10620  1565  1D03               	btfss	3,2
 10621  1566  2D4C               	goto	l5765
 10622  1567                     l5775:	
 10623  1567  082D               	movf	___lwdiv@quotient+1,w
 10624  1568  00A7               	movwf	?___lwdiv+1
 10625  1569  082C               	movf	___lwdiv@quotient,w
 10626  156A  00A6               	movwf	?___lwdiv
 10627  156B  0008               	return
 10628  156C                     __end_of___lwdiv:	
 10629                           
 10630                           	psect	text14
 10631  15DC                     __ptext14:	
 10632 ;; *************** function _OLED_PutPicture *****************
 10633 ;; Defined at:
 10634 ;;		line 76 in file "oled.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;  pic             2    4[BANK0 ] PTR const unsigned char 
 10637 ;;		 -> emptyArray(475), displayArray(475), 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;  i               2    8[BANK0 ] unsigned int 
 10640 ;;  j               2    6[BANK0 ] unsigned int 
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  1    wreg      void 
 10643 ;; Registers used:
 10644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10650 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;Total ram usage:        6 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; Hardware stack levels required when called:    9
 10657 ;; This function calls:
 10658 ;;		_OLED_Data
 10659 ;;		_OLED_SetColumn
 10660 ;;		_OLED_SetRow
 10661 ;; This function is called by:
 10662 ;;		_Write_String
 10663 ;;		_OLED_Clear
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           
 10668                           ;psect for function _OLED_PutPicture
 10669  15DC                     _OLED_PutPicture:	
 10670                           
 10671                           ;oled.c: 80: unsigned int i,j;
 10672                           ;oled.c: 81: for( i=0; i<5; i++)
 10673                           
 10674                           ;incstack = 0
 10675                           ; Regs used in _OLED_PutPicture: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10676  15DC  0020               	movlb	0	; select bank0
 10677  15DD  01A8               	clrf	OLED_PutPicture@i
 10678  15DE  01A9               	clrf	OLED_PutPicture@i+1
 10679  15DF                     L4:	
 10680  15DF  3000               	movlw	0
 10681  15E0  0229               	subwf	OLED_PutPicture@i+1,w
 10682  15E1  3005               	movlw	5
 10683  15E2  1903               	skipnz
 10684  15E3  0228               	subwf	OLED_PutPicture@i,w
 10685  15E4  1803               	btfsc	3,0
 10686  15E5  0008               	return
 10687                           
 10688                           ;oled.c: 82: {
 10689                           ;oled.c: 83: OLED_SetRow( i);
 10690  15E6  0828               	movf	OLED_PutPicture@i,w
 10691  15E7  3190  209E  3195   	fcall	_OLED_SetRow
 10692                           
 10693                           ;oled.c: 84: OLED_SetColumn( 0);
 10694  15EA  3000               	movlw	0
 10695  15EB  3192  2202  3195   	fcall	_OLED_SetColumn
 10696                           
 10697                           ;oled.c: 85: for( j=0; j<96; j++)
 10698  15EE  0020               	movlb	0	; select bank0
 10699  15EF  01A6               	clrf	OLED_PutPicture@j
 10700  15F0  01A7               	clrf	OLED_PutPicture@j+1
 10701  15F1  3000               	movlw	0
 10702  15F2  0227               	subwf	OLED_PutPicture@j+1,w
 10703  15F3  3060               	movlw	96
 10704  15F4  1903               	skipnz
 10705  15F5  0226               	subwf	OLED_PutPicture@j,w
 10706  15F6  1803               	btfsc	3,0
 10707  15F7  2E10               	goto	l6315
 10708  15F8                     l6307:	
 10709                           
 10710                           ;oled.c: 86: {
 10711                           ;oled.c: 87: OLED_Data( *pic++);
 10712  15F8  0824               	movf	OLED_PutPicture@pic,w
 10713  15F9  0084               	movwf	4
 10714  15FA  0825               	movf	OLED_PutPicture@pic+1,w
 10715  15FB  0085               	movwf	5
 10716  15FC  0800               	movf	0,w	;code access
 10717  15FD  3190  2068  3195   	fcall	_OLED_Data
 10718  1600  3001               	movlw	1
 10719  1601  0020               	movlb	0	; select bank0
 10720  1602  07A4               	addwf	OLED_PutPicture@pic,f
 10721  1603  3000               	movlw	0
 10722  1604  3DA5               	addwfc	OLED_PutPicture@pic+1,f
 10723  1605  3001               	movlw	1
 10724  1606  07A6               	addwf	OLED_PutPicture@j,f
 10725  1607  3000               	movlw	0
 10726  1608  3DA7               	addwfc	OLED_PutPicture@j+1,f
 10727  1609  3000               	movlw	0
 10728  160A  0227               	subwf	OLED_PutPicture@j+1,w
 10729  160B  3060               	movlw	96
 10730  160C  1903               	skipnz
 10731  160D  0226               	subwf	OLED_PutPicture@j,w
 10732  160E  1C03               	skipc
 10733  160F  2DF8               	goto	l6307
 10734  1610                     l6315:	
 10735  1610  3001               	movlw	1
 10736  1611  07A8               	addwf	OLED_PutPicture@i,f
 10737  1612  3000               	movlw	0
 10738  1613  3DA9               	addwfc	OLED_PutPicture@i+1,f
 10739  1614  2DDF               	goto	L4
 10740  1615                     __end_of_OLED_PutPicture:	
 10741                           
 10742                           	psect	text15
 10743  109E                     __ptext15:	
 10744 ;; *************** function _OLED_SetRow *****************
 10745 ;; Defined at:
 10746 ;;		line 59 in file "oled.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  address         1    wreg     unsigned char 
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;  address         1    3[BANK0 ] unsigned char 
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      void 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0, pclath, cstack
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10762 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;Total ram usage:        2 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    8
 10767 ;; This function calls:
 10768 ;;		_OLED_Command
 10769 ;; This function is called by:
 10770 ;;		_OLED_PutPicture
 10771 ;;		_OLED_Clear
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           
 10776                           ;psect for function _OLED_SetRow
 10777  109E                     _OLED_SetRow:	
 10778                           
 10779                           ;incstack = 0
 10780                           ; Regs used in _OLED_SetRow: [wreg+status,2+status,0+pclath+cstack]
 10781                           ;OLED_SetRow@address stored from wreg
 10782  109E  0020               	movlb	0	; select bank0
 10783  109F  00A3               	movwf	OLED_SetRow@address
 10784                           
 10785                           ;oled.c: 63: address = (uint8_t)(0xB0 | address);
 10786  10A0  0823               	movf	OLED_SetRow@address,w
 10787  10A1  38B0               	iorlw	176
 10788  10A2  00A2               	movwf	??_OLED_SetRow
 10789  10A3  0822               	movf	??_OLED_SetRow,w
 10790  10A4  00A3               	movwf	OLED_SetRow@address
 10791                           
 10792                           ;oled.c: 64: OLED_Command( address);
 10793  10A5  0823               	movf	OLED_SetRow@address,w
 10794  10A6  3190  2040         	fcall	_OLED_Command
 10795  10A8  0008               	return
 10796  10A9                     __end_of_OLED_SetRow:	
 10797                           
 10798                           	psect	text16
 10799  1202                     __ptext16:	
 10800 ;; *************** function _OLED_SetColumn *****************
 10801 ;; Defined at:
 10802 ;;		line 67 in file "oled.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;  address         1    wreg     unsigned char 
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;  address         1    3[BANK0 ] unsigned char 
 10807 ;; Return value:  Size  Location     Type
 10808 ;;                  1    wreg      void 
 10809 ;; Registers used:
 10810 ;;		wreg, status,2, status,0, pclath, cstack
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/0
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;Total ram usage:        2 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; Hardware stack levels required when called:    8
 10823 ;; This function calls:
 10824 ;;		_OLED_Command
 10825 ;; This function is called by:
 10826 ;;		_OLED_PutPicture
 10827 ;;		_OLED_Clear
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831                           
 10832                           ;psect for function _OLED_SetColumn
 10833  1202                     _OLED_SetColumn:	
 10834                           
 10835                           ;incstack = 0
 10836                           ; Regs used in _OLED_SetColumn: [wreg+status,2+status,0+pclath+cstack]
 10837                           ;OLED_SetColumn@address stored from wreg
 10838  1202  0020               	movlb	0	; select bank0
 10839  1203  00A3               	movwf	OLED_SetColumn@address
 10840                           
 10841                           ;oled.c: 71: address += 32;
 10842  1204  3020               	movlw	32
 10843  1205  00A2               	movwf	??_OLED_SetColumn
 10844  1206  0822               	movf	??_OLED_SetColumn,w
 10845  1207  07A3               	addwf	OLED_SetColumn@address,f
 10846                           
 10847                           ;oled.c: 72: OLED_Command(( 0x10 | (address >> 4)));
 10848  1208  0823               	movf	OLED_SetColumn@address,w
 10849  1209  00A2               	movwf	??_OLED_SetColumn
 10850  120A  3004               	movlw	4
 10851  120B                     u4485:	
 10852  120B  36A2               	lsrf	??_OLED_SetColumn,f
 10853  120C  0B89               	decfsz	9,f
 10854  120D  2A0B               	goto	u4485
 10855  120E  0822               	movf	??_OLED_SetColumn,w
 10856  120F  3810               	iorlw	16
 10857  1210  3190  2040  3192   	fcall	_OLED_Command
 10858                           
 10859                           ;oled.c: 73: OLED_Command(( 0x0f & address));
 10860  1213  0020               	movlb	0	; select bank0
 10861  1214  0823               	movf	OLED_SetColumn@address,w
 10862  1215  390F               	andlw	15
 10863  1216  3190  2040         	fcall	_OLED_Command
 10864  1218  0008               	return
 10865  1219                     __end_of_OLED_SetColumn:	
 10866                           
 10867                           	psect	text17
 10868  1068                     __ptext17:	
 10869 ;; *************** function _OLED_Data *****************
 10870 ;; Defined at:
 10871 ;;		line 14 in file "oled.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;  temp            1    wreg     unsigned char 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;  temp            1    1[BANK0 ] unsigned char 
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1    wreg      void 
 10878 ;; Registers used:
 10879 ;;		wreg, status,2, status,0, pclath, cstack
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;Total ram usage:        1 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:    7
 10892 ;; This function calls:
 10893 ;;		_SPI2_Exchange8bit
 10894 ;; This function is called by:
 10895 ;;		_OLED_PutPicture
 10896 ;;		_OLED_Clear
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900                           
 10901                           ;psect for function _OLED_Data
 10902  1068                     _OLED_Data:	
 10903                           
 10904                           ;incstack = 0
 10905                           ; Regs used in _OLED_Data: [wreg+status,2+status,0+pclath+cstack]
 10906                           ;OLED_Data@temp stored from wreg
 10907  1068  0020               	movlb	0	; select bank0
 10908  1069  00A1               	movwf	OLED_Data@temp
 10909                           
 10910                           ;oled.c: 18: LATAbits.LATA3 = 0;
 10911  106A  1196               	bcf	22,3	;volatile
 10912                           
 10913                           ;oled.c: 19: LATCbits.LATC2 = 1;
 10914  106B  1518               	bsf	24,2	;volatile
 10915                           
 10916                           ;oled.c: 20: SPI2_Exchange8bit( temp);
 10917  106C  0821               	movf	OLED_Data@temp,w
 10918  106D  3190  20A9         	fcall	_SPI2_Exchange8bit
 10919                           
 10920                           ;oled.c: 21: LATAbits.LATA3 = 1;
 10921  106F  0020               	movlb	0	; select bank0
 10922  1070  1596               	bsf	22,3	;volatile
 10923  1071  0008               	return
 10924  1072                     __end_of_OLED_Data:	
 10925                           
 10926                           	psect	text18
 10927  0AA4                     __ptext18:	
 10928 ;; *************** function _Modify_Data *****************
 10929 ;; Defined at:
 10930 ;;		line 115 in file "oled.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;  c               2    6[BANK0 ] PTR unsigned char 
 10933 ;;		 -> CharacterArray(100), 
 10934 ;;  offset          2    8[BANK0 ] unsigned int 
 10935 ;;  limit           2   10[BANK0 ] unsigned int 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  right           2   21[BANK0 ] int 
 10938 ;;  p               2   23[BANK0 ] int 
 10939 ;;  j               2   25[BANK0 ] unsigned int 
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      void 
 10942 ;; Registers used:
 10943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10949 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10952 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10953 ;;Total ram usage:       21 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:    7
 10956 ;; This function calls:
 10957 ;;		___wmul
 10958 ;; This function is called by:
 10959 ;;		_Write_String
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           
 10964                           ;psect for function _Modify_Data
 10965  0AA4                     _Modify_Data:	
 10966                           
 10967                           ;oled.c: 119: unsigned int j;
 10968                           ;oled.c: 120: for(int p=0;p<=limit;p++)
 10969                           
 10970                           ;incstack = 0
 10971                           ; Regs used in _Modify_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10972  0AA4  0020               	movlb	0	; select bank0
 10973  0AA5  01B7               	clrf	Modify_Data@p
 10974  0AA6  01B8               	clrf	Modify_Data@p+1
 10975  0AA7                     l834:	
 10976  0AA7  0838               	movf	Modify_Data@p+1,w
 10977  0AA8  022B               	subwf	Modify_Data@limit+1,w
 10978  0AA9  1D03               	skipz
 10979  0AAA  2AAD               	goto	u4885
 10980  0AAB  0837               	movf	Modify_Data@p,w
 10981  0AAC  022A               	subwf	Modify_Data@limit,w
 10982  0AAD                     u4885:	
 10983  0AAD  1C03               	btfss	3,0
 10984  0AAE  0008               	return
 10985                           
 10986                           ;oled.c: 121: {
 10987                           ;oled.c: 122: for(j=0;j<5;j++)
 10988  0AAF  01B9               	clrf	Modify_Data@j
 10989  0AB0  01BA               	clrf	Modify_Data@j+1
 10990  0AB1  3000               	movlw	0
 10991  0AB2  023A               	subwf	Modify_Data@j+1,w
 10992  0AB3  3005               	movlw	5
 10993  0AB4  1903               	skipnz
 10994  0AB5  0239               	subwf	Modify_Data@j,w
 10995  0AB6  1803               	btfsc	3,0
 10996  0AB7  2B10               	goto	l6343
 10997  0AB8                     l6335:	
 10998                           
 10999                           ;oled.c: 123: {
 11000                           ;oled.c: 124: int right;
 11001                           ;oled.c: 125: right=(j+((int)(c[p])-0x20)*5);
 11002  0AB8  0837               	movf	Modify_Data@p,w
 11003  0AB9  0726               	addwf	Modify_Data@c,w
 11004  0ABA  0086               	movwf	6
 11005  0ABB  0838               	movf	Modify_Data@p+1,w
 11006  0ABC  3D27               	addwfc	Modify_Data@c+1,w
 11007  0ABD  0087               	movwf	7
 11008  0ABE  0801               	movf	1,w
 11009  0ABF  3EE0               	addlw	224
 11010  0AC0  00A0               	movwf	___wmul@multiplier
 11011  0AC1  30FF               	movlw	255
 11012  0AC2  1803               	skipnc
 11013  0AC3  3000               	movlw	0
 11014  0AC4  00A1               	movwf	___wmul@multiplier+1
 11015  0AC5  3005               	movlw	5
 11016  0AC6  00A2               	movwf	___wmul@multiplicand
 11017  0AC7  3000               	movlw	0
 11018  0AC8  00A3               	movwf	___wmul@multiplicand+1
 11019  0AC9  3192  2267  318A   	fcall	___wmul
 11020  0ACC  0020               	movlb	0	; select bank0
 11021  0ACD  0839               	movf	Modify_Data@j,w
 11022  0ACE  0720               	addwf	?___wmul,w
 11023  0ACF  00B5               	movwf	Modify_Data@right
 11024  0AD0  083A               	movf	Modify_Data@j+1,w
 11025  0AD1  3D21               	addwfc	?___wmul+1,w
 11026  0AD2  00B6               	movwf	Modify_Data@right+1
 11027                           
 11028                           ;oled.c: 126: displayArray[offset+j+(p*5)]=lookup[right];
 11029  0AD3  0836               	movf	Modify_Data@right+1,w
 11030  0AD4  0085               	movwf	5
 11031  0AD5  0835               	movf	Modify_Data@right,w
 11032  0AD6  0084               	movwf	4
 11033  0AD7  3037               	movlw	low (_lookup| (0+32768))
 11034  0AD8  0784               	addwf	4,f
 11035  0AD9  3084               	movlw	high (_lookup| (0+32768))
 11036  0ADA  3D85               	addwfc	5,f
 11037  0ADB  0800               	movf	0,w	;code access
 11038  0ADC  00AC               	movwf	??_Modify_Data
 11039  0ADD  0838               	movf	Modify_Data@p+1,w
 11040  0ADE  00A1               	movwf	___wmul@multiplier+1
 11041  0ADF  0837               	movf	Modify_Data@p,w
 11042  0AE0  00A0               	movwf	___wmul@multiplier
 11043  0AE1  3005               	movlw	5
 11044  0AE2  00A2               	movwf	___wmul@multiplicand
 11045  0AE3  3000               	movlw	0
 11046  0AE4  00A3               	movwf	___wmul@multiplicand+1
 11047  0AE5  3192  2267  318A   	fcall	___wmul
 11048  0AE8  0020               	movlb	0	; select bank0
 11049  0AE9  0828               	movf	Modify_Data@offset,w
 11050  0AEA  0720               	addwf	?___wmul,w
 11051  0AEB  00AD               	movwf	??_Modify_Data+1
 11052  0AEC  0829               	movf	Modify_Data@offset+1,w
 11053  0AED  3D21               	addwfc	?___wmul+1,w
 11054  0AEE  00AE               	movwf	??_Modify_Data+2
 11055  0AEF  0839               	movf	Modify_Data@j,w
 11056  0AF0  072D               	addwf	??_Modify_Data+1,w
 11057  0AF1  00AF               	movwf	??_Modify_Data+3
 11058  0AF2  083A               	movf	Modify_Data@j+1,w
 11059  0AF3  3D2E               	addwfc	??_Modify_Data+2,w
 11060  0AF4  00B0               	movwf	??_Modify_Data+4
 11061  0AF5  30B1               	movlw	177
 11062  0AF6  00B1               	movwf	??_Modify_Data+5
 11063  0AF7  3021               	movlw	33
 11064  0AF8  00B2               	movwf	??_Modify_Data+6
 11065  0AF9  082F               	movf	??_Modify_Data+3,w
 11066  0AFA  0731               	addwf	??_Modify_Data+5,w
 11067  0AFB  00B3               	movwf	??_Modify_Data+7
 11068  0AFC  0830               	movf	??_Modify_Data+4,w
 11069  0AFD  3D32               	addwfc	??_Modify_Data+6,w
 11070  0AFE  00B4               	movwf	??_Modify_Data+8
 11071  0AFF  0833               	movf	??_Modify_Data+7,w
 11072  0B00  0086               	movwf	6
 11073  0B01  0834               	movf	??_Modify_Data+8,w
 11074  0B02  0087               	movwf	7
 11075  0B03  082C               	movf	??_Modify_Data,w
 11076  0B04  0081               	movwf	1
 11077  0B05  3001               	movlw	1
 11078  0B06  07B9               	addwf	Modify_Data@j,f
 11079  0B07  3000               	movlw	0
 11080  0B08  3DBA               	addwfc	Modify_Data@j+1,f
 11081  0B09  3000               	movlw	0
 11082  0B0A  023A               	subwf	Modify_Data@j+1,w
 11083  0B0B  3005               	movlw	5
 11084  0B0C  1903               	skipnz
 11085  0B0D  0239               	subwf	Modify_Data@j,w
 11086  0B0E  1C03               	skipc
 11087  0B0F  2AB8               	goto	l6335
 11088  0B10                     l6343:	
 11089  0B10  3001               	movlw	1
 11090  0B11  07B7               	addwf	Modify_Data@p,f
 11091  0B12  3000               	movlw	0
 11092  0B13  3DB8               	addwfc	Modify_Data@p+1,f
 11093  0B14  2AA7               	goto	l834
 11094  0B15                     __end_of_Modify_Data:	
 11095                           
 11096                           	psect	text19
 11097  1267                     __ptext19:	
 11098 ;; *************** function ___wmul *****************
 11099 ;; Defined at:
 11100 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11103 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;  product         2    4[BANK0 ] unsigned int 
 11106 ;; Return value:  Size  Location     Type
 11107 ;;                  2    0[BANK0 ] unsigned int 
 11108 ;; Registers used:
 11109 ;;		wreg, status,2, status,0
 11110 ;; Tracked objects:
 11111 ;;		On entry : 0/0
 11112 ;;		On exit  : 0/0
 11113 ;;		Unchanged: 0/0
 11114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11118 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11119 ;;Total ram usage:        6 bytes
 11120 ;; Hardware stack levels used:    1
 11121 ;; Hardware stack levels required when called:    6
 11122 ;; This function calls:
 11123 ;;		Nothing
 11124 ;; This function is called by:
 11125 ;;		_Modify_Data
 11126 ;;		_sprintf
 11127 ;;		_months_to_days
 11128 ;;		_asctime
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           
 11132                           
 11133                           ;psect for function ___wmul
 11134  1267                     ___wmul:	
 11135                           
 11136                           ;incstack = 0
 11137                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11138  1267  0020               	movlb	0	; select bank0
 11139  1268  01A4               	clrf	___wmul@product
 11140  1269  01A5               	clrf	___wmul@product+1
 11141  126A                     l5603:	
 11142  126A  1C20               	btfss	___wmul@multiplier,0
 11143  126B  2A70               	goto	l981
 11144  126C  0822               	movf	___wmul@multiplicand,w
 11145  126D  07A4               	addwf	___wmul@product,f
 11146  126E  0823               	movf	___wmul@multiplicand+1,w
 11147  126F  3DA5               	addwfc	___wmul@product+1,f
 11148  1270                     l981:	
 11149  1270  3001               	movlw	1
 11150  1271                     u3855:	
 11151  1271  35A2               	lslf	___wmul@multiplicand,f
 11152  1272  0DA3               	rlf	___wmul@multiplicand+1,f
 11153  1273  0B89               	decfsz	9,f
 11154  1274  2A71               	goto	u3855
 11155  1275  3001               	movlw	1
 11156  1276                     u3865:	
 11157  1276  36A1               	lsrf	___wmul@multiplier+1,f
 11158  1277  0CA0               	rrf	___wmul@multiplier,f
 11159  1278  0B89               	decfsz	9,f
 11160  1279  2A76               	goto	u3865
 11161  127A  0820               	movf	___wmul@multiplier,w
 11162  127B  0421               	iorwf	___wmul@multiplier+1,w
 11163  127C  1D03               	btfss	3,2
 11164  127D  2A6A               	goto	l5603
 11165  127E  0825               	movf	___wmul@product+1,w
 11166  127F  00A1               	movwf	?___wmul+1
 11167  1280  0824               	movf	___wmul@product,w
 11168  1281  00A0               	movwf	?___wmul
 11169  1282  0008               	return
 11170  1283                     __end_of___wmul:	
 11171                           
 11172                           	psect	text20
 11173  13BF                     __ptext20:	
 11174 ;; *************** function _SetupClock *****************
 11175 ;; Defined at:
 11176 ;;		line 29 in file "main.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;		None
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;  initialTime    18   57[BANK0 ] struct tm
 11181 ;;  setTime         4   53[BANK0 ] volatile long 
 11182 ;; Return value:  Size  Location     Type
 11183 ;;                  1    wreg      void 
 11184 ;; Registers used:
 11185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11192 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;Total ram usage:       23 bytes
 11196 ;; Hardware stack levels used:    1
 11197 ;; Hardware stack levels required when called:   18
 11198 ;; This function calls:
 11199 ;;		_rtc6_SetTime
 11200 ;; This function is called by:
 11201 ;;		_main
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205                           
 11206                           ;psect for function _SetupClock
 11207  13BF                     _SetupClock:	
 11208                           
 11209                           ;main.c: 30: volatile time_t setTime;
 11210                           ;main.c: 31: struct tm initialTime;
 11211                           ;main.c: 32: initialTime.tm_hour = 22;
 11212                           
 11213                           ;incstack = 0
 11214 ;; hardware stack exceeded
 11215                           ; Regs used in _SetupClock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11216  13BF  3016               	movlw	22
 11217  13C0  0020               	movlb	0	; select bank0
 11218  13C1  00DD               	movwf	SetupClock@initialTime+4
 11219  13C2  3000               	movlw	0
 11220  13C3  00DE               	movwf	SetupClock@initialTime+5
 11221                           
 11222                           ;main.c: 33: initialTime.tm_min = 53;
 11223  13C4  3035               	movlw	53
 11224  13C5  00DB               	movwf	SetupClock@initialTime+2
 11225  13C6  3000               	movlw	0
 11226  13C7  00DC               	movwf	SetupClock@initialTime+3
 11227                           
 11228                           ;main.c: 34: initialTime.tm_sec = 0;
 11229  13C8  01D9               	clrf	SetupClock@initialTime
 11230  13C9  01DA               	clrf	SetupClock@initialTime+1
 11231                           
 11232                           ;main.c: 35: initialTime.tm_year = 99;
 11233  13CA  3063               	movlw	99
 11234  13CB  00E3               	movwf	SetupClock@initialTime+10
 11235  13CC  3000               	movlw	0
 11236  13CD  00E4               	movwf	SetupClock@initialTime+11
 11237                           
 11238                           ;main.c: 36: initialTime.tm_mon = 8;
 11239  13CE  3008               	movlw	8
 11240  13CF  00E1               	movwf	SetupClock@initialTime+8
 11241  13D0  3000               	movlw	0
 11242  13D1  00E2               	movwf	SetupClock@initialTime+9
 11243                           
 11244                           ;main.c: 37: initialTime.tm_mday = 28;
 11245  13D2  301C               	movlw	28
 11246  13D3  00DF               	movwf	SetupClock@initialTime+6
 11247  13D4  3000               	movlw	0
 11248  13D5  00E0               	movwf	SetupClock@initialTime+7
 11249                           
 11250                           ;main.c: 39: rtc6_SetTime(setTime);
 11251  13D6  0858               	movf	SetupClock@setTime+3,w	;volatile
 11252  13D7  00CF               	movwf	rtc6_SetTime@t+3
 11253  13D8  0857               	movf	SetupClock@setTime+2,w	;volatile
 11254  13D9  00CE               	movwf	rtc6_SetTime@t+2
 11255  13DA  0856               	movf	SetupClock@setTime+1,w	;volatile
 11256  13DB  00CD               	movwf	rtc6_SetTime@t+1
 11257  13DC  0855               	movf	SetupClock@setTime,w	;volatile
 11258  13DD  00CC               	movwf	rtc6_SetTime@t
 11259  13DE  318B  2315  3193   	fcall	_rtc6_SetTime
 11260                           
 11261                           ;main.c: 40: _delay((unsigned long)((20)*(1000000/4000.0)));
 11262  13E1  3007               	movlw	7
 11263  13E2  0020               	movlb	0	; select bank0
 11264  13E3  00D4               	movwf	??_SetupClock
 11265  13E4  307D               	movlw	125
 11266  13E5                     u6737:	
 11267  13E5  0B89               	decfsz	9,f
 11268  13E6  2BE5               	goto	u6737
 11269  13E7  0BD4               	decfsz	??_SetupClock,f
 11270  13E8  2BE5               	goto	u6737
 11271  13E9  0008               	return
 11272  13EA                     __end_of_SetupClock:	
 11273                           
 11274                           	psect	text21
 11275  0B15                     __ptext21:	
 11276 ;; *************** function _rtc6_SetTime *****************
 11277 ;; Defined at:
 11278 ;;		line 145 in file "mcc_generated_files/RTC6.c"
 11279 ;; Parameters:    Size  Location     Type
 11280 ;;  t               4   44[BANK0 ] long 
 11281 ;; Auto vars:     Size  Location     Type
 11282 ;;  tm_t            1   51[BANK0 ] PTR struct tm
 11283 ;;		 -> gmtime@tim(18), 
 11284 ;; Return value:  Size  Location     Type
 11285 ;;                  1    wreg      void 
 11286 ;; Registers used:
 11287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11288 ;; Tracked objects:
 11289 ;;		On entry : 0/0
 11290 ;;		On exit  : 0/0
 11291 ;;		Unchanged: 0/0
 11292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11294 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11296 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;Total ram usage:        8 bytes
 11298 ;; Hardware stack levels used:    1
 11299 ;; Hardware stack levels required when called:   17
 11300 ;; This function calls:
 11301 ;;		___awmod
 11302 ;;		_localtime
 11303 ;;		_memset
 11304 ;;		_rtc6_SetComponent
 11305 ;; This function is called by:
 11306 ;;		_SetupClock
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           
 11311                           ;psect for function _rtc6_SetTime
 11312  0B15                     _rtc6_SetTime:	
 11313                           
 11314                           ;RTC6.c: 147: struct tm *tm_t;
 11315                           ;RTC6.c: 148: memset(tm_t, 0, sizeof (tm_t));
 11316                           
 11317                           ;incstack = 0
 11318 ;; hardware stack exceeded
 11319                           ; Regs used in _rtc6_SetTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11320  0B15  3000               	movlw	0
 11321  0B16  0020               	movlb	0	; select bank0
 11322  0B17  00A0               	movwf	memset@c
 11323  0B18  00A1               	movwf	memset@c+1
 11324  0B19  3001               	movlw	1
 11325  0B1A  00A2               	movwf	memset@n
 11326  0B1B  3000               	movlw	0
 11327  0B1C  00A3               	movwf	memset@n+1
 11328  0B1D  0853               	movf	rtc6_SetTime@tm_t,w
 11329  0B1E  3192  224C  318B   	fcall	_memset
 11330                           
 11331                           ;RTC6.c: 150: tm_t = localtime(&t);
 11332  0B21  304C               	movlw	(low (rtc6_SetTime@t| 0))& (0+255)
 11333  0B22  3196  2696  318B   	fcall	_localtime
 11334  0B25  0020               	movlb	0	; select bank0
 11335  0B26  00D0               	movwf	??_rtc6_SetTime
 11336  0B27  0850               	movf	??_rtc6_SetTime,w
 11337  0B28  00D3               	movwf	rtc6_SetTime@tm_t
 11338                           
 11339                           ;RTC6.c: 151: rtc6_SetComponent(0x06, 0x00, tm_t->tm_year % 100);
 11340  0B29  3064               	movlw	100
 11341  0B2A  00A0               	movwf	___awmod@divisor
 11342  0B2B  3000               	movlw	0
 11343  0B2C  00A1               	movwf	___awmod@divisor+1
 11344  0B2D  0853               	movf	rtc6_SetTime@tm_t,w
 11345  0B2E  3E0A               	addlw	10
 11346  0B2F  0086               	movwf	6
 11347  0B30  0187               	clrf	7
 11348  0B31  3F40               	moviw [0]fsr1
 11349  0B32  00A2               	movwf	___awmod@dividend
 11350  0B33  3F41               	moviw [1]fsr1
 11351  0B34  00A3               	movwf	___awmod@dividend+1
 11352  0B35  3197  2721  318B   	fcall	___awmod
 11353  0B38  0020               	movlb	0	; select bank0
 11354  0B39  0820               	movf	?___awmod,w
 11355  0B3A  00D0               	movwf	??_rtc6_SetTime
 11356  0B3B  0850               	movf	??_rtc6_SetTime,w
 11357  0B3C  00D2               	movwf	_rtc6_SetTime$2639
 11358                           
 11359                           ;RTC6.c: 151: rtc6_SetComponent(0x06, 0x00, tm_t->tm_year % 100);
 11360  0B3D  01B3               	clrf	rtc6_SetComponent@mask
 11361  0B3E  0852               	movf	_rtc6_SetTime$2639,w
 11362  0B3F  00D0               	movwf	??_rtc6_SetTime
 11363  0B40  0850               	movf	??_rtc6_SetTime,w
 11364  0B41  00B4               	movwf	rtc6_SetComponent@time
 11365  0B42  3006               	movlw	6
 11366  0B43  3195  25A3  318B   	fcall	_rtc6_SetComponent
 11367                           
 11368                           ;RTC6.c: 152: rtc6_SetComponent(0x05, 0xD0, tm_t->tm_mon + 1);
 11369  0B46  30D0               	movlw	208
 11370  0B47  0020               	movlb	0	; select bank0
 11371  0B48  00D0               	movwf	??_rtc6_SetTime
 11372  0B49  0850               	movf	??_rtc6_SetTime,w
 11373  0B4A  00B3               	movwf	rtc6_SetComponent@mask
 11374  0B4B  0853               	movf	rtc6_SetTime@tm_t,w
 11375  0B4C  3E08               	addlw	8
 11376  0B4D  0086               	movwf	6
 11377  0B4E  0187               	clrf	7
 11378  0B4F  0801               	movf	1,w
 11379  0B50  3E01               	addlw	1
 11380  0B51  00D1               	movwf	??_rtc6_SetTime+1
 11381  0B52  0851               	movf	??_rtc6_SetTime+1,w
 11382  0B53  00B4               	movwf	rtc6_SetComponent@time
 11383  0B54  3005               	movlw	5
 11384  0B55  3195  25A3  318B   	fcall	_rtc6_SetComponent
 11385                           
 11386                           ;RTC6.c: 153: rtc6_SetComponent(0x04, 0x00, tm_t->tm_mday);
 11387  0B58  0020               	movlb	0	; select bank0
 11388  0B59  01B3               	clrf	rtc6_SetComponent@mask
 11389  0B5A  0853               	movf	rtc6_SetTime@tm_t,w
 11390  0B5B  0086               	movwf	6
 11391  0B5C  0187               	clrf	7
 11392  0B5D  3F46               	moviw [6]fsr1
 11393  0B5E  00B4               	movwf	rtc6_SetComponent@time
 11394  0B5F  3004               	movlw	4
 11395  0B60  3195  25A3  318B   	fcall	_rtc6_SetComponent
 11396                           
 11397                           ;RTC6.c: 154: rtc6_SetComponent(0x01, 0x00, tm_t->tm_min);
 11398  0B63  0020               	movlb	0	; select bank0
 11399  0B64  01B3               	clrf	rtc6_SetComponent@mask
 11400  0B65  0853               	movf	rtc6_SetTime@tm_t,w
 11401  0B66  0086               	movwf	6
 11402  0B67  0187               	clrf	7
 11403  0B68  3F42               	moviw [2]fsr1
 11404  0B69  00B4               	movwf	rtc6_SetComponent@time
 11405  0B6A  3001               	movlw	1
 11406  0B6B  3195  25A3  318B   	fcall	_rtc6_SetComponent
 11407                           
 11408                           ;RTC6.c: 155: rtc6_SetComponent(0x00, 0x80, tm_t->tm_sec);
 11409  0B6E  3080               	movlw	128
 11410  0B6F  0020               	movlb	0	; select bank0
 11411  0B70  00D0               	movwf	??_rtc6_SetTime
 11412  0B71  0850               	movf	??_rtc6_SetTime,w
 11413  0B72  00B3               	movwf	rtc6_SetComponent@mask
 11414  0B73  0853               	movf	rtc6_SetTime@tm_t,w
 11415  0B74  0086               	movwf	6
 11416  0B75  0187               	clrf	7
 11417  0B76  0801               	movf	1,w
 11418  0B77  00D1               	movwf	??_rtc6_SetTime+1
 11419  0B78  0851               	movf	??_rtc6_SetTime+1,w
 11420  0B79  00B4               	movwf	rtc6_SetComponent@time
 11421  0B7A  3000               	movlw	0
 11422  0B7B  3195  25A3  318B   	fcall	_rtc6_SetComponent
 11423                           
 11424                           ;RTC6.c: 156: rtc6_SetComponent(0x02, 0x00, tm_t->tm_hour);
 11425  0B7E  0020               	movlb	0	; select bank0
 11426  0B7F  01B3               	clrf	rtc6_SetComponent@mask
 11427  0B80  0853               	movf	rtc6_SetTime@tm_t,w
 11428  0B81  0086               	movwf	6
 11429  0B82  0187               	clrf	7
 11430  0B83  3F44               	moviw [4]fsr1
 11431  0B84  00B4               	movwf	rtc6_SetComponent@time
 11432  0B85  3002               	movlw	2
 11433  0B86  3195  25A3         	fcall	_rtc6_SetComponent
 11434  0B88  0008               	return
 11435  0B89                     __end_of_rtc6_SetTime:	
 11436                           
 11437                           	psect	text22
 11438  15A3                     __ptext22:	
 11439 ;; *************** function _rtc6_SetComponent *****************
 11440 ;; Defined at:
 11441 ;;		line 140 in file "mcc_generated_files/RTC6.c"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;  location        1    wreg     unsigned char 
 11444 ;;  mask            1   19[BANK0 ] unsigned char 
 11445 ;;  time            1   20[BANK0 ] unsigned char 
 11446 ;; Auto vars:     Size  Location     Type
 11447 ;;  location        1   28[BANK0 ] unsigned char 
 11448 ;;  inMemory        1   27[BANK0 ] unsigned char 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      void 
 11451 ;; Registers used:
 11452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11458 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;Total ram usage:       10 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; Hardware stack levels required when called:   16
 11465 ;; This function calls:
 11466 ;;		___awdiv
 11467 ;;		___awmod
 11468 ;;		_rtcc_read
 11469 ;;		_rtcc_write
 11470 ;; This function is called by:
 11471 ;;		_rtc6_SetTime
 11472 ;;		_rtc6_SetTime2
 11473 ;; This function uses a non-reentrant model
 11474 ;;
 11475                           
 11476                           
 11477                           ;psect for function _rtc6_SetComponent
 11478  15A3                     _rtc6_SetComponent:	
 11479                           
 11480                           ;incstack = 0
 11481 ;; hardware stack exceeded
 11482                           ; Regs used in _rtc6_SetComponent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11483                           ;rtc6_SetComponent@location stored from wreg
 11484  15A3  0020               	movlb	0	; select bank0
 11485  15A4  00BC               	movwf	rtc6_SetComponent@location
 11486                           
 11487                           ;RTC6.c: 141: uint8_t inMemory = rtcc_read(location) & mask;
 11488  15A5  083C               	movf	rtc6_SetComponent@location,w
 11489  15A6  3190  205E  3195   	fcall	_rtcc_read
 11490  15A9  0020               	movlb	0	; select bank0
 11491  15AA  0533               	andwf	rtc6_SetComponent@mask,w
 11492  15AB  00B5               	movwf	??_rtc6_SetComponent
 11493  15AC  0835               	movf	??_rtc6_SetComponent,w
 11494  15AD  00BB               	movwf	rtc6_SetComponent@inMemory
 11495                           
 11496                           ;RTC6.c: 142: rtcc_write(location, inMemory | (time % 10) | ((time / 10) << 4));
 11497  15AE  300A               	movlw	10
 11498  15AF  00A0               	movwf	___awdiv@divisor
 11499  15B0  3000               	movlw	0
 11500  15B1  00A1               	movwf	___awdiv@divisor+1
 11501  15B2  0834               	movf	rtc6_SetComponent@time,w
 11502  15B3  00B5               	movwf	??_rtc6_SetComponent
 11503  15B4  01B6               	clrf	??_rtc6_SetComponent+1
 11504  15B5  0835               	movf	??_rtc6_SetComponent,w
 11505  15B6  00A2               	movwf	___awdiv@dividend
 11506  15B7  0836               	movf	??_rtc6_SetComponent+1,w
 11507  15B8  00A3               	movwf	___awdiv@dividend+1
 11508  15B9  3188  20C4  3195   	fcall	___awdiv
 11509  15BC  0020               	movlb	0	; select bank0
 11510  15BD  0820               	movf	?___awdiv,w
 11511  15BE  00B7               	movwf	??_rtc6_SetComponent+2
 11512  15BF  3004               	movlw	4
 11513  15C0                     u6425:	
 11514  15C0  35B7               	lslf	??_rtc6_SetComponent+2,f
 11515  15C1  0B89               	decfsz	9,f
 11516  15C2  2DC0               	goto	u6425
 11517  15C3  300A               	movlw	10
 11518  15C4  00A0               	movwf	___awmod@divisor
 11519  15C5  3000               	movlw	0
 11520  15C6  00A1               	movwf	___awmod@divisor+1
 11521  15C7  0834               	movf	rtc6_SetComponent@time,w
 11522  15C8  00B8               	movwf	??_rtc6_SetComponent+3
 11523  15C9  01B9               	clrf	??_rtc6_SetComponent+4
 11524  15CA  0838               	movf	??_rtc6_SetComponent+3,w
 11525  15CB  00A2               	movwf	___awmod@dividend
 11526  15CC  0839               	movf	??_rtc6_SetComponent+4,w
 11527  15CD  00A3               	movwf	___awmod@dividend+1
 11528  15CE  3197  2721  3195   	fcall	___awmod
 11529  15D1  0020               	movlb	0	; select bank0
 11530  15D2  0820               	movf	?___awmod,w
 11531  15D3  0437               	iorwf	??_rtc6_SetComponent+2,w
 11532  15D4  043B               	iorwf	rtc6_SetComponent@inMemory,w
 11533  15D5  00BA               	movwf	??_rtc6_SetComponent+5
 11534  15D6  083A               	movf	??_rtc6_SetComponent+5,w
 11535  15D7  00AE               	movwf	rtcc_write@data
 11536  15D8  083C               	movf	rtc6_SetComponent@location,w
 11537  15D9  3191  2182         	fcall	_rtcc_write
 11538  15DB  0008               	return
 11539  15DC                     __end_of_rtc6_SetComponent:	
 11540                           
 11541                           	psect	text23
 11542  08C4                     __ptext23:	
 11543 ;; *************** function ___awdiv *****************
 11544 ;; Defined at:
 11545 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11546 ;; Parameters:    Size  Location     Type
 11547 ;;  divisor         2    0[BANK0 ] int 
 11548 ;;  dividend        2    2[BANK0 ] int 
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;  quotient        2    7[BANK0 ] int 
 11551 ;;  sign            1    6[BANK0 ] unsigned char 
 11552 ;;  counter         1    5[BANK0 ] unsigned char 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  2    0[BANK0 ] int 
 11555 ;; Registers used:
 11556 ;;		wreg, status,2, status,0
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11565 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;Total ram usage:        9 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    6
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_rtc6_SetComponent
 11573 ;;		_asctime
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           
 11578                           ;psect for function ___awdiv
 11579  08C4                     ___awdiv:	
 11580                           
 11581                           ;incstack = 0
 11582                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11583  08C4  0020               	movlb	0	; select bank0
 11584  08C5  01A6               	clrf	___awdiv@sign
 11585  08C6  1FA1               	btfss	___awdiv@divisor+1,7
 11586  08C7  28CF               	goto	l5807
 11587  08C8  09A0               	comf	___awdiv@divisor,f
 11588  08C9  09A1               	comf	___awdiv@divisor+1,f
 11589  08CA  0AA0               	incf	___awdiv@divisor,f
 11590  08CB  1903               	skipnz
 11591  08CC  0AA1               	incf	___awdiv@divisor+1,f
 11592  08CD  01A6               	clrf	___awdiv@sign
 11593  08CE  0AA6               	incf	___awdiv@sign,f
 11594  08CF                     l5807:	
 11595  08CF  1FA3               	btfss	___awdiv@dividend+1,7
 11596  08D0  28DA               	goto	l5813
 11597  08D1  09A2               	comf	___awdiv@dividend,f
 11598  08D2  09A3               	comf	___awdiv@dividend+1,f
 11599  08D3  0AA2               	incf	___awdiv@dividend,f
 11600  08D4  1903               	skipnz
 11601  08D5  0AA3               	incf	___awdiv@dividend+1,f
 11602  08D6  3001               	movlw	1
 11603  08D7  00A4               	movwf	??___awdiv
 11604  08D8  0824               	movf	??___awdiv,w
 11605  08D9  06A6               	xorwf	___awdiv@sign,f
 11606  08DA                     l5813:	
 11607  08DA  01A7               	clrf	___awdiv@quotient
 11608  08DB  01A8               	clrf	___awdiv@quotient+1
 11609  08DC  0820               	movf	___awdiv@divisor,w
 11610  08DD  0421               	iorwf	___awdiv@divisor+1,w
 11611  08DE  1903               	btfsc	3,2
 11612  08DF  2909               	goto	l5835
 11613  08E0  01A5               	clrf	___awdiv@counter
 11614  08E1  0AA5               	incf	___awdiv@counter,f
 11615  08E2                     l5823:	
 11616  08E2  1BA1               	btfsc	___awdiv@divisor+1,7
 11617  08E3  28EE               	goto	l5825
 11618  08E4  3001               	movlw	1
 11619  08E5                     u4345:	
 11620  08E5  35A0               	lslf	___awdiv@divisor,f
 11621  08E6  0DA1               	rlf	___awdiv@divisor+1,f
 11622  08E7  0B89               	decfsz	9,f
 11623  08E8  28E5               	goto	u4345
 11624  08E9  3001               	movlw	1
 11625  08EA  00A4               	movwf	??___awdiv
 11626  08EB  0824               	movf	??___awdiv,w
 11627  08EC  07A5               	addwf	___awdiv@counter,f
 11628  08ED  28E2               	goto	l5823
 11629  08EE                     l5825:	
 11630  08EE  3001               	movlw	1
 11631  08EF                     u4365:	
 11632  08EF  35A7               	lslf	___awdiv@quotient,f
 11633  08F0  0DA8               	rlf	___awdiv@quotient+1,f
 11634  08F1  0B89               	decfsz	9,f
 11635  08F2  28EF               	goto	u4365
 11636  08F3  0821               	movf	___awdiv@divisor+1,w
 11637  08F4  0223               	subwf	___awdiv@dividend+1,w
 11638  08F5  1D03               	skipz
 11639  08F6  28F9               	goto	u4375
 11640  08F7  0820               	movf	___awdiv@divisor,w
 11641  08F8  0222               	subwf	___awdiv@dividend,w
 11642  08F9                     u4375:	
 11643  08F9  1C03               	skipc
 11644  08FA  2900               	goto	l5831
 11645  08FB  0820               	movf	___awdiv@divisor,w
 11646  08FC  02A2               	subwf	___awdiv@dividend,f
 11647  08FD  0821               	movf	___awdiv@divisor+1,w
 11648  08FE  3BA3               	subwfb	___awdiv@dividend+1,f
 11649  08FF  1427               	bsf	___awdiv@quotient,0
 11650  0900                     l5831:	
 11651  0900  3001               	movlw	1
 11652  0901                     u4385:	
 11653  0901  36A1               	lsrf	___awdiv@divisor+1,f
 11654  0902  0CA0               	rrf	___awdiv@divisor,f
 11655  0903  0B89               	decfsz	9,f
 11656  0904  2901               	goto	u4385
 11657  0905  3001               	movlw	1
 11658  0906  02A5               	subwf	___awdiv@counter,f
 11659  0907  1D03               	btfss	3,2
 11660  0908  28EE               	goto	l5825
 11661  0909                     l5835:	
 11662  0909  0826               	movf	___awdiv@sign,w
 11663  090A  1903               	btfsc	3,2
 11664  090B  2911               	goto	l5839
 11665  090C  09A7               	comf	___awdiv@quotient,f
 11666  090D  09A8               	comf	___awdiv@quotient+1,f
 11667  090E  0AA7               	incf	___awdiv@quotient,f
 11668  090F  1903               	skipnz
 11669  0910  0AA8               	incf	___awdiv@quotient+1,f
 11670  0911                     l5839:	
 11671  0911  0828               	movf	___awdiv@quotient+1,w
 11672  0912  00A1               	movwf	?___awdiv+1
 11673  0913  0827               	movf	___awdiv@quotient,w
 11674  0914  00A0               	movwf	?___awdiv
 11675  0915  0008               	return
 11676  0916                     __end_of___awdiv:	
 11677                           
 11678                           	psect	text24
 11679  124C                     __ptext24:	
 11680 ;; *************** function _memset *****************
 11681 ;; Defined at:
 11682 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;  p1              1    wreg     PTR void 
 11685 ;;		 -> gmtime@tim(18), rtc6_GetTime@tm_t(18), 
 11686 ;;  c               2    0[BANK0 ] int 
 11687 ;;  n               2    2[BANK0 ] unsigned int 
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;  p1              1    6[BANK0 ] PTR void 
 11690 ;;		 -> gmtime@tim(18), rtc6_GetTime@tm_t(18), 
 11691 ;;  p               1    5[BANK0 ] PTR unsigned char 
 11692 ;;		 -> gmtime@tim(18), rtc6_GetTime@tm_t(18), 
 11693 ;; Return value:  Size  Location     Type
 11694 ;;                  1    wreg      PTR void 
 11695 ;; Registers used:
 11696 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11697 ;; Tracked objects:
 11698 ;;		On entry : 0/0
 11699 ;;		On exit  : 0/0
 11700 ;;		Unchanged: 0/0
 11701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11702 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11703 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11704 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11705 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11706 ;;Total ram usage:        7 bytes
 11707 ;; Hardware stack levels used:    1
 11708 ;; Hardware stack levels required when called:    6
 11709 ;; This function calls:
 11710 ;;		Nothing
 11711 ;; This function is called by:
 11712 ;;		_rtc6_SetTime
 11713 ;;		_rtc6_GetTime
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           
 11718                           ;psect for function _memset
 11719  124C                     _memset:	
 11720                           
 11721                           ;incstack = 0
 11722                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11723                           ;memset@p1 stored from wreg
 11724  124C  0020               	movlb	0	; select bank0
 11725  124D  00A6               	movwf	memset@p1
 11726  124E  0826               	movf	memset@p1,w
 11727  124F  00A4               	movwf	??_memset
 11728  1250  0824               	movf	??_memset,w
 11729  1251  00A5               	movwf	memset@p
 11730  1252                     l5913:	
 11731  1252  3001               	movlw	1
 11732  1253  02A2               	subwf	memset@n,f
 11733  1254  3000               	movlw	0
 11734  1255  3BA3               	subwfb	memset@n+1,f
 11735  1256  0A22               	incf	memset@n,w
 11736  1257  1903               	btfsc	3,2
 11737  1258  0A23               	incf	memset@n+1,w
 11738  1259  1903               	btfsc	3,2
 11739  125A  0008               	return
 11740  125B  0820               	movf	memset@c,w
 11741  125C  00A4               	movwf	??_memset
 11742  125D  0825               	movf	memset@p,w
 11743  125E  0086               	movwf	6
 11744  125F  0187               	clrf	7
 11745  1260  0824               	movf	??_memset,w
 11746  1261  0081               	movwf	1
 11747  1262  3001               	movlw	1
 11748  1263  00A4               	movwf	??_memset
 11749  1264  0824               	movf	??_memset,w
 11750  1265  07A5               	addwf	memset@p,f
 11751  1266  2A52               	goto	l5913
 11752  1267                     __end_of_memset:	
 11753                           ;	Return value of _memset is never used
 11754                           
 11755                           
 11756                           	psect	text25
 11757  1696                     __ptext25:	
 11758 ;; *************** function _localtime *****************
 11759 ;; Defined at:
 11760 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  tp              1    wreg     PTR const long 
 11763 ;;		 -> main@getTime(4), rtc6_SetTime@t(4), 
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;  tp              1   43[BANK0 ] PTR const long 
 11766 ;;		 -> main@getTime(4), rtc6_SetTime@t(4), 
 11767 ;;  t               4   39[BANK0 ] long 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  1    wreg      PTR struct tm
 11770 ;; Registers used:
 11771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11778 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11780 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;Total ram usage:       13 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:    9
 11784 ;; This function calls:
 11785 ;;		___lmul
 11786 ;;		_gmtime
 11787 ;; This function is called by:
 11788 ;;		_rtc6_SetTime
 11789 ;;		_main
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           
 11794                           ;psect for function _localtime
 11795  1696                     _localtime:	
 11796                           
 11797                           ;incstack = 0
 11798                           ; Regs used in _localtime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11799                           ;localtime@tp stored from wreg
 11800  1696  0020               	movlb	0	; select bank0
 11801  1697  00CB               	movwf	localtime@tp
 11802  1698  084B               	movf	localtime@tp,w
 11803  1699  0086               	movwf	6
 11804  169A  0187               	clrf	7
 11805  169B  3F40               	moviw [0]fsr1
 11806  169C  00BF               	movwf	??_localtime
 11807  169D  3F41               	moviw [1]fsr1
 11808  169E  00C0               	movwf	??_localtime+1
 11809  169F  3F42               	moviw [2]fsr1
 11810  16A0  00C1               	movwf	??_localtime+2
 11811  16A1  3F43               	moviw [3]fsr1
 11812  16A2  00C2               	movwf	??_localtime+3
 11813  16A3  0878               	movf	_time_zone,w
 11814  16A4  00A0               	movwf	___lmul@multiplier
 11815  16A5  0879               	movf	_time_zone+1,w
 11816  16A6  00A1               	movwf	___lmul@multiplier+1
 11817  16A7  0D89               	rlf	9,f
 11818  16A8  3B89               	subwfb	9,f
 11819  16A9  0989               	comf	9,f
 11820  16AA  00A2               	movwf	___lmul@multiplier+2
 11821  16AB  00A3               	movwf	___lmul@multiplier+3
 11822  16AC  3000               	movlw	0
 11823  16AD  00A7               	movwf	___lmul@multiplicand+3
 11824  16AE  3000               	movlw	0
 11825  16AF  00A6               	movwf	___lmul@multiplicand+2
 11826  16B0  3000               	movlw	0
 11827  16B1  00A5               	movwf	___lmul@multiplicand+1
 11828  16B2  303C               	movlw	60
 11829  16B3  00A4               	movwf	___lmul@multiplicand
 11830  16B4  3194  24A1  3196   	fcall	___lmul
 11831  16B7  0020               	movlb	0	; select bank0
 11832  16B8  0920               	comf	?___lmul,w
 11833  16B9  00C3               	movwf	??_localtime+4
 11834  16BA  0921               	comf	?___lmul+1,w
 11835  16BB  00C4               	movwf	??_localtime+5
 11836  16BC  0922               	comf	?___lmul+2,w
 11837  16BD  00C5               	movwf	??_localtime+6
 11838  16BE  0923               	comf	?___lmul+3,w
 11839  16BF  00C6               	movwf	??_localtime+7
 11840  16C0  0AC3               	incf	??_localtime+4,f
 11841  16C1  1903               	skipnz
 11842  16C2  0AC4               	incf	??_localtime+5,f
 11843  16C3  1903               	skipnz
 11844  16C4  0AC5               	incf	??_localtime+6,f
 11845  16C5  1903               	skipnz
 11846  16C6  0AC6               	incf	??_localtime+7,f
 11847  16C7  0843               	movf	??_localtime+4,w
 11848  16C8  07BF               	addwf	??_localtime,f
 11849  16C9  0844               	movf	??_localtime+5,w
 11850  16CA  3DC0               	addwfc	??_localtime+1,f
 11851  16CB  0845               	movf	??_localtime+6,w
 11852  16CC  3DC1               	addwfc	??_localtime+2,f
 11853  16CD  0846               	movf	??_localtime+7,w
 11854  16CE  3DC2               	addwfc	??_localtime+3,f
 11855  16CF  0842               	movf	??_localtime+3,w
 11856  16D0  00CA               	movwf	localtime@t+3
 11857  16D1  0841               	movf	??_localtime+2,w
 11858  16D2  00C9               	movwf	localtime@t+2
 11859  16D3  0840               	movf	??_localtime+1,w
 11860  16D4  00C8               	movwf	localtime@t+1
 11861  16D5  083F               	movf	??_localtime,w
 11862  16D6  00C7               	movwf	localtime@t
 11863  16D7  3047               	movlw	(low (localtime@t| 0))& (0+255)
 11864  16D8  318E  26AE         	fcall	_gmtime
 11865  16DA  0008               	return
 11866  16DB                     __end_of_localtime:	
 11867                           
 11868                           	psect	text26
 11869  0EAE                     __ptext26:	
 11870 ;; *************** function _gmtime *****************
 11871 ;; Defined at:
 11872 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
 11873 ;; Parameters:    Size  Location     Type
 11874 ;;  tp              1    wreg     PTR const long 
 11875 ;;		 -> localtime@t(4), 
 11876 ;; Auto vars:     Size  Location     Type
 11877 ;;  tp              1   26[BANK0 ] PTR const long 
 11878 ;;		 -> localtime@t(4), 
 11879 ;;  tc              4   27[BANK0 ] struct .
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  1    wreg      PTR struct tm
 11882 ;; Registers used:
 11883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11884 ;; Tracked objects:
 11885 ;;		On entry : 0/0
 11886 ;;		On exit  : 0/0
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;Total ram usage:        7 bytes
 11894 ;; Hardware stack levels used:    1
 11895 ;; Hardware stack levels required when called:    8
 11896 ;; This function calls:
 11897 ;;		___aldiv
 11898 ;;		___almod
 11899 ;;		___awmod
 11900 ;;		_dylen
 11901 ;; This function is called by:
 11902 ;;		_localtime
 11903 ;; This function uses a non-reentrant model
 11904 ;;
 11905                           
 11906                           
 11907                           ;psect for function _gmtime
 11908  0EAE                     _gmtime:	
 11909                           
 11910                           ;incstack = 0
 11911                           ; Regs used in _gmtime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11912                           ;gmtime@tp stored from wreg
 11913  0EAE  0020               	movlb	0	; select bank0
 11914  0EAF  00BA               	movwf	gmtime@tp
 11915  0EB0  083A               	movf	gmtime@tp,w
 11916  0EB1  0086               	movwf	6
 11917  0EB2  0187               	clrf	7
 11918  0EB3  3F40               	moviw [0]fsr1
 11919  0EB4  00BB               	movwf	gmtime@tc
 11920  0EB5  3F41               	moviw [1]fsr1
 11921  0EB6  00BC               	movwf	gmtime@tc+1
 11922  0EB7  3F42               	moviw [2]fsr1
 11923  0EB8  00BD               	movwf	gmtime@tc+2
 11924  0EB9  3F43               	moviw [3]fsr1
 11925  0EBA  00BE               	movwf	gmtime@tc+3
 11926  0EBB  3000               	movlw	0
 11927  0EBC  00A3               	movwf	___almod@divisor+3
 11928  0EBD  3000               	movlw	0
 11929  0EBE  00A2               	movwf	___almod@divisor+2
 11930  0EBF  3000               	movlw	0
 11931  0EC0  00A1               	movwf	___almod@divisor+1
 11932  0EC1  303C               	movlw	60
 11933  0EC2  00A0               	movwf	___almod@divisor
 11934  0EC3  083E               	movf	gmtime@tc+3,w
 11935  0EC4  00A7               	movwf	___almod@dividend+3
 11936  0EC5  083D               	movf	gmtime@tc+2,w
 11937  0EC6  00A6               	movwf	___almod@dividend+2
 11938  0EC7  083C               	movf	gmtime@tc+1,w
 11939  0EC8  00A5               	movwf	___almod@dividend+1
 11940  0EC9  083B               	movf	gmtime@tc,w
 11941  0ECA  00A4               	movwf	___almod@dividend
 11942  0ECB  3189  21C6  318E   	fcall	___almod
 11943  0ECE  0020               	movlb	0	; select bank0
 11944  0ECF  0821               	movf	?___almod+1,w
 11945  0ED0  0021               	movlb	1	; select bank1
 11946  0ED1  00C2               	movwf	(gmtime@tim+1)^(0+128)
 11947  0ED2  0020               	movlb	0	; select bank0
 11948  0ED3  0820               	movf	?___almod,w
 11949  0ED4  0021               	movlb	1	; select bank1
 11950  0ED5  00C1               	movwf	gmtime@tim^(0+128)
 11951  0ED6  3000               	movlw	0
 11952  0ED7  0020               	movlb	0	; select bank0
 11953  0ED8  00A3               	movwf	___aldiv@divisor+3
 11954  0ED9  3000               	movlw	0
 11955  0EDA  00A2               	movwf	___aldiv@divisor+2
 11956  0EDB  3000               	movlw	0
 11957  0EDC  00A1               	movwf	___aldiv@divisor+1
 11958  0EDD  303C               	movlw	60
 11959  0EDE  00A0               	movwf	___aldiv@divisor
 11960  0EDF  083E               	movf	gmtime@tc+3,w
 11961  0EE0  00A7               	movwf	___aldiv@dividend+3
 11962  0EE1  083D               	movf	gmtime@tc+2,w
 11963  0EE2  00A6               	movwf	___aldiv@dividend+2
 11964  0EE3  083C               	movf	gmtime@tc+1,w
 11965  0EE4  00A5               	movwf	___aldiv@dividend+1
 11966  0EE5  083B               	movf	gmtime@tc,w
 11967  0EE6  00A4               	movwf	___aldiv@dividend
 11968  0EE7  318C  2403  318E   	fcall	___aldiv
 11969  0EEA  0020               	movlb	0	; select bank0
 11970  0EEB  0823               	movf	?___aldiv+3,w
 11971  0EEC  00BE               	movwf	gmtime@tc+3
 11972  0EED  0822               	movf	?___aldiv+2,w
 11973  0EEE  00BD               	movwf	gmtime@tc+2
 11974  0EEF  0821               	movf	?___aldiv+1,w
 11975  0EF0  00BC               	movwf	gmtime@tc+1
 11976  0EF1  0820               	movf	?___aldiv,w
 11977  0EF2  00BB               	movwf	gmtime@tc
 11978  0EF3  3000               	movlw	0
 11979  0EF4  00A3               	movwf	___almod@divisor+3
 11980  0EF5  3000               	movlw	0
 11981  0EF6  00A2               	movwf	___almod@divisor+2
 11982  0EF7  3000               	movlw	0
 11983  0EF8  00A1               	movwf	___almod@divisor+1
 11984  0EF9  303C               	movlw	60
 11985  0EFA  00A0               	movwf	___almod@divisor
 11986  0EFB  083E               	movf	gmtime@tc+3,w
 11987  0EFC  00A7               	movwf	___almod@dividend+3
 11988  0EFD  083D               	movf	gmtime@tc+2,w
 11989  0EFE  00A6               	movwf	___almod@dividend+2
 11990  0EFF  083C               	movf	gmtime@tc+1,w
 11991  0F00  00A5               	movwf	___almod@dividend+1
 11992  0F01  083B               	movf	gmtime@tc,w
 11993  0F02  00A4               	movwf	___almod@dividend
 11994  0F03  3189  21C6  318E   	fcall	___almod
 11995  0F06  0020               	movlb	0	; select bank0
 11996  0F07  0821               	movf	?___almod+1,w
 11997  0F08  0021               	movlb	1	; select bank1
 11998  0F09  00C4               	movwf	((gmtime@tim+1)^(0+128)+2)
 11999  0F0A  0020               	movlb	0	; select bank0
 12000  0F0B  0820               	movf	?___almod,w
 12001  0F0C  0021               	movlb	1	; select bank1
 12002  0F0D  00C3               	movwf	(gmtime@tim^(0+128)+2)
 12003  0F0E  3000               	movlw	0
 12004  0F0F  0020               	movlb	0	; select bank0
 12005  0F10  00A3               	movwf	___aldiv@divisor+3
 12006  0F11  3000               	movlw	0
 12007  0F12  00A2               	movwf	___aldiv@divisor+2
 12008  0F13  3000               	movlw	0
 12009  0F14  00A1               	movwf	___aldiv@divisor+1
 12010  0F15  303C               	movlw	60
 12011  0F16  00A0               	movwf	___aldiv@divisor
 12012  0F17  083E               	movf	gmtime@tc+3,w
 12013  0F18  00A7               	movwf	___aldiv@dividend+3
 12014  0F19  083D               	movf	gmtime@tc+2,w
 12015  0F1A  00A6               	movwf	___aldiv@dividend+2
 12016  0F1B  083C               	movf	gmtime@tc+1,w
 12017  0F1C  00A5               	movwf	___aldiv@dividend+1
 12018  0F1D  083B               	movf	gmtime@tc,w
 12019  0F1E  00A4               	movwf	___aldiv@dividend
 12020  0F1F  318C  2403  318E   	fcall	___aldiv
 12021  0F22  0020               	movlb	0	; select bank0
 12022  0F23  0823               	movf	?___aldiv+3,w
 12023  0F24  00BE               	movwf	gmtime@tc+3
 12024  0F25  0822               	movf	?___aldiv+2,w
 12025  0F26  00BD               	movwf	gmtime@tc+2
 12026  0F27  0821               	movf	?___aldiv+1,w
 12027  0F28  00BC               	movwf	gmtime@tc+1
 12028  0F29  0820               	movf	?___aldiv,w
 12029  0F2A  00BB               	movwf	gmtime@tc
 12030  0F2B  3000               	movlw	0
 12031  0F2C  00A3               	movwf	___almod@divisor+3
 12032  0F2D  3000               	movlw	0
 12033  0F2E  00A2               	movwf	___almod@divisor+2
 12034  0F2F  3000               	movlw	0
 12035  0F30  00A1               	movwf	___almod@divisor+1
 12036  0F31  3018               	movlw	24
 12037  0F32  00A0               	movwf	___almod@divisor
 12038  0F33  083E               	movf	gmtime@tc+3,w
 12039  0F34  00A7               	movwf	___almod@dividend+3
 12040  0F35  083D               	movf	gmtime@tc+2,w
 12041  0F36  00A6               	movwf	___almod@dividend+2
 12042  0F37  083C               	movf	gmtime@tc+1,w
 12043  0F38  00A5               	movwf	___almod@dividend+1
 12044  0F39  083B               	movf	gmtime@tc,w
 12045  0F3A  00A4               	movwf	___almod@dividend
 12046  0F3B  3189  21C6  318E   	fcall	___almod
 12047  0F3E  0020               	movlb	0	; select bank0
 12048  0F3F  0821               	movf	?___almod+1,w
 12049  0F40  0021               	movlb	1	; select bank1
 12050  0F41  00C6               	movwf	((gmtime@tim+1)^(0+128)+4)
 12051  0F42  0020               	movlb	0	; select bank0
 12052  0F43  0820               	movf	?___almod,w
 12053  0F44  0021               	movlb	1	; select bank1
 12054  0F45  00C5               	movwf	(gmtime@tim^(0+128)+4)
 12055  0F46  3000               	movlw	0
 12056  0F47  0020               	movlb	0	; select bank0
 12057  0F48  00A3               	movwf	___aldiv@divisor+3
 12058  0F49  3000               	movlw	0
 12059  0F4A  00A2               	movwf	___aldiv@divisor+2
 12060  0F4B  3000               	movlw	0
 12061  0F4C  00A1               	movwf	___aldiv@divisor+1
 12062  0F4D  3018               	movlw	24
 12063  0F4E  00A0               	movwf	___aldiv@divisor
 12064  0F4F  083E               	movf	gmtime@tc+3,w
 12065  0F50  00A7               	movwf	___aldiv@dividend+3
 12066  0F51  083D               	movf	gmtime@tc+2,w
 12067  0F52  00A6               	movwf	___aldiv@dividend+2
 12068  0F53  083C               	movf	gmtime@tc+1,w
 12069  0F54  00A5               	movwf	___aldiv@dividend+1
 12070  0F55  083B               	movf	gmtime@tc,w
 12071  0F56  00A4               	movwf	___aldiv@dividend
 12072  0F57  318C  2403  318E   	fcall	___aldiv
 12073  0F5A  0020               	movlb	0	; select bank0
 12074  0F5B  0821               	movf	?___aldiv+1,w
 12075  0F5C  0021               	movlb	1	; select bank1
 12076  0F5D  00C8               	movwf	((gmtime@tim+1)^(0+128)+6)
 12077  0F5E  0020               	movlb	0	; select bank0
 12078  0F5F  0820               	movf	?___aldiv,w
 12079  0F60  0021               	movlb	1	; select bank1
 12080  0F61  00C7               	movwf	(gmtime@tim^(0+128)+6)
 12081  0F62  3007               	movlw	7
 12082  0F63  0020               	movlb	0	; select bank0
 12083  0F64  00A0               	movwf	___awmod@divisor
 12084  0F65  3000               	movlw	0
 12085  0F66  00A1               	movwf	___awmod@divisor+1
 12086  0F67  0021               	movlb	1	; select bank1
 12087  0F68  0847               	movf	(gmtime@tim^(0+128)+6),w
 12088  0F69  3E04               	addlw	4
 12089  0F6A  0020               	movlb	0	; select bank0
 12090  0F6B  00A2               	movwf	___awmod@dividend
 12091  0F6C  3000               	movlw	0
 12092  0F6D  0021               	movlb	1	; select bank1
 12093  0F6E  3D48               	addwfc	((gmtime@tim+1)^(0+128)+6),w
 12094  0F6F  0020               	movlb	0	; select bank0
 12095  0F70  00A3               	movwf	___awmod@dividend+1
 12096  0F71  3197  2721  318E   	fcall	___awmod
 12097  0F74  0020               	movlb	0	; select bank0
 12098  0F75  0821               	movf	?___awmod+1,w
 12099  0F76  0021               	movlb	1	; select bank1
 12100  0F77  00CE               	movwf	((gmtime@tim+1)^(0+128)+12)
 12101  0F78  0020               	movlb	0	; select bank0
 12102  0F79  0820               	movf	?___awmod,w
 12103  0F7A  0021               	movlb	1	; select bank1
 12104  0F7B  00CD               	movwf	(gmtime@tim^(0+128)+12)
 12105  0F7C  3046               	movlw	70
 12106  0F7D  00CB               	movwf	(gmtime@tim^(0+128)+10)
 12107  0F7E  3000               	movlw	0
 12108  0F7F  00CC               	movwf	(gmtime@tim^(0+128)+11)
 12109  0F80                     l5865:	
 12110  0F80  084C               	movf	((gmtime@tim+1)^(0+128)+10),w
 12111  0F81  0020               	movlb	0	; select bank0
 12112  0F82  00B5               	movwf	dylen@yr+1
 12113  0F83  0021               	movlb	1	; select bank1
 12114  0F84  084B               	movf	(gmtime@tim^(0+128)+10),w
 12115  0F85  0020               	movlb	0	; select bank0
 12116  0F86  00B4               	movwf	dylen@yr
 12117  0F87  3195  256C  318E   	fcall	_dylen
 12118  0F8A  0021               	movlb	1	; select bank1
 12119  0F8B  0848               	movf	((gmtime@tim+1)^(0+128)+6),w
 12120  0F8C  3A80               	xorlw	128
 12121  0F8D  0020               	movlb	0	; select bank0
 12122  0F8E  00B8               	movwf	??_gmtime
 12123  0F8F  0835               	movf	?_dylen+1,w
 12124  0F90  3A80               	xorlw	128
 12125  0F91  0238               	subwf	??_gmtime,w
 12126  0F92  1D03               	skipz
 12127  0F93  2F97               	goto	u4415
 12128  0F94  0834               	movf	?_dylen,w
 12129  0F95  0021               	movlb	1	; select bank1
 12130  0F96  0247               	subwf	(gmtime@tim^(0+128)+6),w
 12131  0F97                     u4415:	
 12132  0F97  1C03               	btfss	3,0
 12133  0F98  2FB1               	goto	l5867
 12134  0F99  0021               	movlb	1	; select bank1
 12135  0F9A  084C               	movf	((gmtime@tim+1)^(0+128)+10),w
 12136  0F9B  0020               	movlb	0	; select bank0
 12137  0F9C  00B5               	movwf	dylen@yr+1
 12138  0F9D  0021               	movlb	1	; select bank1
 12139  0F9E  084B               	movf	(gmtime@tim^(0+128)+10),w
 12140  0F9F  0020               	movlb	0	; select bank0
 12141  0FA0  00B4               	movwf	dylen@yr
 12142  0FA1  3195  256C  318E   	fcall	_dylen
 12143  0FA4  0020               	movlb	0	; select bank0
 12144  0FA5  0834               	movf	?_dylen,w
 12145  0FA6  0021               	movlb	1	; select bank1
 12146  0FA7  02C7               	subwf	(gmtime@tim^(0+128)+6),f
 12147  0FA8  0020               	movlb	0	; select bank0
 12148  0FA9  0835               	movf	?_dylen+1,w
 12149  0FAA  0021               	movlb	1	; select bank1
 12150  0FAB  3BC8               	subwfb	((gmtime@tim+1)^(0+128)+6),f
 12151  0FAC  3001               	movlw	1
 12152  0FAD  07CB               	addwf	(gmtime@tim^(0+128)+10),f
 12153  0FAE  3000               	movlw	0
 12154  0FAF  3DCC               	addwfc	((gmtime@tim+1)^(0+128)+10),f
 12155  0FB0  2F80               	goto	l5865
 12156  0FB1                     l5867:	
 12157  0FB1  0021               	movlb	1	; select bank1
 12158  0FB2  084C               	movf	((gmtime@tim+1)^(0+128)+10),w
 12159  0FB3  0020               	movlb	0	; select bank0
 12160  0FB4  00B5               	movwf	dylen@yr+1
 12161  0FB5  0021               	movlb	1	; select bank1
 12162  0FB6  084B               	movf	(gmtime@tim^(0+128)+10),w
 12163  0FB7  0020               	movlb	0	; select bank0
 12164  0FB8  00B4               	movwf	dylen@yr
 12165  0FB9  3195  256C  318E   	fcall	_dylen
 12166  0FBC  0020               	movlb	0	; select bank0
 12167  0FBD  0834               	movf	?_dylen,w
 12168  0FBE  3902               	andlw	2
 12169  0FBF  00B8               	movwf	??_gmtime
 12170  0FC0  0838               	movf	??_gmtime,w
 12171  0FC1  00BB               	movwf	gmtime@tc
 12172  0FC2  0021               	movlb	1	; select bank1
 12173  0FC3  0848               	movf	((gmtime@tim+1)^(0+128)+6),w
 12174  0FC4  00D0               	movwf	((gmtime@tim+1)^(0+128)+14)
 12175  0FC5  0847               	movf	(gmtime@tim^(0+128)+6),w
 12176  0FC6  00CF               	movwf	(gmtime@tim^(0+128)+14)
 12177  0FC7  01C9               	clrf	(gmtime@tim^(0+128)+8)
 12178  0FC8  01CA               	clrf	((gmtime@tim+1)^(0+128)+8)
 12179  0FC9                     l5875:	
 12180  0FC9  0021               	movlb	1	; select bank1
 12181  0FCA  084A               	movf	((gmtime@tim+1)^(0+128)+8),w
 12182  0FCB  0085               	movwf	5
 12183  0FCC  0849               	movf	(gmtime@tim^(0+128)+8),w
 12184  0FCD  0084               	movwf	4
 12185  0FCE  3055               	movlw	low (_moninit| (0+32768))
 12186  0FCF  0784               	addwf	4,f
 12187  0FD0  3098               	movlw	high (_moninit| (0+32768))
 12188  0FD1  3D85               	addwfc	5,f
 12189  0FD2  0800               	movf	0,w	;code access
 12190  0FD3  0020               	movlb	0	; select bank0
 12191  0FD4  043B               	iorwf	gmtime@tc,w
 12192  0FD5  00B8               	movwf	??_gmtime
 12193  0FD6  0838               	movf	??_gmtime,w
 12194  0FD7  00BC               	movwf	gmtime@tc+1
 12195  0FD8  0021               	movlb	1	; select bank1
 12196  0FD9  0848               	movf	((gmtime@tim+1)^(0+128)+6),w
 12197  0FDA  3A80               	xorlw	128
 12198  0FDB  0020               	movlb	0	; select bank0
 12199  0FDC  00B9               	movwf	??_gmtime+1
 12200  0FDD  3080               	movlw	128
 12201  0FDE  0239               	subwf	??_gmtime+1,w
 12202  0FDF  1D03               	skipz
 12203  0FE0  2FE4               	goto	u4425
 12204  0FE1  083C               	movf	gmtime@tc+1,w
 12205  0FE2  0021               	movlb	1	; select bank1
 12206  0FE3  0247               	subwf	(gmtime@tim^(0+128)+6),w
 12207  0FE4                     u4425:	
 12208  0FE4  1C03               	btfss	3,0
 12209  0FE5  2FF9               	goto	l5877
 12210  0FE6  0020               	movlb	0	; select bank0
 12211  0FE7  083C               	movf	gmtime@tc+1,w
 12212  0FE8  00B8               	movwf	??_gmtime
 12213  0FE9  01B9               	clrf	??_gmtime+1
 12214  0FEA  0838               	movf	??_gmtime,w
 12215  0FEB  0021               	movlb	1	; select bank1
 12216  0FEC  02C7               	subwf	(gmtime@tim^(0+128)+6),f
 12217  0FED  0020               	movlb	0	; select bank0
 12218  0FEE  0839               	movf	??_gmtime+1,w
 12219  0FEF  0021               	movlb	1	; select bank1
 12220  0FF0  3BC8               	subwfb	((gmtime@tim+1)^(0+128)+6),f
 12221  0FF1  3001               	movlw	1
 12222  0FF2  07C9               	addwf	(gmtime@tim^(0+128)+8),f
 12223  0FF3  3000               	movlw	0
 12224  0FF4  3DCA               	addwfc	((gmtime@tim+1)^(0+128)+8),f
 12225  0FF5  1003               	clrc
 12226  0FF6  0020               	movlb	0	; select bank0
 12227  0FF7  0CBB               	rrf	gmtime@tc,f
 12228  0FF8  2FC9               	goto	l5875
 12229  0FF9                     l5877:	
 12230  0FF9  3001               	movlw	1
 12231  0FFA  0021               	movlb	1	; select bank1
 12232  0FFB  07C7               	addwf	(gmtime@tim^(0+128)+6),f
 12233  0FFC  3000               	movlw	0
 12234  0FFD  3DC8               	addwfc	((gmtime@tim+1)^(0+128)+6),f
 12235  0FFE  30C1               	movlw	(low (gmtime@tim| 0))& (0+255)
 12236  0FFF  0008               	return
 12237  1000                     __end_of_gmtime:	
 12238                           
 12239                           	psect	text27
 12240  156C                     __ptext27:	
 12241 ;; *************** function _dylen *****************
 12242 ;; Defined at:
 12243 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;  yr              2   20[BANK0 ] unsigned int 
 12246 ;; Auto vars:     Size  Location     Type
 12247 ;;		None
 12248 ;; Return value:  Size  Location     Type
 12249 ;;                  2   20[BANK0 ] int 
 12250 ;; Registers used:
 12251 ;;		wreg, status,2, status,0, pclath, cstack
 12252 ;; Tracked objects:
 12253 ;;		On entry : 0/0
 12254 ;;		On exit  : 0/0
 12255 ;;		Unchanged: 0/0
 12256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12257 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12260 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;Total ram usage:        4 bytes
 12262 ;; Hardware stack levels used:    1
 12263 ;; Hardware stack levels required when called:    7
 12264 ;; This function calls:
 12265 ;;		___lwmod
 12266 ;; This function is called by:
 12267 ;;		_gmtime
 12268 ;; This function uses a non-reentrant model
 12269 ;;
 12270                           
 12271                           
 12272                           ;psect for function _dylen
 12273  156C                     _dylen:	
 12274                           
 12275                           ;incstack = 0
 12276                           ; Regs used in _dylen: [wreg+status,2+status,0+pclath+cstack]
 12277  156C  3003               	movlw	3
 12278  156D  0020               	movlb	0	; select bank0
 12279  156E  0534               	andwf	dylen@yr,w
 12280  156F  00B6               	movwf	??_dylen
 12281  1570  3000               	movlw	0
 12282  1571  0535               	andwf	dylen@yr+1,w
 12283  1572  00B7               	movwf	??_dylen+1
 12284  1573  0836               	movf	??_dylen,w
 12285  1574  0437               	iorwf	??_dylen+1,w
 12286  1575  1D03               	btfss	3,2
 12287  1576  2D99               	goto	l5745
 12288  1577  3064               	movlw	100
 12289  1578  00AE               	movwf	___lwmod@divisor
 12290  1579  3000               	movlw	0
 12291  157A  00AF               	movwf	___lwmod@divisor+1
 12292  157B  0835               	movf	dylen@yr+1,w
 12293  157C  00B1               	movwf	___lwmod@dividend+1
 12294  157D  0834               	movf	dylen@yr,w
 12295  157E  00B0               	movwf	___lwmod@dividend
 12296  157F  3194  2417  3195   	fcall	___lwmod
 12297  1582  0020               	movlb	0	; select bank0
 12298  1583  082E               	movf	?___lwmod,w
 12299  1584  042F               	iorwf	?___lwmod+1,w
 12300  1585  1D03               	btfss	3,2
 12301  1586  2D9E               	goto	l5749
 12302  1587  3090               	movlw	144
 12303  1588  00AE               	movwf	___lwmod@divisor
 12304  1589  3001               	movlw	1
 12305  158A  00AF               	movwf	___lwmod@divisor+1
 12306  158B  0834               	movf	dylen@yr,w
 12307  158C  3E2C               	addlw	44
 12308  158D  00B0               	movwf	___lwmod@dividend
 12309  158E  3001               	movlw	1
 12310  158F  3D35               	addwfc	dylen@yr+1,w
 12311  1590  00B1               	movwf	___lwmod@dividend+1
 12312  1591  3194  2417  3195   	fcall	___lwmod
 12313  1594  0020               	movlb	0	; select bank0
 12314  1595  082E               	movf	?___lwmod,w
 12315  1596  042F               	iorwf	?___lwmod+1,w
 12316  1597  1903               	btfsc	3,2
 12317  1598  2D9E               	goto	l5749
 12318  1599                     l5745:	
 12319  1599  306D               	movlw	109
 12320  159A  00B4               	movwf	?_dylen
 12321  159B  3001               	movlw	1
 12322  159C  00B5               	movwf	?_dylen+1
 12323  159D  0008               	return
 12324  159E                     l5749:	
 12325  159E  306E               	movlw	110
 12326  159F  00B4               	movwf	?_dylen
 12327  15A0  3001               	movlw	1
 12328  15A1  00B5               	movwf	?_dylen+1
 12329  15A2  0008               	return
 12330  15A3                     __end_of_dylen:	
 12331                           
 12332                           	psect	text28
 12333  1417                     __ptext28:	
 12334 ;; *************** function ___lwmod *****************
 12335 ;; Defined at:
 12336 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 12337 ;; Parameters:    Size  Location     Type
 12338 ;;  divisor         2   14[BANK0 ] unsigned int 
 12339 ;;  dividend        2   16[BANK0 ] unsigned int 
 12340 ;; Auto vars:     Size  Location     Type
 12341 ;;  counter         1   19[BANK0 ] unsigned char 
 12342 ;; Return value:  Size  Location     Type
 12343 ;;                  2   14[BANK0 ] unsigned int 
 12344 ;; Registers used:
 12345 ;;		wreg, status,2, status,0
 12346 ;; Tracked objects:
 12347 ;;		On entry : 0/0
 12348 ;;		On exit  : 0/0
 12349 ;;		Unchanged: 0/0
 12350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12351 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12353 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12354 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12355 ;;Total ram usage:        6 bytes
 12356 ;; Hardware stack levels used:    1
 12357 ;; Hardware stack levels required when called:    6
 12358 ;; This function calls:
 12359 ;;		Nothing
 12360 ;; This function is called by:
 12361 ;;		_sprintf
 12362 ;;		_dylen
 12363 ;;		_isleap
 12364 ;; This function uses a non-reentrant model
 12365 ;;
 12366                           
 12367                           
 12368                           ;psect for function ___lwmod
 12369  1417                     ___lwmod:	
 12370                           
 12371                           ;incstack = 0
 12372                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12373  1417  0020               	movlb	0	; select bank0
 12374  1418  082E               	movf	___lwmod@divisor,w
 12375  1419  042F               	iorwf	___lwmod@divisor+1,w
 12376  141A  1903               	btfsc	3,2
 12377  141B  2C3F               	goto	l5545
 12378  141C  01B3               	clrf	___lwmod@counter
 12379  141D  0AB3               	incf	___lwmod@counter,f
 12380  141E                     l5535:	
 12381  141E  1BAF               	btfsc	___lwmod@divisor+1,7
 12382  141F  2C2A               	goto	l5537
 12383  1420  3001               	movlw	1
 12384  1421                     u3715:	
 12385  1421  35AE               	lslf	___lwmod@divisor,f
 12386  1422  0DAF               	rlf	___lwmod@divisor+1,f
 12387  1423  0B89               	decfsz	9,f
 12388  1424  2C21               	goto	u3715
 12389  1425  3001               	movlw	1
 12390  1426  00B2               	movwf	??___lwmod
 12391  1427  0832               	movf	??___lwmod,w
 12392  1428  07B3               	addwf	___lwmod@counter,f
 12393  1429  2C1E               	goto	l5535
 12394  142A                     l5537:	
 12395  142A  082F               	movf	___lwmod@divisor+1,w
 12396  142B  0231               	subwf	___lwmod@dividend+1,w
 12397  142C  1D03               	skipz
 12398  142D  2C30               	goto	u3735
 12399  142E  082E               	movf	___lwmod@divisor,w
 12400  142F  0230               	subwf	___lwmod@dividend,w
 12401  1430                     u3735:	
 12402  1430  1C03               	skipc
 12403  1431  2C36               	goto	l5541
 12404  1432  082E               	movf	___lwmod@divisor,w
 12405  1433  02B0               	subwf	___lwmod@dividend,f
 12406  1434  082F               	movf	___lwmod@divisor+1,w
 12407  1435  3BB1               	subwfb	___lwmod@dividend+1,f
 12408  1436                     l5541:	
 12409  1436  3001               	movlw	1
 12410  1437                     u3745:	
 12411  1437  36AF               	lsrf	___lwmod@divisor+1,f
 12412  1438  0CAE               	rrf	___lwmod@divisor,f
 12413  1439  0B89               	decfsz	9,f
 12414  143A  2C37               	goto	u3745
 12415  143B  3001               	movlw	1
 12416  143C  02B3               	subwf	___lwmod@counter,f
 12417  143D  1D03               	btfss	3,2
 12418  143E  2C2A               	goto	l5537
 12419  143F                     l5545:	
 12420  143F  0831               	movf	___lwmod@dividend+1,w
 12421  1440  00AF               	movwf	?___lwmod+1
 12422  1441  0830               	movf	___lwmod@dividend,w
 12423  1442  00AE               	movwf	?___lwmod
 12424  1443  0008               	return
 12425  1444                     __end_of___lwmod:	
 12426                           
 12427                           	psect	text29
 12428  1721                     __ptext29:	
 12429 ;; *************** function ___awmod *****************
 12430 ;; Defined at:
 12431 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;  divisor         2    0[BANK0 ] int 
 12434 ;;  dividend        2    2[BANK0 ] int 
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;  sign            1    6[BANK0 ] unsigned char 
 12437 ;;  counter         1    5[BANK0 ] unsigned char 
 12438 ;; Return value:  Size  Location     Type
 12439 ;;                  2    0[BANK0 ] int 
 12440 ;; Registers used:
 12441 ;;		wreg, status,2, status,0
 12442 ;; Tracked objects:
 12443 ;;		On entry : 0/0
 12444 ;;		On exit  : 0/0
 12445 ;;		Unchanged: 0/0
 12446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12447 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12448 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;Total ram usage:        7 bytes
 12452 ;; Hardware stack levels used:    1
 12453 ;; Hardware stack levels required when called:    6
 12454 ;; This function calls:
 12455 ;;		Nothing
 12456 ;; This function is called by:
 12457 ;;		_rtc6_SetComponent
 12458 ;;		_rtc6_SetTime
 12459 ;;		_gmtime
 12460 ;;		_rtc6_SetTime2
 12461 ;;		_asctime
 12462 ;; This function uses a non-reentrant model
 12463 ;;
 12464                           
 12465                           
 12466                           ;psect for function ___awmod
 12467  1721                     ___awmod:	
 12468                           
 12469                           ;incstack = 0
 12470                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12471  1721  0020               	movlb	0	; select bank0
 12472  1722  01A6               	clrf	___awmod@sign
 12473  1723  1FA3               	btfss	___awmod@dividend+1,7
 12474  1724  2F2C               	goto	l5709
 12475  1725  09A2               	comf	___awmod@dividend,f
 12476  1726  09A3               	comf	___awmod@dividend+1,f
 12477  1727  0AA2               	incf	___awmod@dividend,f
 12478  1728  1903               	skipnz
 12479  1729  0AA3               	incf	___awmod@dividend+1,f
 12480  172A  01A6               	clrf	___awmod@sign
 12481  172B  0AA6               	incf	___awmod@sign,f
 12482  172C                     l5709:	
 12483  172C  1FA1               	btfss	___awmod@divisor+1,7
 12484  172D  2F33               	goto	l5713
 12485  172E  09A0               	comf	___awmod@divisor,f
 12486  172F  09A1               	comf	___awmod@divisor+1,f
 12487  1730  0AA0               	incf	___awmod@divisor,f
 12488  1731  1903               	skipnz
 12489  1732  0AA1               	incf	___awmod@divisor+1,f
 12490  1733                     l5713:	
 12491  1733  0820               	movf	___awmod@divisor,w
 12492  1734  0421               	iorwf	___awmod@divisor+1,w
 12493  1735  1903               	btfsc	3,2
 12494  1736  2F5A               	goto	l5731
 12495  1737  01A5               	clrf	___awmod@counter
 12496  1738  0AA5               	incf	___awmod@counter,f
 12497  1739                     l5721:	
 12498  1739  1BA1               	btfsc	___awmod@divisor+1,7
 12499  173A  2F45               	goto	l5723
 12500  173B  3001               	movlw	1
 12501  173C                     u4145:	
 12502  173C  35A0               	lslf	___awmod@divisor,f
 12503  173D  0DA1               	rlf	___awmod@divisor+1,f
 12504  173E  0B89               	decfsz	9,f
 12505  173F  2F3C               	goto	u4145
 12506  1740  3001               	movlw	1
 12507  1741  00A4               	movwf	??___awmod
 12508  1742  0824               	movf	??___awmod,w
 12509  1743  07A5               	addwf	___awmod@counter,f
 12510  1744  2F39               	goto	l5721
 12511  1745                     l5723:	
 12512  1745  0821               	movf	___awmod@divisor+1,w
 12513  1746  0223               	subwf	___awmod@dividend+1,w
 12514  1747  1D03               	skipz
 12515  1748  2F4B               	goto	u4165
 12516  1749  0820               	movf	___awmod@divisor,w
 12517  174A  0222               	subwf	___awmod@dividend,w
 12518  174B                     u4165:	
 12519  174B  1C03               	skipc
 12520  174C  2F51               	goto	l5727
 12521  174D  0820               	movf	___awmod@divisor,w
 12522  174E  02A2               	subwf	___awmod@dividend,f
 12523  174F  0821               	movf	___awmod@divisor+1,w
 12524  1750  3BA3               	subwfb	___awmod@dividend+1,f
 12525  1751                     l5727:	
 12526  1751  3001               	movlw	1
 12527  1752                     u4175:	
 12528  1752  36A1               	lsrf	___awmod@divisor+1,f
 12529  1753  0CA0               	rrf	___awmod@divisor,f
 12530  1754  0B89               	decfsz	9,f
 12531  1755  2F52               	goto	u4175
 12532  1756  3001               	movlw	1
 12533  1757  02A5               	subwf	___awmod@counter,f
 12534  1758  1D03               	btfss	3,2
 12535  1759  2F45               	goto	l5723
 12536  175A                     l5731:	
 12537  175A  0826               	movf	___awmod@sign,w
 12538  175B  1903               	btfsc	3,2
 12539  175C  2F62               	goto	l5735
 12540  175D  09A2               	comf	___awmod@dividend,f
 12541  175E  09A3               	comf	___awmod@dividend+1,f
 12542  175F  0AA2               	incf	___awmod@dividend,f
 12543  1760  1903               	skipnz
 12544  1761  0AA3               	incf	___awmod@dividend+1,f
 12545  1762                     l5735:	
 12546  1762  0823               	movf	___awmod@dividend+1,w
 12547  1763  00A1               	movwf	?___awmod+1
 12548  1764  0822               	movf	___awmod@dividend,w
 12549  1765  00A0               	movwf	?___awmod
 12550  1766  0008               	return
 12551  1767                     __end_of___awmod:	
 12552                           
 12553                           	psect	text30
 12554  09C6                     __ptext30:	
 12555 ;; *************** function ___almod *****************
 12556 ;; Defined at:
 12557 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 12558 ;; Parameters:    Size  Location     Type
 12559 ;;  divisor         4    0[BANK0 ] long 
 12560 ;;  dividend        4    4[BANK0 ] long 
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;  sign            1   10[BANK0 ] unsigned char 
 12563 ;;  counter         1    9[BANK0 ] unsigned char 
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  4    0[BANK0 ] long 
 12566 ;; Registers used:
 12567 ;;		wreg, status,2, status,0
 12568 ;; Tracked objects:
 12569 ;;		On entry : 0/0
 12570 ;;		On exit  : 0/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12573 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12575 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12576 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12577 ;;Total ram usage:       11 bytes
 12578 ;; Hardware stack levels used:    1
 12579 ;; Hardware stack levels required when called:    6
 12580 ;; This function calls:
 12581 ;;		Nothing
 12582 ;; This function is called by:
 12583 ;;		_gmtime
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           
 12588                           ;psect for function ___almod
 12589  09C6                     ___almod:	
 12590                           
 12591                           ;incstack = 0
 12592                           ; Regs used in ___almod: [wreg+status,2+status,0]
 12593  09C6  0020               	movlb	0	; select bank0
 12594  09C7  01AA               	clrf	___almod@sign
 12595  09C8  1FA7               	btfss	___almod@dividend+3,7
 12596  09C9  29D7               	goto	l1049
 12597  09CA  09A4               	comf	___almod@dividend,f
 12598  09CB  09A5               	comf	___almod@dividend+1,f
 12599  09CC  09A6               	comf	___almod@dividend+2,f
 12600  09CD  09A7               	comf	___almod@dividend+3,f
 12601  09CE  0AA4               	incf	___almod@dividend,f
 12602  09CF  1903               	skipnz
 12603  09D0  0AA5               	incf	___almod@dividend+1,f
 12604  09D1  1903               	skipnz
 12605  09D2  0AA6               	incf	___almod@dividend+2,f
 12606  09D3  1903               	skipnz
 12607  09D4  0AA7               	incf	___almod@dividend+3,f
 12608  09D5  01AA               	clrf	___almod@sign
 12609  09D6  0AAA               	incf	___almod@sign,f
 12610  09D7                     l1049:	
 12611  09D7  1FA3               	btfss	___almod@divisor+3,7
 12612  09D8  29E4               	goto	l5677
 12613  09D9  09A0               	comf	___almod@divisor,f
 12614  09DA  09A1               	comf	___almod@divisor+1,f
 12615  09DB  09A2               	comf	___almod@divisor+2,f
 12616  09DC  09A3               	comf	___almod@divisor+3,f
 12617  09DD  0AA0               	incf	___almod@divisor,f
 12618  09DE  1903               	skipnz
 12619  09DF  0AA1               	incf	___almod@divisor+1,f
 12620  09E0  1903               	skipnz
 12621  09E1  0AA2               	incf	___almod@divisor+2,f
 12622  09E2  1903               	skipnz
 12623  09E3  0AA3               	incf	___almod@divisor+3,f
 12624  09E4                     l5677:	
 12625  09E4  0823               	movf	___almod@divisor+3,w
 12626  09E5  0422               	iorwf	___almod@divisor+2,w
 12627  09E6  0421               	iorwf	___almod@divisor+1,w
 12628  09E7  0420               	iorwf	___almod@divisor,w
 12629  09E8  1903               	skipnz
 12630  09E9  2A1D               	goto	l5693
 12631  09EA  01A9               	clrf	___almod@counter
 12632  09EB  0AA9               	incf	___almod@counter,f
 12633  09EC                     l5683:	
 12634  09EC  1BA3               	btfsc	___almod@divisor+3,7
 12635  09ED  29FA               	goto	l5685
 12636  09EE  3001               	movlw	1
 12637  09EF                     u4055:	
 12638  09EF  35A0               	lslf	___almod@divisor,f
 12639  09F0  0DA1               	rlf	___almod@divisor+1,f
 12640  09F1  0DA2               	rlf	___almod@divisor+2,f
 12641  09F2  0DA3               	rlf	___almod@divisor+3,f
 12642  09F3  0B89               	decfsz	9,f
 12643  09F4  29EF               	goto	u4055
 12644  09F5  3001               	movlw	1
 12645  09F6  00A8               	movwf	??___almod
 12646  09F7  0828               	movf	??___almod,w
 12647  09F8  07A9               	addwf	___almod@counter,f
 12648  09F9  29EC               	goto	l5683
 12649  09FA                     l5685:	
 12650  09FA  0823               	movf	___almod@divisor+3,w
 12651  09FB  0227               	subwf	___almod@dividend+3,w
 12652  09FC  1D03               	skipz
 12653  09FD  2A08               	goto	u4075
 12654  09FE  0822               	movf	___almod@divisor+2,w
 12655  09FF  0226               	subwf	___almod@dividend+2,w
 12656  0A00  1D03               	skipz
 12657  0A01  2A08               	goto	u4075
 12658  0A02  0821               	movf	___almod@divisor+1,w
 12659  0A03  0225               	subwf	___almod@dividend+1,w
 12660  0A04  1D03               	skipz
 12661  0A05  2A08               	goto	u4075
 12662  0A06  0820               	movf	___almod@divisor,w
 12663  0A07  0224               	subwf	___almod@dividend,w
 12664  0A08                     u4075:	
 12665  0A08  1C03               	skipc
 12666  0A09  2A12               	goto	l5689
 12667  0A0A  0820               	movf	___almod@divisor,w
 12668  0A0B  02A4               	subwf	___almod@dividend,f
 12669  0A0C  0821               	movf	___almod@divisor+1,w
 12670  0A0D  3BA5               	subwfb	___almod@dividend+1,f
 12671  0A0E  0822               	movf	___almod@divisor+2,w
 12672  0A0F  3BA6               	subwfb	___almod@dividend+2,f
 12673  0A10  0823               	movf	___almod@divisor+3,w
 12674  0A11  3BA7               	subwfb	___almod@dividend+3,f
 12675  0A12                     l5689:	
 12676  0A12  3001               	movlw	1
 12677  0A13                     u4085:	
 12678  0A13  36A3               	lsrf	___almod@divisor+3,f
 12679  0A14  0CA2               	rrf	___almod@divisor+2,f
 12680  0A15  0CA1               	rrf	___almod@divisor+1,f
 12681  0A16  0CA0               	rrf	___almod@divisor,f
 12682  0A17  0B89               	decfsz	9,f
 12683  0A18  2A13               	goto	u4085
 12684  0A19  3001               	movlw	1
 12685  0A1A  02A9               	subwf	___almod@counter,f
 12686  0A1B  1D03               	btfss	3,2
 12687  0A1C  29FA               	goto	l5685
 12688  0A1D                     l5693:	
 12689  0A1D  082A               	movf	___almod@sign,w
 12690  0A1E  1903               	btfsc	3,2
 12691  0A1F  2A2B               	goto	l5697
 12692  0A20  09A4               	comf	___almod@dividend,f
 12693  0A21  09A5               	comf	___almod@dividend+1,f
 12694  0A22  09A6               	comf	___almod@dividend+2,f
 12695  0A23  09A7               	comf	___almod@dividend+3,f
 12696  0A24  0AA4               	incf	___almod@dividend,f
 12697  0A25  1903               	skipnz
 12698  0A26  0AA5               	incf	___almod@dividend+1,f
 12699  0A27  1903               	skipnz
 12700  0A28  0AA6               	incf	___almod@dividend+2,f
 12701  0A29  1903               	skipnz
 12702  0A2A  0AA7               	incf	___almod@dividend+3,f
 12703  0A2B                     l5697:	
 12704  0A2B  0827               	movf	___almod@dividend+3,w
 12705  0A2C  00A3               	movwf	?___almod+3
 12706  0A2D  0826               	movf	___almod@dividend+2,w
 12707  0A2E  00A2               	movwf	?___almod+2
 12708  0A2F  0825               	movf	___almod@dividend+1,w
 12709  0A30  00A1               	movwf	?___almod+1
 12710  0A31  0824               	movf	___almod@dividend,w
 12711  0A32  00A0               	movwf	?___almod
 12712  0A33  0008               	return
 12713  0A34                     __end_of___almod:	
 12714                           
 12715                           	psect	text31
 12716  0C03                     __ptext31:	
 12717 ;; *************** function ___aldiv *****************
 12718 ;; Defined at:
 12719 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;  divisor         4    0[BANK0 ] long 
 12722 ;;  dividend        4    4[BANK0 ] long 
 12723 ;; Auto vars:     Size  Location     Type
 12724 ;;  quotient        4   11[BANK0 ] long 
 12725 ;;  sign            1   10[BANK0 ] unsigned char 
 12726 ;;  counter         1    9[BANK0 ] unsigned char 
 12727 ;; Return value:  Size  Location     Type
 12728 ;;                  4    0[BANK0 ] long 
 12729 ;; Registers used:
 12730 ;;		wreg, status,2, status,0
 12731 ;; Tracked objects:
 12732 ;;		On entry : 0/0
 12733 ;;		On exit  : 0/0
 12734 ;;		Unchanged: 0/0
 12735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12736 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12737 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12738 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12739 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;Total ram usage:       15 bytes
 12741 ;; Hardware stack levels used:    1
 12742 ;; Hardware stack levels required when called:    6
 12743 ;; This function calls:
 12744 ;;		Nothing
 12745 ;; This function is called by:
 12746 ;;		_gmtime
 12747 ;; This function uses a non-reentrant model
 12748 ;;
 12749                           
 12750                           
 12751                           ;psect for function ___aldiv
 12752  0C03                     ___aldiv:	
 12753                           
 12754                           ;incstack = 0
 12755                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 12756  0C03  0020               	movlb	0	; select bank0
 12757  0C04  01AA               	clrf	___aldiv@sign
 12758  0C05  1FA3               	btfss	___aldiv@divisor+3,7
 12759  0C06  2C14               	goto	l1036
 12760  0C07  09A0               	comf	___aldiv@divisor,f
 12761  0C08  09A1               	comf	___aldiv@divisor+1,f
 12762  0C09  09A2               	comf	___aldiv@divisor+2,f
 12763  0C0A  09A3               	comf	___aldiv@divisor+3,f
 12764  0C0B  0AA0               	incf	___aldiv@divisor,f
 12765  0C0C  1903               	skipnz
 12766  0C0D  0AA1               	incf	___aldiv@divisor+1,f
 12767  0C0E  1903               	skipnz
 12768  0C0F  0AA2               	incf	___aldiv@divisor+2,f
 12769  0C10  1903               	skipnz
 12770  0C11  0AA3               	incf	___aldiv@divisor+3,f
 12771  0C12  01AA               	clrf	___aldiv@sign
 12772  0C13  0AAA               	incf	___aldiv@sign,f
 12773  0C14                     l1036:	
 12774  0C14  1FA7               	btfss	___aldiv@dividend+3,7
 12775  0C15  2C25               	goto	l5639
 12776  0C16  09A4               	comf	___aldiv@dividend,f
 12777  0C17  09A5               	comf	___aldiv@dividend+1,f
 12778  0C18  09A6               	comf	___aldiv@dividend+2,f
 12779  0C19  09A7               	comf	___aldiv@dividend+3,f
 12780  0C1A  0AA4               	incf	___aldiv@dividend,f
 12781  0C1B  1903               	skipnz
 12782  0C1C  0AA5               	incf	___aldiv@dividend+1,f
 12783  0C1D  1903               	skipnz
 12784  0C1E  0AA6               	incf	___aldiv@dividend+2,f
 12785  0C1F  1903               	skipnz
 12786  0C20  0AA7               	incf	___aldiv@dividend+3,f
 12787  0C21  3001               	movlw	1
 12788  0C22  00A8               	movwf	??___aldiv
 12789  0C23  0828               	movf	??___aldiv,w
 12790  0C24  06AA               	xorwf	___aldiv@sign,f
 12791  0C25                     l5639:	
 12792  0C25  3000               	movlw	0
 12793  0C26  00AE               	movwf	___aldiv@quotient+3
 12794  0C27  3000               	movlw	0
 12795  0C28  00AD               	movwf	___aldiv@quotient+2
 12796  0C29  3000               	movlw	0
 12797  0C2A  00AC               	movwf	___aldiv@quotient+1
 12798  0C2B  3000               	movlw	0
 12799  0C2C  00AB               	movwf	___aldiv@quotient
 12800  0C2D  0823               	movf	___aldiv@divisor+3,w
 12801  0C2E  0422               	iorwf	___aldiv@divisor+2,w
 12802  0C2F  0421               	iorwf	___aldiv@divisor+1,w
 12803  0C30  0420               	iorwf	___aldiv@divisor,w
 12804  0C31  1903               	skipnz
 12805  0C32  2C6E               	goto	l5661
 12806  0C33  01A9               	clrf	___aldiv@counter
 12807  0C34  0AA9               	incf	___aldiv@counter,f
 12808  0C35                     l5647:	
 12809  0C35  1BA3               	btfsc	___aldiv@divisor+3,7
 12810  0C36  2C43               	goto	l5649
 12811  0C37  3001               	movlw	1
 12812  0C38                     u3955:	
 12813  0C38  35A0               	lslf	___aldiv@divisor,f
 12814  0C39  0DA1               	rlf	___aldiv@divisor+1,f
 12815  0C3A  0DA2               	rlf	___aldiv@divisor+2,f
 12816  0C3B  0DA3               	rlf	___aldiv@divisor+3,f
 12817  0C3C  0B89               	decfsz	9,f
 12818  0C3D  2C38               	goto	u3955
 12819  0C3E  3001               	movlw	1
 12820  0C3F  00A8               	movwf	??___aldiv
 12821  0C40  0828               	movf	??___aldiv,w
 12822  0C41  07A9               	addwf	___aldiv@counter,f
 12823  0C42  2C35               	goto	l5647
 12824  0C43                     l5649:	
 12825  0C43  3001               	movlw	1
 12826  0C44                     u3975:	
 12827  0C44  35AB               	lslf	___aldiv@quotient,f
 12828  0C45  0DAC               	rlf	___aldiv@quotient+1,f
 12829  0C46  0DAD               	rlf	___aldiv@quotient+2,f
 12830  0C47  0DAE               	rlf	___aldiv@quotient+3,f
 12831  0C48  0B89               	decfsz	9,f
 12832  0C49  2C44               	goto	u3975
 12833  0C4A  0823               	movf	___aldiv@divisor+3,w
 12834  0C4B  0227               	subwf	___aldiv@dividend+3,w
 12835  0C4C  1D03               	skipz
 12836  0C4D  2C58               	goto	u3985
 12837  0C4E  0822               	movf	___aldiv@divisor+2,w
 12838  0C4F  0226               	subwf	___aldiv@dividend+2,w
 12839  0C50  1D03               	skipz
 12840  0C51  2C58               	goto	u3985
 12841  0C52  0821               	movf	___aldiv@divisor+1,w
 12842  0C53  0225               	subwf	___aldiv@dividend+1,w
 12843  0C54  1D03               	skipz
 12844  0C55  2C58               	goto	u3985
 12845  0C56  0820               	movf	___aldiv@divisor,w
 12846  0C57  0224               	subwf	___aldiv@dividend,w
 12847  0C58                     u3985:	
 12848  0C58  1C03               	skipc
 12849  0C59  2C63               	goto	l5657
 12850  0C5A  0820               	movf	___aldiv@divisor,w
 12851  0C5B  02A4               	subwf	___aldiv@dividend,f
 12852  0C5C  0821               	movf	___aldiv@divisor+1,w
 12853  0C5D  3BA5               	subwfb	___aldiv@dividend+1,f
 12854  0C5E  0822               	movf	___aldiv@divisor+2,w
 12855  0C5F  3BA6               	subwfb	___aldiv@dividend+2,f
 12856  0C60  0823               	movf	___aldiv@divisor+3,w
 12857  0C61  3BA7               	subwfb	___aldiv@dividend+3,f
 12858  0C62  142B               	bsf	___aldiv@quotient,0
 12859  0C63                     l5657:	
 12860  0C63  3001               	movlw	1
 12861  0C64                     u3995:	
 12862  0C64  36A3               	lsrf	___aldiv@divisor+3,f
 12863  0C65  0CA2               	rrf	___aldiv@divisor+2,f
 12864  0C66  0CA1               	rrf	___aldiv@divisor+1,f
 12865  0C67  0CA0               	rrf	___aldiv@divisor,f
 12866  0C68  0B89               	decfsz	9,f
 12867  0C69  2C64               	goto	u3995
 12868  0C6A  3001               	movlw	1
 12869  0C6B  02A9               	subwf	___aldiv@counter,f
 12870  0C6C  1D03               	btfss	3,2
 12871  0C6D  2C43               	goto	l5649
 12872  0C6E                     l5661:	
 12873  0C6E  082A               	movf	___aldiv@sign,w
 12874  0C6F  1903               	btfsc	3,2
 12875  0C70  2C7C               	goto	l5665
 12876  0C71  09AB               	comf	___aldiv@quotient,f
 12877  0C72  09AC               	comf	___aldiv@quotient+1,f
 12878  0C73  09AD               	comf	___aldiv@quotient+2,f
 12879  0C74  09AE               	comf	___aldiv@quotient+3,f
 12880  0C75  0AAB               	incf	___aldiv@quotient,f
 12881  0C76  1903               	skipnz
 12882  0C77  0AAC               	incf	___aldiv@quotient+1,f
 12883  0C78  1903               	skipnz
 12884  0C79  0AAD               	incf	___aldiv@quotient+2,f
 12885  0C7A  1903               	skipnz
 12886  0C7B  0AAE               	incf	___aldiv@quotient+3,f
 12887  0C7C                     l5665:	
 12888  0C7C  082E               	movf	___aldiv@quotient+3,w
 12889  0C7D  00A3               	movwf	?___aldiv+3
 12890  0C7E  082D               	movf	___aldiv@quotient+2,w
 12891  0C7F  00A2               	movwf	?___aldiv+2
 12892  0C80  082C               	movf	___aldiv@quotient+1,w
 12893  0C81  00A1               	movwf	?___aldiv+1
 12894  0C82  082B               	movf	___aldiv@quotient,w
 12895  0C83  00A0               	movwf	?___aldiv
 12896  0C84  0008               	return
 12897  0C85                     __end_of___aldiv:	
 12898                           
 12899                           	psect	text32
 12900  14A1                     __ptext32:	
 12901 ;; *************** function ___lmul *****************
 12902 ;; Defined at:
 12903 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 12904 ;; Parameters:    Size  Location     Type
 12905 ;;  multiplier      4    0[BANK0 ] unsigned long 
 12906 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;  product         4    8[BANK0 ] unsigned long 
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  4    0[BANK0 ] unsigned long 
 12911 ;; Registers used:
 12912 ;;		wreg, status,2, status,0
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12918 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12919 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;Total ram usage:       12 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:    6
 12925 ;; This function calls:
 12926 ;;		Nothing
 12927 ;; This function is called by:
 12928 ;;		_years_to_days
 12929 ;;		_mktime
 12930 ;;		_localtime
 12931 ;; This function uses a non-reentrant model
 12932 ;;
 12933                           
 12934                           
 12935                           ;psect for function ___lmul
 12936  14A1                     ___lmul:	
 12937                           
 12938                           ;incstack = 0
 12939                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 12940  14A1  3000               	movlw	0
 12941  14A2  0020               	movlb	0	; select bank0
 12942  14A3  00AB               	movwf	___lmul@product+3
 12943  14A4  3000               	movlw	0
 12944  14A5  00AA               	movwf	___lmul@product+2
 12945  14A6  3000               	movlw	0
 12946  14A7  00A9               	movwf	___lmul@product+1
 12947  14A8  3000               	movlw	0
 12948  14A9  00A8               	movwf	___lmul@product
 12949  14AA                     l5617:	
 12950  14AA  1C20               	btfss	___lmul@multiplier,0
 12951  14AB  2CB4               	goto	l5621
 12952  14AC  0824               	movf	___lmul@multiplicand,w
 12953  14AD  07A8               	addwf	___lmul@product,f
 12954  14AE  0825               	movf	___lmul@multiplicand+1,w
 12955  14AF  3DA9               	addwfc	___lmul@product+1,f
 12956  14B0  0826               	movf	___lmul@multiplicand+2,w
 12957  14B1  3DAA               	addwfc	___lmul@product+2,f
 12958  14B2  0827               	movf	___lmul@multiplicand+3,w
 12959  14B3  3DAB               	addwfc	___lmul@product+3,f
 12960  14B4                     l5621:	
 12961  14B4  3001               	movlw	1
 12962  14B5                     u3895:	
 12963  14B5  35A4               	lslf	___lmul@multiplicand,f
 12964  14B6  0DA5               	rlf	___lmul@multiplicand+1,f
 12965  14B7  0DA6               	rlf	___lmul@multiplicand+2,f
 12966  14B8  0DA7               	rlf	___lmul@multiplicand+3,f
 12967  14B9  0B89               	decfsz	9,f
 12968  14BA  2CB5               	goto	u3895
 12969  14BB  3001               	movlw	1
 12970  14BC                     u3905:	
 12971  14BC  36A3               	lsrf	___lmul@multiplier+3,f
 12972  14BD  0CA2               	rrf	___lmul@multiplier+2,f
 12973  14BE  0CA1               	rrf	___lmul@multiplier+1,f
 12974  14BF  0CA0               	rrf	___lmul@multiplier,f
 12975  14C0  0B89               	decfsz	9,f
 12976  14C1  2CBC               	goto	u3905
 12977  14C2  0823               	movf	___lmul@multiplier+3,w
 12978  14C3  0422               	iorwf	___lmul@multiplier+2,w
 12979  14C4  0421               	iorwf	___lmul@multiplier+1,w
 12980  14C5  0420               	iorwf	___lmul@multiplier,w
 12981  14C6  1D03               	skipz
 12982  14C7  2CAA               	goto	l5617
 12983  14C8  082B               	movf	___lmul@product+3,w
 12984  14C9  00A3               	movwf	?___lmul+3
 12985  14CA  082A               	movf	___lmul@product+2,w
 12986  14CB  00A2               	movwf	?___lmul+2
 12987  14CC  0829               	movf	___lmul@product+1,w
 12988  14CD  00A1               	movwf	?___lmul+1
 12989  14CE  0828               	movf	___lmul@product,w
 12990  14CF  00A0               	movwf	?___lmul
 12991  14D0  0008               	return
 12992  14D1                     __end_of___lmul:	
 12993                           
 12994                           	psect	text33
 12995  110E                     __ptext33:	
 12996 ;; *************** function _SYSTEM_Initialize *****************
 12997 ;; Defined at:
 12998 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12999 ;; Parameters:    Size  Location     Type
 13000 ;;		None
 13001 ;; Auto vars:     Size  Location     Type
 13002 ;;		None
 13003 ;; Return value:  Size  Location     Type
 13004 ;;                  1    wreg      void 
 13005 ;; Registers used:
 13006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13007 ;; Tracked objects:
 13008 ;;		On entry : 0/0
 13009 ;;		On exit  : 0/0
 13010 ;;		Unchanged: 0/0
 13011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13016 ;;Total ram usage:        0 bytes
 13017 ;; Hardware stack levels used:    1
 13018 ;; Hardware stack levels required when called:   17
 13019 ;; This function calls:
 13020 ;;		_OSCILLATOR_Initialize
 13021 ;;		_PIN_MANAGER_Initialize
 13022 ;;		_PMD_Initialize
 13023 ;;		_SPI2_Initialize
 13024 ;;		_rtc6_Initialize
 13025 ;; This function is called by:
 13026 ;;		_main
 13027 ;; This function uses a non-reentrant model
 13028 ;;
 13029                           
 13030                           
 13031                           ;psect for function _SYSTEM_Initialize
 13032  110E                     _SYSTEM_Initialize:	
 13033                           
 13034                           ;mcc.c: 52: PMD_Initialize();
 13035                           
 13036                           ;incstack = 0
 13037 ;; hardware stack exceeded
 13038                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13039  110E  319F  27E0  3191   	fcall	_PMD_Initialize
 13040                           
 13041                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 13042  1111  3196  2654  3191   	fcall	_PIN_MANAGER_Initialize
 13043                           
 13044                           ;mcc.c: 54: OSCILLATOR_Initialize();
 13045  1114  3190  2025  3191   	fcall	_OSCILLATOR_Initialize
 13046                           
 13047                           ;mcc.c: 55: SPI2_Initialize();
 13048  1117  319F  2791  3191   	fcall	_SPI2_Initialize
 13049                           
 13050                           ;mcc.c: 56: rtc6_Initialize();
 13051  111A  3189  216D         	fcall	_rtc6_Initialize
 13052  111C  0008               	return
 13053  111D                     __end_of_SYSTEM_Initialize:	
 13054                           
 13055                           	psect	text34
 13056  096D                     __ptext34:	
 13057 ;; *************** function _rtc6_Initialize *****************
 13058 ;; Defined at:
 13059 ;;		line 111 in file "mcc_generated_files/RTC6.c"
 13060 ;; Parameters:    Size  Location     Type
 13061 ;;		None
 13062 ;; Auto vars:     Size  Location     Type
 13063 ;;  reg             1   21[BANK0 ] unsigned char 
 13064 ;; Return value:  Size  Location     Type
 13065 ;;                  1    wreg      void 
 13066 ;; Registers used:
 13067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13068 ;; Tracked objects:
 13069 ;;		On entry : 0/0
 13070 ;;		On exit  : 0/0
 13071 ;;		Unchanged: 0/0
 13072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13075 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13076 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13077 ;;Total ram usage:        3 bytes
 13078 ;; Hardware stack levels used:    1
 13079 ;; Hardware stack levels required when called:   16
 13080 ;; This function calls:
 13081 ;;		_rtcc_read
 13082 ;;		_rtcc_write
 13083 ;; This function is called by:
 13084 ;;		_SYSTEM_Initialize
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           
 13089                           ;psect for function _rtc6_Initialize
 13090  096D                     _rtc6_Initialize:	
 13091                           
 13092                           ;RTC6.c: 112: uint8_t reg = 0;
 13093                           
 13094                           ;incstack = 0
 13095 ;; hardware stack exceeded
 13096                           ; Regs used in _rtc6_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13097  096D  0020               	movlb	0	; select bank0
 13098  096E  01B5               	clrf	rtc6_Initialize@reg
 13099                           
 13100                           ;RTC6.c: 114: dateTime.day = (rtcc_read(0x03) & 0x07);
 13101  096F  3003               	movlw	3
 13102  0970  3190  205E  3189   	fcall	_rtcc_read
 13103  0973  3907               	andlw	7
 13104  0974  0020               	movlb	0	; select bank0
 13105  0975  00B3               	movwf	??_rtc6_Initialize
 13106  0976  01B4               	clrf	??_rtc6_Initialize+1
 13107  0977  0833               	movf	??_rtc6_Initialize,w
 13108  0978  0022               	movlb	2	; select bank2
 13109  0979  00AC               	movwf	(_dateTime^(0+256)+12)
 13110  097A  0020               	movlb	0	; select bank0
 13111  097B  0834               	movf	??_rtc6_Initialize+1,w
 13112  097C  0022               	movlb	2	; select bank2
 13113  097D  00AD               	movwf	((_dateTime+1)^(0+256)+12)
 13114                           
 13115                           ;RTC6.c: 115: rtcc_write(0x03, (dateTime.day | 0x08));
 13116  097E  082C               	movf	(_dateTime^(0+256)+12),w
 13117  097F  3808               	iorlw	8
 13118  0980  0020               	movlb	0	; select bank0
 13119  0981  00B3               	movwf	??_rtc6_Initialize
 13120  0982  0833               	movf	??_rtc6_Initialize,w
 13121  0983  00AE               	movwf	rtcc_write@data
 13122  0984  3003               	movlw	3
 13123  0985  3191  2182  3189   	fcall	_rtcc_write
 13124                           
 13125                           ;RTC6.c: 116: dateTime.sec = rtcc_read(0x00);
 13126  0988  3000               	movlw	0
 13127  0989  3190  205E  3189   	fcall	_rtcc_read
 13128  098C  0020               	movlb	0	; select bank0
 13129  098D  00B3               	movwf	??_rtc6_Initialize
 13130  098E  01B4               	clrf	??_rtc6_Initialize+1
 13131  098F  0833               	movf	??_rtc6_Initialize,w
 13132  0990  0022               	movlb	2	; select bank2
 13133  0991  00A0               	movwf	_dateTime^(0+256)
 13134  0992  0020               	movlb	0	; select bank0
 13135  0993  0834               	movf	??_rtc6_Initialize+1,w
 13136  0994  0022               	movlb	2	; select bank2
 13137  0995  00A1               	movwf	(_dateTime+1)^(0+256)
 13138                           
 13139                           ;RTC6.c: 120: rtcc_write(0x07, 0x00 + 0x40 + 0x00);
 13140  0996  3040               	movlw	64
 13141  0997  0020               	movlb	0	; select bank0
 13142  0998  00B3               	movwf	??_rtc6_Initialize
 13143  0999  0833               	movf	??_rtc6_Initialize,w
 13144  099A  00AE               	movwf	rtcc_write@data
 13145  099B  3007               	movlw	7
 13146  099C  3191  2182  3189   	fcall	_rtcc_write
 13147                           
 13148                           ;RTC6.c: 123: rtcc_write(0x00, dateTime.sec | 0x80);
 13149  099F  0022               	movlb	2	; select bank2
 13150  09A0  0820               	movf	_dateTime^(0+256),w
 13151  09A1  3880               	iorlw	128
 13152  09A2  0020               	movlb	0	; select bank0
 13153  09A3  00B3               	movwf	??_rtc6_Initialize
 13154  09A4  0833               	movf	??_rtc6_Initialize,w
 13155  09A5  00AE               	movwf	rtcc_write@data
 13156  09A6  3000               	movlw	0
 13157  09A7  3191  2182  3189   	fcall	_rtcc_write
 13158  09AA                     l8159:	
 13159                           ;RTC6.c: 124: while (!reg) {
 13160                           
 13161  09AA  0020               	movlb	0	; select bank0
 13162  09AB  0835               	movf	rtc6_Initialize@reg,w
 13163  09AC  1D03               	btfss	3,2
 13164  09AD  29BB               	goto	l8161
 13165                           
 13166                           ;RTC6.c: 125: reg = rtcc_read(0x03);
 13167  09AE  3003               	movlw	3
 13168  09AF  3190  205E  3189   	fcall	_rtcc_read
 13169  09B2  0020               	movlb	0	; select bank0
 13170  09B3  00B3               	movwf	??_rtc6_Initialize
 13171  09B4  0833               	movf	??_rtc6_Initialize,w
 13172  09B5  00B5               	movwf	rtc6_Initialize@reg
 13173                           
 13174                           ;RTC6.c: 126: reg &= 0x20;
 13175  09B6  3020               	movlw	32
 13176  09B7  00B3               	movwf	??_rtc6_Initialize
 13177  09B8  0833               	movf	??_rtc6_Initialize,w
 13178  09B9  05B5               	andwf	rtc6_Initialize@reg,f
 13179  09BA  29AA               	goto	l8159
 13180  09BB                     l8161:	
 13181                           
 13182                           ;RTC6.c: 127: }
 13183                           ;RTC6.c: 130: rtcc_write(0x03, dateTime.day | (0x08 & 0xEF));
 13184  09BB  0022               	movlb	2	; select bank2
 13185  09BC  082C               	movf	(_dateTime^(0+256)+12),w
 13186  09BD  3808               	iorlw	8
 13187  09BE  0020               	movlb	0	; select bank0
 13188  09BF  00B3               	movwf	??_rtc6_Initialize
 13189  09C0  0833               	movf	??_rtc6_Initialize,w
 13190  09C1  00AE               	movwf	rtcc_write@data
 13191  09C2  3003               	movlw	3
 13192  09C3  3191  2182         	fcall	_rtcc_write
 13193  09C5  0008               	return
 13194  09C6                     __end_of_rtc6_Initialize:	
 13195                           
 13196                           	psect	text35
 13197  1182                     __ptext35:	
 13198 ;; *************** function _rtcc_write *****************
 13199 ;; Defined at:
 13200 ;;		line 106 in file "mcc_generated_files/RTC6.c"
 13201 ;; Parameters:    Size  Location     Type
 13202 ;;  addr            1    wreg     unsigned char 
 13203 ;;  data            1   14[BANK0 ] unsigned char 
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;  addr            1   17[BANK0 ] unsigned char 
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1    wreg      void 
 13208 ;; Registers used:
 13209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/0
 13212 ;;		On exit  : 0/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13215 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13218 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13219 ;;Total ram usage:        4 bytes
 13220 ;; Hardware stack levels used:    1
 13221 ;; Hardware stack levels required when called:   15
 13222 ;; This function calls:
 13223 ;;		_i2c_write1ByteRegister
 13224 ;; This function is called by:
 13225 ;;		_rtc6_Initialize
 13226 ;;		_rtc6_SetComponent
 13227 ;;		_rtc6_EnableAlarms
 13228 ;;		_rtc6_SetAlarm0
 13229 ;;		_rtc6_ClearAlarm0
 13230 ;;		_rtc6_SetAlarm1
 13231 ;;		_rtc6_ClearAlarm1
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           
 13236                           ;psect for function _rtcc_write
 13237  1182                     _rtcc_write:	
 13238                           
 13239                           ;incstack = 0
 13240 ;; hardware stack exceeded
 13241                           ; Regs used in _rtcc_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13242                           ;rtcc_write@addr stored from wreg
 13243  1182  0020               	movlb	0	; select bank0
 13244  1183  00B1               	movwf	rtcc_write@addr
 13245                           
 13246                           ;RTC6.c: 107: i2c_write1ByteRegister(0x6F, addr, data);
 13247  1184  0831               	movf	rtcc_write@addr,w
 13248  1185  00AF               	movwf	??_rtcc_write
 13249  1186  082F               	movf	??_rtcc_write,w
 13250  1187  00AA               	movwf	i2c_write1ByteRegister@reg
 13251  1188  082E               	movf	rtcc_write@data,w
 13252  1189  00B0               	movwf	??_rtcc_write+1
 13253  118A  0830               	movf	??_rtcc_write+1,w
 13254  118B  00AB               	movwf	i2c_write1ByteRegister@data
 13255  118C  306F               	movlw	111
 13256  118D  3194  24D1  3191   	fcall	_i2c_write1ByteRegister
 13257                           
 13258                           ;RTC6.c: 108: _delay((unsigned long)((5)*(1000000/4000.0)));
 13259  1190  30FA               	movlw	250
 13260  1191                     u6747:	
 13261  1191  3200               	nop2
 13262  1192  0B89               	decfsz	9,f
 13263  1193  2991               	goto	u6747
 13264  1194  0008               	return
 13265  1195                     __end_of_rtcc_write:	
 13266                           
 13267                           	psect	text36
 13268  14D1                     __ptext36:	
 13269 ;; *************** function _i2c_write1ByteRegister *****************
 13270 ;; Defined at:
 13271 ;;		line 38 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;  address         1    wreg     unsigned char 
 13274 ;;  reg             1   10[BANK0 ] unsigned char 
 13275 ;;  data            1   11[BANK0 ] unsigned char 
 13276 ;; Auto vars:     Size  Location     Type
 13277 ;;  address         1   13[BANK0 ] unsigned char 
 13278 ;; Return value:  Size  Location     Type
 13279 ;;                  1    wreg      void 
 13280 ;; Registers used:
 13281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13282 ;; Tracked objects:
 13283 ;;		On entry : 0/0
 13284 ;;		On exit  : 0/0
 13285 ;;		Unchanged: 0/0
 13286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13290 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13291 ;;Total ram usage:        4 bytes
 13292 ;; Hardware stack levels used:    1
 13293 ;; Hardware stack levels required when called:   14
 13294 ;; This function calls:
 13295 ;;		_i2c_close
 13296 ;;		_i2c_masterWrite
 13297 ;;		_i2c_open
 13298 ;;		_i2c_setAddressNACKCallback
 13299 ;;		_i2c_setBuffer
 13300 ;;		_i2c_setDataCompleteCallback
 13301 ;; This function is called by:
 13302 ;;		_rtcc_write
 13303 ;;		_rtc6_EEPRWriteLatchEnable
 13304 ;;		_rtc6_EEPRWriteLatchDisable
 13305 ;;		_rtc6_WriteByteEEPROM
 13306 ;; This function uses a non-reentrant model
 13307 ;;
 13308                           
 13309                           
 13310                           ;psect for function _i2c_write1ByteRegister
 13311  14D1                     _i2c_write1ByteRegister:	
 13312                           
 13313                           ;incstack = 0
 13314 ;; hardware stack exceeded
 13315                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13316                           ;i2c_write1ByteRegister@address stored from wreg
 13317  14D1  0020               	movlb	0	; select bank0
 13318  14D2  00AD               	movwf	i2c_write1ByteRegister@address
 13319  14D3                     l8121:	
 13320                           ;i2c_simple_master.c: 40: while(!i2c_open(address));
 13321                           
 13322  14D3  0020               	movlb	0	; select bank0
 13323  14D4  082D               	movf	i2c_write1ByteRegister@address,w
 13324  14D5  3197  27B2  3194   	fcall	_i2c_open
 13325  14D8  3A00               	xorlw	0
 13326  14D9  1903               	skipnz
 13327  14DA  2CD3               	goto	l8121
 13328                           
 13329                           ;i2c_simple_master.c: 41: i2c_setDataCompleteCallback(wr1RegCompleteHandler,&data);
 13330  14DB  30C0               	movlw	low _wr1RegCompleteHandler
 13331  14DC  0020               	movlb	0	; select bank0
 13332  14DD  00A5               	movwf	i2c_setDataCompleteCallback@cb
 13333  14DE  3011               	movlw	high _wr1RegCompleteHandler
 13334  14DF  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 13335  14E0  302B               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 13336  14E1  00AC               	movwf	??_i2c_write1ByteRegister
 13337  14E2  082C               	movf	??_i2c_write1ByteRegister,w
 13338  14E3  00A7               	movwf	i2c_setDataCompleteCallback@p
 13339  14E4  3190  20E6  3194   	fcall	_i2c_setDataCompleteCallback
 13340                           
 13341                           ;i2c_simple_master.c: 42: i2c_setBuffer(&reg,1);
 13342  14E7  3001               	movlw	1
 13343  14E8  0020               	movlb	0	; select bank0
 13344  14E9  00A0               	movwf	i2c_setBuffer@bufferSize
 13345  14EA  3000               	movlw	0
 13346  14EB  00A1               	movwf	i2c_setBuffer@bufferSize+1
 13347  14EC  302A               	movlw	(low (i2c_write1ByteRegister@reg| 0))& (0+255)
 13348  14ED  3191  2195  3194   	fcall	_i2c_setBuffer
 13349                           
 13350                           ;i2c_simple_master.c: 43: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 13351  14F0  30A3               	movlw	low _i2c_restartWrite
 13352  14F1  0020               	movlb	0	; select bank0
 13353  14F2  00A5               	movwf	i2c_setAddressNACKCallback@cb
 13354  14F3  301F               	movlw	high _i2c_restartWrite
 13355  14F4  00A6               	movwf	i2c_setAddressNACKCallback@cb+1
 13356  14F5  01A7               	clrf	i2c_setAddressNACKCallback@p
 13357  14F6  3190  20F3  3194   	fcall	_i2c_setAddressNACKCallback
 13358                           
 13359                           ;i2c_simple_master.c: 44: i2c_masterWrite();
 13360  14F9  319F  2782  3194   	fcall	_i2c_masterWrite
 13361  14FC                     l8131:	
 13362                           ;i2c_simple_master.c: 45: while(I2C_BUSY == i2c_close());
 13363                           
 13364  14FC  3192  2231  3194   	fcall	_i2c_close
 13365  14FF  3A01               	xorlw	1
 13366  1500  1D03               	btfss	3,2
 13367  1501  0008               	return
 13368  1502  2CFC               	goto	l8131
 13369  1503                     __end_of_i2c_write1ByteRegister:	
 13370                           
 13371                           	psect	text37
 13372  105E                     __ptext37:	
 13373 ;; *************** function _rtcc_read *****************
 13374 ;; Defined at:
 13375 ;;		line 102 in file "mcc_generated_files/RTC6.c"
 13376 ;; Parameters:    Size  Location     Type
 13377 ;;  addr            1    wreg     unsigned char 
 13378 ;; Auto vars:     Size  Location     Type
 13379 ;;  addr            1   18[BANK0 ] unsigned char 
 13380 ;; Return value:  Size  Location     Type
 13381 ;;                  1    wreg      unsigned char 
 13382 ;; Registers used:
 13383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13384 ;; Tracked objects:
 13385 ;;		On entry : 0/0
 13386 ;;		On exit  : 0/0
 13387 ;;		Unchanged: 0/0
 13388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13391 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;Total ram usage:        2 bytes
 13394 ;; Hardware stack levels used:    1
 13395 ;; Hardware stack levels required when called:   15
 13396 ;; This function calls:
 13397 ;;		_i2c_read1ByteRegister
 13398 ;; This function is called by:
 13399 ;;		_rtc6_Initialize
 13400 ;;		_rtc6_SetComponent
 13401 ;;		_rtc6_GetComponent
 13402 ;;		_rtc6_EnableAlarms
 13403 ;;		_rtc6_ClearAlarm0
 13404 ;;		_rtc6_ClearAlarm1
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           
 13409                           ;psect for function _rtcc_read
 13410  105E                     _rtcc_read:	
 13411                           
 13412                           ;incstack = 0
 13413 ;; hardware stack exceeded
 13414                           ; Regs used in _rtcc_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13415                           ;rtcc_read@addr stored from wreg
 13416  105E  0020               	movlb	0	; select bank0
 13417  105F  00B2               	movwf	rtcc_read@addr
 13418                           
 13419                           ;RTC6.c: 103: return i2c_read1ByteRegister(0x6F, addr);
 13420  1060  0832               	movf	rtcc_read@addr,w
 13421  1061  00B1               	movwf	??_rtcc_read
 13422  1062  0831               	movf	??_rtcc_read,w
 13423  1063  00AA               	movwf	i2c_read1ByteRegister@reg
 13424  1064  306F               	movlw	111
 13425  1065  3188  2026         	fcall	_i2c_read1ByteRegister
 13426  1067  0008               	return
 13427  1068                     __end_of_rtcc_read:	
 13428                           
 13429                           	psect	text38
 13430  0826                     __ptext38:	
 13431 ;; *************** function _i2c_read1ByteRegister *****************
 13432 ;; Defined at:
 13433 ;;		line 65 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;  address         1    wreg     unsigned char 
 13436 ;;  reg             1   10[BANK0 ] unsigned char 
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;  address         1   12[BANK0 ] unsigned char 
 13439 ;;  x               2   14[BANK0 ] int 
 13440 ;;  d2              1   16[BANK0 ] unsigned char 
 13441 ;;  e               1   13[BANK0 ] enum E92
 13442 ;; Return value:  Size  Location     Type
 13443 ;;                  1    wreg      unsigned char 
 13444 ;; Registers used:
 13445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13446 ;; Tracked objects:
 13447 ;;		On entry : 0/0
 13448 ;;		On exit  : 0/0
 13449 ;;		Unchanged: 0/0
 13450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13451 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13452 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13453 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13454 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13455 ;;Total ram usage:        7 bytes
 13456 ;; Hardware stack levels used:    1
 13457 ;; Hardware stack levels required when called:   14
 13458 ;; This function calls:
 13459 ;;		_i2c_close
 13460 ;;		_i2c_masterWrite
 13461 ;;		_i2c_open
 13462 ;;		_i2c_setAddressNACKCallback
 13463 ;;		_i2c_setBuffer
 13464 ;;		_i2c_setDataCompleteCallback
 13465 ;; This function is called by:
 13466 ;;		_rtcc_read
 13467 ;;		_rtc6_EEPRReadStatusRegister
 13468 ;;		_rtc6_ReadByteEEPROM
 13469 ;; This function uses a non-reentrant model
 13470 ;;
 13471                           
 13472                           
 13473                           ;psect for function _i2c_read1ByteRegister
 13474  0826                     _i2c_read1ByteRegister:	
 13475                           
 13476                           ;incstack = 0
 13477 ;; hardware stack exceeded
 13478                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13479                           ;i2c_read1ByteRegister@address stored from wreg
 13480  0826  0020               	movlb	0	; select bank0
 13481  0827  00AC               	movwf	i2c_read1ByteRegister@address
 13482                           
 13483                           ;i2c_simple_master.c: 67: uint8_t d2=42;
 13484  0828  302A               	movlw	42
 13485  0829  00AB               	movwf	??_i2c_read1ByteRegister
 13486  082A  082B               	movf	??_i2c_read1ByteRegister,w
 13487  082B  00B0               	movwf	i2c_read1ByteRegister@d2
 13488                           
 13489                           ;i2c_simple_master.c: 68: i2c_error_t e;
 13490                           ;i2c_simple_master.c: 69: int x;
 13491                           ;i2c_simple_master.c: 71: for(x = 2; x != 0; x--)
 13492  082C  3002               	movlw	2
 13493  082D  00AE               	movwf	i2c_read1ByteRegister@x
 13494  082E  3000               	movlw	0
 13495  082F  00AF               	movwf	i2c_read1ByteRegister@x+1
 13496  0830  082E               	movf	i2c_read1ByteRegister@x,w
 13497  0831  042F               	iorwf	i2c_read1ByteRegister@x+1,w
 13498  0832  1903               	btfsc	3,2
 13499  0833  2872               	goto	l8115
 13500  0834                     l8095:	
 13501                           ;i2c_simple_master.c: 72: {
 13502                           ;i2c_simple_master.c: 73: while(!i2c_open(address));
 13503                           
 13504  0834  0020               	movlb	0	; select bank0
 13505  0835  082C               	movf	i2c_read1ByteRegister@address,w
 13506  0836  3197  27B2  3188   	fcall	_i2c_open
 13507  0839  3A00               	xorlw	0
 13508  083A  1903               	skipnz
 13509  083B  2834               	goto	l8095
 13510                           
 13511                           ;i2c_simple_master.c: 74: i2c_setDataCompleteCallback(rd1RegCompleteHandler,&d2);
 13512  083C  30D6               	movlw	low _rd1RegCompleteHandler
 13513  083D  0020               	movlb	0	; select bank0
 13514  083E  00A5               	movwf	i2c_setDataCompleteCallback@cb
 13515  083F  3011               	movlw	high _rd1RegCompleteHandler
 13516  0840  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 13517  0841  3030               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 13518  0842  00AB               	movwf	??_i2c_read1ByteRegister
 13519  0843  082B               	movf	??_i2c_read1ByteRegister,w
 13520  0844  00A7               	movwf	i2c_setDataCompleteCallback@p
 13521  0845  3190  20E6  3188   	fcall	_i2c_setDataCompleteCallback
 13522                           
 13523                           ;i2c_simple_master.c: 75: i2c_setBuffer(&reg,1);
 13524  0848  3001               	movlw	1
 13525  0849  0020               	movlb	0	; select bank0
 13526  084A  00A0               	movwf	i2c_setBuffer@bufferSize
 13527  084B  3000               	movlw	0
 13528  084C  00A1               	movwf	i2c_setBuffer@bufferSize+1
 13529  084D  302A               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 13530  084E  3191  2195  3188   	fcall	_i2c_setBuffer
 13531                           
 13532                           ;i2c_simple_master.c: 76: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 13533  0851  30A3               	movlw	low _i2c_restartWrite
 13534  0852  0020               	movlb	0	; select bank0
 13535  0853  00A5               	movwf	i2c_setAddressNACKCallback@cb
 13536  0854  301F               	movlw	high _i2c_restartWrite
 13537  0855  00A6               	movwf	i2c_setAddressNACKCallback@cb+1
 13538  0856  01A7               	clrf	i2c_setAddressNACKCallback@p
 13539  0857  3190  20F3  3188   	fcall	_i2c_setAddressNACKCallback
 13540                           
 13541                           ;i2c_simple_master.c: 77: i2c_masterWrite();
 13542  085A  319F  2782  3188   	fcall	_i2c_masterWrite
 13543  085D                     l8105:	
 13544                           ;i2c_simple_master.c: 78: while(I2C_BUSY == (e = i2c_close()));
 13545                           
 13546  085D  3192  2231  3188   	fcall	_i2c_close
 13547  0860  0020               	movlb	0	; select bank0
 13548  0861  00AB               	movwf	??_i2c_read1ByteRegister
 13549  0862  082B               	movf	??_i2c_read1ByteRegister,w
 13550  0863  00AD               	movwf	i2c_read1ByteRegister@e
 13551  0864  032D               	decf	i2c_read1ByteRegister@e,w
 13552  0865  1903               	btfsc	3,2
 13553  0866  285D               	goto	l8105
 13554                           
 13555                           ;i2c_simple_master.c: 79: if(e==I2C_NOERR) break;
 13556  0867  082D               	movf	i2c_read1ByteRegister@e,w
 13557  0868  1903               	btfsc	3,2
 13558  0869  2872               	goto	l8115
 13559  086A  30FF               	movlw	255
 13560  086B  07AE               	addwf	i2c_read1ByteRegister@x,f
 13561  086C  30FF               	movlw	255
 13562  086D  3DAF               	addwfc	i2c_read1ByteRegister@x+1,f
 13563  086E  082E               	movf	i2c_read1ByteRegister@x,w
 13564  086F  042F               	iorwf	i2c_read1ByteRegister@x+1,w
 13565  0870  1D03               	btfss	3,2
 13566  0871  2834               	goto	l8095
 13567  0872                     l8115:	
 13568                           
 13569                           ;i2c_simple_master.c: 80: }
 13570                           ;i2c_simple_master.c: 83: return d2;
 13571  0872  0830               	movf	i2c_read1ByteRegister@d2,w
 13572  0873  0008               	return
 13573  0874                     __end_of_i2c_read1ByteRegister:	
 13574                           
 13575                           	psect	text39
 13576  10F3                     __ptext39:	
 13577 ;; *************** function _i2c_setAddressNACKCallback *****************
 13578 ;; Defined at:
 13579 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
 13580 ;; Parameters:    Size  Location     Type
 13581 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 13582 ;;		 -> i2c_restartWrite(1), 
 13583 ;;  p               1    7[BANK0 ] PTR void 
 13584 ;;		 -> NULL(0), 
 13585 ;; Auto vars:     Size  Location     Type
 13586 ;;		None
 13587 ;; Return value:  Size  Location     Type
 13588 ;;                  1    wreg      void 
 13589 ;; Registers used:
 13590 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13591 ;; Tracked objects:
 13592 ;;		On entry : 0/0
 13593 ;;		On exit  : 0/0
 13594 ;;		Unchanged: 0/0
 13595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13596 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13599 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;Total ram usage:        4 bytes
 13601 ;; Hardware stack levels used:    1
 13602 ;; Hardware stack levels required when called:    7
 13603 ;; This function calls:
 13604 ;;		_setCallBack
 13605 ;; This function is called by:
 13606 ;;		_i2c_write1ByteRegister
 13607 ;;		_i2c_read1ByteRegister
 13608 ;;		_i2c_writeNBytes
 13609 ;;		_i2c_read2ByteRegister
 13610 ;;		_i2c_write2ByteRegister
 13611 ;;		_i2c_readDataBlock
 13612 ;; This function uses a non-reentrant model
 13613 ;;
 13614                           
 13615                           
 13616                           ;psect for function _i2c_setAddressNACKCallback
 13617  10F3                     _i2c_setAddressNACKCallback:	
 13618                           
 13619                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
 13620                           
 13621                           ;incstack = 0
 13622                           ; Regs used in _i2c_setAddressNACKCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 13623  10F3  0020               	movlb	0	; select bank0
 13624  10F4  0826               	movf	i2c_setAddressNACKCallback@cb+1,w
 13625  10F5  00A1               	movwf	setCallBack@cb+1
 13626  10F6  0825               	movf	i2c_setAddressNACKCallback@cb,w
 13627  10F7  00A0               	movwf	setCallBack@cb
 13628  10F8  0827               	movf	i2c_setAddressNACKCallback@p,w
 13629  10F9  00A8               	movwf	??_i2c_setAddressNACKCallback
 13630  10FA  0828               	movf	??_i2c_setAddressNACKCallback,w
 13631  10FB  00A2               	movwf	setCallBack@p
 13632  10FC  3002               	movlw	2
 13633  10FD  3193  2346         	fcall	_setCallBack
 13634  10FF  0008               	return
 13635  1100                     __end_of_i2c_setAddressNACKCallback:	
 13636                           
 13637                           	psect	text40
 13638  17B2                     __ptext40:	
 13639 ;; *************** function _i2c_open *****************
 13640 ;; Defined at:
 13641 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 13642 ;; Parameters:    Size  Location     Type
 13643 ;;  address         1    wreg     unsigned char 
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;  address         1    3[BANK0 ] unsigned char 
 13646 ;;  ret             1    4[BANK0 ] enum E15138
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  1    wreg      enum E15138
 13649 ;; Registers used:
 13650 ;;		wreg, status,2, status,0, pclath, cstack
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13658 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13660 ;;Total ram usage:        3 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:    7
 13663 ;; This function calls:
 13664 ;;		_i2c1_driver_open
 13665 ;;		_i2c1_driver_setBusCollisionISR
 13666 ;;		_i2c1_driver_setI2cISR
 13667 ;;		_mssp1_clearIRQ
 13668 ;; This function is called by:
 13669 ;;		_i2c_write1ByteRegister
 13670 ;;		_i2c_read1ByteRegister
 13671 ;;		_i2c_writeNBytes
 13672 ;;		_i2c_read2ByteRegister
 13673 ;;		_i2c_write2ByteRegister
 13674 ;;		_i2c_readDataBlock
 13675 ;;		_i2c_readNBytes
 13676 ;; This function uses a non-reentrant model
 13677 ;;
 13678                           
 13679                           
 13680                           ;psect for function _i2c_open
 13681  17B2                     _i2c_open:	
 13682                           
 13683                           ;incstack = 0
 13684                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 13685                           ;i2c_open@address stored from wreg
 13686  17B2  0020               	movlb	0	; select bank0
 13687  17B3  00A3               	movwf	i2c_open@address
 13688                           
 13689                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 13690  17B4  01A4               	clrf	i2c_open@ret
 13691  17B5  0AA4               	incf	i2c_open@ret,f
 13692                           
 13693                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 13694  17B6  0021               	movlb	1	; select bank1
 13695  17B7  18A0               	btfsc	_i2c_status^(0+128),1
 13696  17B8  2FFD               	goto	l217
 13697                           
 13698                           ;i2c_master.c: 121: {
 13699                           ;i2c_master.c: 122: i2c_status.address = address;
 13700  17B9  0020               	movlb	0	; select bank0
 13701  17BA  0823               	movf	i2c_open@address,w
 13702  17BB  00A2               	movwf	??_i2c_open
 13703  17BC  0822               	movf	??_i2c_open,w
 13704  17BD  0021               	movlb	1	; select bank1
 13705  17BE  00A1               	movwf	(_i2c_status^(0+128)+1)
 13706                           
 13707                           ;i2c_master.c: 123: i2c_status.busy = 0;
 13708  17BF  1020               	bcf	_i2c_status^(0+128),0
 13709                           
 13710                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 13711  17C0  14A0               	bsf	_i2c_status^(0+128),1
 13712                           
 13713                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 13714  17C1  11A0               	bcf	_i2c_status^(0+128),3
 13715                           
 13716                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 13717  17C2  300E               	movlw	14
 13718  17C3  0020               	movlb	0	; select bank0
 13719  17C4  00A2               	movwf	??_i2c_open
 13720  17C5  0822               	movf	??_i2c_open,w
 13721  17C6  0021               	movlb	1	; select bank1
 13722  17C7  00A9               	movwf	(_i2c_status^(0+128)+9)
 13723                           
 13724                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 13725  17C8  30F4               	movlw	244
 13726  17C9  00A7               	movwf	(_i2c_status^(0+128)+7)
 13727  17CA  3001               	movlw	1
 13728  17CB  00A8               	movwf	(_i2c_status^(0+128)+8)
 13729                           
 13730                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 13731  17CC  1520               	bsf	_i2c_status^(0+128),2
 13732                           
 13733                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 13734  17CD  3097               	movlw	low _returnStop
 13735  17CE  00AB               	movwf	(low ((_i2c_status| 0+11)))^(0+128)
 13736  17CF  301F               	movlw	high _returnStop
 13737  17D0  00AC               	movwf	((low ((_i2c_status| 0+11)))^(0+128)+1)
 13738                           
 13739                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 13740  17D1  01B7               	clrf	(low ((_i2c_status| 0+23)))^(0+128)
 13741                           
 13742                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 13743  17D2  3097               	movlw	low _returnStop
 13744  17D3  00AD               	movwf	(low ((_i2c_status| 0+13)))^(0+128)
 13745  17D4  301F               	movlw	high _returnStop
 13746  17D5  00AE               	movwf	((low ((_i2c_status| 0+13)))^(0+128)+1)
 13747                           
 13748                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 13749  17D6  01B8               	clrf	(low ((_i2c_status| 0+24)))^(0+128)
 13750                           
 13751                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 13752  17D7  3097               	movlw	low _returnStop
 13753  17D8  00AF               	movwf	(low ((_i2c_status| 0+15)))^(0+128)
 13754  17D9  301F               	movlw	high _returnStop
 13755  17DA  00B0               	movwf	((low ((_i2c_status| 0+15)))^(0+128)+1)
 13756                           
 13757                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 13758  17DB  01B9               	clrf	(low ((_i2c_status| 0+25)))^(0+128)
 13759                           
 13760                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 13761  17DC  3097               	movlw	low _returnStop
 13762  17DD  00B1               	movwf	(low ((_i2c_status| 0+17)))^(0+128)
 13763  17DE  301F               	movlw	high _returnStop
 13764  17DF  00B2               	movwf	((low ((_i2c_status| 0+17)))^(0+128)+1)
 13765                           
 13766                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 13767  17E0  01BA               	clrf	(low ((_i2c_status| 0+26)))^(0+128)
 13768                           
 13769                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 13770  17E1  309D               	movlw	low _returnReset
 13771  17E2  00B3               	movwf	(low ((_i2c_status| 0+19)))^(0+128)
 13772  17E3  301F               	movlw	high _returnReset
 13773  17E4  00B4               	movwf	((low ((_i2c_status| 0+19)))^(0+128)+1)
 13774                           
 13775                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 13776  17E5  01BB               	clrf	(low ((_i2c_status| 0+27)))^(0+128)
 13777                           
 13778                           ;i2c_master.c: 142: i2c1_driver_open();
 13779  17E6  3190  2054  3197   	fcall	_i2c1_driver_open
 13780                           
 13781                           ;i2c_master.c: 143: mssp1_clearIRQ();
 13782  17E9  319F  273E  3197   	fcall	_mssp1_clearIRQ
 13783                           
 13784                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 13785  17EC  3029               	movlw	low _i2c_busCollisionISR
 13786  17ED  0020               	movlb	0	; select bank0
 13787  17EE  00A0               	movwf	i2c1_driver_setBusCollisionISR@f
 13788  17EF  301F               	movlw	high _i2c_busCollisionISR
 13789  17F0  00A1               	movwf	i2c1_driver_setBusCollisionISR@f+1
 13790  17F1  319F  27AF  3197   	fcall	_i2c1_driver_setBusCollisionISR
 13791                           
 13792                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 13793  17F4  30EA               	movlw	low _i2c_ISR
 13794  17F5  0020               	movlb	0	; select bank0
 13795  17F6  00A0               	movwf	i2c1_driver_setI2cISR@f
 13796  17F7  3013               	movlw	high _i2c_ISR
 13797  17F8  00A1               	movwf	i2c1_driver_setI2cISR@f+1
 13798  17F9  319F  27B5         	fcall	_i2c1_driver_setI2cISR
 13799                           
 13800                           ;i2c_master.c: 151: ret = I2C_NOERR;
 13801  17FB  0020               	movlb	0	; select bank0
 13802  17FC  01A4               	clrf	i2c_open@ret
 13803  17FD                     l217:	
 13804                           
 13805                           ;i2c_master.c: 152: }
 13806                           ;i2c_master.c: 153: return ret;
 13807  17FD  0020               	movlb	0	; select bank0
 13808  17FE  0824               	movf	i2c_open@ret,w
 13809  17FF  0008               	return
 13810  1800                     __end_of_i2c_open:	
 13811                           
 13812                           	psect	text41
 13813  1FB5                     __ptext41:	
 13814 ;; *************** function _i2c1_driver_setI2cISR *****************
 13815 ;; Defined at:
 13816 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;  f               2    0[BANK0 ] PTR void 
 13819 ;;		 -> i2c_ISR(1), 
 13820 ;; Auto vars:     Size  Location     Type
 13821 ;;		None
 13822 ;; Return value:  Size  Location     Type
 13823 ;;                  1    wreg      void 
 13824 ;; Registers used:
 13825 ;;		wreg
 13826 ;; Tracked objects:
 13827 ;;		On entry : 0/0
 13828 ;;		On exit  : 0/0
 13829 ;;		Unchanged: 0/0
 13830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13835 ;;Total ram usage:        2 bytes
 13836 ;; Hardware stack levels used:    1
 13837 ;; Hardware stack levels required when called:    6
 13838 ;; This function calls:
 13839 ;;		Nothing
 13840 ;; This function is called by:
 13841 ;;		_i2c_open
 13842 ;; This function uses a non-reentrant model
 13843 ;;
 13844                           
 13845                           
 13846                           ;psect for function _i2c1_driver_setI2cISR
 13847  1FB5                     _i2c1_driver_setI2cISR:	
 13848                           
 13849                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 13850                           
 13851                           ;incstack = 0
 13852                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 13853  1FB5  0020               	movlb	0	; select bank0
 13854  1FB6  0821               	movf	i2c1_driver_setI2cISR@f+1,w
 13855  1FB7  00FB               	movwf	_i2c1_driver_i2cISR+1
 13856  1FB8  0820               	movf	i2c1_driver_setI2cISR@f,w
 13857  1FB9  00FA               	movwf	_i2c1_driver_i2cISR
 13858  1FBA  0008               	return
 13859  1FBB                     __end_of_i2c1_driver_setI2cISR:	
 13860                           
 13861                           	psect	text42
 13862  1FAF                     __ptext42:	
 13863 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 13864 ;; Defined at:
 13865 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 13866 ;; Parameters:    Size  Location     Type
 13867 ;;  f               2    0[BANK0 ] PTR void 
 13868 ;;		 -> i2c_busCollisionISR(1), 
 13869 ;; Auto vars:     Size  Location     Type
 13870 ;;		None
 13871 ;; Return value:  Size  Location     Type
 13872 ;;                  1    wreg      void 
 13873 ;; Registers used:
 13874 ;;		wreg
 13875 ;; Tracked objects:
 13876 ;;		On entry : 0/0
 13877 ;;		On exit  : 0/0
 13878 ;;		Unchanged: 0/0
 13879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13880 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13883 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13884 ;;Total ram usage:        2 bytes
 13885 ;; Hardware stack levels used:    1
 13886 ;; Hardware stack levels required when called:    6
 13887 ;; This function calls:
 13888 ;;		Nothing
 13889 ;; This function is called by:
 13890 ;;		_i2c_open
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           
 13894                           
 13895                           ;psect for function _i2c1_driver_setBusCollisionISR
 13896  1FAF                     _i2c1_driver_setBusCollisionISR:	
 13897                           
 13898                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 13899                           
 13900                           ;incstack = 0
 13901                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 13902  1FAF  0020               	movlb	0	; select bank0
 13903  1FB0  0821               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 13904  1FB1  00FD               	movwf	_i2c1_driver_busCollisionISR+1
 13905  1FB2  0820               	movf	i2c1_driver_setBusCollisionISR@f,w
 13906  1FB3  00FC               	movwf	_i2c1_driver_busCollisionISR
 13907  1FB4  0008               	return
 13908  1FB5                     __end_of_i2c1_driver_setBusCollisionISR:	
 13909                           
 13910                           	psect	text43
 13911  1054                     __ptext43:	
 13912 ;; *************** function _i2c1_driver_open *****************
 13913 ;; Defined at:
 13914 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 13915 ;; Parameters:    Size  Location     Type
 13916 ;;		None
 13917 ;; Auto vars:     Size  Location     Type
 13918 ;;		None
 13919 ;; Return value:  Size  Location     Type
 13920 ;;		None               void
 13921 ;; Registers used:
 13922 ;;		wreg, status,2
 13923 ;; Tracked objects:
 13924 ;;		On entry : 0/0
 13925 ;;		On exit  : 0/0
 13926 ;;		Unchanged: 0/0
 13927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13932 ;;Total ram usage:        0 bytes
 13933 ;; Hardware stack levels used:    1
 13934 ;; Hardware stack levels required when called:    6
 13935 ;; This function calls:
 13936 ;;		Nothing
 13937 ;; This function is called by:
 13938 ;;		_i2c_open
 13939 ;; This function uses a non-reentrant model
 13940 ;;
 13941                           
 13942                           
 13943                           ;psect for function _i2c1_driver_open
 13944  1054                     _i2c1_driver_open:	
 13945                           
 13946                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 13947                           
 13948                           ;incstack = 0
 13949                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 13950  1054  0023               	movlb	3	; select bank3
 13951  1055  1A90               	btfsc	16,5	;volatile
 13952  1056  0008               	return
 13953                           
 13954                           ;i2c1_driver.c: 86: {
 13955                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 13956  1057  018F               	clrf	15	;volatile
 13957                           
 13958                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 13959  1058  3028               	movlw	40
 13960  1059  0090               	movwf	16	;volatile
 13961                           
 13962                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 13963  105A  0191               	clrf	17	;volatile
 13964                           
 13965                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 13966  105B  3003               	movlw	3
 13967  105C  008D               	movwf	13	;volatile
 13968                           
 13969                           ;i2c1_driver.c: 93: else
 13970                           ;i2c1_driver.c: 94: return 0;
 13971                           ;	Return value of _i2c1_driver_open is never used
 13972                           
 13973                           ;i2c1_driver.c: 92: }
 13974                           
 13975                           ;i2c1_driver.c: 91: return 1;
 13976                           ;	Return value of _i2c1_driver_open is never used
 13977  105D  0008               	return
 13978  105E                     __end_of_i2c1_driver_open:	
 13979                           
 13980                           	psect	text44
 13981  1F82                     __ptext44:	
 13982 ;; *************** function _i2c_masterWrite *****************
 13983 ;; Defined at:
 13984 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
 13985 ;; Parameters:    Size  Location     Type
 13986 ;;		None
 13987 ;; Auto vars:     Size  Location     Type
 13988 ;;		None
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  1    wreg      enum E15138
 13991 ;; Registers used:
 13992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/0
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14002 ;;Total ram usage:        0 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; Hardware stack levels required when called:   13
 14005 ;; This function calls:
 14006 ;;		_i2c_masterOperation
 14007 ;; This function is called by:
 14008 ;;		_i2c_write1ByteRegister
 14009 ;;		_i2c_read1ByteRegister
 14010 ;;		_i2c_writeNBytes
 14011 ;;		_i2c_read2ByteRegister
 14012 ;;		_i2c_write2ByteRegister
 14013 ;;		_i2c_readDataBlock
 14014 ;; This function uses a non-reentrant model
 14015 ;;
 14016                           
 14017                           
 14018                           ;psect for function _i2c_masterWrite
 14019  1F82                     _i2c_masterWrite:	
 14020                           
 14021                           ;i2c_master.c: 224: return i2c_masterOperation(0);
 14022                           ;	Return value of _i2c_masterWrite is never used
 14023                           
 14024                           ;incstack = 0
 14025 ;; hardware stack exceeded
 14026                           ; Regs used in _i2c_masterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14027  1F82  3000               	movlw	0
 14028  1F83  3187  27DC         	fcall	_i2c_masterOperation
 14029  1F85  0008               	return
 14030  1F86                     __end_of_i2c_masterWrite:	
 14031                           
 14032                           	psect	text45
 14033  07DC                     __ptext45:	
 14034 ;; *************** function _i2c_masterOperation *****************
 14035 ;; Defined at:
 14036 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 14037 ;; Parameters:    Size  Location     Type
 14038 ;;  read            1    wreg     unsigned char 
 14039 ;; Auto vars:     Size  Location     Type
 14040 ;;  read            1    8[BANK0 ] unsigned char 
 14041 ;;  ret             1    9[BANK0 ] enum E15138
 14042 ;; Return value:  Size  Location     Type
 14043 ;;                  1    wreg      enum E15138
 14044 ;; Registers used:
 14045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14046 ;; Tracked objects:
 14047 ;;		On entry : 0/0
 14048 ;;		On exit  : 0/0
 14049 ;;		Unchanged: 0/0
 14050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14052 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14054 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14055 ;;Total ram usage:        3 bytes
 14056 ;; Hardware stack levels used:    1
 14057 ;; Hardware stack levels required when called:   12
 14058 ;; This function calls:
 14059 ;;		_i2c1_driver_start
 14060 ;;		_i2c_poller
 14061 ;;		_mssp1_IRQisEnabled
 14062 ;; This function is called by:
 14063 ;;		_i2c_masterWrite
 14064 ;;		_i2c_masterRead
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068                           
 14069                           ;psect for function _i2c_masterOperation
 14070  07DC                     _i2c_masterOperation:	
 14071                           
 14072                           ;incstack = 0
 14073 ;; hardware stack exceeded
 14074                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14075                           ;i2c_masterOperation@read stored from wreg
 14076  07DC  0020               	movlb	0	; select bank0
 14077  07DD  00A8               	movwf	i2c_masterOperation@read
 14078                           
 14079                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 14080  07DE  01A9               	clrf	i2c_masterOperation@ret
 14081  07DF  0AA9               	incf	i2c_masterOperation@ret,f
 14082                           
 14083                           ;i2c_master.c: 196: if(!i2c_status.busy)
 14084  07E0  0021               	movlb	1	; select bank1
 14085  07E1  1820               	btfsc	_i2c_status^(0+128),0
 14086  07E2  2FFD               	goto	l8045
 14087                           
 14088                           ;i2c_master.c: 197: {
 14089                           ;i2c_master.c: 198: i2c_status.busy = 1;
 14090  07E3  1420               	bsf	_i2c_status^(0+128),0
 14091                           
 14092                           ;i2c_master.c: 199: ret = I2C_NOERR;
 14093  07E4  0020               	movlb	0	; select bank0
 14094  07E5  01A9               	clrf	i2c_masterOperation@ret
 14095                           
 14096                           ;i2c_master.c: 201: if(read)
 14097  07E6  0828               	movf	i2c_masterOperation@read,w
 14098  07E7  1903               	btfsc	3,2
 14099  07E8  2FED               	goto	l8039
 14100                           
 14101                           ;i2c_master.c: 202: {
 14102                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 14103  07E9  0021               	movlb	1	; select bank1
 14104  07EA  01A9               	clrf	(_i2c_status^(0+128)+9)
 14105  07EB  0AA9               	incf	(_i2c_status^(0+128)+9),f
 14106                           
 14107                           ;i2c_master.c: 204: }
 14108  07EC  2FF3               	goto	l8041
 14109  07ED                     l8039:	
 14110                           
 14111                           ;i2c_master.c: 205: else
 14112                           ;i2c_master.c: 206: {
 14113                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 14114  07ED  3002               	movlw	2
 14115  07EE  0020               	movlb	0	; select bank0
 14116  07EF  00A7               	movwf	??_i2c_masterOperation
 14117  07F0  0827               	movf	??_i2c_masterOperation,w
 14118  07F1  0021               	movlb	1	; select bank1
 14119  07F2  00A9               	movwf	(_i2c_status^(0+128)+9)
 14120  07F3                     l8041:	
 14121                           
 14122                           ;i2c_master.c: 208: }
 14123                           ;i2c_master.c: 209: i2c1_driver_start();
 14124  07F3  319F  2744  3187   	fcall	_i2c1_driver_start
 14125                           
 14126                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 14127  07F6  319F  27C9  3187   	fcall	_mssp1_IRQisEnabled
 14128  07F9  1803               	btfsc	3,0
 14129  07FA  2FFD               	goto	l8045
 14130                           
 14131                           ;i2c_master.c: 212: i2c_poller();
 14132  07FB  3190  2093         	fcall	_i2c_poller
 14133  07FD                     l8045:	
 14134                           
 14135                           ;i2c_master.c: 213: }
 14136                           ;i2c_master.c: 214: return ret;
 14137  07FD  0020               	movlb	0	; select bank0
 14138  07FE  0829               	movf	i2c_masterOperation@ret,w
 14139  07FF  0008               	return
 14140  0800                     __end_of_i2c_masterOperation:	
 14141                           
 14142                           	psect	text46
 14143  1FC9                     __ptext46:	
 14144 ;; *************** function _mssp1_IRQisEnabled *****************
 14145 ;; Defined at:
 14146 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;		None
 14149 ;; Auto vars:     Size  Location     Type
 14150 ;;		None
 14151 ;; Return value:  Size  Location     Type
 14152 ;;		None               void
 14153 ;; Registers used:
 14154 ;;		wreg, status,2, status,0
 14155 ;; Tracked objects:
 14156 ;;		On entry : 0/0
 14157 ;;		On exit  : 0/0
 14158 ;;		Unchanged: 0/0
 14159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14164 ;;Total ram usage:        1 bytes
 14165 ;; Hardware stack levels used:    1
 14166 ;; Hardware stack levels required when called:    6
 14167 ;; This function calls:
 14168 ;;		Nothing
 14169 ;; This function is called by:
 14170 ;;		_i2c_masterOperation
 14171 ;; This function uses a non-reentrant model
 14172 ;;
 14173                           
 14174                           
 14175                           ;psect for function _mssp1_IRQisEnabled
 14176  1FC9                     _mssp1_IRQisEnabled:	
 14177                           
 14178                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
 14179                           
 14180                           ;incstack = 0
 14181                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 14182  1FC9  002E               	movlb	14	; select bank14
 14183  1FCA  0819               	movf	25,w	;volatile
 14184  1FCB  3901               	andlw	1
 14185  1FCC  0020               	movlb	0	; select bank0
 14186  1FCD  00A0               	movwf	??_mssp1_IRQisEnabled
 14187  1FCE  0C20               	rrf	??_mssp1_IRQisEnabled,w
 14188  1FCF  0008               	return
 14189  1FD0                     __end_of_mssp1_IRQisEnabled:	
 14190                           
 14191                           	psect	text47
 14192  1093                     __ptext47:	
 14193 ;; *************** function _i2c_poller *****************
 14194 ;; Defined at:
 14195 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 14196 ;; Parameters:    Size  Location     Type
 14197 ;;		None
 14198 ;; Auto vars:     Size  Location     Type
 14199 ;;		None
 14200 ;; Return value:  Size  Location     Type
 14201 ;;                  1    wreg      void 
 14202 ;; Registers used:
 14203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14204 ;; Tracked objects:
 14205 ;;		On entry : 0/0
 14206 ;;		On exit  : 0/0
 14207 ;;		Unchanged: 0/0
 14208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14213 ;;Total ram usage:        0 bytes
 14214 ;; Hardware stack levels used:    1
 14215 ;; Hardware stack levels required when called:   11
 14216 ;; This function calls:
 14217 ;;		_i2c_ISR
 14218 ;;		_mssp1_waitForEvent
 14219 ;; This function is called by:
 14220 ;;		_i2c_masterOperation
 14221 ;; This function uses a non-reentrant model
 14222 ;;
 14223                           
 14224                           
 14225                           ;psect for function _i2c_poller
 14226  1093                     _i2c_poller:	
 14227  1093                     l8027:	
 14228                           ;i2c_master.c: 232: while(i2c_status.busy)
 14229                           
 14230                           ;incstack = 0
 14231 ;; hardware stack exceeded
 14232                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14233                           
 14234  1093  0021               	movlb	1	; select bank1
 14235  1094  1C20               	btfss	_i2c_status^(0+128),0
 14236  1095  0008               	return
 14237                           
 14238                           ;i2c_master.c: 233: {
 14239                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 14240  1096  3000               	movlw	0
 14241  1097  3190  2088  3190   	fcall	_mssp1_waitForEvent
 14242                           
 14243                           ;i2c_master.c: 235: i2c_ISR();
 14244  109A  3193  23EA  3190   	fcall	_i2c_ISR
 14245  109D  2893               	goto	l8027
 14246  109E                     __end_of_i2c_poller:	
 14247                           
 14248                           	psect	text48
 14249  1088                     __ptext48:	
 14250 ;; *************** function _mssp1_waitForEvent *****************
 14251 ;; Defined at:
 14252 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 14253 ;; Parameters:    Size  Location     Type
 14254 ;;  timeout         1    wreg     PTR unsigned int 
 14255 ;;		 -> NULL(0), 
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;  timeout         1    0[BANK0 ] PTR unsigned int 
 14258 ;;		 -> NULL(0), 
 14259 ;; Return value:  Size  Location     Type
 14260 ;;                  1    wreg      void 
 14261 ;; Registers used:
 14262 ;;		wreg
 14263 ;; Tracked objects:
 14264 ;;		On entry : 0/0
 14265 ;;		On exit  : 0/0
 14266 ;;		Unchanged: 0/0
 14267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14271 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14272 ;;Total ram usage:        1 bytes
 14273 ;; Hardware stack levels used:    1
 14274 ;; Hardware stack levels required when called:    6
 14275 ;; This function calls:
 14276 ;;		Nothing
 14277 ;; This function is called by:
 14278 ;;		_i2c_poller
 14279 ;; This function uses a non-reentrant model
 14280 ;;
 14281                           
 14282                           
 14283                           ;psect for function _mssp1_waitForEvent
 14284  1088                     _mssp1_waitForEvent:	
 14285                           
 14286                           ;i2c1_driver.c: 73: if(PIR3bits.SSP1IF == 0)
 14287                           
 14288                           ;incstack = 0
 14289                           ; Regs used in _mssp1_waitForEvent: [wreg]
 14290  1088  002E               	movlb	14	; select bank14
 14291  1089  180F               	btfsc	15,0	;volatile
 14292  108A  0008               	return
 14293  108B                     l53:	
 14294                           ;i2c1_driver.c: 74: {
 14295                           ;i2c1_driver.c: 75: while(1)
 14296                           
 14297                           
 14298                           ;i2c1_driver.c: 76: {
 14299                           ;i2c1_driver.c: 77: if(PIR3bits.SSP1IF) break;
 14300  108B  002E               	movlb	14	; select bank14
 14301  108C  180F               	btfsc	15,0	;volatile
 14302  108D  0008               	return
 14303                           
 14304                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 14305  108E  3008               	movlw	8
 14306  108F                     u6757:	
 14307  108F  0B89               	decfsz	9,f
 14308  1090  288F               	goto	u6757
 14309  1091  0000               	nop
 14310  1092  288B               	goto	l53
 14311  1093                     __end_of_mssp1_waitForEvent:	
 14312                           
 14313                           	psect	text49
 14314  13EA                     __ptext49:	
 14315 ;; *************** function _i2c_ISR *****************
 14316 ;; Defined at:
 14317 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 14318 ;; Parameters:    Size  Location     Type
 14319 ;;		None
 14320 ;; Auto vars:     Size  Location     Type
 14321 ;;		None
 14322 ;; Return value:  Size  Location     Type
 14323 ;;                  1    wreg      void 
 14324 ;; Registers used:
 14325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14326 ;; Tracked objects:
 14327 ;;		On entry : 0/0
 14328 ;;		On exit  : 0/0
 14329 ;;		Unchanged: 0/0
 14330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14333 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14334 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14335 ;;Total ram usage:        3 bytes
 14336 ;; Hardware stack levels used:    1
 14337 ;; Hardware stack levels required when called:   10
 14338 ;; This function calls:
 14339 ;;		_do_I2C_DO_ACK
 14340 ;;		_do_I2C_DO_ADDRESS_NACK
 14341 ;;		_do_I2C_DO_NACK_RESTART
 14342 ;;		_do_I2C_DO_NACK_STOP
 14343 ;;		_do_I2C_IDLE
 14344 ;;		_do_I2C_RCEN
 14345 ;;		_do_I2C_RESET
 14346 ;;		_do_I2C_RX
 14347 ;;		_do_I2C_SEND_ADR_READ
 14348 ;;		_do_I2C_SEND_ADR_WRITE
 14349 ;;		_do_I2C_SEND_RESTART
 14350 ;;		_do_I2C_SEND_RESTART_READ
 14351 ;;		_do_I2C_SEND_RESTART_WRITE
 14352 ;;		_do_I2C_SEND_STOP
 14353 ;;		_do_I2C_TX
 14354 ;;		_do_I2C_TX_EMPTY
 14355 ;;		_i2c1_driver_isNACK
 14356 ;;		_mssp1_clearIRQ
 14357 ;; This function is called by:
 14358 ;;		_i2c_open
 14359 ;;		_i2c_poller
 14360 ;;		_INTERRUPT_InterruptManager
 14361 ;; This function uses a non-reentrant model
 14362 ;;
 14363                           
 14364                           
 14365                           ;psect for function _i2c_ISR
 14366  13EA                     _i2c_ISR:	
 14367                           
 14368                           ;Skip over the trampoline to the duplicate function for level 1
 14369  13EA  1C7E               	btfss	126,0
 14370  13EB  2BEE               	goto	l8011
 14371  13EC  3188  2800         	ljmp	i1l8317
 14372  13EE                     _i2c_ISR$intlevel0:	
 14373  13EE                     l8011:	
 14374                           ;incstack = 0
 14375 ;; hardware stack exceeded
 14376                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14377                           
 14378                           
 14379                           ;i2c_master.c: 421: mssp1_clearIRQ();
 14380  13EE  319F  273E  3193   	fcall	_mssp1_clearIRQ
 14381                           
 14382                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 14383  13F1  0021               	movlb	1	; select bank1
 14384  13F2  1DA0               	btfss	_i2c_status^(0+128),3
 14385  13F3  2BFF               	goto	l8019
 14386  13F4  3190  202E  3193   	fcall	_i2c1_driver_isNACK
 14387  13F7  1C03               	btfss	3,0
 14388  13F8  2BFF               	goto	l8019
 14389                           
 14390                           ;i2c_master.c: 428: {
 14391                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 14392  13F9  300F               	movlw	15
 14393  13FA  0020               	movlb	0	; select bank0
 14394  13FB  00A4               	movwf	??_i2c_ISR
 14395  13FC  0824               	movf	??_i2c_ISR,w
 14396  13FD  0021               	movlb	1	; select bank1
 14397  13FE  00A9               	movwf	(_i2c_status^(0+128)+9)
 14398  13FF                     l8019:	
 14399                           
 14400                           ;i2c_master.c: 430: }
 14401                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 14402  13FF  0021               	movlb	1	; select bank1
 14403  1400  0829               	movf	(_i2c_status^(0+128)+9),w
 14404  1401  0020               	movlb	0	; select bank0
 14405  1402  00A4               	movwf	??_i2c_ISR
 14406  1403  01A5               	clrf	??_i2c_ISR+1
 14407  1404  35A4               	lslf	??_i2c_ISR,f
 14408  1405  0DA5               	rlf	??_i2c_ISR+1,f
 14409  1406  3000               	movlw	low (_fsmStateTable| (0+32768))
 14410  1407  0724               	addwf	??_i2c_ISR,w
 14411  1408  0084               	movwf	4
 14412  1409  3098               	movlw	high (_fsmStateTable| (0+32768))
 14413  140A  3D25               	addwfc	??_i2c_ISR+1,w
 14414  140B  0085               	movwf	5
 14415  140C  3F01               	moviw [1]fsr0
 14416  140D  008A               	movwf	10
 14417  140E  3F00               	moviw [0]fsr0
 14418  140F  000A               	callw
 14419  1410  3193               	pagesel	$
 14420  1411  0020               	movlb	0	; select bank0
 14421  1412  00A6               	movwf	??_i2c_ISR+2
 14422  1413  0826               	movf	??_i2c_ISR+2,w
 14423  1414  0021               	movlb	1	; select bank1
 14424  1415  00A9               	movwf	(_i2c_status^(0+128)+9)
 14425  1416  0008               	return
 14426  1417                     __end_of_i2c_ISR:	
 14427                           
 14428                           	psect	text50
 14429  16DB                     __ptext50:	
 14430 ;; *************** function _do_I2C_RX *****************
 14431 ;; Defined at:
 14432 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 14433 ;; Parameters:    Size  Location     Type
 14434 ;;		None
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;		None
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  1    wreg      enum E15307
 14439 ;; Registers used:
 14440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14441 ;; Tracked objects:
 14442 ;;		On entry : 0/0
 14443 ;;		On exit  : 0/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14448 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14449 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14450 ;;Total ram usage:        1 bytes
 14451 ;; Hardware stack levels used:    1
 14452 ;; Hardware stack levels required when called:    9
 14453 ;; This function calls:
 14454 ;;		Absolute function
 14455 ;;		_do_I2C_DO_NACK_RESTART
 14456 ;;		_do_I2C_DO_NACK_STOP
 14457 ;;		_i2c1_driver_getRXData
 14458 ;;		_i2c1_driver_sendACK
 14459 ;;		_i2c_restartWrite
 14460 ;;		_rd1RegCompleteHandler
 14461 ;;		_rd2RegCompleteHandler
 14462 ;;		_rdBlkRegCompleteHandler
 14463 ;;		_returnReset
 14464 ;;		_returnStop
 14465 ;;		_wr1RegCompleteHandler
 14466 ;;		_wr2RegCompleteHandler
 14467 ;; This function is called by:
 14468 ;;		_i2c_ISR
 14469 ;;		i1_i2c_ISR
 14470 ;; This function uses a non-reentrant model
 14471 ;;
 14472                           
 14473                           
 14474                           ;psect for function _do_I2C_RX
 14475  16DB                     _do_I2C_RX:	
 14476                           
 14477                           ;Skip over the trampoline to the duplicate function for level 1
 14478  16DB  1C7E               	btfss	126,0
 14479  16DC  2EDF               	goto	l7965
 14480  16DD  3196  2E15         	ljmp	i1l8221
 14481  16DF                     _do_I2C_RX$intlevel0:	
 14482  16DF                     l7965:	
 14483                           ;incstack = 0
 14484 ;; hardware stack exceeded
 14485                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14486                           
 14487                           
 14488                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 14489  16DF  319F  2750  3196   	fcall	_i2c1_driver_getRXData
 14490  16E2  0020               	movlb	0	; select bank0
 14491  16E3  00A0               	movwf	??_do_I2C_RX
 14492  16E4  0021               	movlb	1	; select bank1
 14493  16E5  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 14494  16E6  0086               	movwf	6
 14495  16E7  0187               	clrf	7
 14496  16E8  0020               	movlb	0	; select bank0
 14497  16E9  0820               	movf	??_do_I2C_RX,w
 14498  16EA  0081               	movwf	1
 14499  16EB  3001               	movlw	1
 14500  16EC  00A0               	movwf	??_do_I2C_RX
 14501  16ED  0820               	movf	??_do_I2C_RX,w
 14502  16EE  0021               	movlb	1	; select bank1
 14503  16EF  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 14504                           
 14505                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 14506  16F0  3001               	movlw	1
 14507  16F1  02A3               	subwf	(_i2c_status^(0+128)+3),f
 14508  16F2  3000               	movlw	0
 14509  16F3  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14510  16F4  0823               	movf	(_i2c_status^(0+128)+3),w
 14511  16F5  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14512  16F6  1903               	btfsc	3,2
 14513  16F7  2EFC               	goto	l314
 14514                           
 14515                           ;i2c_master.c: 361: {
 14516                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 14517  16F8  319F  277A         	fcall	_i2c1_driver_sendACK
 14518                           
 14519                           ;i2c_master.c: 363: return I2C_RCEN;
 14520  16FA  3005               	movlw	5
 14521                           
 14522                           ;i2c_master.c: 364: }
 14523  16FB  0008               	return
 14524  16FC                     l314:	
 14525                           
 14526                           ;i2c_master.c: 365: else
 14527                           ;i2c_master.c: 366: {
 14528                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 14529  16FC  1520               	bsf	_i2c_status^(0+128),2
 14530                           
 14531                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 14532  16FD  2F04               	goto	l7989
 14533  16FE                     l7979:	
 14534                           ;i2c_master.c: 369: {
 14535                           ;i2c_master.c: 370: case i2c_restart_write:
 14536                           
 14537                           
 14538                           ;i2c_master.c: 371: case i2c_restart_read:
 14539                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 14540  16FE  3190  201D         	fcall	_do_I2C_DO_NACK_RESTART
 14541  1700  0008               	return
 14542  1701                     l7983:	
 14543                           ;i2c_master.c: 374: case i2c_continue:
 14544                           
 14545                           ;i2c_master.c: 373: default:
 14546                           
 14547                           
 14548                           ;i2c_master.c: 375: case i2c_stop:
 14549                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 14550  1701  3190  2015         	fcall	_do_I2C_DO_NACK_STOP
 14551                           
 14552                           ;i2c_master.c: 377: }
 14553  1703  0008               	return
 14554  1704                     l7989:	
 14555  1704  0021               	movlb	1	; select bank1
 14556  1705  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 14557  1706  0020               	movlb	0	; select bank0
 14558  1707  00A0               	movwf	??_do_I2C_RX
 14559  1708  0820               	movf	??_do_I2C_RX,w
 14560  1709  00A9               	movwf	returnStop@p
 14561  170A  300B               	movlw	11
 14562  170B  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14563  170C  0086               	movwf	6
 14564  170D  0187               	clrf	7
 14565  170E  3F41               	moviw [1]fsr1
 14566  170F  008A               	movwf	10
 14567  1710  3F40               	moviw [0]fsr1
 14568  1711  000A               	callw
 14569  1712  3196               	pagesel	$
 14570                           
 14571                           ; Switch size 1, requested type "space"
 14572                           ; Number of cases is 4, Range of values is 1 to 4
 14573                           ; switch strategies available:
 14574                           ; Name         Instructions Cycles
 14575                           ; simple_byte           13     7 (average)
 14576                           ; direct_byte           17     9 (fixed)
 14577                           ; jumptable            263     9 (fixed)
 14578                           ;	Chosen strategy is simple_byte
 14579  1713  3A01               	xorlw	1	; case 1
 14580  1714  1903               	skipnz
 14581  1715  2F01               	goto	l7983
 14582  1716  3A03               	xorlw	3	; case 2
 14583  1717  1903               	skipnz
 14584  1718  2EFE               	goto	l7979
 14585  1719  3A01               	xorlw	1	; case 3
 14586  171A  1903               	skipnz
 14587  171B  2EFE               	goto	l7979
 14588  171C  3A07               	xorlw	7	; case 4
 14589  171D  1903               	skipnz
 14590  171E  2F01               	goto	l7983
 14591  171F  2F01               	goto	l7983
 14592  1720  0008               	return
 14593  1721                     __end_of_do_I2C_RX:	
 14594                           
 14595                           	psect	text51
 14596  0874                     __ptext51:	
 14597 ;; *************** function _do_I2C_TX *****************
 14598 ;; Defined at:
 14599 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 14600 ;; Parameters:    Size  Location     Type
 14601 ;;		None
 14602 ;; Auto vars:     Size  Location     Type
 14603 ;;		None
 14604 ;; Return value:  Size  Location     Type
 14605 ;;                  1    wreg      enum E15307
 14606 ;; Registers used:
 14607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14608 ;; Tracked objects:
 14609 ;;		On entry : 0/0
 14610 ;;		On exit  : 0/0
 14611 ;;		Unchanged: 0/0
 14612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14616 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;Total ram usage:        3 bytes
 14618 ;; Hardware stack levels used:    1
 14619 ;; Hardware stack levels required when called:    9
 14620 ;; This function calls:
 14621 ;;		Absolute function
 14622 ;;		_do_I2C_SEND_RESTART_READ
 14623 ;;		_do_I2C_SEND_RESTART_WRITE
 14624 ;;		_do_I2C_SEND_STOP
 14625 ;;		_i2c1_driver_TXData
 14626 ;;		_i2c1_driver_isNACK
 14627 ;;		_i2c_restartWrite
 14628 ;;		_rd1RegCompleteHandler
 14629 ;;		_rd2RegCompleteHandler
 14630 ;;		_rdBlkRegCompleteHandler
 14631 ;;		_returnReset
 14632 ;;		_returnStop
 14633 ;;		_wr1RegCompleteHandler
 14634 ;;		_wr2RegCompleteHandler
 14635 ;; This function is called by:
 14636 ;;		_i2c_ISR
 14637 ;;		i1_i2c_ISR
 14638 ;; This function uses a non-reentrant model
 14639 ;;
 14640                           
 14641                           
 14642                           ;psect for function _do_I2C_TX
 14643  0874                     _do_I2C_TX:	
 14644                           
 14645                           ;Skip over the trampoline to the duplicate function for level 1
 14646  0874  1C7E               	btfss	126,0
 14647  0875  2878               	goto	l7935
 14648  0876  3197  2F67         	ljmp	i1l8191
 14649  0878                     _do_I2C_TX$intlevel0:	
 14650  0878                     l7935:	
 14651                           ;incstack = 0
 14652 ;; hardware stack exceeded
 14653                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14654                           
 14655                           
 14656                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 14657  0878  3190  202E  3188   	fcall	_i2c1_driver_isNACK
 14658  087B  1803               	btfsc	3,0
 14659  087C  2887               	goto	l7953
 14660  087D  28A4               	goto	l298
 14661  087E                     l7939:	
 14662                           ;i2c_master.c: 338: {
 14663                           ;i2c_master.c: 339: case i2c_restart_read:
 14664                           
 14665                           ;i2c_master.c: 336: {
 14666                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 14667                           
 14668                           
 14669                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 14670  087E  319F  27E8         	fcall	_do_I2C_SEND_RESTART_READ
 14671  0880  0008               	return
 14672  0881                     l7943:	
 14673                           ;i2c_master.c: 341: case i2c_restart_write:
 14674                           
 14675                           
 14676                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 14677  0881  319F  27F0         	fcall	_do_I2C_SEND_RESTART_WRITE
 14678  0883  0008               	return
 14679  0884                     l7947:	
 14680                           ;i2c_master.c: 344: case i2c_continue:
 14681                           
 14682                           ;i2c_master.c: 343: default:
 14683                           
 14684                           
 14685                           ;i2c_master.c: 345: case i2c_stop:
 14686                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 14687  0884  3190  2005         	fcall	_do_I2C_SEND_STOP
 14688                           
 14689                           ;i2c_master.c: 347: }
 14690  0886  0008               	return
 14691  0887                     l7953:	
 14692  0887  0021               	movlb	1	; select bank1
 14693  0888  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 14694  0889  0020               	movlb	0	; select bank0
 14695  088A  00A1               	movwf	??_do_I2C_TX
 14696  088B  0821               	movf	??_do_I2C_TX,w
 14697  088C  00A9               	movwf	returnStop@p
 14698  088D  3011               	movlw	17
 14699  088E  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14700  088F  0086               	movwf	6
 14701  0890  0187               	clrf	7
 14702  0891  3F41               	moviw [1]fsr1
 14703  0892  008A               	movwf	10
 14704  0893  3F40               	moviw [0]fsr1
 14705  0894  000A               	callw
 14706  0895  3188               	pagesel	$
 14707                           
 14708                           ; Switch size 1, requested type "space"
 14709                           ; Number of cases is 4, Range of values is 1 to 4
 14710                           ; switch strategies available:
 14711                           ; Name         Instructions Cycles
 14712                           ; simple_byte           13     7 (average)
 14713                           ; direct_byte           17     9 (fixed)
 14714                           ; jumptable            263     9 (fixed)
 14715                           ;	Chosen strategy is simple_byte
 14716  0896  3A01               	xorlw	1	; case 1
 14717  0897  1903               	skipnz
 14718  0898  2884               	goto	l7947
 14719  0899  3A03               	xorlw	3	; case 2
 14720  089A  1903               	skipnz
 14721  089B  287E               	goto	l7939
 14722  089C  3A01               	xorlw	1	; case 3
 14723  089D  1903               	skipnz
 14724  089E  2881               	goto	l7943
 14725  089F  3A07               	xorlw	7	; case 4
 14726  08A0  1903               	skipnz
 14727  08A1  2884               	goto	l7947
 14728  08A2  2884               	goto	l7947
 14729                           
 14730                           ;i2c_master.c: 348: }
 14731  08A3  0008               	return
 14732  08A4                     l298:	
 14733                           
 14734                           ;i2c_master.c: 349: else
 14735                           ;i2c_master.c: 350: {
 14736                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 14737  08A4  0021               	movlb	1	; select bank1
 14738  08A5  11A0               	bcf	_i2c_status^(0+128),3
 14739                           
 14740                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 14741  08A6  3002               	movlw	2
 14742  08A7  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14743  08A8  0086               	movwf	6
 14744  08A9  0187               	clrf	7
 14745  08AA  3F40               	moviw [0]fsr1
 14746  08AB  0084               	movwf	4
 14747  08AC  0185               	clrf	5
 14748  08AD  0A81               	incf	1,f
 14749  08AE  0800               	movf	0,w
 14750  08AF  319F  27A9  3188   	fcall	_i2c1_driver_TXData
 14751                           
 14752                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 14753  08B2  3001               	movlw	1
 14754  08B3  0021               	movlb	1	; select bank1
 14755  08B4  02A3               	subwf	(_i2c_status^(0+128)+3),f
 14756  08B5  3000               	movlw	0
 14757  08B6  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14758  08B7  0823               	movf	(_i2c_status^(0+128)+3),w
 14759  08B8  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14760  08B9  1D03               	btfss	3,2
 14761  08BA  28BD               	goto	l7961
 14762  08BB  3006               	movlw	6
 14763  08BC  28BE               	goto	L5
 14764  08BD                     l7961:	
 14765  08BD  3003               	movlw	3
 14766  08BE                     L5:	
 14767  08BE  0020               	movlb	0	; select bank0
 14768  08BF  00A2               	movwf	_do_I2C_TX$723
 14769  08C0  3000               	movlw	0
 14770  08C1  00A3               	movwf	_do_I2C_TX$723+1
 14771  08C2  0822               	movf	_do_I2C_TX$723,w
 14772  08C3  0008               	return
 14773  08C4                     __end_of_do_I2C_TX:	
 14774                           
 14775                           	psect	text52
 14776  1395                     __ptext52:	
 14777 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 14778 ;; Defined at:
 14779 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 14780 ;; Parameters:    Size  Location     Type
 14781 ;;		None
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;		None
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  1    wreg      enum E15307
 14786 ;; Registers used:
 14787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14788 ;; Tracked objects:
 14789 ;;		On entry : 0/0
 14790 ;;		On exit  : 0/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14795 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14797 ;;Total ram usage:        1 bytes
 14798 ;; Hardware stack levels used:    1
 14799 ;; Hardware stack levels required when called:    9
 14800 ;; This function calls:
 14801 ;;		Absolute function
 14802 ;;		_do_I2C_SEND_RESTART
 14803 ;;		_do_I2C_SEND_STOP
 14804 ;;		_i2c_restartWrite
 14805 ;;		_rd1RegCompleteHandler
 14806 ;;		_rd2RegCompleteHandler
 14807 ;;		_rdBlkRegCompleteHandler
 14808 ;;		_returnReset
 14809 ;;		_returnStop
 14810 ;;		_wr1RegCompleteHandler
 14811 ;;		_wr2RegCompleteHandler
 14812 ;; This function is called by:
 14813 ;;		_i2c_ISR
 14814 ;;		i1_i2c_ISR
 14815 ;; This function uses a non-reentrant model
 14816 ;;
 14817                           
 14818                           
 14819                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 14820  1395                     _do_I2C_DO_ADDRESS_NACK:	
 14821                           
 14822                           ;Skip over the trampoline to the duplicate function for level 1
 14823  1395  1C7E               	btfss	126,0
 14824  1396  2B99               	goto	l7919
 14825  1397  3193  2B22         	ljmp	i1l8175
 14826  1399                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 14827  1399                     l7919:	
 14828                           ;incstack = 0
 14829 ;; hardware stack exceeded
 14830                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14831                           
 14832                           
 14833                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 14834  1399  0021               	movlb	1	; select bank1
 14835  139A  11A0               	bcf	_i2c_status^(0+128),3
 14836                           
 14837                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 14838  139B  3002               	movlw	2
 14839  139C  0020               	movlb	0	; select bank0
 14840  139D  00A0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14841  139E  0820               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14842  139F  0021               	movlb	1	; select bank1
 14843  13A0  00AA               	movwf	(_i2c_status^(0+128)+10)
 14844                           
 14845                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 14846  13A1  2BA8               	goto	l7933
 14847  13A2                     l7923:	
 14848                           ;i2c_master.c: 324: {
 14849                           ;i2c_master.c: 325: case i2c_restart_read:
 14850                           
 14851                           
 14852                           ;i2c_master.c: 326: case i2c_restart_write:
 14853                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 14854  13A2  319F  27F8         	fcall	_do_I2C_SEND_RESTART
 14855  13A4  0008               	return
 14856  13A5                     l7927:	
 14857                           ;i2c_master.c: 328: default:
 14858                           
 14859                           
 14860                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 14861  13A5  3190  2005         	fcall	_do_I2C_SEND_STOP
 14862                           
 14863                           ;i2c_master.c: 330: }
 14864  13A7  0008               	return
 14865  13A8                     l7933:	
 14866  13A8  0021               	movlb	1	; select bank1
 14867  13A9  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 14868  13AA  0020               	movlb	0	; select bank0
 14869  13AB  00A0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14870  13AC  0820               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14871  13AD  00A9               	movwf	returnStop@p
 14872  13AE  300F               	movlw	15
 14873  13AF  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14874  13B0  0086               	movwf	6
 14875  13B1  0187               	clrf	7
 14876  13B2  3F41               	moviw [1]fsr1
 14877  13B3  008A               	movwf	10
 14878  13B4  3F40               	moviw [0]fsr1
 14879  13B5  000A               	callw
 14880  13B6  3193               	pagesel	$
 14881                           
 14882                           ; Switch size 1, requested type "space"
 14883                           ; Number of cases is 2, Range of values is 2 to 3
 14884                           ; switch strategies available:
 14885                           ; Name         Instructions Cycles
 14886                           ; simple_byte            7     4 (average)
 14887                           ; direct_byte           13     9 (fixed)
 14888                           ; jumptable            263     9 (fixed)
 14889                           ;	Chosen strategy is simple_byte
 14890  13B7  3A02               	xorlw	2	; case 2
 14891  13B8  1903               	skipnz
 14892  13B9  2BA2               	goto	l7923
 14893  13BA  3A01               	xorlw	1	; case 3
 14894  13BB  1903               	skipnz
 14895  13BC  2BA2               	goto	l7923
 14896  13BD  2BA5               	goto	l7927
 14897  13BE  0008               	return
 14898  13BF                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 14899                           
 14900                           	psect	text53
 14901  101D                     __ptext53:	
 14902 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 14903 ;; Defined at:
 14904 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 14905 ;; Parameters:    Size  Location     Type
 14906 ;;		None
 14907 ;; Auto vars:     Size  Location     Type
 14908 ;;		None
 14909 ;; Return value:  Size  Location     Type
 14910 ;;                  1    wreg      enum E15307
 14911 ;; Registers used:
 14912 ;;		wreg, status,2, status,0, pclath, cstack
 14913 ;; Tracked objects:
 14914 ;;		On entry : 0/0
 14915 ;;		On exit  : 0/0
 14916 ;;		Unchanged: 0/0
 14917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14922 ;;Total ram usage:        0 bytes
 14923 ;; Hardware stack levels used:    1
 14924 ;; Hardware stack levels required when called:    7
 14925 ;; This function calls:
 14926 ;;		_i2c1_driver_sendNACK
 14927 ;; This function is called by:
 14928 ;;		_do_I2C_RX
 14929 ;;		_i2c_ISR
 14930 ;;		i1_i2c_ISR
 14931 ;; This function uses a non-reentrant model
 14932 ;;
 14933                           
 14934                           
 14935                           ;psect for function _do_I2C_DO_NACK_RESTART
 14936  101D                     _do_I2C_DO_NACK_RESTART:	
 14937                           
 14938                           ;Skip over the trampoline to the duplicate function for level 1
 14939  101D  1C7E               	btfss	126,0
 14940  101E  2821               	goto	l5207
 14941  101F  319F  2F76         	ljmp	i1l4227
 14942  1021                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 14943  1021                     l5207:	
 14944                           ;incstack = 0
 14945 ;; hardware stack exceeded
 14946                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14947                           
 14948                           
 14949                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 14950  1021  319F  277E         	fcall	_i2c1_driver_sendNACK
 14951                           
 14952                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 14953  1023  3009               	movlw	9
 14954  1024  0008               	return
 14955  1025                     __end_of_do_I2C_DO_NACK_RESTART:	
 14956                           
 14957                           	psect	text54
 14958  1015                     __ptext54:	
 14959 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 14960 ;; Defined at:
 14961 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 14962 ;; Parameters:    Size  Location     Type
 14963 ;;		None
 14964 ;; Auto vars:     Size  Location     Type
 14965 ;;		None
 14966 ;; Return value:  Size  Location     Type
 14967 ;;                  1    wreg      enum E15307
 14968 ;; Registers used:
 14969 ;;		wreg, status,2, status,0, pclath, cstack
 14970 ;; Tracked objects:
 14971 ;;		On entry : 0/0
 14972 ;;		On exit  : 0/0
 14973 ;;		Unchanged: 0/0
 14974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14979 ;;Total ram usage:        0 bytes
 14980 ;; Hardware stack levels used:    1
 14981 ;; Hardware stack levels required when called:    7
 14982 ;; This function calls:
 14983 ;;		_i2c1_driver_sendNACK
 14984 ;; This function is called by:
 14985 ;;		_do_I2C_RX
 14986 ;;		_i2c_ISR
 14987 ;;		i1_i2c_ISR
 14988 ;; This function uses a non-reentrant model
 14989 ;;
 14990                           
 14991                           
 14992                           ;psect for function _do_I2C_DO_NACK_STOP
 14993  1015                     _do_I2C_DO_NACK_STOP:	
 14994                           
 14995                           ;Skip over the trampoline to the duplicate function for level 1
 14996  1015  1C7E               	btfss	126,0
 14997  1016  2819               	goto	l5201
 14998  1017  319F  2F72         	ljmp	i1l4221
 14999  1019                     _do_I2C_DO_NACK_STOP$intlevel0:	
 15000  1019                     l5201:	
 15001                           ;incstack = 0
 15002 ;; hardware stack exceeded
 15003                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 15004                           
 15005                           
 15006                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 15007  1019  319F  277E         	fcall	_i2c1_driver_sendNACK
 15008                           
 15009                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 15010  101B  300A               	movlw	10
 15011  101C  0008               	return
 15012  101D                     __end_of_do_I2C_DO_NACK_STOP:	
 15013                           
 15014                           	psect	text55
 15015  100D                     __ptext55:	
 15016 ;; *************** function _do_I2C_DO_ACK *****************
 15017 ;; Defined at:
 15018 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      enum E15307
 15025 ;; Registers used:
 15026 ;;		wreg, status,2, status,0, pclath, cstack
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15036 ;;Total ram usage:        0 bytes
 15037 ;; Hardware stack levels used:    1
 15038 ;; Hardware stack levels required when called:    7
 15039 ;; This function calls:
 15040 ;;		_i2c1_driver_sendACK
 15041 ;; This function is called by:
 15042 ;;		_i2c_ISR
 15043 ;;		i1_i2c_ISR
 15044 ;; This function uses a non-reentrant model
 15045 ;;
 15046                           
 15047                           
 15048                           ;psect for function _do_I2C_DO_ACK
 15049  100D                     _do_I2C_DO_ACK:	
 15050                           
 15051                           ;Skip over the trampoline to the duplicate function for level 1
 15052  100D  1C7E               	btfss	126,0
 15053  100E  2811               	goto	l5307
 15054  100F  319F  2F6E         	ljmp	i1l4643
 15055  1011                     _do_I2C_DO_ACK$intlevel0:	
 15056  1011                     l5307:	
 15057                           ;incstack = 0
 15058                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 15059                           
 15060                           
 15061                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 15062  1011  319F  277A         	fcall	_i2c1_driver_sendACK
 15063                           
 15064                           ;i2c_master.c: 302: return I2C_RCEN;
 15065  1013  3005               	movlw	5
 15066  1014  0008               	return
 15067  1015                     __end_of_do_I2C_DO_ACK:	
 15068                           
 15069                           	psect	text56
 15070  104A                     __ptext56:	
 15071 ;; *************** function _do_I2C_RCEN *****************
 15072 ;; Defined at:
 15073 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 15074 ;; Parameters:    Size  Location     Type
 15075 ;;		None
 15076 ;; Auto vars:     Size  Location     Type
 15077 ;;		None
 15078 ;; Return value:  Size  Location     Type
 15079 ;;                  1    wreg      enum E15307
 15080 ;; Registers used:
 15081 ;;		wreg, status,2, status,0, pclath, cstack
 15082 ;; Tracked objects:
 15083 ;;		On entry : 0/0
 15084 ;;		On exit  : 0/0
 15085 ;;		Unchanged: 0/0
 15086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15091 ;;Total ram usage:        0 bytes
 15092 ;; Hardware stack levels used:    1
 15093 ;; Hardware stack levels required when called:    7
 15094 ;; This function calls:
 15095 ;;		_i2c1_driver_startRX
 15096 ;; This function is called by:
 15097 ;;		_i2c_ISR
 15098 ;;		i1_i2c_ISR
 15099 ;; This function uses a non-reentrant model
 15100 ;;
 15101                           
 15102                           
 15103                           ;psect for function _do_I2C_RCEN
 15104  104A                     _do_I2C_RCEN:	
 15105                           
 15106                           ;Skip over the trampoline to the duplicate function for level 1
 15107  104A  1C7E               	btfss	126,0
 15108  104B  284E               	goto	l5299
 15109  104C  319F  2F8B         	ljmp	i1l4635
 15110  104E                     _do_I2C_RCEN$intlevel0:	
 15111  104E                     l5299:	
 15112                           ;incstack = 0
 15113                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 15114                           
 15115                           
 15116                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 15117  104E  0021               	movlb	1	; select bank1
 15118  104F  11A0               	bcf	_i2c_status^(0+128),3
 15119                           
 15120                           ;i2c_master.c: 295: i2c1_driver_startRX();
 15121  1050  319F  274D         	fcall	_i2c1_driver_startRX
 15122                           
 15123                           ;i2c_master.c: 296: return I2C_RX;
 15124  1052  3004               	movlw	4
 15125  1053  0008               	return
 15126  1054                     __end_of_do_I2C_RCEN:	
 15127                           
 15128                           	psect	text57
 15129  107D                     __ptext57:	
 15130 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 15131 ;; Defined at:
 15132 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;		None
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;		None
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1    wreg      enum E15307
 15139 ;; Registers used:
 15140 ;;		wreg, status,2, status,0, pclath, cstack
 15141 ;; Tracked objects:
 15142 ;;		On entry : 0/0
 15143 ;;		On exit  : 0/0
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;Total ram usage:        0 bytes
 15151 ;; Hardware stack levels used:    1
 15152 ;; Hardware stack levels required when called:    7
 15153 ;; This function calls:
 15154 ;;		_i2c1_driver_TXData
 15155 ;; This function is called by:
 15156 ;;		_i2c_ISR
 15157 ;;		i1_i2c_ISR
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           
 15162                           ;psect for function _do_I2C_SEND_ADR_WRITE
 15163  107D                     _do_I2C_SEND_ADR_WRITE:	
 15164                           
 15165                           ;Skip over the trampoline to the duplicate function for level 1
 15166  107D  1C7E               	btfss	126,0
 15167  107E  2881               	goto	l5291
 15168  107F  319F  2FC2         	ljmp	i1l4627
 15169  1081                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 15170  1081                     l5291:	
 15171                           ;incstack = 0
 15172                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15173                           
 15174                           
 15175                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 15176  1081  0021               	movlb	1	; select bank1
 15177  1082  15A0               	bsf	_i2c_status^(0+128),3
 15178                           
 15179                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 15180  1083  3521               	lslf	(_i2c_status^(0+128)+1),w
 15181  1084  319F  27A9         	fcall	_i2c1_driver_TXData
 15182                           
 15183                           ;i2c_master.c: 289: return I2C_TX;
 15184  1086  3003               	movlw	3
 15185  1087  0008               	return
 15186  1088                     __end_of_do_I2C_SEND_ADR_WRITE:	
 15187                           
 15188                           	psect	text58
 15189  10B5                     __ptext58:	
 15190 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 15191 ;; Defined at:
 15192 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 15193 ;; Parameters:    Size  Location     Type
 15194 ;;		None
 15195 ;; Auto vars:     Size  Location     Type
 15196 ;;		None
 15197 ;; Return value:  Size  Location     Type
 15198 ;;                  1    wreg      enum E15307
 15199 ;; Registers used:
 15200 ;;		wreg, status,2, status,0, pclath, cstack
 15201 ;; Tracked objects:
 15202 ;;		On entry : 0/0
 15203 ;;		On exit  : 0/0
 15204 ;;		Unchanged: 0/0
 15205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15210 ;;Total ram usage:        0 bytes
 15211 ;; Hardware stack levels used:    1
 15212 ;; Hardware stack levels required when called:    7
 15213 ;; This function calls:
 15214 ;;		_i2c1_driver_TXData
 15215 ;; This function is called by:
 15216 ;;		_i2c_ISR
 15217 ;;		i1_i2c_ISR
 15218 ;; This function uses a non-reentrant model
 15219 ;;
 15220                           
 15221                           
 15222                           ;psect for function _do_I2C_SEND_ADR_READ
 15223  10B5                     _do_I2C_SEND_ADR_READ:	
 15224                           
 15225                           ;Skip over the trampoline to the duplicate function for level 1
 15226  10B5  1C7E               	btfss	126,0
 15227  10B6  28B9               	goto	l5283
 15228  10B7  319F  2FD8         	ljmp	i1l4619
 15229  10B9                     _do_I2C_SEND_ADR_READ$intlevel0:	
 15230  10B9                     l5283:	
 15231                           ;incstack = 0
 15232                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 15233                           
 15234                           
 15235                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 15236  10B9  0021               	movlb	1	; select bank1
 15237  10BA  15A0               	bsf	_i2c_status^(0+128),3
 15238                           
 15239                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 15240  10BB  1403               	setc
 15241  10BC  0D21               	rlf	(_i2c_status^(0+128)+1),w
 15242  10BD  319F  27A9         	fcall	_i2c1_driver_TXData
 15243                           
 15244                           ;i2c_master.c: 282: return I2C_RCEN;
 15245  10BF  3005               	movlw	5
 15246  10C0  0008               	return
 15247  10C1                     __end_of_do_I2C_SEND_ADR_READ:	
 15248                           
 15249                           	psect	text59
 15250  1005                     __ptext59:	
 15251 ;; *************** function _do_I2C_SEND_STOP *****************
 15252 ;; Defined at:
 15253 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 15254 ;; Parameters:    Size  Location     Type
 15255 ;;		None
 15256 ;; Auto vars:     Size  Location     Type
 15257 ;;		None
 15258 ;; Return value:  Size  Location     Type
 15259 ;;                  1    wreg      enum E15307
 15260 ;; Registers used:
 15261 ;;		wreg, status,2, status,0, pclath, cstack
 15262 ;; Tracked objects:
 15263 ;;		On entry : 0/0
 15264 ;;		On exit  : 0/0
 15265 ;;		Unchanged: 0/0
 15266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15271 ;;Total ram usage:        0 bytes
 15272 ;; Hardware stack levels used:    1
 15273 ;; Hardware stack levels required when called:    7
 15274 ;; This function calls:
 15275 ;;		_i2c1_driver_stop
 15276 ;; This function is called by:
 15277 ;;		_do_I2C_DO_ADDRESS_NACK
 15278 ;;		_do_I2C_TX
 15279 ;;		_do_I2C_TX_EMPTY
 15280 ;;		_i2c_ISR
 15281 ;;		i1_i2c_ISR
 15282 ;; This function uses a non-reentrant model
 15283 ;;
 15284                           
 15285                           
 15286                           ;psect for function _do_I2C_SEND_STOP
 15287  1005                     _do_I2C_SEND_STOP:	
 15288                           
 15289                           ;Skip over the trampoline to the duplicate function for level 1
 15290  1005  1C7E               	btfss	126,0
 15291  1006  2809               	goto	l5195
 15292  1007  319F  2F6A         	ljmp	i1l4215
 15293  1009                     _do_I2C_SEND_STOP$intlevel0:	
 15294  1009                     l5195:	
 15295                           ;incstack = 0
 15296 ;; hardware stack exceeded
 15297                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 15298                           
 15299                           
 15300                           ;i2c_master.c: 274: i2c1_driver_stop();
 15301  1009  319F  274A         	fcall	_i2c1_driver_stop
 15302                           
 15303                           ;i2c_master.c: 275: return I2C_IDLE;
 15304  100B  3000               	movlw	0
 15305  100C  0008               	return
 15306  100D                     __end_of_do_I2C_SEND_STOP:	
 15307                           
 15308                           	psect	text60
 15309  1FF8                     __ptext60:	
 15310 ;; *************** function _do_I2C_SEND_RESTART *****************
 15311 ;; Defined at:
 15312 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 15313 ;; Parameters:    Size  Location     Type
 15314 ;;		None
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;		None
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1    wreg      enum E15307
 15319 ;; Registers used:
 15320 ;;		wreg, status,2, status,0, pclath, cstack
 15321 ;; Tracked objects:
 15322 ;;		On entry : 0/0
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15330 ;;Total ram usage:        0 bytes
 15331 ;; Hardware stack levels used:    1
 15332 ;; Hardware stack levels required when called:    7
 15333 ;; This function calls:
 15334 ;;		_i2c1_driver_restart
 15335 ;; This function is called by:
 15336 ;;		_do_I2C_DO_ADDRESS_NACK
 15337 ;;		_do_I2C_TX_EMPTY
 15338 ;;		_i2c_ISR
 15339 ;;		i1_i2c_ISR
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343                           
 15344                           ;psect for function _do_I2C_SEND_RESTART
 15345  1FF8                     _do_I2C_SEND_RESTART:	
 15346                           
 15347                           ;Skip over the trampoline to the duplicate function for level 1
 15348  1FF8  1C7E               	btfss	126,0
 15349  1FF9  2FFC               	goto	l5189
 15350  1FFA  319F  2F66         	ljmp	i1l4209
 15351  1FFC                     _do_I2C_SEND_RESTART$intlevel0:	
 15352  1FFC                     l5189:	
 15353                           ;incstack = 0
 15354 ;; hardware stack exceeded
 15355                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15356                           
 15357                           
 15358                           ;i2c_master.c: 268: i2c1_driver_restart();
 15359  1FFC  319F  2747         	fcall	_i2c1_driver_restart
 15360                           
 15361                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 15362  1FFE  3001               	movlw	1
 15363  1FFF  0008               	return
 15364  2000                     __end_of_do_I2C_SEND_RESTART:	
 15365                           
 15366                           	psect	text61
 15367  1FF0                     __ptext61:	
 15368 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 15369 ;; Defined at:
 15370 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 15371 ;; Parameters:    Size  Location     Type
 15372 ;;		None
 15373 ;; Auto vars:     Size  Location     Type
 15374 ;;		None
 15375 ;; Return value:  Size  Location     Type
 15376 ;;                  1    wreg      enum E15307
 15377 ;; Registers used:
 15378 ;;		wreg, status,2, status,0, pclath, cstack
 15379 ;; Tracked objects:
 15380 ;;		On entry : 0/0
 15381 ;;		On exit  : 0/0
 15382 ;;		Unchanged: 0/0
 15383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15388 ;;Total ram usage:        0 bytes
 15389 ;; Hardware stack levels used:    1
 15390 ;; Hardware stack levels required when called:    7
 15391 ;; This function calls:
 15392 ;;		_i2c1_driver_restart
 15393 ;; This function is called by:
 15394 ;;		_do_I2C_TX
 15395 ;;		_i2c_ISR
 15396 ;;		i1_i2c_ISR
 15397 ;; This function uses a non-reentrant model
 15398 ;;
 15399                           
 15400                           
 15401                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 15402  1FF0                     _do_I2C_SEND_RESTART_WRITE:	
 15403                           
 15404                           ;Skip over the trampoline to the duplicate function for level 1
 15405  1FF0  1C7E               	btfss	126,0
 15406  1FF1  2FF4               	goto	l5183
 15407  1FF2  319F  2F62         	ljmp	i1l4203
 15408  1FF4                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 15409  1FF4                     l5183:	
 15410                           ;incstack = 0
 15411 ;; hardware stack exceeded
 15412                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15413                           
 15414                           
 15415                           ;i2c_master.c: 262: i2c1_driver_restart();
 15416  1FF4  319F  2747         	fcall	_i2c1_driver_restart
 15417                           
 15418                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 15419  1FF6  3002               	movlw	2
 15420  1FF7  0008               	return
 15421  1FF8                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 15422                           
 15423                           	psect	text62
 15424  1FE8                     __ptext62:	
 15425 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 15426 ;; Defined at:
 15427 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 15428 ;; Parameters:    Size  Location     Type
 15429 ;;		None
 15430 ;; Auto vars:     Size  Location     Type
 15431 ;;		None
 15432 ;; Return value:  Size  Location     Type
 15433 ;;                  1    wreg      enum E15307
 15434 ;; Registers used:
 15435 ;;		wreg, status,2, status,0, pclath, cstack
 15436 ;; Tracked objects:
 15437 ;;		On entry : 0/0
 15438 ;;		On exit  : 0/0
 15439 ;;		Unchanged: 0/0
 15440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15445 ;;Total ram usage:        0 bytes
 15446 ;; Hardware stack levels used:    1
 15447 ;; Hardware stack levels required when called:    7
 15448 ;; This function calls:
 15449 ;;		_i2c1_driver_restart
 15450 ;; This function is called by:
 15451 ;;		_do_I2C_TX
 15452 ;;		_i2c_ISR
 15453 ;;		i1_i2c_ISR
 15454 ;; This function uses a non-reentrant model
 15455 ;;
 15456                           
 15457                           
 15458                           ;psect for function _do_I2C_SEND_RESTART_READ
 15459  1FE8                     _do_I2C_SEND_RESTART_READ:	
 15460                           
 15461                           ;Skip over the trampoline to the duplicate function for level 1
 15462  1FE8  1C7E               	btfss	126,0
 15463  1FE9  2FEC               	goto	l5177
 15464  1FEA  319F  2F5E         	ljmp	i1l4197
 15465  1FEC                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 15466  1FEC                     l5177:	
 15467                           ;incstack = 0
 15468 ;; hardware stack exceeded
 15469                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 15470                           
 15471                           
 15472                           ;i2c_master.c: 256: i2c1_driver_restart();
 15473  1FEC  319F  2747         	fcall	_i2c1_driver_restart
 15474                           
 15475                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 15476  1FEE  3001               	movlw	1
 15477  1FEF  0008               	return
 15478  1FF0                     __end_of_do_I2C_SEND_RESTART_READ:	
 15479                           
 15480                           	psect	text63
 15481  1037                     __ptext63:	
 15482 ;; *************** function _do_I2C_IDLE *****************
 15483 ;; Defined at:
 15484 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 15485 ;; Parameters:    Size  Location     Type
 15486 ;;		None
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;		None
 15489 ;; Return value:  Size  Location     Type
 15490 ;;                  1    wreg      enum E15307
 15491 ;; Registers used:
 15492 ;;		wreg, status,2
 15493 ;; Tracked objects:
 15494 ;;		On entry : 0/0
 15495 ;;		On exit  : 0/0
 15496 ;;		Unchanged: 0/0
 15497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;Total ram usage:        0 bytes
 15503 ;; Hardware stack levels used:    1
 15504 ;; Hardware stack levels required when called:    6
 15505 ;; This function calls:
 15506 ;;		Nothing
 15507 ;; This function is called by:
 15508 ;;		_i2c_ISR
 15509 ;;		i1_i2c_ISR
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513                           
 15514                           ;psect for function _do_I2C_IDLE
 15515  1037                     _do_I2C_IDLE:	
 15516                           
 15517                           ;Skip over the trampoline to the duplicate function for level 1
 15518  1037  1C7E               	btfss	126,0
 15519  1038  283B               	goto	l5275
 15520  1039  3190  2800         	ljmp	i1l4611
 15521  103B                     _do_I2C_IDLE$intlevel0:	
 15522  103B                     l5275:	
 15523                           ;incstack = 0
 15524                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 15525                           
 15526                           
 15527                           ;i2c_master.c: 249: i2c_status.busy = 0;
 15528  103B  0021               	movlb	1	; select bank1
 15529  103C  1020               	bcf	_i2c_status^(0+128),0
 15530                           
 15531                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 15532  103D  01AA               	clrf	(_i2c_status^(0+128)+10)
 15533                           
 15534                           ;i2c_master.c: 251: return I2C_RESET;
 15535  103E  300E               	movlw	14
 15536  103F  0008               	return
 15537  1040                     __end_of_do_I2C_IDLE:	
 15538                           
 15539                           	psect	text64
 15540  1072                     __ptext64:	
 15541 ;; *************** function _do_I2C_RESET *****************
 15542 ;; Defined at:
 15543 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 15544 ;; Parameters:    Size  Location     Type
 15545 ;;		None
 15546 ;; Auto vars:     Size  Location     Type
 15547 ;;		None
 15548 ;; Return value:  Size  Location     Type
 15549 ;;                  1    wreg      enum E15307
 15550 ;; Registers used:
 15551 ;;		wreg, status,2, status,0, pclath, cstack
 15552 ;; Tracked objects:
 15553 ;;		On entry : 0/0
 15554 ;;		On exit  : 0/0
 15555 ;;		Unchanged: 0/0
 15556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15561 ;;Total ram usage:        0 bytes
 15562 ;; Hardware stack levels used:    1
 15563 ;; Hardware stack levels required when called:    7
 15564 ;; This function calls:
 15565 ;;		_i2c1_driver_resetBus
 15566 ;; This function is called by:
 15567 ;;		_i2c_ISR
 15568 ;;		i1_i2c_ISR
 15569 ;; This function uses a non-reentrant model
 15570 ;;
 15571                           
 15572                           
 15573                           ;psect for function _do_I2C_RESET
 15574  1072                     _do_I2C_RESET:	
 15575                           
 15576                           ;Skip over the trampoline to the duplicate function for level 1
 15577  1072  1C7E               	btfss	126,0
 15578  1073  2876               	goto	l5265
 15579  1074  319F  2FBB         	ljmp	i1l4601
 15580  1076                     _do_I2C_RESET$intlevel0:	
 15581  1076                     l5265:	
 15582                           ;incstack = 0
 15583                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 15584                           
 15585                           
 15586                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 15587  1076  319F  2721         	fcall	_i2c1_driver_resetBus
 15588                           
 15589                           ;i2c_master.c: 242: i2c_status.busy = 0;
 15590  1078  0021               	movlb	1	; select bank1
 15591  1079  1020               	bcf	_i2c_status^(0+128),0
 15592                           
 15593                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 15594  107A  01AA               	clrf	(_i2c_status^(0+128)+10)
 15595                           
 15596                           ;i2c_master.c: 244: return I2C_RESET;
 15597  107B  300E               	movlw	14
 15598  107C  0008               	return
 15599  107D                     __end_of_do_I2C_RESET:	
 15600                           
 15601                           	psect	text65
 15602  1444                     __ptext65:	
 15603 ;; *************** function _do_I2C_TX_EMPTY *****************
 15604 ;; Defined at:
 15605 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 15606 ;; Parameters:    Size  Location     Type
 15607 ;;		None
 15608 ;; Auto vars:     Size  Location     Type
 15609 ;;		None
 15610 ;; Return value:  Size  Location     Type
 15611 ;;                  1    wreg      enum E15307
 15612 ;; Registers used:
 15613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15614 ;; Tracked objects:
 15615 ;;		On entry : 0/0
 15616 ;;		On exit  : 0/0
 15617 ;;		Unchanged: 0/0
 15618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15623 ;;Total ram usage:        1 bytes
 15624 ;; Hardware stack levels used:    1
 15625 ;; Hardware stack levels required when called:    9
 15626 ;; This function calls:
 15627 ;;		Absolute function
 15628 ;;		_do_I2C_SEND_RESTART
 15629 ;;		_do_I2C_SEND_STOP
 15630 ;;		_i2c_restartWrite
 15631 ;;		_mssp1_setIRQ
 15632 ;;		_rd1RegCompleteHandler
 15633 ;;		_rd2RegCompleteHandler
 15634 ;;		_rdBlkRegCompleteHandler
 15635 ;;		_returnReset
 15636 ;;		_returnStop
 15637 ;;		_wr1RegCompleteHandler
 15638 ;;		_wr2RegCompleteHandler
 15639 ;; This function is called by:
 15640 ;;		_i2c_ISR
 15641 ;;		i1_i2c_ISR
 15642 ;; This function uses a non-reentrant model
 15643 ;;
 15644                           
 15645                           
 15646                           ;psect for function _do_I2C_TX_EMPTY
 15647  1444                     _do_I2C_TX_EMPTY:	
 15648                           
 15649                           ;Skip over the trampoline to the duplicate function for level 1
 15650  1444  1C7E               	btfss	126,0
 15651  1445  2C48               	goto	l7991
 15652  1446  3193  2B6B         	ljmp	i1l8247
 15653  1448                     _do_I2C_TX_EMPTY$intlevel0:	
 15654  1448                     l7991:	
 15655                           ;incstack = 0
 15656 ;; hardware stack exceeded
 15657                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15658                           
 15659                           
 15660                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 15661  1448  0021               	movlb	1	; select bank1
 15662  1449  1520               	bsf	_i2c_status^(0+128),2
 15663                           
 15664                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 15665  144A  2C55               	goto	l8009
 15666  144B                     l7993:	
 15667                           ;i2c_master.c: 386: {
 15668                           ;i2c_master.c: 387: case i2c_restart_read:
 15669                           
 15670                           
 15671                           ;i2c_master.c: 388: case i2c_restart_write:
 15672                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 15673  144B  319F  27F8         	fcall	_do_I2C_SEND_RESTART
 15674  144D  0008               	return
 15675  144E                     l7997:	
 15676                           ;i2c_master.c: 390: case i2c_continue:
 15677                           
 15678                           
 15679                           ;i2c_master.c: 391: mssp1_setIRQ();
 15680  144E  319F  2753         	fcall	_mssp1_setIRQ
 15681                           
 15682                           ;i2c_master.c: 392: return I2C_TX;
 15683  1450  3003               	movlw	3
 15684  1451  0008               	return
 15685  1452                     l8003:	
 15686                           ;i2c_master.c: 394: case i2c_stop:
 15687                           
 15688                           ;i2c_master.c: 393: default:
 15689                           
 15690                           
 15691                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 15692  1452  3190  2005         	fcall	_do_I2C_SEND_STOP
 15693                           
 15694                           ;i2c_master.c: 396: }
 15695  1454  0008               	return
 15696  1455                     l8009:	
 15697  1455  0021               	movlb	1	; select bank1
 15698  1456  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15699  1457  0020               	movlb	0	; select bank0
 15700  1458  00A0               	movwf	??_do_I2C_TX_EMPTY
 15701  1459  0820               	movf	??_do_I2C_TX_EMPTY,w
 15702  145A  00A9               	movwf	returnStop@p
 15703  145B  300B               	movlw	11
 15704  145C  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15705  145D  0086               	movwf	6
 15706  145E  0187               	clrf	7
 15707  145F  3F41               	moviw [1]fsr1
 15708  1460  008A               	movwf	10
 15709  1461  3F40               	moviw [0]fsr1
 15710  1462  000A               	callw
 15711  1463  3194               	pagesel	$
 15712                           
 15713                           ; Switch size 1, requested type "space"
 15714                           ; Number of cases is 4, Range of values is 1 to 4
 15715                           ; switch strategies available:
 15716                           ; Name         Instructions Cycles
 15717                           ; simple_byte           13     7 (average)
 15718                           ; direct_byte           17     9 (fixed)
 15719                           ; jumptable            263     9 (fixed)
 15720                           ;	Chosen strategy is simple_byte
 15721  1464  3A01               	xorlw	1	; case 1
 15722  1465  1903               	skipnz
 15723  1466  2C52               	goto	l8003
 15724  1467  3A03               	xorlw	3	; case 2
 15725  1468  1903               	skipnz
 15726  1469  2C4B               	goto	l7993
 15727  146A  3A01               	xorlw	1	; case 3
 15728  146B  1903               	skipnz
 15729  146C  2C4B               	goto	l7993
 15730  146D  3A07               	xorlw	7	; case 4
 15731  146E  1903               	skipnz
 15732  146F  2C4E               	goto	l7997
 15733  1470  2C52               	goto	l8003
 15734  1471  0008               	return
 15735  1472                     __end_of_do_I2C_TX_EMPTY:	
 15736                           
 15737                           	psect	text66
 15738  1F53                     __ptext66:	
 15739 ;; *************** function _mssp1_setIRQ *****************
 15740 ;; Defined at:
 15741 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;		None
 15744 ;; Auto vars:     Size  Location     Type
 15745 ;;		None
 15746 ;; Return value:  Size  Location     Type
 15747 ;;                  1    wreg      void 
 15748 ;; Registers used:
 15749 ;;		None
 15750 ;; Tracked objects:
 15751 ;;		On entry : 0/0
 15752 ;;		On exit  : 0/0
 15753 ;;		Unchanged: 0/0
 15754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15759 ;;Total ram usage:        0 bytes
 15760 ;; Hardware stack levels used:    1
 15761 ;; Hardware stack levels required when called:    6
 15762 ;; This function calls:
 15763 ;;		Nothing
 15764 ;; This function is called by:
 15765 ;;		_do_I2C_TX_EMPTY
 15766 ;; This function uses a non-reentrant model
 15767 ;;
 15768                           
 15769                           
 15770                           ;psect for function _mssp1_setIRQ
 15771  1F53                     _mssp1_setIRQ:	
 15772                           
 15773                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 15774                           
 15775                           ;incstack = 0
 15776                           ; Regs used in _mssp1_setIRQ: []
 15777  1F53  002E               	movlb	14	; select bank14
 15778  1F54  140F               	bsf	15,0	;volatile
 15779  1F55  0008               	return
 15780  1F56                     __end_of_mssp1_setIRQ:	
 15781                           
 15782                           	psect	text67
 15783  102E                     __ptext67:	
 15784 ;; *************** function _i2c1_driver_isNACK *****************
 15785 ;; Defined at:
 15786 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 15787 ;; Parameters:    Size  Location     Type
 15788 ;;		None
 15789 ;; Auto vars:     Size  Location     Type
 15790 ;;		None
 15791 ;; Return value:  Size  Location     Type
 15792 ;;		None               void
 15793 ;; Registers used:
 15794 ;;		wreg, status,2, status,0
 15795 ;; Tracked objects:
 15796 ;;		On entry : 0/0
 15797 ;;		On exit  : 0/0
 15798 ;;		Unchanged: 0/0
 15799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15802 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15803 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;Total ram usage:        1 bytes
 15805 ;; Hardware stack levels used:    1
 15806 ;; Hardware stack levels required when called:    6
 15807 ;; This function calls:
 15808 ;;		Nothing
 15809 ;; This function is called by:
 15810 ;;		_do_I2C_TX
 15811 ;;		_i2c_ISR
 15812 ;; This function uses a non-reentrant model
 15813 ;;
 15814                           
 15815                           
 15816                           ;psect for function _i2c1_driver_isNACK
 15817  102E                     _i2c1_driver_isNACK:	
 15818                           
 15819                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT;
 15820                           
 15821                           ;incstack = 0
 15822                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 15823  102E  0023               	movlb	3	; select bank3
 15824  102F  0E11               	swapf	17,w	;volatile
 15825  1030  0C89               	rrf	9,f
 15826  1031  0C89               	rrf	9,f
 15827  1032  3901               	andlw	1
 15828  1033  0020               	movlb	0	; select bank0
 15829  1034  00A0               	movwf	??_i2c1_driver_isNACK
 15830  1035  0C20               	rrf	??_i2c1_driver_isNACK,w
 15831  1036  0008               	return
 15832  1037                     __end_of_i2c1_driver_isNACK:	
 15833                           
 15834                           	psect	text68
 15835  1FA9                     __ptext68:	
 15836 ;; *************** function _i2c1_driver_TXData *****************
 15837 ;; Defined at:
 15838 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;  d               1    wreg     unsigned char 
 15841 ;; Auto vars:     Size  Location     Type
 15842 ;;  d               1    0[BANK0 ] unsigned char 
 15843 ;; Return value:  Size  Location     Type
 15844 ;;                  1    wreg      void 
 15845 ;; Registers used:
 15846 ;;		wreg
 15847 ;; Tracked objects:
 15848 ;;		On entry : 0/0
 15849 ;;		On exit  : 0/0
 15850 ;;		Unchanged: 0/0
 15851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15855 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;Total ram usage:        1 bytes
 15857 ;; Hardware stack levels used:    1
 15858 ;; Hardware stack levels required when called:    6
 15859 ;; This function calls:
 15860 ;;		Nothing
 15861 ;; This function is called by:
 15862 ;;		_do_I2C_SEND_ADR_READ
 15863 ;;		_do_I2C_SEND_ADR_WRITE
 15864 ;;		_do_I2C_TX
 15865 ;; This function uses a non-reentrant model
 15866 ;;
 15867                           
 15868                           
 15869                           ;psect for function _i2c1_driver_TXData
 15870  1FA9                     _i2c1_driver_TXData:	
 15871                           
 15872                           ;incstack = 0
 15873                           ; Regs used in _i2c1_driver_TXData: [wreg]
 15874                           ;i2c1_driver_TXData@d stored from wreg
 15875  1FA9  0020               	movlb	0	; select bank0
 15876  1FAA  00A0               	movwf	i2c1_driver_TXData@d
 15877                           
 15878                           ;i2c1_driver.c: 188: SSP1BUF = d;
 15879  1FAB  0820               	movf	i2c1_driver_TXData@d,w
 15880  1FAC  0023               	movlb	3	; select bank3
 15881  1FAD  008C               	movwf	12	;volatile
 15882  1FAE  0008               	return
 15883  1FAF                     __end_of_i2c1_driver_TXData:	
 15884                           
 15885                           	psect	text69
 15886  1F50                     __ptext69:	
 15887 ;; *************** function _i2c1_driver_getRXData *****************
 15888 ;; Defined at:
 15889 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;		None
 15892 ;; Auto vars:     Size  Location     Type
 15893 ;;		None
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  1    wreg      unsigned char 
 15896 ;; Registers used:
 15897 ;;		wreg
 15898 ;; Tracked objects:
 15899 ;;		On entry : 0/0
 15900 ;;		On exit  : 0/0
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15907 ;;Total ram usage:        0 bytes
 15908 ;; Hardware stack levels used:    1
 15909 ;; Hardware stack levels required when called:    6
 15910 ;; This function calls:
 15911 ;;		Nothing
 15912 ;; This function is called by:
 15913 ;;		_do_I2C_RX
 15914 ;; This function uses a non-reentrant model
 15915 ;;
 15916                           
 15917                           
 15918                           ;psect for function _i2c1_driver_getRXData
 15919  1F50                     _i2c1_driver_getRXData:	
 15920                           
 15921                           ;i2c1_driver.c: 173: return SSP1BUF;
 15922                           
 15923                           ;incstack = 0
 15924                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 15925  1F50  0023               	movlb	3	; select bank3
 15926  1F51  080C               	movf	12,w	;volatile
 15927  1F52  0008               	return
 15928  1F53                     __end_of_i2c1_driver_getRXData:	
 15929                           
 15930                           	psect	text70
 15931  1F7E                     __ptext70:	
 15932 ;; *************** function _i2c1_driver_sendNACK *****************
 15933 ;; Defined at:
 15934 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 15935 ;; Parameters:    Size  Location     Type
 15936 ;;		None
 15937 ;; Auto vars:     Size  Location     Type
 15938 ;;		None
 15939 ;; Return value:  Size  Location     Type
 15940 ;;                  1    wreg      void 
 15941 ;; Registers used:
 15942 ;;		None
 15943 ;; Tracked objects:
 15944 ;;		On entry : 0/0
 15945 ;;		On exit  : 0/0
 15946 ;;		Unchanged: 0/0
 15947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15952 ;;Total ram usage:        0 bytes
 15953 ;; Hardware stack levels used:    1
 15954 ;; Hardware stack levels required when called:    6
 15955 ;; This function calls:
 15956 ;;		Nothing
 15957 ;; This function is called by:
 15958 ;;		_do_I2C_DO_NACK_STOP
 15959 ;;		_do_I2C_DO_NACK_RESTART
 15960 ;; This function uses a non-reentrant model
 15961 ;;
 15962                           
 15963                           
 15964                           ;psect for function _i2c1_driver_sendNACK
 15965  1F7E                     _i2c1_driver_sendNACK:	
 15966                           
 15967                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 15968                           
 15969                           ;incstack = 0
 15970 ;; hardware stack exceeded
 15971                           ; Regs used in _i2c1_driver_sendNACK: []
 15972  1F7E  0023               	movlb	3	; select bank3
 15973  1F7F  1691               	bsf	17,5	;volatile
 15974                           
 15975                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 15976  1F80  1611               	bsf	17,4	;volatile
 15977  1F81  0008               	return
 15978  1F82                     __end_of_i2c1_driver_sendNACK:	
 15979                           
 15980                           	psect	text71
 15981  1F21                     __ptext71:	
 15982 ;; *************** function _i2c1_driver_resetBus *****************
 15983 ;; Defined at:
 15984 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 15985 ;; Parameters:    Size  Location     Type
 15986 ;;		None
 15987 ;; Auto vars:     Size  Location     Type
 15988 ;;		None
 15989 ;; Return value:  Size  Location     Type
 15990 ;;                  1    wreg      void 
 15991 ;; Registers used:
 15992 ;;		None
 15993 ;; Tracked objects:
 15994 ;;		On entry : 0/0
 15995 ;;		On exit  : 0/0
 15996 ;;		Unchanged: 0/0
 15997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16002 ;;Total ram usage:        0 bytes
 16003 ;; Hardware stack levels used:    1
 16004 ;; Hardware stack levels required when called:    6
 16005 ;; This function calls:
 16006 ;;		Nothing
 16007 ;; This function is called by:
 16008 ;;		_do_I2C_RESET
 16009 ;; This function uses a non-reentrant model
 16010 ;;
 16011                           
 16012                           
 16013                           ;psect for function _i2c1_driver_resetBus
 16014  1F21                     _i2c1_driver_resetBus:	
 16015                           
 16016                           ;incstack = 0
 16017                           ; Regs used in _i2c1_driver_resetBus: []
 16018  1F21  0008               	return
 16019  1F22                     __end_of_i2c1_driver_resetBus:	
 16020                           
 16021                           	psect	text72
 16022  1F4D                     __ptext72:	
 16023 ;; *************** function _i2c1_driver_startRX *****************
 16024 ;; Defined at:
 16025 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 16026 ;; Parameters:    Size  Location     Type
 16027 ;;		None
 16028 ;; Auto vars:     Size  Location     Type
 16029 ;;		None
 16030 ;; Return value:  Size  Location     Type
 16031 ;;                  1    wreg      void 
 16032 ;; Registers used:
 16033 ;;		None
 16034 ;; Tracked objects:
 16035 ;;		On entry : 0/0
 16036 ;;		On exit  : 0/0
 16037 ;;		Unchanged: 0/0
 16038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16043 ;;Total ram usage:        0 bytes
 16044 ;; Hardware stack levels used:    1
 16045 ;; Hardware stack levels required when called:    6
 16046 ;; This function calls:
 16047 ;;		Nothing
 16048 ;; This function is called by:
 16049 ;;		_do_I2C_RCEN
 16050 ;; This function uses a non-reentrant model
 16051 ;;
 16052                           
 16053                           
 16054                           ;psect for function _i2c1_driver_startRX
 16055  1F4D                     _i2c1_driver_startRX:	
 16056                           
 16057                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 16058                           
 16059                           ;incstack = 0
 16060                           ; Regs used in _i2c1_driver_startRX: []
 16061  1F4D  0023               	movlb	3	; select bank3
 16062  1F4E  1591               	bsf	17,3	;volatile
 16063  1F4F  0008               	return
 16064  1F50                     __end_of_i2c1_driver_startRX:	
 16065                           
 16066                           	psect	text73
 16067  1283                     __ptext73:	
 16068 ;; *************** function _rdBlkRegCompleteHandler *****************
 16069 ;; Defined at:
 16070 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16071 ;; Parameters:    Size  Location     Type
 16072 ;;  p               1    9[BANK0 ] PTR void 
 16073 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16074 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16075 ;; Auto vars:     Size  Location     Type
 16076 ;;		None
 16077 ;; Return value:  Size  Location     Type
 16078 ;;                  1    wreg      enum E97
 16079 ;; Registers used:
 16080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16081 ;; Tracked objects:
 16082 ;;		On entry : 0/0
 16083 ;;		On exit  : 0/0
 16084 ;;		Unchanged: 0/0
 16085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16086 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16090 ;;Total ram usage:        1 bytes
 16091 ;; Hardware stack levels used:    1
 16092 ;; Hardware stack levels required when called:    8
 16093 ;; This function calls:
 16094 ;;		_i2c_setBuffer
 16095 ;;		_i2c_setDataCompleteCallback
 16096 ;; This function is called by:
 16097 ;;		_i2c_readDataBlock
 16098 ;;		_do_I2C_DO_ADDRESS_NACK
 16099 ;;		_do_I2C_TX
 16100 ;;		_do_I2C_RX
 16101 ;;		_do_I2C_TX_EMPTY
 16102 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16103 ;;		i1_do_I2C_TX
 16104 ;;		i1_do_I2C_RX
 16105 ;;		i1_do_I2C_TX_EMPTY
 16106 ;; This function uses a non-reentrant model
 16107 ;;
 16108                           
 16109                           
 16110                           ;psect for function _rdBlkRegCompleteHandler
 16111  1283                     _rdBlkRegCompleteHandler:	
 16112                           
 16113                           ;Skip over the trampoline to the duplicate function for level 1
 16114  1283  1C7E               	btfss	126,0
 16115  1284  2A87               	goto	l5257
 16116  1285  3192  2A19         	ljmp	i1l6023
 16117  1287                     _rdBlkRegCompleteHandler$intlevel0:	
 16118  1287                     l5257:	
 16119                           ;incstack = 0
 16120 ;; hardware stack exceeded
 16121                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16122                           
 16123                           
 16124                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 16125  1287  0020               	movlb	0	; select bank0
 16126  1288  0829               	movf	rdBlkRegCompleteHandler@p,w
 16127  1289  0086               	movwf	6
 16128  128A  0187               	clrf	7
 16129  128B  3F40               	moviw [0]fsr1
 16130  128C  00A0               	movwf	i2c_setBuffer@bufferSize
 16131  128D  3F41               	moviw [1]fsr1
 16132  128E  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16133  128F  0829               	movf	rdBlkRegCompleteHandler@p,w
 16134  1290  3E02               	addlw	2
 16135  1291  0086               	movwf	6
 16136  1292  0187               	clrf	7
 16137  1293  0801               	movf	1,w
 16138  1294  3191  2195  3192   	fcall	_i2c_setBuffer
 16139                           
 16140                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 16141  1297  3000               	movlw	0
 16142  1298  0020               	movlb	0	; select bank0
 16143  1299  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16144  129A  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16145  129B  01A7               	clrf	i2c_setDataCompleteCallback@p
 16146  129C  3190  20E6         	fcall	_i2c_setDataCompleteCallback
 16147                           
 16148                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 16149  129E  3002               	movlw	2
 16150  129F  0008               	return
 16151  12A0                     __end_of_rdBlkRegCompleteHandler:	
 16152                           
 16153                           	psect	text74
 16154  11EC                     __ptext74:	
 16155 ;; *************** function _rd2RegCompleteHandler *****************
 16156 ;; Defined at:
 16157 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16158 ;; Parameters:    Size  Location     Type
 16159 ;;  p               1    9[BANK0 ] PTR void 
 16160 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16161 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16162 ;; Auto vars:     Size  Location     Type
 16163 ;;		None
 16164 ;; Return value:  Size  Location     Type
 16165 ;;                  1    wreg      enum E97
 16166 ;; Registers used:
 16167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16168 ;; Tracked objects:
 16169 ;;		On entry : 0/0
 16170 ;;		On exit  : 0/0
 16171 ;;		Unchanged: 0/0
 16172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16173 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16176 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16177 ;;Total ram usage:        1 bytes
 16178 ;; Hardware stack levels used:    1
 16179 ;; Hardware stack levels required when called:    8
 16180 ;; This function calls:
 16181 ;;		_i2c_setBuffer
 16182 ;;		_i2c_setDataCompleteCallback
 16183 ;; This function is called by:
 16184 ;;		_i2c_read2ByteRegister
 16185 ;;		_do_I2C_DO_ADDRESS_NACK
 16186 ;;		_do_I2C_TX
 16187 ;;		_do_I2C_RX
 16188 ;;		_do_I2C_TX_EMPTY
 16189 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16190 ;;		i1_do_I2C_TX
 16191 ;;		i1_do_I2C_RX
 16192 ;;		i1_do_I2C_TX_EMPTY
 16193 ;; This function uses a non-reentrant model
 16194 ;;
 16195                           
 16196                           
 16197                           ;psect for function _rd2RegCompleteHandler
 16198  11EC                     _rd2RegCompleteHandler:	
 16199                           
 16200                           ;Skip over the trampoline to the duplicate function for level 1
 16201  11EC  1C7E               	btfss	126,0
 16202  11ED  29F0               	goto	l5241
 16203  11EE  3191  295F         	ljmp	i1l6007
 16204  11F0                     _rd2RegCompleteHandler$intlevel0:	
 16205  11F0                     l5241:	
 16206                           ;incstack = 0
 16207 ;; hardware stack exceeded
 16208                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16209                           
 16210                           
 16211                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 16212  11F0  3002               	movlw	2
 16213  11F1  0020               	movlb	0	; select bank0
 16214  11F2  00A0               	movwf	i2c_setBuffer@bufferSize
 16215  11F3  3000               	movlw	0
 16216  11F4  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16217  11F5  0829               	movf	rd2RegCompleteHandler@p,w
 16218  11F6  3191  2195  3191   	fcall	_i2c_setBuffer
 16219                           
 16220                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 16221  11F9  3000               	movlw	0
 16222  11FA  0020               	movlb	0	; select bank0
 16223  11FB  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16224  11FC  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16225  11FD  01A7               	clrf	i2c_setDataCompleteCallback@p
 16226  11FE  3190  20E6         	fcall	_i2c_setDataCompleteCallback
 16227                           
 16228                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 16229  1200  3002               	movlw	2
 16230  1201  0008               	return
 16231  1202                     __end_of_rd2RegCompleteHandler:	
 16232                           
 16233                           	psect	text75
 16234  11D6                     __ptext75:	
 16235 ;; *************** function _rd1RegCompleteHandler *****************
 16236 ;; Defined at:
 16237 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16238 ;; Parameters:    Size  Location     Type
 16239 ;;  p               1    9[BANK0 ] PTR void 
 16240 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16241 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16242 ;; Auto vars:     Size  Location     Type
 16243 ;;		None
 16244 ;; Return value:  Size  Location     Type
 16245 ;;                  1    wreg      enum E97
 16246 ;; Registers used:
 16247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16248 ;; Tracked objects:
 16249 ;;		On entry : 0/0
 16250 ;;		On exit  : 0/0
 16251 ;;		Unchanged: 0/0
 16252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16253 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16257 ;;Total ram usage:        1 bytes
 16258 ;; Hardware stack levels used:    1
 16259 ;; Hardware stack levels required when called:    8
 16260 ;; This function calls:
 16261 ;;		_i2c_setBuffer
 16262 ;;		_i2c_setDataCompleteCallback
 16263 ;; This function is called by:
 16264 ;;		_i2c_read1ByteRegister
 16265 ;;		_do_I2C_DO_ADDRESS_NACK
 16266 ;;		_do_I2C_TX
 16267 ;;		_do_I2C_RX
 16268 ;;		_do_I2C_TX_EMPTY
 16269 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16270 ;;		i1_do_I2C_TX
 16271 ;;		i1_do_I2C_RX
 16272 ;;		i1_do_I2C_TX_EMPTY
 16273 ;; This function uses a non-reentrant model
 16274 ;;
 16275                           
 16276                           
 16277                           ;psect for function _rd1RegCompleteHandler
 16278  11D6                     _rd1RegCompleteHandler:	
 16279                           
 16280                           ;Skip over the trampoline to the duplicate function for level 1
 16281  11D6  1C7E               	btfss	126,0
 16282  11D7  29DA               	goto	l5233
 16283  11D8  3191  294E         	ljmp	i1l5999
 16284  11DA                     _rd1RegCompleteHandler$intlevel0:	
 16285  11DA                     l5233:	
 16286                           ;incstack = 0
 16287 ;; hardware stack exceeded
 16288                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16289                           
 16290                           
 16291                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 16292  11DA  3001               	movlw	1
 16293  11DB  0020               	movlb	0	; select bank0
 16294  11DC  00A0               	movwf	i2c_setBuffer@bufferSize
 16295  11DD  3000               	movlw	0
 16296  11DE  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16297  11DF  0829               	movf	rd1RegCompleteHandler@p,w
 16298  11E0  3191  2195  3191   	fcall	_i2c_setBuffer
 16299                           
 16300                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 16301  11E3  3000               	movlw	0
 16302  11E4  0020               	movlb	0	; select bank0
 16303  11E5  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16304  11E6  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16305  11E7  01A7               	clrf	i2c_setDataCompleteCallback@p
 16306  11E8  3190  20E6         	fcall	_i2c_setDataCompleteCallback
 16307                           
 16308                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 16309  11EA  3002               	movlw	2
 16310  11EB  0008               	return
 16311  11EC                     __end_of_rd1RegCompleteHandler:	
 16312                           
 16313                           	psect	text76
 16314  11C0                     __ptext76:	
 16315 ;; *************** function _wr1RegCompleteHandler *****************
 16316 ;; Defined at:
 16317 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16318 ;; Parameters:    Size  Location     Type
 16319 ;;  p               1    9[BANK0 ] PTR void 
 16320 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16321 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16322 ;; Auto vars:     Size  Location     Type
 16323 ;;		None
 16324 ;; Return value:  Size  Location     Type
 16325 ;;                  1    wreg      enum E97
 16326 ;; Registers used:
 16327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16328 ;; Tracked objects:
 16329 ;;		On entry : 0/0
 16330 ;;		On exit  : 0/0
 16331 ;;		Unchanged: 0/0
 16332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16333 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16336 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16337 ;;Total ram usage:        1 bytes
 16338 ;; Hardware stack levels used:    1
 16339 ;; Hardware stack levels required when called:    8
 16340 ;; This function calls:
 16341 ;;		_i2c_setBuffer
 16342 ;;		_i2c_setDataCompleteCallback
 16343 ;; This function is called by:
 16344 ;;		_i2c_write1ByteRegister
 16345 ;;		_do_I2C_DO_ADDRESS_NACK
 16346 ;;		_do_I2C_TX
 16347 ;;		_do_I2C_RX
 16348 ;;		_do_I2C_TX_EMPTY
 16349 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16350 ;;		i1_do_I2C_TX
 16351 ;;		i1_do_I2C_RX
 16352 ;;		i1_do_I2C_TX_EMPTY
 16353 ;; This function uses a non-reentrant model
 16354 ;;
 16355                           
 16356                           
 16357                           ;psect for function _wr1RegCompleteHandler
 16358  11C0                     _wr1RegCompleteHandler:	
 16359                           
 16360                           ;Skip over the trampoline to the duplicate function for level 1
 16361  11C0  1C7E               	btfss	126,0
 16362  11C1  29C4               	goto	l5225
 16363  11C2  3191  293D         	ljmp	i1l5991
 16364  11C4                     _wr1RegCompleteHandler$intlevel0:	
 16365  11C4                     l5225:	
 16366                           ;incstack = 0
 16367 ;; hardware stack exceeded
 16368                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16369                           
 16370                           
 16371                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 16372  11C4  3001               	movlw	1
 16373  11C5  0020               	movlb	0	; select bank0
 16374  11C6  00A0               	movwf	i2c_setBuffer@bufferSize
 16375  11C7  3000               	movlw	0
 16376  11C8  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16377  11C9  0829               	movf	wr1RegCompleteHandler@p,w
 16378  11CA  3191  2195  3191   	fcall	_i2c_setBuffer
 16379                           
 16380                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 16381  11CD  3000               	movlw	0
 16382  11CE  0020               	movlb	0	; select bank0
 16383  11CF  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16384  11D0  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16385  11D1  01A7               	clrf	i2c_setDataCompleteCallback@p
 16386  11D2  3190  20E6         	fcall	_i2c_setDataCompleteCallback
 16387                           
 16388                           ;i2c_simple_master.c: 35: return i2c_continue;
 16389  11D4  3004               	movlw	4
 16390  11D5  0008               	return
 16391  11D6                     __end_of_wr1RegCompleteHandler:	
 16392                           
 16393                           	psect	text77
 16394  1FA3                     __ptext77:	
 16395 ;; *************** function _i2c_restartWrite *****************
 16396 ;; Defined at:
 16397 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 16398 ;; Parameters:    Size  Location     Type
 16399 ;;  p               1    9[BANK0 ] PTR void 
 16400 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16401 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16402 ;; Auto vars:     Size  Location     Type
 16403 ;;		None
 16404 ;; Return value:  Size  Location     Type
 16405 ;;                  1    wreg      enum E96
 16406 ;; Registers used:
 16407 ;;		wreg
 16408 ;; Tracked objects:
 16409 ;;		On entry : 0/0
 16410 ;;		On exit  : 0/0
 16411 ;;		Unchanged: 0/0
 16412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16413 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16416 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16417 ;;Total ram usage:        1 bytes
 16418 ;; Hardware stack levels used:    1
 16419 ;; Hardware stack levels required when called:    6
 16420 ;; This function calls:
 16421 ;;		Nothing
 16422 ;; This function is called by:
 16423 ;;		_i2c_write1ByteRegister
 16424 ;;		_i2c_read1ByteRegister
 16425 ;;		_i2c_writeNBytes
 16426 ;;		_i2c_read2ByteRegister
 16427 ;;		_i2c_write2ByteRegister
 16428 ;;		_i2c_readDataBlock
 16429 ;;		_do_I2C_DO_ADDRESS_NACK
 16430 ;;		_do_I2C_TX
 16431 ;;		_do_I2C_RX
 16432 ;;		_do_I2C_TX_EMPTY
 16433 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16434 ;;		i1_do_I2C_TX
 16435 ;;		i1_do_I2C_RX
 16436 ;;		i1_do_I2C_TX_EMPTY
 16437 ;; This function uses a non-reentrant model
 16438 ;;
 16439                           
 16440                           
 16441                           ;psect for function _i2c_restartWrite
 16442  1FA3                     _i2c_restartWrite:	
 16443                           
 16444                           ;Skip over the trampoline to the duplicate function for level 1
 16445  1FA3  1C7E               	btfss	126,0
 16446  1FA4  2FA7               	goto	l5221
 16447  1FA5  3180  2802         	ljmp	i1l5987
 16448  1FA7                     _i2c_restartWrite$intlevel0:	
 16449  1FA7                     l5221:	
 16450                           ;incstack = 0
 16451                           ; Regs used in _i2c_restartWrite: [wreg]
 16452                           
 16453                           
 16454                           ;i2c_types.c: 37: return i2c_restart_write;
 16455  1FA7  3003               	movlw	3
 16456  1FA8  0008               	return
 16457  1FA9                     __end_of_i2c_restartWrite:	
 16458                           
 16459                           	psect	text78
 16460  1F9D                     __ptext78:	
 16461 ;; *************** function _returnReset *****************
 16462 ;; Defined at:
 16463 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;  p               1    9[BANK0 ] PTR void 
 16466 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16467 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16468 ;; Auto vars:     Size  Location     Type
 16469 ;;		None
 16470 ;; Return value:  Size  Location     Type
 16471 ;;                  1    wreg      enum E15143
 16472 ;; Registers used:
 16473 ;;		wreg
 16474 ;; Tracked objects:
 16475 ;;		On entry : 0/0
 16476 ;;		On exit  : 0/0
 16477 ;;		Unchanged: 0/0
 16478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16479 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;Total ram usage:        1 bytes
 16484 ;; Hardware stack levels used:    1
 16485 ;; Hardware stack levels required when called:    6
 16486 ;; This function calls:
 16487 ;;		Nothing
 16488 ;; This function is called by:
 16489 ;;		_i2c_open
 16490 ;;		_do_I2C_DO_ADDRESS_NACK
 16491 ;;		_do_I2C_TX
 16492 ;;		_do_I2C_RX
 16493 ;;		_do_I2C_TX_EMPTY
 16494 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16495 ;;		i1_do_I2C_TX
 16496 ;;		i1_do_I2C_RX
 16497 ;;		i1_do_I2C_TX_EMPTY
 16498 ;; This function uses a non-reentrant model
 16499 ;;
 16500                           
 16501                           
 16502                           ;psect for function _returnReset
 16503  1F9D                     _returnReset:	
 16504                           
 16505                           ;Skip over the trampoline to the duplicate function for level 1
 16506  1F9D  1C7E               	btfss	126,0
 16507  1F9E  2FA1               	goto	l5217
 16508  1F9F  319F  2F24         	ljmp	i1l5983
 16509  1FA1                     _returnReset$intlevel0:	
 16510  1FA1                     l5217:	
 16511                           ;incstack = 0
 16512                           ; Regs used in _returnReset: [wreg]
 16513                           
 16514                           
 16515                           ;i2c_master.c: 450: return i2c_reset_link;
 16516  1FA1  3005               	movlw	5
 16517  1FA2  0008               	return
 16518  1FA3                     __end_of_returnReset:	
 16519                           
 16520                           	psect	text79
 16521  1F97                     __ptext79:	
 16522 ;; *************** function _returnStop *****************
 16523 ;; Defined at:
 16524 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 16525 ;; Parameters:    Size  Location     Type
 16526 ;;  p               1    9[BANK0 ] PTR void 
 16527 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16528 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16529 ;; Auto vars:     Size  Location     Type
 16530 ;;		None
 16531 ;; Return value:  Size  Location     Type
 16532 ;;                  1    wreg      enum E15143
 16533 ;; Registers used:
 16534 ;;		wreg
 16535 ;; Tracked objects:
 16536 ;;		On entry : 0/0
 16537 ;;		On exit  : 0/0
 16538 ;;		Unchanged: 0/0
 16539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16540 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16543 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16544 ;;Total ram usage:        1 bytes
 16545 ;; Hardware stack levels used:    1
 16546 ;; Hardware stack levels required when called:    6
 16547 ;; This function calls:
 16548 ;;		Nothing
 16549 ;; This function is called by:
 16550 ;;		_i2c_open
 16551 ;;		_setCallBack
 16552 ;;		_do_I2C_DO_ADDRESS_NACK
 16553 ;;		_do_I2C_TX
 16554 ;;		_do_I2C_RX
 16555 ;;		_do_I2C_TX_EMPTY
 16556 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16557 ;;		i1_do_I2C_TX
 16558 ;;		i1_do_I2C_RX
 16559 ;;		i1_do_I2C_TX_EMPTY
 16560 ;; This function uses a non-reentrant model
 16561 ;;
 16562                           
 16563                           
 16564                           ;psect for function _returnStop
 16565  1F97                     _returnStop:	
 16566                           
 16567                           ;Skip over the trampoline to the duplicate function for level 1
 16568  1F97  1C7E               	btfss	126,0
 16569  1F98  2F9B               	goto	l5213
 16570  1F99  319F  2F22         	ljmp	i1l5979
 16571  1F9B                     _returnStop$intlevel0:	
 16572  1F9B                     l5213:	
 16573                           ;incstack = 0
 16574                           ; Regs used in _returnStop: [wreg]
 16575                           
 16576                           
 16577                           ;i2c_master.c: 445: return i2c_stop;
 16578  1F9B  3001               	movlw	1
 16579  1F9C  0008               	return
 16580  1F9D                     __end_of_returnStop:	
 16581                           
 16582                           	psect	text80
 16583  11AA                     __ptext80:	
 16584 ;; *************** function _wr2RegCompleteHandler *****************
 16585 ;; Defined at:
 16586 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;  p               1    9[BANK0 ] PTR void 
 16589 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16590 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16591 ;; Auto vars:     Size  Location     Type
 16592 ;;		None
 16593 ;; Return value:  Size  Location     Type
 16594 ;;                  1    wreg      enum E97
 16595 ;; Registers used:
 16596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16597 ;; Tracked objects:
 16598 ;;		On entry : 0/0
 16599 ;;		On exit  : 0/0
 16600 ;;		Unchanged: 0/0
 16601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16602 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16605 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16606 ;;Total ram usage:        1 bytes
 16607 ;; Hardware stack levels used:    1
 16608 ;; Hardware stack levels required when called:    8
 16609 ;; This function calls:
 16610 ;;		_i2c_setBuffer
 16611 ;;		_i2c_setDataCompleteCallback
 16612 ;; This function is called by:
 16613 ;;		_i2c_write2ByteRegister
 16614 ;;		_do_I2C_DO_ADDRESS_NACK
 16615 ;;		_do_I2C_TX
 16616 ;;		_do_I2C_RX
 16617 ;;		_do_I2C_TX_EMPTY
 16618 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16619 ;;		i1_do_I2C_TX
 16620 ;;		i1_do_I2C_RX
 16621 ;;		i1_do_I2C_TX_EMPTY
 16622 ;; This function uses a non-reentrant model
 16623 ;;
 16624                           
 16625                           
 16626                           ;psect for function _wr2RegCompleteHandler
 16627  11AA                     _wr2RegCompleteHandler:	
 16628                           
 16629                           ;Skip over the trampoline to the duplicate function for level 1
 16630  11AA  1C7E               	btfss	126,0
 16631  11AB  29AE               	goto	l5249
 16632  11AC  3191  292C         	ljmp	i1l6015
 16633  11AE                     _wr2RegCompleteHandler$intlevel0:	
 16634  11AE                     l5249:	
 16635                           ;incstack = 0
 16636 ;; hardware stack exceeded
 16637                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16638                           
 16639                           
 16640                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 16641  11AE  3002               	movlw	2
 16642  11AF  0020               	movlb	0	; select bank0
 16643  11B0  00A0               	movwf	i2c_setBuffer@bufferSize
 16644  11B1  3000               	movlw	0
 16645  11B2  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16646  11B3  0829               	movf	wr2RegCompleteHandler@p,w
 16647  11B4  3191  2195  3191   	fcall	_i2c_setBuffer
 16648                           
 16649                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 16650  11B7  3000               	movlw	0
 16651  11B8  0020               	movlb	0	; select bank0
 16652  11B9  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16653  11BA  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16654  11BB  01A7               	clrf	i2c_setDataCompleteCallback@p
 16655  11BC  3190  20E6         	fcall	_i2c_setDataCompleteCallback
 16656                           
 16657                           ;i2c_simple_master.c: 114: return i2c_continue;
 16658  11BE  3004               	movlw	4
 16659  11BF  0008               	return
 16660  11C0                     __end_of_wr2RegCompleteHandler:	
 16661                           
 16662                           	psect	text81
 16663  10E6                     __ptext81:	
 16664 ;; *************** function _i2c_setDataCompleteCallback *****************
 16665 ;; Defined at:
 16666 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 16667 ;; Parameters:    Size  Location     Type
 16668 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 16669 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16670 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 16671 ;;  p               1    7[BANK0 ] PTR void 
 16672 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16673 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16674 ;; Auto vars:     Size  Location     Type
 16675 ;;		None
 16676 ;; Return value:  Size  Location     Type
 16677 ;;                  1    wreg      void 
 16678 ;; Registers used:
 16679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16680 ;; Tracked objects:
 16681 ;;		On entry : 0/0
 16682 ;;		On exit  : 0/0
 16683 ;;		Unchanged: 0/0
 16684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16685 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16687 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16688 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16689 ;;Total ram usage:        4 bytes
 16690 ;; Hardware stack levels used:    1
 16691 ;; Hardware stack levels required when called:    7
 16692 ;; This function calls:
 16693 ;;		_setCallBack
 16694 ;; This function is called by:
 16695 ;;		_wr1RegCompleteHandler
 16696 ;;		_i2c_write1ByteRegister
 16697 ;;		_rd1RegCompleteHandler
 16698 ;;		_i2c_read1ByteRegister
 16699 ;;		_rd2RegCompleteHandler
 16700 ;;		_wr2RegCompleteHandler
 16701 ;;		_rdBlkRegCompleteHandler
 16702 ;;		_i2c_read2ByteRegister
 16703 ;;		_i2c_write2ByteRegister
 16704 ;;		_i2c_readDataBlock
 16705 ;; This function uses a non-reentrant model
 16706 ;;
 16707                           
 16708                           
 16709                           ;psect for function _i2c_setDataCompleteCallback
 16710  10E6                     _i2c_setDataCompleteCallback:	
 16711                           
 16712                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 16713                           
 16714                           ;incstack = 0
 16715                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16716  10E6  0020               	movlb	0	; select bank0
 16717  10E7  0826               	movf	i2c_setDataCompleteCallback@cb+1,w
 16718  10E8  00A1               	movwf	setCallBack@cb+1
 16719  10E9  0825               	movf	i2c_setDataCompleteCallback@cb,w
 16720  10EA  00A0               	movwf	setCallBack@cb
 16721  10EB  0827               	movf	i2c_setDataCompleteCallback@p,w
 16722  10EC  00A8               	movwf	??_i2c_setDataCompleteCallback
 16723  10ED  0828               	movf	??_i2c_setDataCompleteCallback,w
 16724  10EE  00A2               	movwf	setCallBack@p
 16725  10EF  3000               	movlw	0
 16726  10F0  3193  2346         	fcall	_setCallBack
 16727  10F2  0008               	return
 16728  10F3                     __end_of_i2c_setDataCompleteCallback:	
 16729                           
 16730                           	psect	text82
 16731  1346                     __ptext82:	
 16732 ;; *************** function _setCallBack *****************
 16733 ;; Defined at:
 16734 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 16735 ;; Parameters:    Size  Location     Type
 16736 ;;  idx             1    wreg     enum E15325
 16737 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 16738 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16739 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 16740 ;;  p               1    2[BANK0 ] PTR void 
 16741 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16742 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16743 ;; Auto vars:     Size  Location     Type
 16744 ;;  idx             1    4[BANK0 ] enum E15325
 16745 ;; Return value:  Size  Location     Type
 16746 ;;                  1    wreg      void 
 16747 ;; Registers used:
 16748 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16749 ;; Tracked objects:
 16750 ;;		On entry : 0/0
 16751 ;;		On exit  : 0/0
 16752 ;;		Unchanged: 0/0
 16753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16754 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16757 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16758 ;;Total ram usage:        5 bytes
 16759 ;; Hardware stack levels used:    1
 16760 ;; Hardware stack levels required when called:    6
 16761 ;; This function calls:
 16762 ;;		Nothing
 16763 ;; This function is called by:
 16764 ;;		_i2c_setDataCompleteCallback
 16765 ;;		_i2c_setAddressNACKCallback
 16766 ;;		_i2c_setWriteCollisionCallback
 16767 ;;		_i2c_setDataNACKCallback
 16768 ;;		_i2c_setTimeOutCallback
 16769 ;; This function uses a non-reentrant model
 16770 ;;
 16771                           
 16772                           
 16773                           ;psect for function _setCallBack
 16774  1346                     _setCallBack:	
 16775                           
 16776                           ;incstack = 0
 16777                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 16778                           ;setCallBack@idx stored from wreg
 16779  1346  0020               	movlb	0	; select bank0
 16780  1347  00A4               	movwf	setCallBack@idx
 16781                           
 16782                           ;i2c_master.c: 455: if(cb)
 16783  1348  0820               	movf	setCallBack@cb,w
 16784  1349  0421               	iorwf	setCallBack@cb+1,w
 16785  134A  1903               	btfsc	3,2
 16786  134B  2B5D               	goto	l5145
 16787                           
 16788                           ;i2c_master.c: 456: {
 16789                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 16790  134C  3524               	lslf	setCallBack@idx,w
 16791  134D  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16792  134E  0086               	movwf	6
 16793  134F  0187               	clrf	7
 16794  1350  0820               	movf	setCallBack@cb,w
 16795  1351  3FC0               	movwi [0]fsr1
 16796  1352  0821               	movf	setCallBack@cb+1,w
 16797  1353  3FC1               	movwi [1]fsr1
 16798                           
 16799                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 16800  1354  0822               	movf	setCallBack@p,w
 16801  1355  00A3               	movwf	??_setCallBack
 16802  1356  0824               	movf	setCallBack@idx,w
 16803  1357  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16804  1358  0086               	movwf	6
 16805  1359  0187               	clrf	7
 16806  135A  0823               	movf	??_setCallBack,w
 16807  135B  0081               	movwf	1
 16808                           
 16809                           ;i2c_master.c: 459: }
 16810  135C  0008               	return
 16811  135D                     l5145:	
 16812                           
 16813                           ;i2c_master.c: 460: else
 16814                           ;i2c_master.c: 461: {
 16815                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 16816  135D  3524               	lslf	setCallBack@idx,w
 16817  135E  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16818  135F  0086               	movwf	6
 16819  1360  0187               	clrf	7
 16820  1361  3097               	movlw	low _returnStop
 16821  1362  3FC0               	movwi [0]fsr1
 16822  1363  301F               	movlw	high _returnStop
 16823  1364  3FC1               	movwi [1]fsr1
 16824                           
 16825                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 16826  1365  0824               	movf	setCallBack@idx,w
 16827  1366  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16828  1367  0086               	movwf	6
 16829  1368  0187               	clrf	7
 16830  1369  0181               	clrf	1
 16831  136A  0008               	return
 16832  136B                     __end_of_setCallBack:	
 16833                           
 16834                           	psect	text83
 16835  1195                     __ptext83:	
 16836 ;; *************** function _i2c_setBuffer *****************
 16837 ;; Defined at:
 16838 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;  buffer          1    wreg     PTR void 
 16841 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16842 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16843 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16844 ;;  bufferSize      2    0[BANK0 ] unsigned int 
 16845 ;; Auto vars:     Size  Location     Type
 16846 ;;  buffer          1    3[BANK0 ] PTR void 
 16847 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16848 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16849 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16850 ;; Return value:  Size  Location     Type
 16851 ;;                  1    wreg      void 
 16852 ;; Registers used:
 16853 ;;		wreg
 16854 ;; Tracked objects:
 16855 ;;		On entry : 0/0
 16856 ;;		On exit  : 0/0
 16857 ;;		Unchanged: 0/0
 16858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16861 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16862 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16863 ;;Total ram usage:        4 bytes
 16864 ;; Hardware stack levels used:    1
 16865 ;; Hardware stack levels required when called:    6
 16866 ;; This function calls:
 16867 ;;		Nothing
 16868 ;; This function is called by:
 16869 ;;		_wr1RegCompleteHandler
 16870 ;;		_i2c_write1ByteRegister
 16871 ;;		_rd1RegCompleteHandler
 16872 ;;		_i2c_read1ByteRegister
 16873 ;;		_rd2RegCompleteHandler
 16874 ;;		_wr2RegCompleteHandler
 16875 ;;		_rdBlkRegCompleteHandler
 16876 ;;		_i2c_writeNBytes
 16877 ;;		_i2c_read2ByteRegister
 16878 ;;		_i2c_write2ByteRegister
 16879 ;;		_i2c_readDataBlock
 16880 ;;		_i2c_readNBytes
 16881 ;; This function uses a non-reentrant model
 16882 ;;
 16883                           
 16884                           
 16885                           ;psect for function _i2c_setBuffer
 16886  1195                     _i2c_setBuffer:	
 16887                           
 16888                           ;incstack = 0
 16889                           ; Regs used in _i2c_setBuffer: [wreg]
 16890                           ;i2c_setBuffer@buffer stored from wreg
 16891  1195  0020               	movlb	0	; select bank0
 16892  1196  00A3               	movwf	i2c_setBuffer@buffer
 16893                           
 16894                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 16895  1197  0021               	movlb	1	; select bank1
 16896  1198  1D20               	btfss	_i2c_status^(0+128),2
 16897  1199  0008               	return
 16898                           
 16899                           ;i2c_master.c: 187: {
 16900                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 16901  119A  0020               	movlb	0	; select bank0
 16902  119B  0823               	movf	i2c_setBuffer@buffer,w
 16903  119C  00A2               	movwf	??_i2c_setBuffer
 16904  119D  0822               	movf	??_i2c_setBuffer,w
 16905  119E  0021               	movlb	1	; select bank1
 16906  119F  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 16907                           
 16908                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 16909  11A0  0020               	movlb	0	; select bank0
 16910  11A1  0821               	movf	i2c_setBuffer@bufferSize+1,w
 16911  11A2  0021               	movlb	1	; select bank1
 16912  11A3  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 16913  11A4  0020               	movlb	0	; select bank0
 16914  11A5  0820               	movf	i2c_setBuffer@bufferSize,w
 16915  11A6  0021               	movlb	1	; select bank1
 16916  11A7  00A3               	movwf	(_i2c_status^(0+128)+3)
 16917                           
 16918                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 16919  11A8  1120               	bcf	_i2c_status^(0+128),2
 16920  11A9  0008               	return
 16921  11AA                     __end_of_i2c_setBuffer:	
 16922                           
 16923                           	psect	text84
 16924  1F4A                     __ptext84:	
 16925 ;; *************** function _i2c1_driver_stop *****************
 16926 ;; Defined at:
 16927 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 16928 ;; Parameters:    Size  Location     Type
 16929 ;;		None
 16930 ;; Auto vars:     Size  Location     Type
 16931 ;;		None
 16932 ;; Return value:  Size  Location     Type
 16933 ;;                  1    wreg      void 
 16934 ;; Registers used:
 16935 ;;		None
 16936 ;; Tracked objects:
 16937 ;;		On entry : 0/0
 16938 ;;		On exit  : 0/0
 16939 ;;		Unchanged: 0/0
 16940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16945 ;;Total ram usage:        0 bytes
 16946 ;; Hardware stack levels used:    1
 16947 ;; Hardware stack levels required when called:    6
 16948 ;; This function calls:
 16949 ;;		Nothing
 16950 ;; This function is called by:
 16951 ;;		_do_I2C_SEND_STOP
 16952 ;; This function uses a non-reentrant model
 16953 ;;
 16954                           
 16955                           
 16956                           ;psect for function _i2c1_driver_stop
 16957  1F4A                     _i2c1_driver_stop:	
 16958                           
 16959                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 16960                           
 16961                           ;incstack = 0
 16962 ;; hardware stack exceeded
 16963                           ; Regs used in _i2c1_driver_stop: []
 16964  1F4A  0023               	movlb	3	; select bank3
 16965  1F4B  1511               	bsf	17,2	;volatile
 16966  1F4C  0008               	return
 16967  1F4D                     __end_of_i2c1_driver_stop:	
 16968                           
 16969                           	psect	text85
 16970  1F47                     __ptext85:	
 16971 ;; *************** function _i2c1_driver_restart *****************
 16972 ;; Defined at:
 16973 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 16974 ;; Parameters:    Size  Location     Type
 16975 ;;		None
 16976 ;; Auto vars:     Size  Location     Type
 16977 ;;		None
 16978 ;; Return value:  Size  Location     Type
 16979 ;;                  1    wreg      void 
 16980 ;; Registers used:
 16981 ;;		None
 16982 ;; Tracked objects:
 16983 ;;		On entry : 0/0
 16984 ;;		On exit  : 0/0
 16985 ;;		Unchanged: 0/0
 16986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16991 ;;Total ram usage:        0 bytes
 16992 ;; Hardware stack levels used:    1
 16993 ;; Hardware stack levels required when called:    6
 16994 ;; This function calls:
 16995 ;;		Nothing
 16996 ;; This function is called by:
 16997 ;;		_do_I2C_SEND_RESTART_READ
 16998 ;;		_do_I2C_SEND_RESTART_WRITE
 16999 ;;		_do_I2C_SEND_RESTART
 17000 ;; This function uses a non-reentrant model
 17001 ;;
 17002                           
 17003                           
 17004                           ;psect for function _i2c1_driver_restart
 17005  1F47                     _i2c1_driver_restart:	
 17006                           
 17007                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 17008                           
 17009                           ;incstack = 0
 17010 ;; hardware stack exceeded
 17011                           ; Regs used in _i2c1_driver_restart: []
 17012  1F47  0023               	movlb	3	; select bank3
 17013  1F48  1491               	bsf	17,1	;volatile
 17014  1F49  0008               	return
 17015  1F4A                     __end_of_i2c1_driver_restart:	
 17016                           
 17017                           	psect	text86
 17018  1F7A                     __ptext86:	
 17019 ;; *************** function _i2c1_driver_sendACK *****************
 17020 ;; Defined at:
 17021 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 17022 ;; Parameters:    Size  Location     Type
 17023 ;;		None
 17024 ;; Auto vars:     Size  Location     Type
 17025 ;;		None
 17026 ;; Return value:  Size  Location     Type
 17027 ;;                  1    wreg      void 
 17028 ;; Registers used:
 17029 ;;		None
 17030 ;; Tracked objects:
 17031 ;;		On entry : 0/0
 17032 ;;		On exit  : 0/0
 17033 ;;		Unchanged: 0/0
 17034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;Total ram usage:        0 bytes
 17040 ;; Hardware stack levels used:    1
 17041 ;; Hardware stack levels required when called:    6
 17042 ;; This function calls:
 17043 ;;		Nothing
 17044 ;; This function is called by:
 17045 ;;		_do_I2C_DO_ACK
 17046 ;;		_do_I2C_RX
 17047 ;; This function uses a non-reentrant model
 17048 ;;
 17049                           
 17050                           
 17051                           ;psect for function _i2c1_driver_sendACK
 17052  1F7A                     _i2c1_driver_sendACK:	
 17053                           
 17054                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 17055                           
 17056                           ;incstack = 0
 17057                           ; Regs used in _i2c1_driver_sendACK: []
 17058  1F7A  0023               	movlb	3	; select bank3
 17059  1F7B  1291               	bcf	17,5	;volatile
 17060                           
 17061                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 17062  1F7C  1611               	bsf	17,4	;volatile
 17063  1F7D  0008               	return
 17064  1F7E                     __end_of_i2c1_driver_sendACK:	
 17065                           
 17066                           	psect	text87
 17067  1F44                     __ptext87:	
 17068 ;; *************** function _i2c1_driver_start *****************
 17069 ;; Defined at:
 17070 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 17071 ;; Parameters:    Size  Location     Type
 17072 ;;		None
 17073 ;; Auto vars:     Size  Location     Type
 17074 ;;		None
 17075 ;; Return value:  Size  Location     Type
 17076 ;;                  1    wreg      void 
 17077 ;; Registers used:
 17078 ;;		None
 17079 ;; Tracked objects:
 17080 ;;		On entry : 0/0
 17081 ;;		On exit  : 0/0
 17082 ;;		Unchanged: 0/0
 17083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17088 ;;Total ram usage:        0 bytes
 17089 ;; Hardware stack levels used:    1
 17090 ;; Hardware stack levels required when called:    6
 17091 ;; This function calls:
 17092 ;;		Nothing
 17093 ;; This function is called by:
 17094 ;;		_i2c_masterOperation
 17095 ;; This function uses a non-reentrant model
 17096 ;;
 17097                           
 17098                           
 17099                           ;psect for function _i2c1_driver_start
 17100  1F44                     _i2c1_driver_start:	
 17101                           
 17102                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 17103                           
 17104                           ;incstack = 0
 17105                           ; Regs used in _i2c1_driver_start: []
 17106  1F44  0023               	movlb	3	; select bank3
 17107  1F45  1411               	bsf	17,0	;volatile
 17108  1F46  0008               	return
 17109  1F47                     __end_of_i2c1_driver_start:	
 17110                           
 17111                           	psect	text88
 17112  1231                     __ptext88:	
 17113 ;; *************** function _i2c_close *****************
 17114 ;; Defined at:
 17115 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
 17116 ;; Parameters:    Size  Location     Type
 17117 ;;		None
 17118 ;; Auto vars:     Size  Location     Type
 17119 ;;  ret             1    1[BANK0 ] enum E15138
 17120 ;; Return value:  Size  Location     Type
 17121 ;;                  1    wreg      enum E15138
 17122 ;; Registers used:
 17123 ;;		wreg, status,2, status,0, pclath, cstack
 17124 ;; Tracked objects:
 17125 ;;		On entry : 0/0
 17126 ;;		On exit  : 0/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17133 ;;Total ram usage:        2 bytes
 17134 ;; Hardware stack levels used:    1
 17135 ;; Hardware stack levels required when called:    7
 17136 ;; This function calls:
 17137 ;;		_mssp1_clearIRQ
 17138 ;;		_mssp1_disableIRQ
 17139 ;; This function is called by:
 17140 ;;		_i2c_write1ByteRegister
 17141 ;;		_i2c_read1ByteRegister
 17142 ;;		_i2c_writeNBytes
 17143 ;;		_i2c_read2ByteRegister
 17144 ;;		_i2c_write2ByteRegister
 17145 ;;		_i2c_readDataBlock
 17146 ;;		_i2c_readNBytes
 17147 ;; This function uses a non-reentrant model
 17148 ;;
 17149                           
 17150                           
 17151                           ;psect for function _i2c_close
 17152  1231                     _i2c_close:	
 17153                           
 17154                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
 17155                           
 17156                           ;incstack = 0
 17157                           ; Regs used in _i2c_close: [wreg+status,2+status,0+pclath+cstack]
 17158  1231  0020               	movlb	0	; select bank0
 17159  1232  01A1               	clrf	i2c_close@ret
 17160  1233  0AA1               	incf	i2c_close@ret,f
 17161                           
 17162                           ;i2c_master.c: 165: if(!i2c_status.busy)
 17163  1234  0021               	movlb	1	; select bank1
 17164  1235  1820               	btfsc	_i2c_status^(0+128),0
 17165  1236  2A49               	goto	l224
 17166                           
 17167                           ;i2c_master.c: 166: {
 17168                           ;i2c_master.c: 167: i2c_status.inUse = 0;
 17169  1237  10A0               	bcf	_i2c_status^(0+128),1
 17170                           
 17171                           ;i2c_master.c: 169: i2c_status.address = 0xff;
 17172  1238  30FF               	movlw	255
 17173  1239  0020               	movlb	0	; select bank0
 17174  123A  00A0               	movwf	??_i2c_close
 17175  123B  0820               	movf	??_i2c_close,w
 17176  123C  0021               	movlb	1	; select bank1
 17177  123D  00A1               	movwf	(_i2c_status^(0+128)+1)
 17178                           
 17179                           ;i2c_master.c: 170: mssp1_clearIRQ();
 17180  123E  319F  273E  3192   	fcall	_mssp1_clearIRQ
 17181                           
 17182                           ;i2c_master.c: 171: mssp1_disableIRQ();
 17183  1241  319F  2741         	fcall	_mssp1_disableIRQ
 17184                           
 17185                           ;i2c_master.c: 172: ret = i2c_status.error;
 17186  1243  0021               	movlb	1	; select bank1
 17187  1244  082A               	movf	(_i2c_status^(0+128)+10),w
 17188  1245  0020               	movlb	0	; select bank0
 17189  1246  00A0               	movwf	??_i2c_close
 17190  1247  0820               	movf	??_i2c_close,w
 17191  1248  00A1               	movwf	i2c_close@ret
 17192  1249                     l224:	
 17193                           
 17194                           ;i2c_master.c: 173: }
 17195                           ;i2c_master.c: 174: return ret;
 17196  1249  0020               	movlb	0	; select bank0
 17197  124A  0821               	movf	i2c_close@ret,w
 17198  124B  0008               	return
 17199  124C                     __end_of_i2c_close:	
 17200                           
 17201                           	psect	text89
 17202  1F41                     __ptext89:	
 17203 ;; *************** function _mssp1_disableIRQ *****************
 17204 ;; Defined at:
 17205 ;;		line 48 in file "mcc_generated_files/i2c1_driver.c"
 17206 ;; Parameters:    Size  Location     Type
 17207 ;;		None
 17208 ;; Auto vars:     Size  Location     Type
 17209 ;;		None
 17210 ;; Return value:  Size  Location     Type
 17211 ;;                  1    wreg      void 
 17212 ;; Registers used:
 17213 ;;		None
 17214 ;; Tracked objects:
 17215 ;;		On entry : 0/0
 17216 ;;		On exit  : 0/0
 17217 ;;		Unchanged: 0/0
 17218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17223 ;;Total ram usage:        0 bytes
 17224 ;; Hardware stack levels used:    1
 17225 ;; Hardware stack levels required when called:    6
 17226 ;; This function calls:
 17227 ;;		Nothing
 17228 ;; This function is called by:
 17229 ;;		_i2c_close
 17230 ;;		_i2c_setTimeOut
 17231 ;; This function uses a non-reentrant model
 17232 ;;
 17233                           
 17234                           
 17235                           ;psect for function _mssp1_disableIRQ
 17236  1F41                     _mssp1_disableIRQ:	
 17237                           
 17238                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
 17239                           
 17240                           ;incstack = 0
 17241                           ; Regs used in _mssp1_disableIRQ: []
 17242  1F41  002E               	movlb	14	; select bank14
 17243  1F42  1019               	bcf	25,0	;volatile
 17244  1F43  0008               	return
 17245  1F44                     __end_of_mssp1_disableIRQ:	
 17246                           
 17247                           	psect	text90
 17248  1F3E                     __ptext90:	
 17249 ;; *************** function _mssp1_clearIRQ *****************
 17250 ;; Defined at:
 17251 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 17252 ;; Parameters:    Size  Location     Type
 17253 ;;		None
 17254 ;; Auto vars:     Size  Location     Type
 17255 ;;		None
 17256 ;; Return value:  Size  Location     Type
 17257 ;;                  1    wreg      void 
 17258 ;; Registers used:
 17259 ;;		None
 17260 ;; Tracked objects:
 17261 ;;		On entry : 0/0
 17262 ;;		On exit  : 0/0
 17263 ;;		Unchanged: 0/0
 17264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17269 ;;Total ram usage:        0 bytes
 17270 ;; Hardware stack levels used:    1
 17271 ;; Hardware stack levels required when called:    6
 17272 ;; This function calls:
 17273 ;;		Nothing
 17274 ;; This function is called by:
 17275 ;;		_i2c_open
 17276 ;;		_i2c_close
 17277 ;;		_i2c_ISR
 17278 ;; This function uses a non-reentrant model
 17279 ;;
 17280                           
 17281                           
 17282                           ;psect for function _mssp1_clearIRQ
 17283  1F3E                     _mssp1_clearIRQ:	
 17284                           
 17285                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
 17286                           
 17287                           ;incstack = 0
 17288                           ; Regs used in _mssp1_clearIRQ: []
 17289  1F3E  002E               	movlb	14	; select bank14
 17290  1F3F  100F               	bcf	15,0	;volatile
 17291  1F40  0008               	return
 17292  1F41                     __end_of_mssp1_clearIRQ:	
 17293                           
 17294                           	psect	text91
 17295  1F91                     __ptext91:	
 17296 ;; *************** function _SPI2_Initialize *****************
 17297 ;; Defined at:
 17298 ;;		line 65 in file "mcc_generated_files/spi2.c"
 17299 ;; Parameters:    Size  Location     Type
 17300 ;;		None
 17301 ;; Auto vars:     Size  Location     Type
 17302 ;;		None
 17303 ;; Return value:  Size  Location     Type
 17304 ;;                  1    wreg      void 
 17305 ;; Registers used:
 17306 ;;		wreg, status,2
 17307 ;; Tracked objects:
 17308 ;;		On entry : 0/0
 17309 ;;		On exit  : 0/0
 17310 ;;		Unchanged: 0/0
 17311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17316 ;;Total ram usage:        0 bytes
 17317 ;; Hardware stack levels used:    1
 17318 ;; Hardware stack levels required when called:    6
 17319 ;; This function calls:
 17320 ;;		Nothing
 17321 ;; This function is called by:
 17322 ;;		_SYSTEM_Initialize
 17323 ;; This function uses a non-reentrant model
 17324 ;;
 17325                           
 17326                           
 17327                           ;psect for function _SPI2_Initialize
 17328  1F91                     _SPI2_Initialize:	
 17329                           
 17330                           ;spi2.c: 70: SSP2STAT = 0x00;
 17331                           
 17332                           ;incstack = 0
 17333                           ; Regs used in _SPI2_Initialize: [wreg+status,2]
 17334  1F91  0023               	movlb	3	; select bank3
 17335  1F92  0199               	clrf	25	;volatile
 17336                           
 17337                           ;spi2.c: 73: SSP2CON1 = 0x30;
 17338  1F93  3030               	movlw	48
 17339  1F94  009A               	movwf	26	;volatile
 17340                           
 17341                           ;spi2.c: 76: SSP2ADD = 0x00;
 17342  1F95  0197               	clrf	23	;volatile
 17343  1F96  0008               	return
 17344  1F97                     __end_of_SPI2_Initialize:	
 17345                           
 17346                           	psect	text92
 17347  1FE0                     __ptext92:	
 17348 ;; *************** function _PMD_Initialize *****************
 17349 ;; Defined at:
 17350 ;;		line 73 in file "mcc_generated_files/mcc.c"
 17351 ;; Parameters:    Size  Location     Type
 17352 ;;		None
 17353 ;; Auto vars:     Size  Location     Type
 17354 ;;		None
 17355 ;; Return value:  Size  Location     Type
 17356 ;;                  1    wreg      void 
 17357 ;; Registers used:
 17358 ;;		status,2
 17359 ;; Tracked objects:
 17360 ;;		On entry : 0/0
 17361 ;;		On exit  : 0/0
 17362 ;;		Unchanged: 0/0
 17363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17368 ;;Total ram usage:        0 bytes
 17369 ;; Hardware stack levels used:    1
 17370 ;; Hardware stack levels required when called:    6
 17371 ;; This function calls:
 17372 ;;		Nothing
 17373 ;; This function is called by:
 17374 ;;		_SYSTEM_Initialize
 17375 ;; This function uses a non-reentrant model
 17376 ;;
 17377                           
 17378                           
 17379                           ;psect for function _PMD_Initialize
 17380  1FE0                     _PMD_Initialize:	
 17381                           
 17382                           ;mcc.c: 76: PMD0 = 0x00;
 17383                           
 17384                           ;incstack = 0
 17385                           ; Regs used in _PMD_Initialize: [status,2]
 17386  1FE0  002F               	movlb	15	; select bank15
 17387  1FE1  0196               	clrf	22	;volatile
 17388                           
 17389                           ;mcc.c: 78: PMD1 = 0x00;
 17390  1FE2  0197               	clrf	23	;volatile
 17391                           
 17392                           ;mcc.c: 80: PMD2 = 0x00;
 17393  1FE3  0198               	clrf	24	;volatile
 17394                           
 17395                           ;mcc.c: 82: PMD3 = 0x00;
 17396  1FE4  0199               	clrf	25	;volatile
 17397                           
 17398                           ;mcc.c: 84: PMD4 = 0x00;
 17399  1FE5  019A               	clrf	26	;volatile
 17400                           
 17401                           ;mcc.c: 86: PMD5 = 0x00;
 17402  1FE6  019B               	clrf	27	;volatile
 17403  1FE7  0008               	return
 17404  1FE8                     __end_of_PMD_Initialize:	
 17405                           
 17406                           	psect	text93
 17407  1654                     __ptext93:	
 17408 ;; *************** function _PIN_MANAGER_Initialize *****************
 17409 ;; Defined at:
 17410 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17411 ;; Parameters:    Size  Location     Type
 17412 ;;		None
 17413 ;; Auto vars:     Size  Location     Type
 17414 ;;		None
 17415 ;; Return value:  Size  Location     Type
 17416 ;;                  1    wreg      void 
 17417 ;; Registers used:
 17418 ;;		wreg, status,2, status,0
 17419 ;; Tracked objects:
 17420 ;;		On entry : 0/0
 17421 ;;		On exit  : 0/0
 17422 ;;		Unchanged: 0/0
 17423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17428 ;;Total ram usage:        0 bytes
 17429 ;; Hardware stack levels used:    1
 17430 ;; Hardware stack levels required when called:    6
 17431 ;; This function calls:
 17432 ;;		Nothing
 17433 ;; This function is called by:
 17434 ;;		_SYSTEM_Initialize
 17435 ;; This function uses a non-reentrant model
 17436 ;;
 17437                           
 17438                           
 17439                           ;psect for function _PIN_MANAGER_Initialize
 17440  1654                     _PIN_MANAGER_Initialize:	
 17441                           
 17442                           ;pin_manager.c: 62: LATE = 0x00;
 17443                           
 17444                           ;incstack = 0
 17445                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 17446  1654  0020               	movlb	0	; select bank0
 17447  1655  019A               	clrf	26	;volatile
 17448                           
 17449                           ;pin_manager.c: 63: LATD = 0x00;
 17450  1656  0199               	clrf	25	;volatile
 17451                           
 17452                           ;pin_manager.c: 64: LATA = 0x08;
 17453  1657  3008               	movlw	8
 17454  1658  0096               	movwf	22	;volatile
 17455                           
 17456                           ;pin_manager.c: 65: LATB = 0x00;
 17457  1659  0197               	clrf	23	;volatile
 17458                           
 17459                           ;pin_manager.c: 66: LATC = 0x00;
 17460  165A  0198               	clrf	24	;volatile
 17461                           
 17462                           ;pin_manager.c: 71: TRISE = 0x07;
 17463  165B  3007               	movlw	7
 17464  165C  0095               	movwf	21	;volatile
 17465                           
 17466                           ;pin_manager.c: 72: TRISA = 0xF7;
 17467  165D  30F7               	movlw	247
 17468  165E  0091               	movwf	17	;volatile
 17469                           
 17470                           ;pin_manager.c: 73: TRISB = 0xF5;
 17471  165F  30F5               	movlw	245
 17472  1660  0092               	movwf	18	;volatile
 17473                           
 17474                           ;pin_manager.c: 74: TRISC = 0xFB;
 17475  1661  30FB               	movlw	251
 17476  1662  0093               	movwf	19	;volatile
 17477                           
 17478                           ;pin_manager.c: 75: TRISD = 0xFE;
 17479  1663  30FE               	movlw	254
 17480  1664  0094               	movwf	20	;volatile
 17481                           
 17482                           ;pin_manager.c: 80: ANSELD = 0xFE;
 17483  1665  30FE               	movlw	254
 17484  1666  003E               	movlb	30	; select bank30
 17485  1667  00D9               	movwf	89	;volatile
 17486                           
 17487                           ;pin_manager.c: 81: ANSELC = 0xC3;
 17488  1668  30C3               	movlw	195
 17489  1669  00CE               	movwf	78	;volatile
 17490                           
 17491                           ;pin_manager.c: 82: ANSELB = 0xE1;
 17492  166A  30E1               	movlw	225
 17493  166B  00C3               	movwf	67	;volatile
 17494                           
 17495                           ;pin_manager.c: 83: ANSELE = 0x07;
 17496  166C  3007               	movlw	7
 17497  166D  00E4               	movwf	100	;volatile
 17498                           
 17499                           ;pin_manager.c: 84: ANSELA = 0xF7;
 17500  166E  30F7               	movlw	247
 17501  166F  00B8               	movwf	56	;volatile
 17502                           
 17503                           ;pin_manager.c: 89: WPUD = 0x00;
 17504  1670  01DA               	clrf	90	;volatile
 17505                           
 17506                           ;pin_manager.c: 90: WPUE = 0x00;
 17507  1671  01E5               	clrf	101	;volatile
 17508                           
 17509                           ;pin_manager.c: 91: WPUB = 0x00;
 17510  1672  01C4               	clrf	68	;volatile
 17511                           
 17512                           ;pin_manager.c: 92: WPUA = 0x00;
 17513  1673  01B9               	clrf	57	;volatile
 17514                           
 17515                           ;pin_manager.c: 93: WPUC = 0x00;
 17516  1674  01CF               	clrf	79	;volatile
 17517                           
 17518                           ;pin_manager.c: 98: ODCONE = 0x00;
 17519  1675  01E6               	clrf	102	;volatile
 17520                           
 17521                           ;pin_manager.c: 99: ODCONA = 0x00;
 17522  1676  01BA               	clrf	58	;volatile
 17523                           
 17524                           ;pin_manager.c: 100: ODCONB = 0x00;
 17525  1677  01C5               	clrf	69	;volatile
 17526                           
 17527                           ;pin_manager.c: 101: ODCONC = 0x00;
 17528  1678  01D0               	clrf	80	;volatile
 17529                           
 17530                           ;pin_manager.c: 102: ODCOND = 0x00;
 17531  1679  01DB               	clrf	91	;volatile
 17532                           
 17533                           ;pin_manager.c: 111: SSP1CLKPPSbits.SSP1CLKPPS = 0x13;
 17534  167A  003D               	movlb	29	; select bank29
 17535  167B  0845               	movf	69,w	;volatile
 17536  167C  39E0               	andlw	-32
 17537  167D  3813               	iorlw	19
 17538  167E  00C5               	movwf	69	;volatile
 17539                           
 17540                           ;pin_manager.c: 112: SSP1DATPPSbits.SSP1DATPPS = 0x14;
 17541  167F  0846               	movf	70,w	;volatile
 17542  1680  39E0               	andlw	-32
 17543  1681  3814               	iorlw	20
 17544  1682  00C6               	movwf	70	;volatile
 17545                           
 17546                           ;pin_manager.c: 113: RB1PPS = 0x16;
 17547  1683  3016               	movlw	22
 17548  1684  003E               	movlb	30	; select bank30
 17549  1685  0099               	movwf	25	;volatile
 17550                           
 17551                           ;pin_manager.c: 114: RC3PPS = 0x14;
 17552  1686  3014               	movlw	20
 17553  1687  00A3               	movwf	35	;volatile
 17554                           
 17555                           ;pin_manager.c: 115: RC4PPS = 0x15;
 17556  1688  3015               	movlw	21
 17557  1689  00A4               	movwf	36	;volatile
 17558                           
 17559                           ;pin_manager.c: 116: RB3PPS = 0x17;
 17560  168A  3017               	movlw	23
 17561  168B  009B               	movwf	27	;volatile
 17562                           
 17563                           ;pin_manager.c: 117: SSP2CLKPPSbits.SSP2CLKPPS = 0x09;
 17564  168C  003D               	movlb	29	; select bank29
 17565  168D  0848               	movf	72,w	;volatile
 17566  168E  39E0               	andlw	-32
 17567  168F  3809               	iorlw	9
 17568  1690  00C8               	movwf	72	;volatile
 17569                           
 17570                           ;pin_manager.c: 118: SSP2DATPPSbits.SSP2DATPPS = 0x0A;
 17571  1691  0849               	movf	73,w	;volatile
 17572  1692  39E0               	andlw	-32
 17573  1693  380A               	iorlw	10
 17574  1694  00C9               	movwf	73	;volatile
 17575  1695  0008               	return
 17576  1696                     __end_of_PIN_MANAGER_Initialize:	
 17577                           
 17578                           	psect	text94
 17579  1025                     __ptext94:	
 17580 ;; *************** function _OSCILLATOR_Initialize *****************
 17581 ;; Defined at:
 17582 ;;		line 59 in file "mcc_generated_files/mcc.c"
 17583 ;; Parameters:    Size  Location     Type
 17584 ;;		None
 17585 ;; Auto vars:     Size  Location     Type
 17586 ;;		None
 17587 ;; Return value:  Size  Location     Type
 17588 ;;                  1    wreg      void 
 17589 ;; Registers used:
 17590 ;;		wreg, status,2
 17591 ;; Tracked objects:
 17592 ;;		On entry : 0/0
 17593 ;;		On exit  : 0/0
 17594 ;;		Unchanged: 0/0
 17595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17600 ;;Total ram usage:        0 bytes
 17601 ;; Hardware stack levels used:    1
 17602 ;; Hardware stack levels required when called:    6
 17603 ;; This function calls:
 17604 ;;		Nothing
 17605 ;; This function is called by:
 17606 ;;		_SYSTEM_Initialize
 17607 ;; This function uses a non-reentrant model
 17608 ;;
 17609                           
 17610                           
 17611                           ;psect for function _OSCILLATOR_Initialize
 17612  1025                     _OSCILLATOR_Initialize:	
 17613                           
 17614                           ;mcc.c: 62: OSCCON1 = 0x62;
 17615                           
 17616                           ;incstack = 0
 17617                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17618  1025  3062               	movlw	98
 17619  1026  0031               	movlb	17	; select bank17
 17620  1027  008D               	movwf	13	;volatile
 17621                           
 17622                           ;mcc.c: 64: OSCCON3 = 0x00;
 17623  1028  018F               	clrf	15	;volatile
 17624                           
 17625                           ;mcc.c: 66: OSCEN = 0x00;
 17626  1029  0191               	clrf	17	;volatile
 17627                           
 17628                           ;mcc.c: 68: OSCFRQ = 0x02;
 17629  102A  3002               	movlw	2
 17630  102B  0093               	movwf	19	;volatile
 17631                           
 17632                           ;mcc.c: 70: OSCTUNE = 0x00;
 17633  102C  0192               	clrf	18	;volatile
 17634  102D  0008               	return
 17635  102E                     __end_of_OSCILLATOR_Initialize:	
 17636                           
 17637                           	psect	text95
 17638  0B89                     __ptext95:	
 17639 ;; *************** function _OLED_Initialize *****************
 17640 ;; Defined at:
 17641 ;;		line 24 in file "oled.c"
 17642 ;; Parameters:    Size  Location     Type
 17643 ;;		None
 17644 ;; Auto vars:     Size  Location     Type
 17645 ;;		None
 17646 ;; Return value:  Size  Location     Type
 17647 ;;                  1    wreg      void 
 17648 ;; Registers used:
 17649 ;;		wreg, status,2, status,0, pclath, cstack
 17650 ;; Tracked objects:
 17651 ;;		On entry : 0/0
 17652 ;;		On exit  : 0/0
 17653 ;;		Unchanged: 0/0
 17654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17657 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17658 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17659 ;;Total ram usage:        2 bytes
 17660 ;; Hardware stack levels used:    1
 17661 ;; Hardware stack levels required when called:    8
 17662 ;; This function calls:
 17663 ;;		_OLED_Command
 17664 ;; This function is called by:
 17665 ;;		_main
 17666 ;; This function uses a non-reentrant model
 17667 ;;
 17668                           
 17669                           
 17670                           ;psect for function _OLED_Initialize
 17671  0B89                     _OLED_Initialize:	
 17672                           
 17673                           ;oled.c: 28: LATDbits.LATD0 = 0;
 17674                           
 17675                           ;incstack = 0
 17676                           ; Regs used in _OLED_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17677  0B89  0020               	movlb	0	; select bank0
 17678  0B8A  1019               	bcf	25,0	;volatile
 17679                           
 17680                           ;oled.c: 29: _delay((unsigned long)((1000)*(1000000/4000.0)));
 17681  0B8B  3002               	movlw	2
 17682  0B8C  0020               	movlb	0	; select bank0
 17683  0B8D  00A3               	movwf	??_OLED_Initialize+1
 17684  0B8E  3045               	movlw	69
 17685  0B8F  00A2               	movwf	??_OLED_Initialize
 17686  0B90  30A9               	movlw	169
 17687  0B91                     u6767:	
 17688  0B91  0B89               	decfsz	9,f
 17689  0B92  2B91               	goto	u6767
 17690  0B93  0BA2               	decfsz	??_OLED_Initialize,f
 17691  0B94  2B91               	goto	u6767
 17692  0B95  0BA3               	decfsz	??_OLED_Initialize+1,f
 17693  0B96  2B91               	goto	u6767
 17694  0B97  3200               	nop2
 17695                           
 17696                           ;oled.c: 30: LATDbits.LATD0 = 1;
 17697  0B98  0020               	movlb	0	; select bank0
 17698  0B99  1419               	bsf	25,0	;volatile
 17699                           
 17700                           ;oled.c: 31: _delay((unsigned long)((1000)*(1000000/4000.0)));
 17701  0B9A  3002               	movlw	2
 17702  0B9B  0020               	movlb	0	; select bank0
 17703  0B9C  00A3               	movwf	??_OLED_Initialize+1
 17704  0B9D  3045               	movlw	69
 17705  0B9E  00A2               	movwf	??_OLED_Initialize
 17706  0B9F  30A9               	movlw	169
 17707  0BA0                     u6777:	
 17708  0BA0  0B89               	decfsz	9,f
 17709  0BA1  2BA0               	goto	u6777
 17710  0BA2  0BA2               	decfsz	??_OLED_Initialize,f
 17711  0BA3  2BA0               	goto	u6777
 17712  0BA4  0BA3               	decfsz	??_OLED_Initialize+1,f
 17713  0BA5  2BA0               	goto	u6777
 17714  0BA6  3200               	nop2
 17715                           
 17716                           ;oled.c: 32: OLED_Command(0xAE);
 17717  0BA7  30AE               	movlw	174
 17718  0BA8  3190  2040  318B   	fcall	_OLED_Command
 17719                           
 17720                           ;oled.c: 33: OLED_Command(0xD5);
 17721  0BAB  30D5               	movlw	213
 17722  0BAC  3190  2040  318B   	fcall	_OLED_Command
 17723                           
 17724                           ;oled.c: 34: OLED_Command(0x80);
 17725  0BAF  3080               	movlw	128
 17726  0BB0  3190  2040  318B   	fcall	_OLED_Command
 17727                           
 17728                           ;oled.c: 35: OLED_Command(0xA8);
 17729  0BB3  30A8               	movlw	168
 17730  0BB4  3190  2040  318B   	fcall	_OLED_Command
 17731                           
 17732                           ;oled.c: 36: OLED_Command(39);
 17733  0BB7  3027               	movlw	39
 17734  0BB8  3190  2040  318B   	fcall	_OLED_Command
 17735                           
 17736                           ;oled.c: 38: OLED_Command(0xA1);
 17737  0BBB  30A1               	movlw	161
 17738  0BBC  3190  2040  318B   	fcall	_OLED_Command
 17739                           
 17740                           ;oled.c: 39: OLED_Command(0xC8);
 17741  0BBF  30C8               	movlw	200
 17742  0BC0  3190  2040  318B   	fcall	_OLED_Command
 17743                           
 17744                           ;oled.c: 40: OLED_Command(0x40);
 17745  0BC3  3040               	movlw	64
 17746  0BC4  3190  2040  318B   	fcall	_OLED_Command
 17747                           
 17748                           ;oled.c: 42: OLED_Command(0xD3);
 17749  0BC7  30D3               	movlw	211
 17750  0BC8  3190  2040  318B   	fcall	_OLED_Command
 17751                           
 17752                           ;oled.c: 43: OLED_Command(0xA4);
 17753  0BCB  30A4               	movlw	164
 17754  0BCC  3190  2040  318B   	fcall	_OLED_Command
 17755                           
 17756                           ;oled.c: 44: OLED_Command(0x8D);
 17757  0BCF  308D               	movlw	141
 17758  0BD0  3190  2040  318B   	fcall	_OLED_Command
 17759                           
 17760                           ;oled.c: 45: OLED_Command(0x14);
 17761  0BD3  3014               	movlw	20
 17762  0BD4  3190  2040  318B   	fcall	_OLED_Command
 17763                           
 17764                           ;oled.c: 46: OLED_Command(0xDA);
 17765  0BD7  30DA               	movlw	218
 17766  0BD8  3190  2040  318B   	fcall	_OLED_Command
 17767                           
 17768                           ;oled.c: 47: OLED_Command(0x12);
 17769  0BDB  3012               	movlw	18
 17770  0BDC  3190  2040  318B   	fcall	_OLED_Command
 17771                           
 17772                           ;oled.c: 48: OLED_Command(0x81);
 17773  0BDF  3081               	movlw	129
 17774  0BE0  3190  2040  318B   	fcall	_OLED_Command
 17775                           
 17776                           ;oled.c: 49: OLED_Command(0xAF);
 17777  0BE3  30AF               	movlw	175
 17778  0BE4  3190  2040  318B   	fcall	_OLED_Command
 17779                           
 17780                           ;oled.c: 50: OLED_Command(0xD9);
 17781  0BE7  30D9               	movlw	217
 17782  0BE8  3190  2040  318B   	fcall	_OLED_Command
 17783                           
 17784                           ;oled.c: 51: OLED_Command(0x25);
 17785  0BEB  3025               	movlw	37
 17786  0BEC  3190  2040  318B   	fcall	_OLED_Command
 17787                           
 17788                           ;oled.c: 52: OLED_Command(0xDB);
 17789  0BEF  30DB               	movlw	219
 17790  0BF0  3190  2040  318B   	fcall	_OLED_Command
 17791                           
 17792                           ;oled.c: 53: OLED_Command(0x20);
 17793  0BF3  3020               	movlw	32
 17794  0BF4  3190  2040  318B   	fcall	_OLED_Command
 17795                           
 17796                           ;oled.c: 54: OLED_Command(0xA4);
 17797  0BF7  30A4               	movlw	164
 17798  0BF8  3190  2040  318B   	fcall	_OLED_Command
 17799                           
 17800                           ;oled.c: 55: OLED_Command(0xA6);
 17801  0BFB  30A6               	movlw	166
 17802  0BFC  3190  2040  318B   	fcall	_OLED_Command
 17803                           
 17804                           ;oled.c: 56: OLED_Command(0xAF);
 17805  0BFF  30AF               	movlw	175
 17806  0C00  3190  2040         	fcall	_OLED_Command
 17807  0C02  0008               	return
 17808  0C03                     __end_of_OLED_Initialize:	
 17809                           
 17810                           	psect	text96
 17811  1040                     __ptext96:	
 17812 ;; *************** function _OLED_Command *****************
 17813 ;; Defined at:
 17814 ;;		line 4 in file "oled.c"
 17815 ;; Parameters:    Size  Location     Type
 17816 ;;  temp            1    wreg     unsigned char 
 17817 ;; Auto vars:     Size  Location     Type
 17818 ;;  temp            1    1[BANK0 ] unsigned char 
 17819 ;; Return value:  Size  Location     Type
 17820 ;;                  1    wreg      void 
 17821 ;; Registers used:
 17822 ;;		wreg, status,2, status,0, pclath, cstack
 17823 ;; Tracked objects:
 17824 ;;		On entry : 0/0
 17825 ;;		On exit  : 0/0
 17826 ;;		Unchanged: 0/0
 17827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17831 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17832 ;;Total ram usage:        1 bytes
 17833 ;; Hardware stack levels used:    1
 17834 ;; Hardware stack levels required when called:    7
 17835 ;; This function calls:
 17836 ;;		_SPI2_Exchange8bit
 17837 ;; This function is called by:
 17838 ;;		_OLED_Initialize
 17839 ;;		_OLED_SetRow
 17840 ;;		_OLED_SetColumn
 17841 ;; This function uses a non-reentrant model
 17842 ;;
 17843                           
 17844                           
 17845                           ;psect for function _OLED_Command
 17846  1040                     _OLED_Command:	
 17847                           
 17848                           ;incstack = 0
 17849                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
 17850                           ;OLED_Command@temp stored from wreg
 17851  1040  0020               	movlb	0	; select bank0
 17852  1041  00A1               	movwf	OLED_Command@temp
 17853                           
 17854                           ;oled.c: 8: LATAbits.LATA3 = 0;
 17855  1042  1196               	bcf	22,3	;volatile
 17856                           
 17857                           ;oled.c: 9: LATCbits.LATC2 = 0;
 17858  1043  1118               	bcf	24,2	;volatile
 17859                           
 17860                           ;oled.c: 10: SPI2_Exchange8bit( temp);
 17861  1044  0821               	movf	OLED_Command@temp,w
 17862  1045  3190  20A9         	fcall	_SPI2_Exchange8bit
 17863                           
 17864                           ;oled.c: 11: LATAbits.LATA3 = 1;
 17865  1047  0020               	movlb	0	; select bank0
 17866  1048  1596               	bsf	22,3	;volatile
 17867  1049  0008               	return
 17868  104A                     __end_of_OLED_Command:	
 17869                           
 17870                           	psect	text97
 17871  10A9                     __ptext97:	
 17872 ;; *************** function _SPI2_Exchange8bit *****************
 17873 ;; Defined at:
 17874 ;;		line 79 in file "mcc_generated_files/spi2.c"
 17875 ;; Parameters:    Size  Location     Type
 17876 ;;  data            1    wreg     unsigned char 
 17877 ;; Auto vars:     Size  Location     Type
 17878 ;;  data            1    0[BANK0 ] unsigned char 
 17879 ;; Return value:  Size  Location     Type
 17880 ;;                  1    wreg      unsigned char 
 17881 ;; Registers used:
 17882 ;;		wreg
 17883 ;; Tracked objects:
 17884 ;;		On entry : 0/0
 17885 ;;		On exit  : 0/0
 17886 ;;		Unchanged: 0/0
 17887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17891 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17892 ;;Total ram usage:        1 bytes
 17893 ;; Hardware stack levels used:    1
 17894 ;; Hardware stack levels required when called:    6
 17895 ;; This function calls:
 17896 ;;		Nothing
 17897 ;; This function is called by:
 17898 ;;		_OLED_Command
 17899 ;;		_OLED_Data
 17900 ;;		_SPI2_Exchange8bitBuffer
 17901 ;; This function uses a non-reentrant model
 17902 ;;
 17903                           
 17904                           
 17905                           ;psect for function _SPI2_Exchange8bit
 17906  10A9                     _SPI2_Exchange8bit:	
 17907                           
 17908                           ;incstack = 0
 17909                           ; Regs used in _SPI2_Exchange8bit: [wreg]
 17910                           ;SPI2_Exchange8bit@data stored from wreg
 17911  10A9  0020               	movlb	0	; select bank0
 17912  10AA  00A0               	movwf	SPI2_Exchange8bit@data
 17913                           
 17914                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 17915  10AB  0023               	movlb	3	; select bank3
 17916  10AC  139A               	bcf	26,7	;volatile
 17917                           
 17918                           ;spi2.c: 84: SSP2BUF = data;
 17919  10AD  0020               	movlb	0	; select bank0
 17920  10AE  0820               	movf	SPI2_Exchange8bit@data,w
 17921  10AF  0023               	movlb	3	; select bank3
 17922  10B0  0096               	movwf	22	;volatile
 17923  10B1                     l742:	
 17924                           ;spi2.c: 87: {
 17925                           
 17926                           ;spi2.c: 86: while(SSP2STATbits.BF == 0x0)
 17927                           
 17928  10B1  1C19               	btfss	25,0	;volatile
 17929  10B2  28B1               	goto	l742
 17930                           
 17931                           ;spi2.c: 88: }
 17932                           ;spi2.c: 90: return (SSP2BUF);
 17933  10B3  0816               	movf	22,w	;volatile
 17934  10B4  0008               	return
 17935  10B5                     __end_of_SPI2_Exchange8bit:	
 17936                           
 17937                           	psect	intentry
 17938  0004                     __pintentry:	
 17939 ;; *************** function _INTERRUPT_InterruptManager *****************
 17940 ;; Defined at:
 17941 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;		None
 17944 ;; Auto vars:     Size  Location     Type
 17945 ;;		None
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  1    wreg      void 
 17948 ;; Registers used:
 17949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17959 ;;Total ram usage:        1 bytes
 17960 ;; Hardware stack levels used:    1
 17961 ;; Hardware stack levels required when called:    5
 17962 ;; This function calls:
 17963 ;;		Absolute function
 17964 ;;		_i2c_busCollisionISR
 17965 ;;		i1_i2c_ISR
 17966 ;; This function is called by:
 17967 ;;		Interrupt level 1
 17968 ;; This function uses a non-reentrant model
 17969 ;;
 17970                           
 17971  0004                     _INTERRUPT_InterruptManager:	
 17972                           
 17973                           ;incstack = 0
 17974 ;; hardware stack exceeded
 17975  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17976                           
 17977                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17978  0005  3180               	pagesel	$
 17979  0006  0020               	movlb	0	; select bank0
 17980  0007  087F               	movf	127,w
 17981  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
 17982                           
 17983                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 17984  0009  1F0B               	btfss	11,6	;volatile
 17985  000A  281D               	goto	i1l636
 17986                           
 17987                           ;interrupt_manager.c: 56: {
 17988                           ;interrupt_manager.c: 57: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17989  000B  002E               	movlb	14	; select bank14
 17990  000C  1899               	btfsc	25,1	;volatile
 17991  000D  1C8F               	btfss	15,1	;volatile
 17992  000E  2815               	goto	i1l631
 17993                           
 17994                           ;interrupt_manager.c: 58: {
 17995                           ;interrupt_manager.c: 59: i2c1_driver_busCollisionISR();
 17996  000F  087D               	movf	_i2c1_driver_busCollisionISR+1,w
 17997  0010  008A               	movwf	10
 17998  0011  087C               	movf	_i2c1_driver_busCollisionISR,w
 17999  0012  000A               	callw
 18000  0013  3180               	pagesel	$
 18001                           
 18002                           ;interrupt_manager.c: 60: }
 18003  0014  281D               	goto	i1l636
 18004  0015                     i1l631:	
 18005                           
 18006                           ;interrupt_manager.c: 61: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 18007  0015  1819               	btfsc	25,0	;volatile
 18008  0016  1C0F               	btfss	15,0	;volatile
 18009  0017  281D               	goto	i1l636
 18010                           
 18011                           ;interrupt_manager.c: 62: {
 18012                           ;interrupt_manager.c: 63: i2c1_driver_i2cISR();
 18013  0018  087B               	movf	_i2c1_driver_i2cISR+1,w
 18014  0019  008A               	movwf	10
 18015  001A  087A               	movf	_i2c1_driver_i2cISR,w
 18016  001B  000A               	callw
 18017  001C  3180               	pagesel	$
 18018  001D                     i1l636:	
 18019                           ;interrupt_manager.c: 70: else
 18020                           ;interrupt_manager.c: 71: {
 18021                           
 18022                           ;interrupt_manager.c: 68: }
 18023                           ;interrupt_manager.c: 69: }
 18024                           
 18025                           ;interrupt_manager.c: 65: else
 18026                           ;interrupt_manager.c: 66: {
 18027                           
 18028                           ;interrupt_manager.c: 64: }
 18029                           
 18030  001D  0877               	movf	??_INTERRUPT_InterruptManager,w
 18031  001E  0020               	movlb	0	; select bank0
 18032  001F  00FF               	movwf	127
 18033  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18034  0021  0009               	retfie
 18035  0022                     __end_of_INTERRUPT_InterruptManager:	
 18036                           
 18037                           	psect	text99
 18038  0800                     __ptext99:	
 18039 ;; *************** function i1_i2c_ISR *****************
 18040 ;; Defined at:
 18041 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 18042 ;; Parameters:    Size  Location     Type
 18043 ;;		None
 18044 ;; Auto vars:     Size  Location     Type
 18045 ;;		None
 18046 ;; Return value:  Size  Location     Type
 18047 ;;                  1    wreg      void 
 18048 ;; Registers used:
 18049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18050 ;; Tracked objects:
 18051 ;;		On entry : 0/0
 18052 ;;		On exit  : 0/0
 18053 ;;		Unchanged: 0/0
 18054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18057 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18058 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18059 ;;Total ram usage:        3 bytes
 18060 ;; Hardware stack levels used:    1
 18061 ;; Hardware stack levels required when called:    4
 18062 ;; This function calls:
 18063 ;;		i1_do_I2C_DO_ACK
 18064 ;;		i1_do_I2C_DO_ADDRESS_NACK
 18065 ;;		i1_do_I2C_DO_NACK_RESTART
 18066 ;;		i1_do_I2C_DO_NACK_STOP
 18067 ;;		i1_do_I2C_IDLE
 18068 ;;		i1_do_I2C_RCEN
 18069 ;;		i1_do_I2C_RESET
 18070 ;;		i1_do_I2C_RX
 18071 ;;		i1_do_I2C_SEND_ADR_READ
 18072 ;;		i1_do_I2C_SEND_ADR_WRITE
 18073 ;;		i1_do_I2C_SEND_RESTART
 18074 ;;		i1_do_I2C_SEND_RESTART_READ
 18075 ;;		i1_do_I2C_SEND_RESTART_WRITE
 18076 ;;		i1_do_I2C_SEND_STOP
 18077 ;;		i1_do_I2C_TX
 18078 ;;		i1_do_I2C_TX_EMPTY
 18079 ;;		i1_i2c1_driver_isNACK
 18080 ;;		i1_mssp1_clearIRQ
 18081 ;; This function is called by:
 18082 ;; This function uses a non-reentrant model
 18083 ;;
 18084                           
 18085                           
 18086                           ;psect for function i1_i2c_ISR
 18087  0800                     i1_i2c_ISR:	
 18088  0800                     i1l8317:	
 18089                           ;incstack = 0
 18090 ;; hardware stack exceeded
 18091                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18092                           
 18093                           
 18094                           ;i2c_master.c: 421: mssp1_clearIRQ();
 18095  0800  319F  273B  3188   	fcall	i1_mssp1_clearIRQ
 18096                           
 18097                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 18098  0803  0021               	movlb	1	; select bank1
 18099  0804  1DA0               	btfss	_i2c_status^(0+128),3
 18100  0805  2810               	goto	i1l8325
 18101  0806  319F  27D0  3188   	fcall	i1_i2c1_driver_isNACK
 18102  0809  1C03               	btfss	3,0
 18103  080A  2810               	goto	i1l8325
 18104                           
 18105                           ;i2c_master.c: 428: {
 18106                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 18107  080B  300F               	movlw	15
 18108  080C  00F4               	movwf	??i1_i2c_ISR
 18109  080D  0874               	movf	??i1_i2c_ISR,w
 18110  080E  0021               	movlb	1	; select bank1
 18111  080F  00A9               	movwf	(_i2c_status^(0+128)+9)
 18112  0810                     i1l8325:	
 18113                           
 18114                           ;i2c_master.c: 430: }
 18115                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 18116  0810  0021               	movlb	1	; select bank1
 18117  0811  0829               	movf	(_i2c_status^(0+128)+9),w
 18118  0812  00F4               	movwf	??i1_i2c_ISR
 18119  0813  01F5               	clrf	??i1_i2c_ISR+1
 18120  0814  35F4               	lslf	??i1_i2c_ISR,f
 18121  0815  0DF5               	rlf	??i1_i2c_ISR+1,f
 18122  0816  3000               	movlw	low (_fsmStateTable| (0+32768))
 18123  0817  0774               	addwf	??i1_i2c_ISR,w
 18124  0818  0084               	movwf	4
 18125  0819  3098               	movlw	high (_fsmStateTable| (0+32768))
 18126  081A  3D75               	addwfc	??i1_i2c_ISR+1,w
 18127  081B  0085               	movwf	5
 18128  081C  3F01               	moviw [1]fsr0
 18129  081D  008A               	movwf	10
 18130  081E  3F00               	moviw [0]fsr0
 18131  081F  000A               	callw
 18132  0820  3188               	pagesel	$
 18133  0821  00F6               	movwf	??i1_i2c_ISR+2
 18134  0822  0876               	movf	??i1_i2c_ISR+2,w
 18135  0823  0021               	movlb	1	; select bank1
 18136  0824  00A9               	movwf	(_i2c_status^(0+128)+9)
 18137  0825  0008               	return
 18138  0826                     __end_ofi1_i2c_ISR:	
 18139                           
 18140                           	psect	text100
 18141  1F3B                     __ptext100:	
 18142 ;; *************** function i1_mssp1_clearIRQ *****************
 18143 ;; Defined at:
 18144 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 18145 ;; Parameters:    Size  Location     Type
 18146 ;;		None
 18147 ;; Auto vars:     Size  Location     Type
 18148 ;;		None
 18149 ;; Return value:  Size  Location     Type
 18150 ;;                  1    wreg      void 
 18151 ;; Registers used:
 18152 ;;		None
 18153 ;; Tracked objects:
 18154 ;;		On entry : 0/0
 18155 ;;		On exit  : 0/0
 18156 ;;		Unchanged: 0/0
 18157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18162 ;;Total ram usage:        0 bytes
 18163 ;; Hardware stack levels used:    1
 18164 ;; This function calls:
 18165 ;;		Nothing
 18166 ;; This function is called by:
 18167 ;;		i1_i2c_ISR
 18168 ;; This function uses a non-reentrant model
 18169 ;;
 18170                           
 18171                           
 18172                           ;psect for function i1_mssp1_clearIRQ
 18173  1F3B                     i1_mssp1_clearIRQ:	
 18174                           
 18175                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
 18176                           
 18177                           ;incstack = 0
 18178                           ; Regs used in i1_mssp1_clearIRQ: []
 18179  1F3B  002E               	movlb	14	; select bank14
 18180  1F3C  100F               	bcf	15,0	;volatile
 18181  1F3D  0008               	return
 18182  1F3E                     __end_ofi1_mssp1_clearIRQ:	
 18183                           
 18184                           	psect	text101
 18185  1615                     __ptext101:	
 18186 ;; *************** function i1_do_I2C_RX *****************
 18187 ;; Defined at:
 18188 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 18189 ;; Parameters:    Size  Location     Type
 18190 ;;		None
 18191 ;; Auto vars:     Size  Location     Type
 18192 ;;		None
 18193 ;; Return value:  Size  Location     Type
 18194 ;;                  1    wreg      enum E15307
 18195 ;; Registers used:
 18196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18197 ;; Tracked objects:
 18198 ;;		On entry : 0/0
 18199 ;;		On exit  : 0/0
 18200 ;;		Unchanged: 0/0
 18201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18204 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18206 ;;Total ram usage:        1 bytes
 18207 ;; Hardware stack levels used:    1
 18208 ;; Hardware stack levels required when called:    3
 18209 ;; This function calls:
 18210 ;;		Absolute function
 18211 ;;		i1_do_I2C_DO_NACK_RESTART
 18212 ;;		i1_do_I2C_DO_NACK_STOP
 18213 ;;		i1_i2c1_driver_getRXData
 18214 ;;		i1_i2c1_driver_sendACK
 18215 ;;		i1_i2c_restartWrite
 18216 ;;		i1_rd1RegCompleteHandler
 18217 ;;		i1_rd2RegCompleteHandler
 18218 ;;		i1_rdBlkRegCompleteHandler
 18219 ;;		i1_returnReset
 18220 ;;		i1_returnStop
 18221 ;;		i1_wr1RegCompleteHandler
 18222 ;;		i1_wr2RegCompleteHandler
 18223 ;; This function is called by:
 18224 ;; This function uses a non-reentrant model
 18225 ;;
 18226                           
 18227                           
 18228                           ;psect for function i1_do_I2C_RX
 18229  1615                     i1_do_I2C_RX:	
 18230  1615                     i1l8221:	
 18231                           ;incstack = 0
 18232 ;; hardware stack exceeded
 18233                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18234                           
 18235                           
 18236                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 18237  1615  319F  2735  3196   	fcall	i1_i2c1_driver_getRXData
 18238  1618  00F0               	movwf	??i1_do_I2C_RX
 18239  1619  0021               	movlb	1	; select bank1
 18240  161A  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 18241  161B  0086               	movwf	6
 18242  161C  0187               	clrf	7
 18243  161D  0870               	movf	??i1_do_I2C_RX,w
 18244  161E  0081               	movwf	1
 18245  161F  3001               	movlw	1
 18246  1620  00F0               	movwf	??i1_do_I2C_RX
 18247  1621  0870               	movf	??i1_do_I2C_RX,w
 18248  1622  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 18249                           
 18250                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 18251  1623  3001               	movlw	1
 18252  1624  02A3               	subwf	(_i2c_status^(0+128)+3),f
 18253  1625  3000               	movlw	0
 18254  1626  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 18255  1627  0823               	movf	(_i2c_status^(0+128)+3),w
 18256  1628  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 18257  1629  1903               	btfsc	3,2
 18258  162A  2E2F               	goto	i1l314
 18259                           
 18260                           ;i2c_master.c: 361: {
 18261                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 18262  162B  319F  2756         	fcall	i1_i2c1_driver_sendACK
 18263                           
 18264                           ;i2c_master.c: 363: return I2C_RCEN;
 18265  162D  3005               	movlw	5
 18266                           
 18267                           ;i2c_master.c: 364: }
 18268  162E  0008               	return
 18269  162F                     i1l314:	
 18270                           
 18271                           ;i2c_master.c: 365: else
 18272                           ;i2c_master.c: 366: {
 18273                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 18274  162F  1520               	bsf	_i2c_status^(0+128),2
 18275                           
 18276                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 18277  1630  2E37               	goto	i1l8245
 18278  1631                     i1l8235:	
 18279                           ;i2c_master.c: 369: {
 18280                           ;i2c_master.c: 370: case i2c_restart_write:
 18281                           
 18282                           
 18283                           ;i2c_master.c: 371: case i2c_restart_read:
 18284                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 18285  1631  319F  2776         	fcall	i1_do_I2C_DO_NACK_RESTART
 18286  1633  0008               	return
 18287  1634                     i1l8239:	
 18288                           ;i2c_master.c: 374: case i2c_continue:
 18289                           
 18290                           ;i2c_master.c: 373: default:
 18291                           
 18292                           
 18293                           ;i2c_master.c: 375: case i2c_stop:
 18294                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 18295  1634  319F  2772         	fcall	i1_do_I2C_DO_NACK_STOP
 18296                           
 18297                           ;i2c_master.c: 377: }
 18298  1636  0008               	return
 18299  1637                     i1l8245:	
 18300  1637  0021               	movlb	1	; select bank1
 18301  1638  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 18302  1639  00F0               	movwf	??i1_do_I2C_RX
 18303  163A  0870               	movf	??i1_do_I2C_RX,w
 18304  163B  0020               	movlb	0	; select bank0
 18305  163C  00A1               	movwf	i1returnStop@p
 18306  163D  300B               	movlw	11
 18307  163E  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18308  163F  0086               	movwf	6
 18309  1640  0187               	clrf	7
 18310  1641  3F41               	moviw [1]fsr1
 18311  1642  008A               	movwf	10
 18312  1643  3F40               	moviw [0]fsr1
 18313  1644  000A               	callw
 18314  1645  3196               	pagesel	$
 18315                           
 18316                           ; Switch size 1, requested type "space"
 18317                           ; Number of cases is 4, Range of values is 1 to 4
 18318                           ; switch strategies available:
 18319                           ; Name         Instructions Cycles
 18320                           ; simple_byte           13     7 (average)
 18321                           ; direct_byte           17     9 (fixed)
 18322                           ; jumptable            263     9 (fixed)
 18323                           ;	Chosen strategy is simple_byte
 18324  1646  3A01               	xorlw	1	; case 1
 18325  1647  1903               	skipnz
 18326  1648  2E34               	goto	i1l8239
 18327  1649  3A03               	xorlw	3	; case 2
 18328  164A  1903               	skipnz
 18329  164B  2E31               	goto	i1l8235
 18330  164C  3A01               	xorlw	1	; case 3
 18331  164D  1903               	skipnz
 18332  164E  2E31               	goto	i1l8235
 18333  164F  3A07               	xorlw	7	; case 4
 18334  1650  1903               	skipnz
 18335  1651  2E34               	goto	i1l8239
 18336  1652  2E34               	goto	i1l8239
 18337  1653  0008               	return
 18338  1654                     __end_ofi1_do_I2C_RX:	
 18339                           
 18340                           	psect	text102
 18341  1767                     __ptext102:	
 18342 ;; *************** function i1_do_I2C_TX *****************
 18343 ;; Defined at:
 18344 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 18345 ;; Parameters:    Size  Location     Type
 18346 ;;		None
 18347 ;; Auto vars:     Size  Location     Type
 18348 ;;		None
 18349 ;; Return value:  Size  Location     Type
 18350 ;;                  1    wreg      enum E15307
 18351 ;; Registers used:
 18352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18353 ;; Tracked objects:
 18354 ;;		On entry : 0/0
 18355 ;;		On exit  : 0/0
 18356 ;;		Unchanged: 0/0
 18357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18362 ;;Total ram usage:        3 bytes
 18363 ;; Hardware stack levels used:    1
 18364 ;; Hardware stack levels required when called:    3
 18365 ;; This function calls:
 18366 ;;		Absolute function
 18367 ;;		i1_do_I2C_SEND_RESTART_READ
 18368 ;;		i1_do_I2C_SEND_RESTART_WRITE
 18369 ;;		i1_do_I2C_SEND_STOP
 18370 ;;		i1_i2c1_driver_TXData
 18371 ;;		i1_i2c1_driver_isNACK
 18372 ;;		i1_i2c_restartWrite
 18373 ;;		i1_rd1RegCompleteHandler
 18374 ;;		i1_rd2RegCompleteHandler
 18375 ;;		i1_rdBlkRegCompleteHandler
 18376 ;;		i1_returnReset
 18377 ;;		i1_returnStop
 18378 ;;		i1_wr1RegCompleteHandler
 18379 ;;		i1_wr2RegCompleteHandler
 18380 ;; This function is called by:
 18381 ;; This function uses a non-reentrant model
 18382 ;;
 18383                           
 18384                           
 18385                           ;psect for function i1_do_I2C_TX
 18386  1767                     i1_do_I2C_TX:	
 18387  1767                     i1l8191:	
 18388                           ;incstack = 0
 18389 ;; hardware stack exceeded
 18390                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18391                           
 18392                           
 18393                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 18394  1767  319F  27D0  3197   	fcall	i1_i2c1_driver_isNACK
 18395  176A  1803               	btfsc	3,0
 18396  176B  2F76               	goto	i1l8209
 18397  176C  2F93               	goto	i1l298
 18398  176D                     i1l8195:	
 18399                           ;i2c_master.c: 338: {
 18400                           ;i2c_master.c: 339: case i2c_restart_read:
 18401                           
 18402                           ;i2c_master.c: 336: {
 18403                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 18404                           
 18405                           
 18406                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 18407  176D  319F  275E         	fcall	i1_do_I2C_SEND_RESTART_READ
 18408  176F  0008               	return
 18409  1770                     i1l8199:	
 18410                           ;i2c_master.c: 341: case i2c_restart_write:
 18411                           
 18412                           
 18413                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 18414  1770  319F  2762         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 18415  1772  0008               	return
 18416  1773                     i1l8203:	
 18417                           ;i2c_master.c: 344: case i2c_continue:
 18418                           
 18419                           ;i2c_master.c: 343: default:
 18420                           
 18421                           
 18422                           ;i2c_master.c: 345: case i2c_stop:
 18423                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 18424  1773  319F  276A         	fcall	i1_do_I2C_SEND_STOP
 18425                           
 18426                           ;i2c_master.c: 347: }
 18427  1775  0008               	return
 18428  1776                     i1l8209:	
 18429  1776  0021               	movlb	1	; select bank1
 18430  1777  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 18431  1778  00F1               	movwf	??i1_do_I2C_TX
 18432  1779  0871               	movf	??i1_do_I2C_TX,w
 18433  177A  0020               	movlb	0	; select bank0
 18434  177B  00A1               	movwf	i1returnStop@p
 18435  177C  3011               	movlw	17
 18436  177D  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18437  177E  0086               	movwf	6
 18438  177F  0187               	clrf	7
 18439  1780  3F41               	moviw [1]fsr1
 18440  1781  008A               	movwf	10
 18441  1782  3F40               	moviw [0]fsr1
 18442  1783  000A               	callw
 18443  1784  3197               	pagesel	$
 18444                           
 18445                           ; Switch size 1, requested type "space"
 18446                           ; Number of cases is 4, Range of values is 1 to 4
 18447                           ; switch strategies available:
 18448                           ; Name         Instructions Cycles
 18449                           ; simple_byte           13     7 (average)
 18450                           ; direct_byte           17     9 (fixed)
 18451                           ; jumptable            263     9 (fixed)
 18452                           ;	Chosen strategy is simple_byte
 18453  1785  3A01               	xorlw	1	; case 1
 18454  1786  1903               	skipnz
 18455  1787  2F73               	goto	i1l8203
 18456  1788  3A03               	xorlw	3	; case 2
 18457  1789  1903               	skipnz
 18458  178A  2F6D               	goto	i1l8195
 18459  178B  3A01               	xorlw	1	; case 3
 18460  178C  1903               	skipnz
 18461  178D  2F70               	goto	i1l8199
 18462  178E  3A07               	xorlw	7	; case 4
 18463  178F  1903               	skipnz
 18464  1790  2F73               	goto	i1l8203
 18465  1791  2F73               	goto	i1l8203
 18466                           
 18467                           ;i2c_master.c: 348: }
 18468  1792  0008               	return
 18469  1793                     i1l298:	
 18470                           
 18471                           ;i2c_master.c: 349: else
 18472                           ;i2c_master.c: 350: {
 18473                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 18474  1793  0021               	movlb	1	; select bank1
 18475  1794  11A0               	bcf	_i2c_status^(0+128),3
 18476                           
 18477                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 18478  1795  3002               	movlw	2
 18479  1796  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18480  1797  0086               	movwf	6
 18481  1798  0187               	clrf	7
 18482  1799  3F40               	moviw [0]fsr1
 18483  179A  0084               	movwf	4
 18484  179B  0185               	clrf	5
 18485  179C  0A81               	incf	1,f
 18486  179D  0800               	movf	0,w
 18487  179E  319F  2786  3197   	fcall	i1_i2c1_driver_TXData
 18488                           
 18489                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 18490  17A1  3001               	movlw	1
 18491  17A2  0021               	movlb	1	; select bank1
 18492  17A3  02A3               	subwf	(_i2c_status^(0+128)+3),f
 18493  17A4  3000               	movlw	0
 18494  17A5  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 18495  17A6  0823               	movf	(_i2c_status^(0+128)+3),w
 18496  17A7  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 18497  17A8  1D03               	btfss	3,2
 18498  17A9  2FAC               	goto	i1l8217
 18499  17AA  3006               	movlw	6
 18500  17AB  2FAD               	goto	L6
 18501  17AC                     i1l8217:	
 18502  17AC  3003               	movlw	3
 18503  17AD                     L6:	
 18504  17AD  00F2               	movwf	i1_do_I2C_TX$723
 18505  17AE  3000               	movlw	0
 18506  17AF  00F3               	movwf	i1_do_I2C_TX$723+1
 18507  17B0  0872               	movf	i1_do_I2C_TX$723,w
 18508  17B1  0008               	return
 18509  17B2                     __end_ofi1_do_I2C_TX:	
 18510                           
 18511                           	psect	text103
 18512  1322                     __ptext103:	
 18513 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 18514 ;; Defined at:
 18515 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 18516 ;; Parameters:    Size  Location     Type
 18517 ;;		None
 18518 ;; Auto vars:     Size  Location     Type
 18519 ;;		None
 18520 ;; Return value:  Size  Location     Type
 18521 ;;                  1    wreg      enum E15307
 18522 ;; Registers used:
 18523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18524 ;; Tracked objects:
 18525 ;;		On entry : 0/0
 18526 ;;		On exit  : 0/0
 18527 ;;		Unchanged: 0/0
 18528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18533 ;;Total ram usage:        1 bytes
 18534 ;; Hardware stack levels used:    1
 18535 ;; Hardware stack levels required when called:    3
 18536 ;; This function calls:
 18537 ;;		Absolute function
 18538 ;;		i1_do_I2C_SEND_RESTART
 18539 ;;		i1_do_I2C_SEND_STOP
 18540 ;;		i1_i2c_restartWrite
 18541 ;;		i1_rd1RegCompleteHandler
 18542 ;;		i1_rd2RegCompleteHandler
 18543 ;;		i1_rdBlkRegCompleteHandler
 18544 ;;		i1_returnReset
 18545 ;;		i1_returnStop
 18546 ;;		i1_wr1RegCompleteHandler
 18547 ;;		i1_wr2RegCompleteHandler
 18548 ;; This function is called by:
 18549 ;; This function uses a non-reentrant model
 18550 ;;
 18551                           
 18552                           
 18553                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 18554  1322                     i1_do_I2C_DO_ADDRESS_NACK:	
 18555  1322                     i1l8175:	
 18556                           ;incstack = 0
 18557 ;; hardware stack exceeded
 18558                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18559                           
 18560                           
 18561                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 18562  1322  0021               	movlb	1	; select bank1
 18563  1323  11A0               	bcf	_i2c_status^(0+128),3
 18564                           
 18565                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 18566  1324  3002               	movlw	2
 18567  1325  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 18568  1326  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 18569  1327  00AA               	movwf	(_i2c_status^(0+128)+10)
 18570                           
 18571                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 18572  1328  2B2F               	goto	i1l8189
 18573  1329                     i1l8179:	
 18574                           ;i2c_master.c: 324: {
 18575                           ;i2c_master.c: 325: case i2c_restart_read:
 18576                           
 18577                           
 18578                           ;i2c_master.c: 326: case i2c_restart_write:
 18579                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 18580  1329  319F  2766         	fcall	i1_do_I2C_SEND_RESTART
 18581  132B  0008               	return
 18582  132C                     i1l8183:	
 18583                           ;i2c_master.c: 328: default:
 18584                           
 18585                           
 18586                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 18587  132C  319F  276A         	fcall	i1_do_I2C_SEND_STOP
 18588                           
 18589                           ;i2c_master.c: 330: }
 18590  132E  0008               	return
 18591  132F                     i1l8189:	
 18592  132F  0021               	movlb	1	; select bank1
 18593  1330  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 18594  1331  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 18595  1332  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 18596  1333  0020               	movlb	0	; select bank0
 18597  1334  00A1               	movwf	i1returnStop@p
 18598  1335  300F               	movlw	15
 18599  1336  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18600  1337  0086               	movwf	6
 18601  1338  0187               	clrf	7
 18602  1339  3F41               	moviw [1]fsr1
 18603  133A  008A               	movwf	10
 18604  133B  3F40               	moviw [0]fsr1
 18605  133C  000A               	callw
 18606  133D  3193               	pagesel	$
 18607                           
 18608                           ; Switch size 1, requested type "space"
 18609                           ; Number of cases is 2, Range of values is 2 to 3
 18610                           ; switch strategies available:
 18611                           ; Name         Instructions Cycles
 18612                           ; simple_byte            7     4 (average)
 18613                           ; direct_byte           13     9 (fixed)
 18614                           ; jumptable            263     9 (fixed)
 18615                           ;	Chosen strategy is simple_byte
 18616  133E  3A02               	xorlw	2	; case 2
 18617  133F  1903               	skipnz
 18618  1340  2B29               	goto	i1l8179
 18619  1341  3A01               	xorlw	1	; case 3
 18620  1342  1903               	skipnz
 18621  1343  2B29               	goto	i1l8179
 18622  1344  2B2C               	goto	i1l8183
 18623  1345  0008               	return
 18624  1346                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 18625                           
 18626                           	psect	text104
 18627  1F76                     __ptext104:	
 18628 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 18629 ;; Defined at:
 18630 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 18631 ;; Parameters:    Size  Location     Type
 18632 ;;		None
 18633 ;; Auto vars:     Size  Location     Type
 18634 ;;		None
 18635 ;; Return value:  Size  Location     Type
 18636 ;;                  1    wreg      enum E15307
 18637 ;; Registers used:
 18638 ;;		wreg, status,2, status,0, pclath, cstack
 18639 ;; Tracked objects:
 18640 ;;		On entry : 0/0
 18641 ;;		On exit  : 0/0
 18642 ;;		Unchanged: 0/0
 18643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18648 ;;Total ram usage:        0 bytes
 18649 ;; Hardware stack levels used:    1
 18650 ;; Hardware stack levels required when called:    1
 18651 ;; This function calls:
 18652 ;;		i1_i2c1_driver_sendNACK
 18653 ;; This function is called by:
 18654 ;;		i1_do_I2C_RX
 18655 ;; This function uses a non-reentrant model
 18656 ;;
 18657                           
 18658                           
 18659                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 18660  1F76                     i1_do_I2C_DO_NACK_RESTART:	
 18661  1F76                     i1l4227:	
 18662                           ;incstack = 0
 18663 ;; hardware stack exceeded
 18664                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18665                           
 18666                           
 18667                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 18668  1F76  319F  275A         	fcall	i1_i2c1_driver_sendNACK
 18669                           
 18670                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 18671  1F78  3009               	movlw	9
 18672  1F79  0008               	return
 18673  1F7A                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 18674                           
 18675                           	psect	text105
 18676  1F72                     __ptext105:	
 18677 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 18678 ;; Defined at:
 18679 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 18680 ;; Parameters:    Size  Location     Type
 18681 ;;		None
 18682 ;; Auto vars:     Size  Location     Type
 18683 ;;		None
 18684 ;; Return value:  Size  Location     Type
 18685 ;;                  1    wreg      enum E15307
 18686 ;; Registers used:
 18687 ;;		wreg, status,2, status,0, pclath, cstack
 18688 ;; Tracked objects:
 18689 ;;		On entry : 0/0
 18690 ;;		On exit  : 0/0
 18691 ;;		Unchanged: 0/0
 18692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18697 ;;Total ram usage:        0 bytes
 18698 ;; Hardware stack levels used:    1
 18699 ;; Hardware stack levels required when called:    1
 18700 ;; This function calls:
 18701 ;;		i1_i2c1_driver_sendNACK
 18702 ;; This function is called by:
 18703 ;;		i1_do_I2C_RX
 18704 ;; This function uses a non-reentrant model
 18705 ;;
 18706                           
 18707                           
 18708                           ;psect for function i1_do_I2C_DO_NACK_STOP
 18709  1F72                     i1_do_I2C_DO_NACK_STOP:	
 18710  1F72                     i1l4221:	
 18711                           ;incstack = 0
 18712 ;; hardware stack exceeded
 18713                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 18714                           
 18715                           
 18716                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 18717  1F72  319F  275A         	fcall	i1_i2c1_driver_sendNACK
 18718                           
 18719                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 18720  1F74  300A               	movlw	10
 18721  1F75  0008               	return
 18722  1F76                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 18723                           
 18724                           	psect	text106
 18725  1F6E                     __ptext106:	
 18726 ;; *************** function i1_do_I2C_DO_ACK *****************
 18727 ;; Defined at:
 18728 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 18729 ;; Parameters:    Size  Location     Type
 18730 ;;		None
 18731 ;; Auto vars:     Size  Location     Type
 18732 ;;		None
 18733 ;; Return value:  Size  Location     Type
 18734 ;;                  1    wreg      enum E15307
 18735 ;; Registers used:
 18736 ;;		wreg, status,2, status,0, pclath, cstack
 18737 ;; Tracked objects:
 18738 ;;		On entry : 0/0
 18739 ;;		On exit  : 0/0
 18740 ;;		Unchanged: 0/0
 18741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18746 ;;Total ram usage:        0 bytes
 18747 ;; Hardware stack levels used:    1
 18748 ;; Hardware stack levels required when called:    1
 18749 ;; This function calls:
 18750 ;;		i1_i2c1_driver_sendACK
 18751 ;; This function is called by:
 18752 ;; This function uses a non-reentrant model
 18753 ;;
 18754                           
 18755                           
 18756                           ;psect for function i1_do_I2C_DO_ACK
 18757  1F6E                     i1_do_I2C_DO_ACK:	
 18758  1F6E                     i1l4643:	
 18759                           ;incstack = 0
 18760 ;; hardware stack exceeded
 18761                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 18762                           
 18763                           
 18764                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 18765  1F6E  319F  2756         	fcall	i1_i2c1_driver_sendACK
 18766                           
 18767                           ;i2c_master.c: 302: return I2C_RCEN;
 18768  1F70  3005               	movlw	5
 18769  1F71  0008               	return
 18770  1F72                     __end_ofi1_do_I2C_DO_ACK:	
 18771                           
 18772                           	psect	text107
 18773  1F8B                     __ptext107:	
 18774 ;; *************** function i1_do_I2C_RCEN *****************
 18775 ;; Defined at:
 18776 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 18777 ;; Parameters:    Size  Location     Type
 18778 ;;		None
 18779 ;; Auto vars:     Size  Location     Type
 18780 ;;		None
 18781 ;; Return value:  Size  Location     Type
 18782 ;;                  1    wreg      enum E15307
 18783 ;; Registers used:
 18784 ;;		wreg, status,2, status,0, pclath, cstack
 18785 ;; Tracked objects:
 18786 ;;		On entry : 0/0
 18787 ;;		On exit  : 0/0
 18788 ;;		Unchanged: 0/0
 18789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18794 ;;Total ram usage:        0 bytes
 18795 ;; Hardware stack levels used:    1
 18796 ;; Hardware stack levels required when called:    1
 18797 ;; This function calls:
 18798 ;;		i1_i2c1_driver_startRX
 18799 ;; This function is called by:
 18800 ;; This function uses a non-reentrant model
 18801 ;;
 18802                           
 18803                           
 18804                           ;psect for function i1_do_I2C_RCEN
 18805  1F8B                     i1_do_I2C_RCEN:	
 18806  1F8B                     i1l4635:	
 18807                           ;incstack = 0
 18808 ;; hardware stack exceeded
 18809                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 18810                           
 18811                           
 18812                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 18813  1F8B  0021               	movlb	1	; select bank1
 18814  1F8C  11A0               	bcf	_i2c_status^(0+128),3
 18815                           
 18816                           ;i2c_master.c: 295: i2c1_driver_startRX();
 18817  1F8D  319F  2732         	fcall	i1_i2c1_driver_startRX
 18818                           
 18819                           ;i2c_master.c: 296: return I2C_RX;
 18820  1F8F  3004               	movlw	4
 18821  1F90  0008               	return
 18822  1F91                     __end_ofi1_do_I2C_RCEN:	
 18823                           
 18824                           	psect	text108
 18825  1FC2                     __ptext108:	
 18826 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 18827 ;; Defined at:
 18828 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 18829 ;; Parameters:    Size  Location     Type
 18830 ;;		None
 18831 ;; Auto vars:     Size  Location     Type
 18832 ;;		None
 18833 ;; Return value:  Size  Location     Type
 18834 ;;                  1    wreg      enum E15307
 18835 ;; Registers used:
 18836 ;;		wreg, status,2, status,0, pclath, cstack
 18837 ;; Tracked objects:
 18838 ;;		On entry : 0/0
 18839 ;;		On exit  : 0/0
 18840 ;;		Unchanged: 0/0
 18841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18846 ;;Total ram usage:        0 bytes
 18847 ;; Hardware stack levels used:    1
 18848 ;; Hardware stack levels required when called:    1
 18849 ;; This function calls:
 18850 ;;		i1_i2c1_driver_TXData
 18851 ;; This function is called by:
 18852 ;; This function uses a non-reentrant model
 18853 ;;
 18854                           
 18855                           
 18856                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 18857  1FC2                     i1_do_I2C_SEND_ADR_WRITE:	
 18858  1FC2                     i1l4627:	
 18859                           ;incstack = 0
 18860 ;; hardware stack exceeded
 18861                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18862                           
 18863                           
 18864                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 18865  1FC2  0021               	movlb	1	; select bank1
 18866  1FC3  15A0               	bsf	_i2c_status^(0+128),3
 18867                           
 18868                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 18869  1FC4  3521               	lslf	(_i2c_status^(0+128)+1),w
 18870  1FC5  319F  2786         	fcall	i1_i2c1_driver_TXData
 18871                           
 18872                           ;i2c_master.c: 289: return I2C_TX;
 18873  1FC7  3003               	movlw	3
 18874  1FC8  0008               	return
 18875  1FC9                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 18876                           
 18877                           	psect	text109
 18878  1FD8                     __ptext109:	
 18879 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 18880 ;; Defined at:
 18881 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 18882 ;; Parameters:    Size  Location     Type
 18883 ;;		None
 18884 ;; Auto vars:     Size  Location     Type
 18885 ;;		None
 18886 ;; Return value:  Size  Location     Type
 18887 ;;                  1    wreg      enum E15307
 18888 ;; Registers used:
 18889 ;;		wreg, status,2, status,0, pclath, cstack
 18890 ;; Tracked objects:
 18891 ;;		On entry : 0/0
 18892 ;;		On exit  : 0/0
 18893 ;;		Unchanged: 0/0
 18894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18899 ;;Total ram usage:        0 bytes
 18900 ;; Hardware stack levels used:    1
 18901 ;; Hardware stack levels required when called:    1
 18902 ;; This function calls:
 18903 ;;		i1_i2c1_driver_TXData
 18904 ;; This function is called by:
 18905 ;; This function uses a non-reentrant model
 18906 ;;
 18907                           
 18908                           
 18909                           ;psect for function i1_do_I2C_SEND_ADR_READ
 18910  1FD8                     i1_do_I2C_SEND_ADR_READ:	
 18911  1FD8                     i1l4619:	
 18912                           ;incstack = 0
 18913 ;; hardware stack exceeded
 18914                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 18915                           
 18916                           
 18917                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 18918  1FD8  0021               	movlb	1	; select bank1
 18919  1FD9  15A0               	bsf	_i2c_status^(0+128),3
 18920                           
 18921                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 18922  1FDA  1403               	setc
 18923  1FDB  0D21               	rlf	(_i2c_status^(0+128)+1),w
 18924  1FDC  319F  2786         	fcall	i1_i2c1_driver_TXData
 18925                           
 18926                           ;i2c_master.c: 282: return I2C_RCEN;
 18927  1FDE  3005               	movlw	5
 18928  1FDF  0008               	return
 18929  1FE0                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 18930                           
 18931                           	psect	text110
 18932  1F6A                     __ptext110:	
 18933 ;; *************** function i1_do_I2C_SEND_STOP *****************
 18934 ;; Defined at:
 18935 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 18936 ;; Parameters:    Size  Location     Type
 18937 ;;		None
 18938 ;; Auto vars:     Size  Location     Type
 18939 ;;		None
 18940 ;; Return value:  Size  Location     Type
 18941 ;;                  1    wreg      enum E15307
 18942 ;; Registers used:
 18943 ;;		wreg, status,2, status,0, pclath, cstack
 18944 ;; Tracked objects:
 18945 ;;		On entry : 0/0
 18946 ;;		On exit  : 0/0
 18947 ;;		Unchanged: 0/0
 18948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18953 ;;Total ram usage:        0 bytes
 18954 ;; Hardware stack levels used:    1
 18955 ;; Hardware stack levels required when called:    1
 18956 ;; This function calls:
 18957 ;;		i1_i2c1_driver_stop
 18958 ;; This function is called by:
 18959 ;;		i1_do_I2C_DO_ADDRESS_NACK
 18960 ;;		i1_do_I2C_TX
 18961 ;;		i1_do_I2C_TX_EMPTY
 18962 ;; This function uses a non-reentrant model
 18963 ;;
 18964                           
 18965                           
 18966                           ;psect for function i1_do_I2C_SEND_STOP
 18967  1F6A                     i1_do_I2C_SEND_STOP:	
 18968  1F6A                     i1l4215:	
 18969                           ;incstack = 0
 18970 ;; hardware stack exceeded
 18971                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 18972                           
 18973                           
 18974                           ;i2c_master.c: 274: i2c1_driver_stop();
 18975  1F6A  319F  272F         	fcall	i1_i2c1_driver_stop
 18976                           
 18977                           ;i2c_master.c: 275: return I2C_IDLE;
 18978  1F6C  3000               	movlw	0
 18979  1F6D  0008               	return
 18980  1F6E                     __end_ofi1_do_I2C_SEND_STOP:	
 18981                           
 18982                           	psect	text111
 18983  1F66                     __ptext111:	
 18984 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 18985 ;; Defined at:
 18986 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 18987 ;; Parameters:    Size  Location     Type
 18988 ;;		None
 18989 ;; Auto vars:     Size  Location     Type
 18990 ;;		None
 18991 ;; Return value:  Size  Location     Type
 18992 ;;                  1    wreg      enum E15307
 18993 ;; Registers used:
 18994 ;;		wreg, status,2, status,0, pclath, cstack
 18995 ;; Tracked objects:
 18996 ;;		On entry : 0/0
 18997 ;;		On exit  : 0/0
 18998 ;;		Unchanged: 0/0
 18999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19004 ;;Total ram usage:        0 bytes
 19005 ;; Hardware stack levels used:    1
 19006 ;; Hardware stack levels required when called:    1
 19007 ;; This function calls:
 19008 ;;		i1_i2c1_driver_restart
 19009 ;; This function is called by:
 19010 ;;		i1_do_I2C_DO_ADDRESS_NACK
 19011 ;;		i1_do_I2C_TX_EMPTY
 19012 ;; This function uses a non-reentrant model
 19013 ;;
 19014                           
 19015                           
 19016                           ;psect for function i1_do_I2C_SEND_RESTART
 19017  1F66                     i1_do_I2C_SEND_RESTART:	
 19018  1F66                     i1l4209:	
 19019                           ;incstack = 0
 19020 ;; hardware stack exceeded
 19021                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 19022                           
 19023                           
 19024                           ;i2c_master.c: 268: i2c1_driver_restart();
 19025  1F66  319F  272C         	fcall	i1_i2c1_driver_restart
 19026                           
 19027                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 19028  1F68  3001               	movlw	1
 19029  1F69  0008               	return
 19030  1F6A                     __end_ofi1_do_I2C_SEND_RESTART:	
 19031                           
 19032                           	psect	text112
 19033  1F62                     __ptext112:	
 19034 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 19035 ;; Defined at:
 19036 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 19037 ;; Parameters:    Size  Location     Type
 19038 ;;		None
 19039 ;; Auto vars:     Size  Location     Type
 19040 ;;		None
 19041 ;; Return value:  Size  Location     Type
 19042 ;;                  1    wreg      enum E15307
 19043 ;; Registers used:
 19044 ;;		wreg, status,2, status,0, pclath, cstack
 19045 ;; Tracked objects:
 19046 ;;		On entry : 0/0
 19047 ;;		On exit  : 0/0
 19048 ;;		Unchanged: 0/0
 19049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19054 ;;Total ram usage:        0 bytes
 19055 ;; Hardware stack levels used:    1
 19056 ;; Hardware stack levels required when called:    1
 19057 ;; This function calls:
 19058 ;;		i1_i2c1_driver_restart
 19059 ;; This function is called by:
 19060 ;;		i1_do_I2C_TX
 19061 ;; This function uses a non-reentrant model
 19062 ;;
 19063                           
 19064                           
 19065                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 19066  1F62                     i1_do_I2C_SEND_RESTART_WRITE:	
 19067  1F62                     i1l4203:	
 19068                           ;incstack = 0
 19069 ;; hardware stack exceeded
 19070                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 19071                           
 19072                           
 19073                           ;i2c_master.c: 262: i2c1_driver_restart();
 19074  1F62  319F  272C         	fcall	i1_i2c1_driver_restart
 19075                           
 19076                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 19077  1F64  3002               	movlw	2
 19078  1F65  0008               	return
 19079  1F66                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 19080                           
 19081                           	psect	text113
 19082  1F5E                     __ptext113:	
 19083 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 19084 ;; Defined at:
 19085 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 19086 ;; Parameters:    Size  Location     Type
 19087 ;;		None
 19088 ;; Auto vars:     Size  Location     Type
 19089 ;;		None
 19090 ;; Return value:  Size  Location     Type
 19091 ;;                  1    wreg      enum E15307
 19092 ;; Registers used:
 19093 ;;		wreg, status,2, status,0, pclath, cstack
 19094 ;; Tracked objects:
 19095 ;;		On entry : 0/0
 19096 ;;		On exit  : 0/0
 19097 ;;		Unchanged: 0/0
 19098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19103 ;;Total ram usage:        0 bytes
 19104 ;; Hardware stack levels used:    1
 19105 ;; Hardware stack levels required when called:    1
 19106 ;; This function calls:
 19107 ;;		i1_i2c1_driver_restart
 19108 ;; This function is called by:
 19109 ;;		i1_do_I2C_TX
 19110 ;; This function uses a non-reentrant model
 19111 ;;
 19112                           
 19113                           
 19114                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 19115  1F5E                     i1_do_I2C_SEND_RESTART_READ:	
 19116  1F5E                     i1l4197:	
 19117                           ;incstack = 0
 19118 ;; hardware stack exceeded
 19119                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 19120                           
 19121                           
 19122                           ;i2c_master.c: 256: i2c1_driver_restart();
 19123  1F5E  319F  272C         	fcall	i1_i2c1_driver_restart
 19124                           
 19125                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 19126  1F60  3001               	movlw	1
 19127  1F61  0008               	return
 19128  1F62                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 19129                           
 19130                           	psect	text114
 19131  1000                     __ptext114:	
 19132 ;; *************** function i1_do_I2C_IDLE *****************
 19133 ;; Defined at:
 19134 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 19135 ;; Parameters:    Size  Location     Type
 19136 ;;		None
 19137 ;; Auto vars:     Size  Location     Type
 19138 ;;		None
 19139 ;; Return value:  Size  Location     Type
 19140 ;;                  1    wreg      enum E15307
 19141 ;; Registers used:
 19142 ;;		wreg, status,2
 19143 ;; Tracked objects:
 19144 ;;		On entry : 0/0
 19145 ;;		On exit  : 0/0
 19146 ;;		Unchanged: 0/0
 19147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19152 ;;Total ram usage:        0 bytes
 19153 ;; Hardware stack levels used:    1
 19154 ;; This function calls:
 19155 ;;		Nothing
 19156 ;; This function is called by:
 19157 ;; This function uses a non-reentrant model
 19158 ;;
 19159                           
 19160                           
 19161                           ;psect for function i1_do_I2C_IDLE
 19162  1000                     i1_do_I2C_IDLE:	
 19163  1000                     i1l4611:	
 19164                           ;incstack = 0
 19165                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 19166                           
 19167                           
 19168                           ;i2c_master.c: 249: i2c_status.busy = 0;
 19169  1000  0021               	movlb	1	; select bank1
 19170  1001  1020               	bcf	_i2c_status^(0+128),0
 19171                           
 19172                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 19173  1002  01AA               	clrf	(_i2c_status^(0+128)+10)
 19174                           
 19175                           ;i2c_master.c: 251: return I2C_RESET;
 19176  1003  300E               	movlw	14
 19177  1004  0008               	return
 19178  1005                     __end_ofi1_do_I2C_IDLE:	
 19179                           
 19180                           	psect	text115
 19181  1FBB                     __ptext115:	
 19182 ;; *************** function i1_do_I2C_RESET *****************
 19183 ;; Defined at:
 19184 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 19185 ;; Parameters:    Size  Location     Type
 19186 ;;		None
 19187 ;; Auto vars:     Size  Location     Type
 19188 ;;		None
 19189 ;; Return value:  Size  Location     Type
 19190 ;;                  1    wreg      enum E15307
 19191 ;; Registers used:
 19192 ;;		wreg, status,2, status,0, pclath, cstack
 19193 ;; Tracked objects:
 19194 ;;		On entry : 0/0
 19195 ;;		On exit  : 0/0
 19196 ;;		Unchanged: 0/0
 19197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19202 ;;Total ram usage:        0 bytes
 19203 ;; Hardware stack levels used:    1
 19204 ;; Hardware stack levels required when called:    1
 19205 ;; This function calls:
 19206 ;;		i1_i2c1_driver_resetBus
 19207 ;; This function is called by:
 19208 ;; This function uses a non-reentrant model
 19209 ;;
 19210                           
 19211                           
 19212                           ;psect for function i1_do_I2C_RESET
 19213  1FBB                     i1_do_I2C_RESET:	
 19214  1FBB                     i1l4601:	
 19215                           ;incstack = 0
 19216 ;; hardware stack exceeded
 19217                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 19218                           
 19219                           
 19220                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 19221  1FBB  319F  2720         	fcall	i1_i2c1_driver_resetBus
 19222                           
 19223                           ;i2c_master.c: 242: i2c_status.busy = 0;
 19224  1FBD  0021               	movlb	1	; select bank1
 19225  1FBE  1020               	bcf	_i2c_status^(0+128),0
 19226                           
 19227                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 19228  1FBF  01AA               	clrf	(_i2c_status^(0+128)+10)
 19229                           
 19230                           ;i2c_master.c: 244: return I2C_RESET;
 19231  1FC0  300E               	movlw	14
 19232  1FC1  0008               	return
 19233  1FC2                     __end_ofi1_do_I2C_RESET:	
 19234                           
 19235                           	psect	text116
 19236  136B                     __ptext116:	
 19237 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 19238 ;; Defined at:
 19239 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 19240 ;; Parameters:    Size  Location     Type
 19241 ;;		None
 19242 ;; Auto vars:     Size  Location     Type
 19243 ;;		None
 19244 ;; Return value:  Size  Location     Type
 19245 ;;                  1    wreg      enum E15307
 19246 ;; Registers used:
 19247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19248 ;; Tracked objects:
 19249 ;;		On entry : 0/0
 19250 ;;		On exit  : 0/0
 19251 ;;		Unchanged: 0/0
 19252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19256 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19257 ;;Total ram usage:        1 bytes
 19258 ;; Hardware stack levels used:    1
 19259 ;; Hardware stack levels required when called:    3
 19260 ;; This function calls:
 19261 ;;		Absolute function
 19262 ;;		i1_do_I2C_SEND_RESTART
 19263 ;;		i1_do_I2C_SEND_STOP
 19264 ;;		i1_i2c_restartWrite
 19265 ;;		i1_mssp1_setIRQ
 19266 ;;		i1_rd1RegCompleteHandler
 19267 ;;		i1_rd2RegCompleteHandler
 19268 ;;		i1_rdBlkRegCompleteHandler
 19269 ;;		i1_returnReset
 19270 ;;		i1_returnStop
 19271 ;;		i1_wr1RegCompleteHandler
 19272 ;;		i1_wr2RegCompleteHandler
 19273 ;; This function is called by:
 19274 ;; This function uses a non-reentrant model
 19275 ;;
 19276                           
 19277                           
 19278                           ;psect for function i1_do_I2C_TX_EMPTY
 19279  136B                     i1_do_I2C_TX_EMPTY:	
 19280  136B                     i1l8247:	
 19281                           ;incstack = 0
 19282 ;; hardware stack exceeded
 19283                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19284                           
 19285                           
 19286                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 19287  136B  0021               	movlb	1	; select bank1
 19288  136C  1520               	bsf	_i2c_status^(0+128),2
 19289                           
 19290                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 19291  136D  2B78               	goto	i1l8265
 19292  136E                     i1l8249:	
 19293                           ;i2c_master.c: 386: {
 19294                           ;i2c_master.c: 387: case i2c_restart_read:
 19295                           
 19296                           
 19297                           ;i2c_master.c: 388: case i2c_restart_write:
 19298                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 19299  136E  319F  2766         	fcall	i1_do_I2C_SEND_RESTART
 19300  1370  0008               	return
 19301  1371                     i1l8253:	
 19302                           ;i2c_master.c: 390: case i2c_continue:
 19303                           
 19304                           
 19305                           ;i2c_master.c: 391: mssp1_setIRQ();
 19306  1371  319F  2738         	fcall	i1_mssp1_setIRQ
 19307                           
 19308                           ;i2c_master.c: 392: return I2C_TX;
 19309  1373  3003               	movlw	3
 19310  1374  0008               	return
 19311  1375                     i1l8259:	
 19312                           ;i2c_master.c: 394: case i2c_stop:
 19313                           
 19314                           ;i2c_master.c: 393: default:
 19315                           
 19316                           
 19317                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 19318  1375  319F  276A         	fcall	i1_do_I2C_SEND_STOP
 19319                           
 19320                           ;i2c_master.c: 396: }
 19321  1377  0008               	return
 19322  1378                     i1l8265:	
 19323  1378  0021               	movlb	1	; select bank1
 19324  1379  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 19325  137A  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 19326  137B  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 19327  137C  0020               	movlb	0	; select bank0
 19328  137D  00A1               	movwf	i1returnStop@p
 19329  137E  300B               	movlw	11
 19330  137F  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 19331  1380  0086               	movwf	6
 19332  1381  0187               	clrf	7
 19333  1382  3F41               	moviw [1]fsr1
 19334  1383  008A               	movwf	10
 19335  1384  3F40               	moviw [0]fsr1
 19336  1385  000A               	callw
 19337  1386  3193               	pagesel	$
 19338                           
 19339                           ; Switch size 1, requested type "space"
 19340                           ; Number of cases is 4, Range of values is 1 to 4
 19341                           ; switch strategies available:
 19342                           ; Name         Instructions Cycles
 19343                           ; simple_byte           13     7 (average)
 19344                           ; direct_byte           17     9 (fixed)
 19345                           ; jumptable            263     9 (fixed)
 19346                           ;	Chosen strategy is simple_byte
 19347  1387  3A01               	xorlw	1	; case 1
 19348  1388  1903               	skipnz
 19349  1389  2B75               	goto	i1l8259
 19350  138A  3A03               	xorlw	3	; case 2
 19351  138B  1903               	skipnz
 19352  138C  2B6E               	goto	i1l8249
 19353  138D  3A01               	xorlw	1	; case 3
 19354  138E  1903               	skipnz
 19355  138F  2B6E               	goto	i1l8249
 19356  1390  3A07               	xorlw	7	; case 4
 19357  1391  1903               	skipnz
 19358  1392  2B71               	goto	i1l8253
 19359  1393  2B75               	goto	i1l8259
 19360  1394  0008               	return
 19361  1395                     __end_ofi1_do_I2C_TX_EMPTY:	
 19362                           
 19363                           	psect	text117
 19364  1F38                     __ptext117:	
 19365 ;; *************** function i1_mssp1_setIRQ *****************
 19366 ;; Defined at:
 19367 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 19368 ;; Parameters:    Size  Location     Type
 19369 ;;		None
 19370 ;; Auto vars:     Size  Location     Type
 19371 ;;		None
 19372 ;; Return value:  Size  Location     Type
 19373 ;;                  1    wreg      void 
 19374 ;; Registers used:
 19375 ;;		None
 19376 ;; Tracked objects:
 19377 ;;		On entry : 0/0
 19378 ;;		On exit  : 0/0
 19379 ;;		Unchanged: 0/0
 19380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19385 ;;Total ram usage:        0 bytes
 19386 ;; Hardware stack levels used:    1
 19387 ;; This function calls:
 19388 ;;		Nothing
 19389 ;; This function is called by:
 19390 ;;		i1_do_I2C_TX_EMPTY
 19391 ;; This function uses a non-reentrant model
 19392 ;;
 19393                           
 19394                           
 19395                           ;psect for function i1_mssp1_setIRQ
 19396  1F38                     i1_mssp1_setIRQ:	
 19397                           
 19398                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 19399                           
 19400                           ;incstack = 0
 19401 ;; hardware stack exceeded
 19402                           ; Regs used in i1_mssp1_setIRQ: []
 19403  1F38  002E               	movlb	14	; select bank14
 19404  1F39  140F               	bsf	15,0	;volatile
 19405  1F3A  0008               	return
 19406  1F3B                     __end_ofi1_mssp1_setIRQ:	
 19407                           
 19408                           	psect	text118
 19409  1FD0                     __ptext118:	
 19410 ;; *************** function i1_i2c1_driver_isNACK *****************
 19411 ;; Defined at:
 19412 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 19413 ;; Parameters:    Size  Location     Type
 19414 ;;		None
 19415 ;; Auto vars:     Size  Location     Type
 19416 ;;		None
 19417 ;; Return value:  Size  Location     Type
 19418 ;;		None               void
 19419 ;; Registers used:
 19420 ;;		wreg, status,2, status,0
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19430 ;;Total ram usage:        1 bytes
 19431 ;; Hardware stack levels used:    1
 19432 ;; This function calls:
 19433 ;;		Nothing
 19434 ;; This function is called by:
 19435 ;;		i1_do_I2C_TX
 19436 ;;		i1_i2c_ISR
 19437 ;; This function uses a non-reentrant model
 19438 ;;
 19439                           
 19440                           
 19441                           ;psect for function i1_i2c1_driver_isNACK
 19442  1FD0                     i1_i2c1_driver_isNACK:	
 19443                           
 19444                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT;
 19445                           
 19446                           ;incstack = 0
 19447                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 19448  1FD0  0023               	movlb	3	; select bank3
 19449  1FD1  0E11               	swapf	17,w	;volatile
 19450  1FD2  0C89               	rrf	9,f
 19451  1FD3  0C89               	rrf	9,f
 19452  1FD4  3901               	andlw	1
 19453  1FD5  00F0               	movwf	??i1_i2c1_driver_isNACK
 19454  1FD6  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 19455  1FD7  0008               	return
 19456  1FD8                     __end_ofi1_i2c1_driver_isNACK:	
 19457                           
 19458                           	psect	text119
 19459  1F86                     __ptext119:	
 19460 ;; *************** function i1_i2c1_driver_TXData *****************
 19461 ;; Defined at:
 19462 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 19463 ;; Parameters:    Size  Location     Type
 19464 ;;  d               1    wreg     unsigned char 
 19465 ;; Auto vars:     Size  Location     Type
 19466 ;;  d               1    0[COMMON] unsigned char 
 19467 ;; Return value:  Size  Location     Type
 19468 ;;                  1    wreg      void 
 19469 ;; Registers used:
 19470 ;;		wreg
 19471 ;; Tracked objects:
 19472 ;;		On entry : 0/0
 19473 ;;		On exit  : 0/0
 19474 ;;		Unchanged: 0/0
 19475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19480 ;;Total ram usage:        1 bytes
 19481 ;; Hardware stack levels used:    1
 19482 ;; This function calls:
 19483 ;;		Nothing
 19484 ;; This function is called by:
 19485 ;;		i1_do_I2C_SEND_ADR_READ
 19486 ;;		i1_do_I2C_SEND_ADR_WRITE
 19487 ;;		i1_do_I2C_TX
 19488 ;; This function uses a non-reentrant model
 19489 ;;
 19490                           
 19491                           
 19492                           ;psect for function i1_i2c1_driver_TXData
 19493  1F86                     i1_i2c1_driver_TXData:	
 19494                           
 19495                           ;incstack = 0
 19496 ;; hardware stack exceeded
 19497                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 19498                           ;i1i2c1_driver_TXData@d stored from wreg
 19499  1F86  00F0               	movwf	i1i2c1_driver_TXData@d
 19500                           
 19501                           ;i2c1_driver.c: 188: SSP1BUF = d;
 19502  1F87  0870               	movf	i1i2c1_driver_TXData@d,w
 19503  1F88  0023               	movlb	3	; select bank3
 19504  1F89  008C               	movwf	12	;volatile
 19505  1F8A  0008               	return
 19506  1F8B                     __end_ofi1_i2c1_driver_TXData:	
 19507                           
 19508                           	psect	text120
 19509  1F35                     __ptext120:	
 19510 ;; *************** function i1_i2c1_driver_getRXData *****************
 19511 ;; Defined at:
 19512 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 19513 ;; Parameters:    Size  Location     Type
 19514 ;;		None
 19515 ;; Auto vars:     Size  Location     Type
 19516 ;;		None
 19517 ;; Return value:  Size  Location     Type
 19518 ;;                  1    wreg      unsigned char 
 19519 ;; Registers used:
 19520 ;;		wreg
 19521 ;; Tracked objects:
 19522 ;;		On entry : 0/0
 19523 ;;		On exit  : 0/0
 19524 ;;		Unchanged: 0/0
 19525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19530 ;;Total ram usage:        0 bytes
 19531 ;; Hardware stack levels used:    1
 19532 ;; This function calls:
 19533 ;;		Nothing
 19534 ;; This function is called by:
 19535 ;;		i1_do_I2C_RX
 19536 ;; This function uses a non-reentrant model
 19537 ;;
 19538                           
 19539                           
 19540                           ;psect for function i1_i2c1_driver_getRXData
 19541  1F35                     i1_i2c1_driver_getRXData:	
 19542                           
 19543                           ;i2c1_driver.c: 173: return SSP1BUF;
 19544                           
 19545                           ;incstack = 0
 19546 ;; hardware stack exceeded
 19547                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 19548  1F35  0023               	movlb	3	; select bank3
 19549  1F36  080C               	movf	12,w	;volatile
 19550  1F37  0008               	return
 19551  1F38                     __end_ofi1_i2c1_driver_getRXData:	
 19552                           
 19553                           	psect	text121
 19554  1F5A                     __ptext121:	
 19555 ;; *************** function i1_i2c1_driver_sendNACK *****************
 19556 ;; Defined at:
 19557 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 19558 ;; Parameters:    Size  Location     Type
 19559 ;;		None
 19560 ;; Auto vars:     Size  Location     Type
 19561 ;;		None
 19562 ;; Return value:  Size  Location     Type
 19563 ;;                  1    wreg      void 
 19564 ;; Registers used:
 19565 ;;		None
 19566 ;; Tracked objects:
 19567 ;;		On entry : 0/0
 19568 ;;		On exit  : 0/0
 19569 ;;		Unchanged: 0/0
 19570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19575 ;;Total ram usage:        0 bytes
 19576 ;; Hardware stack levels used:    1
 19577 ;; This function calls:
 19578 ;;		Nothing
 19579 ;; This function is called by:
 19580 ;;		i1_do_I2C_DO_NACK_STOP
 19581 ;;		i1_do_I2C_DO_NACK_RESTART
 19582 ;; This function uses a non-reentrant model
 19583 ;;
 19584                           
 19585                           
 19586                           ;psect for function i1_i2c1_driver_sendNACK
 19587  1F5A                     i1_i2c1_driver_sendNACK:	
 19588                           
 19589                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 19590                           
 19591                           ;incstack = 0
 19592 ;; hardware stack exceeded
 19593                           ; Regs used in i1_i2c1_driver_sendNACK: []
 19594  1F5A  0023               	movlb	3	; select bank3
 19595  1F5B  1691               	bsf	17,5	;volatile
 19596                           
 19597                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 19598  1F5C  1611               	bsf	17,4	;volatile
 19599  1F5D  0008               	return
 19600  1F5E                     __end_ofi1_i2c1_driver_sendNACK:	
 19601                           
 19602                           	psect	text122
 19603  1F20                     __ptext122:	
 19604 ;; *************** function i1_i2c1_driver_resetBus *****************
 19605 ;; Defined at:
 19606 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;		None
 19609 ;; Auto vars:     Size  Location     Type
 19610 ;;		None
 19611 ;; Return value:  Size  Location     Type
 19612 ;;                  1    wreg      void 
 19613 ;; Registers used:
 19614 ;;		None
 19615 ;; Tracked objects:
 19616 ;;		On entry : 0/0
 19617 ;;		On exit  : 0/0
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19624 ;;Total ram usage:        0 bytes
 19625 ;; Hardware stack levels used:    1
 19626 ;; This function calls:
 19627 ;;		Nothing
 19628 ;; This function is called by:
 19629 ;;		i1_do_I2C_RESET
 19630 ;; This function uses a non-reentrant model
 19631 ;;
 19632                           
 19633                           
 19634                           ;psect for function i1_i2c1_driver_resetBus
 19635  1F20                     i1_i2c1_driver_resetBus:	
 19636                           
 19637                           ;incstack = 0
 19638 ;; hardware stack exceeded
 19639                           ; Regs used in i1_i2c1_driver_resetBus: []
 19640  1F20  0008               	return
 19641  1F21                     __end_ofi1_i2c1_driver_resetBus:	
 19642                           
 19643                           	psect	text123
 19644  1F32                     __ptext123:	
 19645 ;; *************** function i1_i2c1_driver_startRX *****************
 19646 ;; Defined at:
 19647 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 19648 ;; Parameters:    Size  Location     Type
 19649 ;;		None
 19650 ;; Auto vars:     Size  Location     Type
 19651 ;;		None
 19652 ;; Return value:  Size  Location     Type
 19653 ;;                  1    wreg      void 
 19654 ;; Registers used:
 19655 ;;		None
 19656 ;; Tracked objects:
 19657 ;;		On entry : 0/0
 19658 ;;		On exit  : 0/0
 19659 ;;		Unchanged: 0/0
 19660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19665 ;;Total ram usage:        0 bytes
 19666 ;; Hardware stack levels used:    1
 19667 ;; This function calls:
 19668 ;;		Nothing
 19669 ;; This function is called by:
 19670 ;;		i1_do_I2C_RCEN
 19671 ;; This function uses a non-reentrant model
 19672 ;;
 19673                           
 19674                           
 19675                           ;psect for function i1_i2c1_driver_startRX
 19676  1F32                     i1_i2c1_driver_startRX:	
 19677                           
 19678                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 19679                           
 19680                           ;incstack = 0
 19681 ;; hardware stack exceeded
 19682                           ; Regs used in i1_i2c1_driver_startRX: []
 19683  1F32  0023               	movlb	3	; select bank3
 19684  1F33  1591               	bsf	17,3	;volatile
 19685  1F34  0008               	return
 19686  1F35                     __end_ofi1_i2c1_driver_startRX:	
 19687                           
 19688                           	psect	text124
 19689  1219                     __ptext124:	
 19690 ;; *************** function i1_rdBlkRegCompleteHandler *****************
 19691 ;; Defined at:
 19692 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19693 ;; Parameters:    Size  Location     Type
 19694 ;;  p               1    1[BANK0 ] PTR void 
 19695 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19696 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19697 ;; Auto vars:     Size  Location     Type
 19698 ;;		None
 19699 ;; Return value:  Size  Location     Type
 19700 ;;                  1    wreg      enum E97
 19701 ;; Registers used:
 19702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19708 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19711 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19712 ;;Total ram usage:        1 bytes
 19713 ;; Hardware stack levels used:    1
 19714 ;; Hardware stack levels required when called:    2
 19715 ;; This function calls:
 19716 ;;		i1_i2c_setBuffer
 19717 ;;		i1_i2c_setDataCompleteCallback
 19718 ;; This function is called by:
 19719 ;; This function uses a non-reentrant model
 19720 ;;
 19721                           
 19722                           
 19723                           ;psect for function i1_rdBlkRegCompleteHandler
 19724  1219                     i1_rdBlkRegCompleteHandler:	
 19725  1219                     i1l6023:	
 19726                           ;incstack = 0
 19727 ;; hardware stack exceeded
 19728                           ; Regs used in i1_rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19729                           
 19730                           
 19731                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 19732  1219  0020               	movlb	0	; select bank0
 19733  121A  0821               	movf	i1rdBlkRegCompleteHandler@p,w
 19734  121B  0086               	movwf	6
 19735  121C  0187               	clrf	7
 19736  121D  3F40               	moviw [0]fsr1
 19737  121E  00F0               	movwf	i1i2c_setBuffer@bufferSize
 19738  121F  3F41               	moviw [1]fsr1
 19739  1220  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 19740  1221  0821               	movf	i1rdBlkRegCompleteHandler@p,w
 19741  1222  3E02               	addlw	2
 19742  1223  0086               	movwf	6
 19743  1224  0187               	clrf	7
 19744  1225  0801               	movf	1,w
 19745  1226  3191  2100  3192   	fcall	i1_i2c_setBuffer
 19746                           
 19747                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 19748  1229  3000               	movlw	0
 19749  122A  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 19750  122B  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 19751  122C  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 19752  122D  3190  20D9         	fcall	i1_i2c_setDataCompleteCallback
 19753                           
 19754                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 19755  122F  3002               	movlw	2
 19756  1230  0008               	return
 19757  1231                     __end_ofi1_rdBlkRegCompleteHandler:	
 19758                           
 19759                           	psect	text125
 19760  115F                     __ptext125:	
 19761 ;; *************** function i1_rd2RegCompleteHandler *****************
 19762 ;; Defined at:
 19763 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19764 ;; Parameters:    Size  Location     Type
 19765 ;;  p               1    1[BANK0 ] PTR void 
 19766 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19767 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19768 ;; Auto vars:     Size  Location     Type
 19769 ;;		None
 19770 ;; Return value:  Size  Location     Type
 19771 ;;                  1    wreg      enum E97
 19772 ;; Registers used:
 19773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19774 ;; Tracked objects:
 19775 ;;		On entry : 0/0
 19776 ;;		On exit  : 0/0
 19777 ;;		Unchanged: 0/0
 19778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19779 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19782 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19783 ;;Total ram usage:        1 bytes
 19784 ;; Hardware stack levels used:    1
 19785 ;; Hardware stack levels required when called:    2
 19786 ;; This function calls:
 19787 ;;		i1_i2c_setBuffer
 19788 ;;		i1_i2c_setDataCompleteCallback
 19789 ;; This function is called by:
 19790 ;; This function uses a non-reentrant model
 19791 ;;
 19792                           
 19793                           
 19794                           ;psect for function i1_rd2RegCompleteHandler
 19795  115F                     i1_rd2RegCompleteHandler:	
 19796  115F                     i1l6007:	
 19797                           ;incstack = 0
 19798 ;; hardware stack exceeded
 19799                           ; Regs used in i1_rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 19800                           
 19801                           
 19802                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 19803  115F  3002               	movlw	2
 19804  1160  00F0               	movwf	i1i2c_setBuffer@bufferSize
 19805  1161  3000               	movlw	0
 19806  1162  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 19807  1163  0020               	movlb	0	; select bank0
 19808  1164  0821               	movf	i1rd2RegCompleteHandler@p,w
 19809  1165  3191  2100  3191   	fcall	i1_i2c_setBuffer
 19810                           
 19811                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 19812  1168  3000               	movlw	0
 19813  1169  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 19814  116A  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 19815  116B  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 19816  116C  3190  20D9         	fcall	i1_i2c_setDataCompleteCallback
 19817                           
 19818                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 19819  116E  3002               	movlw	2
 19820  116F  0008               	return
 19821  1170                     __end_ofi1_rd2RegCompleteHandler:	
 19822                           
 19823                           	psect	text126
 19824  114E                     __ptext126:	
 19825 ;; *************** function i1_rd1RegCompleteHandler *****************
 19826 ;; Defined at:
 19827 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19828 ;; Parameters:    Size  Location     Type
 19829 ;;  p               1    1[BANK0 ] PTR void 
 19830 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19831 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19832 ;; Auto vars:     Size  Location     Type
 19833 ;;		None
 19834 ;; Return value:  Size  Location     Type
 19835 ;;                  1    wreg      enum E97
 19836 ;; Registers used:
 19837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19838 ;; Tracked objects:
 19839 ;;		On entry : 0/0
 19840 ;;		On exit  : 0/0
 19841 ;;		Unchanged: 0/0
 19842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19843 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19846 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19847 ;;Total ram usage:        1 bytes
 19848 ;; Hardware stack levels used:    1
 19849 ;; Hardware stack levels required when called:    2
 19850 ;; This function calls:
 19851 ;;		i1_i2c_setBuffer
 19852 ;;		i1_i2c_setDataCompleteCallback
 19853 ;; This function is called by:
 19854 ;; This function uses a non-reentrant model
 19855 ;;
 19856                           
 19857                           
 19858                           ;psect for function i1_rd1RegCompleteHandler
 19859  114E                     i1_rd1RegCompleteHandler:	
 19860  114E                     i1l5999:	
 19861                           ;incstack = 0
 19862 ;; hardware stack exceeded
 19863                           ; Regs used in i1_rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 19864                           
 19865                           
 19866                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 19867  114E  3001               	movlw	1
 19868  114F  00F0               	movwf	i1i2c_setBuffer@bufferSize
 19869  1150  3000               	movlw	0
 19870  1151  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 19871  1152  0020               	movlb	0	; select bank0
 19872  1153  0821               	movf	i1rd1RegCompleteHandler@p,w
 19873  1154  3191  2100  3191   	fcall	i1_i2c_setBuffer
 19874                           
 19875                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 19876  1157  3000               	movlw	0
 19877  1158  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 19878  1159  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 19879  115A  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 19880  115B  3190  20D9         	fcall	i1_i2c_setDataCompleteCallback
 19881                           
 19882                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 19883  115D  3002               	movlw	2
 19884  115E  0008               	return
 19885  115F                     __end_ofi1_rd1RegCompleteHandler:	
 19886                           
 19887                           	psect	text127
 19888  113D                     __ptext127:	
 19889 ;; *************** function i1_wr1RegCompleteHandler *****************
 19890 ;; Defined at:
 19891 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19892 ;; Parameters:    Size  Location     Type
 19893 ;;  p               1    1[BANK0 ] PTR void 
 19894 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19895 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19896 ;; Auto vars:     Size  Location     Type
 19897 ;;		None
 19898 ;; Return value:  Size  Location     Type
 19899 ;;                  1    wreg      enum E97
 19900 ;; Registers used:
 19901 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19902 ;; Tracked objects:
 19903 ;;		On entry : 0/0
 19904 ;;		On exit  : 0/0
 19905 ;;		Unchanged: 0/0
 19906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19907 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19910 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19911 ;;Total ram usage:        1 bytes
 19912 ;; Hardware stack levels used:    1
 19913 ;; Hardware stack levels required when called:    2
 19914 ;; This function calls:
 19915 ;;		i1_i2c_setBuffer
 19916 ;;		i1_i2c_setDataCompleteCallback
 19917 ;; This function is called by:
 19918 ;; This function uses a non-reentrant model
 19919 ;;
 19920                           
 19921                           
 19922                           ;psect for function i1_wr1RegCompleteHandler
 19923  113D                     i1_wr1RegCompleteHandler:	
 19924  113D                     i1l5991:	
 19925                           ;incstack = 0
 19926 ;; hardware stack exceeded
 19927                           ; Regs used in i1_wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 19928                           
 19929                           
 19930                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 19931  113D  3001               	movlw	1
 19932  113E  00F0               	movwf	i1i2c_setBuffer@bufferSize
 19933  113F  3000               	movlw	0
 19934  1140  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 19935  1141  0020               	movlb	0	; select bank0
 19936  1142  0821               	movf	i1wr1RegCompleteHandler@p,w
 19937  1143  3191  2100  3191   	fcall	i1_i2c_setBuffer
 19938                           
 19939                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 19940  1146  3000               	movlw	0
 19941  1147  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 19942  1148  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 19943  1149  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 19944  114A  3190  20D9         	fcall	i1_i2c_setDataCompleteCallback
 19945                           
 19946                           ;i2c_simple_master.c: 35: return i2c_continue;
 19947  114C  3004               	movlw	4
 19948  114D  0008               	return
 19949  114E                     __end_ofi1_wr1RegCompleteHandler:	
 19950                           
 19951                           	psect	text128
 19952  0002                     __ptext128:	
 19953 ;; *************** function i1_i2c_restartWrite *****************
 19954 ;; Defined at:
 19955 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 19956 ;; Parameters:    Size  Location     Type
 19957 ;;  p               1    1[BANK0 ] PTR void 
 19958 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19959 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19960 ;; Auto vars:     Size  Location     Type
 19961 ;;		None
 19962 ;; Return value:  Size  Location     Type
 19963 ;;                  1    wreg      enum E96
 19964 ;; Registers used:
 19965 ;;		wreg
 19966 ;; Tracked objects:
 19967 ;;		On entry : 0/0
 19968 ;;		On exit  : 0/0
 19969 ;;		Unchanged: 0/0
 19970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19971 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19974 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19975 ;;Total ram usage:        1 bytes
 19976 ;; Hardware stack levels used:    1
 19977 ;; This function calls:
 19978 ;;		Nothing
 19979 ;; This function is called by:
 19980 ;; This function uses a non-reentrant model
 19981 ;;
 19982                           
 19983                           
 19984                           ;psect for function i1_i2c_restartWrite
 19985  0002                     i1_i2c_restartWrite:	
 19986  0002                     i1l5987:	
 19987                           ;incstack = 0
 19988 ;; hardware stack exceeded
 19989                           ; Regs used in i1_i2c_restartWrite: [wreg]
 19990                           
 19991                           
 19992                           ;i2c_types.c: 37: return i2c_restart_write;
 19993  0002  3003               	movlw	3
 19994  0003  0008               	return
 19995  0004                     __end_ofi1_i2c_restartWrite:	
 19996                           
 19997                           	psect	text129
 19998  1F24                     __ptext129:	
 19999 ;; *************** function i1_returnReset *****************
 20000 ;; Defined at:
 20001 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 20002 ;; Parameters:    Size  Location     Type
 20003 ;;  p               1    1[BANK0 ] PTR void 
 20004 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20005 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20006 ;; Auto vars:     Size  Location     Type
 20007 ;;		None
 20008 ;; Return value:  Size  Location     Type
 20009 ;;                  1    wreg      enum E15143
 20010 ;; Registers used:
 20011 ;;		wreg
 20012 ;; Tracked objects:
 20013 ;;		On entry : 0/0
 20014 ;;		On exit  : 0/0
 20015 ;;		Unchanged: 0/0
 20016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20017 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20020 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20021 ;;Total ram usage:        1 bytes
 20022 ;; Hardware stack levels used:    1
 20023 ;; This function calls:
 20024 ;;		Nothing
 20025 ;; This function is called by:
 20026 ;; This function uses a non-reentrant model
 20027 ;;
 20028                           
 20029                           
 20030                           ;psect for function i1_returnReset
 20031  1F24                     i1_returnReset:	
 20032  1F24                     i1l5983:	
 20033                           ;incstack = 0
 20034 ;; hardware stack exceeded
 20035                           ; Regs used in i1_returnReset: [wreg]
 20036                           
 20037                           
 20038                           ;i2c_master.c: 450: return i2c_reset_link;
 20039  1F24  3005               	movlw	5
 20040  1F25  0008               	return
 20041  1F26                     __end_ofi1_returnReset:	
 20042                           
 20043                           	psect	text130
 20044  1F22                     __ptext130:	
 20045 ;; *************** function i1_returnStop *****************
 20046 ;; Defined at:
 20047 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 20048 ;; Parameters:    Size  Location     Type
 20049 ;;  p               1    1[BANK0 ] PTR void 
 20050 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20051 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20052 ;; Auto vars:     Size  Location     Type
 20053 ;;		None
 20054 ;; Return value:  Size  Location     Type
 20055 ;;                  1    wreg      enum E15143
 20056 ;; Registers used:
 20057 ;;		wreg
 20058 ;; Tracked objects:
 20059 ;;		On entry : 0/0
 20060 ;;		On exit  : 0/0
 20061 ;;		Unchanged: 0/0
 20062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20063 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20066 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20067 ;;Total ram usage:        1 bytes
 20068 ;; Hardware stack levels used:    1
 20069 ;; This function calls:
 20070 ;;		Nothing
 20071 ;; This function is called by:
 20072 ;;		i1_setCallBack
 20073 ;;		_do_I2C_DO_ADDRESS_NACK
 20074 ;;		_do_I2C_TX
 20075 ;;		_do_I2C_RX
 20076 ;;		_do_I2C_TX_EMPTY
 20077 ;;		i1_do_I2C_DO_ADDRESS_NACK
 20078 ;;		i1_do_I2C_TX
 20079 ;;		i1_do_I2C_RX
 20080 ;;		i1_do_I2C_TX_EMPTY
 20081 ;; This function uses a non-reentrant model
 20082 ;;
 20083                           
 20084                           
 20085                           ;psect for function i1_returnStop
 20086  1F22                     i1_returnStop:	
 20087  1F22                     i1l5979:	
 20088                           ;incstack = 0
 20089 ;; hardware stack exceeded
 20090                           ; Regs used in i1_returnStop: [wreg]
 20091                           
 20092                           
 20093                           ;i2c_master.c: 445: return i2c_stop;
 20094  1F22  3001               	movlw	1
 20095  1F23  0008               	return
 20096  1F24                     __end_ofi1_returnStop:	
 20097                           
 20098                           	psect	text131
 20099  112C                     __ptext131:	
 20100 ;; *************** function i1_wr2RegCompleteHandler *****************
 20101 ;; Defined at:
 20102 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20103 ;; Parameters:    Size  Location     Type
 20104 ;;  p               1    1[BANK0 ] PTR void 
 20105 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20106 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20107 ;; Auto vars:     Size  Location     Type
 20108 ;;		None
 20109 ;; Return value:  Size  Location     Type
 20110 ;;                  1    wreg      enum E97
 20111 ;; Registers used:
 20112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20113 ;; Tracked objects:
 20114 ;;		On entry : 0/0
 20115 ;;		On exit  : 0/0
 20116 ;;		Unchanged: 0/0
 20117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20118 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20121 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20122 ;;Total ram usage:        1 bytes
 20123 ;; Hardware stack levels used:    1
 20124 ;; Hardware stack levels required when called:    2
 20125 ;; This function calls:
 20126 ;;		i1_i2c_setBuffer
 20127 ;;		i1_i2c_setDataCompleteCallback
 20128 ;; This function is called by:
 20129 ;; This function uses a non-reentrant model
 20130 ;;
 20131                           
 20132                           
 20133                           ;psect for function i1_wr2RegCompleteHandler
 20134  112C                     i1_wr2RegCompleteHandler:	
 20135  112C                     i1l6015:	
 20136                           ;incstack = 0
 20137 ;; hardware stack exceeded
 20138                           ; Regs used in i1_wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20139                           
 20140                           
 20141                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 20142  112C  3002               	movlw	2
 20143  112D  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20144  112E  3000               	movlw	0
 20145  112F  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 20146  1130  0020               	movlb	0	; select bank0
 20147  1131  0821               	movf	i1wr2RegCompleteHandler@p,w
 20148  1132  3191  2100  3191   	fcall	i1_i2c_setBuffer
 20149                           
 20150                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 20151  1135  3000               	movlw	0
 20152  1136  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 20153  1137  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 20154  1138  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 20155  1139  3190  20D9         	fcall	i1_i2c_setDataCompleteCallback
 20156                           
 20157                           ;i2c_simple_master.c: 114: return i2c_continue;
 20158  113B  3004               	movlw	4
 20159  113C  0008               	return
 20160  113D                     __end_ofi1_wr2RegCompleteHandler:	
 20161                           
 20162                           	psect	text132
 20163  10D9                     __ptext132:	
 20164 ;; *************** function i1_i2c_setDataCompleteCallback *****************
 20165 ;; Defined at:
 20166 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 20167 ;; Parameters:    Size  Location     Type
 20168 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 20169 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 20170 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 20171 ;;  p               1    7[COMMON] PTR void 
 20172 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20173 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20174 ;; Auto vars:     Size  Location     Type
 20175 ;;		None
 20176 ;; Return value:  Size  Location     Type
 20177 ;;                  1    wreg      void 
 20178 ;; Registers used:
 20179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20180 ;; Tracked objects:
 20181 ;;		On entry : 0/0
 20182 ;;		On exit  : 0/0
 20183 ;;		Unchanged: 0/0
 20184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20185 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20187 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20188 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20189 ;;Total ram usage:        4 bytes
 20190 ;; Hardware stack levels used:    1
 20191 ;; Hardware stack levels required when called:    1
 20192 ;; This function calls:
 20193 ;;		i1_setCallBack
 20194 ;; This function is called by:
 20195 ;;		i1_wr1RegCompleteHandler
 20196 ;;		i1_rd1RegCompleteHandler
 20197 ;;		i1_rd2RegCompleteHandler
 20198 ;;		i1_wr2RegCompleteHandler
 20199 ;;		i1_rdBlkRegCompleteHandler
 20200 ;; This function uses a non-reentrant model
 20201 ;;
 20202                           
 20203                           
 20204                           ;psect for function i1_i2c_setDataCompleteCallback
 20205  10D9                     i1_i2c_setDataCompleteCallback:	
 20206                           
 20207                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 20208                           
 20209                           ;incstack = 0
 20210 ;; hardware stack exceeded
 20211                           ; Regs used in i1_i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 20212  10D9  0876               	movf	i1i2c_setDataCompleteCallback@cb+1,w
 20213  10DA  00F1               	movwf	i1setCallBack@cb+1
 20214  10DB  0875               	movf	i1i2c_setDataCompleteCallback@cb,w
 20215  10DC  00F0               	movwf	i1setCallBack@cb
 20216  10DD  0877               	movf	i1i2c_setDataCompleteCallback@p,w
 20217  10DE  0020               	movlb	0	; select bank0
 20218  10DF  00A0               	movwf	??i1_i2c_setDataCompleteCallback
 20219  10E0  0820               	movf	??i1_i2c_setDataCompleteCallback,w
 20220  10E1  00F2               	movwf	i1setCallBack@p
 20221  10E2  3000               	movlw	0
 20222  10E3  3192  22FE         	fcall	i1_setCallBack
 20223  10E5  0008               	return
 20224  10E6                     __end_ofi1_i2c_setDataCompleteCallback:	
 20225                           
 20226                           	psect	text133
 20227  12FE                     __ptext133:	
 20228 ;; *************** function i1_setCallBack *****************
 20229 ;; Defined at:
 20230 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 20231 ;; Parameters:    Size  Location     Type
 20232 ;;  idx             1    wreg     enum E15325
 20233 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 20234 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 20235 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 20236 ;;  p               1    2[COMMON] PTR void 
 20237 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20238 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20239 ;; Auto vars:     Size  Location     Type
 20240 ;;  idx             1    4[COMMON] enum E15325
 20241 ;; Return value:  Size  Location     Type
 20242 ;;                  1    wreg      void 
 20243 ;; Registers used:
 20244 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20245 ;; Tracked objects:
 20246 ;;		On entry : 0/0
 20247 ;;		On exit  : 0/0
 20248 ;;		Unchanged: 0/0
 20249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20250 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20253 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20254 ;;Total ram usage:        5 bytes
 20255 ;; Hardware stack levels used:    1
 20256 ;; This function calls:
 20257 ;;		Nothing
 20258 ;; This function is called by:
 20259 ;;		i1_i2c_setDataCompleteCallback
 20260 ;; This function uses a non-reentrant model
 20261 ;;
 20262                           
 20263                           
 20264                           ;psect for function i1_setCallBack
 20265  12FE                     i1_setCallBack:	
 20266                           
 20267                           ;incstack = 0
 20268 ;; hardware stack exceeded
 20269                           ; Regs used in i1_setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 20270                           ;i1setCallBack@idx stored from wreg
 20271  12FE  00F4               	movwf	i1setCallBack@idx
 20272                           
 20273                           ;i2c_master.c: 455: if(cb)
 20274  12FF  0870               	movf	i1setCallBack@cb,w
 20275  1300  0471               	iorwf	i1setCallBack@cb+1,w
 20276  1301  1903               	btfsc	3,2
 20277  1302  2B14               	goto	i1l5783
 20278                           
 20279                           ;i2c_master.c: 456: {
 20280                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 20281  1303  3574               	lslf	i1setCallBack@idx,w
 20282  1304  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 20283  1305  0086               	movwf	6
 20284  1306  0187               	clrf	7
 20285  1307  0870               	movf	i1setCallBack@cb,w
 20286  1308  3FC0               	movwi [0]fsr1
 20287  1309  0871               	movf	i1setCallBack@cb+1,w
 20288  130A  3FC1               	movwi [1]fsr1
 20289                           
 20290                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 20291  130B  0872               	movf	i1setCallBack@p,w
 20292  130C  00F3               	movwf	??i1_setCallBack
 20293  130D  0874               	movf	i1setCallBack@idx,w
 20294  130E  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 20295  130F  0086               	movwf	6
 20296  1310  0187               	clrf	7
 20297  1311  0873               	movf	??i1_setCallBack,w
 20298  1312  0081               	movwf	1
 20299                           
 20300                           ;i2c_master.c: 459: }
 20301  1313  0008               	return
 20302  1314                     i1l5783:	
 20303                           
 20304                           ;i2c_master.c: 460: else
 20305                           ;i2c_master.c: 461: {
 20306                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 20307  1314  3574               	lslf	i1setCallBack@idx,w
 20308  1315  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 20309  1316  0086               	movwf	6
 20310  1317  0187               	clrf	7
 20311  1318  3097               	movlw	low _returnStop
 20312  1319  3FC0               	movwi [0]fsr1
 20313  131A  301F               	movlw	high _returnStop
 20314  131B  3FC1               	movwi [1]fsr1
 20315                           
 20316                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 20317  131C  0874               	movf	i1setCallBack@idx,w
 20318  131D  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 20319  131E  0086               	movwf	6
 20320  131F  0187               	clrf	7
 20321  1320  0181               	clrf	1
 20322  1321  0008               	return
 20323  1322                     __end_ofi1_setCallBack:	
 20324                           
 20325                           	psect	text134
 20326  1100                     __ptext134:	
 20327 ;; *************** function i1_i2c_setBuffer *****************
 20328 ;; Defined at:
 20329 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 20330 ;; Parameters:    Size  Location     Type
 20331 ;;  buffer          1    wreg     PTR void 
 20332 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 20333 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 20334 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20335 ;;  bufferSize      2    0[COMMON] unsigned int 
 20336 ;; Auto vars:     Size  Location     Type
 20337 ;;  buffer          1    3[COMMON] PTR void 
 20338 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 20339 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 20340 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20341 ;; Return value:  Size  Location     Type
 20342 ;;                  1    wreg      void 
 20343 ;; Registers used:
 20344 ;;		wreg
 20345 ;; Tracked objects:
 20346 ;;		On entry : 0/0
 20347 ;;		On exit  : 0/0
 20348 ;;		Unchanged: 0/0
 20349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20353 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20354 ;;Total ram usage:        4 bytes
 20355 ;; Hardware stack levels used:    1
 20356 ;; This function calls:
 20357 ;;		Nothing
 20358 ;; This function is called by:
 20359 ;;		i1_wr1RegCompleteHandler
 20360 ;;		i1_rd1RegCompleteHandler
 20361 ;;		i1_rd2RegCompleteHandler
 20362 ;;		i1_wr2RegCompleteHandler
 20363 ;;		i1_rdBlkRegCompleteHandler
 20364 ;; This function uses a non-reentrant model
 20365 ;;
 20366                           
 20367                           
 20368                           ;psect for function i1_i2c_setBuffer
 20369  1100                     i1_i2c_setBuffer:	
 20370                           
 20371                           ;incstack = 0
 20372 ;; hardware stack exceeded
 20373                           ; Regs used in i1_i2c_setBuffer: [wreg]
 20374                           ;i1i2c_setBuffer@buffer stored from wreg
 20375  1100  00F3               	movwf	i1i2c_setBuffer@buffer
 20376                           
 20377                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 20378  1101  0021               	movlb	1	; select bank1
 20379  1102  1D20               	btfss	_i2c_status^(0+128),2
 20380  1103  0008               	return
 20381                           
 20382                           ;i2c_master.c: 187: {
 20383                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 20384  1104  0873               	movf	i1i2c_setBuffer@buffer,w
 20385  1105  00F2               	movwf	??i1_i2c_setBuffer
 20386  1106  0872               	movf	??i1_i2c_setBuffer,w
 20387  1107  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 20388                           
 20389                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 20390  1108  0871               	movf	i1i2c_setBuffer@bufferSize+1,w
 20391  1109  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 20392  110A  0870               	movf	i1i2c_setBuffer@bufferSize,w
 20393  110B  00A3               	movwf	(_i2c_status^(0+128)+3)
 20394                           
 20395                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 20396  110C  1120               	bcf	_i2c_status^(0+128),2
 20397  110D  0008               	return
 20398  110E                     __end_ofi1_i2c_setBuffer:	
 20399                           
 20400                           	psect	text135
 20401  1F2F                     __ptext135:	
 20402 ;; *************** function i1_i2c1_driver_stop *****************
 20403 ;; Defined at:
 20404 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 20405 ;; Parameters:    Size  Location     Type
 20406 ;;		None
 20407 ;; Auto vars:     Size  Location     Type
 20408 ;;		None
 20409 ;; Return value:  Size  Location     Type
 20410 ;;                  1    wreg      void 
 20411 ;; Registers used:
 20412 ;;		None
 20413 ;; Tracked objects:
 20414 ;;		On entry : 0/0
 20415 ;;		On exit  : 0/0
 20416 ;;		Unchanged: 0/0
 20417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20422 ;;Total ram usage:        0 bytes
 20423 ;; Hardware stack levels used:    1
 20424 ;; This function calls:
 20425 ;;		Nothing
 20426 ;; This function is called by:
 20427 ;;		i1_do_I2C_SEND_STOP
 20428 ;; This function uses a non-reentrant model
 20429 ;;
 20430                           
 20431                           
 20432                           ;psect for function i1_i2c1_driver_stop
 20433  1F2F                     i1_i2c1_driver_stop:	
 20434                           
 20435                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 20436                           
 20437                           ;incstack = 0
 20438 ;; hardware stack exceeded
 20439                           ; Regs used in i1_i2c1_driver_stop: []
 20440  1F2F  0023               	movlb	3	; select bank3
 20441  1F30  1511               	bsf	17,2	;volatile
 20442  1F31  0008               	return
 20443  1F32                     __end_ofi1_i2c1_driver_stop:	
 20444                           
 20445                           	psect	text136
 20446  1F2C                     __ptext136:	
 20447 ;; *************** function i1_i2c1_driver_restart *****************
 20448 ;; Defined at:
 20449 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 20450 ;; Parameters:    Size  Location     Type
 20451 ;;		None
 20452 ;; Auto vars:     Size  Location     Type
 20453 ;;		None
 20454 ;; Return value:  Size  Location     Type
 20455 ;;                  1    wreg      void 
 20456 ;; Registers used:
 20457 ;;		None
 20458 ;; Tracked objects:
 20459 ;;		On entry : 0/0
 20460 ;;		On exit  : 0/0
 20461 ;;		Unchanged: 0/0
 20462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20467 ;;Total ram usage:        0 bytes
 20468 ;; Hardware stack levels used:    1
 20469 ;; This function calls:
 20470 ;;		Nothing
 20471 ;; This function is called by:
 20472 ;;		i1_do_I2C_SEND_RESTART_READ
 20473 ;;		i1_do_I2C_SEND_RESTART_WRITE
 20474 ;;		i1_do_I2C_SEND_RESTART
 20475 ;; This function uses a non-reentrant model
 20476 ;;
 20477                           
 20478                           
 20479                           ;psect for function i1_i2c1_driver_restart
 20480  1F2C                     i1_i2c1_driver_restart:	
 20481                           
 20482                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 20483                           
 20484                           ;incstack = 0
 20485 ;; hardware stack exceeded
 20486                           ; Regs used in i1_i2c1_driver_restart: []
 20487  1F2C  0023               	movlb	3	; select bank3
 20488  1F2D  1491               	bsf	17,1	;volatile
 20489  1F2E  0008               	return
 20490  1F2F                     __end_ofi1_i2c1_driver_restart:	
 20491                           
 20492                           	psect	text137
 20493  1F56                     __ptext137:	
 20494 ;; *************** function i1_i2c1_driver_sendACK *****************
 20495 ;; Defined at:
 20496 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 20497 ;; Parameters:    Size  Location     Type
 20498 ;;		None
 20499 ;; Auto vars:     Size  Location     Type
 20500 ;;		None
 20501 ;; Return value:  Size  Location     Type
 20502 ;;                  1    wreg      void 
 20503 ;; Registers used:
 20504 ;;		None
 20505 ;; Tracked objects:
 20506 ;;		On entry : 0/0
 20507 ;;		On exit  : 0/0
 20508 ;;		Unchanged: 0/0
 20509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20514 ;;Total ram usage:        0 bytes
 20515 ;; Hardware stack levels used:    1
 20516 ;; This function calls:
 20517 ;;		Nothing
 20518 ;; This function is called by:
 20519 ;;		i1_do_I2C_DO_ACK
 20520 ;;		i1_do_I2C_RX
 20521 ;; This function uses a non-reentrant model
 20522 ;;
 20523                           
 20524                           
 20525                           ;psect for function i1_i2c1_driver_sendACK
 20526  1F56                     i1_i2c1_driver_sendACK:	
 20527                           
 20528                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 20529                           
 20530                           ;incstack = 0
 20531 ;; hardware stack exceeded
 20532                           ; Regs used in i1_i2c1_driver_sendACK: []
 20533  1F56  0023               	movlb	3	; select bank3
 20534  1F57  1291               	bcf	17,5	;volatile
 20535                           
 20536                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 20537  1F58  1611               	bsf	17,4	;volatile
 20538  1F59  0008               	return
 20539  1F5A                     __end_ofi1_i2c1_driver_sendACK:	
 20540                           
 20541                           	psect	text138
 20542  1F29                     __ptext138:	
 20543 ;; *************** function _i2c_busCollisionISR *****************
 20544 ;; Defined at:
 20545 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 20546 ;; Parameters:    Size  Location     Type
 20547 ;;		None
 20548 ;; Auto vars:     Size  Location     Type
 20549 ;;		None
 20550 ;; Return value:  Size  Location     Type
 20551 ;;                  1    wreg      void 
 20552 ;; Registers used:
 20553 ;;		status,2, status,0, pclath, cstack
 20554 ;; Tracked objects:
 20555 ;;		On entry : 0/0
 20556 ;;		On exit  : 0/0
 20557 ;;		Unchanged: 0/0
 20558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20563 ;;Total ram usage:        0 bytes
 20564 ;; Hardware stack levels used:    1
 20565 ;; Hardware stack levels required when called:    1
 20566 ;; This function calls:
 20567 ;;		_i2c1_driver_clearBusCollision
 20568 ;; This function is called by:
 20569 ;;		_i2c_open
 20570 ;;		_INTERRUPT_InterruptManager
 20571 ;; This function uses a non-reentrant model
 20572 ;;
 20573                           
 20574                           
 20575                           ;psect for function _i2c_busCollisionISR
 20576  1F29                     _i2c_busCollisionISR:	
 20577                           
 20578                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 20579                           
 20580                           ;incstack = 0
 20581                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 20582  1F29  319F  2726         	fcall	_i2c1_driver_clearBusCollision
 20583  1F2B  0008               	return
 20584  1F2C                     __end_of_i2c_busCollisionISR:	
 20585                           
 20586                           	psect	text139
 20587  1F26                     __ptext139:	
 20588 ;; *************** function _i2c1_driver_clearBusCollision *****************
 20589 ;; Defined at:
 20590 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 20591 ;; Parameters:    Size  Location     Type
 20592 ;;		None
 20593 ;; Auto vars:     Size  Location     Type
 20594 ;;		None
 20595 ;; Return value:  Size  Location     Type
 20596 ;;                  1    wreg      void 
 20597 ;; Registers used:
 20598 ;;		None
 20599 ;; Tracked objects:
 20600 ;;		On entry : 0/0
 20601 ;;		On exit  : 0/0
 20602 ;;		Unchanged: 0/0
 20603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20608 ;;Total ram usage:        0 bytes
 20609 ;; Hardware stack levels used:    1
 20610 ;; This function calls:
 20611 ;;		Nothing
 20612 ;; This function is called by:
 20613 ;;		_i2c_busCollisionISR
 20614 ;; This function uses a non-reentrant model
 20615 ;;
 20616                           
 20617                           
 20618                           ;psect for function _i2c1_driver_clearBusCollision
 20619  1F26                     _i2c1_driver_clearBusCollision:	
 20620                           
 20621                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
 20622                           
 20623                           ;incstack = 0
 20624                           ; Regs used in _i2c1_driver_clearBusCollision: []
 20625  1F26  002E               	movlb	14	; select bank14
 20626  1F27  108F               	bcf	15,1	;volatile
 20627  1F28  0008               	return
 20628  1F29                     __end_of_i2c1_driver_clearBusCollision:	
 20629  007E                     btemp	set	126	;btemp
 20630  007E                     int$flags	set	126
 20631  007E                     wtemp0	set	126


Data Sizes:
    Strings     90
    Constant    1004
    Data        475
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      79
    BANK1            80     23      74
    BANK2            80      0      41
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            33      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$2642$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$2648$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2654$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_ISR$2660	const PTR FTN()enum E15307 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$2659	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2654	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$2653	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$2648	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$2647	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX$2642	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S519$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 0
		 -> main@timeStr(BANK1[0]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 0
		 -> main@timeStr(BANK1[0]), 

    mktime@timeptr	PTR struct tm size(1) Largest target is 18
		 -> rtc6_GetTime@tm_t(BANK1[18]), 

    memset@p1	PTR void  size(1) Largest target is 18
		 -> gmtime@tim(BANK1[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    memset@p	PTR unsigned char  size(1) Largest target is 18
		 -> gmtime@tim(BANK1[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    sp__ctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK2[27]), 

    sp__asctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK2[27]), 

    gmtime@tp	PTR const long  size(1) Largest target is 4
		 -> localtime@t(BANK0[4]), 

    sp__gmtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK1[18]), 

    localtime@tp	PTR const long  size(1) Largest target is 4
		 -> main@getTime(BANK1[4]), rtc6_SetTime@t(BANK0[4]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), main@timeStr(BANK1[0]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), main@timeStr(BANK1[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Modify_Data@c	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), 

    Write_String@message	PTR unsigned char  size(2) Largest target is 0
		 -> main@timeStr(BANK1[0]), 

    OLED_PutPicture@pic	PTR const unsigned char  size(2) Largest target is 475
		 -> emptyArray(CODE[475]), displayArray(BIGRAM[475]), 

    main@tm_t	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK1[18]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S944$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    sp__localtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK1[18]), 

    sp__memset	PTR void  size(1) Largest target is 18
		 -> gmtime@tim(BANK1[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    rtc6_SetTime@tm_t	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK1[18]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E15307[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S519$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S519$callbackTable	PTR FTN(PTR void ,)enum E15143[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E15143[6] size(2) Largest target is 1
		 -> i1_returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> returnReset(), returnStop(), 

    S519$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->i1_i2c_ISR
    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    i1_wr2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_wr1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rdBlkRegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_i2c_setDataCompleteCallback->i1_setCallBack

Critical Paths under _main in BANK0

    _main->_SetupClock
    _rtc6_GetTime->_mktime
    _rtc6_GetComponent->_rtcc_read
    _mktime->_ymd_to_scalar
    _ymd_to_scalar->_years_to_days
    _years_to_days->___lwdiv
    _months_to_days->___lwdiv
    _isleap->___lwmod
    _Write_String->_sprintf
    _sprintf->___lwmod
    ___lwdiv->___wmul
    _OLED_PutPicture->_OLED_SetColumn
    _OLED_PutPicture->_OLED_SetRow
    _OLED_SetRow->_OLED_Command
    _OLED_SetColumn->_OLED_Command
    _OLED_Data->_SPI2_Exchange8bit
    _Modify_Data->___wmul
    _SetupClock->_rtc6_SetTime
    _rtc6_SetTime->_localtime
    _rtc6_SetComponent->_rtcc_read
    _localtime->_gmtime
    _gmtime->_dylen
    _dylen->___lwmod
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_rtc6_Initialize
    _rtc6_Initialize->_rtcc_read
    _rtcc_write->_i2c_write1ByteRegister
    _rtcc_read->_i2c_read1ByteRegister
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _OLED_Initialize->_OLED_Command
    _OLED_Command->_SPI2_Exchange8bit

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    i1_wr2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_wr1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rdBlkRegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd1RegCompleteHandler->i1_i2c_setDataCompleteCallback

Critical Paths under _main in BANK1

    _main->_rtc6_GetTime

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  569592
                                             75 BANK0      4     4      0
                                             18 BANK1      5     5      0
                    _OLED_Initialize
                  _SYSTEM_Initialize
                         _SetupClock
                       _Write_String
                          _localtime
                       _rtc6_GetTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _rtc6_GetTime                                        25    21      4  113942
                                             63 BANK0      7     3      4
                                              0 BANK1     18    18      0
                             _memset
                             _mktime
                  _rtc6_GetComponent
 ---------------------------------------------------------------------------------
 (2) _rtc6_GetComponent                                    6     5      1  103258
                                             19 BANK0      6     5      1
                             ___bmul
                          _rtcc_read
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _mktime                                              15    11      4    9340
                                             48 BANK0     15    11      4
                             ___lmul
                      _ymd_to_scalar
 ---------------------------------------------------------------------------------
 (3) _ymd_to_scalar                                       16    10      6    8050
                                             32 BANK0     16    10      6
                             _isleap
                     _months_to_days
                      _years_to_days
 ---------------------------------------------------------------------------------
 (4) _years_to_days                                       18    14      4    2039
                                             14 BANK0     18    14      4
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) _months_to_days                                       2     0      2    3884
                                             14 BANK0      2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isleap                                               5     3      2    1352
                                             20 BANK0      5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _Write_String                                         4     2      2   11512
                                             51 BANK0      4     2      2
                        _Modify_Data
                    _OLED_PutPicture
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     220
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    19     16    6981
                                             20 BANK0     31    15     16
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     961
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _OLED_PutPicture                                      6     4      2     697
                                              4 BANK0      6     4      2
                          _OLED_Data
                     _OLED_SetColumn
                        _OLED_SetRow
 ---------------------------------------------------------------------------------
 (3) _OLED_SetRow                                          2     2      0     127
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_SetColumn                                       2     2      0     127
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_Data                                            1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _Modify_Data                                         21    15      6    3428
                                              6 BANK0     21    15      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2802
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SetupClock                                          23    23      0  222756
                                             52 BANK0     23    23      0
                       _rtc6_SetTime
 ---------------------------------------------------------------------------------
 (2) _rtc6_SetTime                                         8     4      4  222171
                                             44 BANK0      8     4      4
                            ___awmod
                          _localtime
                             _memset
                  _rtc6_SetComponent
 ---------------------------------------------------------------------------------
 (3) _rtc6_SetComponent                                   10     8      2  213041
                                             19 BANK0     10     8      2
                            ___awdiv
                            ___awmod
                          _rtcc_read
                         _rtcc_write
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     773
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     569
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _localtime                                           13    13      0    6304
                                             31 BANK0     13    13      0
                             ___lmul
                             _gmtime
 ---------------------------------------------------------------------------------
 (2) _gmtime                                               7     7      0    5264
                                             24 BANK0      7     7      0
                            ___aldiv
                            ___almod
                            ___awmod
                              _dylen
 ---------------------------------------------------------------------------------
 (3) _dylen                                                4     2      2    1495
                                             20 BANK0      4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1132
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1441
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             11     3      8     973
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     985
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     864
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0  207051
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI2_Initialize
                    _rtc6_Initialize
 ---------------------------------------------------------------------------------
 (2) _rtc6_Initialize                                      3     3      0  207051
                                             19 BANK0      3     3      0
                          _rtcc_read
                         _rtcc_write
 ---------------------------------------------------------------------------------
 (4) _rtcc_write                                           4     3      1  105133
                                             14 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (5) _i2c_write1ByteRegister                               4     2      2  102113
                                             10 BANK0      4     2      2
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _rtcc_read                                            2     2      0  101803
                                             17 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                7     6      1  101733
                                             10 BANK0      7     6      1
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _i2c_setAddressNACKCallback                           4     1      3    2259
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (5) _i2c_open                                             3     3      0     412
                                              2 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_setI2cISR                                2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_setBusCollisionISR                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_masterWrite                                      0     0      0   93262
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (6) _i2c_masterOperation                                  3     3      0   93262
                                              7 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (7) _mssp1_IRQisEnabled                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _i2c_poller                                           0     0      0   93092
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (8) _mssp1_waitForEvent                                   1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _i2c_ISR                                              3     3      0   93037
                                              4 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX_EMPTY                                      1     1      0   23211
                                              0 BANK0      1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX                                            3     3      0   23342
                                              1 BANK0      3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_TXData                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RX                                            1     1      0   23211
                                              0 BANK0      1     1      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ADDRESS_NACK                               1     1      0   23211
                                              0 BANK0      1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    4584
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    4584
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _returnStop                                          1     0      1     108
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _returnReset                                         1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4767
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    4584
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    4584
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _i2c_setDataCompleteCallback                          4     1      3    2979
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (6) _setCallBack                                          5     2      3    1117
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (5) _i2c_setBuffer                                        4     2      2    1574
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (10) _i2c_restartWrite                                    1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_close                                            2     2      0      37
                                              0 BANK0      2     2      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (6) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OLED_Initialize                                      2     2      0      62
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (4) _OLED_Command                                         1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          1     1      0   18930
                                              7 COMMON     1     1      0
                   Absolute function *
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (15) i1_i2c_ISR                                           3     3      0   18930
                                              4 COMMON     3     3      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (16) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_TX_EMPTY                                   1     1      0    4691
                                              0 COMMON     1     1      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
                     i1_mssp1_setIRQ
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (17) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_TX                                         3     3      0    4813
                                              1 COMMON     3     3      0
                   Absolute function *
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_ADR_READ                              0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_TXData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_RX                                         1     1      0    4691
                                              0 COMMON     1     1      0
                   Absolute function *
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (18) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0    4691
                                              0 COMMON     1     1      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (17) i1_wr2RegCompleteHandler                             1     0      1     904
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_wr1RegCompleteHandler                             1     0      1     904
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_returnStop                                        1     0      1     108
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (17) i1_returnReset                                       1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (17) i1_rdBlkRegCompleteHandler                           1     0      1     967
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_rd2RegCompleteHandler                             1     0      1     904
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_rd1RegCompleteHandler                             1     0      1     904
                                              1 BANK0      1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (18) i1_i2c_setDataCompleteCallback                       4     1      3     699
                                              5 COMMON     3     0      3
                                              0 BANK0      1     1      0
                      i1_setCallBack
 ---------------------------------------------------------------------------------
 (19) i1_setCallBack                                       5     2      3     287
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (18) i1_i2c_setBuffer                                     4     2      2     174
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (17) i1_i2c_restartWrite                                  1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (18) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (18) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (16) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OLED_Initialize
     _OLED_Command
       _SPI2_Exchange8bit
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI2_Initialize
     _rtc6_Initialize
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
       _rtcc_write
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_write1ByteRegister (ARG)
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _SetupClock
     _rtc6_SetTime
       ___awmod
       _localtime
         ___lmul
         _gmtime
           ___aldiv
           ___almod
           ___awmod
           _dylen
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
       _memset
       _rtc6_SetComponent
         ___awdiv
         ___awmod
         _rtcc_read
           _i2c_read1ByteRegister
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
         _rtcc_write
           ___awdiv (ARG)
           ___awmod (ARG)
           _i2c_write1ByteRegister (ARG)
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
   _Write_String
     _Modify_Data
       ___wmul
     _OLED_PutPicture
       _OLED_Data
         _SPI2_Exchange8bit
       _OLED_SetColumn
         _OLED_Command
           _SPI2_Exchange8bit
       _OLED_SetRow
         _OLED_Command
           _SPI2_Exchange8bit
     _sprintf
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       ___wmul
       _isdigit
     _strlen
   _localtime
     ___lmul
     _gmtime
       ___aldiv
       ___almod
       ___awmod
       _dylen
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
   _rtc6_GetTime
     _memset
     _mktime
       ___lmul
       _ymd_to_scalar
         _isleap
           ___lwmod
             ___lwdiv (ARG)
               ___wmul (ARG)
         _months_to_days
           ___lwdiv
             ___wmul (ARG)
           ___wmul
         _years_to_days
           ___lmul
           ___lwdiv
             ___wmul (ARG)
     _rtc6_GetComponent
       ___bmul
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _sprintf
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
     ___wmul
     _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       Absolute function(Fake) *
       i1_do_I2C_DO_NACK_RESTART *
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP *
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData *
       i1_i2c1_driver_sendACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART_READ *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData *
       i1_i2c1_driver_isNACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c_restartWrite *
       i1_mssp1_setIRQ *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     17      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      29       9       51.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               21      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Aug 28 22:53:53 2018

                           returnReset@p 0029                            _years_to_days 0A34  
              rtc6_SetComponent@location 003C                        _rtc6_SetTime$2639 0052  
                         ___bmul@product 0022            _do_I2C_SEND_RESTART$intlevel0 1FFC  
                            __CFG_CP$OFF 0000                                       l53 108B  
                           ___awdiv@sign 0026                      months_to_days@month 002E  
                    ??_rtc6_SetComponent 0035                     __size_of_do_I2C_IDLE 0009  
                    _do_I2C_SEND_RESTART 1FF8                     __size_of_do_I2C_RCEN 000A  
                    ___wmul@multiplicand 0022                     __end_ofi1_returnStop 1F24  
                          rtcc_read@addr 0032                              i1_do_I2C_RX 1615  
                            i1_do_I2C_TX 1767                              __CFG_LVP$ON 0000  
                                    l224 1249                                      l217 17FD  
                                    l314 16FC                                      l298 08A4  
                                    l742 10B1                                      l834 0AA7  
                                    l855 063C                                      l882 0731  
                                    l981 1270                             __CFG_CPD$OFF 0000  
               i1_do_I2C_DO_NACK_RESTART 1F76                        ??_OLED_Initialize 0022  
                       ??_OLED_SetColumn 0022             __size_of_i2c_masterOperation 0024  
                   _returnStop$intlevel0 1F9B            i2c_setDataCompleteCallback@cb 0025  
                __size_of_PMD_Initialize 0008                             ___awmod@sign 0026  
               ?i1_rd2RegCompleteHandler 0021                    __size_of_do_I2C_RESET 000B  
                           __CFG_BORV$LO 0000                                      wreg 0009  
                  __end_ofi1_returnReset 1F26                          ?i1_mssp1_setIRQ 0070  
                       OLED_Command@temp 0021                 ?i1_wr2RegCompleteHandler 0021  
                     i1_i2c1_driver_stop 1F2F          i2c1_driver_setBusCollisionISR@f 0020  
        ??i1_i2c_setDataCompleteCallback 0020                              main@getTime 00E6  
                           __CFG_ZCD$OFF 0000                                     l1036 0C14  
                ??_rd2RegCompleteHandler 002A                                     l1049 09D7  
                                   l1391 0951                                     l5201 1019  
                          i1returnStop@p 0021                                     l5213 1F9B  
                                   l5221 1FA7                                     l5207 1021  
                                   l5145 135D                                     l5217 1FA1  
                                   l5225 11C4                                     l5233 11DA  
                                   l5241 11F0                                     l6201 06AA  
                                   l5307 1011                                     l6213 06D1  
                                   l5183 1FF4                                     l6231 0706  
                                   l6207 06BD                                     l6215 06E9  
                                   l5249 11AE                                     l5257 1287  
                                   l5265 1076                                     l5177 1FEC  
                                   l6225 0700                                     l6209 06C8  
                                   l6321 12A5                                     l6065 0DB6  
                                   l8003 1452                                     l5275 103B  
                                   l5195 1009                                     l5283 10B9  
                                   l5291 1081                                     l8011 13EE  
                                   l5603 126A                                     l6315 1610  
                                   l6307 15F8                                     l6323 12B1  
                                   l6067 0DBF                                     l5189 1FFC  
                                   l5621 14B4                                     l5541 1436  
                                   l6245 074D                                     l6237 0725  
                                   l6181 0657                                     l5535 141E  
                                   l6343 0B10                                     l6335 0AB8  
                                   l6271 0789                                     l6255 0760  
                                   l6263 0773                                     l6247 0750  
                                   l6175 0641                                     l8009 1455  
                                   l8041 07F3                                     l8105 085D  
                                   l8121 14D3                                     l5617 14AA  
                                   l5721 1739                                     l5713 1733  
                                   l5537 142A                                     l5545 143F  
                                   l6265 0777                                     l6193 0694  
                                   l6177 064A                                     l6169 0638  
                                   l5299 104E                                     l8019 13FF  
                                   l8027 1093                                     l8115 0872  
                                   l8131 14FC                                     l5723 1745  
                                   l5731 175A                                     l8045 07FD  
                                   l5661 0C6E                                     l5709 172C  
                                   l5813 08DA                                     l6285 079B  
                                   l6277 0797                                     l6189 0686  
                                   l8039 07ED                                     l5647 0C35  
                                   l5639 0C25                                     l5735 1762  
                                   l5727 1751                                     l5831 0900  
                                   l5823 08E2                                     l5807 08CF  
                                   l6199 0696                                     l6287 0617  
                                   l8161 09BB                                     l5665 0C7C  
                                   l5657 0C63                                     l5649 0C43  
                                   l5745 1599                                     l5913 1252  
                                   l5825 08EE                                     l6289 07D5  
                                   l5683 09EC                                     l5835 0909  
                                   l5771 155E                                     l5763 1540  
                                   l5685 09FA                                     l5693 0A1D  
                                   l5677 09E4                                     l5749 159E  
                                   l5765 154C                                     l8095 0834  
                                   l8159 09AA                                     l5839 0911  
                                   l5775 1567                                     l5951 1173  
                                   l5697 0A2B                                     l5689 0A12  
                                   l5865 0F80                                     l5945 112A  
                                   l5875 0FC9                                     l5867 0FB1  
                                   l5891 152F                                     l5971 093C  
                                   l5955 1179                                     l5877 0FF9  
                                   l8455 0C90                                     l5889 152E  
                                   l7923 13A2                                     l7933 13A8  
                                   l7927 13A5                                     l7919 1399  
                                   l7943 0881                                     l7935 0878  
                                   l7961 08BD                                     l7953 0887  
                                   l7947 0884                                     l7939 087E  
                                   l7965 16DF                                     l7991 1448  
                                   l7983 1701                                     l7993 144B  
                                   l7979 16FE                                     l7997 144E  
                                   l7989 1704                                     STR_1 1820  
                                   STR_2 183F                                     STR_3 0237  
                                   _LATA 0016                                     _LATB 0017  
                                   _LATC 0018                                     _LATD 0019  
                                   _LATE 001A                                     u4055 09EF  
                                   u4145 173C                                     u4075 0A08  
                                   u4085 0A13                                     u4165 174B  
                                   u4245 1543                                     u4175 1752  
                                   u4415 0F97                                     u4425 0FE4  
                                   u4345 08E5                                     u4265 154D  
                                   u3715 1421                                     u4275 1557  
                                   _PMD0 0796                                     u4365 08EF  
                                   u4285 155F                                     _PMD1 0797  
                                   _PMD2 0798                                     u3735 1430  
                                   u4375 08F9                                     _PMD3 0799  
                                   _PMD4 079A                                     u3905 14BC  
                                   u3745 1437                                     u4385 0901  
                                   u4625 068D                                     _PMD5 079B  
                                   u4715 0740                                     u4485 120B  
                                   u3855 1271                                     u4575 0DA0  
                                   u6425 15C0                                     u3865 1276  
                                   u4585 0DB4                                     u3955 0C38  
                                   u4675 071B                                     u6445 12F4  
                                   u3895 14B5                                     u3975 0C44  
                                   u3985 0C58                                     u3995 0C64  
                                   u4885 0AAD                     ?_do_I2C_SEND_RESTART 0070  
                                   u6737 13E5                                     u6747 1191  
                                   u6757 108F                                     u6767 0B91  
                                   u6777 0BA0                __end_of_rtc6_SetComponent 15DC  
                                   _WPUA 0F39                                     _WPUB 0F44  
                                   _WPUC 0F4F                                     _WPUD 0F5A  
                                   _WPUE 0F65                  ??_wr2RegCompleteHandler 002A  
                           __CFG_WRT$OFF 0000                            __CFG_FCMEN$ON 0000  
      __size_of_do_I2C_SEND_RESTART_READ 0008                      ?i1_i2c1_driver_stop 0070  
              ?_do_I2C_SEND_RESTART_READ 0070                                     _main 0C85  
              __size_of_do_I2C_SEND_STOP 0008                   __size_of_do_I2C_DO_ACK 0008  
                                   fsr0h 0005                                     fsr1h 0007  
                                   indf0 0000                                     fsr0l 0004  
                                   indf1 0001                                     fsr1l 0006  
                                   btemp 007E                              main@timeStr 00E5  
                  __size_of_Write_String 002F                        ??i1_do_I2C_DO_ACK 0070  
                          __CFG_BOREN$ON 0000                  i1_i2c1_driver_getRXData 1F35  
                  ?_do_I2C_SEND_ADR_READ 0070          ??_i2c1_driver_clearBusCollision 0070  
                                   start 0022                            _i2c_setBuffer 1195  
                          __CFG_CSWEN$ON 0000                        ___bmul@multiplier 0023  
                          __CFG_MCLRE$ON 0000                          __end_of_i2c_ISR 1417  
                         ?_years_to_days 002E         __size_of_rdBlkRegCompleteHandler 001D  
               ??_do_I2C_DO_NACK_RESTART 0020                       __size_of_OLED_Data 000A  
                          i1_do_I2C_IDLE 1000                __size_of_mssp1_disableIRQ 0003  
                          i1_do_I2C_RCEN 1F8B                             _do_I2C_RESET 1072  
                         i1returnReset@p 0021                   _i2c_write1ByteRegister 14D1  
         __size_of_OSCILLATOR_Initialize 0009              i2c_setAddressNACKCallback@p 0027  
          __end_of_OSCILLATOR_Initialize 102E                     ??i1_i2c1_driver_stop 0070  
                        __end_of___aldiv 0C85                          __end_of___almod 0A34  
               __end_of_i2c1_driver_open 105E                                    ?_main 0070  
                 __size_of_ymd_to_scalar 0057                          __end_of___awdiv 0916  
               __end_of_i2c1_driver_stop 1F4D                            __CFG_WDTE$OFF 0000  
                        __end_of___awmod 1767                          ___awdiv@divisor 0020  
             __end_of_i2c1_driver_TXData 1FAF                           __CFG_DEBUG$OFF 0000  
                        __end_of___lwdiv 156C                                    i1l314 162F  
                        __end_of___lwmod 1444                                    i1l631 0015  
                                  i1l298 1793                                    i1l636 001D  
                        ___awdiv@counter 0025                                    _OSCEN 0891  
                                  _TRISA 0011                                    _TRISB 0012  
                                  _TRISC 0013                                    _TRISD 0014  
                                  _TRISE 0015                      ___lmul@multiplicand 0024  
                           ?_OLED_SetRow 0070                              i2c_open@ret 0024  
                      ??_OLED_PutPicture 0026                       __size_ofi1_i2c_ISR 0026  
                           _Write_String 1472               __end_of_i2c1_driver_isNACK 1037  
                        __end_of_dpowers 186B                                    _dylen 156C  
                        __end_of_isdigit 112C             ?i1_do_I2C_SEND_RESTART_WRITE 0070  
             ?_do_I2C_SEND_RESTART_WRITE 0070                    ??_do_I2C_SEND_RESTART 0020  
                  _i2c_read1ByteRegister 0826                        ?i1_mssp1_clearIRQ 0070  
 __end_of_i2c1_driver_setBusCollisionISR 1FB5  __size_of_i2c1_driver_setBusCollisionISR 0006  
         _i2c1_driver_setBusCollisionISR 1FAF                          __end_of_moninit 1861  
                                  pclath 000A                      Write_String@message 0053  
                __size_of_mssp1_clearIRQ 0003                     i1_i2c1_driver_TXData 1F86  
                       ymd_to_scalar@day 0044                i2c_write1ByteRegister@reg 002A  
                 ?_do_I2C_SEND_ADR_WRITE 0070                                    status 0003  
                     ??i1_mssp1_clearIRQ 0070                                    wtemp0 007E  
                        __end_of_sprintf 07DC                            ??_Modify_Data 002C  
                        years_to_days@yr 002E                           ?_i2c_setBuffer 0020  
                           ?_setCallBack 0020                     i1_i2c1_driver_isNACK 1FD0  
                          _fsmStateTable 1800                          __initialization 0024  
         __size_ofi1_do_I2C_SEND_RESTART 0004                               _i2c_poller 1093  
          __end_ofi1_do_I2C_SEND_RESTART 1F6A                        _SPI2_Exchange8bit 10A9  
                             _i2c_status 00A0                           ?i1_do_I2C_IDLE 0070  
                           __end_of_main 0D08                           ?i1_do_I2C_RCEN 0070  
             __end_ofi1_do_I2C_SEND_STOP 1F6E                         __end_of_i2c_open 1800  
                     ?_SPI2_Exchange8bit 0070              ?_INTERRUPT_InterruptManager 0070  
                          rtc6_SetTime@t 004C          __end_ofi1_rd2RegCompleteHandler 1170  
                          setCallBack@cb 0020                           i1_do_I2C_RESET 1FBB  
                          _do_I2C_DO_ACK 100D                                   ??_main 006B  
                          _do_I2C_TX$723 0022                        ?_i2c_restartWrite 0029  
        __end_ofi1_wr2RegCompleteHandler 113D                       OLED_PutPicture@pic 0024  
          __size_of_i2c1_driver_sendNACK 0004                             i2c_close@ret 0021  
               __size_of_SPI2_Initialize 0006                      ??_SPI2_Exchange8bit 0020  
                     ??_i2c_restartWrite 002A            __size_of_i2c1_driver_resetBus 0001  
                ?_do_I2C_DO_ADDRESS_NACK 0070                                   ?_dylen 0034  
                       ___awdiv@dividend 0022          i1i2c_setDataCompleteCallback@cb 0075  
                                 _ANSELA 0F38                                   _ANSELB 0F43  
                                 _ANSELC 0F4E                                   _ANSELD 0F59  
                      __end_of_OLED_Data 1072                                   _ANSELE 0F64  
                     __CFG_RSTOSC$HFINT1 0000                  ?i1_do_I2C_SEND_ADR_READ 0070  
                  ?i1_i2c1_driver_TXData 0070                                   _RB1PPS 0F19  
                         rtcc_write@addr 0031                                   _RB3PPS 0F1B  
                                 _RC3PPS 0F23                           rtcc_write@data 002E  
                                 _RC4PPS 0F24                                   _ODCONA 0F3A  
                                 _ODCONB 0F45                                   _ODCONC 0F50  
                                 _ODCOND 0F5B                                   _ODCONE 0F66  
                                 i1l4203 1F62                                   i1l4221 1F72  
                                 i1l4215 1F6A                                   i1l4209 1F66  
                                 i1l4227 1F76                                   i1l6015 112C  
                                 i1l6007 115F                                   i1l6023 1219  
                                 i1l4601 1FBB                                   i1l4611 1000  
                                 i1l4197 1F5E                           __CFG_WDTCCS$SC 0000  
                                 i1l4619 1FD8                                   i1l4627 1FC2  
                                 i1l4635 1F8B                                   i1l4643 1F6E  
                                 i1l8203 1773                                   i1l8221 1615  
              ??i1_i2c1_driver_getRXData 0070                                   i1l8217 17AC  
                                 i1l8209 1776               __size_of_rtc6_SetComponent 0039  
                                 i1l8235 1631                                   i1l8253 1371  
                                 i1l8245 1637                                   i1l8325 0810  
                                 i1l8317 0800                                   i1l5783 1314  
                                 i1l8247 136B                                   i1l8183 132C  
                                 i1l8175 1322                                   i1l8191 1767  
                                 i1l8239 1634                                   i1l8249 136E  
                                 i1l8265 1378                                   i1l8259 1375  
                                 i1l8179 1329                                   i1l8195 176D  
                                 i1l8189 132F                                   i1l5983 1F24  
                                 i1l5991 113D                                   i1l8199 1770  
                                 i1l5979 1F22                                   i1l5987 0002  
                                 i1l5999 114E            ??i1_do_I2C_SEND_RESTART_WRITE 0070  
                     __size_of_i2c_close 001B                                   _OSCFRQ 0893  
                          ?_OLED_Command 0070                  i1_rd1RegCompleteHandler 114E  
                          _ymd_to_scalar 0916                   ??_do_I2C_SEND_ADR_READ 0021  
                                 _STATUS 0003                 rdBlkRegCompleteHandler@p 0029  
                              ??_i2c_ISR 0024                  i1_wr1RegCompleteHandler 113D  
                       rtc6_SetTime@tm_t 0053              ??i1_rdBlkRegCompleteHandler 0078  
                     rtc6_Initialize@reg 0035                    ?i1_i2c1_driver_isNACK 0070  
                         __CFG_PWRTE$OFF 0000                          ??_years_to_days 0032  
              __end_of_SPI2_Exchange8bit 10B5                    _i2c1_driver_getRXData 1F50  
                    _do_I2C_RX$intlevel0 16DF                                   ___bmul 1170  
                  __size_ofi1_returnStop 0002              __end_of_do_I2C_DO_NACK_STOP 101D  
                      __end_ofi1_i2c_ISR 0826      __end_of_i2c_setDataCompleteCallback 10F3  
            _i2c_setDataCompleteCallback 10E6                                   ___lmul 14A1  
                              ??___aldiv 0028                                ??___almod 0028  
                                 ___wmul 1267                          _i2c_masterWrite 1F82  
                    __end_of_Modify_Data 0B15                                ??___awdiv 0024  
  __end_of_i2c1_driver_clearBusCollision 1F29   __size_of_i2c1_driver_clearBusCollision 0003  
          _i2c1_driver_clearBusCollision 1F26                           __CFG_STVREN$ON 0000  
                              ??___awmod 0024          __size_of_do_I2C_DO_NACK_RESTART 0008  
                              ??___lwdiv 002A                                ??___lwmod 0032  
                 __end_ofi1_do_I2C_RESET 1FC2                          i1_i2c_setBuffer 1100  
                             _SetupClock 13BF                                   _gmtime 0EAE  
                                 _memset 124C                                   _isleap 1503  
                       ___awdiv@quotient 0027                           ?_do_I2C_DO_ACK 0070  
                                 _mktime 0D8D                          ___awmod@divisor 0020  
                                 _lookup 0437              __size_ofi1_i2c_restartWrite 0002  
                        ___awmod@counter 0025                                   _strlen 12A0  
               rtc6_GetComponent@working 0038                   i2c1_driver_setI2cISR@f 0020  
                           __pdataBIGRAM 21B1              __end_of_i2c1_driver_sendACK 1F7E  
                         _PMD_Initialize 1FE0           __end_of_do_I2C_DO_ADDRESS_NACK 13BF  
                              ??_isdigit 0020               i2c_write1ByteRegister@data 002B  
            ?_i2c_setAddressNACKCallback 0025              __end_of_i2c1_driver_restart 1F4A  
                           ?_returnReset 0029            _do_I2C_DO_NACK_STOP$intlevel0 1019  
             i1rdBlkRegCompleteHandler@p 0021                    _i2c1_driver_setI2cISR 1FB5  
            __end_of_i2c1_driver_startRX 1F50                   ?_i2c_read1ByteRegister 002A  
      __size_ofi1_do_I2C_DO_ADDRESS_NACK 0024           __end_ofi1_do_I2C_SEND_ADR_READ 1FE0  
                          ?_rtc6_GetTime 005F                ?i1_do_I2C_DO_ADDRESS_NACK 0070  
                              ??_sprintf 0044                              localtime@tp 004B  
                         ??_OLED_Command 0021                        i1_do_I2C_TX_EMPTY 136B  
                         ?_ymd_to_scalar 0040                        _SYSTEM_Initialize 110E  
                __end_of__initialization 0058                            ?_rtc6_SetTime 004C  
                        ??_i2c_setBuffer 0022           _do_I2C_SEND_ADR_READ$intlevel0 10B9  
                       _do_I2C_SEND_STOP 1005                             i1_returnStop 1F22  
                  i1_do_I2C_DO_NACK_STOP 1F72                       __size_of_do_I2C_RX 0046  
                     __size_of_do_I2C_TX 0050                       ?i1_do_I2C_TX_EMPTY 0070  
                     ?_SYSTEM_Initialize 0070               __end_of_mssp1_IRQisEnabled 1FD0  
      _rdBlkRegCompleteHandler$intlevel0 1287                      _i2c_masterOperation 07DC  
               __size_of_do_I2C_TX_EMPTY 002E                      ___bmul@multiplicand 0020  
                        ??i1_do_I2C_IDLE 0070                          ??i1_do_I2C_RCEN 0070  
                _rdBlkRegCompleteHandler 1283               __end_of_mssp1_waitForEvent 1093  
                            ?_i2c_poller 0070                          _OLED_Initialize 0B89  
                         __pcstackCOMMON 0070               ??i1_do_I2C_DO_NACK_RESTART 0070  
                    _do_I2C_TX$intlevel0 0878                      ??i1_do_I2C_TX_EMPTY 0070  
                    ??_SYSTEM_Initialize 0036                         _mssp1_disableIRQ 1F41  
                  i1_i2c1_driver_sendACK 1F56                            __end_of_dylen 15A3  
                  i1i2c1_driver_TXData@d 0070                          ?i1_do_I2C_RESET 0070  
                  i1_i2c1_driver_restart 1F2C                   __end_of_PMD_Initialize 1FE8  
                      __end_of_i2c_close 124C                             ?i1_do_I2C_RX 0070  
                           ?i1_do_I2C_TX 0070                    i1_i2c1_driver_startRX 1F32  
                       ??i1_mssp1_setIRQ 0070                      i1i2c_restartWrite@p 0021  
              i1_rdBlkRegCompleteHandler 1219                     ?_i2c_masterOperation 0070  
         i1i2c_setDataCompleteCallback@p 0077             ??i1_do_I2C_SEND_RESTART_READ 0070  
                __size_of_months_to_days 001F                   __size_ofi1_setCallBack 0024  
                        i1setCallBack@cb 0070                 i1rd1RegCompleteHandler@p 0021  
                        i1_do_I2C_DO_ACK 1F6E                           ??_rtc6_GetTime 0063  
                        i1_do_I2C_TX$723 0072                           setCallBack@idx 0024  
              __end_ofi1_do_I2C_TX_EMPTY 1395                   _do_I2C_DO_NACK_RESTART 101D  
                 ??i1_i2c1_driver_TXData 0070                                  ??_dylen 0036  
              __end_of_SYSTEM_Initialize 111D                     __size_of_OLED_SetRow 000B  
              ??i1_rd1RegCompleteHandler 0078                             sprintf@width 0050  
                      ??_SPI2_Initialize 0020                           _mssp1_clearIRQ 1F3E  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
              ??i1_wr1RegCompleteHandler 0078                           ??_rtc6_SetTime 0050  
         __size_of_rd2RegCompleteHandler 0016                                ?_i2c_open 0070  
          __end_of_rd2RegCompleteHandler 1202                 ??i1_i2c1_driver_sendNACK 0070  
         __size_of_wr2RegCompleteHandler 0016                   ??i1_i2c1_driver_isNACK 0070  
       __size_ofi1_rd2RegCompleteHandler 0011            __end_of_wr2RegCompleteHandler 11C0  
                __end_of_i2c_masterWrite 1F86                              _Modify_Data 0AA4  
               i1wr1RegCompleteHandler@p 0021                    _rd1RegCompleteHandler 11D6  
                 ?_i2c1_driver_getRXData 0070                 ??i1_i2c1_driver_resetBus 0070  
               __size_of_rtc6_Initialize 0059                  __end_ofi1_i2c_setBuffer 110E  
                     __size_of_localtime 0045               __size_of_SPI2_Exchange8bit 000C  
       __size_ofi1_wr2RegCompleteHandler 0011                    _do_I2C_IDLE$intlevel0 103B  
                  _wr1RegCompleteHandler 11C0                           _SSP1DATPPSbits 0EC6  
           __size_of_i2c_busCollisionISR 0003          _wr1RegCompleteHandler$intlevel0 11C4  
        _rd1RegCompleteHandler$intlevel0 11DA                               __pmaintext 0C85  
                          ??_do_I2C_IDLE 0020                  ?_i2c_write1ByteRegister 002A  
                   __size_of_setCallBack 0025                            ??_do_I2C_RCEN 0020  
                                ?___bmul 0020                                  ?___lmul 0020  
                                ?___wmul 0020                          __CFG_PPS1WAY$ON 0000  
                        ??_do_I2C_DO_ACK 0020                               __pintentry 0004  
                        _OLED_PutPicture 15DC                              ?_SetupClock 0070  
                                ?_gmtime 0070                                  ?_memset 0020  
                                ?_isleap 0034                           ___lmul@product 0028  
                    i2c_setBuffer@buffer 0023                                  ?_mktime 0050  
                         _SSP2DATPPSbits 0EC9                           _SSP1CLKPPSbits 0EC5  
                        ?_PMD_Initialize 0070           ?_i2c1_driver_clearBusCollision 0070  
                                ?_strlen 0020                    ??_i2c_masterOperation 0027  
                      ?_i2c1_driver_open 0070                        __end_of_do_I2C_RX 1721  
                      __end_of_do_I2C_TX 08C4                        ?_i2c1_driver_stop 0070  
               ?i1_do_I2C_SEND_ADR_WRITE 0070                       __size_of_rtcc_read 000A  
                 ?_i2c1_driver_setI2cISR 0020                       ??_i2c1_driver_open 0020  
                     ??_i2c1_driver_stop 0020                                  _OSCCON1 088D  
                                _OSCCON3 088F                            ?_mssp1_setIRQ 0070  
                         _SSP2CLKPPSbits 0EC8                                  _OSCTUNE 0892  
                                _SSP1ADD 018D                                  _SSP2ADD 0197  
                                _SSP1BUF 018C                   __end_of_mssp1_clearIRQ 1F41  
                                _SSP2BUF 0196                                  _SSP1MSK 018E  
                    __size_of_i2c_poller 000B                          ??_ymd_to_scalar 0046  
                ??_do_I2C_SEND_ADR_WRITE 0021            i2c_write1ByteRegister@address 002D  
    _do_I2C_SEND_RESTART_WRITE$intlevel0 1FF4              ??_do_I2C_SEND_RESTART_WRITE 0020  
                 ?i1_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_TXData 1FA9  
                             ??_i2c_open 0022                       _i2c1_driver_i2cISR 007A  
                __end_of_OLED_Initialize 0C03                                  _i2c_ISR 13EA  
              ??_rdBlkRegCompleteHandler 002A                               _emptyArray 005C  
         __end_of_i2c_write1ByteRegister 1503                    _returnReset$intlevel0 1FA1  
                  _do_I2C_RCEN$intlevel0 104E                            i1_setCallBack 12FE  
                     _i2c1_driver_isNACK 102E                      ?_i2c1_driver_TXData 0070  
       _do_I2C_DO_ADDRESS_NACK$intlevel0 1399                   ?i1_i2c1_driver_sendACK 0070  
                   __CFG_SCANE$available 0000      __size_of_i2c_setAddressNACKCallback 000D  
                                ___aldiv 0C03                          __size_of___bmul 0012  
                                ___almod 09C6                   __size_ofi1_returnReset 0002  
                                ___awdiv 08C4                          __size_of___lmul 0030  
                                ___awmod 1721                __size_ofi1_mssp1_clearIRQ 0003  
                        __size_of___wmul 001C                                  ___lwdiv 1537  
                 ?i1_i2c1_driver_restart 0070                                  ___lwmod 1417  
                      ??_do_I2C_TX_EMPTY 0020                      ?_i2c1_driver_isNACK 0070  
                 ?i1_i2c1_driver_startRX 0070                          __size_of_gmtime 0152  
                        __size_of_memset 001B                          __size_of_isleap 0034  
                   __end_of_OLED_Command 104A                  __end_ofi1_do_I2C_DO_ACK 1F72  
                        __size_of_mktime 0121                                  __ptext1 0D08  
                                __ptext2 12DE                                  __ptext3 1170  
                                __ptext4 0D8D                                  __ptext5 0916  
                                __ptext6 0A34                                  __ptext7 12BF  
                                __ptext8 1503                                  __ptext9 1472  
            __size_ofi1_i2c1_driver_stop 0003                      __end_of_do_I2C_IDLE 1040  
                    __end_of_do_I2C_RCEN 1054                          __size_of_strlen 001F  
                                _dpowers 1861                    _OSCILLATOR_Initialize 1025  
                                _isdigit 111D              __end_of_do_I2C_SEND_RESTART 2000  
                         ??_mssp1_setIRQ 0020                         ___awmod@dividend 0022  
                           Modify_Data@c 0026                         ___aldiv@dividend 0024  
                           Modify_Data@j 0039                             Modify_Data@p 0037  
                   ??_i2c1_driver_TXData 0020                        __end_of_localtime 16DB  
                          mktime@timeptr 005E                 ??_PIN_MANAGER_Initialize 0020  
                                _moninit 1855                   i2c_masterOperation@ret 0029  
                     i1_do_I2C_SEND_STOP 1F6A                          ?_mssp1_clearIRQ 0070  
             _do_I2C_SEND_STOP$intlevel0 1009               __size_ofi1_do_I2C_TX_EMPTY 002A  
               _do_I2C_SEND_RESTART_READ 1FE8               __size_of_SYSTEM_Initialize 000F  
                i2c_read1ByteRegister@d2 0030                                  _sprintf 0612  
                                clrloop0 10C2                     __size_of_returnReset 0006  
                   end_of_initialization 0058                     ??_i2c1_driver_isNACK 0020  
                __size_of_OLED_SetColumn 0017                                  dylen@yr 0034  
                    __size_of_SetupClock 002B                __size_of_i2c_restartWrite 0006  
                                init_ram 10CD                                  memset@c 0020  
           __end_of_i2c1_driver_sendNACK 1F82                      ?i1_do_I2C_SEND_STOP 0070  
                                memset@n 0022                                  memset@p 0025  
                 ?_rd1RegCompleteHandler 0029                                  initloop 10CE  
        __size_ofi1_i2c1_driver_sendNACK 0004                                _OLED_Data 1068  
                       ?_i2c_masterWrite 0070                   ?_wr1RegCompleteHandler 0029  
           __end_of_i2c1_driver_resetBus 1F22                           ?i1_setCallBack 0070  
                __end_of_OLED_PutPicture 1615                        __end_of_rtcc_read 1068  
                       ?i1_i2c_setBuffer 0070          __size_ofi1_i2c1_driver_resetBus 0001  
                       ___aldiv@quotient 002B                     __end_of_rtc6_GetTime 0D8D  
              _do_I2C_SEND_RESTART_WRITE 1FF0                        ??_rtc6_Initialize 0033  
                  i1_do_I2C_SEND_RESTART 1F66         __end_ofi1_do_I2C_DO_ADDRESS_NACK 1346  
        __end_ofi1_do_I2C_SEND_ADR_WRITE 1FC9                    __CFG_WDTCPS$WDTCPS_31 0000  
                                strlen@s 0020                                i1_i2c_ISR 0800  
                   ??i1_do_I2C_SEND_STOP 0070                             _displayArray 21B1  
                   __end_of_rtc6_SetTime 0B89                               _returnStop 1F97  
        __end_of_rdBlkRegCompleteHandler 12A0                 __end_of_do_I2C_SEND_STOP 100D  
     __end_ofi1_do_I2C_SEND_RESTART_READ 1F62               i1_do_I2C_SEND_RESTART_READ 1F5E  
                             _rtcc_write 1182                  ??_i2c_read1ByteRegister 002B  
                   __size_ofi1_do_I2C_RX 003F                     __size_ofi1_do_I2C_TX 004B  
                         _months_to_days 12BF                               asctime@buf 012E  
   __size_of_i2c_setDataCompleteCallback 000D                            i1_returnReset 1F24  
                            returnStop@p 0029                         __CFG_FEXTOSC$OFF 0000  
               __end_of_mssp1_disableIRQ 1F44       __size_ofi1_rdBlkRegCompleteHandler 0018  
           i2c_setDataCompleteCallback@p 0027                       OLED_SetRow@address 0023  
                i1_rd2RegCompleteHandler 115F                         ?_OLED_Initialize 0070  
                             ?_OLED_Data 0070                  i1_wr2RegCompleteHandler 112C  
                  SPI2_Exchange8bit@data 0020            __size_of_do_I2C_SEND_ADR_READ 000C  
                       ??i1_do_I2C_RESET 0070                             ??_i2c_poller 0027  
                  __end_of_years_to_days 0AA4                              _do_I2C_IDLE 1037  
                       OLED_PutPicture@i 0028                         OLED_PutPicture@j 0026  
                            _do_I2C_RCEN 104A               __end_ofi1_i2c_restartWrite 0004  
                         __end_of___bmul 1182                           __end_of___lmul 14D1  
                          __pidataBIGRAM 025C                           __end_of___wmul 1283  
                             ?i1_i2c_ISR 0070                       _mssp1_IRQisEnabled 1FC9  
                 i1_i2c1_driver_sendNACK 1F5A                         ?i1_do_I2C_DO_ACK 0070  
                         __end_of_gmtime 1000                   ?_OSCILLATOR_Initialize 0070  
                         __end_of_memset 1267                           __end_of_isleap 1537  
                 __end_of_months_to_days 12DE                          _SPI2_Initialize 1F91  
                         __end_of_mktime 0EAE             __size_of_do_I2C_DO_NACK_STOP 0008  
                         __end_of_lookup 0612                          ymd_to_scalar@mo 0042  
                        ymd_to_scalar@yr 0040                       _mssp1_waitForEvent 1088  
                 i1_i2c1_driver_resetBus 1F20                           __end_of_strlen 12BF  
                ?_do_I2C_DO_NACK_RESTART 0070                      start_initialization 0024  
                              _i2c_close 1231                      _i2c_busCollisionISR 1F29  
        __size_of_PIN_MANAGER_Initialize 0042                      ?_mssp1_IRQisEnabled 0070  
                         ?i1_returnReset 0021                 ?i1_i2c1_driver_getRXData 0070  
    __end_ofi1_do_I2C_SEND_RESTART_WRITE 1F66              i1_do_I2C_SEND_RESTART_WRITE 1F62  
                    ?_mssp1_waitForEvent 0070                             setCallBack@p 0022  
                     __end_of_i2c_poller 109E             __size_of_i2c1_driver_sendACK 0004  
                        i2c_open@address 0023                  i2c_setBuffer@bufferSize 0020  
                ??_i2c1_driver_getRXData 0020                        _rtc6_GetComponent 12DE  
                 rd1RegCompleteHandler@p 0029             __size_of_i2c1_driver_restart 0003  
                        ??i1_setCallBack 0073             __size_of_i2c1_driver_startRX 0003  
                           ?_Modify_Data 0026                       ?_rtc6_GetComponent 0033  
                  __end_of_i2c_setBuffer 11AA                        __size_of_i2c_open 004E  
  __end_ofi1_i2c_setDataCompleteCallback 10E6   __size_ofi1_i2c_setDataCompleteCallback 000D  
          i1_i2c_setDataCompleteCallback 10D9                         ?_OLED_PutPicture 0024  
                   ?_i2c_busCollisionISR 0070                         __CFG_LPBOREN$OFF 0000  
                   __end_of_mssp1_setIRQ 1F56                     ??_mssp1_IRQisEnabled 0020  
                       i1setCallBack@idx 0074                    __size_of_OLED_Command 000A  
                               ??___bmul 0021                         ??_PMD_Initialize 0020  
                  __end_ofi1_do_I2C_IDLE 1005                                 ??___lmul 0028  
           i2c_read1ByteRegister@address 002C                    __end_ofi1_do_I2C_RCEN 1F91  
              i1i2c_setBuffer@bufferSize 0070                                 ??___wmul 0024  
                 ?i1_do_I2C_SEND_RESTART 0070                      ??_rtc6_GetComponent 0034  
                   ??_mssp1_waitForEvent 0020                         i1_mssp1_clearIRQ 1F3B  
                 wr1RegCompleteHandler@p 0029                            ?_do_I2C_RESET 0070  
                           ??_SetupClock 0054                                 ??_gmtime 0038  
                               ??_memset 0024                                 ??_isleap 0036  
              _do_I2C_TX_EMPTY$intlevel0 1448                                 ??_mktime 0054  
                            ?_returnStop 0029                  ??_i2c1_driver_setI2cISR 0022  
                               ??_strlen 0022           __end_of_do_I2C_DO_NACK_RESTART 1025  
                            ?_rtcc_write 002E                          ?_months_to_days 002E  
                             localtime@t 0047                     _i2c1_driver_sendNACK 1F7E  
                            __pbssBIGRAM 238C                 i1_do_I2C_DO_ADDRESS_NACK 1322  
                          ??_OLED_SetRow 0022                              __pbssCOMMON 0078  
                             ?_i2c_close 0070                                ___latbits 0002  
                   _i2c1_driver_resetBus 1F21                            __pcstackBANK0 0020  
                          __pcstackBANK1 00D3        __size_ofi1_do_I2C_DO_NACK_RESTART 0004  
               i1rd2RegCompleteHandler@p 0021                                _do_I2C_RX 16DB  
              ?i1_do_I2C_DO_NACK_RESTART 0070                                _do_I2C_TX 0874  
                          ?_Write_String 0053                  ??i1_do_I2C_DO_NACK_STOP 0070  
                           _isdigit$2049 0020                ??i1_rd2RegCompleteHandler 0078  
              __end_of_rtc6_GetComponent 12FE                           _OLED_SetColumn 1202  
         __size_of_do_I2C_SEND_ADR_WRITE 000B                ??i1_wr2RegCompleteHandler 0078  
          __size_ofi1_i2c1_driver_TXData 0005            __end_of_do_I2C_SEND_ADR_WRITE 1088  
                         i1setCallBack@p 0072                         _i2c_restartWrite 1FA3  
                            sprintf@flag 004F               _i2c_restartWrite$intlevel0 1FA7  
                           _OLED_Command 1040                __size_of_i2c1_driver_open 000A  
                     __end_of_SetupClock 13EA                __size_of_i2c1_driver_stop 0003  
                            sprintf@prec 004A                                 ?_i2c_ISR 0070  
        _do_I2C_SEND_ADR_WRITE$intlevel0 1081         __size_ofi1_do_I2C_SEND_ADR_WRITE 0007  
                            ??_OLED_Data 0021                          _do_I2C_TX_EMPTY 1444  
                          ??_setCallBack 0023                    __size_of_rtc6_GetTime 0085  
                  OLED_SetColumn@address 0023                 i1wr2RegCompleteHandler@p 0021  
                ??i1_i2c1_driver_sendACK 0070                    _rd2RegCompleteHandler 11EC  
                  ??_i2c_busCollisionISR 0070                    __end_of_fsmStateTable 1820  
          __size_ofi1_i2c1_driver_isNACK 0008                         ___lwdiv@dividend 0028  
                 _PIN_MANAGER_Initialize 1654                    _wr2RegCompleteHandler 11AA  
                ??i1_i2c1_driver_restart 0070                  ??i1_i2c1_driver_startRX 0070  
                  __size_of_rtc6_SetTime 0074                                 ?___aldiv 0020  
                __end_of_SPI2_Initialize 1F97                                 ?___almod 0020  
                         ??_do_I2C_RESET 0020                                 ?___awdiv 0020  
                              __ptext100 1F3B                                __ptext101 1615  
                              __ptext110 1F6A                                __ptext102 1767  
                              __ptext111 1F66                                __ptext103 1322  
                              __ptext120 1F35                                __ptext112 1F62  
                              __ptext104 1F76                                __ptext121 1F5A  
                              __ptext113 1F5E                                __ptext105 1F72  
                              __ptext130 1F22                                __ptext122 1F20  
                              __ptext114 1000                                __ptext106 1F6E  
                              __ptext131 112C                                __ptext123 1F32  
                              __ptext115 1FBB                                __ptext107 1F8B  
                              __ptext132 10D9                                __ptext124 1219  
                              __ptext116 136B                                __ptext108 1FC2  
                              __ptext133 12FE                                __ptext125 115F  
                              __ptext117 1F38                                __ptext109 1FD8  
                              __ptext134 1100                                __ptext126 114E  
                              __ptext118 1FD0                                __ptext135 1F2F  
                              __ptext127 113D                                __ptext119 1F86  
                              __ptext136 1F2C                                __ptext128 0002  
                              __ptext137 1F56                                __ptext129 1F24  
                              __ptext138 1F29                                __ptext139 1F26  
                               ?___awmod 0020              __end_of_i2c_masterOperation 0800  
                               ?___lwdiv 0026                 ??_do_I2C_DO_ADDRESS_NACK 0020  
                               ?___lwmod 002E              _i2c1_driver_busCollisionISR 007C  
                      SetupClock@setTime 0055                    __end_of_do_I2C_DO_ACK 1015  
                            ??i1_i2c_ISR 0074             ??_INTERRUPT_InterruptManager 0077  
                       ___almod@dividend 0024               ??_do_I2C_SEND_RESTART_READ 0020  
                  ?_i2c1_driver_sendNACK 0070          __end_ofi1_i2c1_driver_getRXData 1F38  
               ??i1_do_I2C_SEND_ADR_READ 0071                         ??_mssp1_clearIRQ 0020  
                        ??i1_returnReset 0078                                 ?_isdigit 0070  
                  ?_i2c1_driver_resetBus 0070                 ?i1_rd1RegCompleteHandler 0021  
     __size_of_do_I2C_SEND_RESTART_WRITE 0008                           ??_Write_String 0055  
               ?i1_wr1RegCompleteHandler 0021                               ?_do_I2C_RX 0070  
                             ?_do_I2C_TX 0070                         ___lwdiv@quotient 002C  
                 __end_of_OLED_SetColumn 1219                        _i2c1_driver_start 1F44  
                               ?_sprintf 0034                             _rtc6_GetTime 0D08  
                         __size_of_dylen 0037                  ??_rd1RegCompleteHandler 002A  
                              _localtime 1696                  __size_ofi1_mssp1_setIRQ 0003  
                      _i2c_ISR$intlevel0 13EE                       ?_i2c1_driver_start 0070  
                    __end_of_OLED_SetRow 10A9                    __end_of_ymd_to_scalar 096D  
                ??_wr1RegCompleteHandler 002A                          ___aldiv@divisor 0020  
                        ___aldiv@counter 0029                           ___wmul@product 0024  
                           _rtc6_SetTime 0B15                   i2c_read1ByteRegister@e 002D  
                               _LATAbits 0016                   i2c_read1ByteRegister@x 002E  
                               _LATCbits 0018                                 _LATDbits 0019  
                        _rtc6_Initialize 096D                      __size_of_returnStop 0006  
                              clear_ram0 10C1                                 _PIE3bits 0719  
                    __size_of_rtcc_write 0013                      ??_i2c1_driver_start 0020  
    __size_of_INTERRUPT_InterruptManager 001E                                 _PIR3bits 070F  
                               _SSP1CON1 0190                                 _SSP1CON2 0191  
                               _SSP2CON1 019A                                _time_zone 0078  
           ?_i2c_setDataCompleteCallback 0025           ?i1_i2c_setDataCompleteCallback 0075  
                              _rtcc_read 105E                                 _SSP1STAT 018F  
                               _SSP2STAT 0199                      __end_of_setCallBack 136B  
             __end_ofi1_i2c1_driver_stop 1F32                        ___wmul@multiplier 0020  
           i2c_setAddressNACKCallback@cb 0025                          Write_String@len 0055  
                      ?_do_I2C_SEND_STOP 0070              ?i1_do_I2C_SEND_RESTART_READ 0070  
                         _CharacterArray 238C                              ??_i2c_close 0020  
              __end_of_i2c1_driver_start 1F47                            ??_returnReset 002A  
                     ??_do_I2C_SEND_STOP 0020              __size_of_i2c1_driver_TXData 0006  
         __size_of_i2c_read1ByteRegister 004E             ??_i2c_setAddressNACKCallback 0028  
          __end_of_i2c_read1ByteRegister 0874        __end_of_do_I2C_SEND_RESTART_WRITE 1FF8  
                  SetupClock@initialTime 0059                        Modify_Data@offset 0028  
                __end_of_do_I2C_TX_EMPTY 1472                          ?_OLED_SetColumn 0070  
             __size_of_rtc6_GetComponent 0020                        ___lmul@multiplier 0020  
                  rtc6_GetComponent@mask 0033                    rtc6_SetComponent@mask 0033  
                             ?_localtime 0070                 ?_rdBlkRegCompleteHandler 0029  
                  rtc6_SetComponent@time 0034                        ?_mssp1_disableIRQ 0070  
           __size_of_do_I2C_SEND_RESTART 0008              __size_of_i2c1_driver_isNACK 0009  
                _do_I2C_DO_ACK$intlevel0 1011                                 _i2c_open 17B2  
                          ?i1_returnStop 0021                    __size_of_mssp1_setIRQ 0003  
                       rtc6_GetTime@tm_t 00D3                       ??_mssp1_disableIRQ 0020  
                 ?_rd2RegCompleteHandler 0029                      _do_I2C_DO_NACK_STOP 1015  
                       __size_of_i2c_ISR 002D                   ?_wr2RegCompleteHandler 0029  
        _wr2RegCompleteHandler$intlevel0 11AE          _rd2RegCompleteHandler$intlevel0 11F0  
                              gmtime@tim 00C1                     __size_of_Modify_Data 0071  
                           ?_do_I2C_IDLE 0070                             ?_do_I2C_RCEN 0070  
                       ?_SPI2_Initialize 0070                  ?i1_i2c1_driver_sendNACK 0070  
                ??_OSCILLATOR_Initialize 0020                               ?_rtcc_read 0070  
                       __size_of___aldiv 0082                         __size_of___almod 006E  
                    _i2c1_driver_sendACK 1F7A                 __size_of_i2c_masterWrite 0004  
                       __size_of___awdiv 0052                         __size_of___awmod 0046  
        __size_of_do_I2C_DO_ADDRESS_NACK 002A                      i2c1_driver_TXData@d 0020  
                  i1i2c_setBuffer@buffer 0073                         __size_of___lwdiv 0035  
                 ??_i2c1_driver_sendNACK 0020                         __size_of___lwmod 002D  
          ??_i2c_setDataCompleteCallback 0028          __end_ofi1_rd1RegCompleteHandler 115F  
                ?i1_i2c1_driver_resetBus 0070                 __size_ofi1_i2c_setBuffer 000E  
       ??_i2c1_driver_setBusCollisionISR 0022          ?_i2c1_driver_setBusCollisionISR 0020  
                          ??i1_do_I2C_RX 0070                            ??i1_do_I2C_TX 0071  
     _do_I2C_SEND_RESTART_READ$intlevel0 1FEC                      _i2c1_driver_restart 1F47  
            __size_ofi1_do_I2C_SEND_STOP 0004          __end_ofi1_wr1RegCompleteHandler 114E  
                   ?_do_I2C_DO_NACK_STOP 0070                      _i2c1_driver_startRX 1F4D  
           __end_of_do_I2C_SEND_ADR_READ 10C1                   ??_i2c1_driver_resetBus 0020  
                            _isleap$2117 0038          __size_ofi1_do_I2C_SEND_ADR_READ 0008  
                             sprintf@len 004B                               sprintf@val 004D  
                               _dateTime 0120                         __size_of_isdigit 000F  
                            _OLED_SetRow 109E                       i1_i2c_restartWrite 0002  
                        ___lwdiv@divisor 0026                             _mssp1_setIRQ 1F53  
                            ??_do_I2C_RX 0020                              ??_do_I2C_TX 0021  
                     __end_of_emptyArray 0237                          ___lwdiv@counter 002B  
                               __ptext10 12A0                                 __ptext11 0612  
                               __ptext20 13BF                                 __ptext12 111D  
                               __ptext21 0B15                                 __ptext13 1537  
                               __ptext30 09C6                                 __ptext22 15A3  
                               __ptext14 15DC                                 __ptext31 0C03  
                               __ptext23 08C4                                 __ptext15 109E  
                               __ptext40 17B2                                 __ptext32 14A1  
                               __ptext24 124C                                 __ptext16 1202  
                               __ptext41 1FB5                                 __ptext33 110E  
                               __ptext25 1696                                 __ptext17 1068  
                               __ptext50 16DB                                 __ptext42 1FAF  
                               __ptext34 096D                                 __ptext26 0EAE  
                               __ptext18 0AA4                                 __ptext51 0874  
                               __ptext43 1054                                 __ptext35 1182  
                               __ptext27 156C                                 __ptext19 1267  
                               __ptext60 1FF8                                 __ptext52 1395  
                               __ptext44 1F82                                 __ptext36 14D1  
                               __ptext28 1417                                 __ptext61 1FF0  
                               __ptext53 101D                                 __ptext45 07DC  
                               __ptext37 105E                                 __ptext29 1721  
                               __ptext70 1F7E                                 __ptext62 1FE8  
                               __ptext54 1015                                 __ptext46 1FC9  
                               __ptext38 0826                                 __ptext71 1F21  
                               __ptext63 1037                                 __ptext55 100D  
                               __ptext47 1093                                 __ptext39 10F3  
                               __ptext80 11AA                                 __ptext72 1F4D  
                               __ptext64 1072                                 __ptext56 104A  
                               __ptext48 1088                                 __ptext81 10E6  
                               __ptext73 1283                                 __ptext65 1444  
                               __ptext57 107D                                 __ptext49 13EA  
                               __ptext90 1F3E                                 __ptext82 1346  
                               __ptext74 11EC                                 __ptext66 1F53  
                               __ptext58 10B5                                 __ptext91 1F91  
                               __ptext83 1195                                 __ptext75 11D6  
                               __ptext67 102E                                 __ptext59 1005  
                               __ptext92 1FE0                                 __ptext84 1F4A  
                               __ptext76 11C0                                 __ptext68 1FA9  
                               __ptext93 1654                                 __ptext85 1F47  
                               __ptext77 1FA3                                 __ptext69 1F50  
                               __ptext94 1025                                 __ptext86 1F7A  
                               __ptext78 1F9D                                 __ptext95 0B89  
                               __ptext87 1F44                                 __ptext79 1F97  
                               __ptext96 1040                                 __ptext88 1231  
                               __ptext97 10A9                                 __ptext89 1F41  
                               __ptext99 0800                             _SSP1CON1bits 0190  
                           _SSP1CON2bits 0191                  __end_of_rtc6_Initialize 09C6  
               __end_ofi1_mssp1_clearIRQ 1F3E                             _SSP2CON1bits 019A  
                   ?_i2c1_driver_sendACK 0070                     __end_of_do_I2C_RESET 107D  
                        ___almod@divisor 0020                         __size_of_sprintf 01CA  
                        ___almod@counter 0029                 ??_i2c_write1ByteRegister 002C  
                         ??i1_returnStop 0078                            OLED_Data@temp 0021  
                i1_do_I2C_SEND_ADR_WRITE 1FC2                      ?i1_i2c_restartWrite 0021  
                   ?_i2c1_driver_restart 0070                      __end_of_returnReset 1FA3  
                       _i2c1_driver_open 1054                         _i2c1_driver_stop 1F4A  
                          __size_of_main 0083                     ?_i2c1_driver_startRX 0070  
         __size_of_i2c1_driver_getRXData 0003            __end_of_i2c1_driver_getRXData 1F53  
                   __CFG_WDTCWS$WDTCWS_7 0000                              _setCallBack 1346  
                ??i1_do_I2C_SEND_RESTART 0070         __size_ofi1_i2c1_driver_getRXData 0003  
                i2c_masterOperation@read 0028     __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004  
         __end_ofi1_i2c1_driver_sendNACK 1F5E                     __end_of_Write_String 14A1  
                               _timezone 00BD                                 int$flags 007E  
             ??i1_do_I2C_DO_ADDRESS_NACK 0070                 __size_of_OLED_Initialize 007A  
                       ??_months_to_days 0030         __end_ofi1_do_I2C_DO_NACK_RESTART 1F7A  
         __end_ofi1_i2c1_driver_resetBus 1F21       __end_of_INTERRUPT_InterruptManager 0022  
             _INTERRUPT_InterruptManager 0004                             _SSP1STATbits 018F  
                   ??i1_i2c_restartWrite 0078                                 main@tm_t 00E5  
       __end_of_do_I2C_SEND_RESTART_READ 1FF0                 i2c_read1ByteRegister@reg 002A  
                           ??_returnStop 002A                 __end_of_i2c_restartWrite 1FA9  
                           _SSP2STATbits 0199                         Modify_Data@limit 002A  
                  ??_do_I2C_DO_NACK_STOP 0020                         Modify_Data@right 0035  
                           ??_rtcc_write 002F                       _ymd_to_scalar$2129 004A  
              mssp1_waitForEvent@timeout 0020           __size_of_i2c1_driver_setI2cISR 0006  
          __end_of_i2c1_driver_setI2cISR 1FBB                               _INTCONbits 000B  
             __size_of_i2c1_driver_start 0003                                 gmtime@tc 003B  
                               gmtime@tp 003A                      __end_ofi1_do_I2C_RX 1654  
                    __end_ofi1_do_I2C_TX 17B2                                 isdigit@c 0021  
                               memset@p1 0026                 __size_ofi1_do_I2C_DO_ACK 0004  
                 __size_of_years_to_days 0070                    ??_i2c1_driver_sendACK 0020  
                               isleap@yr 0034                         ?_do_I2C_TX_EMPTY 0070  
                         i1_mssp1_setIRQ 1F38                              ??_localtime 003F  
                 _do_I2C_DO_ADDRESS_NACK 1395           __size_ofi1_do_I2C_DO_NACK_STOP 0004  
                               intlevel1 0000            __end_ofi1_do_I2C_DO_NACK_STOP 1F76  
                              sprintf@ap 0048                   _do_I2C_RESET$intlevel0 1076  
                              sprintf@cp 0049                                sprintf@sp 0034  
                  ??_i2c1_driver_restart 0020                   rd2RegCompleteHandler@p 0029  
                  ??_i2c1_driver_startRX 0020                         ___lwmod@dividend 0030  
                               mktime@tt 005A                  ?_PIN_MANAGER_Initialize 0070  
                      i2c_restartWrite@p 0029                   i1_do_I2C_SEND_ADR_READ 1FD8  
                      __CFG_CLKOUTEN$OFF 0000               ?i1_rdBlkRegCompleteHandler 0021  
                     __end_of_returnStop 1F9D                    __end_ofi1_setCallBack 1322  
                    ymd_to_scalar@scalar 004C                       __end_of_rtcc_write 1195  
    __size_ofi1_do_I2C_SEND_RESTART_READ 0004           __size_ofi1_i2c1_driver_sendACK 0004  
          __end_ofi1_i2c1_driver_sendACK 1F5A              __size_of_mssp1_IRQisEnabled 0007  
         __size_ofi1_i2c1_driver_restart 0003            __end_ofi1_i2c1_driver_restart 1F2F  
                 wr2RegCompleteHandler@p 0029                              ??_rtcc_read 0031  
            __size_of_mssp1_waitForEvent 000B           __size_ofi1_i2c1_driver_startRX 0003  
           __end_ofi1_i2c1_driver_TXData 1F8B            __end_ofi1_i2c1_driver_startRX 1F35  
               __size_of_OLED_PutPicture 0039                            __pstringtext1 0437  
                          __pstringtext2 1800                            __pstringtext3 1855  
                          __pstringtext4 1861                            __pstringtext5 005C  
                          __pstringtext6 1820                            __pstringtext7 183F  
                          __pstringtext8 0000                  __size_ofi1_do_I2C_RESET 0007  
                               sprintf@c 0052                                 sprintf@f 0036  
           __end_ofi1_i2c1_driver_isNACK 1FD8                          ___lwmod@divisor 002E  
                               strlen@cp 0024                        ??_i2c_masterWrite 002A  
     __end_of_i2c_setAddressNACKCallback 1100               _i2c_setAddressNACKCallback 10F3  
                        ___lwmod@counter 0033                   __size_of_i2c_setBuffer 0015  
                           ___aldiv@sign 002A                   __end_ofi1_mssp1_setIRQ 1F3B  
                      ??i1_i2c_setBuffer 0072                              _returnReset 1F9D  
       _do_I2C_DO_NACK_RESTART$intlevel0 1021                ??i1_do_I2C_SEND_ADR_WRITE 0071  
                       ?_rtc6_Initialize 0070                   __size_ofi1_do_I2C_IDLE 0005  
                 __size_ofi1_do_I2C_RCEN 0006           __end_of_PIN_MANAGER_Initialize 1696  
            __end_of_i2c_busCollisionISR 1F2C                             ___almod@sign 002A  
         __size_of_rd1RegCompleteHandler 0016          __size_of_i2c_write1ByteRegister 0032  
          __end_of_rd1RegCompleteHandler 11EC                rtc6_SetComponent@inMemory 003B  
         __size_of_wr1RegCompleteHandler 0016                        _rtc6_SetComponent 15A3  
       __size_ofi1_rd1RegCompleteHandler 0011            __end_of_wr1RegCompleteHandler 11D6  
                  _do_I2C_SEND_ADR_WRITE 107D                     _do_I2C_SEND_ADR_READ 10B5  
      __end_ofi1_rdBlkRegCompleteHandler 1231         __size_ofi1_wr1RegCompleteHandler 0011  
                     ?_rtc6_SetComponent 0033                rtc6_GetComponent@location 0037  
