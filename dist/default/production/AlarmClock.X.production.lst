

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Aug 27 17:48:43 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBIGRAM,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text84,local,class=CODE,merge=1,delta=2
   110                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text87,local,class=CODE,merge=1,delta=2
   113                           	psect	text88,local,class=CODE,merge=1,delta=2
   114                           	psect	text89,local,class=CODE,merge=1,delta=2
   115                           	psect	text90,local,class=CODE,merge=1,delta=2
   116                           	psect	text91,local,class=CODE,merge=1,delta=2
   117                           	psect	text92,local,class=CODE,merge=1,delta=2
   118                           	psect	text93,local,class=CODE,merge=1,delta=2
   119                           	psect	text94,local,class=CODE,merge=1,delta=2
   120                           	psect	text95,local,class=CODE,merge=1,delta=2
   121                           	psect	text96,local,class=CODE,merge=1,delta=2
   122                           	psect	text97,local,class=CODE,merge=1,delta=2
   123                           	psect	text98,local,class=CODE,merge=1,delta=2
   124                           	psect	intentry,global,class=CODE,delta=2
   125                           	psect	text100,local,class=CODE,merge=1,delta=2
   126                           	psect	text101,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	text102,local,class=CODE,merge=1,delta=2
   128                           	psect	text103,local,class=CODE,merge=1,delta=2
   129                           	psect	text104,local,class=CODE,merge=1,delta=2
   130                           	psect	text105,local,class=CODE,merge=1,delta=2
   131                           	psect	text106,local,class=CODE,merge=1,delta=2
   132                           	psect	text107,local,class=CODE,merge=1,delta=2
   133                           	psect	text108,local,class=CODE,merge=1,delta=2
   134                           	psect	text109,local,class=CODE,merge=1,delta=2
   135                           	psect	text110,local,class=CODE,merge=1,delta=2
   136                           	psect	text111,local,class=CODE,merge=1,delta=2
   137                           	psect	text112,local,class=CODE,merge=1,delta=2
   138                           	psect	text113,local,class=CODE,merge=1,delta=2
   139                           	psect	text114,local,class=CODE,merge=1,delta=2
   140                           	psect	text115,local,class=CODE,merge=1,delta=2
   141                           	psect	text116,local,class=CODE,merge=1,delta=2
   142                           	psect	text117,local,class=CODE,merge=1,delta=2
   143                           	psect	text118,local,class=CODE,merge=1,inline,delta=2
   144                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   145                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   146                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   147                           	psect	text122,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text123,local,class=CODE,merge=1,inline,delta=2
   149                           	psect	text124,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text125,local,class=CODE,merge=1,delta=2
   151                           	psect	text126,local,class=CODE,merge=1,delta=2
   152                           	psect	text127,local,class=CODE,merge=1,delta=2
   153                           	psect	text128,local,class=CODE,merge=1,delta=2
   154                           	psect	text129,local,class=CODE,merge=1,delta=2
   155                           	psect	text130,local,class=CODE,merge=1,delta=2
   156                           	psect	text131,local,class=CODE,merge=1,delta=2
   157                           	psect	text132,local,class=CODE,merge=1,delta=2
   158                           	psect	text133,local,class=CODE,merge=1,delta=2
   159                           	psect	text134,local,class=CODE,merge=1,delta=2
   160                           	psect	text135,local,class=CODE,merge=1,delta=2
   161                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   162                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   163                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   164                           	psect	text139,local,class=CODE,merge=1,delta=2
   165                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   166                           	dabs	1,0x620,48
   167                           	dabs	1,0x5BC,52
   168                           	dabs	1,0x5A0,28
   169                           	dabs	1,0x520,80
   170                           	dabs	1,0x4A0,80
   171                           	dabs	1,0x420,80
   172                           	dabs	1,0x3A0,80
   173                           	dabs	1,0x320,80
   174                           	dabs	1,0x2C1,47
   175                           	dabs	1,0x238C,0,_CharacterArray
   176                           	dabs	1,0x21B1,0,_displayArray
   177                           	dabs	1,0x7E,2
   178  0000                     
   179                           ; Version 1.45
   180                           ; Generated 16/11/2017 GMT
   181                           ; 
   182                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   183                           ; All rights reserved.
   184                           ; 
   185                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   186                           ; 
   187                           ; Redistribution and use in source and binary forms, with or without modification, are
   188                           ; permitted provided that the following conditions are met:
   189                           ; 
   190                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   191                           ;        conditions and the following disclaimer.
   192                           ; 
   193                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   194                           ;        of conditions and the following disclaimer in the documentation and/or other
   195                           ;        materials provided with the distribution.
   196                           ; 
   197                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   198                           ;        software without specific prior written permission.
   199                           ; 
   200                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   201                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   202                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   203                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   204                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   205                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   206                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   207                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   208                           ; 
   209                           ; 
   210                           ; Code-generator required, PIC16F18875 Definitions
   211                           ; 
   212                           ; SFR Addresses
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001C                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  008C                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  010E                     	;# 
   270  010E                     	;# 
   271  010F                     	;# 
   272  0110                     	;# 
   273  0110                     	;# 
   274  0111                     	;# 
   275  0112                     	;# 
   276  0112                     	;# 
   277  0113                     	;# 
   278  0114                     	;# 
   279  0114                     	;# 
   280  0115                     	;# 
   281  0116                     	;# 
   282  0116                     	;# 
   283  0117                     	;# 
   284  0119                     	;# 
   285  0119                     	;# 
   286  0119                     	;# 
   287  011A                     	;# 
   288  011A                     	;# 
   289  011A                     	;# 
   290  011B                     	;# 
   291  011B                     	;# 
   292  011B                     	;# 
   293  011B                     	;# 
   294  011B                     	;# 
   295  011C                     	;# 
   296  011C                     	;# 
   297  011C                     	;# 
   298  011D                     	;# 
   299  011D                     	;# 
   300  011D                     	;# 
   301  011E                     	;# 
   302  011E                     	;# 
   303  011E                     	;# 
   304  011F                     	;# 
   305  011F                     	;# 
   306  011F                     	;# 
   307  011F                     	;# 
   308  011F                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  018E                     	;# 
   312  018F                     	;# 
   313  0190                     	;# 
   314  0191                     	;# 
   315  0192                     	;# 
   316  0196                     	;# 
   317  0197                     	;# 
   318  0198                     	;# 
   319  0199                     	;# 
   320  019A                     	;# 
   321  019B                     	;# 
   322  019C                     	;# 
   323  020C                     	;# 
   324  020C                     	;# 
   325  020D                     	;# 
   326  020E                     	;# 
   327  020F                     	;# 
   328  020F                     	;# 
   329  0210                     	;# 
   330  0210                     	;# 
   331  0211                     	;# 
   332  0211                     	;# 
   333  0212                     	;# 
   334  0212                     	;# 
   335  0213                     	;# 
   336  0214                     	;# 
   337  0215                     	;# 
   338  0215                     	;# 
   339  0216                     	;# 
   340  0216                     	;# 
   341  0217                     	;# 
   342  0217                     	;# 
   343  0218                     	;# 
   344  0218                     	;# 
   345  0219                     	;# 
   346  021A                     	;# 
   347  021B                     	;# 
   348  021B                     	;# 
   349  021C                     	;# 
   350  021C                     	;# 
   351  021D                     	;# 
   352  021D                     	;# 
   353  021E                     	;# 
   354  021F                     	;# 
   355  028C                     	;# 
   356  028C                     	;# 
   357  028D                     	;# 
   358  028D                     	;# 
   359  028E                     	;# 
   360  028F                     	;# 
   361  0290                     	;# 
   362  0290                     	;# 
   363  0291                     	;# 
   364  0292                     	;# 
   365  0292                     	;# 
   366  0293                     	;# 
   367  0293                     	;# 
   368  0294                     	;# 
   369  0295                     	;# 
   370  0296                     	;# 
   371  0296                     	;# 
   372  0297                     	;# 
   373  0298                     	;# 
   374  0298                     	;# 
   375  0299                     	;# 
   376  0299                     	;# 
   377  029A                     	;# 
   378  029B                     	;# 
   379  029C                     	;# 
   380  029C                     	;# 
   381  029D                     	;# 
   382  030C                     	;# 
   383  030C                     	;# 
   384  030D                     	;# 
   385  030E                     	;# 
   386  030F                     	;# 
   387  0310                     	;# 
   388  0310                     	;# 
   389  0311                     	;# 
   390  0312                     	;# 
   391  0313                     	;# 
   392  0314                     	;# 
   393  0314                     	;# 
   394  0315                     	;# 
   395  0316                     	;# 
   396  0317                     	;# 
   397  0318                     	;# 
   398  0318                     	;# 
   399  0319                     	;# 
   400  031A                     	;# 
   401  031B                     	;# 
   402  031C                     	;# 
   403  031C                     	;# 
   404  031D                     	;# 
   405  031E                     	;# 
   406  031F                     	;# 
   407  038C                     	;# 
   408  038D                     	;# 
   409  038E                     	;# 
   410  0390                     	;# 
   411  0391                     	;# 
   412  0392                     	;# 
   413  040C                     	;# 
   414  040D                     	;# 
   415  040E                     	;# 
   416  040F                     	;# 
   417  0410                     	;# 
   418  0411                     	;# 
   419  0416                     	;# 
   420  0416                     	;# 
   421  0417                     	;# 
   422  0418                     	;# 
   423  0418                     	;# 
   424  0419                     	;# 
   425  041A                     	;# 
   426  041A                     	;# 
   427  041B                     	;# 
   428  041C                     	;# 
   429  041C                     	;# 
   430  041D                     	;# 
   431  041E                     	;# 
   432  041F                     	;# 
   433  048C                     	;# 
   434  048C                     	;# 
   435  048D                     	;# 
   436  048E                     	;# 
   437  048F                     	;# 
   438  048F                     	;# 
   439  0490                     	;# 
   440  0491                     	;# 
   441  0492                     	;# 
   442  0492                     	;# 
   443  0493                     	;# 
   444  0494                     	;# 
   445  0495                     	;# 
   446  0495                     	;# 
   447  0496                     	;# 
   448  0497                     	;# 
   449  0498                     	;# 
   450  0499                     	;# 
   451  049A                     	;# 
   452  049B                     	;# 
   453  049C                     	;# 
   454  049D                     	;# 
   455  050C                     	;# 
   456  050C                     	;# 
   457  050D                     	;# 
   458  050E                     	;# 
   459  050F                     	;# 
   460  050F                     	;# 
   461  0510                     	;# 
   462  0511                     	;# 
   463  0512                     	;# 
   464  0512                     	;# 
   465  0513                     	;# 
   466  0514                     	;# 
   467  0515                     	;# 
   468  0515                     	;# 
   469  0516                     	;# 
   470  0517                     	;# 
   471  0518                     	;# 
   472  0519                     	;# 
   473  051A                     	;# 
   474  051B                     	;# 
   475  051C                     	;# 
   476  051D                     	;# 
   477  058C                     	;# 
   478  058C                     	;# 
   479  058D                     	;# 
   480  058E                     	;# 
   481  058F                     	;# 
   482  058F                     	;# 
   483  0590                     	;# 
   484  0591                     	;# 
   485  0592                     	;# 
   486  0593                     	;# 
   487  060C                     	;# 
   488  060D                     	;# 
   489  060E                     	;# 
   490  060F                     	;# 
   491  0610                     	;# 
   492  0611                     	;# 
   493  0612                     	;# 
   494  0613                     	;# 
   495  0614                     	;# 
   496  0616                     	;# 
   497  0617                     	;# 
   498  0618                     	;# 
   499  0619                     	;# 
   500  061A                     	;# 
   501  061B                     	;# 
   502  061C                     	;# 
   503  061D                     	;# 
   504  061E                     	;# 
   505  068C                     	;# 
   506  068D                     	;# 
   507  068E                     	;# 
   508  068F                     	;# 
   509  0690                     	;# 
   510  0691                     	;# 
   511  0692                     	;# 
   512  0693                     	;# 
   513  0694                     	;# 
   514  070C                     	;# 
   515  070D                     	;# 
   516  070E                     	;# 
   517  070F                     	;# 
   518  0710                     	;# 
   519  0711                     	;# 
   520  0712                     	;# 
   521  0713                     	;# 
   522  0714                     	;# 
   523  0716                     	;# 
   524  0717                     	;# 
   525  0718                     	;# 
   526  0719                     	;# 
   527  071A                     	;# 
   528  071B                     	;# 
   529  071C                     	;# 
   530  071D                     	;# 
   531  071E                     	;# 
   532  0796                     	;# 
   533  0797                     	;# 
   534  0798                     	;# 
   535  0799                     	;# 
   536  079A                     	;# 
   537  079B                     	;# 
   538  080C                     	;# 
   539  080D                     	;# 
   540  080E                     	;# 
   541  080F                     	;# 
   542  0810                     	;# 
   543  0811                     	;# 
   544  0812                     	;# 
   545  0813                     	;# 
   546  0814                     	;# 
   547  081A                     	;# 
   548  081B                     	;# 
   549  081C                     	;# 
   550  081D                     	;# 
   551  081E                     	;# 
   552  081F                     	;# 
   553  088C                     	;# 
   554  088D                     	;# 
   555  088E                     	;# 
   556  088F                     	;# 
   557  0890                     	;# 
   558  0891                     	;# 
   559  0892                     	;# 
   560  0893                     	;# 
   561  0895                     	;# 
   562  0896                     	;# 
   563  0897                     	;# 
   564  0898                     	;# 
   565  0899                     	;# 
   566  089A                     	;# 
   567  089B                     	;# 
   568  090C                     	;# 
   569  090E                     	;# 
   570  090F                     	;# 
   571  091F                     	;# 
   572  091F                     	;# 
   573  098F                     	;# 
   574  098F                     	;# 
   575  0990                     	;# 
   576  0991                     	;# 
   577  0992                     	;# 
   578  0993                     	;# 
   579  0994                     	;# 
   580  0995                     	;# 
   581  0996                     	;# 
   582  0997                     	;# 
   583  0E0F                     	;# 
   584  0E10                     	;# 
   585  0E11                     	;# 
   586  0E12                     	;# 
   587  0E13                     	;# 
   588  0E14                     	;# 
   589  0E15                     	;# 
   590  0E16                     	;# 
   591  0E17                     	;# 
   592  0E18                     	;# 
   593  0E19                     	;# 
   594  0E1A                     	;# 
   595  0E1B                     	;# 
   596  0E1C                     	;# 
   597  0E1D                     	;# 
   598  0E1E                     	;# 
   599  0E1F                     	;# 
   600  0E20                     	;# 
   601  0E21                     	;# 
   602  0E22                     	;# 
   603  0E23                     	;# 
   604  0E24                     	;# 
   605  0E25                     	;# 
   606  0E26                     	;# 
   607  0E27                     	;# 
   608  0E28                     	;# 
   609  0E29                     	;# 
   610  0E2A                     	;# 
   611  0E2B                     	;# 
   612  0E2C                     	;# 
   613  0E2D                     	;# 
   614  0E2E                     	;# 
   615  0E2F                     	;# 
   616  0E30                     	;# 
   617  0E31                     	;# 
   618  0E32                     	;# 
   619  0E33                     	;# 
   620  0E34                     	;# 
   621  0E35                     	;# 
   622  0E36                     	;# 
   623  0E37                     	;# 
   624  0E8F                     	;# 
   625  0E90                     	;# 
   626  0E91                     	;# 
   627  0E92                     	;# 
   628  0E93                     	;# 
   629  0E94                     	;# 
   630  0E95                     	;# 
   631  0E96                     	;# 
   632  0E97                     	;# 
   633  0E9C                     	;# 
   634  0E9D                     	;# 
   635  0E9E                     	;# 
   636  0EA1                     	;# 
   637  0EA2                     	;# 
   638  0EA3                     	;# 
   639  0EA4                     	;# 
   640  0EA5                     	;# 
   641  0EA9                     	;# 
   642  0EAA                     	;# 
   643  0EAB                     	;# 
   644  0EAC                     	;# 
   645  0EB1                     	;# 
   646  0EB2                     	;# 
   647  0EB3                     	;# 
   648  0EB8                     	;# 
   649  0EB9                     	;# 
   650  0EBA                     	;# 
   651  0EBB                     	;# 
   652  0EBC                     	;# 
   653  0EBD                     	;# 
   654  0EBE                     	;# 
   655  0EC3                     	;# 
   656  0EC5                     	;# 
   657  0EC6                     	;# 
   658  0EC7                     	;# 
   659  0EC8                     	;# 
   660  0EC9                     	;# 
   661  0ECA                     	;# 
   662  0ECB                     	;# 
   663  0ECC                     	;# 
   664  0F10                     	;# 
   665  0F11                     	;# 
   666  0F12                     	;# 
   667  0F13                     	;# 
   668  0F14                     	;# 
   669  0F15                     	;# 
   670  0F16                     	;# 
   671  0F17                     	;# 
   672  0F18                     	;# 
   673  0F19                     	;# 
   674  0F1A                     	;# 
   675  0F1B                     	;# 
   676  0F1C                     	;# 
   677  0F1D                     	;# 
   678  0F1E                     	;# 
   679  0F1F                     	;# 
   680  0F20                     	;# 
   681  0F21                     	;# 
   682  0F22                     	;# 
   683  0F23                     	;# 
   684  0F24                     	;# 
   685  0F25                     	;# 
   686  0F26                     	;# 
   687  0F27                     	;# 
   688  0F28                     	;# 
   689  0F29                     	;# 
   690  0F2A                     	;# 
   691  0F2B                     	;# 
   692  0F2C                     	;# 
   693  0F2D                     	;# 
   694  0F2E                     	;# 
   695  0F2F                     	;# 
   696  0F30                     	;# 
   697  0F31                     	;# 
   698  0F32                     	;# 
   699  0F38                     	;# 
   700  0F39                     	;# 
   701  0F3A                     	;# 
   702  0F3B                     	;# 
   703  0F3C                     	;# 
   704  0F3D                     	;# 
   705  0F3E                     	;# 
   706  0F3F                     	;# 
   707  0F40                     	;# 
   708  0F41                     	;# 
   709  0F43                     	;# 
   710  0F44                     	;# 
   711  0F45                     	;# 
   712  0F46                     	;# 
   713  0F47                     	;# 
   714  0F48                     	;# 
   715  0F49                     	;# 
   716  0F4A                     	;# 
   717  0F4B                     	;# 
   718  0F4C                     	;# 
   719  0F4E                     	;# 
   720  0F4F                     	;# 
   721  0F50                     	;# 
   722  0F51                     	;# 
   723  0F52                     	;# 
   724  0F53                     	;# 
   725  0F54                     	;# 
   726  0F55                     	;# 
   727  0F56                     	;# 
   728  0F57                     	;# 
   729  0F59                     	;# 
   730  0F5A                     	;# 
   731  0F5B                     	;# 
   732  0F5C                     	;# 
   733  0F5D                     	;# 
   734  0F61                     	;# 
   735  0F62                     	;# 
   736  0F64                     	;# 
   737  0F65                     	;# 
   738  0F66                     	;# 
   739  0F67                     	;# 
   740  0F68                     	;# 
   741  0F69                     	;# 
   742  0F6A                     	;# 
   743  0F6B                     	;# 
   744  0F6C                     	;# 
   745  0F6D                     	;# 
   746  0FE4                     	;# 
   747  0FE5                     	;# 
   748  0FE6                     	;# 
   749  0FE7                     	;# 
   750  0FE8                     	;# 
   751  0FE9                     	;# 
   752  0FEA                     	;# 
   753  0FEB                     	;# 
   754  0FED                     	;# 
   755  0FEE                     	;# 
   756  0FEF                     	;# 
   757  0000                     	;# 
   758  0001                     	;# 
   759  0002                     	;# 
   760  0003                     	;# 
   761  0004                     	;# 
   762  0005                     	;# 
   763  0006                     	;# 
   764  0007                     	;# 
   765  0008                     	;# 
   766  0009                     	;# 
   767  000A                     	;# 
   768  000B                     	;# 
   769  000C                     	;# 
   770  000D                     	;# 
   771  000E                     	;# 
   772  000F                     	;# 
   773  0010                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0013                     	;# 
   777  0014                     	;# 
   778  0015                     	;# 
   779  0016                     	;# 
   780  0017                     	;# 
   781  0018                     	;# 
   782  0019                     	;# 
   783  001A                     	;# 
   784  001C                     	;# 
   785  001C                     	;# 
   786  001D                     	;# 
   787  001D                     	;# 
   788  001E                     	;# 
   789  001F                     	;# 
   790  008C                     	;# 
   791  008C                     	;# 
   792  008D                     	;# 
   793  008E                     	;# 
   794  008E                     	;# 
   795  008F                     	;# 
   796  0090                     	;# 
   797  0090                     	;# 
   798  0091                     	;# 
   799  0093                     	;# 
   800  0094                     	;# 
   801  0095                     	;# 
   802  0096                     	;# 
   803  0097                     	;# 
   804  0098                     	;# 
   805  0099                     	;# 
   806  009A                     	;# 
   807  009B                     	;# 
   808  009C                     	;# 
   809  009D                     	;# 
   810  009E                     	;# 
   811  010C                     	;# 
   812  010D                     	;# 
   813  010E                     	;# 
   814  010E                     	;# 
   815  010F                     	;# 
   816  0110                     	;# 
   817  0110                     	;# 
   818  0111                     	;# 
   819  0112                     	;# 
   820  0112                     	;# 
   821  0113                     	;# 
   822  0114                     	;# 
   823  0114                     	;# 
   824  0115                     	;# 
   825  0116                     	;# 
   826  0116                     	;# 
   827  0117                     	;# 
   828  0119                     	;# 
   829  0119                     	;# 
   830  0119                     	;# 
   831  011A                     	;# 
   832  011A                     	;# 
   833  011A                     	;# 
   834  011B                     	;# 
   835  011B                     	;# 
   836  011B                     	;# 
   837  011B                     	;# 
   838  011B                     	;# 
   839  011C                     	;# 
   840  011C                     	;# 
   841  011C                     	;# 
   842  011D                     	;# 
   843  011D                     	;# 
   844  011D                     	;# 
   845  011E                     	;# 
   846  011E                     	;# 
   847  011E                     	;# 
   848  011F                     	;# 
   849  011F                     	;# 
   850  011F                     	;# 
   851  011F                     	;# 
   852  011F                     	;# 
   853  018C                     	;# 
   854  018D                     	;# 
   855  018E                     	;# 
   856  018F                     	;# 
   857  0190                     	;# 
   858  0191                     	;# 
   859  0192                     	;# 
   860  0196                     	;# 
   861  0197                     	;# 
   862  0198                     	;# 
   863  0199                     	;# 
   864  019A                     	;# 
   865  019B                     	;# 
   866  019C                     	;# 
   867  020C                     	;# 
   868  020C                     	;# 
   869  020D                     	;# 
   870  020E                     	;# 
   871  020F                     	;# 
   872  020F                     	;# 
   873  0210                     	;# 
   874  0210                     	;# 
   875  0211                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0212                     	;# 
   879  0213                     	;# 
   880  0214                     	;# 
   881  0215                     	;# 
   882  0215                     	;# 
   883  0216                     	;# 
   884  0216                     	;# 
   885  0217                     	;# 
   886  0217                     	;# 
   887  0218                     	;# 
   888  0218                     	;# 
   889  0219                     	;# 
   890  021A                     	;# 
   891  021B                     	;# 
   892  021B                     	;# 
   893  021C                     	;# 
   894  021C                     	;# 
   895  021D                     	;# 
   896  021D                     	;# 
   897  021E                     	;# 
   898  021F                     	;# 
   899  028C                     	;# 
   900  028C                     	;# 
   901  028D                     	;# 
   902  028D                     	;# 
   903  028E                     	;# 
   904  028F                     	;# 
   905  0290                     	;# 
   906  0290                     	;# 
   907  0291                     	;# 
   908  0292                     	;# 
   909  0292                     	;# 
   910  0293                     	;# 
   911  0293                     	;# 
   912  0294                     	;# 
   913  0295                     	;# 
   914  0296                     	;# 
   915  0296                     	;# 
   916  0297                     	;# 
   917  0298                     	;# 
   918  0298                     	;# 
   919  0299                     	;# 
   920  0299                     	;# 
   921  029A                     	;# 
   922  029B                     	;# 
   923  029C                     	;# 
   924  029C                     	;# 
   925  029D                     	;# 
   926  030C                     	;# 
   927  030C                     	;# 
   928  030D                     	;# 
   929  030E                     	;# 
   930  030F                     	;# 
   931  0310                     	;# 
   932  0310                     	;# 
   933  0311                     	;# 
   934  0312                     	;# 
   935  0313                     	;# 
   936  0314                     	;# 
   937  0314                     	;# 
   938  0315                     	;# 
   939  0316                     	;# 
   940  0317                     	;# 
   941  0318                     	;# 
   942  0318                     	;# 
   943  0319                     	;# 
   944  031A                     	;# 
   945  031B                     	;# 
   946  031C                     	;# 
   947  031C                     	;# 
   948  031D                     	;# 
   949  031E                     	;# 
   950  031F                     	;# 
   951  038C                     	;# 
   952  038D                     	;# 
   953  038E                     	;# 
   954  0390                     	;# 
   955  0391                     	;# 
   956  0392                     	;# 
   957  040C                     	;# 
   958  040D                     	;# 
   959  040E                     	;# 
   960  040F                     	;# 
   961  0410                     	;# 
   962  0411                     	;# 
   963  0416                     	;# 
   964  0416                     	;# 
   965  0417                     	;# 
   966  0418                     	;# 
   967  0418                     	;# 
   968  0419                     	;# 
   969  041A                     	;# 
   970  041A                     	;# 
   971  041B                     	;# 
   972  041C                     	;# 
   973  041C                     	;# 
   974  041D                     	;# 
   975  041E                     	;# 
   976  041F                     	;# 
   977  048C                     	;# 
   978  048C                     	;# 
   979  048D                     	;# 
   980  048E                     	;# 
   981  048F                     	;# 
   982  048F                     	;# 
   983  0490                     	;# 
   984  0491                     	;# 
   985  0492                     	;# 
   986  0492                     	;# 
   987  0493                     	;# 
   988  0494                     	;# 
   989  0495                     	;# 
   990  0495                     	;# 
   991  0496                     	;# 
   992  0497                     	;# 
   993  0498                     	;# 
   994  0499                     	;# 
   995  049A                     	;# 
   996  049B                     	;# 
   997  049C                     	;# 
   998  049D                     	;# 
   999  050C                     	;# 
  1000  050C                     	;# 
  1001  050D                     	;# 
  1002  050E                     	;# 
  1003  050F                     	;# 
  1004  050F                     	;# 
  1005  0510                     	;# 
  1006  0511                     	;# 
  1007  0512                     	;# 
  1008  0512                     	;# 
  1009  0513                     	;# 
  1010  0514                     	;# 
  1011  0515                     	;# 
  1012  0515                     	;# 
  1013  0516                     	;# 
  1014  0517                     	;# 
  1015  0518                     	;# 
  1016  0519                     	;# 
  1017  051A                     	;# 
  1018  051B                     	;# 
  1019  051C                     	;# 
  1020  051D                     	;# 
  1021  058C                     	;# 
  1022  058C                     	;# 
  1023  058D                     	;# 
  1024  058E                     	;# 
  1025  058F                     	;# 
  1026  058F                     	;# 
  1027  0590                     	;# 
  1028  0591                     	;# 
  1029  0592                     	;# 
  1030  0593                     	;# 
  1031  060C                     	;# 
  1032  060D                     	;# 
  1033  060E                     	;# 
  1034  060F                     	;# 
  1035  0610                     	;# 
  1036  0611                     	;# 
  1037  0612                     	;# 
  1038  0613                     	;# 
  1039  0614                     	;# 
  1040  0616                     	;# 
  1041  0617                     	;# 
  1042  0618                     	;# 
  1043  0619                     	;# 
  1044  061A                     	;# 
  1045  061B                     	;# 
  1046  061C                     	;# 
  1047  061D                     	;# 
  1048  061E                     	;# 
  1049  068C                     	;# 
  1050  068D                     	;# 
  1051  068E                     	;# 
  1052  068F                     	;# 
  1053  0690                     	;# 
  1054  0691                     	;# 
  1055  0692                     	;# 
  1056  0693                     	;# 
  1057  0694                     	;# 
  1058  070C                     	;# 
  1059  070D                     	;# 
  1060  070E                     	;# 
  1061  070F                     	;# 
  1062  0710                     	;# 
  1063  0711                     	;# 
  1064  0712                     	;# 
  1065  0713                     	;# 
  1066  0714                     	;# 
  1067  0716                     	;# 
  1068  0717                     	;# 
  1069  0718                     	;# 
  1070  0719                     	;# 
  1071  071A                     	;# 
  1072  071B                     	;# 
  1073  071C                     	;# 
  1074  071D                     	;# 
  1075  071E                     	;# 
  1076  0796                     	;# 
  1077  0797                     	;# 
  1078  0798                     	;# 
  1079  0799                     	;# 
  1080  079A                     	;# 
  1081  079B                     	;# 
  1082  080C                     	;# 
  1083  080D                     	;# 
  1084  080E                     	;# 
  1085  080F                     	;# 
  1086  0810                     	;# 
  1087  0811                     	;# 
  1088  0812                     	;# 
  1089  0813                     	;# 
  1090  0814                     	;# 
  1091  081A                     	;# 
  1092  081B                     	;# 
  1093  081C                     	;# 
  1094  081D                     	;# 
  1095  081E                     	;# 
  1096  081F                     	;# 
  1097  088C                     	;# 
  1098  088D                     	;# 
  1099  088E                     	;# 
  1100  088F                     	;# 
  1101  0890                     	;# 
  1102  0891                     	;# 
  1103  0892                     	;# 
  1104  0893                     	;# 
  1105  0895                     	;# 
  1106  0896                     	;# 
  1107  0897                     	;# 
  1108  0898                     	;# 
  1109  0899                     	;# 
  1110  089A                     	;# 
  1111  089B                     	;# 
  1112  090C                     	;# 
  1113  090E                     	;# 
  1114  090F                     	;# 
  1115  091F                     	;# 
  1116  091F                     	;# 
  1117  098F                     	;# 
  1118  098F                     	;# 
  1119  0990                     	;# 
  1120  0991                     	;# 
  1121  0992                     	;# 
  1122  0993                     	;# 
  1123  0994                     	;# 
  1124  0995                     	;# 
  1125  0996                     	;# 
  1126  0997                     	;# 
  1127  0E0F                     	;# 
  1128  0E10                     	;# 
  1129  0E11                     	;# 
  1130  0E12                     	;# 
  1131  0E13                     	;# 
  1132  0E14                     	;# 
  1133  0E15                     	;# 
  1134  0E16                     	;# 
  1135  0E17                     	;# 
  1136  0E18                     	;# 
  1137  0E19                     	;# 
  1138  0E1A                     	;# 
  1139  0E1B                     	;# 
  1140  0E1C                     	;# 
  1141  0E1D                     	;# 
  1142  0E1E                     	;# 
  1143  0E1F                     	;# 
  1144  0E20                     	;# 
  1145  0E21                     	;# 
  1146  0E22                     	;# 
  1147  0E23                     	;# 
  1148  0E24                     	;# 
  1149  0E25                     	;# 
  1150  0E26                     	;# 
  1151  0E27                     	;# 
  1152  0E28                     	;# 
  1153  0E29                     	;# 
  1154  0E2A                     	;# 
  1155  0E2B                     	;# 
  1156  0E2C                     	;# 
  1157  0E2D                     	;# 
  1158  0E2E                     	;# 
  1159  0E2F                     	;# 
  1160  0E30                     	;# 
  1161  0E31                     	;# 
  1162  0E32                     	;# 
  1163  0E33                     	;# 
  1164  0E34                     	;# 
  1165  0E35                     	;# 
  1166  0E36                     	;# 
  1167  0E37                     	;# 
  1168  0E8F                     	;# 
  1169  0E90                     	;# 
  1170  0E91                     	;# 
  1171  0E92                     	;# 
  1172  0E93                     	;# 
  1173  0E94                     	;# 
  1174  0E95                     	;# 
  1175  0E96                     	;# 
  1176  0E97                     	;# 
  1177  0E9C                     	;# 
  1178  0E9D                     	;# 
  1179  0E9E                     	;# 
  1180  0EA1                     	;# 
  1181  0EA2                     	;# 
  1182  0EA3                     	;# 
  1183  0EA4                     	;# 
  1184  0EA5                     	;# 
  1185  0EA9                     	;# 
  1186  0EAA                     	;# 
  1187  0EAB                     	;# 
  1188  0EAC                     	;# 
  1189  0EB1                     	;# 
  1190  0EB2                     	;# 
  1191  0EB3                     	;# 
  1192  0EB8                     	;# 
  1193  0EB9                     	;# 
  1194  0EBA                     	;# 
  1195  0EBB                     	;# 
  1196  0EBC                     	;# 
  1197  0EBD                     	;# 
  1198  0EBE                     	;# 
  1199  0EC3                     	;# 
  1200  0EC5                     	;# 
  1201  0EC6                     	;# 
  1202  0EC7                     	;# 
  1203  0EC8                     	;# 
  1204  0EC9                     	;# 
  1205  0ECA                     	;# 
  1206  0ECB                     	;# 
  1207  0ECC                     	;# 
  1208  0F10                     	;# 
  1209  0F11                     	;# 
  1210  0F12                     	;# 
  1211  0F13                     	;# 
  1212  0F14                     	;# 
  1213  0F15                     	;# 
  1214  0F16                     	;# 
  1215  0F17                     	;# 
  1216  0F18                     	;# 
  1217  0F19                     	;# 
  1218  0F1A                     	;# 
  1219  0F1B                     	;# 
  1220  0F1C                     	;# 
  1221  0F1D                     	;# 
  1222  0F1E                     	;# 
  1223  0F1F                     	;# 
  1224  0F20                     	;# 
  1225  0F21                     	;# 
  1226  0F22                     	;# 
  1227  0F23                     	;# 
  1228  0F24                     	;# 
  1229  0F25                     	;# 
  1230  0F26                     	;# 
  1231  0F27                     	;# 
  1232  0F28                     	;# 
  1233  0F29                     	;# 
  1234  0F2A                     	;# 
  1235  0F2B                     	;# 
  1236  0F2C                     	;# 
  1237  0F2D                     	;# 
  1238  0F2E                     	;# 
  1239  0F2F                     	;# 
  1240  0F30                     	;# 
  1241  0F31                     	;# 
  1242  0F32                     	;# 
  1243  0F38                     	;# 
  1244  0F39                     	;# 
  1245  0F3A                     	;# 
  1246  0F3B                     	;# 
  1247  0F3C                     	;# 
  1248  0F3D                     	;# 
  1249  0F3E                     	;# 
  1250  0F3F                     	;# 
  1251  0F40                     	;# 
  1252  0F41                     	;# 
  1253  0F43                     	;# 
  1254  0F44                     	;# 
  1255  0F45                     	;# 
  1256  0F46                     	;# 
  1257  0F47                     	;# 
  1258  0F48                     	;# 
  1259  0F49                     	;# 
  1260  0F4A                     	;# 
  1261  0F4B                     	;# 
  1262  0F4C                     	;# 
  1263  0F4E                     	;# 
  1264  0F4F                     	;# 
  1265  0F50                     	;# 
  1266  0F51                     	;# 
  1267  0F52                     	;# 
  1268  0F53                     	;# 
  1269  0F54                     	;# 
  1270  0F55                     	;# 
  1271  0F56                     	;# 
  1272  0F57                     	;# 
  1273  0F59                     	;# 
  1274  0F5A                     	;# 
  1275  0F5B                     	;# 
  1276  0F5C                     	;# 
  1277  0F5D                     	;# 
  1278  0F61                     	;# 
  1279  0F62                     	;# 
  1280  0F64                     	;# 
  1281  0F65                     	;# 
  1282  0F66                     	;# 
  1283  0F67                     	;# 
  1284  0F68                     	;# 
  1285  0F69                     	;# 
  1286  0F6A                     	;# 
  1287  0F6B                     	;# 
  1288  0F6C                     	;# 
  1289  0F6D                     	;# 
  1290  0FE4                     	;# 
  1291  0FE5                     	;# 
  1292  0FE6                     	;# 
  1293  0FE7                     	;# 
  1294  0FE8                     	;# 
  1295  0FE9                     	;# 
  1296  0FEA                     	;# 
  1297  0FEB                     	;# 
  1298  0FED                     	;# 
  1299  0FEE                     	;# 
  1300  0FEF                     	;# 
  1301  0000                     	;# 
  1302  0001                     	;# 
  1303  0002                     	;# 
  1304  0003                     	;# 
  1305  0004                     	;# 
  1306  0005                     	;# 
  1307  0006                     	;# 
  1308  0007                     	;# 
  1309  0008                     	;# 
  1310  0009                     	;# 
  1311  000A                     	;# 
  1312  000B                     	;# 
  1313  000C                     	;# 
  1314  000D                     	;# 
  1315  000E                     	;# 
  1316  000F                     	;# 
  1317  0010                     	;# 
  1318  0011                     	;# 
  1319  0012                     	;# 
  1320  0013                     	;# 
  1321  0014                     	;# 
  1322  0015                     	;# 
  1323  0016                     	;# 
  1324  0017                     	;# 
  1325  0018                     	;# 
  1326  0019                     	;# 
  1327  001A                     	;# 
  1328  001C                     	;# 
  1329  001C                     	;# 
  1330  001D                     	;# 
  1331  001D                     	;# 
  1332  001E                     	;# 
  1333  001F                     	;# 
  1334  008C                     	;# 
  1335  008C                     	;# 
  1336  008D                     	;# 
  1337  008E                     	;# 
  1338  008E                     	;# 
  1339  008F                     	;# 
  1340  0090                     	;# 
  1341  0090                     	;# 
  1342  0091                     	;# 
  1343  0093                     	;# 
  1344  0094                     	;# 
  1345  0095                     	;# 
  1346  0096                     	;# 
  1347  0097                     	;# 
  1348  0098                     	;# 
  1349  0099                     	;# 
  1350  009A                     	;# 
  1351  009B                     	;# 
  1352  009C                     	;# 
  1353  009D                     	;# 
  1354  009E                     	;# 
  1355  010C                     	;# 
  1356  010D                     	;# 
  1357  010E                     	;# 
  1358  010E                     	;# 
  1359  010F                     	;# 
  1360  0110                     	;# 
  1361  0110                     	;# 
  1362  0111                     	;# 
  1363  0112                     	;# 
  1364  0112                     	;# 
  1365  0113                     	;# 
  1366  0114                     	;# 
  1367  0114                     	;# 
  1368  0115                     	;# 
  1369  0116                     	;# 
  1370  0116                     	;# 
  1371  0117                     	;# 
  1372  0119                     	;# 
  1373  0119                     	;# 
  1374  0119                     	;# 
  1375  011A                     	;# 
  1376  011A                     	;# 
  1377  011A                     	;# 
  1378  011B                     	;# 
  1379  011B                     	;# 
  1380  011B                     	;# 
  1381  011B                     	;# 
  1382  011B                     	;# 
  1383  011C                     	;# 
  1384  011C                     	;# 
  1385  011C                     	;# 
  1386  011D                     	;# 
  1387  011D                     	;# 
  1388  011D                     	;# 
  1389  011E                     	;# 
  1390  011E                     	;# 
  1391  011E                     	;# 
  1392  011F                     	;# 
  1393  011F                     	;# 
  1394  011F                     	;# 
  1395  011F                     	;# 
  1396  011F                     	;# 
  1397  018C                     	;# 
  1398  018D                     	;# 
  1399  018E                     	;# 
  1400  018F                     	;# 
  1401  0190                     	;# 
  1402  0191                     	;# 
  1403  0192                     	;# 
  1404  0196                     	;# 
  1405  0197                     	;# 
  1406  0198                     	;# 
  1407  0199                     	;# 
  1408  019A                     	;# 
  1409  019B                     	;# 
  1410  019C                     	;# 
  1411  020C                     	;# 
  1412  020C                     	;# 
  1413  020D                     	;# 
  1414  020E                     	;# 
  1415  020F                     	;# 
  1416  020F                     	;# 
  1417  0210                     	;# 
  1418  0210                     	;# 
  1419  0211                     	;# 
  1420  0211                     	;# 
  1421  0212                     	;# 
  1422  0212                     	;# 
  1423  0213                     	;# 
  1424  0214                     	;# 
  1425  0215                     	;# 
  1426  0215                     	;# 
  1427  0216                     	;# 
  1428  0216                     	;# 
  1429  0217                     	;# 
  1430  0217                     	;# 
  1431  0218                     	;# 
  1432  0218                     	;# 
  1433  0219                     	;# 
  1434  021A                     	;# 
  1435  021B                     	;# 
  1436  021B                     	;# 
  1437  021C                     	;# 
  1438  021C                     	;# 
  1439  021D                     	;# 
  1440  021D                     	;# 
  1441  021E                     	;# 
  1442  021F                     	;# 
  1443  028C                     	;# 
  1444  028C                     	;# 
  1445  028D                     	;# 
  1446  028D                     	;# 
  1447  028E                     	;# 
  1448  028F                     	;# 
  1449  0290                     	;# 
  1450  0290                     	;# 
  1451  0291                     	;# 
  1452  0292                     	;# 
  1453  0292                     	;# 
  1454  0293                     	;# 
  1455  0293                     	;# 
  1456  0294                     	;# 
  1457  0295                     	;# 
  1458  0296                     	;# 
  1459  0296                     	;# 
  1460  0297                     	;# 
  1461  0298                     	;# 
  1462  0298                     	;# 
  1463  0299                     	;# 
  1464  0299                     	;# 
  1465  029A                     	;# 
  1466  029B                     	;# 
  1467  029C                     	;# 
  1468  029C                     	;# 
  1469  029D                     	;# 
  1470  030C                     	;# 
  1471  030C                     	;# 
  1472  030D                     	;# 
  1473  030E                     	;# 
  1474  030F                     	;# 
  1475  0310                     	;# 
  1476  0310                     	;# 
  1477  0311                     	;# 
  1478  0312                     	;# 
  1479  0313                     	;# 
  1480  0314                     	;# 
  1481  0314                     	;# 
  1482  0315                     	;# 
  1483  0316                     	;# 
  1484  0317                     	;# 
  1485  0318                     	;# 
  1486  0318                     	;# 
  1487  0319                     	;# 
  1488  031A                     	;# 
  1489  031B                     	;# 
  1490  031C                     	;# 
  1491  031C                     	;# 
  1492  031D                     	;# 
  1493  031E                     	;# 
  1494  031F                     	;# 
  1495  038C                     	;# 
  1496  038D                     	;# 
  1497  038E                     	;# 
  1498  0390                     	;# 
  1499  0391                     	;# 
  1500  0392                     	;# 
  1501  040C                     	;# 
  1502  040D                     	;# 
  1503  040E                     	;# 
  1504  040F                     	;# 
  1505  0410                     	;# 
  1506  0411                     	;# 
  1507  0416                     	;# 
  1508  0416                     	;# 
  1509  0417                     	;# 
  1510  0418                     	;# 
  1511  0418                     	;# 
  1512  0419                     	;# 
  1513  041A                     	;# 
  1514  041A                     	;# 
  1515  041B                     	;# 
  1516  041C                     	;# 
  1517  041C                     	;# 
  1518  041D                     	;# 
  1519  041E                     	;# 
  1520  041F                     	;# 
  1521  048C                     	;# 
  1522  048C                     	;# 
  1523  048D                     	;# 
  1524  048E                     	;# 
  1525  048F                     	;# 
  1526  048F                     	;# 
  1527  0490                     	;# 
  1528  0491                     	;# 
  1529  0492                     	;# 
  1530  0492                     	;# 
  1531  0493                     	;# 
  1532  0494                     	;# 
  1533  0495                     	;# 
  1534  0495                     	;# 
  1535  0496                     	;# 
  1536  0497                     	;# 
  1537  0498                     	;# 
  1538  0499                     	;# 
  1539  049A                     	;# 
  1540  049B                     	;# 
  1541  049C                     	;# 
  1542  049D                     	;# 
  1543  050C                     	;# 
  1544  050C                     	;# 
  1545  050D                     	;# 
  1546  050E                     	;# 
  1547  050F                     	;# 
  1548  050F                     	;# 
  1549  0510                     	;# 
  1550  0511                     	;# 
  1551  0512                     	;# 
  1552  0512                     	;# 
  1553  0513                     	;# 
  1554  0514                     	;# 
  1555  0515                     	;# 
  1556  0515                     	;# 
  1557  0516                     	;# 
  1558  0517                     	;# 
  1559  0518                     	;# 
  1560  0519                     	;# 
  1561  051A                     	;# 
  1562  051B                     	;# 
  1563  051C                     	;# 
  1564  051D                     	;# 
  1565  058C                     	;# 
  1566  058C                     	;# 
  1567  058D                     	;# 
  1568  058E                     	;# 
  1569  058F                     	;# 
  1570  058F                     	;# 
  1571  0590                     	;# 
  1572  0591                     	;# 
  1573  0592                     	;# 
  1574  0593                     	;# 
  1575  060C                     	;# 
  1576  060D                     	;# 
  1577  060E                     	;# 
  1578  060F                     	;# 
  1579  0610                     	;# 
  1580  0611                     	;# 
  1581  0612                     	;# 
  1582  0613                     	;# 
  1583  0614                     	;# 
  1584  0616                     	;# 
  1585  0617                     	;# 
  1586  0618                     	;# 
  1587  0619                     	;# 
  1588  061A                     	;# 
  1589  061B                     	;# 
  1590  061C                     	;# 
  1591  061D                     	;# 
  1592  061E                     	;# 
  1593  068C                     	;# 
  1594  068D                     	;# 
  1595  068E                     	;# 
  1596  068F                     	;# 
  1597  0690                     	;# 
  1598  0691                     	;# 
  1599  0692                     	;# 
  1600  0693                     	;# 
  1601  0694                     	;# 
  1602  070C                     	;# 
  1603  070D                     	;# 
  1604  070E                     	;# 
  1605  070F                     	;# 
  1606  0710                     	;# 
  1607  0711                     	;# 
  1608  0712                     	;# 
  1609  0713                     	;# 
  1610  0714                     	;# 
  1611  0716                     	;# 
  1612  0717                     	;# 
  1613  0718                     	;# 
  1614  0719                     	;# 
  1615  071A                     	;# 
  1616  071B                     	;# 
  1617  071C                     	;# 
  1618  071D                     	;# 
  1619  071E                     	;# 
  1620  0796                     	;# 
  1621  0797                     	;# 
  1622  0798                     	;# 
  1623  0799                     	;# 
  1624  079A                     	;# 
  1625  079B                     	;# 
  1626  080C                     	;# 
  1627  080D                     	;# 
  1628  080E                     	;# 
  1629  080F                     	;# 
  1630  0810                     	;# 
  1631  0811                     	;# 
  1632  0812                     	;# 
  1633  0813                     	;# 
  1634  0814                     	;# 
  1635  081A                     	;# 
  1636  081B                     	;# 
  1637  081C                     	;# 
  1638  081D                     	;# 
  1639  081E                     	;# 
  1640  081F                     	;# 
  1641  088C                     	;# 
  1642  088D                     	;# 
  1643  088E                     	;# 
  1644  088F                     	;# 
  1645  0890                     	;# 
  1646  0891                     	;# 
  1647  0892                     	;# 
  1648  0893                     	;# 
  1649  0895                     	;# 
  1650  0896                     	;# 
  1651  0897                     	;# 
  1652  0898                     	;# 
  1653  0899                     	;# 
  1654  089A                     	;# 
  1655  089B                     	;# 
  1656  090C                     	;# 
  1657  090E                     	;# 
  1658  090F                     	;# 
  1659  091F                     	;# 
  1660  091F                     	;# 
  1661  098F                     	;# 
  1662  098F                     	;# 
  1663  0990                     	;# 
  1664  0991                     	;# 
  1665  0992                     	;# 
  1666  0993                     	;# 
  1667  0994                     	;# 
  1668  0995                     	;# 
  1669  0996                     	;# 
  1670  0997                     	;# 
  1671  0E0F                     	;# 
  1672  0E10                     	;# 
  1673  0E11                     	;# 
  1674  0E12                     	;# 
  1675  0E13                     	;# 
  1676  0E14                     	;# 
  1677  0E15                     	;# 
  1678  0E16                     	;# 
  1679  0E17                     	;# 
  1680  0E18                     	;# 
  1681  0E19                     	;# 
  1682  0E1A                     	;# 
  1683  0E1B                     	;# 
  1684  0E1C                     	;# 
  1685  0E1D                     	;# 
  1686  0E1E                     	;# 
  1687  0E1F                     	;# 
  1688  0E20                     	;# 
  1689  0E21                     	;# 
  1690  0E22                     	;# 
  1691  0E23                     	;# 
  1692  0E24                     	;# 
  1693  0E25                     	;# 
  1694  0E26                     	;# 
  1695  0E27                     	;# 
  1696  0E28                     	;# 
  1697  0E29                     	;# 
  1698  0E2A                     	;# 
  1699  0E2B                     	;# 
  1700  0E2C                     	;# 
  1701  0E2D                     	;# 
  1702  0E2E                     	;# 
  1703  0E2F                     	;# 
  1704  0E30                     	;# 
  1705  0E31                     	;# 
  1706  0E32                     	;# 
  1707  0E33                     	;# 
  1708  0E34                     	;# 
  1709  0E35                     	;# 
  1710  0E36                     	;# 
  1711  0E37                     	;# 
  1712  0E8F                     	;# 
  1713  0E90                     	;# 
  1714  0E91                     	;# 
  1715  0E92                     	;# 
  1716  0E93                     	;# 
  1717  0E94                     	;# 
  1718  0E95                     	;# 
  1719  0E96                     	;# 
  1720  0E97                     	;# 
  1721  0E9C                     	;# 
  1722  0E9D                     	;# 
  1723  0E9E                     	;# 
  1724  0EA1                     	;# 
  1725  0EA2                     	;# 
  1726  0EA3                     	;# 
  1727  0EA4                     	;# 
  1728  0EA5                     	;# 
  1729  0EA9                     	;# 
  1730  0EAA                     	;# 
  1731  0EAB                     	;# 
  1732  0EAC                     	;# 
  1733  0EB1                     	;# 
  1734  0EB2                     	;# 
  1735  0EB3                     	;# 
  1736  0EB8                     	;# 
  1737  0EB9                     	;# 
  1738  0EBA                     	;# 
  1739  0EBB                     	;# 
  1740  0EBC                     	;# 
  1741  0EBD                     	;# 
  1742  0EBE                     	;# 
  1743  0EC3                     	;# 
  1744  0EC5                     	;# 
  1745  0EC6                     	;# 
  1746  0EC7                     	;# 
  1747  0EC8                     	;# 
  1748  0EC9                     	;# 
  1749  0ECA                     	;# 
  1750  0ECB                     	;# 
  1751  0ECC                     	;# 
  1752  0F10                     	;# 
  1753  0F11                     	;# 
  1754  0F12                     	;# 
  1755  0F13                     	;# 
  1756  0F14                     	;# 
  1757  0F15                     	;# 
  1758  0F16                     	;# 
  1759  0F17                     	;# 
  1760  0F18                     	;# 
  1761  0F19                     	;# 
  1762  0F1A                     	;# 
  1763  0F1B                     	;# 
  1764  0F1C                     	;# 
  1765  0F1D                     	;# 
  1766  0F1E                     	;# 
  1767  0F1F                     	;# 
  1768  0F20                     	;# 
  1769  0F21                     	;# 
  1770  0F22                     	;# 
  1771  0F23                     	;# 
  1772  0F24                     	;# 
  1773  0F25                     	;# 
  1774  0F26                     	;# 
  1775  0F27                     	;# 
  1776  0F28                     	;# 
  1777  0F29                     	;# 
  1778  0F2A                     	;# 
  1779  0F2B                     	;# 
  1780  0F2C                     	;# 
  1781  0F2D                     	;# 
  1782  0F2E                     	;# 
  1783  0F2F                     	;# 
  1784  0F30                     	;# 
  1785  0F31                     	;# 
  1786  0F32                     	;# 
  1787  0F38                     	;# 
  1788  0F39                     	;# 
  1789  0F3A                     	;# 
  1790  0F3B                     	;# 
  1791  0F3C                     	;# 
  1792  0F3D                     	;# 
  1793  0F3E                     	;# 
  1794  0F3F                     	;# 
  1795  0F40                     	;# 
  1796  0F41                     	;# 
  1797  0F43                     	;# 
  1798  0F44                     	;# 
  1799  0F45                     	;# 
  1800  0F46                     	;# 
  1801  0F47                     	;# 
  1802  0F48                     	;# 
  1803  0F49                     	;# 
  1804  0F4A                     	;# 
  1805  0F4B                     	;# 
  1806  0F4C                     	;# 
  1807  0F4E                     	;# 
  1808  0F4F                     	;# 
  1809  0F50                     	;# 
  1810  0F51                     	;# 
  1811  0F52                     	;# 
  1812  0F53                     	;# 
  1813  0F54                     	;# 
  1814  0F55                     	;# 
  1815  0F56                     	;# 
  1816  0F57                     	;# 
  1817  0F59                     	;# 
  1818  0F5A                     	;# 
  1819  0F5B                     	;# 
  1820  0F5C                     	;# 
  1821  0F5D                     	;# 
  1822  0F61                     	;# 
  1823  0F62                     	;# 
  1824  0F64                     	;# 
  1825  0F65                     	;# 
  1826  0F66                     	;# 
  1827  0F67                     	;# 
  1828  0F68                     	;# 
  1829  0F69                     	;# 
  1830  0F6A                     	;# 
  1831  0F6B                     	;# 
  1832  0F6C                     	;# 
  1833  0F6D                     	;# 
  1834  0FE4                     	;# 
  1835  0FE5                     	;# 
  1836  0FE6                     	;# 
  1837  0FE7                     	;# 
  1838  0FE8                     	;# 
  1839  0FE9                     	;# 
  1840  0FEA                     	;# 
  1841  0FEB                     	;# 
  1842  0FED                     	;# 
  1843  0FEE                     	;# 
  1844  0FEF                     	;# 
  1845  0000                     	;# 
  1846  0001                     	;# 
  1847  0002                     	;# 
  1848  0003                     	;# 
  1849  0004                     	;# 
  1850  0005                     	;# 
  1851  0006                     	;# 
  1852  0007                     	;# 
  1853  0008                     	;# 
  1854  0009                     	;# 
  1855  000A                     	;# 
  1856  000B                     	;# 
  1857  000C                     	;# 
  1858  000D                     	;# 
  1859  000E                     	;# 
  1860  000F                     	;# 
  1861  0010                     	;# 
  1862  0011                     	;# 
  1863  0012                     	;# 
  1864  0013                     	;# 
  1865  0014                     	;# 
  1866  0015                     	;# 
  1867  0016                     	;# 
  1868  0017                     	;# 
  1869  0018                     	;# 
  1870  0019                     	;# 
  1871  001A                     	;# 
  1872  001C                     	;# 
  1873  001C                     	;# 
  1874  001D                     	;# 
  1875  001D                     	;# 
  1876  001E                     	;# 
  1877  001F                     	;# 
  1878  008C                     	;# 
  1879  008C                     	;# 
  1880  008D                     	;# 
  1881  008E                     	;# 
  1882  008E                     	;# 
  1883  008F                     	;# 
  1884  0090                     	;# 
  1885  0090                     	;# 
  1886  0091                     	;# 
  1887  0093                     	;# 
  1888  0094                     	;# 
  1889  0095                     	;# 
  1890  0096                     	;# 
  1891  0097                     	;# 
  1892  0098                     	;# 
  1893  0099                     	;# 
  1894  009A                     	;# 
  1895  009B                     	;# 
  1896  009C                     	;# 
  1897  009D                     	;# 
  1898  009E                     	;# 
  1899  010C                     	;# 
  1900  010D                     	;# 
  1901  010E                     	;# 
  1902  010E                     	;# 
  1903  010F                     	;# 
  1904  0110                     	;# 
  1905  0110                     	;# 
  1906  0111                     	;# 
  1907  0112                     	;# 
  1908  0112                     	;# 
  1909  0113                     	;# 
  1910  0114                     	;# 
  1911  0114                     	;# 
  1912  0115                     	;# 
  1913  0116                     	;# 
  1914  0116                     	;# 
  1915  0117                     	;# 
  1916  0119                     	;# 
  1917  0119                     	;# 
  1918  0119                     	;# 
  1919  011A                     	;# 
  1920  011A                     	;# 
  1921  011A                     	;# 
  1922  011B                     	;# 
  1923  011B                     	;# 
  1924  011B                     	;# 
  1925  011B                     	;# 
  1926  011B                     	;# 
  1927  011C                     	;# 
  1928  011C                     	;# 
  1929  011C                     	;# 
  1930  011D                     	;# 
  1931  011D                     	;# 
  1932  011D                     	;# 
  1933  011E                     	;# 
  1934  011E                     	;# 
  1935  011E                     	;# 
  1936  011F                     	;# 
  1937  011F                     	;# 
  1938  011F                     	;# 
  1939  011F                     	;# 
  1940  011F                     	;# 
  1941  018C                     	;# 
  1942  018D                     	;# 
  1943  018E                     	;# 
  1944  018F                     	;# 
  1945  0190                     	;# 
  1946  0191                     	;# 
  1947  0192                     	;# 
  1948  0196                     	;# 
  1949  0197                     	;# 
  1950  0198                     	;# 
  1951  0199                     	;# 
  1952  019A                     	;# 
  1953  019B                     	;# 
  1954  019C                     	;# 
  1955  020C                     	;# 
  1956  020C                     	;# 
  1957  020D                     	;# 
  1958  020E                     	;# 
  1959  020F                     	;# 
  1960  020F                     	;# 
  1961  0210                     	;# 
  1962  0210                     	;# 
  1963  0211                     	;# 
  1964  0211                     	;# 
  1965  0212                     	;# 
  1966  0212                     	;# 
  1967  0213                     	;# 
  1968  0214                     	;# 
  1969  0215                     	;# 
  1970  0215                     	;# 
  1971  0216                     	;# 
  1972  0216                     	;# 
  1973  0217                     	;# 
  1974  0217                     	;# 
  1975  0218                     	;# 
  1976  0218                     	;# 
  1977  0219                     	;# 
  1978  021A                     	;# 
  1979  021B                     	;# 
  1980  021B                     	;# 
  1981  021C                     	;# 
  1982  021C                     	;# 
  1983  021D                     	;# 
  1984  021D                     	;# 
  1985  021E                     	;# 
  1986  021F                     	;# 
  1987  028C                     	;# 
  1988  028C                     	;# 
  1989  028D                     	;# 
  1990  028D                     	;# 
  1991  028E                     	;# 
  1992  028F                     	;# 
  1993  0290                     	;# 
  1994  0290                     	;# 
  1995  0291                     	;# 
  1996  0292                     	;# 
  1997  0292                     	;# 
  1998  0293                     	;# 
  1999  0293                     	;# 
  2000  0294                     	;# 
  2001  0295                     	;# 
  2002  0296                     	;# 
  2003  0296                     	;# 
  2004  0297                     	;# 
  2005  0298                     	;# 
  2006  0298                     	;# 
  2007  0299                     	;# 
  2008  0299                     	;# 
  2009  029A                     	;# 
  2010  029B                     	;# 
  2011  029C                     	;# 
  2012  029C                     	;# 
  2013  029D                     	;# 
  2014  030C                     	;# 
  2015  030C                     	;# 
  2016  030D                     	;# 
  2017  030E                     	;# 
  2018  030F                     	;# 
  2019  0310                     	;# 
  2020  0310                     	;# 
  2021  0311                     	;# 
  2022  0312                     	;# 
  2023  0313                     	;# 
  2024  0314                     	;# 
  2025  0314                     	;# 
  2026  0315                     	;# 
  2027  0316                     	;# 
  2028  0317                     	;# 
  2029  0318                     	;# 
  2030  0318                     	;# 
  2031  0319                     	;# 
  2032  031A                     	;# 
  2033  031B                     	;# 
  2034  031C                     	;# 
  2035  031C                     	;# 
  2036  031D                     	;# 
  2037  031E                     	;# 
  2038  031F                     	;# 
  2039  038C                     	;# 
  2040  038D                     	;# 
  2041  038E                     	;# 
  2042  0390                     	;# 
  2043  0391                     	;# 
  2044  0392                     	;# 
  2045  040C                     	;# 
  2046  040D                     	;# 
  2047  040E                     	;# 
  2048  040F                     	;# 
  2049  0410                     	;# 
  2050  0411                     	;# 
  2051  0416                     	;# 
  2052  0416                     	;# 
  2053  0417                     	;# 
  2054  0418                     	;# 
  2055  0418                     	;# 
  2056  0419                     	;# 
  2057  041A                     	;# 
  2058  041A                     	;# 
  2059  041B                     	;# 
  2060  041C                     	;# 
  2061  041C                     	;# 
  2062  041D                     	;# 
  2063  041E                     	;# 
  2064  041F                     	;# 
  2065  048C                     	;# 
  2066  048C                     	;# 
  2067  048D                     	;# 
  2068  048E                     	;# 
  2069  048F                     	;# 
  2070  048F                     	;# 
  2071  0490                     	;# 
  2072  0491                     	;# 
  2073  0492                     	;# 
  2074  0492                     	;# 
  2075  0493                     	;# 
  2076  0494                     	;# 
  2077  0495                     	;# 
  2078  0495                     	;# 
  2079  0496                     	;# 
  2080  0497                     	;# 
  2081  0498                     	;# 
  2082  0499                     	;# 
  2083  049A                     	;# 
  2084  049B                     	;# 
  2085  049C                     	;# 
  2086  049D                     	;# 
  2087  050C                     	;# 
  2088  050C                     	;# 
  2089  050D                     	;# 
  2090  050E                     	;# 
  2091  050F                     	;# 
  2092  050F                     	;# 
  2093  0510                     	;# 
  2094  0511                     	;# 
  2095  0512                     	;# 
  2096  0512                     	;# 
  2097  0513                     	;# 
  2098  0514                     	;# 
  2099  0515                     	;# 
  2100  0515                     	;# 
  2101  0516                     	;# 
  2102  0517                     	;# 
  2103  0518                     	;# 
  2104  0519                     	;# 
  2105  051A                     	;# 
  2106  051B                     	;# 
  2107  051C                     	;# 
  2108  051D                     	;# 
  2109  058C                     	;# 
  2110  058C                     	;# 
  2111  058D                     	;# 
  2112  058E                     	;# 
  2113  058F                     	;# 
  2114  058F                     	;# 
  2115  0590                     	;# 
  2116  0591                     	;# 
  2117  0592                     	;# 
  2118  0593                     	;# 
  2119  060C                     	;# 
  2120  060D                     	;# 
  2121  060E                     	;# 
  2122  060F                     	;# 
  2123  0610                     	;# 
  2124  0611                     	;# 
  2125  0612                     	;# 
  2126  0613                     	;# 
  2127  0614                     	;# 
  2128  0616                     	;# 
  2129  0617                     	;# 
  2130  0618                     	;# 
  2131  0619                     	;# 
  2132  061A                     	;# 
  2133  061B                     	;# 
  2134  061C                     	;# 
  2135  061D                     	;# 
  2136  061E                     	;# 
  2137  068C                     	;# 
  2138  068D                     	;# 
  2139  068E                     	;# 
  2140  068F                     	;# 
  2141  0690                     	;# 
  2142  0691                     	;# 
  2143  0692                     	;# 
  2144  0693                     	;# 
  2145  0694                     	;# 
  2146  070C                     	;# 
  2147  070D                     	;# 
  2148  070E                     	;# 
  2149  070F                     	;# 
  2150  0710                     	;# 
  2151  0711                     	;# 
  2152  0712                     	;# 
  2153  0713                     	;# 
  2154  0714                     	;# 
  2155  0716                     	;# 
  2156  0717                     	;# 
  2157  0718                     	;# 
  2158  0719                     	;# 
  2159  071A                     	;# 
  2160  071B                     	;# 
  2161  071C                     	;# 
  2162  071D                     	;# 
  2163  071E                     	;# 
  2164  0796                     	;# 
  2165  0797                     	;# 
  2166  0798                     	;# 
  2167  0799                     	;# 
  2168  079A                     	;# 
  2169  079B                     	;# 
  2170  080C                     	;# 
  2171  080D                     	;# 
  2172  080E                     	;# 
  2173  080F                     	;# 
  2174  0810                     	;# 
  2175  0811                     	;# 
  2176  0812                     	;# 
  2177  0813                     	;# 
  2178  0814                     	;# 
  2179  081A                     	;# 
  2180  081B                     	;# 
  2181  081C                     	;# 
  2182  081D                     	;# 
  2183  081E                     	;# 
  2184  081F                     	;# 
  2185  088C                     	;# 
  2186  088D                     	;# 
  2187  088E                     	;# 
  2188  088F                     	;# 
  2189  0890                     	;# 
  2190  0891                     	;# 
  2191  0892                     	;# 
  2192  0893                     	;# 
  2193  0895                     	;# 
  2194  0896                     	;# 
  2195  0897                     	;# 
  2196  0898                     	;# 
  2197  0899                     	;# 
  2198  089A                     	;# 
  2199  089B                     	;# 
  2200  090C                     	;# 
  2201  090E                     	;# 
  2202  090F                     	;# 
  2203  091F                     	;# 
  2204  091F                     	;# 
  2205  098F                     	;# 
  2206  098F                     	;# 
  2207  0990                     	;# 
  2208  0991                     	;# 
  2209  0992                     	;# 
  2210  0993                     	;# 
  2211  0994                     	;# 
  2212  0995                     	;# 
  2213  0996                     	;# 
  2214  0997                     	;# 
  2215  0E0F                     	;# 
  2216  0E10                     	;# 
  2217  0E11                     	;# 
  2218  0E12                     	;# 
  2219  0E13                     	;# 
  2220  0E14                     	;# 
  2221  0E15                     	;# 
  2222  0E16                     	;# 
  2223  0E17                     	;# 
  2224  0E18                     	;# 
  2225  0E19                     	;# 
  2226  0E1A                     	;# 
  2227  0E1B                     	;# 
  2228  0E1C                     	;# 
  2229  0E1D                     	;# 
  2230  0E1E                     	;# 
  2231  0E1F                     	;# 
  2232  0E20                     	;# 
  2233  0E21                     	;# 
  2234  0E22                     	;# 
  2235  0E23                     	;# 
  2236  0E24                     	;# 
  2237  0E25                     	;# 
  2238  0E26                     	;# 
  2239  0E27                     	;# 
  2240  0E28                     	;# 
  2241  0E29                     	;# 
  2242  0E2A                     	;# 
  2243  0E2B                     	;# 
  2244  0E2C                     	;# 
  2245  0E2D                     	;# 
  2246  0E2E                     	;# 
  2247  0E2F                     	;# 
  2248  0E30                     	;# 
  2249  0E31                     	;# 
  2250  0E32                     	;# 
  2251  0E33                     	;# 
  2252  0E34                     	;# 
  2253  0E35                     	;# 
  2254  0E36                     	;# 
  2255  0E37                     	;# 
  2256  0E8F                     	;# 
  2257  0E90                     	;# 
  2258  0E91                     	;# 
  2259  0E92                     	;# 
  2260  0E93                     	;# 
  2261  0E94                     	;# 
  2262  0E95                     	;# 
  2263  0E96                     	;# 
  2264  0E97                     	;# 
  2265  0E9C                     	;# 
  2266  0E9D                     	;# 
  2267  0E9E                     	;# 
  2268  0EA1                     	;# 
  2269  0EA2                     	;# 
  2270  0EA3                     	;# 
  2271  0EA4                     	;# 
  2272  0EA5                     	;# 
  2273  0EA9                     	;# 
  2274  0EAA                     	;# 
  2275  0EAB                     	;# 
  2276  0EAC                     	;# 
  2277  0EB1                     	;# 
  2278  0EB2                     	;# 
  2279  0EB3                     	;# 
  2280  0EB8                     	;# 
  2281  0EB9                     	;# 
  2282  0EBA                     	;# 
  2283  0EBB                     	;# 
  2284  0EBC                     	;# 
  2285  0EBD                     	;# 
  2286  0EBE                     	;# 
  2287  0EC3                     	;# 
  2288  0EC5                     	;# 
  2289  0EC6                     	;# 
  2290  0EC7                     	;# 
  2291  0EC8                     	;# 
  2292  0EC9                     	;# 
  2293  0ECA                     	;# 
  2294  0ECB                     	;# 
  2295  0ECC                     	;# 
  2296  0F10                     	;# 
  2297  0F11                     	;# 
  2298  0F12                     	;# 
  2299  0F13                     	;# 
  2300  0F14                     	;# 
  2301  0F15                     	;# 
  2302  0F16                     	;# 
  2303  0F17                     	;# 
  2304  0F18                     	;# 
  2305  0F19                     	;# 
  2306  0F1A                     	;# 
  2307  0F1B                     	;# 
  2308  0F1C                     	;# 
  2309  0F1D                     	;# 
  2310  0F1E                     	;# 
  2311  0F1F                     	;# 
  2312  0F20                     	;# 
  2313  0F21                     	;# 
  2314  0F22                     	;# 
  2315  0F23                     	;# 
  2316  0F24                     	;# 
  2317  0F25                     	;# 
  2318  0F26                     	;# 
  2319  0F27                     	;# 
  2320  0F28                     	;# 
  2321  0F29                     	;# 
  2322  0F2A                     	;# 
  2323  0F2B                     	;# 
  2324  0F2C                     	;# 
  2325  0F2D                     	;# 
  2326  0F2E                     	;# 
  2327  0F2F                     	;# 
  2328  0F30                     	;# 
  2329  0F31                     	;# 
  2330  0F32                     	;# 
  2331  0F38                     	;# 
  2332  0F39                     	;# 
  2333  0F3A                     	;# 
  2334  0F3B                     	;# 
  2335  0F3C                     	;# 
  2336  0F3D                     	;# 
  2337  0F3E                     	;# 
  2338  0F3F                     	;# 
  2339  0F40                     	;# 
  2340  0F41                     	;# 
  2341  0F43                     	;# 
  2342  0F44                     	;# 
  2343  0F45                     	;# 
  2344  0F46                     	;# 
  2345  0F47                     	;# 
  2346  0F48                     	;# 
  2347  0F49                     	;# 
  2348  0F4A                     	;# 
  2349  0F4B                     	;# 
  2350  0F4C                     	;# 
  2351  0F4E                     	;# 
  2352  0F4F                     	;# 
  2353  0F50                     	;# 
  2354  0F51                     	;# 
  2355  0F52                     	;# 
  2356  0F53                     	;# 
  2357  0F54                     	;# 
  2358  0F55                     	;# 
  2359  0F56                     	;# 
  2360  0F57                     	;# 
  2361  0F59                     	;# 
  2362  0F5A                     	;# 
  2363  0F5B                     	;# 
  2364  0F5C                     	;# 
  2365  0F5D                     	;# 
  2366  0F61                     	;# 
  2367  0F62                     	;# 
  2368  0F64                     	;# 
  2369  0F65                     	;# 
  2370  0F66                     	;# 
  2371  0F67                     	;# 
  2372  0F68                     	;# 
  2373  0F69                     	;# 
  2374  0F6A                     	;# 
  2375  0F6B                     	;# 
  2376  0F6C                     	;# 
  2377  0F6D                     	;# 
  2378  0FE4                     	;# 
  2379  0FE5                     	;# 
  2380  0FE6                     	;# 
  2381  0FE7                     	;# 
  2382  0FE8                     	;# 
  2383  0FE9                     	;# 
  2384  0FEA                     	;# 
  2385  0FEB                     	;# 
  2386  0FED                     	;# 
  2387  0FEE                     	;# 
  2388  0FEF                     	;# 
  2389  0000                     	;# 
  2390  0001                     	;# 
  2391  0002                     	;# 
  2392  0003                     	;# 
  2393  0004                     	;# 
  2394  0005                     	;# 
  2395  0006                     	;# 
  2396  0007                     	;# 
  2397  0008                     	;# 
  2398  0009                     	;# 
  2399  000A                     	;# 
  2400  000B                     	;# 
  2401  000C                     	;# 
  2402  000D                     	;# 
  2403  000E                     	;# 
  2404  000F                     	;# 
  2405  0010                     	;# 
  2406  0011                     	;# 
  2407  0012                     	;# 
  2408  0013                     	;# 
  2409  0014                     	;# 
  2410  0015                     	;# 
  2411  0016                     	;# 
  2412  0017                     	;# 
  2413  0018                     	;# 
  2414  0019                     	;# 
  2415  001A                     	;# 
  2416  001C                     	;# 
  2417  001C                     	;# 
  2418  001D                     	;# 
  2419  001D                     	;# 
  2420  001E                     	;# 
  2421  001F                     	;# 
  2422  008C                     	;# 
  2423  008C                     	;# 
  2424  008D                     	;# 
  2425  008E                     	;# 
  2426  008E                     	;# 
  2427  008F                     	;# 
  2428  0090                     	;# 
  2429  0090                     	;# 
  2430  0091                     	;# 
  2431  0093                     	;# 
  2432  0094                     	;# 
  2433  0095                     	;# 
  2434  0096                     	;# 
  2435  0097                     	;# 
  2436  0098                     	;# 
  2437  0099                     	;# 
  2438  009A                     	;# 
  2439  009B                     	;# 
  2440  009C                     	;# 
  2441  009D                     	;# 
  2442  009E                     	;# 
  2443  010C                     	;# 
  2444  010D                     	;# 
  2445  010E                     	;# 
  2446  010E                     	;# 
  2447  010F                     	;# 
  2448  0110                     	;# 
  2449  0110                     	;# 
  2450  0111                     	;# 
  2451  0112                     	;# 
  2452  0112                     	;# 
  2453  0113                     	;# 
  2454  0114                     	;# 
  2455  0114                     	;# 
  2456  0115                     	;# 
  2457  0116                     	;# 
  2458  0116                     	;# 
  2459  0117                     	;# 
  2460  0119                     	;# 
  2461  0119                     	;# 
  2462  0119                     	;# 
  2463  011A                     	;# 
  2464  011A                     	;# 
  2465  011A                     	;# 
  2466  011B                     	;# 
  2467  011B                     	;# 
  2468  011B                     	;# 
  2469  011B                     	;# 
  2470  011B                     	;# 
  2471  011C                     	;# 
  2472  011C                     	;# 
  2473  011C                     	;# 
  2474  011D                     	;# 
  2475  011D                     	;# 
  2476  011D                     	;# 
  2477  011E                     	;# 
  2478  011E                     	;# 
  2479  011E                     	;# 
  2480  011F                     	;# 
  2481  011F                     	;# 
  2482  011F                     	;# 
  2483  011F                     	;# 
  2484  011F                     	;# 
  2485  018C                     	;# 
  2486  018D                     	;# 
  2487  018E                     	;# 
  2488  018F                     	;# 
  2489  0190                     	;# 
  2490  0191                     	;# 
  2491  0192                     	;# 
  2492  0196                     	;# 
  2493  0197                     	;# 
  2494  0198                     	;# 
  2495  0199                     	;# 
  2496  019A                     	;# 
  2497  019B                     	;# 
  2498  019C                     	;# 
  2499  020C                     	;# 
  2500  020C                     	;# 
  2501  020D                     	;# 
  2502  020E                     	;# 
  2503  020F                     	;# 
  2504  020F                     	;# 
  2505  0210                     	;# 
  2506  0210                     	;# 
  2507  0211                     	;# 
  2508  0211                     	;# 
  2509  0212                     	;# 
  2510  0212                     	;# 
  2511  0213                     	;# 
  2512  0214                     	;# 
  2513  0215                     	;# 
  2514  0215                     	;# 
  2515  0216                     	;# 
  2516  0216                     	;# 
  2517  0217                     	;# 
  2518  0217                     	;# 
  2519  0218                     	;# 
  2520  0218                     	;# 
  2521  0219                     	;# 
  2522  021A                     	;# 
  2523  021B                     	;# 
  2524  021B                     	;# 
  2525  021C                     	;# 
  2526  021C                     	;# 
  2527  021D                     	;# 
  2528  021D                     	;# 
  2529  021E                     	;# 
  2530  021F                     	;# 
  2531  028C                     	;# 
  2532  028C                     	;# 
  2533  028D                     	;# 
  2534  028D                     	;# 
  2535  028E                     	;# 
  2536  028F                     	;# 
  2537  0290                     	;# 
  2538  0290                     	;# 
  2539  0291                     	;# 
  2540  0292                     	;# 
  2541  0292                     	;# 
  2542  0293                     	;# 
  2543  0293                     	;# 
  2544  0294                     	;# 
  2545  0295                     	;# 
  2546  0296                     	;# 
  2547  0296                     	;# 
  2548  0297                     	;# 
  2549  0298                     	;# 
  2550  0298                     	;# 
  2551  0299                     	;# 
  2552  0299                     	;# 
  2553  029A                     	;# 
  2554  029B                     	;# 
  2555  029C                     	;# 
  2556  029C                     	;# 
  2557  029D                     	;# 
  2558  030C                     	;# 
  2559  030C                     	;# 
  2560  030D                     	;# 
  2561  030E                     	;# 
  2562  030F                     	;# 
  2563  0310                     	;# 
  2564  0310                     	;# 
  2565  0311                     	;# 
  2566  0312                     	;# 
  2567  0313                     	;# 
  2568  0314                     	;# 
  2569  0314                     	;# 
  2570  0315                     	;# 
  2571  0316                     	;# 
  2572  0317                     	;# 
  2573  0318                     	;# 
  2574  0318                     	;# 
  2575  0319                     	;# 
  2576  031A                     	;# 
  2577  031B                     	;# 
  2578  031C                     	;# 
  2579  031C                     	;# 
  2580  031D                     	;# 
  2581  031E                     	;# 
  2582  031F                     	;# 
  2583  038C                     	;# 
  2584  038D                     	;# 
  2585  038E                     	;# 
  2586  0390                     	;# 
  2587  0391                     	;# 
  2588  0392                     	;# 
  2589  040C                     	;# 
  2590  040D                     	;# 
  2591  040E                     	;# 
  2592  040F                     	;# 
  2593  0410                     	;# 
  2594  0411                     	;# 
  2595  0416                     	;# 
  2596  0416                     	;# 
  2597  0417                     	;# 
  2598  0418                     	;# 
  2599  0418                     	;# 
  2600  0419                     	;# 
  2601  041A                     	;# 
  2602  041A                     	;# 
  2603  041B                     	;# 
  2604  041C                     	;# 
  2605  041C                     	;# 
  2606  041D                     	;# 
  2607  041E                     	;# 
  2608  041F                     	;# 
  2609  048C                     	;# 
  2610  048C                     	;# 
  2611  048D                     	;# 
  2612  048E                     	;# 
  2613  048F                     	;# 
  2614  048F                     	;# 
  2615  0490                     	;# 
  2616  0491                     	;# 
  2617  0492                     	;# 
  2618  0492                     	;# 
  2619  0493                     	;# 
  2620  0494                     	;# 
  2621  0495                     	;# 
  2622  0495                     	;# 
  2623  0496                     	;# 
  2624  0497                     	;# 
  2625  0498                     	;# 
  2626  0499                     	;# 
  2627  049A                     	;# 
  2628  049B                     	;# 
  2629  049C                     	;# 
  2630  049D                     	;# 
  2631  050C                     	;# 
  2632  050C                     	;# 
  2633  050D                     	;# 
  2634  050E                     	;# 
  2635  050F                     	;# 
  2636  050F                     	;# 
  2637  0510                     	;# 
  2638  0511                     	;# 
  2639  0512                     	;# 
  2640  0512                     	;# 
  2641  0513                     	;# 
  2642  0514                     	;# 
  2643  0515                     	;# 
  2644  0515                     	;# 
  2645  0516                     	;# 
  2646  0517                     	;# 
  2647  0518                     	;# 
  2648  0519                     	;# 
  2649  051A                     	;# 
  2650  051B                     	;# 
  2651  051C                     	;# 
  2652  051D                     	;# 
  2653  058C                     	;# 
  2654  058C                     	;# 
  2655  058D                     	;# 
  2656  058E                     	;# 
  2657  058F                     	;# 
  2658  058F                     	;# 
  2659  0590                     	;# 
  2660  0591                     	;# 
  2661  0592                     	;# 
  2662  0593                     	;# 
  2663  060C                     	;# 
  2664  060D                     	;# 
  2665  060E                     	;# 
  2666  060F                     	;# 
  2667  0610                     	;# 
  2668  0611                     	;# 
  2669  0612                     	;# 
  2670  0613                     	;# 
  2671  0614                     	;# 
  2672  0616                     	;# 
  2673  0617                     	;# 
  2674  0618                     	;# 
  2675  0619                     	;# 
  2676  061A                     	;# 
  2677  061B                     	;# 
  2678  061C                     	;# 
  2679  061D                     	;# 
  2680  061E                     	;# 
  2681  068C                     	;# 
  2682  068D                     	;# 
  2683  068E                     	;# 
  2684  068F                     	;# 
  2685  0690                     	;# 
  2686  0691                     	;# 
  2687  0692                     	;# 
  2688  0693                     	;# 
  2689  0694                     	;# 
  2690  070C                     	;# 
  2691  070D                     	;# 
  2692  070E                     	;# 
  2693  070F                     	;# 
  2694  0710                     	;# 
  2695  0711                     	;# 
  2696  0712                     	;# 
  2697  0713                     	;# 
  2698  0714                     	;# 
  2699  0716                     	;# 
  2700  0717                     	;# 
  2701  0718                     	;# 
  2702  0719                     	;# 
  2703  071A                     	;# 
  2704  071B                     	;# 
  2705  071C                     	;# 
  2706  071D                     	;# 
  2707  071E                     	;# 
  2708  0796                     	;# 
  2709  0797                     	;# 
  2710  0798                     	;# 
  2711  0799                     	;# 
  2712  079A                     	;# 
  2713  079B                     	;# 
  2714  080C                     	;# 
  2715  080D                     	;# 
  2716  080E                     	;# 
  2717  080F                     	;# 
  2718  0810                     	;# 
  2719  0811                     	;# 
  2720  0812                     	;# 
  2721  0813                     	;# 
  2722  0814                     	;# 
  2723  081A                     	;# 
  2724  081B                     	;# 
  2725  081C                     	;# 
  2726  081D                     	;# 
  2727  081E                     	;# 
  2728  081F                     	;# 
  2729  088C                     	;# 
  2730  088D                     	;# 
  2731  088E                     	;# 
  2732  088F                     	;# 
  2733  0890                     	;# 
  2734  0891                     	;# 
  2735  0892                     	;# 
  2736  0893                     	;# 
  2737  0895                     	;# 
  2738  0896                     	;# 
  2739  0897                     	;# 
  2740  0898                     	;# 
  2741  0899                     	;# 
  2742  089A                     	;# 
  2743  089B                     	;# 
  2744  090C                     	;# 
  2745  090E                     	;# 
  2746  090F                     	;# 
  2747  091F                     	;# 
  2748  091F                     	;# 
  2749  098F                     	;# 
  2750  098F                     	;# 
  2751  0990                     	;# 
  2752  0991                     	;# 
  2753  0992                     	;# 
  2754  0993                     	;# 
  2755  0994                     	;# 
  2756  0995                     	;# 
  2757  0996                     	;# 
  2758  0997                     	;# 
  2759  0E0F                     	;# 
  2760  0E10                     	;# 
  2761  0E11                     	;# 
  2762  0E12                     	;# 
  2763  0E13                     	;# 
  2764  0E14                     	;# 
  2765  0E15                     	;# 
  2766  0E16                     	;# 
  2767  0E17                     	;# 
  2768  0E18                     	;# 
  2769  0E19                     	;# 
  2770  0E1A                     	;# 
  2771  0E1B                     	;# 
  2772  0E1C                     	;# 
  2773  0E1D                     	;# 
  2774  0E1E                     	;# 
  2775  0E1F                     	;# 
  2776  0E20                     	;# 
  2777  0E21                     	;# 
  2778  0E22                     	;# 
  2779  0E23                     	;# 
  2780  0E24                     	;# 
  2781  0E25                     	;# 
  2782  0E26                     	;# 
  2783  0E27                     	;# 
  2784  0E28                     	;# 
  2785  0E29                     	;# 
  2786  0E2A                     	;# 
  2787  0E2B                     	;# 
  2788  0E2C                     	;# 
  2789  0E2D                     	;# 
  2790  0E2E                     	;# 
  2791  0E2F                     	;# 
  2792  0E30                     	;# 
  2793  0E31                     	;# 
  2794  0E32                     	;# 
  2795  0E33                     	;# 
  2796  0E34                     	;# 
  2797  0E35                     	;# 
  2798  0E36                     	;# 
  2799  0E37                     	;# 
  2800  0E8F                     	;# 
  2801  0E90                     	;# 
  2802  0E91                     	;# 
  2803  0E92                     	;# 
  2804  0E93                     	;# 
  2805  0E94                     	;# 
  2806  0E95                     	;# 
  2807  0E96                     	;# 
  2808  0E97                     	;# 
  2809  0E9C                     	;# 
  2810  0E9D                     	;# 
  2811  0E9E                     	;# 
  2812  0EA1                     	;# 
  2813  0EA2                     	;# 
  2814  0EA3                     	;# 
  2815  0EA4                     	;# 
  2816  0EA5                     	;# 
  2817  0EA9                     	;# 
  2818  0EAA                     	;# 
  2819  0EAB                     	;# 
  2820  0EAC                     	;# 
  2821  0EB1                     	;# 
  2822  0EB2                     	;# 
  2823  0EB3                     	;# 
  2824  0EB8                     	;# 
  2825  0EB9                     	;# 
  2826  0EBA                     	;# 
  2827  0EBB                     	;# 
  2828  0EBC                     	;# 
  2829  0EBD                     	;# 
  2830  0EBE                     	;# 
  2831  0EC3                     	;# 
  2832  0EC5                     	;# 
  2833  0EC6                     	;# 
  2834  0EC7                     	;# 
  2835  0EC8                     	;# 
  2836  0EC9                     	;# 
  2837  0ECA                     	;# 
  2838  0ECB                     	;# 
  2839  0ECC                     	;# 
  2840  0F10                     	;# 
  2841  0F11                     	;# 
  2842  0F12                     	;# 
  2843  0F13                     	;# 
  2844  0F14                     	;# 
  2845  0F15                     	;# 
  2846  0F16                     	;# 
  2847  0F17                     	;# 
  2848  0F18                     	;# 
  2849  0F19                     	;# 
  2850  0F1A                     	;# 
  2851  0F1B                     	;# 
  2852  0F1C                     	;# 
  2853  0F1D                     	;# 
  2854  0F1E                     	;# 
  2855  0F1F                     	;# 
  2856  0F20                     	;# 
  2857  0F21                     	;# 
  2858  0F22                     	;# 
  2859  0F23                     	;# 
  2860  0F24                     	;# 
  2861  0F25                     	;# 
  2862  0F26                     	;# 
  2863  0F27                     	;# 
  2864  0F28                     	;# 
  2865  0F29                     	;# 
  2866  0F2A                     	;# 
  2867  0F2B                     	;# 
  2868  0F2C                     	;# 
  2869  0F2D                     	;# 
  2870  0F2E                     	;# 
  2871  0F2F                     	;# 
  2872  0F30                     	;# 
  2873  0F31                     	;# 
  2874  0F32                     	;# 
  2875  0F38                     	;# 
  2876  0F39                     	;# 
  2877  0F3A                     	;# 
  2878  0F3B                     	;# 
  2879  0F3C                     	;# 
  2880  0F3D                     	;# 
  2881  0F3E                     	;# 
  2882  0F3F                     	;# 
  2883  0F40                     	;# 
  2884  0F41                     	;# 
  2885  0F43                     	;# 
  2886  0F44                     	;# 
  2887  0F45                     	;# 
  2888  0F46                     	;# 
  2889  0F47                     	;# 
  2890  0F48                     	;# 
  2891  0F49                     	;# 
  2892  0F4A                     	;# 
  2893  0F4B                     	;# 
  2894  0F4C                     	;# 
  2895  0F4E                     	;# 
  2896  0F4F                     	;# 
  2897  0F50                     	;# 
  2898  0F51                     	;# 
  2899  0F52                     	;# 
  2900  0F53                     	;# 
  2901  0F54                     	;# 
  2902  0F55                     	;# 
  2903  0F56                     	;# 
  2904  0F57                     	;# 
  2905  0F59                     	;# 
  2906  0F5A                     	;# 
  2907  0F5B                     	;# 
  2908  0F5C                     	;# 
  2909  0F5D                     	;# 
  2910  0F61                     	;# 
  2911  0F62                     	;# 
  2912  0F64                     	;# 
  2913  0F65                     	;# 
  2914  0F66                     	;# 
  2915  0F67                     	;# 
  2916  0F68                     	;# 
  2917  0F69                     	;# 
  2918  0F6A                     	;# 
  2919  0F6B                     	;# 
  2920  0F6C                     	;# 
  2921  0F6D                     	;# 
  2922  0FE4                     	;# 
  2923  0FE5                     	;# 
  2924  0FE6                     	;# 
  2925  0FE7                     	;# 
  2926  0FE8                     	;# 
  2927  0FE9                     	;# 
  2928  0FEA                     	;# 
  2929  0FEB                     	;# 
  2930  0FED                     	;# 
  2931  0FEE                     	;# 
  2932  0FEF                     	;# 
  2933  0000                     	;# 
  2934  0001                     	;# 
  2935  0002                     	;# 
  2936  0003                     	;# 
  2937  0004                     	;# 
  2938  0005                     	;# 
  2939  0006                     	;# 
  2940  0007                     	;# 
  2941  0008                     	;# 
  2942  0009                     	;# 
  2943  000A                     	;# 
  2944  000B                     	;# 
  2945  000C                     	;# 
  2946  000D                     	;# 
  2947  000E                     	;# 
  2948  000F                     	;# 
  2949  0010                     	;# 
  2950  0011                     	;# 
  2951  0012                     	;# 
  2952  0013                     	;# 
  2953  0014                     	;# 
  2954  0015                     	;# 
  2955  0016                     	;# 
  2956  0017                     	;# 
  2957  0018                     	;# 
  2958  0019                     	;# 
  2959  001A                     	;# 
  2960  001C                     	;# 
  2961  001C                     	;# 
  2962  001D                     	;# 
  2963  001D                     	;# 
  2964  001E                     	;# 
  2965  001F                     	;# 
  2966  008C                     	;# 
  2967  008C                     	;# 
  2968  008D                     	;# 
  2969  008E                     	;# 
  2970  008E                     	;# 
  2971  008F                     	;# 
  2972  0090                     	;# 
  2973  0090                     	;# 
  2974  0091                     	;# 
  2975  0093                     	;# 
  2976  0094                     	;# 
  2977  0095                     	;# 
  2978  0096                     	;# 
  2979  0097                     	;# 
  2980  0098                     	;# 
  2981  0099                     	;# 
  2982  009A                     	;# 
  2983  009B                     	;# 
  2984  009C                     	;# 
  2985  009D                     	;# 
  2986  009E                     	;# 
  2987  010C                     	;# 
  2988  010D                     	;# 
  2989  010E                     	;# 
  2990  010E                     	;# 
  2991  010F                     	;# 
  2992  0110                     	;# 
  2993  0110                     	;# 
  2994  0111                     	;# 
  2995  0112                     	;# 
  2996  0112                     	;# 
  2997  0113                     	;# 
  2998  0114                     	;# 
  2999  0114                     	;# 
  3000  0115                     	;# 
  3001  0116                     	;# 
  3002  0116                     	;# 
  3003  0117                     	;# 
  3004  0119                     	;# 
  3005  0119                     	;# 
  3006  0119                     	;# 
  3007  011A                     	;# 
  3008  011A                     	;# 
  3009  011A                     	;# 
  3010  011B                     	;# 
  3011  011B                     	;# 
  3012  011B                     	;# 
  3013  011B                     	;# 
  3014  011B                     	;# 
  3015  011C                     	;# 
  3016  011C                     	;# 
  3017  011C                     	;# 
  3018  011D                     	;# 
  3019  011D                     	;# 
  3020  011D                     	;# 
  3021  011E                     	;# 
  3022  011E                     	;# 
  3023  011E                     	;# 
  3024  011F                     	;# 
  3025  011F                     	;# 
  3026  011F                     	;# 
  3027  011F                     	;# 
  3028  011F                     	;# 
  3029  018C                     	;# 
  3030  018D                     	;# 
  3031  018E                     	;# 
  3032  018F                     	;# 
  3033  0190                     	;# 
  3034  0191                     	;# 
  3035  0192                     	;# 
  3036  0196                     	;# 
  3037  0197                     	;# 
  3038  0198                     	;# 
  3039  0199                     	;# 
  3040  019A                     	;# 
  3041  019B                     	;# 
  3042  019C                     	;# 
  3043  020C                     	;# 
  3044  020C                     	;# 
  3045  020D                     	;# 
  3046  020E                     	;# 
  3047  020F                     	;# 
  3048  020F                     	;# 
  3049  0210                     	;# 
  3050  0210                     	;# 
  3051  0211                     	;# 
  3052  0211                     	;# 
  3053  0212                     	;# 
  3054  0212                     	;# 
  3055  0213                     	;# 
  3056  0214                     	;# 
  3057  0215                     	;# 
  3058  0215                     	;# 
  3059  0216                     	;# 
  3060  0216                     	;# 
  3061  0217                     	;# 
  3062  0217                     	;# 
  3063  0218                     	;# 
  3064  0218                     	;# 
  3065  0219                     	;# 
  3066  021A                     	;# 
  3067  021B                     	;# 
  3068  021B                     	;# 
  3069  021C                     	;# 
  3070  021C                     	;# 
  3071  021D                     	;# 
  3072  021D                     	;# 
  3073  021E                     	;# 
  3074  021F                     	;# 
  3075  028C                     	;# 
  3076  028C                     	;# 
  3077  028D                     	;# 
  3078  028D                     	;# 
  3079  028E                     	;# 
  3080  028F                     	;# 
  3081  0290                     	;# 
  3082  0290                     	;# 
  3083  0291                     	;# 
  3084  0292                     	;# 
  3085  0292                     	;# 
  3086  0293                     	;# 
  3087  0293                     	;# 
  3088  0294                     	;# 
  3089  0295                     	;# 
  3090  0296                     	;# 
  3091  0296                     	;# 
  3092  0297                     	;# 
  3093  0298                     	;# 
  3094  0298                     	;# 
  3095  0299                     	;# 
  3096  0299                     	;# 
  3097  029A                     	;# 
  3098  029B                     	;# 
  3099  029C                     	;# 
  3100  029C                     	;# 
  3101  029D                     	;# 
  3102  030C                     	;# 
  3103  030C                     	;# 
  3104  030D                     	;# 
  3105  030E                     	;# 
  3106  030F                     	;# 
  3107  0310                     	;# 
  3108  0310                     	;# 
  3109  0311                     	;# 
  3110  0312                     	;# 
  3111  0313                     	;# 
  3112  0314                     	;# 
  3113  0314                     	;# 
  3114  0315                     	;# 
  3115  0316                     	;# 
  3116  0317                     	;# 
  3117  0318                     	;# 
  3118  0318                     	;# 
  3119  0319                     	;# 
  3120  031A                     	;# 
  3121  031B                     	;# 
  3122  031C                     	;# 
  3123  031C                     	;# 
  3124  031D                     	;# 
  3125  031E                     	;# 
  3126  031F                     	;# 
  3127  038C                     	;# 
  3128  038D                     	;# 
  3129  038E                     	;# 
  3130  0390                     	;# 
  3131  0391                     	;# 
  3132  0392                     	;# 
  3133  040C                     	;# 
  3134  040D                     	;# 
  3135  040E                     	;# 
  3136  040F                     	;# 
  3137  0410                     	;# 
  3138  0411                     	;# 
  3139  0416                     	;# 
  3140  0416                     	;# 
  3141  0417                     	;# 
  3142  0418                     	;# 
  3143  0418                     	;# 
  3144  0419                     	;# 
  3145  041A                     	;# 
  3146  041A                     	;# 
  3147  041B                     	;# 
  3148  041C                     	;# 
  3149  041C                     	;# 
  3150  041D                     	;# 
  3151  041E                     	;# 
  3152  041F                     	;# 
  3153  048C                     	;# 
  3154  048C                     	;# 
  3155  048D                     	;# 
  3156  048E                     	;# 
  3157  048F                     	;# 
  3158  048F                     	;# 
  3159  0490                     	;# 
  3160  0491                     	;# 
  3161  0492                     	;# 
  3162  0492                     	;# 
  3163  0493                     	;# 
  3164  0494                     	;# 
  3165  0495                     	;# 
  3166  0495                     	;# 
  3167  0496                     	;# 
  3168  0497                     	;# 
  3169  0498                     	;# 
  3170  0499                     	;# 
  3171  049A                     	;# 
  3172  049B                     	;# 
  3173  049C                     	;# 
  3174  049D                     	;# 
  3175  050C                     	;# 
  3176  050C                     	;# 
  3177  050D                     	;# 
  3178  050E                     	;# 
  3179  050F                     	;# 
  3180  050F                     	;# 
  3181  0510                     	;# 
  3182  0511                     	;# 
  3183  0512                     	;# 
  3184  0512                     	;# 
  3185  0513                     	;# 
  3186  0514                     	;# 
  3187  0515                     	;# 
  3188  0515                     	;# 
  3189  0516                     	;# 
  3190  0517                     	;# 
  3191  0518                     	;# 
  3192  0519                     	;# 
  3193  051A                     	;# 
  3194  051B                     	;# 
  3195  051C                     	;# 
  3196  051D                     	;# 
  3197  058C                     	;# 
  3198  058C                     	;# 
  3199  058D                     	;# 
  3200  058E                     	;# 
  3201  058F                     	;# 
  3202  058F                     	;# 
  3203  0590                     	;# 
  3204  0591                     	;# 
  3205  0592                     	;# 
  3206  0593                     	;# 
  3207  060C                     	;# 
  3208  060D                     	;# 
  3209  060E                     	;# 
  3210  060F                     	;# 
  3211  0610                     	;# 
  3212  0611                     	;# 
  3213  0612                     	;# 
  3214  0613                     	;# 
  3215  0614                     	;# 
  3216  0616                     	;# 
  3217  0617                     	;# 
  3218  0618                     	;# 
  3219  0619                     	;# 
  3220  061A                     	;# 
  3221  061B                     	;# 
  3222  061C                     	;# 
  3223  061D                     	;# 
  3224  061E                     	;# 
  3225  068C                     	;# 
  3226  068D                     	;# 
  3227  068E                     	;# 
  3228  068F                     	;# 
  3229  0690                     	;# 
  3230  0691                     	;# 
  3231  0692                     	;# 
  3232  0693                     	;# 
  3233  0694                     	;# 
  3234  070C                     	;# 
  3235  070D                     	;# 
  3236  070E                     	;# 
  3237  070F                     	;# 
  3238  0710                     	;# 
  3239  0711                     	;# 
  3240  0712                     	;# 
  3241  0713                     	;# 
  3242  0714                     	;# 
  3243  0716                     	;# 
  3244  0717                     	;# 
  3245  0718                     	;# 
  3246  0719                     	;# 
  3247  071A                     	;# 
  3248  071B                     	;# 
  3249  071C                     	;# 
  3250  071D                     	;# 
  3251  071E                     	;# 
  3252  0796                     	;# 
  3253  0797                     	;# 
  3254  0798                     	;# 
  3255  0799                     	;# 
  3256  079A                     	;# 
  3257  079B                     	;# 
  3258  080C                     	;# 
  3259  080D                     	;# 
  3260  080E                     	;# 
  3261  080F                     	;# 
  3262  0810                     	;# 
  3263  0811                     	;# 
  3264  0812                     	;# 
  3265  0813                     	;# 
  3266  0814                     	;# 
  3267  081A                     	;# 
  3268  081B                     	;# 
  3269  081C                     	;# 
  3270  081D                     	;# 
  3271  081E                     	;# 
  3272  081F                     	;# 
  3273  088C                     	;# 
  3274  088D                     	;# 
  3275  088E                     	;# 
  3276  088F                     	;# 
  3277  0890                     	;# 
  3278  0891                     	;# 
  3279  0892                     	;# 
  3280  0893                     	;# 
  3281  0895                     	;# 
  3282  0896                     	;# 
  3283  0897                     	;# 
  3284  0898                     	;# 
  3285  0899                     	;# 
  3286  089A                     	;# 
  3287  089B                     	;# 
  3288  090C                     	;# 
  3289  090E                     	;# 
  3290  090F                     	;# 
  3291  091F                     	;# 
  3292  091F                     	;# 
  3293  098F                     	;# 
  3294  098F                     	;# 
  3295  0990                     	;# 
  3296  0991                     	;# 
  3297  0992                     	;# 
  3298  0993                     	;# 
  3299  0994                     	;# 
  3300  0995                     	;# 
  3301  0996                     	;# 
  3302  0997                     	;# 
  3303  0E0F                     	;# 
  3304  0E10                     	;# 
  3305  0E11                     	;# 
  3306  0E12                     	;# 
  3307  0E13                     	;# 
  3308  0E14                     	;# 
  3309  0E15                     	;# 
  3310  0E16                     	;# 
  3311  0E17                     	;# 
  3312  0E18                     	;# 
  3313  0E19                     	;# 
  3314  0E1A                     	;# 
  3315  0E1B                     	;# 
  3316  0E1C                     	;# 
  3317  0E1D                     	;# 
  3318  0E1E                     	;# 
  3319  0E1F                     	;# 
  3320  0E20                     	;# 
  3321  0E21                     	;# 
  3322  0E22                     	;# 
  3323  0E23                     	;# 
  3324  0E24                     	;# 
  3325  0E25                     	;# 
  3326  0E26                     	;# 
  3327  0E27                     	;# 
  3328  0E28                     	;# 
  3329  0E29                     	;# 
  3330  0E2A                     	;# 
  3331  0E2B                     	;# 
  3332  0E2C                     	;# 
  3333  0E2D                     	;# 
  3334  0E2E                     	;# 
  3335  0E2F                     	;# 
  3336  0E30                     	;# 
  3337  0E31                     	;# 
  3338  0E32                     	;# 
  3339  0E33                     	;# 
  3340  0E34                     	;# 
  3341  0E35                     	;# 
  3342  0E36                     	;# 
  3343  0E37                     	;# 
  3344  0E8F                     	;# 
  3345  0E90                     	;# 
  3346  0E91                     	;# 
  3347  0E92                     	;# 
  3348  0E93                     	;# 
  3349  0E94                     	;# 
  3350  0E95                     	;# 
  3351  0E96                     	;# 
  3352  0E97                     	;# 
  3353  0E9C                     	;# 
  3354  0E9D                     	;# 
  3355  0E9E                     	;# 
  3356  0EA1                     	;# 
  3357  0EA2                     	;# 
  3358  0EA3                     	;# 
  3359  0EA4                     	;# 
  3360  0EA5                     	;# 
  3361  0EA9                     	;# 
  3362  0EAA                     	;# 
  3363  0EAB                     	;# 
  3364  0EAC                     	;# 
  3365  0EB1                     	;# 
  3366  0EB2                     	;# 
  3367  0EB3                     	;# 
  3368  0EB8                     	;# 
  3369  0EB9                     	;# 
  3370  0EBA                     	;# 
  3371  0EBB                     	;# 
  3372  0EBC                     	;# 
  3373  0EBD                     	;# 
  3374  0EBE                     	;# 
  3375  0EC3                     	;# 
  3376  0EC5                     	;# 
  3377  0EC6                     	;# 
  3378  0EC7                     	;# 
  3379  0EC8                     	;# 
  3380  0EC9                     	;# 
  3381  0ECA                     	;# 
  3382  0ECB                     	;# 
  3383  0ECC                     	;# 
  3384  0F10                     	;# 
  3385  0F11                     	;# 
  3386  0F12                     	;# 
  3387  0F13                     	;# 
  3388  0F14                     	;# 
  3389  0F15                     	;# 
  3390  0F16                     	;# 
  3391  0F17                     	;# 
  3392  0F18                     	;# 
  3393  0F19                     	;# 
  3394  0F1A                     	;# 
  3395  0F1B                     	;# 
  3396  0F1C                     	;# 
  3397  0F1D                     	;# 
  3398  0F1E                     	;# 
  3399  0F1F                     	;# 
  3400  0F20                     	;# 
  3401  0F21                     	;# 
  3402  0F22                     	;# 
  3403  0F23                     	;# 
  3404  0F24                     	;# 
  3405  0F25                     	;# 
  3406  0F26                     	;# 
  3407  0F27                     	;# 
  3408  0F28                     	;# 
  3409  0F29                     	;# 
  3410  0F2A                     	;# 
  3411  0F2B                     	;# 
  3412  0F2C                     	;# 
  3413  0F2D                     	;# 
  3414  0F2E                     	;# 
  3415  0F2F                     	;# 
  3416  0F30                     	;# 
  3417  0F31                     	;# 
  3418  0F32                     	;# 
  3419  0F38                     	;# 
  3420  0F39                     	;# 
  3421  0F3A                     	;# 
  3422  0F3B                     	;# 
  3423  0F3C                     	;# 
  3424  0F3D                     	;# 
  3425  0F3E                     	;# 
  3426  0F3F                     	;# 
  3427  0F40                     	;# 
  3428  0F41                     	;# 
  3429  0F43                     	;# 
  3430  0F44                     	;# 
  3431  0F45                     	;# 
  3432  0F46                     	;# 
  3433  0F47                     	;# 
  3434  0F48                     	;# 
  3435  0F49                     	;# 
  3436  0F4A                     	;# 
  3437  0F4B                     	;# 
  3438  0F4C                     	;# 
  3439  0F4E                     	;# 
  3440  0F4F                     	;# 
  3441  0F50                     	;# 
  3442  0F51                     	;# 
  3443  0F52                     	;# 
  3444  0F53                     	;# 
  3445  0F54                     	;# 
  3446  0F55                     	;# 
  3447  0F56                     	;# 
  3448  0F57                     	;# 
  3449  0F59                     	;# 
  3450  0F5A                     	;# 
  3451  0F5B                     	;# 
  3452  0F5C                     	;# 
  3453  0F5D                     	;# 
  3454  0F61                     	;# 
  3455  0F62                     	;# 
  3456  0F64                     	;# 
  3457  0F65                     	;# 
  3458  0F66                     	;# 
  3459  0F67                     	;# 
  3460  0F68                     	;# 
  3461  0F69                     	;# 
  3462  0F6A                     	;# 
  3463  0F6B                     	;# 
  3464  0F6C                     	;# 
  3465  0F6D                     	;# 
  3466  0FE4                     	;# 
  3467  0FE5                     	;# 
  3468  0FE6                     	;# 
  3469  0FE7                     	;# 
  3470  0FE8                     	;# 
  3471  0FE9                     	;# 
  3472  0FEA                     	;# 
  3473  0FEB                     	;# 
  3474  0FED                     	;# 
  3475  0FEE                     	;# 
  3476  0FEF                     	;# 
  3477  0000                     	;# 
  3478  0001                     	;# 
  3479  0002                     	;# 
  3480  0003                     	;# 
  3481  0004                     	;# 
  3482  0005                     	;# 
  3483  0006                     	;# 
  3484  0007                     	;# 
  3485  0008                     	;# 
  3486  0009                     	;# 
  3487  000A                     	;# 
  3488  000B                     	;# 
  3489  000C                     	;# 
  3490  000D                     	;# 
  3491  000E                     	;# 
  3492  000F                     	;# 
  3493  0010                     	;# 
  3494  0011                     	;# 
  3495  0012                     	;# 
  3496  0013                     	;# 
  3497  0014                     	;# 
  3498  0015                     	;# 
  3499  0016                     	;# 
  3500  0017                     	;# 
  3501  0018                     	;# 
  3502  0019                     	;# 
  3503  001A                     	;# 
  3504  001C                     	;# 
  3505  001C                     	;# 
  3506  001D                     	;# 
  3507  001D                     	;# 
  3508  001E                     	;# 
  3509  001F                     	;# 
  3510  008C                     	;# 
  3511  008C                     	;# 
  3512  008D                     	;# 
  3513  008E                     	;# 
  3514  008E                     	;# 
  3515  008F                     	;# 
  3516  0090                     	;# 
  3517  0090                     	;# 
  3518  0091                     	;# 
  3519  0093                     	;# 
  3520  0094                     	;# 
  3521  0095                     	;# 
  3522  0096                     	;# 
  3523  0097                     	;# 
  3524  0098                     	;# 
  3525  0099                     	;# 
  3526  009A                     	;# 
  3527  009B                     	;# 
  3528  009C                     	;# 
  3529  009D                     	;# 
  3530  009E                     	;# 
  3531  010C                     	;# 
  3532  010D                     	;# 
  3533  010E                     	;# 
  3534  010E                     	;# 
  3535  010F                     	;# 
  3536  0110                     	;# 
  3537  0110                     	;# 
  3538  0111                     	;# 
  3539  0112                     	;# 
  3540  0112                     	;# 
  3541  0113                     	;# 
  3542  0114                     	;# 
  3543  0114                     	;# 
  3544  0115                     	;# 
  3545  0116                     	;# 
  3546  0116                     	;# 
  3547  0117                     	;# 
  3548  0119                     	;# 
  3549  0119                     	;# 
  3550  0119                     	;# 
  3551  011A                     	;# 
  3552  011A                     	;# 
  3553  011A                     	;# 
  3554  011B                     	;# 
  3555  011B                     	;# 
  3556  011B                     	;# 
  3557  011B                     	;# 
  3558  011B                     	;# 
  3559  011C                     	;# 
  3560  011C                     	;# 
  3561  011C                     	;# 
  3562  011D                     	;# 
  3563  011D                     	;# 
  3564  011D                     	;# 
  3565  011E                     	;# 
  3566  011E                     	;# 
  3567  011E                     	;# 
  3568  011F                     	;# 
  3569  011F                     	;# 
  3570  011F                     	;# 
  3571  011F                     	;# 
  3572  011F                     	;# 
  3573  018C                     	;# 
  3574  018D                     	;# 
  3575  018E                     	;# 
  3576  018F                     	;# 
  3577  0190                     	;# 
  3578  0191                     	;# 
  3579  0192                     	;# 
  3580  0196                     	;# 
  3581  0197                     	;# 
  3582  0198                     	;# 
  3583  0199                     	;# 
  3584  019A                     	;# 
  3585  019B                     	;# 
  3586  019C                     	;# 
  3587  020C                     	;# 
  3588  020C                     	;# 
  3589  020D                     	;# 
  3590  020E                     	;# 
  3591  020F                     	;# 
  3592  020F                     	;# 
  3593  0210                     	;# 
  3594  0210                     	;# 
  3595  0211                     	;# 
  3596  0211                     	;# 
  3597  0212                     	;# 
  3598  0212                     	;# 
  3599  0213                     	;# 
  3600  0214                     	;# 
  3601  0215                     	;# 
  3602  0215                     	;# 
  3603  0216                     	;# 
  3604  0216                     	;# 
  3605  0217                     	;# 
  3606  0217                     	;# 
  3607  0218                     	;# 
  3608  0218                     	;# 
  3609  0219                     	;# 
  3610  021A                     	;# 
  3611  021B                     	;# 
  3612  021B                     	;# 
  3613  021C                     	;# 
  3614  021C                     	;# 
  3615  021D                     	;# 
  3616  021D                     	;# 
  3617  021E                     	;# 
  3618  021F                     	;# 
  3619  028C                     	;# 
  3620  028C                     	;# 
  3621  028D                     	;# 
  3622  028D                     	;# 
  3623  028E                     	;# 
  3624  028F                     	;# 
  3625  0290                     	;# 
  3626  0290                     	;# 
  3627  0291                     	;# 
  3628  0292                     	;# 
  3629  0292                     	;# 
  3630  0293                     	;# 
  3631  0293                     	;# 
  3632  0294                     	;# 
  3633  0295                     	;# 
  3634  0296                     	;# 
  3635  0296                     	;# 
  3636  0297                     	;# 
  3637  0298                     	;# 
  3638  0298                     	;# 
  3639  0299                     	;# 
  3640  0299                     	;# 
  3641  029A                     	;# 
  3642  029B                     	;# 
  3643  029C                     	;# 
  3644  029C                     	;# 
  3645  029D                     	;# 
  3646  030C                     	;# 
  3647  030C                     	;# 
  3648  030D                     	;# 
  3649  030E                     	;# 
  3650  030F                     	;# 
  3651  0310                     	;# 
  3652  0310                     	;# 
  3653  0311                     	;# 
  3654  0312                     	;# 
  3655  0313                     	;# 
  3656  0314                     	;# 
  3657  0314                     	;# 
  3658  0315                     	;# 
  3659  0316                     	;# 
  3660  0317                     	;# 
  3661  0318                     	;# 
  3662  0318                     	;# 
  3663  0319                     	;# 
  3664  031A                     	;# 
  3665  031B                     	;# 
  3666  031C                     	;# 
  3667  031C                     	;# 
  3668  031D                     	;# 
  3669  031E                     	;# 
  3670  031F                     	;# 
  3671  038C                     	;# 
  3672  038D                     	;# 
  3673  038E                     	;# 
  3674  0390                     	;# 
  3675  0391                     	;# 
  3676  0392                     	;# 
  3677  040C                     	;# 
  3678  040D                     	;# 
  3679  040E                     	;# 
  3680  040F                     	;# 
  3681  0410                     	;# 
  3682  0411                     	;# 
  3683  0416                     	;# 
  3684  0416                     	;# 
  3685  0417                     	;# 
  3686  0418                     	;# 
  3687  0418                     	;# 
  3688  0419                     	;# 
  3689  041A                     	;# 
  3690  041A                     	;# 
  3691  041B                     	;# 
  3692  041C                     	;# 
  3693  041C                     	;# 
  3694  041D                     	;# 
  3695  041E                     	;# 
  3696  041F                     	;# 
  3697  048C                     	;# 
  3698  048C                     	;# 
  3699  048D                     	;# 
  3700  048E                     	;# 
  3701  048F                     	;# 
  3702  048F                     	;# 
  3703  0490                     	;# 
  3704  0491                     	;# 
  3705  0492                     	;# 
  3706  0492                     	;# 
  3707  0493                     	;# 
  3708  0494                     	;# 
  3709  0495                     	;# 
  3710  0495                     	;# 
  3711  0496                     	;# 
  3712  0497                     	;# 
  3713  0498                     	;# 
  3714  0499                     	;# 
  3715  049A                     	;# 
  3716  049B                     	;# 
  3717  049C                     	;# 
  3718  049D                     	;# 
  3719  050C                     	;# 
  3720  050C                     	;# 
  3721  050D                     	;# 
  3722  050E                     	;# 
  3723  050F                     	;# 
  3724  050F                     	;# 
  3725  0510                     	;# 
  3726  0511                     	;# 
  3727  0512                     	;# 
  3728  0512                     	;# 
  3729  0513                     	;# 
  3730  0514                     	;# 
  3731  0515                     	;# 
  3732  0515                     	;# 
  3733  0516                     	;# 
  3734  0517                     	;# 
  3735  0518                     	;# 
  3736  0519                     	;# 
  3737  051A                     	;# 
  3738  051B                     	;# 
  3739  051C                     	;# 
  3740  051D                     	;# 
  3741  058C                     	;# 
  3742  058C                     	;# 
  3743  058D                     	;# 
  3744  058E                     	;# 
  3745  058F                     	;# 
  3746  058F                     	;# 
  3747  0590                     	;# 
  3748  0591                     	;# 
  3749  0592                     	;# 
  3750  0593                     	;# 
  3751  060C                     	;# 
  3752  060D                     	;# 
  3753  060E                     	;# 
  3754  060F                     	;# 
  3755  0610                     	;# 
  3756  0611                     	;# 
  3757  0612                     	;# 
  3758  0613                     	;# 
  3759  0614                     	;# 
  3760  0616                     	;# 
  3761  0617                     	;# 
  3762  0618                     	;# 
  3763  0619                     	;# 
  3764  061A                     	;# 
  3765  061B                     	;# 
  3766  061C                     	;# 
  3767  061D                     	;# 
  3768  061E                     	;# 
  3769  068C                     	;# 
  3770  068D                     	;# 
  3771  068E                     	;# 
  3772  068F                     	;# 
  3773  0690                     	;# 
  3774  0691                     	;# 
  3775  0692                     	;# 
  3776  0693                     	;# 
  3777  0694                     	;# 
  3778  070C                     	;# 
  3779  070D                     	;# 
  3780  070E                     	;# 
  3781  070F                     	;# 
  3782  0710                     	;# 
  3783  0711                     	;# 
  3784  0712                     	;# 
  3785  0713                     	;# 
  3786  0714                     	;# 
  3787  0716                     	;# 
  3788  0717                     	;# 
  3789  0718                     	;# 
  3790  0719                     	;# 
  3791  071A                     	;# 
  3792  071B                     	;# 
  3793  071C                     	;# 
  3794  071D                     	;# 
  3795  071E                     	;# 
  3796  0796                     	;# 
  3797  0797                     	;# 
  3798  0798                     	;# 
  3799  0799                     	;# 
  3800  079A                     	;# 
  3801  079B                     	;# 
  3802  080C                     	;# 
  3803  080D                     	;# 
  3804  080E                     	;# 
  3805  080F                     	;# 
  3806  0810                     	;# 
  3807  0811                     	;# 
  3808  0812                     	;# 
  3809  0813                     	;# 
  3810  0814                     	;# 
  3811  081A                     	;# 
  3812  081B                     	;# 
  3813  081C                     	;# 
  3814  081D                     	;# 
  3815  081E                     	;# 
  3816  081F                     	;# 
  3817  088C                     	;# 
  3818  088D                     	;# 
  3819  088E                     	;# 
  3820  088F                     	;# 
  3821  0890                     	;# 
  3822  0891                     	;# 
  3823  0892                     	;# 
  3824  0893                     	;# 
  3825  0895                     	;# 
  3826  0896                     	;# 
  3827  0897                     	;# 
  3828  0898                     	;# 
  3829  0899                     	;# 
  3830  089A                     	;# 
  3831  089B                     	;# 
  3832  090C                     	;# 
  3833  090E                     	;# 
  3834  090F                     	;# 
  3835  091F                     	;# 
  3836  091F                     	;# 
  3837  098F                     	;# 
  3838  098F                     	;# 
  3839  0990                     	;# 
  3840  0991                     	;# 
  3841  0992                     	;# 
  3842  0993                     	;# 
  3843  0994                     	;# 
  3844  0995                     	;# 
  3845  0996                     	;# 
  3846  0997                     	;# 
  3847  0E0F                     	;# 
  3848  0E10                     	;# 
  3849  0E11                     	;# 
  3850  0E12                     	;# 
  3851  0E13                     	;# 
  3852  0E14                     	;# 
  3853  0E15                     	;# 
  3854  0E16                     	;# 
  3855  0E17                     	;# 
  3856  0E18                     	;# 
  3857  0E19                     	;# 
  3858  0E1A                     	;# 
  3859  0E1B                     	;# 
  3860  0E1C                     	;# 
  3861  0E1D                     	;# 
  3862  0E1E                     	;# 
  3863  0E1F                     	;# 
  3864  0E20                     	;# 
  3865  0E21                     	;# 
  3866  0E22                     	;# 
  3867  0E23                     	;# 
  3868  0E24                     	;# 
  3869  0E25                     	;# 
  3870  0E26                     	;# 
  3871  0E27                     	;# 
  3872  0E28                     	;# 
  3873  0E29                     	;# 
  3874  0E2A                     	;# 
  3875  0E2B                     	;# 
  3876  0E2C                     	;# 
  3877  0E2D                     	;# 
  3878  0E2E                     	;# 
  3879  0E2F                     	;# 
  3880  0E30                     	;# 
  3881  0E31                     	;# 
  3882  0E32                     	;# 
  3883  0E33                     	;# 
  3884  0E34                     	;# 
  3885  0E35                     	;# 
  3886  0E36                     	;# 
  3887  0E37                     	;# 
  3888  0E8F                     	;# 
  3889  0E90                     	;# 
  3890  0E91                     	;# 
  3891  0E92                     	;# 
  3892  0E93                     	;# 
  3893  0E94                     	;# 
  3894  0E95                     	;# 
  3895  0E96                     	;# 
  3896  0E97                     	;# 
  3897  0E9C                     	;# 
  3898  0E9D                     	;# 
  3899  0E9E                     	;# 
  3900  0EA1                     	;# 
  3901  0EA2                     	;# 
  3902  0EA3                     	;# 
  3903  0EA4                     	;# 
  3904  0EA5                     	;# 
  3905  0EA9                     	;# 
  3906  0EAA                     	;# 
  3907  0EAB                     	;# 
  3908  0EAC                     	;# 
  3909  0EB1                     	;# 
  3910  0EB2                     	;# 
  3911  0EB3                     	;# 
  3912  0EB8                     	;# 
  3913  0EB9                     	;# 
  3914  0EBA                     	;# 
  3915  0EBB                     	;# 
  3916  0EBC                     	;# 
  3917  0EBD                     	;# 
  3918  0EBE                     	;# 
  3919  0EC3                     	;# 
  3920  0EC5                     	;# 
  3921  0EC6                     	;# 
  3922  0EC7                     	;# 
  3923  0EC8                     	;# 
  3924  0EC9                     	;# 
  3925  0ECA                     	;# 
  3926  0ECB                     	;# 
  3927  0ECC                     	;# 
  3928  0F10                     	;# 
  3929  0F11                     	;# 
  3930  0F12                     	;# 
  3931  0F13                     	;# 
  3932  0F14                     	;# 
  3933  0F15                     	;# 
  3934  0F16                     	;# 
  3935  0F17                     	;# 
  3936  0F18                     	;# 
  3937  0F19                     	;# 
  3938  0F1A                     	;# 
  3939  0F1B                     	;# 
  3940  0F1C                     	;# 
  3941  0F1D                     	;# 
  3942  0F1E                     	;# 
  3943  0F1F                     	;# 
  3944  0F20                     	;# 
  3945  0F21                     	;# 
  3946  0F22                     	;# 
  3947  0F23                     	;# 
  3948  0F24                     	;# 
  3949  0F25                     	;# 
  3950  0F26                     	;# 
  3951  0F27                     	;# 
  3952  0F28                     	;# 
  3953  0F29                     	;# 
  3954  0F2A                     	;# 
  3955  0F2B                     	;# 
  3956  0F2C                     	;# 
  3957  0F2D                     	;# 
  3958  0F2E                     	;# 
  3959  0F2F                     	;# 
  3960  0F30                     	;# 
  3961  0F31                     	;# 
  3962  0F32                     	;# 
  3963  0F38                     	;# 
  3964  0F39                     	;# 
  3965  0F3A                     	;# 
  3966  0F3B                     	;# 
  3967  0F3C                     	;# 
  3968  0F3D                     	;# 
  3969  0F3E                     	;# 
  3970  0F3F                     	;# 
  3971  0F40                     	;# 
  3972  0F41                     	;# 
  3973  0F43                     	;# 
  3974  0F44                     	;# 
  3975  0F45                     	;# 
  3976  0F46                     	;# 
  3977  0F47                     	;# 
  3978  0F48                     	;# 
  3979  0F49                     	;# 
  3980  0F4A                     	;# 
  3981  0F4B                     	;# 
  3982  0F4C                     	;# 
  3983  0F4E                     	;# 
  3984  0F4F                     	;# 
  3985  0F50                     	;# 
  3986  0F51                     	;# 
  3987  0F52                     	;# 
  3988  0F53                     	;# 
  3989  0F54                     	;# 
  3990  0F55                     	;# 
  3991  0F56                     	;# 
  3992  0F57                     	;# 
  3993  0F59                     	;# 
  3994  0F5A                     	;# 
  3995  0F5B                     	;# 
  3996  0F5C                     	;# 
  3997  0F5D                     	;# 
  3998  0F61                     	;# 
  3999  0F62                     	;# 
  4000  0F64                     	;# 
  4001  0F65                     	;# 
  4002  0F66                     	;# 
  4003  0F67                     	;# 
  4004  0F68                     	;# 
  4005  0F69                     	;# 
  4006  0F6A                     	;# 
  4007  0F6B                     	;# 
  4008  0F6C                     	;# 
  4009  0F6D                     	;# 
  4010  0FE4                     	;# 
  4011  0FE5                     	;# 
  4012  0FE6                     	;# 
  4013  0FE7                     	;# 
  4014  0FE8                     	;# 
  4015  0FE9                     	;# 
  4016  0FEA                     	;# 
  4017  0FEB                     	;# 
  4018  0FED                     	;# 
  4019  0FEE                     	;# 
  4020  0FEF                     	;# 
  4021  0000                     	;# 
  4022  0001                     	;# 
  4023  0002                     	;# 
  4024  0003                     	;# 
  4025  0004                     	;# 
  4026  0005                     	;# 
  4027  0006                     	;# 
  4028  0007                     	;# 
  4029  0008                     	;# 
  4030  0009                     	;# 
  4031  000A                     	;# 
  4032  000B                     	;# 
  4033  000C                     	;# 
  4034  000D                     	;# 
  4035  000E                     	;# 
  4036  000F                     	;# 
  4037  0010                     	;# 
  4038  0011                     	;# 
  4039  0012                     	;# 
  4040  0013                     	;# 
  4041  0014                     	;# 
  4042  0015                     	;# 
  4043  0016                     	;# 
  4044  0017                     	;# 
  4045  0018                     	;# 
  4046  0019                     	;# 
  4047  001A                     	;# 
  4048  001C                     	;# 
  4049  001C                     	;# 
  4050  001D                     	;# 
  4051  001D                     	;# 
  4052  001E                     	;# 
  4053  001F                     	;# 
  4054  008C                     	;# 
  4055  008C                     	;# 
  4056  008D                     	;# 
  4057  008E                     	;# 
  4058  008E                     	;# 
  4059  008F                     	;# 
  4060  0090                     	;# 
  4061  0090                     	;# 
  4062  0091                     	;# 
  4063  0093                     	;# 
  4064  0094                     	;# 
  4065  0095                     	;# 
  4066  0096                     	;# 
  4067  0097                     	;# 
  4068  0098                     	;# 
  4069  0099                     	;# 
  4070  009A                     	;# 
  4071  009B                     	;# 
  4072  009C                     	;# 
  4073  009D                     	;# 
  4074  009E                     	;# 
  4075  010C                     	;# 
  4076  010D                     	;# 
  4077  010E                     	;# 
  4078  010E                     	;# 
  4079  010F                     	;# 
  4080  0110                     	;# 
  4081  0110                     	;# 
  4082  0111                     	;# 
  4083  0112                     	;# 
  4084  0112                     	;# 
  4085  0113                     	;# 
  4086  0114                     	;# 
  4087  0114                     	;# 
  4088  0115                     	;# 
  4089  0116                     	;# 
  4090  0116                     	;# 
  4091  0117                     	;# 
  4092  0119                     	;# 
  4093  0119                     	;# 
  4094  0119                     	;# 
  4095  011A                     	;# 
  4096  011A                     	;# 
  4097  011A                     	;# 
  4098  011B                     	;# 
  4099  011B                     	;# 
  4100  011B                     	;# 
  4101  011B                     	;# 
  4102  011B                     	;# 
  4103  011C                     	;# 
  4104  011C                     	;# 
  4105  011C                     	;# 
  4106  011D                     	;# 
  4107  011D                     	;# 
  4108  011D                     	;# 
  4109  011E                     	;# 
  4110  011E                     	;# 
  4111  011E                     	;# 
  4112  011F                     	;# 
  4113  011F                     	;# 
  4114  011F                     	;# 
  4115  011F                     	;# 
  4116  011F                     	;# 
  4117  018C                     	;# 
  4118  018D                     	;# 
  4119  018E                     	;# 
  4120  018F                     	;# 
  4121  0190                     	;# 
  4122  0191                     	;# 
  4123  0192                     	;# 
  4124  0196                     	;# 
  4125  0197                     	;# 
  4126  0198                     	;# 
  4127  0199                     	;# 
  4128  019A                     	;# 
  4129  019B                     	;# 
  4130  019C                     	;# 
  4131  020C                     	;# 
  4132  020C                     	;# 
  4133  020D                     	;# 
  4134  020E                     	;# 
  4135  020F                     	;# 
  4136  020F                     	;# 
  4137  0210                     	;# 
  4138  0210                     	;# 
  4139  0211                     	;# 
  4140  0211                     	;# 
  4141  0212                     	;# 
  4142  0212                     	;# 
  4143  0213                     	;# 
  4144  0214                     	;# 
  4145  0215                     	;# 
  4146  0215                     	;# 
  4147  0216                     	;# 
  4148  0216                     	;# 
  4149  0217                     	;# 
  4150  0217                     	;# 
  4151  0218                     	;# 
  4152  0218                     	;# 
  4153  0219                     	;# 
  4154  021A                     	;# 
  4155  021B                     	;# 
  4156  021B                     	;# 
  4157  021C                     	;# 
  4158  021C                     	;# 
  4159  021D                     	;# 
  4160  021D                     	;# 
  4161  021E                     	;# 
  4162  021F                     	;# 
  4163  028C                     	;# 
  4164  028C                     	;# 
  4165  028D                     	;# 
  4166  028D                     	;# 
  4167  028E                     	;# 
  4168  028F                     	;# 
  4169  0290                     	;# 
  4170  0290                     	;# 
  4171  0291                     	;# 
  4172  0292                     	;# 
  4173  0292                     	;# 
  4174  0293                     	;# 
  4175  0293                     	;# 
  4176  0294                     	;# 
  4177  0295                     	;# 
  4178  0296                     	;# 
  4179  0296                     	;# 
  4180  0297                     	;# 
  4181  0298                     	;# 
  4182  0298                     	;# 
  4183  0299                     	;# 
  4184  0299                     	;# 
  4185  029A                     	;# 
  4186  029B                     	;# 
  4187  029C                     	;# 
  4188  029C                     	;# 
  4189  029D                     	;# 
  4190  030C                     	;# 
  4191  030C                     	;# 
  4192  030D                     	;# 
  4193  030E                     	;# 
  4194  030F                     	;# 
  4195  0310                     	;# 
  4196  0310                     	;# 
  4197  0311                     	;# 
  4198  0312                     	;# 
  4199  0313                     	;# 
  4200  0314                     	;# 
  4201  0314                     	;# 
  4202  0315                     	;# 
  4203  0316                     	;# 
  4204  0317                     	;# 
  4205  0318                     	;# 
  4206  0318                     	;# 
  4207  0319                     	;# 
  4208  031A                     	;# 
  4209  031B                     	;# 
  4210  031C                     	;# 
  4211  031C                     	;# 
  4212  031D                     	;# 
  4213  031E                     	;# 
  4214  031F                     	;# 
  4215  038C                     	;# 
  4216  038D                     	;# 
  4217  038E                     	;# 
  4218  0390                     	;# 
  4219  0391                     	;# 
  4220  0392                     	;# 
  4221  040C                     	;# 
  4222  040D                     	;# 
  4223  040E                     	;# 
  4224  040F                     	;# 
  4225  0410                     	;# 
  4226  0411                     	;# 
  4227  0416                     	;# 
  4228  0416                     	;# 
  4229  0417                     	;# 
  4230  0418                     	;# 
  4231  0418                     	;# 
  4232  0419                     	;# 
  4233  041A                     	;# 
  4234  041A                     	;# 
  4235  041B                     	;# 
  4236  041C                     	;# 
  4237  041C                     	;# 
  4238  041D                     	;# 
  4239  041E                     	;# 
  4240  041F                     	;# 
  4241  048C                     	;# 
  4242  048C                     	;# 
  4243  048D                     	;# 
  4244  048E                     	;# 
  4245  048F                     	;# 
  4246  048F                     	;# 
  4247  0490                     	;# 
  4248  0491                     	;# 
  4249  0492                     	;# 
  4250  0492                     	;# 
  4251  0493                     	;# 
  4252  0494                     	;# 
  4253  0495                     	;# 
  4254  0495                     	;# 
  4255  0496                     	;# 
  4256  0497                     	;# 
  4257  0498                     	;# 
  4258  0499                     	;# 
  4259  049A                     	;# 
  4260  049B                     	;# 
  4261  049C                     	;# 
  4262  049D                     	;# 
  4263  050C                     	;# 
  4264  050C                     	;# 
  4265  050D                     	;# 
  4266  050E                     	;# 
  4267  050F                     	;# 
  4268  050F                     	;# 
  4269  0510                     	;# 
  4270  0511                     	;# 
  4271  0512                     	;# 
  4272  0512                     	;# 
  4273  0513                     	;# 
  4274  0514                     	;# 
  4275  0515                     	;# 
  4276  0515                     	;# 
  4277  0516                     	;# 
  4278  0517                     	;# 
  4279  0518                     	;# 
  4280  0519                     	;# 
  4281  051A                     	;# 
  4282  051B                     	;# 
  4283  051C                     	;# 
  4284  051D                     	;# 
  4285  058C                     	;# 
  4286  058C                     	;# 
  4287  058D                     	;# 
  4288  058E                     	;# 
  4289  058F                     	;# 
  4290  058F                     	;# 
  4291  0590                     	;# 
  4292  0591                     	;# 
  4293  0592                     	;# 
  4294  0593                     	;# 
  4295  060C                     	;# 
  4296  060D                     	;# 
  4297  060E                     	;# 
  4298  060F                     	;# 
  4299  0610                     	;# 
  4300  0611                     	;# 
  4301  0612                     	;# 
  4302  0613                     	;# 
  4303  0614                     	;# 
  4304  0616                     	;# 
  4305  0617                     	;# 
  4306  0618                     	;# 
  4307  0619                     	;# 
  4308  061A                     	;# 
  4309  061B                     	;# 
  4310  061C                     	;# 
  4311  061D                     	;# 
  4312  061E                     	;# 
  4313  068C                     	;# 
  4314  068D                     	;# 
  4315  068E                     	;# 
  4316  068F                     	;# 
  4317  0690                     	;# 
  4318  0691                     	;# 
  4319  0692                     	;# 
  4320  0693                     	;# 
  4321  0694                     	;# 
  4322  070C                     	;# 
  4323  070D                     	;# 
  4324  070E                     	;# 
  4325  070F                     	;# 
  4326  0710                     	;# 
  4327  0711                     	;# 
  4328  0712                     	;# 
  4329  0713                     	;# 
  4330  0714                     	;# 
  4331  0716                     	;# 
  4332  0717                     	;# 
  4333  0718                     	;# 
  4334  0719                     	;# 
  4335  071A                     	;# 
  4336  071B                     	;# 
  4337  071C                     	;# 
  4338  071D                     	;# 
  4339  071E                     	;# 
  4340  0796                     	;# 
  4341  0797                     	;# 
  4342  0798                     	;# 
  4343  0799                     	;# 
  4344  079A                     	;# 
  4345  079B                     	;# 
  4346  080C                     	;# 
  4347  080D                     	;# 
  4348  080E                     	;# 
  4349  080F                     	;# 
  4350  0810                     	;# 
  4351  0811                     	;# 
  4352  0812                     	;# 
  4353  0813                     	;# 
  4354  0814                     	;# 
  4355  081A                     	;# 
  4356  081B                     	;# 
  4357  081C                     	;# 
  4358  081D                     	;# 
  4359  081E                     	;# 
  4360  081F                     	;# 
  4361  088C                     	;# 
  4362  088D                     	;# 
  4363  088E                     	;# 
  4364  088F                     	;# 
  4365  0890                     	;# 
  4366  0891                     	;# 
  4367  0892                     	;# 
  4368  0893                     	;# 
  4369  0895                     	;# 
  4370  0896                     	;# 
  4371  0897                     	;# 
  4372  0898                     	;# 
  4373  0899                     	;# 
  4374  089A                     	;# 
  4375  089B                     	;# 
  4376  090C                     	;# 
  4377  090E                     	;# 
  4378  090F                     	;# 
  4379  091F                     	;# 
  4380  091F                     	;# 
  4381  098F                     	;# 
  4382  098F                     	;# 
  4383  0990                     	;# 
  4384  0991                     	;# 
  4385  0992                     	;# 
  4386  0993                     	;# 
  4387  0994                     	;# 
  4388  0995                     	;# 
  4389  0996                     	;# 
  4390  0997                     	;# 
  4391  0E0F                     	;# 
  4392  0E10                     	;# 
  4393  0E11                     	;# 
  4394  0E12                     	;# 
  4395  0E13                     	;# 
  4396  0E14                     	;# 
  4397  0E15                     	;# 
  4398  0E16                     	;# 
  4399  0E17                     	;# 
  4400  0E18                     	;# 
  4401  0E19                     	;# 
  4402  0E1A                     	;# 
  4403  0E1B                     	;# 
  4404  0E1C                     	;# 
  4405  0E1D                     	;# 
  4406  0E1E                     	;# 
  4407  0E1F                     	;# 
  4408  0E20                     	;# 
  4409  0E21                     	;# 
  4410  0E22                     	;# 
  4411  0E23                     	;# 
  4412  0E24                     	;# 
  4413  0E25                     	;# 
  4414  0E26                     	;# 
  4415  0E27                     	;# 
  4416  0E28                     	;# 
  4417  0E29                     	;# 
  4418  0E2A                     	;# 
  4419  0E2B                     	;# 
  4420  0E2C                     	;# 
  4421  0E2D                     	;# 
  4422  0E2E                     	;# 
  4423  0E2F                     	;# 
  4424  0E30                     	;# 
  4425  0E31                     	;# 
  4426  0E32                     	;# 
  4427  0E33                     	;# 
  4428  0E34                     	;# 
  4429  0E35                     	;# 
  4430  0E36                     	;# 
  4431  0E37                     	;# 
  4432  0E8F                     	;# 
  4433  0E90                     	;# 
  4434  0E91                     	;# 
  4435  0E92                     	;# 
  4436  0E93                     	;# 
  4437  0E94                     	;# 
  4438  0E95                     	;# 
  4439  0E96                     	;# 
  4440  0E97                     	;# 
  4441  0E9C                     	;# 
  4442  0E9D                     	;# 
  4443  0E9E                     	;# 
  4444  0EA1                     	;# 
  4445  0EA2                     	;# 
  4446  0EA3                     	;# 
  4447  0EA4                     	;# 
  4448  0EA5                     	;# 
  4449  0EA9                     	;# 
  4450  0EAA                     	;# 
  4451  0EAB                     	;# 
  4452  0EAC                     	;# 
  4453  0EB1                     	;# 
  4454  0EB2                     	;# 
  4455  0EB3                     	;# 
  4456  0EB8                     	;# 
  4457  0EB9                     	;# 
  4458  0EBA                     	;# 
  4459  0EBB                     	;# 
  4460  0EBC                     	;# 
  4461  0EBD                     	;# 
  4462  0EBE                     	;# 
  4463  0EC3                     	;# 
  4464  0EC5                     	;# 
  4465  0EC6                     	;# 
  4466  0EC7                     	;# 
  4467  0EC8                     	;# 
  4468  0EC9                     	;# 
  4469  0ECA                     	;# 
  4470  0ECB                     	;# 
  4471  0ECC                     	;# 
  4472  0F10                     	;# 
  4473  0F11                     	;# 
  4474  0F12                     	;# 
  4475  0F13                     	;# 
  4476  0F14                     	;# 
  4477  0F15                     	;# 
  4478  0F16                     	;# 
  4479  0F17                     	;# 
  4480  0F18                     	;# 
  4481  0F19                     	;# 
  4482  0F1A                     	;# 
  4483  0F1B                     	;# 
  4484  0F1C                     	;# 
  4485  0F1D                     	;# 
  4486  0F1E                     	;# 
  4487  0F1F                     	;# 
  4488  0F20                     	;# 
  4489  0F21                     	;# 
  4490  0F22                     	;# 
  4491  0F23                     	;# 
  4492  0F24                     	;# 
  4493  0F25                     	;# 
  4494  0F26                     	;# 
  4495  0F27                     	;# 
  4496  0F28                     	;# 
  4497  0F29                     	;# 
  4498  0F2A                     	;# 
  4499  0F2B                     	;# 
  4500  0F2C                     	;# 
  4501  0F2D                     	;# 
  4502  0F2E                     	;# 
  4503  0F2F                     	;# 
  4504  0F30                     	;# 
  4505  0F31                     	;# 
  4506  0F32                     	;# 
  4507  0F38                     	;# 
  4508  0F39                     	;# 
  4509  0F3A                     	;# 
  4510  0F3B                     	;# 
  4511  0F3C                     	;# 
  4512  0F3D                     	;# 
  4513  0F3E                     	;# 
  4514  0F3F                     	;# 
  4515  0F40                     	;# 
  4516  0F41                     	;# 
  4517  0F43                     	;# 
  4518  0F44                     	;# 
  4519  0F45                     	;# 
  4520  0F46                     	;# 
  4521  0F47                     	;# 
  4522  0F48                     	;# 
  4523  0F49                     	;# 
  4524  0F4A                     	;# 
  4525  0F4B                     	;# 
  4526  0F4C                     	;# 
  4527  0F4E                     	;# 
  4528  0F4F                     	;# 
  4529  0F50                     	;# 
  4530  0F51                     	;# 
  4531  0F52                     	;# 
  4532  0F53                     	;# 
  4533  0F54                     	;# 
  4534  0F55                     	;# 
  4535  0F56                     	;# 
  4536  0F57                     	;# 
  4537  0F59                     	;# 
  4538  0F5A                     	;# 
  4539  0F5B                     	;# 
  4540  0F5C                     	;# 
  4541  0F5D                     	;# 
  4542  0F61                     	;# 
  4543  0F62                     	;# 
  4544  0F64                     	;# 
  4545  0F65                     	;# 
  4546  0F66                     	;# 
  4547  0F67                     	;# 
  4548  0F68                     	;# 
  4549  0F69                     	;# 
  4550  0F6A                     	;# 
  4551  0F6B                     	;# 
  4552  0F6C                     	;# 
  4553  0F6D                     	;# 
  4554  0FE4                     	;# 
  4555  0FE5                     	;# 
  4556  0FE6                     	;# 
  4557  0FE7                     	;# 
  4558  0FE8                     	;# 
  4559  0FE9                     	;# 
  4560  0FEA                     	;# 
  4561  0FEB                     	;# 
  4562  0FED                     	;# 
  4563  0FEE                     	;# 
  4564  0FEF                     	;# 
  4565  0000                     	;# 
  4566  0001                     	;# 
  4567  0002                     	;# 
  4568  0003                     	;# 
  4569  0004                     	;# 
  4570  0005                     	;# 
  4571  0006                     	;# 
  4572  0007                     	;# 
  4573  0008                     	;# 
  4574  0009                     	;# 
  4575  000A                     	;# 
  4576  000B                     	;# 
  4577  000C                     	;# 
  4578  000D                     	;# 
  4579  000E                     	;# 
  4580  000F                     	;# 
  4581  0010                     	;# 
  4582  0011                     	;# 
  4583  0012                     	;# 
  4584  0013                     	;# 
  4585  0014                     	;# 
  4586  0015                     	;# 
  4587  0016                     	;# 
  4588  0017                     	;# 
  4589  0018                     	;# 
  4590  0019                     	;# 
  4591  001A                     	;# 
  4592  001C                     	;# 
  4593  001C                     	;# 
  4594  001D                     	;# 
  4595  001D                     	;# 
  4596  001E                     	;# 
  4597  001F                     	;# 
  4598  008C                     	;# 
  4599  008C                     	;# 
  4600  008D                     	;# 
  4601  008E                     	;# 
  4602  008E                     	;# 
  4603  008F                     	;# 
  4604  0090                     	;# 
  4605  0090                     	;# 
  4606  0091                     	;# 
  4607  0093                     	;# 
  4608  0094                     	;# 
  4609  0095                     	;# 
  4610  0096                     	;# 
  4611  0097                     	;# 
  4612  0098                     	;# 
  4613  0099                     	;# 
  4614  009A                     	;# 
  4615  009B                     	;# 
  4616  009C                     	;# 
  4617  009D                     	;# 
  4618  009E                     	;# 
  4619  010C                     	;# 
  4620  010D                     	;# 
  4621  010E                     	;# 
  4622  010E                     	;# 
  4623  010F                     	;# 
  4624  0110                     	;# 
  4625  0110                     	;# 
  4626  0111                     	;# 
  4627  0112                     	;# 
  4628  0112                     	;# 
  4629  0113                     	;# 
  4630  0114                     	;# 
  4631  0114                     	;# 
  4632  0115                     	;# 
  4633  0116                     	;# 
  4634  0116                     	;# 
  4635  0117                     	;# 
  4636  0119                     	;# 
  4637  0119                     	;# 
  4638  0119                     	;# 
  4639  011A                     	;# 
  4640  011A                     	;# 
  4641  011A                     	;# 
  4642  011B                     	;# 
  4643  011B                     	;# 
  4644  011B                     	;# 
  4645  011B                     	;# 
  4646  011B                     	;# 
  4647  011C                     	;# 
  4648  011C                     	;# 
  4649  011C                     	;# 
  4650  011D                     	;# 
  4651  011D                     	;# 
  4652  011D                     	;# 
  4653  011E                     	;# 
  4654  011E                     	;# 
  4655  011E                     	;# 
  4656  011F                     	;# 
  4657  011F                     	;# 
  4658  011F                     	;# 
  4659  011F                     	;# 
  4660  011F                     	;# 
  4661  018C                     	;# 
  4662  018D                     	;# 
  4663  018E                     	;# 
  4664  018F                     	;# 
  4665  0190                     	;# 
  4666  0191                     	;# 
  4667  0192                     	;# 
  4668  0196                     	;# 
  4669  0197                     	;# 
  4670  0198                     	;# 
  4671  0199                     	;# 
  4672  019A                     	;# 
  4673  019B                     	;# 
  4674  019C                     	;# 
  4675  020C                     	;# 
  4676  020C                     	;# 
  4677  020D                     	;# 
  4678  020E                     	;# 
  4679  020F                     	;# 
  4680  020F                     	;# 
  4681  0210                     	;# 
  4682  0210                     	;# 
  4683  0211                     	;# 
  4684  0211                     	;# 
  4685  0212                     	;# 
  4686  0212                     	;# 
  4687  0213                     	;# 
  4688  0214                     	;# 
  4689  0215                     	;# 
  4690  0215                     	;# 
  4691  0216                     	;# 
  4692  0216                     	;# 
  4693  0217                     	;# 
  4694  0217                     	;# 
  4695  0218                     	;# 
  4696  0218                     	;# 
  4697  0219                     	;# 
  4698  021A                     	;# 
  4699  021B                     	;# 
  4700  021B                     	;# 
  4701  021C                     	;# 
  4702  021C                     	;# 
  4703  021D                     	;# 
  4704  021D                     	;# 
  4705  021E                     	;# 
  4706  021F                     	;# 
  4707  028C                     	;# 
  4708  028C                     	;# 
  4709  028D                     	;# 
  4710  028D                     	;# 
  4711  028E                     	;# 
  4712  028F                     	;# 
  4713  0290                     	;# 
  4714  0290                     	;# 
  4715  0291                     	;# 
  4716  0292                     	;# 
  4717  0292                     	;# 
  4718  0293                     	;# 
  4719  0293                     	;# 
  4720  0294                     	;# 
  4721  0295                     	;# 
  4722  0296                     	;# 
  4723  0296                     	;# 
  4724  0297                     	;# 
  4725  0298                     	;# 
  4726  0298                     	;# 
  4727  0299                     	;# 
  4728  0299                     	;# 
  4729  029A                     	;# 
  4730  029B                     	;# 
  4731  029C                     	;# 
  4732  029C                     	;# 
  4733  029D                     	;# 
  4734  030C                     	;# 
  4735  030C                     	;# 
  4736  030D                     	;# 
  4737  030E                     	;# 
  4738  030F                     	;# 
  4739  0310                     	;# 
  4740  0310                     	;# 
  4741  0311                     	;# 
  4742  0312                     	;# 
  4743  0313                     	;# 
  4744  0314                     	;# 
  4745  0314                     	;# 
  4746  0315                     	;# 
  4747  0316                     	;# 
  4748  0317                     	;# 
  4749  0318                     	;# 
  4750  0318                     	;# 
  4751  0319                     	;# 
  4752  031A                     	;# 
  4753  031B                     	;# 
  4754  031C                     	;# 
  4755  031C                     	;# 
  4756  031D                     	;# 
  4757  031E                     	;# 
  4758  031F                     	;# 
  4759  038C                     	;# 
  4760  038D                     	;# 
  4761  038E                     	;# 
  4762  0390                     	;# 
  4763  0391                     	;# 
  4764  0392                     	;# 
  4765  040C                     	;# 
  4766  040D                     	;# 
  4767  040E                     	;# 
  4768  040F                     	;# 
  4769  0410                     	;# 
  4770  0411                     	;# 
  4771  0416                     	;# 
  4772  0416                     	;# 
  4773  0417                     	;# 
  4774  0418                     	;# 
  4775  0418                     	;# 
  4776  0419                     	;# 
  4777  041A                     	;# 
  4778  041A                     	;# 
  4779  041B                     	;# 
  4780  041C                     	;# 
  4781  041C                     	;# 
  4782  041D                     	;# 
  4783  041E                     	;# 
  4784  041F                     	;# 
  4785  048C                     	;# 
  4786  048C                     	;# 
  4787  048D                     	;# 
  4788  048E                     	;# 
  4789  048F                     	;# 
  4790  048F                     	;# 
  4791  0490                     	;# 
  4792  0491                     	;# 
  4793  0492                     	;# 
  4794  0492                     	;# 
  4795  0493                     	;# 
  4796  0494                     	;# 
  4797  0495                     	;# 
  4798  0495                     	;# 
  4799  0496                     	;# 
  4800  0497                     	;# 
  4801  0498                     	;# 
  4802  0499                     	;# 
  4803  049A                     	;# 
  4804  049B                     	;# 
  4805  049C                     	;# 
  4806  049D                     	;# 
  4807  050C                     	;# 
  4808  050C                     	;# 
  4809  050D                     	;# 
  4810  050E                     	;# 
  4811  050F                     	;# 
  4812  050F                     	;# 
  4813  0510                     	;# 
  4814  0511                     	;# 
  4815  0512                     	;# 
  4816  0512                     	;# 
  4817  0513                     	;# 
  4818  0514                     	;# 
  4819  0515                     	;# 
  4820  0515                     	;# 
  4821  0516                     	;# 
  4822  0517                     	;# 
  4823  0518                     	;# 
  4824  0519                     	;# 
  4825  051A                     	;# 
  4826  051B                     	;# 
  4827  051C                     	;# 
  4828  051D                     	;# 
  4829  058C                     	;# 
  4830  058C                     	;# 
  4831  058D                     	;# 
  4832  058E                     	;# 
  4833  058F                     	;# 
  4834  058F                     	;# 
  4835  0590                     	;# 
  4836  0591                     	;# 
  4837  0592                     	;# 
  4838  0593                     	;# 
  4839  060C                     	;# 
  4840  060D                     	;# 
  4841  060E                     	;# 
  4842  060F                     	;# 
  4843  0610                     	;# 
  4844  0611                     	;# 
  4845  0612                     	;# 
  4846  0613                     	;# 
  4847  0614                     	;# 
  4848  0616                     	;# 
  4849  0617                     	;# 
  4850  0618                     	;# 
  4851  0619                     	;# 
  4852  061A                     	;# 
  4853  061B                     	;# 
  4854  061C                     	;# 
  4855  061D                     	;# 
  4856  061E                     	;# 
  4857  068C                     	;# 
  4858  068D                     	;# 
  4859  068E                     	;# 
  4860  068F                     	;# 
  4861  0690                     	;# 
  4862  0691                     	;# 
  4863  0692                     	;# 
  4864  0693                     	;# 
  4865  0694                     	;# 
  4866  070C                     	;# 
  4867  070D                     	;# 
  4868  070E                     	;# 
  4869  070F                     	;# 
  4870  0710                     	;# 
  4871  0711                     	;# 
  4872  0712                     	;# 
  4873  0713                     	;# 
  4874  0714                     	;# 
  4875  0716                     	;# 
  4876  0717                     	;# 
  4877  0718                     	;# 
  4878  0719                     	;# 
  4879  071A                     	;# 
  4880  071B                     	;# 
  4881  071C                     	;# 
  4882  071D                     	;# 
  4883  071E                     	;# 
  4884  0796                     	;# 
  4885  0797                     	;# 
  4886  0798                     	;# 
  4887  0799                     	;# 
  4888  079A                     	;# 
  4889  079B                     	;# 
  4890  080C                     	;# 
  4891  080D                     	;# 
  4892  080E                     	;# 
  4893  080F                     	;# 
  4894  0810                     	;# 
  4895  0811                     	;# 
  4896  0812                     	;# 
  4897  0813                     	;# 
  4898  0814                     	;# 
  4899  081A                     	;# 
  4900  081B                     	;# 
  4901  081C                     	;# 
  4902  081D                     	;# 
  4903  081E                     	;# 
  4904  081F                     	;# 
  4905  088C                     	;# 
  4906  088D                     	;# 
  4907  088E                     	;# 
  4908  088F                     	;# 
  4909  0890                     	;# 
  4910  0891                     	;# 
  4911  0892                     	;# 
  4912  0893                     	;# 
  4913  0895                     	;# 
  4914  0896                     	;# 
  4915  0897                     	;# 
  4916  0898                     	;# 
  4917  0899                     	;# 
  4918  089A                     	;# 
  4919  089B                     	;# 
  4920  090C                     	;# 
  4921  090E                     	;# 
  4922  090F                     	;# 
  4923  091F                     	;# 
  4924  091F                     	;# 
  4925  098F                     	;# 
  4926  098F                     	;# 
  4927  0990                     	;# 
  4928  0991                     	;# 
  4929  0992                     	;# 
  4930  0993                     	;# 
  4931  0994                     	;# 
  4932  0995                     	;# 
  4933  0996                     	;# 
  4934  0997                     	;# 
  4935  0E0F                     	;# 
  4936  0E10                     	;# 
  4937  0E11                     	;# 
  4938  0E12                     	;# 
  4939  0E13                     	;# 
  4940  0E14                     	;# 
  4941  0E15                     	;# 
  4942  0E16                     	;# 
  4943  0E17                     	;# 
  4944  0E18                     	;# 
  4945  0E19                     	;# 
  4946  0E1A                     	;# 
  4947  0E1B                     	;# 
  4948  0E1C                     	;# 
  4949  0E1D                     	;# 
  4950  0E1E                     	;# 
  4951  0E1F                     	;# 
  4952  0E20                     	;# 
  4953  0E21                     	;# 
  4954  0E22                     	;# 
  4955  0E23                     	;# 
  4956  0E24                     	;# 
  4957  0E25                     	;# 
  4958  0E26                     	;# 
  4959  0E27                     	;# 
  4960  0E28                     	;# 
  4961  0E29                     	;# 
  4962  0E2A                     	;# 
  4963  0E2B                     	;# 
  4964  0E2C                     	;# 
  4965  0E2D                     	;# 
  4966  0E2E                     	;# 
  4967  0E2F                     	;# 
  4968  0E30                     	;# 
  4969  0E31                     	;# 
  4970  0E32                     	;# 
  4971  0E33                     	;# 
  4972  0E34                     	;# 
  4973  0E35                     	;# 
  4974  0E36                     	;# 
  4975  0E37                     	;# 
  4976  0E8F                     	;# 
  4977  0E90                     	;# 
  4978  0E91                     	;# 
  4979  0E92                     	;# 
  4980  0E93                     	;# 
  4981  0E94                     	;# 
  4982  0E95                     	;# 
  4983  0E96                     	;# 
  4984  0E97                     	;# 
  4985  0E9C                     	;# 
  4986  0E9D                     	;# 
  4987  0E9E                     	;# 
  4988  0EA1                     	;# 
  4989  0EA2                     	;# 
  4990  0EA3                     	;# 
  4991  0EA4                     	;# 
  4992  0EA5                     	;# 
  4993  0EA9                     	;# 
  4994  0EAA                     	;# 
  4995  0EAB                     	;# 
  4996  0EAC                     	;# 
  4997  0EB1                     	;# 
  4998  0EB2                     	;# 
  4999  0EB3                     	;# 
  5000  0EB8                     	;# 
  5001  0EB9                     	;# 
  5002  0EBA                     	;# 
  5003  0EBB                     	;# 
  5004  0EBC                     	;# 
  5005  0EBD                     	;# 
  5006  0EBE                     	;# 
  5007  0EC3                     	;# 
  5008  0EC5                     	;# 
  5009  0EC6                     	;# 
  5010  0EC7                     	;# 
  5011  0EC8                     	;# 
  5012  0EC9                     	;# 
  5013  0ECA                     	;# 
  5014  0ECB                     	;# 
  5015  0ECC                     	;# 
  5016  0F10                     	;# 
  5017  0F11                     	;# 
  5018  0F12                     	;# 
  5019  0F13                     	;# 
  5020  0F14                     	;# 
  5021  0F15                     	;# 
  5022  0F16                     	;# 
  5023  0F17                     	;# 
  5024  0F18                     	;# 
  5025  0F19                     	;# 
  5026  0F1A                     	;# 
  5027  0F1B                     	;# 
  5028  0F1C                     	;# 
  5029  0F1D                     	;# 
  5030  0F1E                     	;# 
  5031  0F1F                     	;# 
  5032  0F20                     	;# 
  5033  0F21                     	;# 
  5034  0F22                     	;# 
  5035  0F23                     	;# 
  5036  0F24                     	;# 
  5037  0F25                     	;# 
  5038  0F26                     	;# 
  5039  0F27                     	;# 
  5040  0F28                     	;# 
  5041  0F29                     	;# 
  5042  0F2A                     	;# 
  5043  0F2B                     	;# 
  5044  0F2C                     	;# 
  5045  0F2D                     	;# 
  5046  0F2E                     	;# 
  5047  0F2F                     	;# 
  5048  0F30                     	;# 
  5049  0F31                     	;# 
  5050  0F32                     	;# 
  5051  0F38                     	;# 
  5052  0F39                     	;# 
  5053  0F3A                     	;# 
  5054  0F3B                     	;# 
  5055  0F3C                     	;# 
  5056  0F3D                     	;# 
  5057  0F3E                     	;# 
  5058  0F3F                     	;# 
  5059  0F40                     	;# 
  5060  0F41                     	;# 
  5061  0F43                     	;# 
  5062  0F44                     	;# 
  5063  0F45                     	;# 
  5064  0F46                     	;# 
  5065  0F47                     	;# 
  5066  0F48                     	;# 
  5067  0F49                     	;# 
  5068  0F4A                     	;# 
  5069  0F4B                     	;# 
  5070  0F4C                     	;# 
  5071  0F4E                     	;# 
  5072  0F4F                     	;# 
  5073  0F50                     	;# 
  5074  0F51                     	;# 
  5075  0F52                     	;# 
  5076  0F53                     	;# 
  5077  0F54                     	;# 
  5078  0F55                     	;# 
  5079  0F56                     	;# 
  5080  0F57                     	;# 
  5081  0F59                     	;# 
  5082  0F5A                     	;# 
  5083  0F5B                     	;# 
  5084  0F5C                     	;# 
  5085  0F5D                     	;# 
  5086  0F61                     	;# 
  5087  0F62                     	;# 
  5088  0F64                     	;# 
  5089  0F65                     	;# 
  5090  0F66                     	;# 
  5091  0F67                     	;# 
  5092  0F68                     	;# 
  5093  0F69                     	;# 
  5094  0F6A                     	;# 
  5095  0F6B                     	;# 
  5096  0F6C                     	;# 
  5097  0F6D                     	;# 
  5098  0FE4                     	;# 
  5099  0FE5                     	;# 
  5100  0FE6                     	;# 
  5101  0FE7                     	;# 
  5102  0FE8                     	;# 
  5103  0FE9                     	;# 
  5104  0FEA                     	;# 
  5105  0FEB                     	;# 
  5106  0FED                     	;# 
  5107  0FEE                     	;# 
  5108  0FEF                     	;_displayArray
  5109                           
  5110                           	psect	idataBANK1
  5111  102A                     __pidataBANK1:	
  5112                           
  5113                           ;initializer for main@F15398
  5114  102A  3441               	retlw	65
  5115  102B  346C               	retlw	108
  5116  102C  3461               	retlw	97
  5117  102D  3472               	retlw	114
  5118  102E  346D               	retlw	109
  5119  102F  3420               	retlw	32
  5120  1030  3443               	retlw	67
  5121  1031  346C               	retlw	108
  5122  1032  346F               	retlw	111
  5123  1033  3463               	retlw	99
  5124  1034  346B               	retlw	107
  5125  1035  3400               	retlw	0
  5126                           
  5127                           	psect	idataBIGRAM
  5128  026E                     __pidataBIGRAM:	
  5129                           
  5130                           ;initializer for _displayArray
  5131  026E  343F               	retlw	63
  5132  026F  3440               	retlw	64
  5133  0270  3438               	retlw	56
  5134  0271  3440               	retlw	64
  5135  0272  343F               	retlw	63
  5136  0273  3438               	retlw	56
  5137  0274  3454               	retlw	84
  5138  0275  3454               	retlw	84
  5139  0276  3454               	retlw	84
  5140  0277  3418               	retlw	24
  5141  0278  3400               	retlw	0
  5142  0279  3441               	retlw	65
  5143  027A  347F               	retlw	127
  5144  027B  3440               	retlw	64
  5145  027C  3400               	retlw	0
  5146  027D  3438               	retlw	56
  5147  027E  3444               	retlw	68
  5148  027F  3444               	retlw	68
  5149  0280  3444               	retlw	68
  5150  0281  3428               	retlw	40
  5151  0282  3438               	retlw	56
  5152  0283  3444               	retlw	68
  5153  0284  3444               	retlw	68
  5154  0285  3444               	retlw	68
  5155  0286  3438               	retlw	56
  5156  0287  347C               	retlw	124
  5157  0288  3404               	retlw	4
  5158  0289  3478               	retlw	120
  5159  028A  3404               	retlw	4
  5160  028B  3478               	retlw	120
  5161  028C  3438               	retlw	56
  5162  028D  3454               	retlw	84
  5163  028E  3454               	retlw	84
  5164  028F  3454               	retlw	84
  5165  0290  3418               	retlw	24
  5166  0291  3400               	retlw	0
  5167  0292  3400               	retlw	0
  5168  0293  3400               	retlw	0
  5169  0294  3400               	retlw	0
  5170  0295  3400               	retlw	0
  5171  0296  3400               	retlw	0
  5172  0297  3400               	retlw	0
  5173  0298  3400               	retlw	0
  5174  0299  3400               	retlw	0
  5175  029A  3400               	retlw	0
  5176  029B  347F               	retlw	127
  5177  029C  3441               	retlw	65
  5178  029D  3441               	retlw	65
  5179  029E  3441               	retlw	65
  5180  029F  343E               	retlw	62
  5181  02A0  3400               	retlw	0
  5182  02A1  3444               	retlw	68
  5183  02A2  347D               	retlw	125
  5184  02A3  3440               	retlw	64
  5185  02A4  3400               	retlw	0
  5186  02A5  3400               	retlw	0
  5187  02A6  3408               	retlw	8
  5188  02A7  347E               	retlw	126
  5189  02A8  3409               	retlw	9
  5190  02A9  3402               	retlw	2
  5191  02AA  3400               	retlw	0
  5192  02AB  3408               	retlw	8
  5193  02AC  347E               	retlw	126
  5194  02AD  3409               	retlw	9
  5195  02AE  3402               	retlw	2
  5196  02AF  343C               	retlw	60
  5197  02B0  3440               	retlw	64
  5198  02B1  3440               	retlw	64
  5199  02B2  3420               	retlw	32
  5200  02B3  347C               	retlw	124
  5201  02B4  3448               	retlw	72
  5202  02B5  3454               	retlw	84
  5203  02B6  3454               	retlw	84
  5204  02B7  3454               	retlw	84
  5205  02B8  3424               	retlw	36
  5206  02B9  3438               	retlw	56
  5207  02BA  3454               	retlw	84
  5208  02BB  3454               	retlw	84
  5209  02BC  3454               	retlw	84
  5210  02BD  3418               	retlw	24
  5211  02BE  347C               	retlw	124
  5212  02BF  3408               	retlw	8
  5213  02C0  3404               	retlw	4
  5214  02C1  3404               	retlw	4
  5215  02C2  3408               	retlw	8
  5216  02C3  3400               	retlw	0
  5217  02C4  3400               	retlw	0
  5218  02C5  3400               	retlw	0
  5219  02C6  3400               	retlw	0
  5220  02C7  3400               	retlw	0
  5221  02C8  3400               	retlw	0
  5222  02C9  3400               	retlw	0
  5223  02CA  3400               	retlw	0
  5224  02CB  3400               	retlw	0
  5225  02CC  3400               	retlw	0
  5226  02CD  3400               	retlw	0
  5227  02CE  3400               	retlw	0
  5228  02CF  3400               	retlw	0
  5229  02D0  3400               	retlw	0
  5230  02D1  3400               	retlw	0
  5231  02D2  3400               	retlw	0
  5232  02D3  3400               	retlw	0
  5233  02D4  3400               	retlw	0
  5234  02D5  3400               	retlw	0
  5235  02D6  3400               	retlw	0
  5236  02D7  3400               	retlw	0
  5237  02D8  3400               	retlw	0
  5238  02D9  3400               	retlw	0
  5239  02DA  3400               	retlw	0
  5240  02DB  3400               	retlw	0
  5241  02DC  3400               	retlw	0
  5242  02DD  3400               	retlw	0
  5243  02DE  3400               	retlw	0
  5244  02DF  3400               	retlw	0
  5245  02E0  3400               	retlw	0
  5246  02E1  3400               	retlw	0
  5247  02E2  3400               	retlw	0
  5248  02E3  3400               	retlw	0
  5249  02E4  3400               	retlw	0
  5250  02E5  3400               	retlw	0
  5251  02E6  3400               	retlw	0
  5252  02E7  3400               	retlw	0
  5253  02E8  3400               	retlw	0
  5254  02E9  3400               	retlw	0
  5255  02EA  3400               	retlw	0
  5256  02EB  3400               	retlw	0
  5257  02EC  3400               	retlw	0
  5258  02ED  3400               	retlw	0
  5259  02EE  3400               	retlw	0
  5260  02EF  3400               	retlw	0
  5261  02F0  3400               	retlw	0
  5262  02F1  3400               	retlw	0
  5263  02F2  3400               	retlw	0
  5264  02F3  3400               	retlw	0
  5265  02F4  3400               	retlw	0
  5266  02F5  3400               	retlw	0
  5267  02F6  3400               	retlw	0
  5268  02F7  3400               	retlw	0
  5269  02F8  3400               	retlw	0
  5270  02F9  3400               	retlw	0
  5271  02FA  3400               	retlw	0
  5272  02FB  3400               	retlw	0
  5273  02FC  3400               	retlw	0
  5274  02FD  3400               	retlw	0
  5275  02FE  3400               	retlw	0
  5276  02FF  3400               	retlw	0
  5277  0300  3400               	retlw	0
  5278  0301  3400               	retlw	0
  5279  0302  3400               	retlw	0
  5280  0303  3400               	retlw	0
  5281  0304  3400               	retlw	0
  5282  0305  3400               	retlw	0
  5283  0306  3400               	retlw	0
  5284  0307  3400               	retlw	0
  5285  0308  3400               	retlw	0
  5286  0309  3400               	retlw	0
  5287  030A  3400               	retlw	0
  5288  030B  3400               	retlw	0
  5289  030C  3400               	retlw	0
  5290  030D  3400               	retlw	0
  5291  030E  3400               	retlw	0
  5292  030F  3400               	retlw	0
  5293  0310  3400               	retlw	0
  5294  0311  3400               	retlw	0
  5295  0312  3400               	retlw	0
  5296  0313  3400               	retlw	0
  5297  0314  3400               	retlw	0
  5298  0315  3400               	retlw	0
  5299  0316  3400               	retlw	0
  5300  0317  3400               	retlw	0
  5301  0318  3400               	retlw	0
  5302  0319  3400               	retlw	0
  5303  031A  3400               	retlw	0
  5304  031B  3400               	retlw	0
  5305  031C  3400               	retlw	0
  5306  031D  3400               	retlw	0
  5307  031E  3400               	retlw	0
  5308  031F  3400               	retlw	0
  5309  0320  3400               	retlw	0
  5310  0321  3400               	retlw	0
  5311  0322  3400               	retlw	0
  5312  0323  3400               	retlw	0
  5313  0324  3400               	retlw	0
  5314  0325  3400               	retlw	0
  5315  0326  3400               	retlw	0
  5316  0327  3400               	retlw	0
  5317  0328  3400               	retlw	0
  5318  0329  3400               	retlw	0
  5319  032A  3400               	retlw	0
  5320  032B  3400               	retlw	0
  5321  032C  3400               	retlw	0
  5322  032D  3400               	retlw	0
  5323  032E  3400               	retlw	0
  5324  032F  3400               	retlw	0
  5325  0330  3400               	retlw	0
  5326  0331  3400               	retlw	0
  5327  0332  3400               	retlw	0
  5328  0333  3400               	retlw	0
  5329  0334  3400               	retlw	0
  5330  0335  3400               	retlw	0
  5331  0336  3400               	retlw	0
  5332  0337  3400               	retlw	0
  5333  0338  3400               	retlw	0
  5334  0339  3400               	retlw	0
  5335  033A  3400               	retlw	0
  5336  033B  3400               	retlw	0
  5337  033C  3400               	retlw	0
  5338  033D  3400               	retlw	0
  5339  033E  3400               	retlw	0
  5340  033F  3400               	retlw	0
  5341  0340  3400               	retlw	0
  5342  0341  3400               	retlw	0
  5343  0342  3400               	retlw	0
  5344  0343  3400               	retlw	0
  5345  0344  3400               	retlw	0
  5346  0345  3400               	retlw	0
  5347  0346  3400               	retlw	0
  5348  0347  3400               	retlw	0
  5349  0348  3400               	retlw	0
  5350  0349  3400               	retlw	0
  5351  034A  3400               	retlw	0
  5352  034B  3400               	retlw	0
  5353  034C  3400               	retlw	0
  5354  034D  3400               	retlw	0
  5355  034E  3400               	retlw	0
  5356  034F  3400               	retlw	0
  5357  0350  3400               	retlw	0
  5358  0351  3400               	retlw	0
  5359  0352  3400               	retlw	0
  5360  0353  3400               	retlw	0
  5361  0354  3400               	retlw	0
  5362  0355  3400               	retlw	0
  5363  0356  3400               	retlw	0
  5364  0357  3400               	retlw	0
  5365  0358  3400               	retlw	0
  5366  0359  3400               	retlw	0
  5367  035A  3400               	retlw	0
  5368  035B  3400               	retlw	0
  5369  035C  3400               	retlw	0
  5370  035D  3400               	retlw	0
  5371  035E  3400               	retlw	0
  5372  035F  3400               	retlw	0
  5373  0360  3400               	retlw	0
  5374  0361  3400               	retlw	0
  5375  0362  3400               	retlw	0
  5376  0363  3400               	retlw	0
  5377  0364  3400               	retlw	0
  5378  0365  3400               	retlw	0
  5379  0366  3400               	retlw	0
  5380  0367  3400               	retlw	0
  5381  0368  3400               	retlw	0
  5382  0369  3400               	retlw	0
  5383  036A  3400               	retlw	0
  5384  036B  3400               	retlw	0
  5385  036C  3400               	retlw	0
  5386  036D  3400               	retlw	0
  5387  036E  3400               	retlw	0
  5388  036F  3400               	retlw	0
  5389  0370  3400               	retlw	0
  5390  0371  3400               	retlw	0
  5391  0372  3400               	retlw	0
  5392  0373  3400               	retlw	0
  5393  0374  3400               	retlw	0
  5394  0375  3400               	retlw	0
  5395  0376  3400               	retlw	0
  5396  0377  3400               	retlw	0
  5397  0378  3400               	retlw	0
  5398  0379  3400               	retlw	0
  5399  037A  3400               	retlw	0
  5400  037B  3400               	retlw	0
  5401  037C  3400               	retlw	0
  5402  037D  3400               	retlw	0
  5403  037E  3400               	retlw	0
  5404  037F  3400               	retlw	0
  5405  0380  3400               	retlw	0
  5406  0381  3400               	retlw	0
  5407  0382  3400               	retlw	0
  5408  0383  3400               	retlw	0
  5409  0384  3400               	retlw	0
  5410  0385  3400               	retlw	0
  5411  0386  3400               	retlw	0
  5412  0387  3400               	retlw	0
  5413  0388  3400               	retlw	0
  5414  0389  3400               	retlw	0
  5415  038A  3400               	retlw	0
  5416  038B  3400               	retlw	0
  5417  038C  3400               	retlw	0
  5418  038D  3400               	retlw	0
  5419  038E  3400               	retlw	0
  5420  038F  3400               	retlw	0
  5421  0390  3400               	retlw	0
  5422  0391  3400               	retlw	0
  5423  0392  3400               	retlw	0
  5424  0393  3400               	retlw	0
  5425  0394  3400               	retlw	0
  5426  0395  3400               	retlw	0
  5427  0396  3400               	retlw	0
  5428  0397  3400               	retlw	0
  5429  0398  3400               	retlw	0
  5430  0399  3400               	retlw	0
  5431  039A  3400               	retlw	0
  5432  039B  3400               	retlw	0
  5433  039C  3400               	retlw	0
  5434  039D  3400               	retlw	0
  5435  039E  3400               	retlw	0
  5436  039F  3400               	retlw	0
  5437  03A0  3400               	retlw	0
  5438  03A1  3400               	retlw	0
  5439  03A2  3400               	retlw	0
  5440  03A3  3400               	retlw	0
  5441  03A4  3400               	retlw	0
  5442  03A5  3400               	retlw	0
  5443  03A6  3400               	retlw	0
  5444  03A7  3400               	retlw	0
  5445  03A8  3400               	retlw	0
  5446  03A9  3400               	retlw	0
  5447  03AA  3400               	retlw	0
  5448  03AB  3400               	retlw	0
  5449  03AC  3400               	retlw	0
  5450  03AD  3400               	retlw	0
  5451  03AE  3400               	retlw	0
  5452  03AF  3400               	retlw	0
  5453  03B0  3400               	retlw	0
  5454  03B1  3400               	retlw	0
  5455  03B2  3400               	retlw	0
  5456  03B3  3400               	retlw	0
  5457  03B4  3400               	retlw	0
  5458  03B5  3400               	retlw	0
  5459  03B6  3400               	retlw	0
  5460  03B7  3400               	retlw	0
  5461  03B8  3400               	retlw	0
  5462  03B9  3400               	retlw	0
  5463  03BA  3400               	retlw	0
  5464  03BB  3400               	retlw	0
  5465  03BC  3400               	retlw	0
  5466  03BD  3400               	retlw	0
  5467  03BE  3400               	retlw	0
  5468  03BF  3400               	retlw	0
  5469  03C0  3400               	retlw	0
  5470  03C1  3400               	retlw	0
  5471  03C2  3400               	retlw	0
  5472  03C3  3400               	retlw	0
  5473  03C4  3400               	retlw	0
  5474  03C5  3400               	retlw	0
  5475  03C6  3400               	retlw	0
  5476  03C7  3400               	retlw	0
  5477  03C8  3400               	retlw	0
  5478  03C9  3400               	retlw	0
  5479  03CA  3400               	retlw	0
  5480  03CB  3400               	retlw	0
  5481  03CC  3400               	retlw	0
  5482  03CD  3400               	retlw	0
  5483  03CE  3400               	retlw	0
  5484  03CF  3400               	retlw	0
  5485  03D0  3400               	retlw	0
  5486  03D1  3400               	retlw	0
  5487  03D2  3400               	retlw	0
  5488  03D3  3400               	retlw	0
  5489  03D4  3400               	retlw	0
  5490  03D5  3400               	retlw	0
  5491  03D6  3400               	retlw	0
  5492  03D7  3400               	retlw	0
  5493  03D8  3400               	retlw	0
  5494  03D9  3400               	retlw	0
  5495  03DA  3400               	retlw	0
  5496  03DB  3400               	retlw	0
  5497  03DC  3400               	retlw	0
  5498  03DD  3400               	retlw	0
  5499  03DE  3400               	retlw	0
  5500  03DF  3400               	retlw	0
  5501  03E0  3400               	retlw	0
  5502  03E1  3400               	retlw	0
  5503  03E2  3400               	retlw	0
  5504  03E3  3400               	retlw	0
  5505  03E4  3400               	retlw	0
  5506  03E5  3400               	retlw	0
  5507  03E6  3400               	retlw	0
  5508  03E7  3400               	retlw	0
  5509  03E8  3400               	retlw	0
  5510  03E9  3400               	retlw	0
  5511  03EA  3400               	retlw	0
  5512  03EB  3400               	retlw	0
  5513  03EC  3400               	retlw	0
  5514  03ED  3400               	retlw	0
  5515  03EE  3400               	retlw	0
  5516  03EF  3400               	retlw	0
  5517  03F0  3400               	retlw	0
  5518  03F1  3400               	retlw	0
  5519  03F2  3400               	retlw	0
  5520  03F3  3400               	retlw	0
  5521  03F4  3400               	retlw	0
  5522  03F5  3400               	retlw	0
  5523  03F6  3400               	retlw	0
  5524  03F7  3400               	retlw	0
  5525  03F8  3400               	retlw	0
  5526  03F9  3400               	retlw	0
  5527  03FA  3400               	retlw	0
  5528  03FB  3400               	retlw	0
  5529  03FC  3400               	retlw	0
  5530  03FD  3400               	retlw	0
  5531  03FE  3400               	retlw	0
  5532  03FF  3400               	retlw	0
  5533  0400  3400               	retlw	0
  5534  0401  3400               	retlw	0
  5535  0402  3400               	retlw	0
  5536  0403  3400               	retlw	0
  5537  0404  3400               	retlw	0
  5538  0405  3400               	retlw	0
  5539  0406  3400               	retlw	0
  5540  0407  3400               	retlw	0
  5541  0408  3400               	retlw	0
  5542  0409  3400               	retlw	0
  5543  040A  3400               	retlw	0
  5544  040B  3400               	retlw	0
  5545  040C  3400               	retlw	0
  5546  040D  3400               	retlw	0
  5547  040E  3400               	retlw	0
  5548  040F  3400               	retlw	0
  5549  0410  3400               	retlw	0
  5550  0411  3400               	retlw	0
  5551  0412  3400               	retlw	0
  5552  0413  3400               	retlw	0
  5553  0414  3400               	retlw	0
  5554  0415  3400               	retlw	0
  5555  0416  3400               	retlw	0
  5556  0417  3400               	retlw	0
  5557  0418  3400               	retlw	0
  5558  0419  3400               	retlw	0
  5559  041A  3400               	retlw	0
  5560  041B  3400               	retlw	0
  5561  041C  3400               	retlw	0
  5562  041D  3400               	retlw	0
  5563  041E  3400               	retlw	0
  5564  041F  3400               	retlw	0
  5565  0420  3400               	retlw	0
  5566  0421  3400               	retlw	0
  5567  0422  3400               	retlw	0
  5568  0423  3400               	retlw	0
  5569  0424  3400               	retlw	0
  5570  0425  3400               	retlw	0
  5571  0426  3400               	retlw	0
  5572  0427  3400               	retlw	0
  5573  0428  3400               	retlw	0
  5574  0429  3400               	retlw	0
  5575  042A  3400               	retlw	0
  5576  042B  3400               	retlw	0
  5577  042C  3400               	retlw	0
  5578  042D  3400               	retlw	0
  5579  042E  3400               	retlw	0
  5580  042F  3400               	retlw	0
  5581  0430  3400               	retlw	0
  5582  0431  3400               	retlw	0
  5583  0432  3400               	retlw	0
  5584  0433  3400               	retlw	0
  5585  0434  3400               	retlw	0
  5586  0435  3400               	retlw	0
  5587  0436  3400               	retlw	0
  5588  0437  3400               	retlw	0
  5589  0438  3400               	retlw	0
  5590  0439  3400               	retlw	0
  5591  043A  3400               	retlw	0
  5592  043B  3400               	retlw	0
  5593  043C  3400               	retlw	0
  5594  043D  3400               	retlw	0
  5595  043E  3400               	retlw	0
  5596  043F  3400               	retlw	0
  5597  0440  3400               	retlw	0
  5598  0441  3400               	retlw	0
  5599  0442  3400               	retlw	0
  5600  0443  3400               	retlw	0
  5601  0444  3400               	retlw	0
  5602  0445  3400               	retlw	0
  5603  0446  3400               	retlw	0
  5604  0447  3400               	retlw	0
  5605  0448  3400               	retlw	0
  5606                           
  5607                           	psect	stringtext1
  5608  0449                     __pstringtext1:	
  5609  0449                     _lookup:	
  5610  0449  3400               	retlw	0
  5611  044A  3400               	retlw	0
  5612  044B  3400               	retlw	0
  5613  044C  3400               	retlw	0
  5614  044D  3400               	retlw	0
  5615  044E  3400               	retlw	0
  5616  044F  3400               	retlw	0
  5617  0450  345F               	retlw	95
  5618  0451  3400               	retlw	0
  5619  0452  3400               	retlw	0
  5620  0453  3400               	retlw	0
  5621  0454  3407               	retlw	7
  5622  0455  3400               	retlw	0
  5623  0456  3407               	retlw	7
  5624  0457  3400               	retlw	0
  5625  0458  3414               	retlw	20
  5626  0459  347F               	retlw	127
  5627  045A  3414               	retlw	20
  5628  045B  347F               	retlw	127
  5629  045C  3414               	retlw	20
  5630  045D  3424               	retlw	36
  5631  045E  342A               	retlw	42
  5632  045F  347F               	retlw	127
  5633  0460  342A               	retlw	42
  5634  0461  3412               	retlw	18
  5635  0462  3423               	retlw	35
  5636  0463  3413               	retlw	19
  5637  0464  3408               	retlw	8
  5638  0465  3464               	retlw	100
  5639  0466  3462               	retlw	98
  5640  0467  3436               	retlw	54
  5641  0468  3449               	retlw	73
  5642  0469  3456               	retlw	86
  5643  046A  3420               	retlw	32
  5644  046B  3450               	retlw	80
  5645  046C  3400               	retlw	0
  5646  046D  3408               	retlw	8
  5647  046E  3407               	retlw	7
  5648  046F  3403               	retlw	3
  5649  0470  3400               	retlw	0
  5650  0471  3400               	retlw	0
  5651  0472  341C               	retlw	28
  5652  0473  3422               	retlw	34
  5653  0474  3441               	retlw	65
  5654  0475  3400               	retlw	0
  5655  0476  3400               	retlw	0
  5656  0477  3441               	retlw	65
  5657  0478  3422               	retlw	34
  5658  0479  341C               	retlw	28
  5659  047A  3400               	retlw	0
  5660  047B  342A               	retlw	42
  5661  047C  341C               	retlw	28
  5662  047D  347F               	retlw	127
  5663  047E  341C               	retlw	28
  5664  047F  342A               	retlw	42
  5665  0480  3408               	retlw	8
  5666  0481  3408               	retlw	8
  5667  0482  343E               	retlw	62
  5668  0483  3408               	retlw	8
  5669  0484  3408               	retlw	8
  5670  0485  3400               	retlw	0
  5671  0486  3400               	retlw	0
  5672  0487  3470               	retlw	112
  5673  0488  3430               	retlw	48
  5674  0489  3400               	retlw	0
  5675  048A  3408               	retlw	8
  5676  048B  3408               	retlw	8
  5677  048C  3408               	retlw	8
  5678  048D  3408               	retlw	8
  5679  048E  3408               	retlw	8
  5680  048F  3400               	retlw	0
  5681  0490  3400               	retlw	0
  5682  0491  3460               	retlw	96
  5683  0492  3460               	retlw	96
  5684  0493  3400               	retlw	0
  5685  0494  3420               	retlw	32
  5686  0495  3410               	retlw	16
  5687  0496  3408               	retlw	8
  5688  0497  3404               	retlw	4
  5689  0498  3402               	retlw	2
  5690  0499  343E               	retlw	62
  5691  049A  3451               	retlw	81
  5692  049B  3449               	retlw	73
  5693  049C  3445               	retlw	69
  5694  049D  343E               	retlw	62
  5695  049E  3400               	retlw	0
  5696  049F  3442               	retlw	66
  5697  04A0  347F               	retlw	127
  5698  04A1  3440               	retlw	64
  5699  04A2  3400               	retlw	0
  5700  04A3  3472               	retlw	114
  5701  04A4  3449               	retlw	73
  5702  04A5  3449               	retlw	73
  5703  04A6  3449               	retlw	73
  5704  04A7  3446               	retlw	70
  5705  04A8  3421               	retlw	33
  5706  04A9  3441               	retlw	65
  5707  04AA  3449               	retlw	73
  5708  04AB  344D               	retlw	77
  5709  04AC  3433               	retlw	51
  5710  04AD  3418               	retlw	24
  5711  04AE  3414               	retlw	20
  5712  04AF  3412               	retlw	18
  5713  04B0  347F               	retlw	127
  5714  04B1  3410               	retlw	16
  5715  04B2  3427               	retlw	39
  5716  04B3  3445               	retlw	69
  5717  04B4  3445               	retlw	69
  5718  04B5  3445               	retlw	69
  5719  04B6  3439               	retlw	57
  5720  04B7  343C               	retlw	60
  5721  04B8  344A               	retlw	74
  5722  04B9  3449               	retlw	73
  5723  04BA  3449               	retlw	73
  5724  04BB  3431               	retlw	49
  5725  04BC  3441               	retlw	65
  5726  04BD  3421               	retlw	33
  5727  04BE  3411               	retlw	17
  5728  04BF  3409               	retlw	9
  5729  04C0  3407               	retlw	7
  5730  04C1  3436               	retlw	54
  5731  04C2  3449               	retlw	73
  5732  04C3  3449               	retlw	73
  5733  04C4  3449               	retlw	73
  5734  04C5  3436               	retlw	54
  5735  04C6  3446               	retlw	70
  5736  04C7  3449               	retlw	73
  5737  04C8  3449               	retlw	73
  5738  04C9  3429               	retlw	41
  5739  04CA  341E               	retlw	30
  5740  04CB  3400               	retlw	0
  5741  04CC  3400               	retlw	0
  5742  04CD  3414               	retlw	20
  5743  04CE  3400               	retlw	0
  5744  04CF  3400               	retlw	0
  5745  04D0  3400               	retlw	0
  5746  04D1  3440               	retlw	64
  5747  04D2  3434               	retlw	52
  5748  04D3  3400               	retlw	0
  5749  04D4  3400               	retlw	0
  5750  04D5  3400               	retlw	0
  5751  04D6  3408               	retlw	8
  5752  04D7  3414               	retlw	20
  5753  04D8  3422               	retlw	34
  5754  04D9  3441               	retlw	65
  5755  04DA  3414               	retlw	20
  5756  04DB  3414               	retlw	20
  5757  04DC  3414               	retlw	20
  5758  04DD  3414               	retlw	20
  5759  04DE  3414               	retlw	20
  5760  04DF  3400               	retlw	0
  5761  04E0  3441               	retlw	65
  5762  04E1  3422               	retlw	34
  5763  04E2  3414               	retlw	20
  5764  04E3  3408               	retlw	8
  5765  04E4  3402               	retlw	2
  5766  04E5  3401               	retlw	1
  5767  04E6  3459               	retlw	89
  5768  04E7  3409               	retlw	9
  5769  04E8  3406               	retlw	6
  5770  04E9  343E               	retlw	62
  5771  04EA  3441               	retlw	65
  5772  04EB  345D               	retlw	93
  5773  04EC  3459               	retlw	89
  5774  04ED  344E               	retlw	78
  5775  04EE  347C               	retlw	124
  5776  04EF  3412               	retlw	18
  5777  04F0  3411               	retlw	17
  5778  04F1  3412               	retlw	18
  5779  04F2  347C               	retlw	124
  5780  04F3  347F               	retlw	127
  5781  04F4  3449               	retlw	73
  5782  04F5  3449               	retlw	73
  5783  04F6  3449               	retlw	73
  5784  04F7  3436               	retlw	54
  5785  04F8  343E               	retlw	62
  5786  04F9  3441               	retlw	65
  5787  04FA  3441               	retlw	65
  5788  04FB  3441               	retlw	65
  5789  04FC  3422               	retlw	34
  5790  04FD  347F               	retlw	127
  5791  04FE  3441               	retlw	65
  5792  04FF  3441               	retlw	65
  5793  0500  3441               	retlw	65
  5794  0501  343E               	retlw	62
  5795  0502  347F               	retlw	127
  5796  0503  3449               	retlw	73
  5797  0504  3449               	retlw	73
  5798  0505  3449               	retlw	73
  5799  0506  3441               	retlw	65
  5800  0507  347F               	retlw	127
  5801  0508  3409               	retlw	9
  5802  0509  3409               	retlw	9
  5803  050A  3409               	retlw	9
  5804  050B  3401               	retlw	1
  5805  050C  343E               	retlw	62
  5806  050D  3441               	retlw	65
  5807  050E  3441               	retlw	65
  5808  050F  3451               	retlw	81
  5809  0510  3473               	retlw	115
  5810  0511  347F               	retlw	127
  5811  0512  3408               	retlw	8
  5812  0513  3408               	retlw	8
  5813  0514  3408               	retlw	8
  5814  0515  347F               	retlw	127
  5815  0516  3400               	retlw	0
  5816  0517  3441               	retlw	65
  5817  0518  347F               	retlw	127
  5818  0519  3441               	retlw	65
  5819  051A  3400               	retlw	0
  5820  051B  3420               	retlw	32
  5821  051C  3440               	retlw	64
  5822  051D  3441               	retlw	65
  5823  051E  343F               	retlw	63
  5824  051F  3401               	retlw	1
  5825  0520  347F               	retlw	127
  5826  0521  3408               	retlw	8
  5827  0522  3414               	retlw	20
  5828  0523  3422               	retlw	34
  5829  0524  3441               	retlw	65
  5830  0525  347F               	retlw	127
  5831  0526  3440               	retlw	64
  5832  0527  3440               	retlw	64
  5833  0528  3440               	retlw	64
  5834  0529  3440               	retlw	64
  5835  052A  347F               	retlw	127
  5836  052B  3402               	retlw	2
  5837  052C  341C               	retlw	28
  5838  052D  3402               	retlw	2
  5839  052E  347F               	retlw	127
  5840  052F  347F               	retlw	127
  5841  0530  3404               	retlw	4
  5842  0531  3408               	retlw	8
  5843  0532  3410               	retlw	16
  5844  0533  347F               	retlw	127
  5845  0534  343E               	retlw	62
  5846  0535  3441               	retlw	65
  5847  0536  3441               	retlw	65
  5848  0537  3441               	retlw	65
  5849  0538  343E               	retlw	62
  5850  0539  347F               	retlw	127
  5851  053A  3409               	retlw	9
  5852  053B  3409               	retlw	9
  5853  053C  3409               	retlw	9
  5854  053D  3406               	retlw	6
  5855  053E  343E               	retlw	62
  5856  053F  3441               	retlw	65
  5857  0540  3451               	retlw	81
  5858  0541  3421               	retlw	33
  5859  0542  345E               	retlw	94
  5860  0543  347F               	retlw	127
  5861  0544  3409               	retlw	9
  5862  0545  3419               	retlw	25
  5863  0546  3429               	retlw	41
  5864  0547  3446               	retlw	70
  5865  0548  3426               	retlw	38
  5866  0549  3449               	retlw	73
  5867  054A  3449               	retlw	73
  5868  054B  3449               	retlw	73
  5869  054C  3432               	retlw	50
  5870  054D  3403               	retlw	3
  5871  054E  3401               	retlw	1
  5872  054F  347F               	retlw	127
  5873  0550  3401               	retlw	1
  5874  0551  3403               	retlw	3
  5875  0552  343F               	retlw	63
  5876  0553  3440               	retlw	64
  5877  0554  3440               	retlw	64
  5878  0555  3440               	retlw	64
  5879  0556  343F               	retlw	63
  5880  0557  341F               	retlw	31
  5881  0558  3420               	retlw	32
  5882  0559  3440               	retlw	64
  5883  055A  3420               	retlw	32
  5884  055B  341F               	retlw	31
  5885  055C  343F               	retlw	63
  5886  055D  3440               	retlw	64
  5887  055E  3438               	retlw	56
  5888  055F  3440               	retlw	64
  5889  0560  343F               	retlw	63
  5890  0561  3463               	retlw	99
  5891  0562  3414               	retlw	20
  5892  0563  3408               	retlw	8
  5893  0564  3414               	retlw	20
  5894  0565  3463               	retlw	99
  5895  0566  3403               	retlw	3
  5896  0567  3404               	retlw	4
  5897  0568  3478               	retlw	120
  5898  0569  3404               	retlw	4
  5899  056A  3403               	retlw	3
  5900  056B  3461               	retlw	97
  5901  056C  3459               	retlw	89
  5902  056D  3449               	retlw	73
  5903  056E  344D               	retlw	77
  5904  056F  3443               	retlw	67
  5905  0570  3400               	retlw	0
  5906  0571  347F               	retlw	127
  5907  0572  3441               	retlw	65
  5908  0573  3441               	retlw	65
  5909  0574  3441               	retlw	65
  5910  0575  3402               	retlw	2
  5911  0576  3404               	retlw	4
  5912  0577  3408               	retlw	8
  5913  0578  3410               	retlw	16
  5914  0579  3420               	retlw	32
  5915  057A  3400               	retlw	0
  5916  057B  3441               	retlw	65
  5917  057C  3441               	retlw	65
  5918  057D  3441               	retlw	65
  5919  057E  347F               	retlw	127
  5920  057F  3404               	retlw	4
  5921  0580  3402               	retlw	2
  5922  0581  3401               	retlw	1
  5923  0582  3402               	retlw	2
  5924  0583  3404               	retlw	4
  5925  0584  3440               	retlw	64
  5926  0585  3440               	retlw	64
  5927  0586  3440               	retlw	64
  5928  0587  3440               	retlw	64
  5929  0588  3440               	retlw	64
  5930  0589  3400               	retlw	0
  5931  058A  3403               	retlw	3
  5932  058B  3407               	retlw	7
  5933  058C  3408               	retlw	8
  5934  058D  3400               	retlw	0
  5935  058E  3420               	retlw	32
  5936  058F  3454               	retlw	84
  5937  0590  3454               	retlw	84
  5938  0591  3438               	retlw	56
  5939  0592  3440               	retlw	64
  5940  0593  347F               	retlw	127
  5941  0594  3428               	retlw	40
  5942  0595  3444               	retlw	68
  5943  0596  3444               	retlw	68
  5944  0597  3438               	retlw	56
  5945  0598  3438               	retlw	56
  5946  0599  3444               	retlw	68
  5947  059A  3444               	retlw	68
  5948  059B  3444               	retlw	68
  5949  059C  3428               	retlw	40
  5950  059D  3438               	retlw	56
  5951  059E  3444               	retlw	68
  5952  059F  3444               	retlw	68
  5953  05A0  3428               	retlw	40
  5954  05A1  347F               	retlw	127
  5955  05A2  3438               	retlw	56
  5956  05A3  3454               	retlw	84
  5957  05A4  3454               	retlw	84
  5958  05A5  3454               	retlw	84
  5959  05A6  3418               	retlw	24
  5960  05A7  3400               	retlw	0
  5961  05A8  3408               	retlw	8
  5962  05A9  347E               	retlw	126
  5963  05AA  3409               	retlw	9
  5964  05AB  3402               	retlw	2
  5965  05AC  340C               	retlw	12
  5966  05AD  3452               	retlw	82
  5967  05AE  3452               	retlw	82
  5968  05AF  344A               	retlw	74
  5969  05B0  343C               	retlw	60
  5970  05B1  347F               	retlw	127
  5971  05B2  3408               	retlw	8
  5972  05B3  3404               	retlw	4
  5973  05B4  3404               	retlw	4
  5974  05B5  3478               	retlw	120
  5975  05B6  3400               	retlw	0
  5976  05B7  3444               	retlw	68
  5977  05B8  347D               	retlw	125
  5978  05B9  3440               	retlw	64
  5979  05BA  3400               	retlw	0
  5980  05BB  3420               	retlw	32
  5981  05BC  3440               	retlw	64
  5982  05BD  3440               	retlw	64
  5983  05BE  343D               	retlw	61
  5984  05BF  3400               	retlw	0
  5985  05C0  347F               	retlw	127
  5986  05C1  3410               	retlw	16
  5987  05C2  3428               	retlw	40
  5988  05C3  3444               	retlw	68
  5989  05C4  3400               	retlw	0
  5990  05C5  3400               	retlw	0
  5991  05C6  3441               	retlw	65
  5992  05C7  347F               	retlw	127
  5993  05C8  3440               	retlw	64
  5994  05C9  3400               	retlw	0
  5995  05CA  347C               	retlw	124
  5996  05CB  3404               	retlw	4
  5997  05CC  3478               	retlw	120
  5998  05CD  3404               	retlw	4
  5999  05CE  3478               	retlw	120
  6000  05CF  347C               	retlw	124
  6001  05D0  3408               	retlw	8
  6002  05D1  3404               	retlw	4
  6003  05D2  3404               	retlw	4
  6004  05D3  3478               	retlw	120
  6005  05D4  3438               	retlw	56
  6006  05D5  3444               	retlw	68
  6007  05D6  3444               	retlw	68
  6008  05D7  3444               	retlw	68
  6009  05D8  3438               	retlw	56
  6010  05D9  347C               	retlw	124
  6011  05DA  3418               	retlw	24
  6012  05DB  3424               	retlw	36
  6013  05DC  3424               	retlw	36
  6014  05DD  3418               	retlw	24
  6015  05DE  3418               	retlw	24
  6016  05DF  3424               	retlw	36
  6017  05E0  3424               	retlw	36
  6018  05E1  3418               	retlw	24
  6019  05E2  347C               	retlw	124
  6020  05E3  347C               	retlw	124
  6021  05E4  3408               	retlw	8
  6022  05E5  3404               	retlw	4
  6023  05E6  3404               	retlw	4
  6024  05E7  3408               	retlw	8
  6025  05E8  3448               	retlw	72
  6026  05E9  3454               	retlw	84
  6027  05EA  3454               	retlw	84
  6028  05EB  3454               	retlw	84
  6029  05EC  3424               	retlw	36
  6030  05ED  3404               	retlw	4
  6031  05EE  3404               	retlw	4
  6032  05EF  343F               	retlw	63
  6033  05F0  3444               	retlw	68
  6034  05F1  3424               	retlw	36
  6035  05F2  343C               	retlw	60
  6036  05F3  3440               	retlw	64
  6037  05F4  3440               	retlw	64
  6038  05F5  3420               	retlw	32
  6039  05F6  347C               	retlw	124
  6040  05F7  341C               	retlw	28
  6041  05F8  3420               	retlw	32
  6042  05F9  3440               	retlw	64
  6043  05FA  3420               	retlw	32
  6044  05FB  341C               	retlw	28
  6045  05FC  343C               	retlw	60
  6046  05FD  3440               	retlw	64
  6047  05FE  3430               	retlw	48
  6048  05FF  3440               	retlw	64
  6049  0600  343C               	retlw	60
  6050  0601  3444               	retlw	68
  6051  0602  3428               	retlw	40
  6052  0603  3410               	retlw	16
  6053  0604  3428               	retlw	40
  6054  0605  3444               	retlw	68
  6055  0606  344C               	retlw	76
  6056  0607  3450               	retlw	80
  6057  0608  3450               	retlw	80
  6058  0609  3450               	retlw	80
  6059  060A  343C               	retlw	60
  6060  060B  3444               	retlw	68
  6061  060C  3464               	retlw	100
  6062  060D  3454               	retlw	84
  6063  060E  344C               	retlw	76
  6064  060F  3444               	retlw	68
  6065  0610  3400               	retlw	0
  6066  0611  3408               	retlw	8
  6067  0612  3436               	retlw	54
  6068  0613  3441               	retlw	65
  6069  0614  3400               	retlw	0
  6070  0615  3400               	retlw	0
  6071  0616  3400               	retlw	0
  6072  0617  3477               	retlw	119
  6073  0618  3400               	retlw	0
  6074  0619  3400               	retlw	0
  6075  061A  3400               	retlw	0
  6076  061B  3441               	retlw	65
  6077  061C  3436               	retlw	54
  6078  061D  3408               	retlw	8
  6079  061E  3400               	retlw	0
  6080  061F  3402               	retlw	2
  6081  0620  3401               	retlw	1
  6082  0621  3402               	retlw	2
  6083  0622  3404               	retlw	4
  6084  0623  3402               	retlw	2
  6085  0624                     __end_of_lookup:	
  6086                           
  6087                           	psect	stringtext2
  6088  1800                     __pstringtext2:	
  6089  1800                     _fsmStateTable:	
  6090  1800  3476               	retlw	low _do_I2C_IDLE
  6091  1801  341F               	retlw	high _do_I2C_IDLE
  6092  1802  3406               	retlw	low _do_I2C_SEND_ADR_READ
  6093  1803  3410               	retlw	high _do_I2C_SEND_ADR_READ
  6094  1804  34C7               	retlw	low _do_I2C_SEND_ADR_WRITE
  6095  1805  341F               	retlw	high _do_I2C_SEND_ADR_WRITE
  6096  1806  345E               	retlw	low _do_I2C_TX
  6097  1807  3417               	retlw	high _do_I2C_TX
  6098  1808  34EC               	retlw	low _do_I2C_RX
  6099  1809  3415               	retlw	high _do_I2C_RX
  6100  180A  3493               	retlw	low _do_I2C_RCEN
  6101  180B  341F               	retlw	high _do_I2C_RCEN
  6102  180C  3498               	retlw	low _do_I2C_TX_EMPTY
  6103  180D  3413               	retlw	high _do_I2C_TX_EMPTY
  6104  180E  342C               	retlw	low _do_I2C_SEND_RESTART_READ
  6105  180F  341F               	retlw	high _do_I2C_SEND_RESTART_READ
  6106  1810  3434               	retlw	low _do_I2C_SEND_RESTART_WRITE
  6107  1811  341F               	retlw	high _do_I2C_SEND_RESTART_WRITE
  6108  1812  343C               	retlw	low _do_I2C_SEND_RESTART
  6109  1813  341F               	retlw	high _do_I2C_SEND_RESTART
  6110  1814  3444               	retlw	low _do_I2C_SEND_STOP
  6111  1815  341F               	retlw	high _do_I2C_SEND_STOP
  6112  1816  344C               	retlw	low _do_I2C_DO_ACK
  6113  1817  341F               	retlw	high _do_I2C_DO_ACK
  6114  1818  3454               	retlw	low _do_I2C_DO_NACK_STOP
  6115  1819  341F               	retlw	high _do_I2C_DO_NACK_STOP
  6116  181A  345C               	retlw	low _do_I2C_DO_NACK_RESTART
  6117  181B  341F               	retlw	high _do_I2C_DO_NACK_RESTART
  6118  181C  34BC               	retlw	low _do_I2C_RESET
  6119  181D  341F               	retlw	high _do_I2C_RESET
  6120  181E  3414               	retlw	low _do_I2C_DO_ADDRESS_NACK
  6121  181F  3413               	retlw	high _do_I2C_DO_ADDRESS_NACK
  6122  1820                     __end_of_fsmStateTable:	
  6123                           
  6124                           	psect	stringtext3
  6125  1855                     __pstringtext3:	
  6126  1855                     _moninit:	
  6127  1855  341F               	retlw	31
  6128  1856  341C               	retlw	28
  6129  1857  341F               	retlw	31
  6130  1858  341E               	retlw	30
  6131  1859  341F               	retlw	31
  6132  185A  341E               	retlw	30
  6133  185B  341F               	retlw	31
  6134  185C  341F               	retlw	31
  6135  185D  341E               	retlw	30
  6136  185E  341F               	retlw	31
  6137  185F  341E               	retlw	30
  6138  1860  341F               	retlw	31
  6139  1861                     __end_of_moninit:	
  6140                           
  6141                           	psect	stringtext4
  6142  1861                     __pstringtext4:	
  6143  1861                     _dpowers:	
  6144  1861  3401               	retlw	1
  6145  1862  3400               	retlw	0
  6146  1863  340A               	retlw	10
  6147  1864  3400               	retlw	0
  6148  1865  3464               	retlw	100
  6149  1866  3400               	retlw	0
  6150  1867  34E8               	retlw	232
  6151  1868  3403               	retlw	3
  6152  1869  3410               	retlw	16
  6153  186A  3427               	retlw	39
  6154  186B                     __end_of_dpowers:	
  6155                           
  6156                           	psect	stringtext5
  6157  006E                     __pstringtext5:	
  6158  006E                     _emptyArray:	
  6159  006E  3400               	retlw	0
  6160  006F  3400               	retlw	0
  6161  0070  3400               	retlw	0
  6162  0071  3400               	retlw	0
  6163  0072  3400               	retlw	0
  6164  0073  3400               	retlw	0
  6165  0074  3400               	retlw	0
  6166  0075  3400               	retlw	0
  6167  0076  3400               	retlw	0
  6168  0077  3400               	retlw	0
  6169  0078  3400               	retlw	0
  6170  0079  3400               	retlw	0
  6171  007A  3400               	retlw	0
  6172  007B  3400               	retlw	0
  6173  007C  3400               	retlw	0
  6174  007D  3400               	retlw	0
  6175  007E  3400               	retlw	0
  6176  007F  3400               	retlw	0
  6177  0080  3400               	retlw	0
  6178  0081  3400               	retlw	0
  6179  0082  3400               	retlw	0
  6180  0083  3400               	retlw	0
  6181  0084  3400               	retlw	0
  6182  0085  3400               	retlw	0
  6183  0086  3400               	retlw	0
  6184  0087  3400               	retlw	0
  6185  0088  3400               	retlw	0
  6186  0089  3400               	retlw	0
  6187  008A  3400               	retlw	0
  6188  008B  3400               	retlw	0
  6189  008C  3400               	retlw	0
  6190  008D  3400               	retlw	0
  6191  008E  3400               	retlw	0
  6192  008F  3400               	retlw	0
  6193  0090  3400               	retlw	0
  6194  0091  3400               	retlw	0
  6195  0092  3400               	retlw	0
  6196  0093  3400               	retlw	0
  6197  0094  3400               	retlw	0
  6198  0095  3400               	retlw	0
  6199  0096  3400               	retlw	0
  6200  0097  3400               	retlw	0
  6201  0098  3400               	retlw	0
  6202  0099  3400               	retlw	0
  6203  009A  3400               	retlw	0
  6204  009B  3400               	retlw	0
  6205  009C  3400               	retlw	0
  6206  009D  3400               	retlw	0
  6207  009E  3400               	retlw	0
  6208  009F  3400               	retlw	0
  6209  00A0  3400               	retlw	0
  6210  00A1  3400               	retlw	0
  6211  00A2  3400               	retlw	0
  6212  00A3  3400               	retlw	0
  6213  00A4  3400               	retlw	0
  6214  00A5  3400               	retlw	0
  6215  00A6  3400               	retlw	0
  6216  00A7  3400               	retlw	0
  6217  00A8  3400               	retlw	0
  6218  00A9  3400               	retlw	0
  6219  00AA  3400               	retlw	0
  6220  00AB  3400               	retlw	0
  6221  00AC  3400               	retlw	0
  6222  00AD  3400               	retlw	0
  6223  00AE  3400               	retlw	0
  6224  00AF  3400               	retlw	0
  6225  00B0  3400               	retlw	0
  6226  00B1  3400               	retlw	0
  6227  00B2  3400               	retlw	0
  6228  00B3  3400               	retlw	0
  6229  00B4  3400               	retlw	0
  6230  00B5  3400               	retlw	0
  6231  00B6  3400               	retlw	0
  6232  00B7  3400               	retlw	0
  6233  00B8  3400               	retlw	0
  6234  00B9  3400               	retlw	0
  6235  00BA  3400               	retlw	0
  6236  00BB  3400               	retlw	0
  6237  00BC  3400               	retlw	0
  6238  00BD  3400               	retlw	0
  6239  00BE  3400               	retlw	0
  6240  00BF  3400               	retlw	0
  6241  00C0  3400               	retlw	0
  6242  00C1  3400               	retlw	0
  6243  00C2  3400               	retlw	0
  6244  00C3  3400               	retlw	0
  6245  00C4  3400               	retlw	0
  6246  00C5  3400               	retlw	0
  6247  00C6  3400               	retlw	0
  6248  00C7  3400               	retlw	0
  6249  00C8  3400               	retlw	0
  6250  00C9  3400               	retlw	0
  6251  00CA  3400               	retlw	0
  6252  00CB  3400               	retlw	0
  6253  00CC  3400               	retlw	0
  6254  00CD  3400               	retlw	0
  6255  00CE  3400               	retlw	0
  6256  00CF  3400               	retlw	0
  6257  00D0  3400               	retlw	0
  6258  00D1  3400               	retlw	0
  6259  00D2  3400               	retlw	0
  6260  00D3  3400               	retlw	0
  6261  00D4  3400               	retlw	0
  6262  00D5  3400               	retlw	0
  6263  00D6  3400               	retlw	0
  6264  00D7  3400               	retlw	0
  6265  00D8  3400               	retlw	0
  6266  00D9  3400               	retlw	0
  6267  00DA  3400               	retlw	0
  6268  00DB  3400               	retlw	0
  6269  00DC  3400               	retlw	0
  6270  00DD  3400               	retlw	0
  6271  00DE  3400               	retlw	0
  6272  00DF  3400               	retlw	0
  6273  00E0  3400               	retlw	0
  6274  00E1  3400               	retlw	0
  6275  00E2  3400               	retlw	0
  6276  00E3  3400               	retlw	0
  6277  00E4  3400               	retlw	0
  6278  00E5  3400               	retlw	0
  6279  00E6  3400               	retlw	0
  6280  00E7  3400               	retlw	0
  6281  00E8  3400               	retlw	0
  6282  00E9  3400               	retlw	0
  6283  00EA  3400               	retlw	0
  6284  00EB  3400               	retlw	0
  6285  00EC  3400               	retlw	0
  6286  00ED  3400               	retlw	0
  6287  00EE  3400               	retlw	0
  6288  00EF  3400               	retlw	0
  6289  00F0  3400               	retlw	0
  6290  00F1  3400               	retlw	0
  6291  00F2  3400               	retlw	0
  6292  00F3  3400               	retlw	0
  6293  00F4  3400               	retlw	0
  6294  00F5  3400               	retlw	0
  6295  00F6  3400               	retlw	0
  6296  00F7  3400               	retlw	0
  6297  00F8  3400               	retlw	0
  6298  00F9  3400               	retlw	0
  6299  00FA  3400               	retlw	0
  6300  00FB  3400               	retlw	0
  6301  00FC  3400               	retlw	0
  6302  00FD  3400               	retlw	0
  6303  00FE  3400               	retlw	0
  6304  00FF  3400               	retlw	0
  6305  0100  3400               	retlw	0
  6306  0101  3400               	retlw	0
  6307  0102  3400               	retlw	0
  6308  0103  3400               	retlw	0
  6309  0104  3400               	retlw	0
  6310  0105  3400               	retlw	0
  6311  0106  3400               	retlw	0
  6312  0107  3400               	retlw	0
  6313  0108  3400               	retlw	0
  6314  0109  3400               	retlw	0
  6315  010A  3400               	retlw	0
  6316  010B  3400               	retlw	0
  6317  010C  3400               	retlw	0
  6318  010D  3400               	retlw	0
  6319  010E  3400               	retlw	0
  6320  010F  3400               	retlw	0
  6321  0110  3400               	retlw	0
  6322  0111  3400               	retlw	0
  6323  0112  3400               	retlw	0
  6324  0113  3400               	retlw	0
  6325  0114  3400               	retlw	0
  6326  0115  3400               	retlw	0
  6327  0116  3400               	retlw	0
  6328  0117  3400               	retlw	0
  6329  0118  3400               	retlw	0
  6330  0119  3400               	retlw	0
  6331  011A  3400               	retlw	0
  6332  011B  3400               	retlw	0
  6333  011C  3400               	retlw	0
  6334  011D  3400               	retlw	0
  6335  011E  3400               	retlw	0
  6336  011F  3400               	retlw	0
  6337  0120  3400               	retlw	0
  6338  0121  3400               	retlw	0
  6339  0122  3400               	retlw	0
  6340  0123  3400               	retlw	0
  6341  0124  3400               	retlw	0
  6342  0125  3400               	retlw	0
  6343  0126  3400               	retlw	0
  6344  0127  3400               	retlw	0
  6345  0128  3400               	retlw	0
  6346  0129  3400               	retlw	0
  6347  012A  3400               	retlw	0
  6348  012B  3400               	retlw	0
  6349  012C  3400               	retlw	0
  6350  012D  3400               	retlw	0
  6351  012E  3400               	retlw	0
  6352  012F  3400               	retlw	0
  6353  0130  3400               	retlw	0
  6354  0131  3400               	retlw	0
  6355  0132  3400               	retlw	0
  6356  0133  3400               	retlw	0
  6357  0134  3400               	retlw	0
  6358  0135  3400               	retlw	0
  6359  0136  3400               	retlw	0
  6360  0137  3400               	retlw	0
  6361  0138  3400               	retlw	0
  6362  0139  3400               	retlw	0
  6363  013A  3400               	retlw	0
  6364  013B  3400               	retlw	0
  6365  013C  3400               	retlw	0
  6366  013D  3400               	retlw	0
  6367  013E  3400               	retlw	0
  6368  013F  3400               	retlw	0
  6369  0140  3400               	retlw	0
  6370  0141  3400               	retlw	0
  6371  0142  3400               	retlw	0
  6372  0143  3400               	retlw	0
  6373  0144  3400               	retlw	0
  6374  0145  3400               	retlw	0
  6375  0146  3400               	retlw	0
  6376  0147  3400               	retlw	0
  6377  0148  3400               	retlw	0
  6378  0149  3400               	retlw	0
  6379  014A  3400               	retlw	0
  6380  014B  3400               	retlw	0
  6381  014C  3400               	retlw	0
  6382  014D  3400               	retlw	0
  6383  014E  3400               	retlw	0
  6384  014F  3400               	retlw	0
  6385  0150  3400               	retlw	0
  6386  0151  3400               	retlw	0
  6387  0152  3400               	retlw	0
  6388  0153  3400               	retlw	0
  6389  0154  3400               	retlw	0
  6390  0155  3400               	retlw	0
  6391  0156  3400               	retlw	0
  6392  0157  3400               	retlw	0
  6393  0158  3400               	retlw	0
  6394  0159  3400               	retlw	0
  6395  015A  3400               	retlw	0
  6396  015B  3400               	retlw	0
  6397  015C  3400               	retlw	0
  6398  015D  3400               	retlw	0
  6399  015E  3400               	retlw	0
  6400  015F  3400               	retlw	0
  6401  0160  3400               	retlw	0
  6402  0161  3400               	retlw	0
  6403  0162  3400               	retlw	0
  6404  0163  3400               	retlw	0
  6405  0164  3400               	retlw	0
  6406  0165  3400               	retlw	0
  6407  0166  3400               	retlw	0
  6408  0167  3400               	retlw	0
  6409  0168  3400               	retlw	0
  6410  0169  3400               	retlw	0
  6411  016A  3400               	retlw	0
  6412  016B  3400               	retlw	0
  6413  016C  3400               	retlw	0
  6414  016D  3400               	retlw	0
  6415  016E  3400               	retlw	0
  6416  016F  3400               	retlw	0
  6417  0170  3400               	retlw	0
  6418  0171  3400               	retlw	0
  6419  0172  3400               	retlw	0
  6420  0173  3400               	retlw	0
  6421  0174  3400               	retlw	0
  6422  0175  3400               	retlw	0
  6423  0176  3400               	retlw	0
  6424  0177  3400               	retlw	0
  6425  0178  3400               	retlw	0
  6426  0179  3400               	retlw	0
  6427  017A  3400               	retlw	0
  6428  017B  3400               	retlw	0
  6429  017C  3400               	retlw	0
  6430  017D  3400               	retlw	0
  6431  017E  3400               	retlw	0
  6432  017F  3400               	retlw	0
  6433  0180  3400               	retlw	0
  6434  0181  3400               	retlw	0
  6435  0182  3400               	retlw	0
  6436  0183  3400               	retlw	0
  6437  0184  3400               	retlw	0
  6438  0185  3400               	retlw	0
  6439  0186  3400               	retlw	0
  6440  0187  3400               	retlw	0
  6441  0188  3400               	retlw	0
  6442  0189  3400               	retlw	0
  6443  018A  3400               	retlw	0
  6444  018B  3400               	retlw	0
  6445  018C  3400               	retlw	0
  6446  018D  3400               	retlw	0
  6447  018E  3400               	retlw	0
  6448  018F  3400               	retlw	0
  6449  0190  3400               	retlw	0
  6450  0191  3400               	retlw	0
  6451  0192  3400               	retlw	0
  6452  0193  3400               	retlw	0
  6453  0194  3400               	retlw	0
  6454  0195  3400               	retlw	0
  6455  0196  3400               	retlw	0
  6456  0197  3400               	retlw	0
  6457  0198  3400               	retlw	0
  6458  0199  3400               	retlw	0
  6459  019A  3400               	retlw	0
  6460  019B  3400               	retlw	0
  6461  019C  3400               	retlw	0
  6462  019D  3400               	retlw	0
  6463  019E  3400               	retlw	0
  6464  019F  3400               	retlw	0
  6465  01A0  3400               	retlw	0
  6466  01A1  3400               	retlw	0
  6467  01A2  3400               	retlw	0
  6468  01A3  3400               	retlw	0
  6469  01A4  3400               	retlw	0
  6470  01A5  3400               	retlw	0
  6471  01A6  3400               	retlw	0
  6472  01A7  3400               	retlw	0
  6473  01A8  3400               	retlw	0
  6474  01A9  3400               	retlw	0
  6475  01AA  3400               	retlw	0
  6476  01AB  3400               	retlw	0
  6477  01AC  3400               	retlw	0
  6478  01AD  3400               	retlw	0
  6479  01AE  3400               	retlw	0
  6480  01AF  3400               	retlw	0
  6481  01B0  3400               	retlw	0
  6482  01B1  3400               	retlw	0
  6483  01B2  3400               	retlw	0
  6484  01B3  3400               	retlw	0
  6485  01B4  3400               	retlw	0
  6486  01B5  3400               	retlw	0
  6487  01B6  3400               	retlw	0
  6488  01B7  3400               	retlw	0
  6489  01B8  3400               	retlw	0
  6490  01B9  3400               	retlw	0
  6491  01BA  3400               	retlw	0
  6492  01BB  3400               	retlw	0
  6493  01BC  3400               	retlw	0
  6494  01BD  3400               	retlw	0
  6495  01BE  3400               	retlw	0
  6496  01BF  3400               	retlw	0
  6497  01C0  3400               	retlw	0
  6498  01C1  3400               	retlw	0
  6499  01C2  3400               	retlw	0
  6500  01C3  3400               	retlw	0
  6501  01C4  3400               	retlw	0
  6502  01C5  3400               	retlw	0
  6503  01C6  3400               	retlw	0
  6504  01C7  3400               	retlw	0
  6505  01C8  3400               	retlw	0
  6506  01C9  3400               	retlw	0
  6507  01CA  3400               	retlw	0
  6508  01CB  3400               	retlw	0
  6509  01CC  3400               	retlw	0
  6510  01CD  3400               	retlw	0
  6511  01CE  3400               	retlw	0
  6512  01CF  3400               	retlw	0
  6513  01D0  3400               	retlw	0
  6514  01D1  3400               	retlw	0
  6515  01D2  3400               	retlw	0
  6516  01D3  3400               	retlw	0
  6517  01D4  3400               	retlw	0
  6518  01D5  3400               	retlw	0
  6519  01D6  3400               	retlw	0
  6520  01D7  3400               	retlw	0
  6521  01D8  3400               	retlw	0
  6522  01D9  3400               	retlw	0
  6523  01DA  3400               	retlw	0
  6524  01DB  3400               	retlw	0
  6525  01DC  3400               	retlw	0
  6526  01DD  3400               	retlw	0
  6527  01DE  3400               	retlw	0
  6528  01DF  3400               	retlw	0
  6529  01E0  3400               	retlw	0
  6530  01E1  3400               	retlw	0
  6531  01E2  3400               	retlw	0
  6532  01E3  3400               	retlw	0
  6533  01E4  3400               	retlw	0
  6534  01E5  3400               	retlw	0
  6535  01E6  3400               	retlw	0
  6536  01E7  3400               	retlw	0
  6537  01E8  3400               	retlw	0
  6538  01E9  3400               	retlw	0
  6539  01EA  3400               	retlw	0
  6540  01EB  3400               	retlw	0
  6541  01EC  3400               	retlw	0
  6542  01ED  3400               	retlw	0
  6543  01EE  3400               	retlw	0
  6544  01EF  3400               	retlw	0
  6545  01F0  3400               	retlw	0
  6546  01F1  3400               	retlw	0
  6547  01F2  3400               	retlw	0
  6548  01F3  3400               	retlw	0
  6549  01F4  3400               	retlw	0
  6550  01F5  3400               	retlw	0
  6551  01F6  3400               	retlw	0
  6552  01F7  3400               	retlw	0
  6553  01F8  3400               	retlw	0
  6554  01F9  3400               	retlw	0
  6555  01FA  3400               	retlw	0
  6556  01FB  3400               	retlw	0
  6557  01FC  3400               	retlw	0
  6558  01FD  3400               	retlw	0
  6559  01FE  3400               	retlw	0
  6560  01FF  3400               	retlw	0
  6561  0200  3400               	retlw	0
  6562  0201  3400               	retlw	0
  6563  0202  3400               	retlw	0
  6564  0203  3400               	retlw	0
  6565  0204  3400               	retlw	0
  6566  0205  3400               	retlw	0
  6567  0206  3400               	retlw	0
  6568  0207  3400               	retlw	0
  6569  0208  3400               	retlw	0
  6570  0209  3400               	retlw	0
  6571  020A  3400               	retlw	0
  6572  020B  3400               	retlw	0
  6573  020C  3400               	retlw	0
  6574  020D  3400               	retlw	0
  6575  020E  3400               	retlw	0
  6576  020F  3400               	retlw	0
  6577  0210  3400               	retlw	0
  6578  0211  3400               	retlw	0
  6579  0212  3400               	retlw	0
  6580  0213  3400               	retlw	0
  6581  0214  3400               	retlw	0
  6582  0215  3400               	retlw	0
  6583  0216  3400               	retlw	0
  6584  0217  3400               	retlw	0
  6585  0218  3400               	retlw	0
  6586  0219  3400               	retlw	0
  6587  021A  3400               	retlw	0
  6588  021B  3400               	retlw	0
  6589  021C  3400               	retlw	0
  6590  021D  3400               	retlw	0
  6591  021E  3400               	retlw	0
  6592  021F  3400               	retlw	0
  6593  0220  3400               	retlw	0
  6594  0221  3400               	retlw	0
  6595  0222  3400               	retlw	0
  6596  0223  3400               	retlw	0
  6597  0224  3400               	retlw	0
  6598  0225  3400               	retlw	0
  6599  0226  3400               	retlw	0
  6600  0227  3400               	retlw	0
  6601  0228  3400               	retlw	0
  6602  0229  3400               	retlw	0
  6603  022A  3400               	retlw	0
  6604  022B  3400               	retlw	0
  6605  022C  3400               	retlw	0
  6606  022D  3400               	retlw	0
  6607  022E  3400               	retlw	0
  6608  022F  3400               	retlw	0
  6609  0230  3400               	retlw	0
  6610  0231  3400               	retlw	0
  6611  0232  3400               	retlw	0
  6612  0233  3400               	retlw	0
  6613  0234  3400               	retlw	0
  6614  0235  3400               	retlw	0
  6615  0236  3400               	retlw	0
  6616  0237  3400               	retlw	0
  6617  0238  3400               	retlw	0
  6618  0239  3400               	retlw	0
  6619  023A  3400               	retlw	0
  6620  023B  3400               	retlw	0
  6621  023C  3400               	retlw	0
  6622  023D  3400               	retlw	0
  6623  023E  3400               	retlw	0
  6624  023F  3400               	retlw	0
  6625  0240  3400               	retlw	0
  6626  0241  3400               	retlw	0
  6627  0242  3400               	retlw	0
  6628  0243  3400               	retlw	0
  6629  0244  3400               	retlw	0
  6630  0245  3400               	retlw	0
  6631  0246  3400               	retlw	0
  6632  0247  3400               	retlw	0
  6633  0248  3400               	retlw	0
  6634  0249                     __end_of_emptyArray:	
  6635  0019                     _LATDbits	set	25
  6636  0018                     _LATCbits	set	24
  6637  0016                     _LATAbits	set	22
  6638  000B                     _INTCONbits	set	11
  6639  0014                     _TRISD	set	20
  6640  0013                     _TRISC	set	19
  6641  0012                     _TRISB	set	18
  6642  0011                     _TRISA	set	17
  6643  0015                     _TRISE	set	21
  6644  0018                     _LATC	set	24
  6645  0017                     _LATB	set	23
  6646  0016                     _LATA	set	22
  6647  0019                     _LATD	set	25
  6648  001A                     _LATE	set	26
  6649  0003                     _STATUS	set	3
  6650  0199                     _SSP2STATbits	set	409
  6651  0196                     _SSP2BUF	set	406
  6652  019A                     _SSP2CON1bits	set	410
  6653  0197                     _SSP2ADD	set	407
  6654  019A                     _SSP2CON1	set	410
  6655  0199                     _SSP2STAT	set	409
  6656  018F                     _SSP1STATbits	set	399
  6657  018E                     _SSP1MSK	set	398
  6658  018C                     _SSP1BUF	set	396
  6659  0191                     _SSP1CON2bits	set	401
  6660  018D                     _SSP1ADD	set	397
  6661  0191                     _SSP1CON2	set	401
  6662  0190                     _SSP1CON1	set	400
  6663  018F                     _SSP1STAT	set	399
  6664  0190                     _SSP1CON1bits	set	400
  6665  070F                     _PIR3bits	set	1807
  6666  0719                     _PIE3bits	set	1817
  6667  079B                     _PMD5	set	1947
  6668  079A                     _PMD4	set	1946
  6669  0799                     _PMD3	set	1945
  6670  0798                     _PMD2	set	1944
  6671  0797                     _PMD1	set	1943
  6672  0796                     _PMD0	set	1942
  6673  0892                     _OSCTUNE	set	2194
  6674  0893                     _OSCFRQ	set	2195
  6675  0891                     _OSCEN	set	2193
  6676  088F                     _OSCCON3	set	2191
  6677  088D                     _OSCCON1	set	2189
  6678  0EC9                     _SSP2DATPPSbits	set	3785
  6679  0EC8                     _SSP2CLKPPSbits	set	3784
  6680  0EC6                     _SSP1DATPPSbits	set	3782
  6681  0EC5                     _SSP1CLKPPSbits	set	3781
  6682  0F1B                     _RB3PPS	set	3867
  6683  0F24                     _RC4PPS	set	3876
  6684  0F23                     _RC3PPS	set	3875
  6685  0F19                     _RB1PPS	set	3865
  6686  0F5B                     _ODCOND	set	3931
  6687  0F50                     _ODCONC	set	3920
  6688  0F45                     _ODCONB	set	3909
  6689  0F3A                     _ODCONA	set	3898
  6690  0F66                     _ODCONE	set	3942
  6691  0F4F                     _WPUC	set	3919
  6692  0F39                     _WPUA	set	3897
  6693  0F44                     _WPUB	set	3908
  6694  0F65                     _WPUE	set	3941
  6695  0F5A                     _WPUD	set	3930
  6696  0F38                     _ANSELA	set	3896
  6697  0F64                     _ANSELE	set	3940
  6698  0F43                     _ANSELB	set	3907
  6699  0F4E                     _ANSELC	set	3918
  6700  0F59                     _ANSELD	set	3929
  6701  0249                     STR_3:	
  6702  0249  344A               	retlw	74	;'J'
  6703  024A  3461               	retlw	97	;'a'
  6704  024B  346E               	retlw	110	;'n'
  6705  024C  3446               	retlw	70	;'F'
  6706  024D  3465               	retlw	101	;'e'
  6707  024E  3462               	retlw	98	;'b'
  6708  024F  344D               	retlw	77	;'M'
  6709  0250  3461               	retlw	97	;'a'
  6710  0251  3472               	retlw	114	;'r'
  6711  0252  3441               	retlw	65	;'A'
  6712  0253  3470               	retlw	112	;'p'
  6713  0254  3472               	retlw	114	;'r'
  6714  0255  344D               	retlw	77	;'M'
  6715  0256  3461               	retlw	97	;'a'
  6716  0257  3479               	retlw	121	;'y'
  6717  0258  344A               	retlw	74	;'J'
  6718  0259  3475               	retlw	117	;'u'
  6719  025A  346E               	retlw	110	;'n'
  6720  025B  344A               	retlw	74	;'J'
  6721  025C  3475               	retlw	117	;'u'
  6722  025D  346C               	retlw	108	;'l'
  6723  025E  3441               	retlw	65	;'A'
  6724  025F  3475               	retlw	117	;'u'
  6725  0260  3467               	retlw	103	;'g'
  6726  0261  3453               	retlw	83	;'S'
  6727  0262  3465               	retlw	101	;'e'
  6728  0263  3470               	retlw	112	;'p'
  6729  0264  344F               	retlw	79	;'O'
  6730  0265  3463               	retlw	99	;'c'
  6731  0266  3474               	retlw	116	;'t'
  6732  0267  344E               	retlw	78	;'N'
  6733  0268  346F               	retlw	111	;'o'
  6734  0269  3476               	retlw	118	;'v'
  6735  026A  3444               	retlw	68	;'D'
  6736  026B  3465               	retlw	101	;'e'
  6737  026C  3463               	retlw	99	;'c'
  6738  026D  3400               	retlw	0
  6739                           
  6740                           	psect	stringtext6
  6741  1820                     __pstringtext6:	
  6742  1820                     STR_1:	
  6743  1820  3425               	retlw	37	;'%'
  6744  1821  3430               	retlw	48	;'0'
  6745  1822  3434               	retlw	52	;'4'
  6746  1823  3464               	retlw	100	;'d'
  6747  1824  342D               	retlw	45	;'-'
  6748  1825  3425               	retlw	37	;'%'
  6749  1826  3430               	retlw	48	;'0'
  6750  1827  3432               	retlw	50	;'2'
  6751  1828  3464               	retlw	100	;'d'
  6752  1829  342D               	retlw	45	;'-'
  6753  182A  3425               	retlw	37	;'%'
  6754  182B  3430               	retlw	48	;'0'
  6755  182C  3432               	retlw	50	;'2'
  6756  182D  3464               	retlw	100	;'d'
  6757  182E  3420               	retlw	32	;' '
  6758  182F  3425               	retlw	37	;'%'
  6759  1830  3430               	retlw	48	;'0'
  6760  1831  3432               	retlw	50	;'2'
  6761  1832  3464               	retlw	100	;'d'
  6762  1833  343A               	retlw	58	;':'
  6763  1834  3425               	retlw	37	;'%'
  6764  1835  3430               	retlw	48	;'0'
  6765  1836  3432               	retlw	50	;'2'
  6766  1837  3464               	retlw	100	;'d'
  6767  1838  343A               	retlw	58	;':'
  6768  1839  3425               	retlw	37	;'%'
  6769  183A  3430               	retlw	48	;'0'
  6770  183B  3432               	retlw	50	;'2'
  6771  183C  3464               	retlw	100	;'d'
  6772  183D  340A               	retlw	10
  6773  183E  3400               	retlw	0
  6774                           
  6775                           	psect	stringtext7
  6776  183F                     __pstringtext7:	
  6777  183F                     STR_2:	
  6778  183F  3453               	retlw	83	;'S'
  6779  1840  3475               	retlw	117	;'u'
  6780  1841  346E               	retlw	110	;'n'
  6781  1842  344D               	retlw	77	;'M'
  6782  1843  346F               	retlw	111	;'o'
  6783  1844  346E               	retlw	110	;'n'
  6784  1845  3454               	retlw	84	;'T'
  6785  1846  3475               	retlw	117	;'u'
  6786  1847  3465               	retlw	101	;'e'
  6787  1848  3457               	retlw	87	;'W'
  6788  1849  3465               	retlw	101	;'e'
  6789  184A  3464               	retlw	100	;'d'
  6790  184B  3454               	retlw	84	;'T'
  6791  184C  3468               	retlw	104	;'h'
  6792  184D  3475               	retlw	117	;'u'
  6793  184E  3446               	retlw	70	;'F'
  6794  184F  3472               	retlw	114	;'r'
  6795  1850  3469               	retlw	105	;'i'
  6796  1851  3453               	retlw	83	;'S'
  6797  1852  3461               	retlw	97	;'a'
  6798  1853  3474               	retlw	116	;'t'
  6799  1854  3400               	retlw	0
  6800                           
  6801                           	psect	stringtext8
  6802  0000                     __pstringtext8:	
  6803                           
  6804                           ; #config settings
  6805  0000                     
  6806                           	psect	cinit
  6807  0024                     start_initialization:	
  6808  0024                     __initialization:		;BIGRAM
  6809                           
  6810                           ; Initialize objects allocated to BIGRAM
  6811  0024  306E               	movlw	low __pidataBIGRAM
  6812  0025  0084               	movwf	4
  6813  0026  3082               	movlw	(high __pidataBIGRAM)| (0+128)
  6814  0027  0085               	movwf	5
  6815  0028  30B1               	movlw	low (0+8625)
  6816  0029  0086               	movwf	6
  6817  002A  3021               	movlw	high (0+8625)
  6818  002B  0087               	movwf	7
  6819  002C  3001               	movlw	1
  6820  002D  00FF               	movwf	btemp+1
  6821  002E  30DB               	movlw	219
  6822  002F  3190  201E  3180   	fcall	init_ram
  6823                           
  6824                           ; Initialize objects allocated to BANK1
  6825  0032  302A               	movlw	low __pidataBANK1
  6826  0033  0084               	movwf	4
  6827  0034  3090               	movlw	(high __pidataBANK1)| (0+128)
  6828  0035  0085               	movwf	5
  6829  0036  30E4               	movlw	low __pdataBANK1
  6830  0037  0086               	movwf	6
  6831  0038  3000               	movlw	high __pdataBANK1
  6832  0039  0087               	movwf	7
  6833  003A  3000               	movlw	0
  6834  003B  00FF               	movwf	btemp+1
  6835  003C  300C               	movlw	12
  6836  003D  3190  201E  3180   	fcall	init_ram
  6837                           
  6838                           ; Clear objects allocated to BIGRAM
  6839  0040  308C               	movlw	low (0+9100)
  6840  0041  0084               	movwf	4
  6841  0042  3023               	movlw	high (0+9100)
  6842  0043  0085               	movwf	5
  6843  0044  3064               	movlw	100
  6844  0045  00FE               	movwf	btemp
  6845  0046  3000               	movlw	0
  6846  0047  00FF               	movwf	btemp+1
  6847  0048  3190  2012  3180   	fcall	clear_ram0
  6848                           
  6849                           ; Clear objects allocated to COMMON
  6850  004B  01FA               	clrf	__pbssCOMMON& (0+127)
  6851  004C  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  6852  004D  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  6853  004E  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  6854                           
  6855                           ; Clear objects allocated to BANK0
  6856  004F  01EA               	clrf	__pbssBANK0& (0+127)
  6857  0050  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  6858  0051  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  6859  0052  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  6860  0053  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  6861  0054  01EF               	clrf	(__pbssBANK0+5)& (0+127)
  6862                           
  6863                           ; Clear objects allocated to BANK1
  6864  0055  30C7               	movlw	low __pbssBANK1
  6865  0056  0084               	movwf	4
  6866  0057  3000               	movlw	high __pbssBANK1
  6867  0058  0085               	movwf	5
  6868  0059  301D               	movlw	29
  6869  005A  00FE               	movwf	btemp
  6870  005B  3000               	movlw	0
  6871  005C  00FF               	movwf	btemp+1
  6872  005D  3190  2012  3180   	fcall	clear_ram0
  6873                           
  6874                           ; Clear objects allocated to BANK2
  6875  0060  3020               	movlw	low __pbssBANK2
  6876  0061  0084               	movwf	4
  6877  0062  3001               	movlw	high __pbssBANK2
  6878  0063  0085               	movwf	5
  6879  0064  303B               	movlw	59
  6880  0065  00FE               	movwf	btemp
  6881  0066  3000               	movlw	0
  6882  0067  00FF               	movwf	btemp+1
  6883  0068  3190  2012         	fcall	clear_ram0
  6884  006A                     end_of_initialization:	
  6885                           ;End of C runtime variable initialization code
  6886                           
  6887  006A                     __end_of__initialization:	
  6888  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6889  006B  0020               	movlb	0
  6890  006C  318C  2CA0         	ljmp	_main	;jump to C main() function
  6891                           
  6892                           	psect	bssCOMMON
  6893  007A                     __pbssCOMMON:	
  6894  007A                     _i2c1_driver_i2cISR:	
  6895  007A                     	ds	2
  6896  007C                     _i2c1_driver_busCollisionISR:	
  6897  007C                     	ds	2
  6898                           
  6899                           	psect	bssBANK0
  6900  006A                     __pbssBANK0:	
  6901  006A                     _timezone:	
  6902  006A                     	ds	4
  6903  006E                     _time_zone:	
  6904  006E                     	ds	2
  6905                           
  6906                           	psect	bssBANK1
  6907  00C7                     __pbssBANK1:	
  6908  00C7                     _i2c_status:	
  6909  00C7                     	ds	29
  6910                           
  6911                           	psect	dataBANK1
  6912  00E4                     __pdataBANK1:	
  6913  00E4                     main@F15398:	
  6914  00E4                     	ds	12
  6915                           
  6916                           	psect	bssBANK2
  6917  0120                     __pbssBANK2:	
  6918  0120                     _dateTime:	
  6919  0120                     	ds	14
  6920  012E                     asctime@buf:	
  6921  012E                     	ds	27
  6922  0149                     gmtime@tim:	
  6923  0149                     	ds	18
  6924                           
  6925                           	psect	inittext
  6926  101E                     init_ram:	
  6927  101E  00FE               	movwf	126
  6928  101F                     initloop:	
  6929  101F  0012               	moviw fsr0++
  6930  1020  001E               	movwi fsr1++
  6931  1021  3001               	movlw	1
  6932  1022  02FE               	subwf	126,f
  6933  1023  3000               	movlw	0
  6934  1024  3BFF               	subwfb	127,f
  6935  1025  087F               	movf	127,w
  6936  1026  047E               	iorwf	126,w
  6937  1027  1903               	btfsc	3,2
  6938  1028  3400               	retlw	0
  6939  1029  281F               	goto	initloop
  6940                           
  6941                           	psect	clrtext
  6942  1012                     clear_ram0:	
  6943                           ;	Called with FSR0 containing the base address, and
  6944                           ;	btemp/btemp+1 has the size to clear
  6945                           
  6946  1012  0064               	clrwdt	;clear the watchdog before getting into this loop
  6947  1013                     clrloop0:	
  6948  1013  0180               	clrf	0	;clear RAM location pointed to by FSR
  6949  1014  3101               	addfsr 0,1
  6950  1015  3001               	movlw	1
  6951  1016  02FE               	subwf	126,f
  6952  1017  3000               	movlw	0
  6953  1018  3BFF               	subwfb	127,f
  6954  1019  087F               	movf	127,w
  6955  101A  047E               	iorwf	126,w
  6956  101B  1903               	btfsc	3,2
  6957  101C  3400               	retlw	0	;all done for this memory range, return
  6958  101D  2813               	goto	clrloop0	;have we reached the end yet?
  6959                           
  6960                           	psect	cstackBANK1
  6961  00A0                     __pcstackBANK1:	
  6962  00A0                     rtc6_GetTime@tm_t:	
  6963                           
  6964                           ; 18 bytes @ 0x0
  6965  00A0                     	ds	18
  6966  00B2                     main@timeStr:	
  6967  00B2                     main@welcomeMsg:	
  6968                           ; 0 bytes @ 0x12
  6969                           
  6970                           
  6971                           ; 12 bytes @ 0x12
  6972  00B2                     	ds	12
  6973  00BE                     main@setTime:	
  6974                           
  6975                           ; 4 bytes @ 0x1E
  6976  00BE                     	ds	4
  6977  00C2                     main@tm_t:	
  6978                           
  6979                           ; 1 bytes @ 0x22
  6980  00C2                     	ds	1
  6981  00C3                     main@getTime:	
  6982                           
  6983                           ; 4 bytes @ 0x23
  6984  00C3                     	ds	4
  6985                           
  6986                           	psect	cstackCOMMON
  6987  0070                     __pcstackCOMMON:	
  6988  0070                     ?_isdigit:	
  6989  0070                     ?_mssp1_IRQisEnabled:	
  6990                           ; 1 bit 
  6991                           
  6992  0070                     ?_i2c1_driver_open:	
  6993                           ; 1 bit 
  6994                           
  6995  0070                     ?_i2c1_driver_isNACK:	
  6996                           ; 1 bit 
  6997                           
  6998  0070                     ?i1_i2c1_driver_isNACK:	
  6999                           ; 1 bit 
  7000                           
  7001  0070                     ?_i2c_busCollisionISR:	
  7002                           ; 1 bit 
  7003                           
  7004  0070                     ??_i2c_busCollisionISR:	
  7005                           ; 1 bytes @ 0x0
  7006                           
  7007  0070                     ?_i2c_ISR:	
  7008                           ; 1 bytes @ 0x0
  7009                           
  7010  0070                     ?_i2c_poller:	
  7011                           ; 1 bytes @ 0x0
  7012                           
  7013  0070                     ?_localtime:	
  7014                           ; 1 bytes @ 0x0
  7015                           
  7016  0070                     ?_PMD_Initialize:	
  7017                           ; 1 bytes @ 0x0
  7018                           
  7019  0070                     ?_OSCILLATOR_Initialize:	
  7020                           ; 1 bytes @ 0x0
  7021                           
  7022  0070                     ?_SPI2_Initialize:	
  7023                           ; 1 bytes @ 0x0
  7024                           
  7025  0070                     ?_OLED_Initialize:	
  7026                           ; 1 bytes @ 0x0
  7027                           
  7028  0070                     ?_SetupClock:	
  7029                           ; 1 bytes @ 0x0
  7030                           
  7031  0070                     ?_OLED_Clear:	
  7032                           ; 1 bytes @ 0x0
  7033                           
  7034  0070                     ?_gmtime:	
  7035                           ; 1 bytes @ 0x0
  7036                           
  7037  0070                     ?_mssp1_disableIRQ:	
  7038                           ; 1 bytes @ 0x0
  7039                           
  7040  0070                     ?_mssp1_clearIRQ:	
  7041                           ; 1 bytes @ 0x0
  7042                           
  7043  0070                     ?_mssp1_setIRQ:	
  7044                           ; 1 bytes @ 0x0
  7045                           
  7046  0070                     ?_mssp1_waitForEvent:	
  7047                           ; 1 bytes @ 0x0
  7048                           
  7049  0070                     ?_i2c1_driver_resetBus:	
  7050                           ; 1 bytes @ 0x0
  7051                           
  7052  0070                     ?_i2c1_driver_start:	
  7053                           ; 1 bytes @ 0x0
  7054                           
  7055  0070                     ?_i2c1_driver_restart:	
  7056                           ; 1 bytes @ 0x0
  7057                           
  7058  0070                     ?_i2c1_driver_stop:	
  7059                           ; 1 bytes @ 0x0
  7060                           
  7061  0070                     ?_i2c1_driver_startRX:	
  7062                           ; 1 bytes @ 0x0
  7063                           
  7064  0070                     ?_i2c1_driver_getRXData:	
  7065                           ; 1 bytes @ 0x0
  7066                           
  7067  0070                     ?_i2c1_driver_TXData:	
  7068                           ; 1 bytes @ 0x0
  7069                           
  7070  0070                     ?_i2c1_driver_sendACK:	
  7071                           ; 1 bytes @ 0x0
  7072                           
  7073  0070                     ?_i2c1_driver_sendNACK:	
  7074                           ; 1 bytes @ 0x0
  7075                           
  7076  0070                     ?_i2c1_driver_clearBusCollision:	
  7077                           ; 1 bytes @ 0x0
  7078                           
  7079  0070                     ??_i2c1_driver_clearBusCollision:	
  7080                           ; 1 bytes @ 0x0
  7081                           
  7082  0070                     ?_i2c_open:	
  7083                           ; 1 bytes @ 0x0
  7084                           
  7085  0070                     ?_i2c_close:	
  7086                           ; 1 bytes @ 0x0
  7087                           
  7088  0070                     ?_i2c_masterOperation:	
  7089                           ; 1 bytes @ 0x0
  7090                           
  7091  0070                     ?_i2c_masterWrite:	
  7092                           ; 1 bytes @ 0x0
  7093                           
  7094  0070                     ?_do_I2C_RESET:	
  7095                           ; 1 bytes @ 0x0
  7096                           
  7097  0070                     ?_do_I2C_IDLE:	
  7098                           ; 1 bytes @ 0x0
  7099                           
  7100  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7101                           ; 1 bytes @ 0x0
  7102                           
  7103  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7104                           ; 1 bytes @ 0x0
  7105                           
  7106  0070                     ?_do_I2C_SEND_RESTART:	
  7107                           ; 1 bytes @ 0x0
  7108                           
  7109  0070                     ?_do_I2C_SEND_STOP:	
  7110                           ; 1 bytes @ 0x0
  7111                           
  7112  0070                     ?_do_I2C_SEND_ADR_READ:	
  7113                           ; 1 bytes @ 0x0
  7114                           
  7115  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7116                           ; 1 bytes @ 0x0
  7117                           
  7118  0070                     ?_do_I2C_RCEN:	
  7119                           ; 1 bytes @ 0x0
  7120                           
  7121  0070                     ?_do_I2C_DO_ACK:	
  7122                           ; 1 bytes @ 0x0
  7123                           
  7124  0070                     ?_do_I2C_DO_NACK_STOP:	
  7125                           ; 1 bytes @ 0x0
  7126                           
  7127  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7128                           ; 1 bytes @ 0x0
  7129                           
  7130  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7131                           ; 1 bytes @ 0x0
  7132                           
  7133  0070                     ?_do_I2C_TX:	
  7134                           ; 1 bytes @ 0x0
  7135                           
  7136  0070                     ?_do_I2C_RX:	
  7137                           ; 1 bytes @ 0x0
  7138                           
  7139  0070                     ?_do_I2C_TX_EMPTY:	
  7140                           ; 1 bytes @ 0x0
  7141                           
  7142  0070                     ?_rtcc_read:	
  7143                           ; 1 bytes @ 0x0
  7144                           
  7145  0070                     ?_rtc6_Initialize:	
  7146                           ; 1 bytes @ 0x0
  7147                           
  7148  0070                     ?_PIN_MANAGER_Initialize:	
  7149                           ; 1 bytes @ 0x0
  7150                           
  7151  0070                     ?_INTERRUPT_InterruptManager:	
  7152                           ; 1 bytes @ 0x0
  7153                           
  7154  0070                     ?_SYSTEM_Initialize:	
  7155                           ; 1 bytes @ 0x0
  7156                           
  7157  0070                     ?_main:	
  7158                           ; 1 bytes @ 0x0
  7159                           
  7160  0070                     ?_SPI2_Exchange8bit:	
  7161                           ; 1 bytes @ 0x0
  7162                           
  7163  0070                     ?_OLED_Command:	
  7164                           ; 1 bytes @ 0x0
  7165                           
  7166  0070                     ?_OLED_Data:	
  7167                           ; 1 bytes @ 0x0
  7168                           
  7169  0070                     ?_OLED_SetRow:	
  7170                           ; 1 bytes @ 0x0
  7171                           
  7172  0070                     ?_OLED_SetColumn:	
  7173                           ; 1 bytes @ 0x0
  7174                           
  7175  0070                     ?i1_mssp1_clearIRQ:	
  7176                           ; 1 bytes @ 0x0
  7177                           
  7178  0070                     ??i1_mssp1_clearIRQ:	
  7179                           ; 1 bytes @ 0x0
  7180                           
  7181  0070                     ?i1_mssp1_setIRQ:	
  7182                           ; 1 bytes @ 0x0
  7183                           
  7184  0070                     ??i1_mssp1_setIRQ:	
  7185                           ; 1 bytes @ 0x0
  7186                           
  7187  0070                     ?i1_i2c1_driver_resetBus:	
  7188                           ; 1 bytes @ 0x0
  7189                           
  7190  0070                     ??i1_i2c1_driver_resetBus:	
  7191                           ; 1 bytes @ 0x0
  7192                           
  7193  0070                     ?i1_i2c1_driver_restart:	
  7194                           ; 1 bytes @ 0x0
  7195                           
  7196  0070                     ??i1_i2c1_driver_restart:	
  7197                           ; 1 bytes @ 0x0
  7198                           
  7199  0070                     ?i1_i2c1_driver_stop:	
  7200                           ; 1 bytes @ 0x0
  7201                           
  7202  0070                     ??i1_i2c1_driver_stop:	
  7203                           ; 1 bytes @ 0x0
  7204                           
  7205  0070                     ??i1_i2c1_driver_isNACK:	
  7206                           ; 1 bytes @ 0x0
  7207                           
  7208  0070                     ?i1_i2c1_driver_startRX:	
  7209                           ; 1 bytes @ 0x0
  7210                           
  7211  0070                     ??i1_i2c1_driver_startRX:	
  7212                           ; 1 bytes @ 0x0
  7213                           
  7214  0070                     ?i1_i2c1_driver_getRXData:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0070                     ??i1_i2c1_driver_getRXData:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0070                     ?i1_i2c1_driver_TXData:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0070                     ??i1_i2c1_driver_TXData:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0070                     ?i1_i2c1_driver_sendACK:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0070                     ??i1_i2c1_driver_sendACK:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0070                     ?i1_i2c1_driver_sendNACK:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0070                     ??i1_i2c1_driver_sendNACK:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0070                     ?i1_i2c_setBuffer:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0070                     ?i1_do_I2C_RESET:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0070                     ??i1_do_I2C_RESET:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0070                     ?i1_do_I2C_IDLE:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0070                     ??i1_do_I2C_IDLE:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0070                     ?i1_do_I2C_SEND_RESTART:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0070                     ??i1_do_I2C_SEND_RESTART:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0070                     ?i1_do_I2C_SEND_STOP:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0070                     ??i1_do_I2C_SEND_STOP:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0070                     ?i1_do_I2C_RCEN:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0070                     ??i1_do_I2C_RCEN:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0070                     ?i1_do_I2C_DO_ACK:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0070                     ??i1_do_I2C_DO_ACK:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0070                     ?i1_do_I2C_TX:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0070                     ?i1_do_I2C_RX:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0070                     ??i1_do_I2C_RX:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0070                     ?i1_do_I2C_TX_EMPTY:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0070                     ??i1_do_I2C_TX_EMPTY:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328  0070                     ?i1_i2c_ISR:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331  0070                     ?i1_setCallBack:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334  0070                     i1i2c1_driver_TXData@d:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337  0070                     i1i2c_setBuffer@bufferSize:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0070                     i1setCallBack@cb:	
  7341                           ; 2 bytes @ 0x0
  7342                           
  7343                           
  7344                           ; 2 bytes @ 0x0
  7345  0070                     	ds	1
  7346  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7347  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7348                           ; 1 bytes @ 0x1
  7349                           
  7350  0071                     ??i1_do_I2C_TX:	
  7351                           ; 1 bytes @ 0x1
  7352                           
  7353                           
  7354                           ; 1 bytes @ 0x1
  7355  0071                     	ds	1
  7356  0072                     ??i1_i2c_setBuffer:	
  7357  0072                     i1setCallBack@p:	
  7358                           ; 1 bytes @ 0x2
  7359                           
  7360  0072                     i1_do_I2C_TX$723:	
  7361                           ; 1 bytes @ 0x2
  7362                           
  7363                           
  7364                           ; 2 bytes @ 0x2
  7365  0072                     	ds	1
  7366  0073                     ??i1_setCallBack:	
  7367  0073                     i1i2c_setBuffer@buffer:	
  7368                           ; 1 bytes @ 0x3
  7369                           
  7370                           
  7371                           ; 1 bytes @ 0x3
  7372  0073                     	ds	1
  7373  0074                     ??i1_i2c_ISR:	
  7374  0074                     i1setCallBack@idx:	
  7375                           ; 1 bytes @ 0x4
  7376                           
  7377                           
  7378                           ; 1 bytes @ 0x4
  7379  0074                     	ds	1
  7380  0075                     ?i1_i2c_setDataCompleteCallback:	
  7381  0075                     i1i2c_setDataCompleteCallback@cb:	
  7382                           ; 1 bytes @ 0x5
  7383                           
  7384                           
  7385                           ; 2 bytes @ 0x5
  7386  0075                     	ds	2
  7387  0077                     ??_INTERRUPT_InterruptManager:	
  7388  0077                     i1i2c_setDataCompleteCallback@p:	
  7389                           ; 1 bytes @ 0x7
  7390                           
  7391                           
  7392                           ; 1 bytes @ 0x7
  7393  0077                     	ds	1
  7394  0078                     ??i1_i2c_setDataCompleteCallback:	
  7395                           
  7396                           ; 1 bytes @ 0x8
  7397  0078                     	ds	1
  7398  0079                     ?i1_returnStop:	
  7399  0079                     ?i1_returnReset:	
  7400                           ; 1 bytes @ 0x9
  7401                           
  7402  0079                     ?i1_i2c_restartWrite:	
  7403                           ; 1 bytes @ 0x9
  7404                           
  7405  0079                     ?i1_wr1RegCompleteHandler:	
  7406                           ; 1 bytes @ 0x9
  7407                           
  7408  0079                     ?i1_rd1RegCompleteHandler:	
  7409                           ; 1 bytes @ 0x9
  7410                           
  7411  0079                     ?i1_rd2RegCompleteHandler:	
  7412                           ; 1 bytes @ 0x9
  7413                           
  7414  0079                     ?i1_wr2RegCompleteHandler:	
  7415                           ; 1 bytes @ 0x9
  7416                           
  7417  0079                     ?i1_rdBlkRegCompleteHandler:	
  7418                           ; 1 bytes @ 0x9
  7419                           
  7420  0079                     i1returnStop@p:	
  7421                           ; 1 bytes @ 0x9
  7422                           
  7423  0079                     i1returnReset@p:	
  7424                           ; 1 bytes @ 0x9
  7425                           
  7426  0079                     i1i2c_restartWrite@p:	
  7427                           ; 1 bytes @ 0x9
  7428                           
  7429  0079                     i1wr1RegCompleteHandler@p:	
  7430                           ; 1 bytes @ 0x9
  7431                           
  7432  0079                     i1rd1RegCompleteHandler@p:	
  7433                           ; 1 bytes @ 0x9
  7434                           
  7435  0079                     i1rd2RegCompleteHandler@p:	
  7436                           ; 1 bytes @ 0x9
  7437                           
  7438  0079                     i1wr2RegCompleteHandler@p:	
  7439                           ; 1 bytes @ 0x9
  7440                           
  7441  0079                     i1rdBlkRegCompleteHandler@p:	
  7442                           ; 1 bytes @ 0x9
  7443                           
  7444                           
  7445                           ; 1 bytes @ 0x9
  7446  0079                     	ds	1
  7447  007A                     ??i1_returnStop:	
  7448  007A                     ??i1_returnReset:	
  7449                           ; 1 bytes @ 0xA
  7450                           
  7451  007A                     ??i1_i2c_restartWrite:	
  7452                           ; 1 bytes @ 0xA
  7453                           
  7454  007A                     ??i1_wr1RegCompleteHandler:	
  7455                           ; 1 bytes @ 0xA
  7456                           
  7457  007A                     ??i1_rd1RegCompleteHandler:	
  7458                           ; 1 bytes @ 0xA
  7459                           
  7460  007A                     ??i1_rd2RegCompleteHandler:	
  7461                           ; 1 bytes @ 0xA
  7462                           
  7463  007A                     ??i1_wr2RegCompleteHandler:	
  7464                           ; 1 bytes @ 0xA
  7465                           
  7466  007A                     ??i1_rdBlkRegCompleteHandler:	
  7467                           ; 1 bytes @ 0xA
  7468                           
  7469                           
  7470                           	psect	cstackBANK0
  7471  0020                     __pcstackBANK0:	
  7472                           ; 1 bytes @ 0xA
  7473                           
  7474  0020                     ?_setCallBack:	
  7475  0020                     ??_PMD_Initialize:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478  0020                     ??_OSCILLATOR_Initialize:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481  0020                     ??_SPI2_Initialize:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484  0020                     ??_SetupClock:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487  0020                     ??_isdigit:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490  0020                     ??_mssp1_IRQisEnabled:	
  7491                           ; 1 bytes @ 0x0
  7492                           
  7493  0020                     ??_mssp1_disableIRQ:	
  7494                           ; 1 bytes @ 0x0
  7495                           
  7496  0020                     ??_mssp1_clearIRQ:	
  7497                           ; 1 bytes @ 0x0
  7498                           
  7499  0020                     ??_mssp1_setIRQ:	
  7500                           ; 1 bytes @ 0x0
  7501                           
  7502  0020                     ??_mssp1_waitForEvent:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505  0020                     ??_i2c1_driver_open:	
  7506                           ; 1 bytes @ 0x0
  7507                           
  7508  0020                     ??_i2c1_driver_resetBus:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511  0020                     ??_i2c1_driver_start:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514  0020                     ??_i2c1_driver_restart:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517  0020                     ??_i2c1_driver_stop:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520  0020                     ??_i2c1_driver_isNACK:	
  7521                           ; 1 bytes @ 0x0
  7522                           
  7523  0020                     ??_i2c1_driver_startRX:	
  7524                           ; 1 bytes @ 0x0
  7525                           
  7526  0020                     ??_i2c1_driver_getRXData:	
  7527                           ; 1 bytes @ 0x0
  7528                           
  7529  0020                     ??_i2c1_driver_TXData:	
  7530                           ; 1 bytes @ 0x0
  7531                           
  7532  0020                     ??_i2c1_driver_sendACK:	
  7533                           ; 1 bytes @ 0x0
  7534                           
  7535  0020                     ??_i2c1_driver_sendNACK:	
  7536                           ; 1 bytes @ 0x0
  7537                           
  7538  0020                     ?_i2c1_driver_setBusCollisionISR:	
  7539                           ; 1 bytes @ 0x0
  7540                           
  7541  0020                     ?_i2c1_driver_setI2cISR:	
  7542                           ; 1 bytes @ 0x0
  7543                           
  7544  0020                     ??_i2c_close:	
  7545                           ; 1 bytes @ 0x0
  7546                           
  7547  0020                     ?_i2c_setBuffer:	
  7548                           ; 1 bytes @ 0x0
  7549                           
  7550  0020                     ??_do_I2C_RESET:	
  7551                           ; 1 bytes @ 0x0
  7552                           
  7553  0020                     ??_do_I2C_IDLE:	
  7554                           ; 1 bytes @ 0x0
  7555                           
  7556  0020                     ??_do_I2C_SEND_RESTART_READ:	
  7557                           ; 1 bytes @ 0x0
  7558                           
  7559  0020                     ??_do_I2C_SEND_RESTART_WRITE:	
  7560                           ; 1 bytes @ 0x0
  7561                           
  7562  0020                     ??_do_I2C_SEND_RESTART:	
  7563                           ; 1 bytes @ 0x0
  7564                           
  7565  0020                     ??_do_I2C_SEND_STOP:	
  7566                           ; 1 bytes @ 0x0
  7567                           
  7568  0020                     ??_do_I2C_RCEN:	
  7569                           ; 1 bytes @ 0x0
  7570                           
  7571  0020                     ??_do_I2C_DO_ACK:	
  7572                           ; 1 bytes @ 0x0
  7573                           
  7574  0020                     ??_do_I2C_DO_NACK_STOP:	
  7575                           ; 1 bytes @ 0x0
  7576                           
  7577  0020                     ??_do_I2C_DO_NACK_RESTART:	
  7578                           ; 1 bytes @ 0x0
  7579                           
  7580  0020                     ??_do_I2C_DO_ADDRESS_NACK:	
  7581                           ; 1 bytes @ 0x0
  7582                           
  7583  0020                     ??_do_I2C_RX:	
  7584                           ; 1 bytes @ 0x0
  7585                           
  7586  0020                     ??_do_I2C_TX_EMPTY:	
  7587                           ; 1 bytes @ 0x0
  7588                           
  7589  0020                     ??_PIN_MANAGER_Initialize:	
  7590                           ; 1 bytes @ 0x0
  7591                           
  7592  0020                     ??_SPI2_Exchange8bit:	
  7593                           ; 1 bytes @ 0x0
  7594                           
  7595  0020                     ?___bmul:	
  7596                           ; 1 bytes @ 0x0
  7597                           
  7598  0020                     ?_memset:	
  7599                           ; 1 bytes @ 0x0
  7600                           
  7601  0020                     ?_strlen:	
  7602                           ; 2 bytes @ 0x0
  7603                           
  7604  0020                     ?___wmul:	
  7605                           ; 2 bytes @ 0x0
  7606                           
  7607  0020                     ?___awdiv:	
  7608                           ; 2 bytes @ 0x0
  7609                           
  7610  0020                     ?___awmod:	
  7611                           ; 2 bytes @ 0x0
  7612                           
  7613  0020                     ?___lmul:	
  7614                           ; 2 bytes @ 0x0
  7615                           
  7616  0020                     ?___aldiv:	
  7617                           ; 4 bytes @ 0x0
  7618                           
  7619  0020                     ?___almod:	
  7620                           ; 4 bytes @ 0x0
  7621                           
  7622  0020                     mssp1_waitForEvent@timeout:	
  7623                           ; 4 bytes @ 0x0
  7624                           
  7625  0020                     i2c1_driver_TXData@d:	
  7626                           ; 1 bytes @ 0x0
  7627                           
  7628  0020                     SPI2_Exchange8bit@data:	
  7629                           ; 1 bytes @ 0x0
  7630                           
  7631  0020                     ___bmul@multiplicand:	
  7632                           ; 1 bytes @ 0x0
  7633                           
  7634  0020                     _isdigit$2032:	
  7635                           ; 1 bytes @ 0x0
  7636                           
  7637  0020                     i2c1_driver_setBusCollisionISR@f:	
  7638                           ; 1 bytes @ 0x0
  7639                           
  7640  0020                     i2c1_driver_setI2cISR@f:	
  7641                           ; 2 bytes @ 0x0
  7642                           
  7643  0020                     i2c_setBuffer@bufferSize:	
  7644                           ; 2 bytes @ 0x0
  7645                           
  7646  0020                     setCallBack@cb:	
  7647                           ; 2 bytes @ 0x0
  7648                           
  7649  0020                     ___wmul@multiplier:	
  7650                           ; 2 bytes @ 0x0
  7651                           
  7652  0020                     ___awdiv@divisor:	
  7653                           ; 2 bytes @ 0x0
  7654                           
  7655  0020                     ___awmod@divisor:	
  7656                           ; 2 bytes @ 0x0
  7657                           
  7658  0020                     memset@p1:	
  7659                           ; 2 bytes @ 0x0
  7660                           
  7661  0020                     strlen@s:	
  7662                           ; 2 bytes @ 0x0
  7663                           
  7664  0020                     ___lmul@multiplier:	
  7665                           ; 2 bytes @ 0x0
  7666                           
  7667  0020                     ___aldiv@divisor:	
  7668                           ; 4 bytes @ 0x0
  7669                           
  7670  0020                     ___almod@divisor:	
  7671                           ; 4 bytes @ 0x0
  7672                           
  7673                           
  7674                           ; 4 bytes @ 0x0
  7675  0020                     	ds	1
  7676  0021                     ??_do_I2C_SEND_ADR_READ:	
  7677  0021                     ??_do_I2C_SEND_ADR_WRITE:	
  7678                           ; 1 bytes @ 0x1
  7679                           
  7680  0021                     ??_do_I2C_TX:	
  7681                           ; 1 bytes @ 0x1
  7682                           
  7683  0021                     ??_OLED_Command:	
  7684                           ; 1 bytes @ 0x1
  7685                           
  7686  0021                     ??_OLED_Data:	
  7687                           ; 1 bytes @ 0x1
  7688                           
  7689  0021                     ??___bmul:	
  7690                           ; 1 bytes @ 0x1
  7691                           
  7692  0021                     i2c_close@ret:	
  7693                           ; 1 bytes @ 0x1
  7694                           
  7695  0021                     OLED_Command@temp:	
  7696                           ; 1 bytes @ 0x1
  7697                           
  7698  0021                     OLED_Data@temp:	
  7699                           ; 1 bytes @ 0x1
  7700                           
  7701  0021                     isdigit@c:	
  7702                           ; 1 bytes @ 0x1
  7703                           
  7704                           
  7705                           ; 1 bytes @ 0x1
  7706  0021                     	ds	1
  7707  0022                     ??_OLED_Initialize:	
  7708  0022                     ??_strlen:	
  7709                           ; 1 bytes @ 0x2
  7710                           
  7711  0022                     ??_i2c1_driver_setBusCollisionISR:	
  7712                           ; 1 bytes @ 0x2
  7713                           
  7714  0022                     ??_i2c1_driver_setI2cISR:	
  7715                           ; 1 bytes @ 0x2
  7716                           
  7717  0022                     ??_i2c_open:	
  7718                           ; 1 bytes @ 0x2
  7719                           
  7720  0022                     ??_i2c_setBuffer:	
  7721                           ; 1 bytes @ 0x2
  7722                           
  7723  0022                     ??_OLED_SetRow:	
  7724                           ; 1 bytes @ 0x2
  7725                           
  7726  0022                     ??_OLED_SetColumn:	
  7727                           ; 1 bytes @ 0x2
  7728                           
  7729  0022                     setCallBack@p:	
  7730                           ; 1 bytes @ 0x2
  7731                           
  7732  0022                     ___bmul@product:	
  7733                           ; 1 bytes @ 0x2
  7734                           
  7735  0022                     _do_I2C_TX$723:	
  7736                           ; 1 bytes @ 0x2
  7737                           
  7738  0022                     ___wmul@multiplicand:	
  7739                           ; 2 bytes @ 0x2
  7740                           
  7741  0022                     ___awdiv@dividend:	
  7742                           ; 2 bytes @ 0x2
  7743                           
  7744  0022                     ___awmod@dividend:	
  7745                           ; 2 bytes @ 0x2
  7746                           
  7747  0022                     memset@c:	
  7748                           ; 2 bytes @ 0x2
  7749                           
  7750                           
  7751                           ; 2 bytes @ 0x2
  7752  0022                     	ds	1
  7753  0023                     ??_setCallBack:	
  7754  0023                     i2c_open@address:	
  7755                           ; 1 bytes @ 0x3
  7756                           
  7757  0023                     i2c_setBuffer@buffer:	
  7758                           ; 1 bytes @ 0x3
  7759                           
  7760  0023                     OLED_SetRow@address:	
  7761                           ; 1 bytes @ 0x3
  7762                           
  7763  0023                     OLED_SetColumn@address:	
  7764                           ; 1 bytes @ 0x3
  7765                           
  7766  0023                     ___bmul@multiplier:	
  7767                           ; 1 bytes @ 0x3
  7768                           
  7769                           
  7770                           ; 1 bytes @ 0x3
  7771  0023                     	ds	1
  7772  0024                     ??_i2c_ISR:	
  7773  0024                     ?_OLED_PutPicture:	
  7774                           ; 1 bytes @ 0x4
  7775                           
  7776  0024                     ??___wmul:	
  7777                           ; 1 bytes @ 0x4
  7778                           
  7779  0024                     ??___awdiv:	
  7780                           ; 1 bytes @ 0x4
  7781                           
  7782  0024                     ??___awmod:	
  7783                           ; 1 bytes @ 0x4
  7784                           
  7785  0024                     i2c_open@ret:	
  7786                           ; 1 bytes @ 0x4
  7787                           
  7788  0024                     setCallBack@idx:	
  7789                           ; 1 bytes @ 0x4
  7790                           
  7791  0024                     OLED_PutPicture@pic:	
  7792                           ; 1 bytes @ 0x4
  7793                           
  7794  0024                     ___wmul@product:	
  7795                           ; 2 bytes @ 0x4
  7796                           
  7797  0024                     memset@n:	
  7798                           ; 2 bytes @ 0x4
  7799                           
  7800  0024                     strlen@cp:	
  7801                           ; 2 bytes @ 0x4
  7802                           
  7803  0024                     ___lmul@multiplicand:	
  7804                           ; 2 bytes @ 0x4
  7805                           
  7806  0024                     ___aldiv@dividend:	
  7807                           ; 4 bytes @ 0x4
  7808                           
  7809  0024                     ___almod@dividend:	
  7810                           ; 4 bytes @ 0x4
  7811                           
  7812                           
  7813                           ; 4 bytes @ 0x4
  7814  0024                     	ds	1
  7815  0025                     ?_i2c_setDataCompleteCallback:	
  7816  0025                     ?_i2c_setAddressNACKCallback:	
  7817                           ; 1 bytes @ 0x5
  7818                           
  7819  0025                     ___awdiv@counter:	
  7820                           ; 1 bytes @ 0x5
  7821                           
  7822  0025                     ___awmod@counter:	
  7823                           ; 1 bytes @ 0x5
  7824                           
  7825  0025                     i2c_setDataCompleteCallback@cb:	
  7826                           ; 1 bytes @ 0x5
  7827                           
  7828  0025                     i2c_setAddressNACKCallback@cb:	
  7829                           ; 2 bytes @ 0x5
  7830                           
  7831                           
  7832                           ; 2 bytes @ 0x5
  7833  0025                     	ds	1
  7834  0026                     ??_memset:	
  7835  0026                     ?_Modify_Data:	
  7836                           ; 1 bytes @ 0x6
  7837                           
  7838  0026                     ??_OLED_PutPicture:	
  7839                           ; 1 bytes @ 0x6
  7840                           
  7841  0026                     ?___lwdiv:	
  7842                           ; 1 bytes @ 0x6
  7843                           
  7844  0026                     ___awdiv@sign:	
  7845                           ; 2 bytes @ 0x6
  7846                           
  7847  0026                     ___awmod@sign:	
  7848                           ; 1 bytes @ 0x6
  7849                           
  7850  0026                     OLED_PutPicture@j:	
  7851                           ; 1 bytes @ 0x6
  7852                           
  7853  0026                     Modify_Data@c:	
  7854                           ; 2 bytes @ 0x6
  7855                           
  7856  0026                     ___lwdiv@divisor:	
  7857                           ; 2 bytes @ 0x6
  7858                           
  7859  0026                     memset@p:	
  7860                           ; 2 bytes @ 0x6
  7861                           
  7862                           
  7863                           ; 2 bytes @ 0x6
  7864  0026                     	ds	1
  7865  0027                     ??_i2c_poller:	
  7866  0027                     ??_i2c_masterOperation:	
  7867                           ; 1 bytes @ 0x7
  7868                           
  7869  0027                     i2c_setDataCompleteCallback@p:	
  7870                           ; 1 bytes @ 0x7
  7871                           
  7872  0027                     i2c_setAddressNACKCallback@p:	
  7873                           ; 1 bytes @ 0x7
  7874                           
  7875  0027                     ___awdiv@quotient:	
  7876                           ; 1 bytes @ 0x7
  7877                           
  7878                           
  7879                           ; 2 bytes @ 0x7
  7880  0027                     	ds	1
  7881  0028                     ??_i2c_setDataCompleteCallback:	
  7882  0028                     ??_i2c_setAddressNACKCallback:	
  7883                           ; 1 bytes @ 0x8
  7884                           
  7885  0028                     ??___lmul:	
  7886                           ; 1 bytes @ 0x8
  7887                           
  7888  0028                     ??___aldiv:	
  7889                           ; 1 bytes @ 0x8
  7890                           
  7891  0028                     ??___almod:	
  7892                           ; 1 bytes @ 0x8
  7893                           
  7894  0028                     i2c_masterOperation@read:	
  7895                           ; 1 bytes @ 0x8
  7896                           
  7897  0028                     OLED_PutPicture@i:	
  7898                           ; 1 bytes @ 0x8
  7899                           
  7900  0028                     Modify_Data@offset:	
  7901                           ; 2 bytes @ 0x8
  7902                           
  7903  0028                     ___lwdiv@dividend:	
  7904                           ; 2 bytes @ 0x8
  7905                           
  7906  0028                     ___lmul@product:	
  7907                           ; 2 bytes @ 0x8
  7908                           
  7909                           
  7910                           ; 4 bytes @ 0x8
  7911  0028                     	ds	1
  7912  0029                     ?_returnStop:	
  7913  0029                     ?_returnReset:	
  7914                           ; 1 bytes @ 0x9
  7915                           
  7916  0029                     ?_i2c_restartWrite:	
  7917                           ; 1 bytes @ 0x9
  7918                           
  7919  0029                     ?_wr1RegCompleteHandler:	
  7920                           ; 1 bytes @ 0x9
  7921                           
  7922  0029                     ?_rd1RegCompleteHandler:	
  7923                           ; 1 bytes @ 0x9
  7924                           
  7925  0029                     ?_rd2RegCompleteHandler:	
  7926                           ; 1 bytes @ 0x9
  7927                           
  7928  0029                     ?_wr2RegCompleteHandler:	
  7929                           ; 1 bytes @ 0x9
  7930                           
  7931  0029                     ?_rdBlkRegCompleteHandler:	
  7932                           ; 1 bytes @ 0x9
  7933                           
  7934  0029                     i2c_masterOperation@ret:	
  7935                           ; 1 bytes @ 0x9
  7936                           
  7937  0029                     returnStop@p:	
  7938                           ; 1 bytes @ 0x9
  7939                           
  7940  0029                     returnReset@p:	
  7941                           ; 1 bytes @ 0x9
  7942                           
  7943  0029                     i2c_restartWrite@p:	
  7944                           ; 1 bytes @ 0x9
  7945                           
  7946  0029                     wr1RegCompleteHandler@p:	
  7947                           ; 1 bytes @ 0x9
  7948                           
  7949  0029                     rd1RegCompleteHandler@p:	
  7950                           ; 1 bytes @ 0x9
  7951                           
  7952  0029                     rd2RegCompleteHandler@p:	
  7953                           ; 1 bytes @ 0x9
  7954                           
  7955  0029                     wr2RegCompleteHandler@p:	
  7956                           ; 1 bytes @ 0x9
  7957                           
  7958  0029                     rdBlkRegCompleteHandler@p:	
  7959                           ; 1 bytes @ 0x9
  7960                           
  7961  0029                     ___aldiv@counter:	
  7962                           ; 1 bytes @ 0x9
  7963                           
  7964  0029                     ___almod@counter:	
  7965                           ; 1 bytes @ 0x9
  7966                           
  7967                           
  7968                           ; 1 bytes @ 0x9
  7969  0029                     	ds	1
  7970  002A                     ??_returnStop:	
  7971  002A                     ??_returnReset:	
  7972                           ; 1 bytes @ 0xA
  7973                           
  7974  002A                     ?_i2c_read1ByteRegister:	
  7975                           ; 1 bytes @ 0xA
  7976                           
  7977  002A                     ?_i2c_write1ByteRegister:	
  7978                           ; 1 bytes @ 0xA
  7979                           
  7980  002A                     ??_OLED_Clear:	
  7981                           ; 1 bytes @ 0xA
  7982                           
  7983  002A                     ??_i2c_masterWrite:	
  7984                           ; 1 bytes @ 0xA
  7985                           
  7986  002A                     ??_i2c_restartWrite:	
  7987                           ; 1 bytes @ 0xA
  7988                           
  7989  002A                     ??_wr1RegCompleteHandler:	
  7990                           ; 1 bytes @ 0xA
  7991                           
  7992  002A                     ??_rd1RegCompleteHandler:	
  7993                           ; 1 bytes @ 0xA
  7994                           
  7995  002A                     ??_rd2RegCompleteHandler:	
  7996                           ; 1 bytes @ 0xA
  7997                           
  7998  002A                     ??_wr2RegCompleteHandler:	
  7999                           ; 1 bytes @ 0xA
  8000                           
  8001  002A                     ??_rdBlkRegCompleteHandler:	
  8002                           ; 1 bytes @ 0xA
  8003                           
  8004  002A                     ??___lwdiv:	
  8005                           ; 1 bytes @ 0xA
  8006                           
  8007  002A                     i2c_write1ByteRegister@reg:	
  8008                           ; 1 bytes @ 0xA
  8009                           
  8010  002A                     i2c_read1ByteRegister@reg:	
  8011                           ; 1 bytes @ 0xA
  8012                           
  8013  002A                     ___aldiv@sign:	
  8014                           ; 1 bytes @ 0xA
  8015                           
  8016  002A                     ___almod@sign:	
  8017                           ; 1 bytes @ 0xA
  8018                           
  8019  002A                     Modify_Data@limit:	
  8020                           ; 1 bytes @ 0xA
  8021                           
  8022                           
  8023                           ; 2 bytes @ 0xA
  8024  002A                     	ds	1
  8025  002B                     ??_i2c_read1ByteRegister:	
  8026  002B                     i2c_write1ByteRegister@data:	
  8027                           ; 1 bytes @ 0xB
  8028                           
  8029  002B                     ___lwdiv@quotient:	
  8030                           ; 1 bytes @ 0xB
  8031                           
  8032  002B                     ___aldiv@quotient:	
  8033                           ; 2 bytes @ 0xB
  8034                           
  8035                           
  8036                           ; 4 bytes @ 0xB
  8037  002B                     	ds	1
  8038  002C                     ??_i2c_write1ByteRegister:	
  8039  002C                     ??_Modify_Data:	
  8040                           ; 1 bytes @ 0xC
  8041                           
  8042  002C                     i2c_read1ByteRegister@address:	
  8043                           ; 1 bytes @ 0xC
  8044                           
  8045  002C                     OLED_Clear@j:	
  8046                           ; 1 bytes @ 0xC
  8047                           
  8048                           
  8049                           ; 1 bytes @ 0xC
  8050  002C                     	ds	1
  8051  002D                     i2c_write1ByteRegister@address:	
  8052  002D                     i2c_read1ByteRegister@e:	
  8053                           ; 1 bytes @ 0xD
  8054                           
  8055  002D                     ___lwdiv@counter:	
  8056                           ; 1 bytes @ 0xD
  8057                           
  8058  002D                     OLED_Clear@j_1662:	
  8059                           ; 1 bytes @ 0xD
  8060                           
  8061                           
  8062                           ; 2 bytes @ 0xD
  8063  002D                     	ds	1
  8064  002E                     ?_rtcc_write:	
  8065  002E                     ?___lwmod:	
  8066                           ; 1 bytes @ 0xE
  8067                           
  8068  002E                     ?_months_to_days:	
  8069                           ; 2 bytes @ 0xE
  8070                           
  8071  002E                     ?_years_to_days:	
  8072                           ; 2 bytes @ 0xE
  8073                           
  8074  002E                     rtcc_write@data:	
  8075                           ; 4 bytes @ 0xE
  8076                           
  8077  002E                     i2c_read1ByteRegister@x:	
  8078                           ; 1 bytes @ 0xE
  8079                           
  8080  002E                     ___lwmod@divisor:	
  8081                           ; 2 bytes @ 0xE
  8082                           
  8083  002E                     months_to_days@month:	
  8084                           ; 2 bytes @ 0xE
  8085                           
  8086  002E                     years_to_days@yr:	
  8087                           ; 2 bytes @ 0xE
  8088                           
  8089                           
  8090                           ; 2 bytes @ 0xE
  8091  002E                     	ds	1
  8092  002F                     ??_rtcc_write:	
  8093  002F                     OLED_Clear@i:	
  8094                           ; 1 bytes @ 0xF
  8095                           
  8096                           
  8097                           ; 1 bytes @ 0xF
  8098  002F                     	ds	1
  8099  0030                     ??_months_to_days:	
  8100  0030                     i2c_read1ByteRegister@d2:	
  8101                           ; 1 bytes @ 0x10
  8102                           
  8103  0030                     ___lwmod@dividend:	
  8104                           ; 1 bytes @ 0x10
  8105                           
  8106                           
  8107                           ; 2 bytes @ 0x10
  8108  0030                     	ds	1
  8109  0031                     ??_rtcc_read:	
  8110  0031                     rtcc_write@addr:	
  8111                           ; 1 bytes @ 0x11
  8112                           
  8113                           
  8114                           ; 1 bytes @ 0x11
  8115  0031                     	ds	1
  8116  0032                     ??___lwmod:	
  8117  0032                     ??_years_to_days:	
  8118                           ; 1 bytes @ 0x12
  8119                           
  8120  0032                     rtcc_read@addr:	
  8121                           ; 1 bytes @ 0x12
  8122                           
  8123                           
  8124                           ; 1 bytes @ 0x12
  8125  0032                     	ds	1
  8126  0033                     ??_rtc6_Initialize:	
  8127  0033                     ?_rtc6_SetComponent:	
  8128                           ; 1 bytes @ 0x13
  8129                           
  8130  0033                     ?_rtc6_GetComponent:	
  8131                           ; 1 bytes @ 0x13
  8132                           
  8133  0033                     rtc6_SetComponent@mask:	
  8134                           ; 1 bytes @ 0x13
  8135                           
  8136  0033                     rtc6_GetComponent@mask:	
  8137                           ; 1 bytes @ 0x13
  8138                           
  8139  0033                     ___lwmod@counter:	
  8140                           ; 1 bytes @ 0x13
  8141                           
  8142                           
  8143                           ; 1 bytes @ 0x13
  8144  0033                     	ds	1
  8145  0034                     ??_rtc6_GetComponent:	
  8146  0034                     ?_sprintf:	
  8147                           ; 1 bytes @ 0x14
  8148                           
  8149  0034                     ?_dylen:	
  8150                           ; 2 bytes @ 0x14
  8151                           
  8152  0034                     ?_isleap:	
  8153                           ; 2 bytes @ 0x14
  8154                           
  8155  0034                     rtc6_SetComponent@time:	
  8156                           ; 2 bytes @ 0x14
  8157                           
  8158  0034                     sprintf@sp:	
  8159                           ; 1 bytes @ 0x14
  8160                           
  8161  0034                     dylen@yr:	
  8162                           ; 2 bytes @ 0x14
  8163                           
  8164  0034                     isleap@yr:	
  8165                           ; 2 bytes @ 0x14
  8166                           
  8167                           
  8168                           ; 2 bytes @ 0x14
  8169  0034                     	ds	1
  8170  0035                     ??_rtc6_SetComponent:	
  8171  0035                     rtc6_Initialize@reg:	
  8172                           ; 1 bytes @ 0x15
  8173                           
  8174  0035                     Modify_Data@right:	
  8175                           ; 1 bytes @ 0x15
  8176                           
  8177                           
  8178                           ; 2 bytes @ 0x15
  8179  0035                     	ds	1
  8180  0036                     ??_SYSTEM_Initialize:	
  8181  0036                     ??_dylen:	
  8182                           ; 1 bytes @ 0x16
  8183                           
  8184  0036                     ??_isleap:	
  8185                           ; 1 bytes @ 0x16
  8186                           
  8187  0036                     sprintf@f:	
  8188                           ; 1 bytes @ 0x16
  8189                           
  8190                           
  8191                           ; 2 bytes @ 0x16
  8192  0036                     	ds	1
  8193  0037                     rtc6_GetComponent@location:	
  8194  0037                     Modify_Data@p:	
  8195                           ; 1 bytes @ 0x17
  8196                           
  8197                           
  8198                           ; 2 bytes @ 0x17
  8199  0037                     	ds	1
  8200  0038                     ??_gmtime:	
  8201  0038                     rtc6_GetComponent@working:	
  8202                           ; 1 bytes @ 0x18
  8203                           
  8204  0038                     _isleap$2100:	
  8205                           ; 1 bytes @ 0x18
  8206                           
  8207                           
  8208                           ; 1 bytes @ 0x18
  8209  0038                     	ds	1
  8210  0039                     Modify_Data@j:	
  8211                           
  8212                           ; 2 bytes @ 0x19
  8213  0039                     	ds	1
  8214  003A                     gmtime@tp:	
  8215                           
  8216                           ; 1 bytes @ 0x1A
  8217  003A                     	ds	1
  8218  003B                     rtc6_SetComponent@inMemory:	
  8219  003B                     gmtime@tc:	
  8220                           ; 1 bytes @ 0x1B
  8221                           
  8222                           
  8223                           ; 4 bytes @ 0x1B
  8224  003B                     	ds	1
  8225  003C                     rtc6_SetComponent@location:	
  8226                           
  8227                           ; 1 bytes @ 0x1C
  8228  003C                     	ds	3
  8229  003F                     ??_localtime:	
  8230                           
  8231                           ; 1 bytes @ 0x1F
  8232  003F                     	ds	1
  8233  0040                     ?_ymd_to_scalar:	
  8234  0040                     ymd_to_scalar@yr:	
  8235                           ; 4 bytes @ 0x20
  8236                           
  8237                           
  8238                           ; 2 bytes @ 0x20
  8239  0040                     	ds	2
  8240  0042                     ymd_to_scalar@mo:	
  8241                           
  8242                           ; 2 bytes @ 0x22
  8243  0042                     	ds	2
  8244  0044                     ??_sprintf:	
  8245  0044                     ymd_to_scalar@day:	
  8246                           ; 1 bytes @ 0x24
  8247                           
  8248                           
  8249                           ; 2 bytes @ 0x24
  8250  0044                     	ds	2
  8251  0046                     ??_ymd_to_scalar:	
  8252                           
  8253                           ; 1 bytes @ 0x26
  8254  0046                     	ds	1
  8255  0047                     localtime@t:	
  8256                           
  8257                           ; 4 bytes @ 0x27
  8258  0047                     	ds	1
  8259  0048                     sprintf@ap:	
  8260                           
  8261                           ; 1 bytes @ 0x28
  8262  0048                     	ds	1
  8263  0049                     sprintf@cp:	
  8264                           
  8265                           ; 1 bytes @ 0x29
  8266  0049                     	ds	1
  8267  004A                     sprintf@prec:	
  8268  004A                     _ymd_to_scalar$2112:	
  8269                           ; 1 bytes @ 0x2A
  8270                           
  8271                           
  8272                           ; 2 bytes @ 0x2A
  8273  004A                     	ds	1
  8274  004B                     localtime@tp:	
  8275  004B                     sprintf@len:	
  8276                           ; 1 bytes @ 0x2B
  8277                           
  8278                           
  8279                           ; 2 bytes @ 0x2B
  8280  004B                     	ds	1
  8281  004C                     ?_rtc6_SetTime:	
  8282  004C                     rtc6_SetTime@t:	
  8283                           ; 1 bytes @ 0x2C
  8284                           
  8285  004C                     ymd_to_scalar@scalar:	
  8286                           ; 4 bytes @ 0x2C
  8287                           
  8288                           
  8289                           ; 4 bytes @ 0x2C
  8290  004C                     	ds	1
  8291  004D                     sprintf@val:	
  8292                           
  8293                           ; 2 bytes @ 0x2D
  8294  004D                     	ds	2
  8295  004F                     sprintf@flag:	
  8296                           
  8297                           ; 1 bytes @ 0x2F
  8298  004F                     	ds	1
  8299  0050                     ??_rtc6_SetTime:	
  8300  0050                     ?_mktime:	
  8301                           ; 1 bytes @ 0x30
  8302                           
  8303  0050                     sprintf@width:	
  8304                           ; 4 bytes @ 0x30
  8305                           
  8306                           
  8307                           ; 2 bytes @ 0x30
  8308  0050                     	ds	2
  8309  0052                     sprintf@c:	
  8310  0052                     _rtc6_SetTime$2616:	
  8311                           ; 1 bytes @ 0x32
  8312                           
  8313                           
  8314                           ; 1 bytes @ 0x32
  8315  0052                     	ds	1
  8316  0053                     ?_Write_String:	
  8317  0053                     rtc6_SetTime@tm_t:	
  8318                           ; 1 bytes @ 0x33
  8319                           
  8320  0053                     Write_String@message:	
  8321                           ; 1 bytes @ 0x33
  8322                           
  8323                           
  8324                           ; 2 bytes @ 0x33
  8325  0053                     	ds	1
  8326  0054                     ??_mktime:	
  8327                           
  8328                           ; 1 bytes @ 0x34
  8329  0054                     	ds	1
  8330  0055                     ??_Write_String:	
  8331  0055                     Write_String@len:	
  8332                           ; 1 bytes @ 0x35
  8333                           
  8334                           
  8335                           ; 2 bytes @ 0x35
  8336  0055                     	ds	5
  8337  005A                     mktime@tt:	
  8338                           
  8339                           ; 4 bytes @ 0x3A
  8340  005A                     	ds	4
  8341  005E                     mktime@timeptr:	
  8342                           
  8343                           ; 1 bytes @ 0x3E
  8344  005E                     	ds	1
  8345  005F                     ?_rtc6_GetTime:	
  8346                           
  8347                           ; 4 bytes @ 0x3F
  8348  005F                     	ds	4
  8349  0063                     ??_rtc6_GetTime:	
  8350                           
  8351                           ; 1 bytes @ 0x43
  8352  0063                     	ds	3
  8353  0066                     ??_main:	
  8354                           
  8355                           ; 1 bytes @ 0x46
  8356  0066                     	ds	4
  8357                           
  8358                           	psect	maintext
  8359  0CA0                     __pmaintext:	
  8360 ;;
  8361 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8362 ;;
  8363 ;; *************** function _main *****************
  8364 ;; Defined at:
  8365 ;;		line 7 in file "main.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  timeStr         0   18[BANK1 ] unsigned char [0]
  8370 ;;  welcomeMsg     12   18[BANK1 ] unsigned char [12]
  8371 ;;  getTime         4   35[BANK1 ] volatile long 
  8372 ;;  setTime         4   30[BANK1 ] volatile long 
  8373 ;;  tm_t            1   34[BANK1 ] PTR struct tm
  8374 ;;		 -> gmtime@tim(18), 
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8379 ;; Tracked objects:
  8380 ;;		On entry : B1F/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0
  8388 ;;Total ram usage:       25 bytes
  8389 ;; Hardware stack levels required when called:   18
  8390 ;; This function calls:
  8391 ;;		_OLED_Clear
  8392 ;;		_OLED_Initialize
  8393 ;;		_SYSTEM_Initialize
  8394 ;;		_SetupClock
  8395 ;;		_Write_String
  8396 ;;		_localtime
  8397 ;;		_memset
  8398 ;;		_rtc6_GetTime
  8399 ;;		_rtc6_SetTime
  8400 ;;		_sprintf
  8401 ;; This function is called by:
  8402 ;;		Startup code after reset
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           
  8407                           ;psect for function _main
  8408  0CA0                     _main:	
  8409                           
  8410                           ;main.c: 10: SYSTEM_Initialize();
  8411                           
  8412                           ;incstack = 0
  8413 ;; hardware stack exceeded
  8414                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8415  0CA0  3190  205E  318C   	fcall	_SYSTEM_Initialize
  8416                           
  8417                           ;main.c: 11: OLED_Initialize();
  8418  0CA3  318A  229C  318C   	fcall	_OLED_Initialize
  8419                           
  8420                           ;main.c: 12: SetupClock();
  8421  0CA6  319E  2668  318C   	fcall	_SetupClock
  8422                           
  8423                           ;main.c: 28: char welcomeMsg[] = "Alarm Clock";
  8424  0CA9  30E4               	movlw	low main@F15398
  8425  0CAA  0086               	movwf	6
  8426  0CAB  3000               	movlw	high main@F15398
  8427  0CAC  0087               	movwf	7
  8428  0CAD  30B2               	movlw	low main@welcomeMsg
  8429  0CAE  0084               	movwf	4
  8430  0CAF  3000               	movlw	high main@welcomeMsg
  8431  0CB0  0085               	movwf	5
  8432  0CB1  300C               	movlw	12
  8433  0CB2  0020               	movlb	0	; select bank0
  8434  0CB3  00E6               	movwf	??_main
  8435  0CB4                     u5510:	
  8436  0CB4  0016               	moviw fsr1++
  8437  0CB5  001A               	movwi fsr0++
  8438  0CB6  0BE6               	decfsz	??_main,f
  8439  0CB7  2CB4               	goto	u5510
  8440                           
  8441                           ;main.c: 29: OLED_Clear();
  8442  0CB8  3188  209B  318C   	fcall	_OLED_Clear
  8443                           
  8444                           ;main.c: 30: Write_String(welcomeMsg);
  8445  0CBB  30B2               	movlw	low main@welcomeMsg
  8446  0CBC  0020               	movlb	0	; select bank0
  8447  0CBD  00D3               	movwf	Write_String@message
  8448  0CBE  3000               	movlw	high main@welcomeMsg
  8449  0CBF  00D4               	movwf	Write_String@message+1
  8450  0CC0  3193  23C6  318C   	fcall	_Write_String
  8451                           
  8452                           ;main.c: 32: _delay((unsigned long)((1000)*(1000000/4000.0)));
  8453  0CC3  3002               	movlw	2
  8454  0CC4  0020               	movlb	0	; select bank0
  8455  0CC5  00E7               	movwf	??_main+1
  8456  0CC6  3045               	movlw	69
  8457  0CC7  00E6               	movwf	??_main
  8458  0CC8  30A9               	movlw	169
  8459  0CC9                     u5527:	
  8460  0CC9  0B89               	decfsz	9,f
  8461  0CCA  2CC9               	goto	u5527
  8462  0CCB  0BE6               	decfsz	??_main,f
  8463  0CCC  2CC9               	goto	u5527
  8464  0CCD  0BE7               	decfsz	??_main+1,f
  8465  0CCE  2CC9               	goto	u5527
  8466  0CCF  3200               	nop2
  8467                           
  8468                           ;main.c: 33: OLED_Clear();
  8469  0CD0  3188  209B  318C   	fcall	_OLED_Clear
  8470                           
  8471                           ;main.c: 34: volatile time_t getTime, setTime;
  8472                           ;main.c: 36: struct tm *tm_t;
  8473                           ;main.c: 38: memset(tm_t, 0, sizeof (tm_t));
  8474  0CD3  0021               	movlb	1	; select bank1
  8475  0CD4  0842               	movf	main@tm_t^(0+128),w
  8476  0CD5  0020               	movlb	0	; select bank0
  8477  0CD6  00A0               	movwf	memset@p1
  8478  0CD7  3001               	movlw	1
  8479  0CD8  00A1               	movwf	memset@p1+1
  8480  0CD9  3000               	movlw	0
  8481  0CDA  00A2               	movwf	memset@c
  8482  0CDB  00A3               	movwf	memset@c+1
  8483  0CDC  3001               	movlw	1
  8484  0CDD  00A4               	movwf	memset@n
  8485  0CDE  3000               	movlw	0
  8486  0CDF  00A5               	movwf	memset@n+1
  8487  0CE0  3191  216A  318C   	fcall	_memset
  8488                           
  8489                           ;main.c: 41: setTime = 1503870020;
  8490  0CE3  3059               	movlw	89
  8491  0CE4  0021               	movlb	1	; select bank1
  8492  0CE5  00C1               	movwf	(main@setTime+3)^(0+128)	;volatile
  8493  0CE6  30A3               	movlw	163
  8494  0CE7  00C0               	movwf	(main@setTime+2)^(0+128)	;volatile
  8495  0CE8  303C               	movlw	60
  8496  0CE9  00BF               	movwf	(main@setTime+1)^(0+128)	;volatile
  8497  0CEA  3044               	movlw	68
  8498  0CEB  00BE               	movwf	main@setTime^(0+128)	;volatile
  8499                           
  8500                           ;main.c: 42: getTime = 0;
  8501  0CEC  3000               	movlw	0
  8502  0CED  00C6               	movwf	(main@getTime+3)^(0+128)	;volatile
  8503  0CEE  3000               	movlw	0
  8504  0CEF  00C5               	movwf	(main@getTime+2)^(0+128)	;volatile
  8505  0CF0  3000               	movlw	0
  8506  0CF1  00C4               	movwf	(main@getTime+1)^(0+128)	;volatile
  8507  0CF2  3000               	movlw	0
  8508  0CF3  00C3               	movwf	main@getTime^(0+128)	;volatile
  8509                           
  8510                           ;main.c: 45: rtc6_SetTime(setTime);
  8511                           
  8512                           ;main.c: 43: while (1) {
  8513  0CF4  0021               	movlb	1	; select bank1
  8514  0CF5  0841               	movf	(main@setTime+3)^(0+128),w	;volatile
  8515  0CF6  0020               	movlb	0	; select bank0
  8516  0CF7  00CF               	movwf	rtc6_SetTime@t+3
  8517  0CF8  0021               	movlb	1	; select bank1
  8518  0CF9  0840               	movf	(main@setTime+2)^(0+128),w	;volatile
  8519  0CFA  0020               	movlb	0	; select bank0
  8520  0CFB  00CE               	movwf	rtc6_SetTime@t+2
  8521  0CFC  0021               	movlb	1	; select bank1
  8522  0CFD  083F               	movf	(main@setTime+1)^(0+128),w	;volatile
  8523  0CFE  0020               	movlb	0	; select bank0
  8524  0CFF  00CD               	movwf	rtc6_SetTime@t+1
  8525  0D00  0021               	movlb	1	; select bank1
  8526  0D01  083E               	movf	main@setTime^(0+128),w	;volatile
  8527  0D02  0020               	movlb	0	; select bank0
  8528  0D03  00CC               	movwf	rtc6_SetTime@t
  8529  0D04  318B  2316  318C   	fcall	_rtc6_SetTime
  8530                           
  8531                           ;main.c: 46: _delay((unsigned long)((20)*(1000000/4000.0)));
  8532  0D07  3007               	movlw	7
  8533  0D08  0020               	movlb	0	; select bank0
  8534  0D09  00E6               	movwf	??_main
  8535  0D0A  307D               	movlw	125
  8536  0D0B                     u5537:	
  8537  0D0B  0B89               	decfsz	9,f
  8538  0D0C  2D0B               	goto	u5537
  8539  0D0D  0BE6               	decfsz	??_main,f
  8540  0D0E  2D0B               	goto	u5537
  8541  0D0F                     l7239:	
  8542                           ;main.c: 47: char timeStr[];
  8543                           ;main.c: 48: while (1) {
  8544                           
  8545                           
  8546                           ;main.c: 50: getTime = rtc6_GetTime();
  8547  0D0F  318C  2418  318C   	fcall	_rtc6_GetTime
  8548  0D12  0020               	movlb	0	; select bank0
  8549  0D13  0862               	movf	?_rtc6_GetTime+3,w
  8550  0D14  0021               	movlb	1	; select bank1
  8551  0D15  00C6               	movwf	(main@getTime+3)^(0+128)	;volatile
  8552  0D16  0020               	movlb	0	; select bank0
  8553  0D17  0861               	movf	?_rtc6_GetTime+2,w
  8554  0D18  0021               	movlb	1	; select bank1
  8555  0D19  00C5               	movwf	(main@getTime+2)^(0+128)	;volatile
  8556  0D1A  0020               	movlb	0	; select bank0
  8557  0D1B  0860               	movf	?_rtc6_GetTime+1,w
  8558  0D1C  0021               	movlb	1	; select bank1
  8559  0D1D  00C4               	movwf	(main@getTime+1)^(0+128)	;volatile
  8560  0D1E  0020               	movlb	0	; select bank0
  8561  0D1F  085F               	movf	?_rtc6_GetTime,w
  8562  0D20  0021               	movlb	1	; select bank1
  8563  0D21  00C3               	movwf	main@getTime^(0+128)	;volatile
  8564                           
  8565                           ;main.c: 51: tm_t = localtime(&getTime);
  8566  0D22  30C3               	movlw	(low (main@getTime| 0))& (0+255)
  8567  0D23  3195  25A7  318C   	fcall	_localtime
  8568  0D26  0020               	movlb	0	; select bank0
  8569  0D27  00E6               	movwf	??_main
  8570  0D28  0866               	movf	??_main,w
  8571  0D29  0021               	movlb	1	; select bank1
  8572  0D2A  00C2               	movwf	main@tm_t^(0+128)
  8573                           
  8574                           ;main.c: 52: sprintf(timeStr, "%04d-%02d-%02d %02d:%02d:%02d\n", tm_t->tm_year+1900, tm_
      +                          t->tm_mon+1, tm_t->tm_mday, tm_t->tm_hour, tm_t->tm_min, tm_t->tm_sec);
  8575  0D2B  30B2               	movlw	low main@timeStr
  8576  0D2C  0020               	movlb	0	; select bank0
  8577  0D2D  00B4               	movwf	sprintf@sp
  8578  0D2E  3000               	movlw	high main@timeStr
  8579  0D2F  00B5               	movwf	sprintf@sp+1
  8580  0D30  3020               	movlw	low (STR_1| (0+32768))
  8581  0D31  00B6               	movwf	sprintf@f
  8582  0D32  3098               	movlw	high (STR_1| (0+32768))
  8583  0D33  00B7               	movwf	sprintf@f+1
  8584  0D34  0021               	movlb	1	; select bank1
  8585  0D35  0842               	movf	main@tm_t^(0+128),w
  8586  0D36  3E0A               	addlw	10
  8587  0D37  0086               	movwf	6
  8588  0D38  3001               	movlw	1	; select bank2/3
  8589  0D39  0087               	movwf	7
  8590  0D3A  3F40               	moviw [0]fsr1
  8591  0D3B  0020               	movlb	0	; select bank0
  8592  0D3C  00E6               	movwf	??_main
  8593  0D3D  3F41               	moviw [1]fsr1
  8594  0D3E  00E7               	movwf	??_main+1
  8595  0D3F  0866               	movf	??_main,w
  8596  0D40  3E6C               	addlw	108
  8597  0D41  00B8               	movwf	?_sprintf+4
  8598  0D42  3007               	movlw	7
  8599  0D43  3D67               	addwfc	??_main+1,w
  8600  0D44  00B9               	movwf	?_sprintf+5
  8601  0D45  0021               	movlb	1	; select bank1
  8602  0D46  0842               	movf	main@tm_t^(0+128),w
  8603  0D47  3E08               	addlw	8
  8604  0D48  0086               	movwf	6
  8605  0D49  3001               	movlw	1	; select bank2/3
  8606  0D4A  0087               	movwf	7
  8607  0D4B  3F40               	moviw [0]fsr1
  8608  0D4C  0020               	movlb	0	; select bank0
  8609  0D4D  00E8               	movwf	??_main+2
  8610  0D4E  3F41               	moviw [1]fsr1
  8611  0D4F  00E9               	movwf	??_main+3
  8612  0D50  0868               	movf	??_main+2,w
  8613  0D51  3E01               	addlw	1
  8614  0D52  00BA               	movwf	?_sprintf+6
  8615  0D53  3000               	movlw	0
  8616  0D54  3D69               	addwfc	??_main+3,w
  8617  0D55  00BB               	movwf	?_sprintf+7
  8618  0D56  0021               	movlb	1	; select bank1
  8619  0D57  0842               	movf	main@tm_t^(0+128),w
  8620  0D58  3E06               	addlw	6
  8621  0D59  0086               	movwf	6
  8622  0D5A  3001               	movlw	1	; select bank2/3
  8623  0D5B  0087               	movwf	7
  8624  0D5C  3F40               	moviw [0]fsr1
  8625  0D5D  0020               	movlb	0	; select bank0
  8626  0D5E  00BC               	movwf	?_sprintf+8
  8627  0D5F  3F41               	moviw [1]fsr1
  8628  0D60  00BD               	movwf	?_sprintf+9
  8629  0D61  0021               	movlb	1	; select bank1
  8630  0D62  0842               	movf	main@tm_t^(0+128),w
  8631  0D63  3E04               	addlw	4
  8632  0D64  0086               	movwf	6
  8633  0D65  3001               	movlw	1	; select bank2/3
  8634  0D66  0087               	movwf	7
  8635  0D67  3F40               	moviw [0]fsr1
  8636  0D68  0020               	movlb	0	; select bank0
  8637  0D69  00BE               	movwf	?_sprintf+10
  8638  0D6A  3F41               	moviw [1]fsr1
  8639  0D6B  00BF               	movwf	?_sprintf+11
  8640  0D6C  0021               	movlb	1	; select bank1
  8641  0D6D  0842               	movf	main@tm_t^(0+128),w
  8642  0D6E  3E02               	addlw	2
  8643  0D6F  0086               	movwf	6
  8644  0D70  3001               	movlw	1	; select bank2/3
  8645  0D71  0087               	movwf	7
  8646  0D72  3F40               	moviw [0]fsr1
  8647  0D73  0020               	movlb	0	; select bank0
  8648  0D74  00C0               	movwf	?_sprintf+12
  8649  0D75  3F41               	moviw [1]fsr1
  8650  0D76  00C1               	movwf	?_sprintf+13
  8651  0D77  0021               	movlb	1	; select bank1
  8652  0D78  0842               	movf	main@tm_t^(0+128),w
  8653  0D79  0086               	movwf	6
  8654  0D7A  3001               	movlw	1	; select bank2/3
  8655  0D7B  0087               	movwf	7
  8656  0D7C  3F40               	moviw [0]fsr1
  8657  0D7D  0020               	movlb	0	; select bank0
  8658  0D7E  00C2               	movwf	?_sprintf+14
  8659  0D7F  3F41               	moviw [1]fsr1
  8660  0D80  00C3               	movwf	?_sprintf+15
  8661  0D81  3186  2624  318C   	fcall	_sprintf
  8662                           
  8663                           ;main.c: 53: Write_String(timeStr);
  8664  0D84  30B2               	movlw	low main@timeStr
  8665  0D85  0020               	movlb	0	; select bank0
  8666  0D86  00D3               	movwf	Write_String@message
  8667  0D87  3000               	movlw	high main@timeStr
  8668  0D88  00D4               	movwf	Write_String@message+1
  8669  0D89  3193  23C6  318C   	fcall	_Write_String
  8670  0D8C  2D0F               	goto	l7239
  8671  0D8D                     __end_of_main:	
  8672                           
  8673                           	psect	text1
  8674  0B16                     __ptext1:	
  8675 ;; *************** function _rtc6_SetTime *****************
  8676 ;; Defined at:
  8677 ;;		line 145 in file "mcc_generated_files/RTC6.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;  t               4   44[BANK0 ] long 
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;  tm_t            1   51[BANK0 ] PTR struct tm
  8682 ;;		 -> gmtime@tim(18), 
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  1    wreg      void 
  8685 ;; Registers used:
  8686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 0/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8692 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8694 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8695 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8696 ;;Total ram usage:        8 bytes
  8697 ;; Hardware stack levels used:    1
  8698 ;; Hardware stack levels required when called:   17
  8699 ;; This function calls:
  8700 ;;		___awmod
  8701 ;;		_localtime
  8702 ;;		_memset
  8703 ;;		_rtc6_SetComponent
  8704 ;; This function is called by:
  8705 ;;		_main
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           
  8710                           ;psect for function _rtc6_SetTime
  8711  0B16                     _rtc6_SetTime:	
  8712                           
  8713                           ;RTC6.c: 147: struct tm *tm_t;
  8714                           ;RTC6.c: 148: memset(tm_t, 0, sizeof (tm_t));
  8715                           
  8716                           ;incstack = 0
  8717 ;; hardware stack exceeded
  8718                           ; Regs used in _rtc6_SetTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8719  0B16  0020               	movlb	0	; select bank0
  8720  0B17  0853               	movf	rtc6_SetTime@tm_t,w
  8721  0B18  00A0               	movwf	memset@p1
  8722  0B19  3001               	movlw	1
  8723  0B1A  00A1               	movwf	memset@p1+1
  8724  0B1B  3000               	movlw	0
  8725  0B1C  00A2               	movwf	memset@c
  8726  0B1D  00A3               	movwf	memset@c+1
  8727  0B1E  3001               	movlw	1
  8728  0B1F  00A4               	movwf	memset@n
  8729  0B20  3000               	movlw	0
  8730  0B21  00A5               	movwf	memset@n+1
  8731  0B22  3191  216A  318B   	fcall	_memset
  8732                           
  8733                           ;RTC6.c: 150: tm_t = localtime(&t);
  8734  0B25  304C               	movlw	(low (rtc6_SetTime@t| 0))& (0+255)
  8735  0B26  3195  25A7  318B   	fcall	_localtime
  8736  0B29  0020               	movlb	0	; select bank0
  8737  0B2A  00D0               	movwf	??_rtc6_SetTime
  8738  0B2B  0850               	movf	??_rtc6_SetTime,w
  8739  0B2C  00D3               	movwf	rtc6_SetTime@tm_t
  8740                           
  8741                           ;RTC6.c: 151: rtc6_SetComponent(0x06, 0x00, tm_t->tm_year % 100);
  8742  0B2D  3064               	movlw	100
  8743  0B2E  00A0               	movwf	___awmod@divisor
  8744  0B2F  3000               	movlw	0
  8745  0B30  00A1               	movwf	___awmod@divisor+1
  8746  0B31  0853               	movf	rtc6_SetTime@tm_t,w
  8747  0B32  3E0A               	addlw	10
  8748  0B33  0086               	movwf	6
  8749  0B34  3001               	movlw	1	; select bank2/3
  8750  0B35  0087               	movwf	7
  8751  0B36  3F40               	moviw [0]fsr1
  8752  0B37  00A2               	movwf	___awmod@dividend
  8753  0B38  3F41               	moviw [1]fsr1
  8754  0B39  00A3               	movwf	___awmod@dividend+1
  8755  0B3A  3196  2632  318B   	fcall	___awmod
  8756  0B3D  0020               	movlb	0	; select bank0
  8757  0B3E  0820               	movf	?___awmod,w
  8758  0B3F  00D0               	movwf	??_rtc6_SetTime
  8759  0B40  0850               	movf	??_rtc6_SetTime,w
  8760  0B41  00D2               	movwf	_rtc6_SetTime$2616
  8761                           
  8762                           ;RTC6.c: 151: rtc6_SetComponent(0x06, 0x00, tm_t->tm_year % 100);
  8763  0B42  01B3               	clrf	rtc6_SetComponent@mask
  8764  0B43  0852               	movf	_rtc6_SetTime$2616,w
  8765  0B44  00D0               	movwf	??_rtc6_SetTime
  8766  0B45  0850               	movf	??_rtc6_SetTime,w
  8767  0B46  00B4               	movwf	rtc6_SetComponent@time
  8768  0B47  3006               	movlw	6
  8769  0B48  3195  2530  318B   	fcall	_rtc6_SetComponent
  8770                           
  8771                           ;RTC6.c: 152: rtc6_SetComponent(0x05, 0xD0, tm_t->tm_mon + 1);
  8772  0B4B  30D0               	movlw	208
  8773  0B4C  0020               	movlb	0	; select bank0
  8774  0B4D  00D0               	movwf	??_rtc6_SetTime
  8775  0B4E  0850               	movf	??_rtc6_SetTime,w
  8776  0B4F  00B3               	movwf	rtc6_SetComponent@mask
  8777  0B50  0853               	movf	rtc6_SetTime@tm_t,w
  8778  0B51  3E08               	addlw	8
  8779  0B52  0086               	movwf	6
  8780  0B53  3001               	movlw	1	; select bank2/3
  8781  0B54  0087               	movwf	7
  8782  0B55  0801               	movf	1,w
  8783  0B56  3E01               	addlw	1
  8784  0B57  00D1               	movwf	??_rtc6_SetTime+1
  8785  0B58  0851               	movf	??_rtc6_SetTime+1,w
  8786  0B59  00B4               	movwf	rtc6_SetComponent@time
  8787  0B5A  3005               	movlw	5
  8788  0B5B  3195  2530  318B   	fcall	_rtc6_SetComponent
  8789                           
  8790                           ;RTC6.c: 153: rtc6_SetComponent(0x04, 0x00, tm_t->tm_mday);
  8791  0B5E  0020               	movlb	0	; select bank0
  8792  0B5F  01B3               	clrf	rtc6_SetComponent@mask
  8793  0B60  0853               	movf	rtc6_SetTime@tm_t,w
  8794  0B61  0086               	movwf	6
  8795  0B62  3001               	movlw	1	; select bank2/3
  8796  0B63  0087               	movwf	7
  8797  0B64  3001               	movlw	1	; select bank2/3
  8798  0B65  3F46               	moviw [6]fsr1
  8799  0B66  00B4               	movwf	rtc6_SetComponent@time
  8800  0B67  3004               	movlw	4
  8801  0B68  3195  2530  318B   	fcall	_rtc6_SetComponent
  8802                           
  8803                           ;RTC6.c: 154: rtc6_SetComponent(0x01, 0x00, tm_t->tm_min);
  8804  0B6B  0020               	movlb	0	; select bank0
  8805  0B6C  01B3               	clrf	rtc6_SetComponent@mask
  8806  0B6D  0853               	movf	rtc6_SetTime@tm_t,w
  8807  0B6E  0086               	movwf	6
  8808  0B6F  3001               	movlw	1	; select bank2/3
  8809  0B70  0087               	movwf	7
  8810  0B71  3001               	movlw	1	; select bank2/3
  8811  0B72  3F42               	moviw [2]fsr1
  8812  0B73  00B4               	movwf	rtc6_SetComponent@time
  8813  0B74  3001               	movlw	1
  8814  0B75  3195  2530  318B   	fcall	_rtc6_SetComponent
  8815                           
  8816                           ;RTC6.c: 155: rtc6_SetComponent(0x00, 0x80, tm_t->tm_sec);
  8817  0B78  3080               	movlw	128
  8818  0B79  0020               	movlb	0	; select bank0
  8819  0B7A  00D0               	movwf	??_rtc6_SetTime
  8820  0B7B  0850               	movf	??_rtc6_SetTime,w
  8821  0B7C  00B3               	movwf	rtc6_SetComponent@mask
  8822  0B7D  0853               	movf	rtc6_SetTime@tm_t,w
  8823  0B7E  0086               	movwf	6
  8824  0B7F  3001               	movlw	1	; select bank2/3
  8825  0B80  0087               	movwf	7
  8826  0B81  0801               	movf	1,w
  8827  0B82  00D1               	movwf	??_rtc6_SetTime+1
  8828  0B83  0851               	movf	??_rtc6_SetTime+1,w
  8829  0B84  00B4               	movwf	rtc6_SetComponent@time
  8830  0B85  3000               	movlw	0
  8831  0B86  3195  2530  318B   	fcall	_rtc6_SetComponent
  8832                           
  8833                           ;RTC6.c: 156: rtc6_SetComponent(0x02, 0x00, tm_t->tm_hour);
  8834  0B89  0020               	movlb	0	; select bank0
  8835  0B8A  01B3               	clrf	rtc6_SetComponent@mask
  8836  0B8B  0853               	movf	rtc6_SetTime@tm_t,w
  8837  0B8C  0086               	movwf	6
  8838  0B8D  3001               	movlw	1	; select bank2/3
  8839  0B8E  0087               	movwf	7
  8840  0B8F  3001               	movlw	1	; select bank2/3
  8841  0B90  3F44               	moviw [4]fsr1
  8842  0B91  00B4               	movwf	rtc6_SetComponent@time
  8843  0B92  3002               	movlw	2
  8844  0B93  3195  2530         	fcall	_rtc6_SetComponent
  8845  0B95  0008               	return
  8846  0B96                     __end_of_rtc6_SetTime:	
  8847                           
  8848                           	psect	text2
  8849  1530                     __ptext2:	
  8850 ;; *************** function _rtc6_SetComponent *****************
  8851 ;; Defined at:
  8852 ;;		line 140 in file "mcc_generated_files/RTC6.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;  location        1    wreg     unsigned char 
  8855 ;;  mask            1   19[BANK0 ] unsigned char 
  8856 ;;  time            1   20[BANK0 ] unsigned char 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;  location        1   28[BANK0 ] unsigned char 
  8859 ;;  inMemory        1   27[BANK0 ] unsigned char 
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  1    wreg      void 
  8862 ;; Registers used:
  8863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8869 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8870 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8872 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8873 ;;Total ram usage:       10 bytes
  8874 ;; Hardware stack levels used:    1
  8875 ;; Hardware stack levels required when called:   16
  8876 ;; This function calls:
  8877 ;;		___awdiv
  8878 ;;		___awmod
  8879 ;;		_rtcc_read
  8880 ;;		_rtcc_write
  8881 ;; This function is called by:
  8882 ;;		_rtc6_SetTime
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           
  8887                           ;psect for function _rtc6_SetComponent
  8888  1530                     _rtc6_SetComponent:	
  8889                           
  8890                           ;incstack = 0
  8891 ;; hardware stack exceeded
  8892                           ; Regs used in _rtc6_SetComponent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8893                           ;rtc6_SetComponent@location stored from wreg
  8894  1530  0020               	movlb	0	; select bank0
  8895  1531  00BC               	movwf	rtc6_SetComponent@location
  8896                           
  8897                           ;RTC6.c: 141: uint8_t inMemory = rtcc_read(location) & mask;
  8898  1532  083C               	movf	rtc6_SetComponent@location,w
  8899  1533  319F  27A7  3195   	fcall	_rtcc_read
  8900  1536  0020               	movlb	0	; select bank0
  8901  1537  0533               	andwf	rtc6_SetComponent@mask,w
  8902  1538  00B5               	movwf	??_rtc6_SetComponent
  8903  1539  0835               	movf	??_rtc6_SetComponent,w
  8904  153A  00BB               	movwf	rtc6_SetComponent@inMemory
  8905                           
  8906                           ;RTC6.c: 142: rtcc_write(location, inMemory | (time % 10) | ((time / 10) << 4));
  8907  153B  300A               	movlw	10
  8908  153C  00A0               	movwf	___awdiv@divisor
  8909  153D  3000               	movlw	0
  8910  153E  00A1               	movwf	___awdiv@divisor+1
  8911  153F  0834               	movf	rtc6_SetComponent@time,w
  8912  1540  00B5               	movwf	??_rtc6_SetComponent
  8913  1541  01B6               	clrf	??_rtc6_SetComponent+1
  8914  1542  0835               	movf	??_rtc6_SetComponent,w
  8915  1543  00A2               	movwf	___awdiv@dividend
  8916  1544  0836               	movf	??_rtc6_SetComponent+1,w
  8917  1545  00A3               	movwf	___awdiv@dividend+1
  8918  1546  3197  27AE  3195   	fcall	___awdiv
  8919  1549  0020               	movlb	0	; select bank0
  8920  154A  0820               	movf	?___awdiv,w
  8921  154B  00B7               	movwf	??_rtc6_SetComponent+2
  8922  154C  3004               	movlw	4
  8923  154D                     u5215:	
  8924  154D  35B7               	lslf	??_rtc6_SetComponent+2,f
  8925  154E  0B89               	decfsz	9,f
  8926  154F  2D4D               	goto	u5215
  8927  1550  300A               	movlw	10
  8928  1551  00A0               	movwf	___awmod@divisor
  8929  1552  3000               	movlw	0
  8930  1553  00A1               	movwf	___awmod@divisor+1
  8931  1554  0834               	movf	rtc6_SetComponent@time,w
  8932  1555  00B8               	movwf	??_rtc6_SetComponent+3
  8933  1556  01B9               	clrf	??_rtc6_SetComponent+4
  8934  1557  0838               	movf	??_rtc6_SetComponent+3,w
  8935  1558  00A2               	movwf	___awmod@dividend
  8936  1559  0839               	movf	??_rtc6_SetComponent+4,w
  8937  155A  00A3               	movwf	___awmod@dividend+1
  8938  155B  3196  2632  3195   	fcall	___awmod
  8939  155E  0020               	movlb	0	; select bank0
  8940  155F  0820               	movf	?___awmod,w
  8941  1560  0437               	iorwf	??_rtc6_SetComponent+2,w
  8942  1561  043B               	iorwf	rtc6_SetComponent@inMemory,w
  8943  1562  00BA               	movwf	??_rtc6_SetComponent+5
  8944  1563  083A               	movf	??_rtc6_SetComponent+5,w
  8945  1564  00AE               	movwf	rtcc_write@data
  8946  1565  083C               	movf	rtc6_SetComponent@location,w
  8947  1566  3190  20BC         	fcall	_rtcc_write
  8948  1568  0008               	return
  8949  1569                     __end_of_rtc6_SetComponent:	
  8950                           
  8951                           	psect	text3
  8952  17AE                     __ptext3:	
  8953 ;; *************** function ___awdiv *****************
  8954 ;; Defined at:
  8955 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;  divisor         2    0[BANK0 ] int 
  8958 ;;  dividend        2    2[BANK0 ] int 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;  quotient        2    7[BANK0 ] int 
  8961 ;;  sign            1    6[BANK0 ] unsigned char 
  8962 ;;  counter         1    5[BANK0 ] unsigned char 
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  2    0[BANK0 ] int 
  8965 ;; Registers used:
  8966 ;;		wreg, status,2, status,0
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8976 ;;Total ram usage:        9 bytes
  8977 ;; Hardware stack levels used:    1
  8978 ;; Hardware stack levels required when called:    6
  8979 ;; This function calls:
  8980 ;;		Nothing
  8981 ;; This function is called by:
  8982 ;;		_rtc6_SetComponent
  8983 ;;		_asctime
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           
  8988                           ;psect for function ___awdiv
  8989  17AE                     ___awdiv:	
  8990                           
  8991                           ;incstack = 0
  8992                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8993  17AE  0020               	movlb	0	; select bank0
  8994  17AF  01A6               	clrf	___awdiv@sign
  8995  17B0  1FA1               	btfss	___awdiv@divisor+1,7
  8996  17B1  2FB9               	goto	l4067
  8997  17B2  09A0               	comf	___awdiv@divisor,f
  8998  17B3  09A1               	comf	___awdiv@divisor+1,f
  8999  17B4  0AA0               	incf	___awdiv@divisor,f
  9000  17B5  1903               	skipnz
  9001  17B6  0AA1               	incf	___awdiv@divisor+1,f
  9002  17B7  01A6               	clrf	___awdiv@sign
  9003  17B8  0AA6               	incf	___awdiv@sign,f
  9004  17B9                     l4067:	
  9005  17B9  1FA3               	btfss	___awdiv@dividend+1,7
  9006  17BA  2FC4               	goto	l4073
  9007  17BB  09A2               	comf	___awdiv@dividend,f
  9008  17BC  09A3               	comf	___awdiv@dividend+1,f
  9009  17BD  0AA2               	incf	___awdiv@dividend,f
  9010  17BE  1903               	skipnz
  9011  17BF  0AA3               	incf	___awdiv@dividend+1,f
  9012  17C0  3001               	movlw	1
  9013  17C1  00A4               	movwf	??___awdiv
  9014  17C2  0824               	movf	??___awdiv,w
  9015  17C3  06A6               	xorwf	___awdiv@sign,f
  9016  17C4                     l4073:	
  9017  17C4  01A7               	clrf	___awdiv@quotient
  9018  17C5  01A8               	clrf	___awdiv@quotient+1
  9019  17C6  0820               	movf	___awdiv@divisor,w
  9020  17C7  0421               	iorwf	___awdiv@divisor+1,w
  9021  17C8  1903               	btfsc	3,2
  9022  17C9  2FF3               	goto	l4095
  9023  17CA  01A5               	clrf	___awdiv@counter
  9024  17CB  0AA5               	incf	___awdiv@counter,f
  9025  17CC                     l4083:	
  9026  17CC  1BA1               	btfsc	___awdiv@divisor+1,7
  9027  17CD  2FD8               	goto	l4085
  9028  17CE  3001               	movlw	1
  9029  17CF                     u2685:	
  9030  17CF  35A0               	lslf	___awdiv@divisor,f
  9031  17D0  0DA1               	rlf	___awdiv@divisor+1,f
  9032  17D1  0B89               	decfsz	9,f
  9033  17D2  2FCF               	goto	u2685
  9034  17D3  3001               	movlw	1
  9035  17D4  00A4               	movwf	??___awdiv
  9036  17D5  0824               	movf	??___awdiv,w
  9037  17D6  07A5               	addwf	___awdiv@counter,f
  9038  17D7  2FCC               	goto	l4083
  9039  17D8                     l4085:	
  9040  17D8  3001               	movlw	1
  9041  17D9                     u2705:	
  9042  17D9  35A7               	lslf	___awdiv@quotient,f
  9043  17DA  0DA8               	rlf	___awdiv@quotient+1,f
  9044  17DB  0B89               	decfsz	9,f
  9045  17DC  2FD9               	goto	u2705
  9046  17DD  0821               	movf	___awdiv@divisor+1,w
  9047  17DE  0223               	subwf	___awdiv@dividend+1,w
  9048  17DF  1D03               	skipz
  9049  17E0  2FE3               	goto	u2715
  9050  17E1  0820               	movf	___awdiv@divisor,w
  9051  17E2  0222               	subwf	___awdiv@dividend,w
  9052  17E3                     u2715:	
  9053  17E3  1C03               	skipc
  9054  17E4  2FEA               	goto	l4091
  9055  17E5  0820               	movf	___awdiv@divisor,w
  9056  17E6  02A2               	subwf	___awdiv@dividend,f
  9057  17E7  0821               	movf	___awdiv@divisor+1,w
  9058  17E8  3BA3               	subwfb	___awdiv@dividend+1,f
  9059  17E9  1427               	bsf	___awdiv@quotient,0
  9060  17EA                     l4091:	
  9061  17EA  3001               	movlw	1
  9062  17EB                     u2725:	
  9063  17EB  36A1               	lsrf	___awdiv@divisor+1,f
  9064  17EC  0CA0               	rrf	___awdiv@divisor,f
  9065  17ED  0B89               	decfsz	9,f
  9066  17EE  2FEB               	goto	u2725
  9067  17EF  3001               	movlw	1
  9068  17F0  02A5               	subwf	___awdiv@counter,f
  9069  17F1  1D03               	btfss	3,2
  9070  17F2  2FD8               	goto	l4085
  9071  17F3                     l4095:	
  9072  17F3  0826               	movf	___awdiv@sign,w
  9073  17F4  1903               	btfsc	3,2
  9074  17F5  2FFB               	goto	l4099
  9075  17F6  09A7               	comf	___awdiv@quotient,f
  9076  17F7  09A8               	comf	___awdiv@quotient+1,f
  9077  17F8  0AA7               	incf	___awdiv@quotient,f
  9078  17F9  1903               	skipnz
  9079  17FA  0AA8               	incf	___awdiv@quotient+1,f
  9080  17FB                     l4099:	
  9081  17FB  0828               	movf	___awdiv@quotient+1,w
  9082  17FC  00A1               	movwf	?___awdiv+1
  9083  17FD  0827               	movf	___awdiv@quotient,w
  9084  17FE  00A0               	movwf	?___awdiv
  9085  17FF  0008               	return
  9086  1800                     __end_of___awdiv:	
  9087                           
  9088                           	psect	text4
  9089  15A7                     __ptext4:	
  9090 ;; *************** function _localtime *****************
  9091 ;; Defined at:
  9092 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;  tp              1    wreg     PTR const long 
  9095 ;;		 -> main@getTime(4), rtc6_SetTime@t(4), 
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;  tp              1   43[BANK0 ] PTR const long 
  9098 ;;		 -> main@getTime(4), rtc6_SetTime@t(4), 
  9099 ;;  t               4   39[BANK0 ] long 
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1    wreg      PTR struct tm
  9102 ;; Registers used:
  9103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9110 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9111 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;Total ram usage:       13 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; Hardware stack levels required when called:    9
  9116 ;; This function calls:
  9117 ;;		___lmul
  9118 ;;		_gmtime
  9119 ;; This function is called by:
  9120 ;;		_rtc6_SetTime
  9121 ;;		_main
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           
  9126                           ;psect for function _localtime
  9127  15A7                     _localtime:	
  9128                           
  9129                           ;incstack = 0
  9130                           ; Regs used in _localtime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9131                           ;localtime@tp stored from wreg
  9132  15A7  0020               	movlb	0	; select bank0
  9133  15A8  00CB               	movwf	localtime@tp
  9134  15A9  084B               	movf	localtime@tp,w
  9135  15AA  0086               	movwf	6
  9136  15AB  0187               	clrf	7
  9137  15AC  3F40               	moviw [0]fsr1
  9138  15AD  00BF               	movwf	??_localtime
  9139  15AE  3F41               	moviw [1]fsr1
  9140  15AF  00C0               	movwf	??_localtime+1
  9141  15B0  3F42               	moviw [2]fsr1
  9142  15B1  00C1               	movwf	??_localtime+2
  9143  15B2  3F43               	moviw [3]fsr1
  9144  15B3  00C2               	movwf	??_localtime+3
  9145  15B4  086E               	movf	_time_zone,w
  9146  15B5  00A0               	movwf	___lmul@multiplier
  9147  15B6  086F               	movf	_time_zone+1,w
  9148  15B7  00A1               	movwf	___lmul@multiplier+1
  9149  15B8  0D89               	rlf	9,f
  9150  15B9  3B89               	subwfb	9,f
  9151  15BA  0989               	comf	9,f
  9152  15BB  00A2               	movwf	___lmul@multiplier+2
  9153  15BC  00A3               	movwf	___lmul@multiplier+3
  9154  15BD  3000               	movlw	0
  9155  15BE  00A7               	movwf	___lmul@multiplicand+3
  9156  15BF  3000               	movlw	0
  9157  15C0  00A6               	movwf	___lmul@multiplicand+2
  9158  15C1  3000               	movlw	0
  9159  15C2  00A5               	movwf	___lmul@multiplicand+1
  9160  15C3  303C               	movlw	60
  9161  15C4  00A4               	movwf	___lmul@multiplicand
  9162  15C5  3193  23F5  3195   	fcall	___lmul
  9163  15C8  0020               	movlb	0	; select bank0
  9164  15C9  0920               	comf	?___lmul,w
  9165  15CA  00C3               	movwf	??_localtime+4
  9166  15CB  0921               	comf	?___lmul+1,w
  9167  15CC  00C4               	movwf	??_localtime+5
  9168  15CD  0922               	comf	?___lmul+2,w
  9169  15CE  00C5               	movwf	??_localtime+6
  9170  15CF  0923               	comf	?___lmul+3,w
  9171  15D0  00C6               	movwf	??_localtime+7
  9172  15D1  0AC3               	incf	??_localtime+4,f
  9173  15D2  1903               	skipnz
  9174  15D3  0AC4               	incf	??_localtime+5,f
  9175  15D4  1903               	skipnz
  9176  15D5  0AC5               	incf	??_localtime+6,f
  9177  15D6  1903               	skipnz
  9178  15D7  0AC6               	incf	??_localtime+7,f
  9179  15D8  0843               	movf	??_localtime+4,w
  9180  15D9  07BF               	addwf	??_localtime,f
  9181  15DA  0844               	movf	??_localtime+5,w
  9182  15DB  3DC0               	addwfc	??_localtime+1,f
  9183  15DC  0845               	movf	??_localtime+6,w
  9184  15DD  3DC1               	addwfc	??_localtime+2,f
  9185  15DE  0846               	movf	??_localtime+7,w
  9186  15DF  3DC2               	addwfc	??_localtime+3,f
  9187  15E0  0842               	movf	??_localtime+3,w
  9188  15E1  00CA               	movwf	localtime@t+3
  9189  15E2  0841               	movf	??_localtime+2,w
  9190  15E3  00C9               	movwf	localtime@t+2
  9191  15E4  0840               	movf	??_localtime+1,w
  9192  15E5  00C8               	movwf	localtime@t+1
  9193  15E6  083F               	movf	??_localtime,w
  9194  15E7  00C7               	movwf	localtime@t
  9195  15E8  3047               	movlw	(low (localtime@t| 0))& (0+255)
  9196  15E9  318E  26AE         	fcall	_gmtime
  9197  15EB  0008               	return
  9198  15EC                     __end_of_localtime:	
  9199                           
  9200                           	psect	text5
  9201  0EAE                     __ptext5:	
  9202 ;; *************** function _gmtime *****************
  9203 ;; Defined at:
  9204 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;  tp              1    wreg     PTR const long 
  9207 ;;		 -> localtime@t(4), 
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;  tp              1   26[BANK0 ] PTR const long 
  9210 ;;		 -> localtime@t(4), 
  9211 ;;  tc              4   27[BANK0 ] struct .
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  1    wreg      PTR struct tm
  9214 ;; Registers used:
  9215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9224 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;Total ram usage:        7 bytes
  9226 ;; Hardware stack levels used:    1
  9227 ;; Hardware stack levels required when called:    8
  9228 ;; This function calls:
  9229 ;;		___aldiv
  9230 ;;		___almod
  9231 ;;		___awmod
  9232 ;;		_dylen
  9233 ;; This function is called by:
  9234 ;;		_localtime
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           
  9239                           ;psect for function _gmtime
  9240  0EAE                     _gmtime:	
  9241                           
  9242                           ;incstack = 0
  9243                           ; Regs used in _gmtime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9244                           ;gmtime@tp stored from wreg
  9245  0EAE  0020               	movlb	0	; select bank0
  9246  0EAF  00BA               	movwf	gmtime@tp
  9247  0EB0  083A               	movf	gmtime@tp,w
  9248  0EB1  0086               	movwf	6
  9249  0EB2  0187               	clrf	7
  9250  0EB3  3F40               	moviw [0]fsr1
  9251  0EB4  00BB               	movwf	gmtime@tc
  9252  0EB5  3F41               	moviw [1]fsr1
  9253  0EB6  00BC               	movwf	gmtime@tc+1
  9254  0EB7  3F42               	moviw [2]fsr1
  9255  0EB8  00BD               	movwf	gmtime@tc+2
  9256  0EB9  3F43               	moviw [3]fsr1
  9257  0EBA  00BE               	movwf	gmtime@tc+3
  9258  0EBB  3000               	movlw	0
  9259  0EBC  00A3               	movwf	___almod@divisor+3
  9260  0EBD  3000               	movlw	0
  9261  0EBE  00A2               	movwf	___almod@divisor+2
  9262  0EBF  3000               	movlw	0
  9263  0EC0  00A1               	movwf	___almod@divisor+1
  9264  0EC1  303C               	movlw	60
  9265  0EC2  00A0               	movwf	___almod@divisor
  9266  0EC3  083E               	movf	gmtime@tc+3,w
  9267  0EC4  00A7               	movwf	___almod@dividend+3
  9268  0EC5  083D               	movf	gmtime@tc+2,w
  9269  0EC6  00A6               	movwf	___almod@dividend+2
  9270  0EC7  083C               	movf	gmtime@tc+1,w
  9271  0EC8  00A5               	movwf	___almod@dividend+1
  9272  0EC9  083B               	movf	gmtime@tc,w
  9273  0ECA  00A4               	movwf	___almod@dividend
  9274  0ECB  3189  214D  318E   	fcall	___almod
  9275  0ECE  0020               	movlb	0	; select bank0
  9276  0ECF  0821               	movf	?___almod+1,w
  9277  0ED0  0022               	movlb	2	; select bank2
  9278  0ED1  00CA               	movwf	(gmtime@tim+1)^(0+256)
  9279  0ED2  0020               	movlb	0	; select bank0
  9280  0ED3  0820               	movf	?___almod,w
  9281  0ED4  0022               	movlb	2	; select bank2
  9282  0ED5  00C9               	movwf	gmtime@tim^(0+256)
  9283  0ED6  3000               	movlw	0
  9284  0ED7  0020               	movlb	0	; select bank0
  9285  0ED8  00A3               	movwf	___aldiv@divisor+3
  9286  0ED9  3000               	movlw	0
  9287  0EDA  00A2               	movwf	___aldiv@divisor+2
  9288  0EDB  3000               	movlw	0
  9289  0EDC  00A1               	movwf	___aldiv@divisor+1
  9290  0EDD  303C               	movlw	60
  9291  0EDE  00A0               	movwf	___aldiv@divisor
  9292  0EDF  083E               	movf	gmtime@tc+3,w
  9293  0EE0  00A7               	movwf	___aldiv@dividend+3
  9294  0EE1  083D               	movf	gmtime@tc+2,w
  9295  0EE2  00A6               	movwf	___aldiv@dividend+2
  9296  0EE3  083C               	movf	gmtime@tc+1,w
  9297  0EE4  00A5               	movwf	___aldiv@dividend+1
  9298  0EE5  083B               	movf	gmtime@tc,w
  9299  0EE6  00A4               	movwf	___aldiv@dividend
  9300  0EE7  318B  2396  318E   	fcall	___aldiv
  9301  0EEA  0020               	movlb	0	; select bank0
  9302  0EEB  0823               	movf	?___aldiv+3,w
  9303  0EEC  00BE               	movwf	gmtime@tc+3
  9304  0EED  0822               	movf	?___aldiv+2,w
  9305  0EEE  00BD               	movwf	gmtime@tc+2
  9306  0EEF  0821               	movf	?___aldiv+1,w
  9307  0EF0  00BC               	movwf	gmtime@tc+1
  9308  0EF1  0820               	movf	?___aldiv,w
  9309  0EF2  00BB               	movwf	gmtime@tc
  9310  0EF3  3000               	movlw	0
  9311  0EF4  00A3               	movwf	___almod@divisor+3
  9312  0EF5  3000               	movlw	0
  9313  0EF6  00A2               	movwf	___almod@divisor+2
  9314  0EF7  3000               	movlw	0
  9315  0EF8  00A1               	movwf	___almod@divisor+1
  9316  0EF9  303C               	movlw	60
  9317  0EFA  00A0               	movwf	___almod@divisor
  9318  0EFB  083E               	movf	gmtime@tc+3,w
  9319  0EFC  00A7               	movwf	___almod@dividend+3
  9320  0EFD  083D               	movf	gmtime@tc+2,w
  9321  0EFE  00A6               	movwf	___almod@dividend+2
  9322  0EFF  083C               	movf	gmtime@tc+1,w
  9323  0F00  00A5               	movwf	___almod@dividend+1
  9324  0F01  083B               	movf	gmtime@tc,w
  9325  0F02  00A4               	movwf	___almod@dividend
  9326  0F03  3189  214D  318E   	fcall	___almod
  9327  0F06  0020               	movlb	0	; select bank0
  9328  0F07  0821               	movf	?___almod+1,w
  9329  0F08  0022               	movlb	2	; select bank2
  9330  0F09  00CC               	movwf	((gmtime@tim+1)^(0+256)+2)
  9331  0F0A  0020               	movlb	0	; select bank0
  9332  0F0B  0820               	movf	?___almod,w
  9333  0F0C  0022               	movlb	2	; select bank2
  9334  0F0D  00CB               	movwf	(gmtime@tim^(0+256)+2)
  9335  0F0E  3000               	movlw	0
  9336  0F0F  0020               	movlb	0	; select bank0
  9337  0F10  00A3               	movwf	___aldiv@divisor+3
  9338  0F11  3000               	movlw	0
  9339  0F12  00A2               	movwf	___aldiv@divisor+2
  9340  0F13  3000               	movlw	0
  9341  0F14  00A1               	movwf	___aldiv@divisor+1
  9342  0F15  303C               	movlw	60
  9343  0F16  00A0               	movwf	___aldiv@divisor
  9344  0F17  083E               	movf	gmtime@tc+3,w
  9345  0F18  00A7               	movwf	___aldiv@dividend+3
  9346  0F19  083D               	movf	gmtime@tc+2,w
  9347  0F1A  00A6               	movwf	___aldiv@dividend+2
  9348  0F1B  083C               	movf	gmtime@tc+1,w
  9349  0F1C  00A5               	movwf	___aldiv@dividend+1
  9350  0F1D  083B               	movf	gmtime@tc,w
  9351  0F1E  00A4               	movwf	___aldiv@dividend
  9352  0F1F  318B  2396  318E   	fcall	___aldiv
  9353  0F22  0020               	movlb	0	; select bank0
  9354  0F23  0823               	movf	?___aldiv+3,w
  9355  0F24  00BE               	movwf	gmtime@tc+3
  9356  0F25  0822               	movf	?___aldiv+2,w
  9357  0F26  00BD               	movwf	gmtime@tc+2
  9358  0F27  0821               	movf	?___aldiv+1,w
  9359  0F28  00BC               	movwf	gmtime@tc+1
  9360  0F29  0820               	movf	?___aldiv,w
  9361  0F2A  00BB               	movwf	gmtime@tc
  9362  0F2B  3000               	movlw	0
  9363  0F2C  00A3               	movwf	___almod@divisor+3
  9364  0F2D  3000               	movlw	0
  9365  0F2E  00A2               	movwf	___almod@divisor+2
  9366  0F2F  3000               	movlw	0
  9367  0F30  00A1               	movwf	___almod@divisor+1
  9368  0F31  3018               	movlw	24
  9369  0F32  00A0               	movwf	___almod@divisor
  9370  0F33  083E               	movf	gmtime@tc+3,w
  9371  0F34  00A7               	movwf	___almod@dividend+3
  9372  0F35  083D               	movf	gmtime@tc+2,w
  9373  0F36  00A6               	movwf	___almod@dividend+2
  9374  0F37  083C               	movf	gmtime@tc+1,w
  9375  0F38  00A5               	movwf	___almod@dividend+1
  9376  0F39  083B               	movf	gmtime@tc,w
  9377  0F3A  00A4               	movwf	___almod@dividend
  9378  0F3B  3189  214D  318E   	fcall	___almod
  9379  0F3E  0020               	movlb	0	; select bank0
  9380  0F3F  0821               	movf	?___almod+1,w
  9381  0F40  0022               	movlb	2	; select bank2
  9382  0F41  00CE               	movwf	((gmtime@tim+1)^(0+256)+4)
  9383  0F42  0020               	movlb	0	; select bank0
  9384  0F43  0820               	movf	?___almod,w
  9385  0F44  0022               	movlb	2	; select bank2
  9386  0F45  00CD               	movwf	(gmtime@tim^(0+256)+4)
  9387  0F46  3000               	movlw	0
  9388  0F47  0020               	movlb	0	; select bank0
  9389  0F48  00A3               	movwf	___aldiv@divisor+3
  9390  0F49  3000               	movlw	0
  9391  0F4A  00A2               	movwf	___aldiv@divisor+2
  9392  0F4B  3000               	movlw	0
  9393  0F4C  00A1               	movwf	___aldiv@divisor+1
  9394  0F4D  3018               	movlw	24
  9395  0F4E  00A0               	movwf	___aldiv@divisor
  9396  0F4F  083E               	movf	gmtime@tc+3,w
  9397  0F50  00A7               	movwf	___aldiv@dividend+3
  9398  0F51  083D               	movf	gmtime@tc+2,w
  9399  0F52  00A6               	movwf	___aldiv@dividend+2
  9400  0F53  083C               	movf	gmtime@tc+1,w
  9401  0F54  00A5               	movwf	___aldiv@dividend+1
  9402  0F55  083B               	movf	gmtime@tc,w
  9403  0F56  00A4               	movwf	___aldiv@dividend
  9404  0F57  318B  2396  318E   	fcall	___aldiv
  9405  0F5A  0020               	movlb	0	; select bank0
  9406  0F5B  0821               	movf	?___aldiv+1,w
  9407  0F5C  0022               	movlb	2	; select bank2
  9408  0F5D  00D0               	movwf	((gmtime@tim+1)^(0+256)+6)
  9409  0F5E  0020               	movlb	0	; select bank0
  9410  0F5F  0820               	movf	?___aldiv,w
  9411  0F60  0022               	movlb	2	; select bank2
  9412  0F61  00CF               	movwf	(gmtime@tim^(0+256)+6)
  9413  0F62  3007               	movlw	7
  9414  0F63  0020               	movlb	0	; select bank0
  9415  0F64  00A0               	movwf	___awmod@divisor
  9416  0F65  3000               	movlw	0
  9417  0F66  00A1               	movwf	___awmod@divisor+1
  9418  0F67  0022               	movlb	2	; select bank2
  9419  0F68  084F               	movf	(gmtime@tim^(0+256)+6),w
  9420  0F69  3E04               	addlw	4
  9421  0F6A  0020               	movlb	0	; select bank0
  9422  0F6B  00A2               	movwf	___awmod@dividend
  9423  0F6C  3000               	movlw	0
  9424  0F6D  0022               	movlb	2	; select bank2
  9425  0F6E  3D50               	addwfc	((gmtime@tim+1)^(0+256)+6),w
  9426  0F6F  0020               	movlb	0	; select bank0
  9427  0F70  00A3               	movwf	___awmod@dividend+1
  9428  0F71  3196  2632  318E   	fcall	___awmod
  9429  0F74  0020               	movlb	0	; select bank0
  9430  0F75  0821               	movf	?___awmod+1,w
  9431  0F76  0022               	movlb	2	; select bank2
  9432  0F77  00D6               	movwf	((gmtime@tim+1)^(0+256)+12)
  9433  0F78  0020               	movlb	0	; select bank0
  9434  0F79  0820               	movf	?___awmod,w
  9435  0F7A  0022               	movlb	2	; select bank2
  9436  0F7B  00D5               	movwf	(gmtime@tim^(0+256)+12)
  9437  0F7C  3046               	movlw	70
  9438  0F7D  00D3               	movwf	(gmtime@tim^(0+256)+10)
  9439  0F7E  3000               	movlw	0
  9440  0F7F  00D4               	movwf	(gmtime@tim^(0+256)+11)
  9441  0F80                     l4125:	
  9442  0F80  0854               	movf	((gmtime@tim+1)^(0+256)+10),w
  9443  0F81  0020               	movlb	0	; select bank0
  9444  0F82  00B5               	movwf	dylen@yr+1
  9445  0F83  0022               	movlb	2	; select bank2
  9446  0F84  0853               	movf	(gmtime@tim^(0+256)+10),w
  9447  0F85  0020               	movlb	0	; select bank0
  9448  0F86  00B4               	movwf	dylen@yr
  9449  0F87  3194  24C0  318E   	fcall	_dylen
  9450  0F8A  0022               	movlb	2	; select bank2
  9451  0F8B  0850               	movf	((gmtime@tim+1)^(0+256)+6),w
  9452  0F8C  3A80               	xorlw	128
  9453  0F8D  0020               	movlb	0	; select bank0
  9454  0F8E  00B8               	movwf	??_gmtime
  9455  0F8F  0835               	movf	?_dylen+1,w
  9456  0F90  3A80               	xorlw	128
  9457  0F91  0238               	subwf	??_gmtime,w
  9458  0F92  1D03               	skipz
  9459  0F93  2F97               	goto	u2755
  9460  0F94  0834               	movf	?_dylen,w
  9461  0F95  0022               	movlb	2	; select bank2
  9462  0F96  024F               	subwf	(gmtime@tim^(0+256)+6),w
  9463  0F97                     u2755:	
  9464  0F97  1C03               	btfss	3,0
  9465  0F98  2FB1               	goto	l4127
  9466  0F99  0022               	movlb	2	; select bank2
  9467  0F9A  0854               	movf	((gmtime@tim+1)^(0+256)+10),w
  9468  0F9B  0020               	movlb	0	; select bank0
  9469  0F9C  00B5               	movwf	dylen@yr+1
  9470  0F9D  0022               	movlb	2	; select bank2
  9471  0F9E  0853               	movf	(gmtime@tim^(0+256)+10),w
  9472  0F9F  0020               	movlb	0	; select bank0
  9473  0FA0  00B4               	movwf	dylen@yr
  9474  0FA1  3194  24C0  318E   	fcall	_dylen
  9475  0FA4  0020               	movlb	0	; select bank0
  9476  0FA5  0834               	movf	?_dylen,w
  9477  0FA6  0022               	movlb	2	; select bank2
  9478  0FA7  02CF               	subwf	(gmtime@tim^(0+256)+6),f
  9479  0FA8  0020               	movlb	0	; select bank0
  9480  0FA9  0835               	movf	?_dylen+1,w
  9481  0FAA  0022               	movlb	2	; select bank2
  9482  0FAB  3BD0               	subwfb	((gmtime@tim+1)^(0+256)+6),f
  9483  0FAC  3001               	movlw	1
  9484  0FAD  07D3               	addwf	(gmtime@tim^(0+256)+10),f
  9485  0FAE  3000               	movlw	0
  9486  0FAF  3DD4               	addwfc	((gmtime@tim+1)^(0+256)+10),f
  9487  0FB0  2F80               	goto	l4125
  9488  0FB1                     l4127:	
  9489  0FB1  0022               	movlb	2	; select bank2
  9490  0FB2  0854               	movf	((gmtime@tim+1)^(0+256)+10),w
  9491  0FB3  0020               	movlb	0	; select bank0
  9492  0FB4  00B5               	movwf	dylen@yr+1
  9493  0FB5  0022               	movlb	2	; select bank2
  9494  0FB6  0853               	movf	(gmtime@tim^(0+256)+10),w
  9495  0FB7  0020               	movlb	0	; select bank0
  9496  0FB8  00B4               	movwf	dylen@yr
  9497  0FB9  3194  24C0  318E   	fcall	_dylen
  9498  0FBC  0020               	movlb	0	; select bank0
  9499  0FBD  0834               	movf	?_dylen,w
  9500  0FBE  3902               	andlw	2
  9501  0FBF  00B8               	movwf	??_gmtime
  9502  0FC0  0838               	movf	??_gmtime,w
  9503  0FC1  00BB               	movwf	gmtime@tc
  9504  0FC2  0022               	movlb	2	; select bank2
  9505  0FC3  0850               	movf	((gmtime@tim+1)^(0+256)+6),w
  9506  0FC4  00D8               	movwf	((gmtime@tim+1)^(0+256)+14)
  9507  0FC5  084F               	movf	(gmtime@tim^(0+256)+6),w
  9508  0FC6  00D7               	movwf	(gmtime@tim^(0+256)+14)
  9509  0FC7  01D1               	clrf	(gmtime@tim^(0+256)+8)
  9510  0FC8  01D2               	clrf	((gmtime@tim+1)^(0+256)+8)
  9511  0FC9                     l4135:	
  9512  0FC9  0022               	movlb	2	; select bank2
  9513  0FCA  0852               	movf	((gmtime@tim+1)^(0+256)+8),w
  9514  0FCB  0085               	movwf	5
  9515  0FCC  0851               	movf	(gmtime@tim^(0+256)+8),w
  9516  0FCD  0084               	movwf	4
  9517  0FCE  3055               	movlw	low (_moninit| (0+32768))
  9518  0FCF  0784               	addwf	4,f
  9519  0FD0  3098               	movlw	high (_moninit| (0+32768))
  9520  0FD1  3D85               	addwfc	5,f
  9521  0FD2  0800               	movf	0,w	;code access
  9522  0FD3  0020               	movlb	0	; select bank0
  9523  0FD4  043B               	iorwf	gmtime@tc,w
  9524  0FD5  00B8               	movwf	??_gmtime
  9525  0FD6  0838               	movf	??_gmtime,w
  9526  0FD7  00BC               	movwf	gmtime@tc+1
  9527  0FD8  0022               	movlb	2	; select bank2
  9528  0FD9  0850               	movf	((gmtime@tim+1)^(0+256)+6),w
  9529  0FDA  3A80               	xorlw	128
  9530  0FDB  0020               	movlb	0	; select bank0
  9531  0FDC  00B9               	movwf	??_gmtime+1
  9532  0FDD  3080               	movlw	128
  9533  0FDE  0239               	subwf	??_gmtime+1,w
  9534  0FDF  1D03               	skipz
  9535  0FE0  2FE4               	goto	u2765
  9536  0FE1  083C               	movf	gmtime@tc+1,w
  9537  0FE2  0022               	movlb	2	; select bank2
  9538  0FE3  024F               	subwf	(gmtime@tim^(0+256)+6),w
  9539  0FE4                     u2765:	
  9540  0FE4  1C03               	btfss	3,0
  9541  0FE5  2FF9               	goto	l4137
  9542  0FE6  0020               	movlb	0	; select bank0
  9543  0FE7  083C               	movf	gmtime@tc+1,w
  9544  0FE8  00B8               	movwf	??_gmtime
  9545  0FE9  01B9               	clrf	??_gmtime+1
  9546  0FEA  0838               	movf	??_gmtime,w
  9547  0FEB  0022               	movlb	2	; select bank2
  9548  0FEC  02CF               	subwf	(gmtime@tim^(0+256)+6),f
  9549  0FED  0020               	movlb	0	; select bank0
  9550  0FEE  0839               	movf	??_gmtime+1,w
  9551  0FEF  0022               	movlb	2	; select bank2
  9552  0FF0  3BD0               	subwfb	((gmtime@tim+1)^(0+256)+6),f
  9553  0FF1  3001               	movlw	1
  9554  0FF2  07D1               	addwf	(gmtime@tim^(0+256)+8),f
  9555  0FF3  3000               	movlw	0
  9556  0FF4  3DD2               	addwfc	((gmtime@tim+1)^(0+256)+8),f
  9557  0FF5  1003               	clrc
  9558  0FF6  0020               	movlb	0	; select bank0
  9559  0FF7  0CBB               	rrf	gmtime@tc,f
  9560  0FF8  2FC9               	goto	l4135
  9561  0FF9                     l4137:	
  9562  0FF9  3001               	movlw	1
  9563  0FFA  0022               	movlb	2	; select bank2
  9564  0FFB  07CF               	addwf	(gmtime@tim^(0+256)+6),f
  9565  0FFC  3000               	movlw	0
  9566  0FFD  3DD0               	addwfc	((gmtime@tim+1)^(0+256)+6),f
  9567  0FFE  3049               	movlw	(low (gmtime@tim| (0+256)))& (0+255)
  9568  0FFF  0008               	return
  9569  1000                     __end_of_gmtime:	
  9570                           
  9571                           	psect	text6
  9572  14C0                     __ptext6:	
  9573 ;; *************** function _dylen *****************
  9574 ;; Defined at:
  9575 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;  yr              2   20[BANK0 ] unsigned int 
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;		None
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  2   20[BANK0 ] int 
  9582 ;; Registers used:
  9583 ;;		wreg, status,2, status,0, pclath, cstack
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9589 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9591 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9592 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9593 ;;Total ram usage:        4 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    7
  9596 ;; This function calls:
  9597 ;;		___lwmod
  9598 ;; This function is called by:
  9599 ;;		_gmtime
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603                           
  9604                           ;psect for function _dylen
  9605  14C0                     _dylen:	
  9606                           
  9607                           ;incstack = 0
  9608                           ; Regs used in _dylen: [wreg+status,2+status,0+pclath+cstack]
  9609  14C0  3003               	movlw	3
  9610  14C1  0020               	movlb	0	; select bank0
  9611  14C2  0534               	andwf	dylen@yr,w
  9612  14C3  00B6               	movwf	??_dylen
  9613  14C4  3000               	movlw	0
  9614  14C5  0535               	andwf	dylen@yr+1,w
  9615  14C6  00B7               	movwf	??_dylen+1
  9616  14C7  0836               	movf	??_dylen,w
  9617  14C8  0437               	iorwf	??_dylen+1,w
  9618  14C9  1D03               	btfss	3,2
  9619  14CA  2CED               	goto	l3965
  9620  14CB  3064               	movlw	100
  9621  14CC  00AE               	movwf	___lwmod@divisor
  9622  14CD  3000               	movlw	0
  9623  14CE  00AF               	movwf	___lwmod@divisor+1
  9624  14CF  0835               	movf	dylen@yr+1,w
  9625  14D0  00B1               	movwf	___lwmod@dividend+1
  9626  14D1  0834               	movf	dylen@yr,w
  9627  14D2  00B0               	movwf	___lwmod@dividend
  9628  14D3  3193  236B  3194   	fcall	___lwmod
  9629  14D6  0020               	movlb	0	; select bank0
  9630  14D7  082E               	movf	?___lwmod,w
  9631  14D8  042F               	iorwf	?___lwmod+1,w
  9632  14D9  1D03               	btfss	3,2
  9633  14DA  2CF2               	goto	l3969
  9634  14DB  3090               	movlw	144
  9635  14DC  00AE               	movwf	___lwmod@divisor
  9636  14DD  3001               	movlw	1
  9637  14DE  00AF               	movwf	___lwmod@divisor+1
  9638  14DF  0834               	movf	dylen@yr,w
  9639  14E0  3E2C               	addlw	44
  9640  14E1  00B0               	movwf	___lwmod@dividend
  9641  14E2  3001               	movlw	1
  9642  14E3  3D35               	addwfc	dylen@yr+1,w
  9643  14E4  00B1               	movwf	___lwmod@dividend+1
  9644  14E5  3193  236B  3194   	fcall	___lwmod
  9645  14E8  0020               	movlb	0	; select bank0
  9646  14E9  082E               	movf	?___lwmod,w
  9647  14EA  042F               	iorwf	?___lwmod+1,w
  9648  14EB  1903               	btfsc	3,2
  9649  14EC  2CF2               	goto	l3969
  9650  14ED                     l3965:	
  9651  14ED  306D               	movlw	109
  9652  14EE  00B4               	movwf	?_dylen
  9653  14EF  3001               	movlw	1
  9654  14F0  00B5               	movwf	?_dylen+1
  9655  14F1  0008               	return
  9656  14F2                     l3969:	
  9657  14F2  306E               	movlw	110
  9658  14F3  00B4               	movwf	?_dylen
  9659  14F4  3001               	movlw	1
  9660  14F5  00B5               	movwf	?_dylen+1
  9661  14F6  0008               	return
  9662  14F7                     __end_of_dylen:	
  9663                           
  9664                           	psect	text7
  9665  1632                     __ptext7:	
  9666 ;; *************** function ___awmod *****************
  9667 ;; Defined at:
  9668 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  divisor         2    0[BANK0 ] int 
  9671 ;;  dividend        2    2[BANK0 ] int 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  sign            1    6[BANK0 ] unsigned char 
  9674 ;;  counter         1    5[BANK0 ] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  2    0[BANK0 ] int 
  9677 ;; Registers used:
  9678 ;;		wreg, status,2, status,0
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9684 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9687 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9688 ;;Total ram usage:        7 bytes
  9689 ;; Hardware stack levels used:    1
  9690 ;; Hardware stack levels required when called:    6
  9691 ;; This function calls:
  9692 ;;		Nothing
  9693 ;; This function is called by:
  9694 ;;		_rtc6_SetComponent
  9695 ;;		_rtc6_SetTime
  9696 ;;		_gmtime
  9697 ;;		_asctime
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           
  9702                           ;psect for function ___awmod
  9703  1632                     ___awmod:	
  9704                           
  9705                           ;incstack = 0
  9706                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9707  1632  0020               	movlb	0	; select bank0
  9708  1633  01A6               	clrf	___awmod@sign
  9709  1634  1FA3               	btfss	___awmod@dividend+1,7
  9710  1635  2E3D               	goto	l3929
  9711  1636  09A2               	comf	___awmod@dividend,f
  9712  1637  09A3               	comf	___awmod@dividend+1,f
  9713  1638  0AA2               	incf	___awmod@dividend,f
  9714  1639  1903               	skipnz
  9715  163A  0AA3               	incf	___awmod@dividend+1,f
  9716  163B  01A6               	clrf	___awmod@sign
  9717  163C  0AA6               	incf	___awmod@sign,f
  9718  163D                     l3929:	
  9719  163D  1FA1               	btfss	___awmod@divisor+1,7
  9720  163E  2E44               	goto	l3933
  9721  163F  09A0               	comf	___awmod@divisor,f
  9722  1640  09A1               	comf	___awmod@divisor+1,f
  9723  1641  0AA0               	incf	___awmod@divisor,f
  9724  1642  1903               	skipnz
  9725  1643  0AA1               	incf	___awmod@divisor+1,f
  9726  1644                     l3933:	
  9727  1644  0820               	movf	___awmod@divisor,w
  9728  1645  0421               	iorwf	___awmod@divisor+1,w
  9729  1646  1903               	btfsc	3,2
  9730  1647  2E6B               	goto	l3951
  9731  1648  01A5               	clrf	___awmod@counter
  9732  1649  0AA5               	incf	___awmod@counter,f
  9733  164A                     l3941:	
  9734  164A  1BA1               	btfsc	___awmod@divisor+1,7
  9735  164B  2E56               	goto	l3943
  9736  164C  3001               	movlw	1
  9737  164D                     u2475:	
  9738  164D  35A0               	lslf	___awmod@divisor,f
  9739  164E  0DA1               	rlf	___awmod@divisor+1,f
  9740  164F  0B89               	decfsz	9,f
  9741  1650  2E4D               	goto	u2475
  9742  1651  3001               	movlw	1
  9743  1652  00A4               	movwf	??___awmod
  9744  1653  0824               	movf	??___awmod,w
  9745  1654  07A5               	addwf	___awmod@counter,f
  9746  1655  2E4A               	goto	l3941
  9747  1656                     l3943:	
  9748  1656  0821               	movf	___awmod@divisor+1,w
  9749  1657  0223               	subwf	___awmod@dividend+1,w
  9750  1658  1D03               	skipz
  9751  1659  2E5C               	goto	u2495
  9752  165A  0820               	movf	___awmod@divisor,w
  9753  165B  0222               	subwf	___awmod@dividend,w
  9754  165C                     u2495:	
  9755  165C  1C03               	skipc
  9756  165D  2E62               	goto	l3947
  9757  165E  0820               	movf	___awmod@divisor,w
  9758  165F  02A2               	subwf	___awmod@dividend,f
  9759  1660  0821               	movf	___awmod@divisor+1,w
  9760  1661  3BA3               	subwfb	___awmod@dividend+1,f
  9761  1662                     l3947:	
  9762  1662  3001               	movlw	1
  9763  1663                     u2505:	
  9764  1663  36A1               	lsrf	___awmod@divisor+1,f
  9765  1664  0CA0               	rrf	___awmod@divisor,f
  9766  1665  0B89               	decfsz	9,f
  9767  1666  2E63               	goto	u2505
  9768  1667  3001               	movlw	1
  9769  1668  02A5               	subwf	___awmod@counter,f
  9770  1669  1D03               	btfss	3,2
  9771  166A  2E56               	goto	l3943
  9772  166B                     l3951:	
  9773  166B  0826               	movf	___awmod@sign,w
  9774  166C  1903               	btfsc	3,2
  9775  166D  2E73               	goto	l3955
  9776  166E  09A2               	comf	___awmod@dividend,f
  9777  166F  09A3               	comf	___awmod@dividend+1,f
  9778  1670  0AA2               	incf	___awmod@dividend,f
  9779  1671  1903               	skipnz
  9780  1672  0AA3               	incf	___awmod@dividend+1,f
  9781  1673                     l3955:	
  9782  1673  0823               	movf	___awmod@dividend+1,w
  9783  1674  00A1               	movwf	?___awmod+1
  9784  1675  0822               	movf	___awmod@dividend,w
  9785  1676  00A0               	movwf	?___awmod
  9786  1677  0008               	return
  9787  1678                     __end_of___awmod:	
  9788                           
  9789                           	psect	text8
  9790  094D                     __ptext8:	
  9791 ;; *************** function ___almod *****************
  9792 ;; Defined at:
  9793 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;  divisor         4    0[BANK0 ] long 
  9796 ;;  dividend        4    4[BANK0 ] long 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  sign            1   10[BANK0 ] unsigned char 
  9799 ;;  counter         1    9[BANK0 ] unsigned char 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  4    0[BANK0 ] long 
  9802 ;; Registers used:
  9803 ;;		wreg, status,2, status,0
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9809 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9811 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;Total ram usage:       11 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    6
  9816 ;; This function calls:
  9817 ;;		Nothing
  9818 ;; This function is called by:
  9819 ;;		_gmtime
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           
  9824                           ;psect for function ___almod
  9825  094D                     ___almod:	
  9826                           
  9827                           ;incstack = 0
  9828                           ; Regs used in ___almod: [wreg+status,2+status,0]
  9829  094D  0020               	movlb	0	; select bank0
  9830  094E  01AA               	clrf	___almod@sign
  9831  094F  1FA7               	btfss	___almod@dividend+3,7
  9832  0950  295E               	goto	l1053
  9833  0951  09A4               	comf	___almod@dividend,f
  9834  0952  09A5               	comf	___almod@dividend+1,f
  9835  0953  09A6               	comf	___almod@dividend+2,f
  9836  0954  09A7               	comf	___almod@dividend+3,f
  9837  0955  0AA4               	incf	___almod@dividend,f
  9838  0956  1903               	skipnz
  9839  0957  0AA5               	incf	___almod@dividend+1,f
  9840  0958  1903               	skipnz
  9841  0959  0AA6               	incf	___almod@dividend+2,f
  9842  095A  1903               	skipnz
  9843  095B  0AA7               	incf	___almod@dividend+3,f
  9844  095C  01AA               	clrf	___almod@sign
  9845  095D  0AAA               	incf	___almod@sign,f
  9846  095E                     l1053:	
  9847  095E  1FA3               	btfss	___almod@divisor+3,7
  9848  095F  296B               	goto	l3897
  9849  0960  09A0               	comf	___almod@divisor,f
  9850  0961  09A1               	comf	___almod@divisor+1,f
  9851  0962  09A2               	comf	___almod@divisor+2,f
  9852  0963  09A3               	comf	___almod@divisor+3,f
  9853  0964  0AA0               	incf	___almod@divisor,f
  9854  0965  1903               	skipnz
  9855  0966  0AA1               	incf	___almod@divisor+1,f
  9856  0967  1903               	skipnz
  9857  0968  0AA2               	incf	___almod@divisor+2,f
  9858  0969  1903               	skipnz
  9859  096A  0AA3               	incf	___almod@divisor+3,f
  9860  096B                     l3897:	
  9861  096B  0823               	movf	___almod@divisor+3,w
  9862  096C  0422               	iorwf	___almod@divisor+2,w
  9863  096D  0421               	iorwf	___almod@divisor+1,w
  9864  096E  0420               	iorwf	___almod@divisor,w
  9865  096F  1903               	skipnz
  9866  0970  29A4               	goto	l3913
  9867  0971  01A9               	clrf	___almod@counter
  9868  0972  0AA9               	incf	___almod@counter,f
  9869  0973                     l3903:	
  9870  0973  1BA3               	btfsc	___almod@divisor+3,7
  9871  0974  2981               	goto	l3905
  9872  0975  3001               	movlw	1
  9873  0976                     u2385:	
  9874  0976  35A0               	lslf	___almod@divisor,f
  9875  0977  0DA1               	rlf	___almod@divisor+1,f
  9876  0978  0DA2               	rlf	___almod@divisor+2,f
  9877  0979  0DA3               	rlf	___almod@divisor+3,f
  9878  097A  0B89               	decfsz	9,f
  9879  097B  2976               	goto	u2385
  9880  097C  3001               	movlw	1
  9881  097D  00A8               	movwf	??___almod
  9882  097E  0828               	movf	??___almod,w
  9883  097F  07A9               	addwf	___almod@counter,f
  9884  0980  2973               	goto	l3903
  9885  0981                     l3905:	
  9886  0981  0823               	movf	___almod@divisor+3,w
  9887  0982  0227               	subwf	___almod@dividend+3,w
  9888  0983  1D03               	skipz
  9889  0984  298F               	goto	u2405
  9890  0985  0822               	movf	___almod@divisor+2,w
  9891  0986  0226               	subwf	___almod@dividend+2,w
  9892  0987  1D03               	skipz
  9893  0988  298F               	goto	u2405
  9894  0989  0821               	movf	___almod@divisor+1,w
  9895  098A  0225               	subwf	___almod@dividend+1,w
  9896  098B  1D03               	skipz
  9897  098C  298F               	goto	u2405
  9898  098D  0820               	movf	___almod@divisor,w
  9899  098E  0224               	subwf	___almod@dividend,w
  9900  098F                     u2405:	
  9901  098F  1C03               	skipc
  9902  0990  2999               	goto	l3909
  9903  0991  0820               	movf	___almod@divisor,w
  9904  0992  02A4               	subwf	___almod@dividend,f
  9905  0993  0821               	movf	___almod@divisor+1,w
  9906  0994  3BA5               	subwfb	___almod@dividend+1,f
  9907  0995  0822               	movf	___almod@divisor+2,w
  9908  0996  3BA6               	subwfb	___almod@dividend+2,f
  9909  0997  0823               	movf	___almod@divisor+3,w
  9910  0998  3BA7               	subwfb	___almod@dividend+3,f
  9911  0999                     l3909:	
  9912  0999  3001               	movlw	1
  9913  099A                     u2415:	
  9914  099A  36A3               	lsrf	___almod@divisor+3,f
  9915  099B  0CA2               	rrf	___almod@divisor+2,f
  9916  099C  0CA1               	rrf	___almod@divisor+1,f
  9917  099D  0CA0               	rrf	___almod@divisor,f
  9918  099E  0B89               	decfsz	9,f
  9919  099F  299A               	goto	u2415
  9920  09A0  3001               	movlw	1
  9921  09A1  02A9               	subwf	___almod@counter,f
  9922  09A2  1D03               	btfss	3,2
  9923  09A3  2981               	goto	l3905
  9924  09A4                     l3913:	
  9925  09A4  082A               	movf	___almod@sign,w
  9926  09A5  1903               	btfsc	3,2
  9927  09A6  29B2               	goto	l3917
  9928  09A7  09A4               	comf	___almod@dividend,f
  9929  09A8  09A5               	comf	___almod@dividend+1,f
  9930  09A9  09A6               	comf	___almod@dividend+2,f
  9931  09AA  09A7               	comf	___almod@dividend+3,f
  9932  09AB  0AA4               	incf	___almod@dividend,f
  9933  09AC  1903               	skipnz
  9934  09AD  0AA5               	incf	___almod@dividend+1,f
  9935  09AE  1903               	skipnz
  9936  09AF  0AA6               	incf	___almod@dividend+2,f
  9937  09B0  1903               	skipnz
  9938  09B1  0AA7               	incf	___almod@dividend+3,f
  9939  09B2                     l3917:	
  9940  09B2  0827               	movf	___almod@dividend+3,w
  9941  09B3  00A3               	movwf	?___almod+3
  9942  09B4  0826               	movf	___almod@dividend+2,w
  9943  09B5  00A2               	movwf	?___almod+2
  9944  09B6  0825               	movf	___almod@dividend+1,w
  9945  09B7  00A1               	movwf	?___almod+1
  9946  09B8  0824               	movf	___almod@dividend,w
  9947  09B9  00A0               	movwf	?___almod
  9948  09BA  0008               	return
  9949  09BB                     __end_of___almod:	
  9950                           
  9951                           	psect	text9
  9952  0B96                     __ptext9:	
  9953 ;; *************** function ___aldiv *****************
  9954 ;; Defined at:
  9955 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  divisor         4    0[BANK0 ] long 
  9958 ;;  dividend        4    4[BANK0 ] long 
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;  quotient        4   11[BANK0 ] long 
  9961 ;;  sign            1   10[BANK0 ] unsigned char 
  9962 ;;  counter         1    9[BANK0 ] unsigned char 
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  4    0[BANK0 ] long 
  9965 ;; Registers used:
  9966 ;;		wreg, status,2, status,0
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9972 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;Total ram usage:       15 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; Hardware stack levels required when called:    6
  9979 ;; This function calls:
  9980 ;;		Nothing
  9981 ;; This function is called by:
  9982 ;;		_gmtime
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           
  9987                           ;psect for function ___aldiv
  9988  0B96                     ___aldiv:	
  9989                           
  9990                           ;incstack = 0
  9991                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9992  0B96  0020               	movlb	0	; select bank0
  9993  0B97  01AA               	clrf	___aldiv@sign
  9994  0B98  1FA3               	btfss	___aldiv@divisor+3,7
  9995  0B99  2BA7               	goto	l1040
  9996  0B9A  09A0               	comf	___aldiv@divisor,f
  9997  0B9B  09A1               	comf	___aldiv@divisor+1,f
  9998  0B9C  09A2               	comf	___aldiv@divisor+2,f
  9999  0B9D  09A3               	comf	___aldiv@divisor+3,f
 10000  0B9E  0AA0               	incf	___aldiv@divisor,f
 10001  0B9F  1903               	skipnz
 10002  0BA0  0AA1               	incf	___aldiv@divisor+1,f
 10003  0BA1  1903               	skipnz
 10004  0BA2  0AA2               	incf	___aldiv@divisor+2,f
 10005  0BA3  1903               	skipnz
 10006  0BA4  0AA3               	incf	___aldiv@divisor+3,f
 10007  0BA5  01AA               	clrf	___aldiv@sign
 10008  0BA6  0AAA               	incf	___aldiv@sign,f
 10009  0BA7                     l1040:	
 10010  0BA7  1FA7               	btfss	___aldiv@dividend+3,7
 10011  0BA8  2BB8               	goto	l3859
 10012  0BA9  09A4               	comf	___aldiv@dividend,f
 10013  0BAA  09A5               	comf	___aldiv@dividend+1,f
 10014  0BAB  09A6               	comf	___aldiv@dividend+2,f
 10015  0BAC  09A7               	comf	___aldiv@dividend+3,f
 10016  0BAD  0AA4               	incf	___aldiv@dividend,f
 10017  0BAE  1903               	skipnz
 10018  0BAF  0AA5               	incf	___aldiv@dividend+1,f
 10019  0BB0  1903               	skipnz
 10020  0BB1  0AA6               	incf	___aldiv@dividend+2,f
 10021  0BB2  1903               	skipnz
 10022  0BB3  0AA7               	incf	___aldiv@dividend+3,f
 10023  0BB4  3001               	movlw	1
 10024  0BB5  00A8               	movwf	??___aldiv
 10025  0BB6  0828               	movf	??___aldiv,w
 10026  0BB7  06AA               	xorwf	___aldiv@sign,f
 10027  0BB8                     l3859:	
 10028  0BB8  3000               	movlw	0
 10029  0BB9  00AE               	movwf	___aldiv@quotient+3
 10030  0BBA  3000               	movlw	0
 10031  0BBB  00AD               	movwf	___aldiv@quotient+2
 10032  0BBC  3000               	movlw	0
 10033  0BBD  00AC               	movwf	___aldiv@quotient+1
 10034  0BBE  3000               	movlw	0
 10035  0BBF  00AB               	movwf	___aldiv@quotient
 10036  0BC0  0823               	movf	___aldiv@divisor+3,w
 10037  0BC1  0422               	iorwf	___aldiv@divisor+2,w
 10038  0BC2  0421               	iorwf	___aldiv@divisor+1,w
 10039  0BC3  0420               	iorwf	___aldiv@divisor,w
 10040  0BC4  1903               	skipnz
 10041  0BC5  2C01               	goto	l3881
 10042  0BC6  01A9               	clrf	___aldiv@counter
 10043  0BC7  0AA9               	incf	___aldiv@counter,f
 10044  0BC8                     l3867:	
 10045  0BC8  1BA3               	btfsc	___aldiv@divisor+3,7
 10046  0BC9  2BD6               	goto	l3869
 10047  0BCA  3001               	movlw	1
 10048  0BCB                     u2285:	
 10049  0BCB  35A0               	lslf	___aldiv@divisor,f
 10050  0BCC  0DA1               	rlf	___aldiv@divisor+1,f
 10051  0BCD  0DA2               	rlf	___aldiv@divisor+2,f
 10052  0BCE  0DA3               	rlf	___aldiv@divisor+3,f
 10053  0BCF  0B89               	decfsz	9,f
 10054  0BD0  2BCB               	goto	u2285
 10055  0BD1  3001               	movlw	1
 10056  0BD2  00A8               	movwf	??___aldiv
 10057  0BD3  0828               	movf	??___aldiv,w
 10058  0BD4  07A9               	addwf	___aldiv@counter,f
 10059  0BD5  2BC8               	goto	l3867
 10060  0BD6                     l3869:	
 10061  0BD6  3001               	movlw	1
 10062  0BD7                     u2305:	
 10063  0BD7  35AB               	lslf	___aldiv@quotient,f
 10064  0BD8  0DAC               	rlf	___aldiv@quotient+1,f
 10065  0BD9  0DAD               	rlf	___aldiv@quotient+2,f
 10066  0BDA  0DAE               	rlf	___aldiv@quotient+3,f
 10067  0BDB  0B89               	decfsz	9,f
 10068  0BDC  2BD7               	goto	u2305
 10069  0BDD  0823               	movf	___aldiv@divisor+3,w
 10070  0BDE  0227               	subwf	___aldiv@dividend+3,w
 10071  0BDF  1D03               	skipz
 10072  0BE0  2BEB               	goto	u2315
 10073  0BE1  0822               	movf	___aldiv@divisor+2,w
 10074  0BE2  0226               	subwf	___aldiv@dividend+2,w
 10075  0BE3  1D03               	skipz
 10076  0BE4  2BEB               	goto	u2315
 10077  0BE5  0821               	movf	___aldiv@divisor+1,w
 10078  0BE6  0225               	subwf	___aldiv@dividend+1,w
 10079  0BE7  1D03               	skipz
 10080  0BE8  2BEB               	goto	u2315
 10081  0BE9  0820               	movf	___aldiv@divisor,w
 10082  0BEA  0224               	subwf	___aldiv@dividend,w
 10083  0BEB                     u2315:	
 10084  0BEB  1C03               	skipc
 10085  0BEC  2BF6               	goto	l3877
 10086  0BED  0820               	movf	___aldiv@divisor,w
 10087  0BEE  02A4               	subwf	___aldiv@dividend,f
 10088  0BEF  0821               	movf	___aldiv@divisor+1,w
 10089  0BF0  3BA5               	subwfb	___aldiv@dividend+1,f
 10090  0BF1  0822               	movf	___aldiv@divisor+2,w
 10091  0BF2  3BA6               	subwfb	___aldiv@dividend+2,f
 10092  0BF3  0823               	movf	___aldiv@divisor+3,w
 10093  0BF4  3BA7               	subwfb	___aldiv@dividend+3,f
 10094  0BF5  142B               	bsf	___aldiv@quotient,0
 10095  0BF6                     l3877:	
 10096  0BF6  3001               	movlw	1
 10097  0BF7                     u2325:	
 10098  0BF7  36A3               	lsrf	___aldiv@divisor+3,f
 10099  0BF8  0CA2               	rrf	___aldiv@divisor+2,f
 10100  0BF9  0CA1               	rrf	___aldiv@divisor+1,f
 10101  0BFA  0CA0               	rrf	___aldiv@divisor,f
 10102  0BFB  0B89               	decfsz	9,f
 10103  0BFC  2BF7               	goto	u2325
 10104  0BFD  3001               	movlw	1
 10105  0BFE  02A9               	subwf	___aldiv@counter,f
 10106  0BFF  1D03               	btfss	3,2
 10107  0C00  2BD6               	goto	l3869
 10108  0C01                     l3881:	
 10109  0C01  082A               	movf	___aldiv@sign,w
 10110  0C02  1903               	btfsc	3,2
 10111  0C03  2C0F               	goto	l3885
 10112  0C04  09AB               	comf	___aldiv@quotient,f
 10113  0C05  09AC               	comf	___aldiv@quotient+1,f
 10114  0C06  09AD               	comf	___aldiv@quotient+2,f
 10115  0C07  09AE               	comf	___aldiv@quotient+3,f
 10116  0C08  0AAB               	incf	___aldiv@quotient,f
 10117  0C09  1903               	skipnz
 10118  0C0A  0AAC               	incf	___aldiv@quotient+1,f
 10119  0C0B  1903               	skipnz
 10120  0C0C  0AAD               	incf	___aldiv@quotient+2,f
 10121  0C0D  1903               	skipnz
 10122  0C0E  0AAE               	incf	___aldiv@quotient+3,f
 10123  0C0F                     l3885:	
 10124  0C0F  082E               	movf	___aldiv@quotient+3,w
 10125  0C10  00A3               	movwf	?___aldiv+3
 10126  0C11  082D               	movf	___aldiv@quotient+2,w
 10127  0C12  00A2               	movwf	?___aldiv+2
 10128  0C13  082C               	movf	___aldiv@quotient+1,w
 10129  0C14  00A1               	movwf	?___aldiv+1
 10130  0C15  082B               	movf	___aldiv@quotient,w
 10131  0C16  00A0               	movwf	?___aldiv
 10132  0C17  0008               	return
 10133  0C18                     __end_of___aldiv:	
 10134                           
 10135                           	psect	text10
 10136  0C18                     __ptext10:	
 10137 ;; *************** function _rtc6_GetTime *****************
 10138 ;; Defined at:
 10139 ;;		line 164 in file "mcc_generated_files/RTC6.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;		None
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;  tm_t           18    0[BANK1 ] struct tm
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  4   63[BANK0 ] long 
 10146 ;; Registers used:
 10147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10153 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10154 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Totals:         0       7      18       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;Total ram usage:       25 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; Hardware stack levels required when called:   17
 10160 ;; This function calls:
 10161 ;;		_memset
 10162 ;;		_mktime
 10163 ;;		_rtc6_GetComponent
 10164 ;; This function is called by:
 10165 ;;		_main
 10166 ;; This function uses a non-reentrant model
 10167 ;;
 10168                           
 10169                           
 10170                           ;psect for function _rtc6_GetTime
 10171  0C18                     _rtc6_GetTime:	
 10172                           
 10173                           ;RTC6.c: 165: struct tm tm_t;
 10174                           ;RTC6.c: 166: memset(&tm_t, 0, sizeof (tm_t));
 10175                           
 10176                           ;incstack = 0
 10177 ;; hardware stack exceeded
 10178                           ; Regs used in _rtc6_GetTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10179  0C18  30A0               	movlw	low rtc6_GetTime@tm_t
 10180  0C19  0020               	movlb	0	; select bank0
 10181  0C1A  00A0               	movwf	memset@p1
 10182  0C1B  3000               	movlw	high rtc6_GetTime@tm_t
 10183  0C1C  00A1               	movwf	memset@p1+1
 10184  0C1D  3000               	movlw	0
 10185  0C1E  00A2               	movwf	memset@c
 10186  0C1F  00A3               	movwf	memset@c+1
 10187  0C20  3012               	movlw	18
 10188  0C21  00A4               	movwf	memset@n
 10189  0C22  3000               	movlw	0
 10190  0C23  00A5               	movwf	memset@n+1
 10191  0C24  3191  216A  318C   	fcall	_memset
 10192                           
 10193                           ;RTC6.c: 168: tm_t.tm_year = rtc6_GetComponent(0x06, 0xFF) + 100;
 10194  0C27  30FF               	movlw	255
 10195  0C28  0020               	movlb	0	; select bank0
 10196  0C29  00E3               	movwf	??_rtc6_GetTime
 10197  0C2A  0863               	movf	??_rtc6_GetTime,w
 10198  0C2B  00B3               	movwf	rtc6_GetComponent@mask
 10199  0C2C  3006               	movlw	6
 10200  0C2D  3192  2215  318C   	fcall	_rtc6_GetComponent
 10201  0C30  3E64               	addlw	100
 10202  0C31  0021               	movlb	1	; select bank1
 10203  0C32  00AA               	movwf	(rtc6_GetTime@tm_t^(0+128)+10)
 10204  0C33  3000               	movlw	0
 10205  0C34  1803               	skipnc
 10206  0C35  3001               	movlw	1
 10207  0C36  00AB               	movwf	(rtc6_GetTime@tm_t^(0+128)+11)
 10208                           
 10209                           ;RTC6.c: 169: tm_t.tm_mon = rtc6_GetComponent(0x05, 0x1F) - 1;
 10210  0C37  301F               	movlw	31
 10211  0C38  0020               	movlb	0	; select bank0
 10212  0C39  00E3               	movwf	??_rtc6_GetTime
 10213  0C3A  0863               	movf	??_rtc6_GetTime,w
 10214  0C3B  00B3               	movwf	rtc6_GetComponent@mask
 10215  0C3C  3005               	movlw	5
 10216  0C3D  3192  2215  318C   	fcall	_rtc6_GetComponent
 10217  0C40  3EFF               	addlw	255
 10218  0C41  0021               	movlb	1	; select bank1
 10219  0C42  00A8               	movwf	(rtc6_GetTime@tm_t^(0+128)+8)
 10220  0C43  30FF               	movlw	255
 10221  0C44  1803               	skipnc
 10222  0C45  3000               	movlw	0
 10223  0C46  00A9               	movwf	(rtc6_GetTime@tm_t^(0+128)+9)
 10224                           
 10225                           ;RTC6.c: 170: tm_t.tm_mday = rtc6_GetComponent(0x04, 0x3F);
 10226  0C47  303F               	movlw	63
 10227  0C48  0020               	movlb	0	; select bank0
 10228  0C49  00E3               	movwf	??_rtc6_GetTime
 10229  0C4A  0863               	movf	??_rtc6_GetTime,w
 10230  0C4B  00B3               	movwf	rtc6_GetComponent@mask
 10231  0C4C  3004               	movlw	4
 10232  0C4D  3192  2215  318C   	fcall	_rtc6_GetComponent
 10233  0C50  0020               	movlb	0	; select bank0
 10234  0C51  00E4               	movwf	??_rtc6_GetTime+1
 10235  0C52  01E5               	clrf	??_rtc6_GetTime+2
 10236  0C53  0864               	movf	??_rtc6_GetTime+1,w
 10237  0C54  0021               	movlb	1	; select bank1
 10238  0C55  00A6               	movwf	(rtc6_GetTime@tm_t^(0+128)+6)
 10239  0C56  0020               	movlb	0	; select bank0
 10240  0C57  0865               	movf	??_rtc6_GetTime+2,w
 10241  0C58  0021               	movlb	1	; select bank1
 10242  0C59  00A7               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+6)
 10243                           
 10244                           ;RTC6.c: 171: tm_t.tm_hour = rtc6_GetComponent(0x02, 0x3F);
 10245  0C5A  303F               	movlw	63
 10246  0C5B  0020               	movlb	0	; select bank0
 10247  0C5C  00E3               	movwf	??_rtc6_GetTime
 10248  0C5D  0863               	movf	??_rtc6_GetTime,w
 10249  0C5E  00B3               	movwf	rtc6_GetComponent@mask
 10250  0C5F  3002               	movlw	2
 10251  0C60  3192  2215  318C   	fcall	_rtc6_GetComponent
 10252  0C63  0020               	movlb	0	; select bank0
 10253  0C64  00E4               	movwf	??_rtc6_GetTime+1
 10254  0C65  01E5               	clrf	??_rtc6_GetTime+2
 10255  0C66  0864               	movf	??_rtc6_GetTime+1,w
 10256  0C67  0021               	movlb	1	; select bank1
 10257  0C68  00A4               	movwf	(rtc6_GetTime@tm_t^(0+128)+4)
 10258  0C69  0020               	movlb	0	; select bank0
 10259  0C6A  0865               	movf	??_rtc6_GetTime+2,w
 10260  0C6B  0021               	movlb	1	; select bank1
 10261  0C6C  00A5               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+4)
 10262                           
 10263                           ;RTC6.c: 172: tm_t.tm_min = rtc6_GetComponent(0x01, 0x7F);
 10264  0C6D  307F               	movlw	127
 10265  0C6E  0020               	movlb	0	; select bank0
 10266  0C6F  00E3               	movwf	??_rtc6_GetTime
 10267  0C70  0863               	movf	??_rtc6_GetTime,w
 10268  0C71  00B3               	movwf	rtc6_GetComponent@mask
 10269  0C72  3001               	movlw	1
 10270  0C73  3192  2215  318C   	fcall	_rtc6_GetComponent
 10271  0C76  0020               	movlb	0	; select bank0
 10272  0C77  00E4               	movwf	??_rtc6_GetTime+1
 10273  0C78  01E5               	clrf	??_rtc6_GetTime+2
 10274  0C79  0864               	movf	??_rtc6_GetTime+1,w
 10275  0C7A  0021               	movlb	1	; select bank1
 10276  0C7B  00A2               	movwf	(rtc6_GetTime@tm_t^(0+128)+2)
 10277  0C7C  0020               	movlb	0	; select bank0
 10278  0C7D  0865               	movf	??_rtc6_GetTime+2,w
 10279  0C7E  0021               	movlb	1	; select bank1
 10280  0C7F  00A3               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+2)
 10281                           
 10282                           ;RTC6.c: 173: tm_t.tm_sec = rtc6_GetComponent(0x00, 0x7F);
 10283  0C80  307F               	movlw	127
 10284  0C81  0020               	movlb	0	; select bank0
 10285  0C82  00E3               	movwf	??_rtc6_GetTime
 10286  0C83  0863               	movf	??_rtc6_GetTime,w
 10287  0C84  00B3               	movwf	rtc6_GetComponent@mask
 10288  0C85  3000               	movlw	0
 10289  0C86  3192  2215  318C   	fcall	_rtc6_GetComponent
 10290  0C89  0020               	movlb	0	; select bank0
 10291  0C8A  00E4               	movwf	??_rtc6_GetTime+1
 10292  0C8B  01E5               	clrf	??_rtc6_GetTime+2
 10293  0C8C  0864               	movf	??_rtc6_GetTime+1,w
 10294  0C8D  0021               	movlb	1	; select bank1
 10295  0C8E  00A0               	movwf	rtc6_GetTime@tm_t^(0+128)
 10296  0C8F  0020               	movlb	0	; select bank0
 10297  0C90  0865               	movf	??_rtc6_GetTime+2,w
 10298  0C91  0021               	movlb	1	; select bank1
 10299  0C92  00A1               	movwf	(rtc6_GetTime@tm_t+1)^(0+128)
 10300                           
 10301                           ;RTC6.c: 175: return mktime(&tm_t);
 10302  0C93  30A0               	movlw	(low (rtc6_GetTime@tm_t| 0))& (0+255)
 10303  0C94  318D  258D         	fcall	_mktime
 10304  0C96  0020               	movlb	0	; select bank0
 10305  0C97  0853               	movf	?_mktime+3,w
 10306  0C98  00E2               	movwf	?_rtc6_GetTime+3
 10307  0C99  0852               	movf	?_mktime+2,w
 10308  0C9A  00E1               	movwf	?_rtc6_GetTime+2
 10309  0C9B  0851               	movf	?_mktime+1,w
 10310  0C9C  00E0               	movwf	?_rtc6_GetTime+1
 10311  0C9D  0850               	movf	?_mktime,w
 10312  0C9E  00DF               	movwf	?_rtc6_GetTime
 10313  0C9F  0008               	return
 10314  0CA0                     __end_of_rtc6_GetTime:	
 10315                           
 10316                           	psect	text11
 10317  1215                     __ptext11:	
 10318 ;; *************** function _rtc6_GetComponent *****************
 10319 ;; Defined at:
 10320 ;;		line 159 in file "mcc_generated_files/RTC6.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;  location        1    wreg     unsigned char 
 10323 ;;  mask            1   19[BANK0 ] unsigned char 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  location        1   23[BANK0 ] unsigned char 
 10326 ;;  working         1   24[BANK0 ] unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      unsigned char 
 10329 ;; Registers used:
 10330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10336 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10338 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10339 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;Total ram usage:        6 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:   16
 10343 ;; This function calls:
 10344 ;;		___bmul
 10345 ;;		_rtcc_read
 10346 ;; This function is called by:
 10347 ;;		_rtc6_GetTime
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           
 10352                           ;psect for function _rtc6_GetComponent
 10353  1215                     _rtc6_GetComponent:	
 10354                           
 10355                           ;incstack = 0
 10356 ;; hardware stack exceeded
 10357                           ; Regs used in _rtc6_GetComponent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10358                           ;rtc6_GetComponent@location stored from wreg
 10359  1215  0020               	movlb	0	; select bank0
 10360  1216  00B7               	movwf	rtc6_GetComponent@location
 10361                           
 10362                           ;RTC6.c: 160: uint8_t working = rtcc_read(location) & mask;
 10363  1217  0837               	movf	rtc6_GetComponent@location,w
 10364  1218  319F  27A7  3192   	fcall	_rtcc_read
 10365  121B  0020               	movlb	0	; select bank0
 10366  121C  0533               	andwf	rtc6_GetComponent@mask,w
 10367  121D  00B4               	movwf	??_rtc6_GetComponent
 10368  121E  0834               	movf	??_rtc6_GetComponent,w
 10369  121F  00B8               	movwf	rtc6_GetComponent@working
 10370                           
 10371                           ;RTC6.c: 161: return (working & 0x0F) + (((working & (mask & 0xF0)) >> 4) * 10);
 10372  1220  300F               	movlw	15
 10373  1221  0538               	andwf	rtc6_GetComponent@working,w
 10374  1222  00B4               	movwf	??_rtc6_GetComponent
 10375  1223  300A               	movlw	10
 10376  1224  00B5               	movwf	??_rtc6_GetComponent+1
 10377  1225  0835               	movf	??_rtc6_GetComponent+1,w
 10378  1226  00A0               	movwf	___bmul@multiplicand
 10379  1227  0833               	movf	rtc6_GetComponent@mask,w
 10380  1228  0538               	andwf	rtc6_GetComponent@working,w
 10381  1229  00B6               	movwf	??_rtc6_GetComponent+2
 10382  122A  3004               	movlw	4
 10383  122B                     u5225:	
 10384  122B  36B6               	lsrf	??_rtc6_GetComponent+2,f
 10385  122C  0B89               	decfsz	9,f
 10386  122D  2A2B               	goto	u5225
 10387  122E  0836               	movf	??_rtc6_GetComponent+2,w
 10388  122F  390F               	andlw	15
 10389  1230  3187  27EE         	fcall	___bmul
 10390  1232  0020               	movlb	0	; select bank0
 10391  1233  0734               	addwf	??_rtc6_GetComponent,w
 10392  1234  0008               	return
 10393  1235                     __end_of_rtc6_GetComponent:	
 10394                           
 10395                           	psect	text12
 10396  07EE                     __ptext12:	
 10397 ;; *************** function ___bmul *****************
 10398 ;; Defined at:
 10399 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;  multiplier      1    wreg     unsigned char 
 10402 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;  multiplier      1    3[BANK0 ] unsigned char 
 10405 ;;  product         1    2[BANK0 ] unsigned char 
 10406 ;; Return value:  Size  Location     Type
 10407 ;;                  1    wreg      unsigned char 
 10408 ;; Registers used:
 10409 ;;		wreg, status,2, status,0
 10410 ;; Tracked objects:
 10411 ;;		On entry : 0/0
 10412 ;;		On exit  : 0/0
 10413 ;;		Unchanged: 0/0
 10414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10415 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;Total ram usage:        4 bytes
 10420 ;; Hardware stack levels used:    1
 10421 ;; Hardware stack levels required when called:    6
 10422 ;; This function calls:
 10423 ;;		Nothing
 10424 ;; This function is called by:
 10425 ;;		_rtc6_GetComponent
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           
 10430                           ;psect for function ___bmul
 10431  07EE                     ___bmul:	
 10432                           
 10433                           ;incstack = 0
 10434                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10435                           ;___bmul@multiplier stored from wreg
 10436  07EE  0020               	movlb	0	; select bank0
 10437  07EF  00A3               	movwf	___bmul@multiplier
 10438  07F0  01A2               	clrf	___bmul@product
 10439  07F1                     l4047:	
 10440  07F1  1C23               	btfss	___bmul@multiplier,0
 10441  07F2  2FF7               	goto	l4051
 10442  07F3  0820               	movf	___bmul@multiplicand,w
 10443  07F4  00A1               	movwf	??___bmul
 10444  07F5  0821               	movf	??___bmul,w
 10445  07F6  07A2               	addwf	___bmul@product,f
 10446  07F7                     l4051:	
 10447  07F7  1003               	clrc
 10448  07F8  0DA0               	rlf	___bmul@multiplicand,f
 10449  07F9  1003               	clrc
 10450  07FA  0CA3               	rrf	___bmul@multiplier,f
 10451  07FB  0823               	movf	___bmul@multiplier,w
 10452  07FC  1D03               	btfss	3,2
 10453  07FD  2FF1               	goto	l4047
 10454  07FE  0822               	movf	___bmul@product,w
 10455  07FF  0008               	return
 10456  0800                     __end_of___bmul:	
 10457                           
 10458                           	psect	text13
 10459  0D8D                     __ptext13:	
 10460 ;; *************** function _mktime *****************
 10461 ;; Defined at:
 10462 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 10463 ;; Parameters:    Size  Location     Type
 10464 ;;  timeptr         1    wreg     PTR struct tm
 10465 ;;		 -> rtc6_GetTime@tm_t(18), 
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;  timeptr         1   62[BANK0 ] PTR struct tm
 10468 ;;		 -> rtc6_GetTime@tm_t(18), 
 10469 ;;  tt              4   58[BANK0 ] long 
 10470 ;; Return value:  Size  Location     Type
 10471 ;;                  4   48[BANK0 ] long 
 10472 ;; Registers used:
 10473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10474 ;; Tracked objects:
 10475 ;;		On entry : 0/0
 10476 ;;		On exit  : 0/0
 10477 ;;		Unchanged: 0/0
 10478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10479 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;Total ram usage:       15 bytes
 10484 ;; Hardware stack levels used:    1
 10485 ;; Hardware stack levels required when called:    9
 10486 ;; This function calls:
 10487 ;;		___lmul
 10488 ;;		_ymd_to_scalar
 10489 ;; This function is called by:
 10490 ;;		_rtc6_GetTime
 10491 ;; This function uses a non-reentrant model
 10492 ;;
 10493                           
 10494                           
 10495                           ;psect for function _mktime
 10496  0D8D                     _mktime:	
 10497                           
 10498                           ;incstack = 0
 10499                           ; Regs used in _mktime: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10500                           ;mktime@timeptr stored from wreg
 10501  0D8D  0020               	movlb	0	; select bank0
 10502  0D8E  00DE               	movwf	mktime@timeptr
 10503  0D8F  085E               	movf	mktime@timeptr,w
 10504  0D90  3E0A               	addlw	10
 10505  0D91  0086               	movwf	6
 10506  0D92  0187               	clrf	7
 10507  0D93  3F40               	moviw [0]fsr1
 10508  0D94  00D4               	movwf	??_mktime
 10509  0D95  3F41               	moviw [1]fsr1
 10510  0D96  00D5               	movwf	??_mktime+1
 10511  0D97  0855               	movf	??_mktime+1,w
 10512  0D98  3A80               	xorlw	128
 10513  0D99  00D6               	movwf	??_mktime+2
 10514  0D9A  3080               	movlw	128
 10515  0D9B  0256               	subwf	??_mktime+2,w
 10516  0D9C  1D03               	skipz
 10517  0D9D  2DA0               	goto	u2835
 10518  0D9E  3046               	movlw	70
 10519  0D9F  0254               	subwf	??_mktime,w
 10520  0DA0                     u2835:	
 10521  0DA0  1C03               	skipc
 10522  0DA1  2DB6               	goto	l4305
 10523  0DA2  0020               	movlb	0	; select bank0
 10524  0DA3  085E               	movf	mktime@timeptr,w
 10525  0DA4  3E0A               	addlw	10
 10526  0DA5  0086               	movwf	6
 10527  0DA6  0187               	clrf	7
 10528  0DA7  3F40               	moviw [0]fsr1
 10529  0DA8  00D4               	movwf	??_mktime
 10530  0DA9  3F41               	moviw [1]fsr1
 10531  0DAA  00D5               	movwf	??_mktime+1
 10532  0DAB  0855               	movf	??_mktime+1,w
 10533  0DAC  3A80               	xorlw	128
 10534  0DAD  00D6               	movwf	??_mktime+2
 10535  0DAE  3080               	movlw	128
 10536  0DAF  0256               	subwf	??_mktime+2,w
 10537  0DB0  1D03               	skipz
 10538  0DB1  2DB4               	goto	u2845
 10539  0DB2  308B               	movlw	139
 10540  0DB3  0254               	subwf	??_mktime,w
 10541  0DB4                     u2845:	
 10542  0DB4  1C03               	skipc
 10543  0DB5  2DBF               	goto	l4307
 10544  0DB6                     l4305:	
 10545  0DB6  30FF               	movlw	255
 10546  0DB7  0020               	movlb	0	; select bank0
 10547  0DB8  00DD               	movwf	mktime@tt+3
 10548  0DB9  30FF               	movlw	255
 10549  0DBA  00DC               	movwf	mktime@tt+2
 10550  0DBB  30FF               	movlw	255
 10551  0DBC  00DB               	movwf	mktime@tt+1
 10552  0DBD  30FF               	movlw	255
 10553  0DBE  2EA4               	goto	L1
 10554  0DBF                     l4307:	
 10555  0DBF  0020               	movlb	0	; select bank0
 10556  0DC0  085E               	movf	mktime@timeptr,w
 10557  0DC1  3E0A               	addlw	10
 10558  0DC2  0086               	movwf	6
 10559  0DC3  0187               	clrf	7
 10560  0DC4  3F40               	moviw [0]fsr1
 10561  0DC5  00D4               	movwf	??_mktime
 10562  0DC6  3F41               	moviw [1]fsr1
 10563  0DC7  00D5               	movwf	??_mktime+1
 10564  0DC8  0854               	movf	??_mktime,w
 10565  0DC9  3E6C               	addlw	108
 10566  0DCA  00C0               	movwf	ymd_to_scalar@yr
 10567  0DCB  3007               	movlw	7
 10568  0DCC  3D55               	addwfc	??_mktime+1,w
 10569  0DCD  00C1               	movwf	ymd_to_scalar@yr+1
 10570  0DCE  085E               	movf	mktime@timeptr,w
 10571  0DCF  3E08               	addlw	8
 10572  0DD0  0086               	movwf	6
 10573  0DD1  0187               	clrf	7
 10574  0DD2  3F40               	moviw [0]fsr1
 10575  0DD3  00D6               	movwf	??_mktime+2
 10576  0DD4  3F41               	moviw [1]fsr1
 10577  0DD5  00D7               	movwf	??_mktime+3
 10578  0DD6  0856               	movf	??_mktime+2,w
 10579  0DD7  3E01               	addlw	1
 10580  0DD8  00C2               	movwf	ymd_to_scalar@mo
 10581  0DD9  3000               	movlw	0
 10582  0DDA  3D57               	addwfc	??_mktime+3,w
 10583  0DDB  00C3               	movwf	ymd_to_scalar@mo+1
 10584  0DDC  085E               	movf	mktime@timeptr,w
 10585  0DDD  3E06               	addlw	6
 10586  0DDE  0086               	movwf	6
 10587  0DDF  0187               	clrf	7
 10588  0DE0  3F40               	moviw [0]fsr1
 10589  0DE1  00C4               	movwf	ymd_to_scalar@day
 10590  0DE2  3F41               	moviw [1]fsr1
 10591  0DE3  00C5               	movwf	ymd_to_scalar@day+1
 10592  0DE4  3188  2044  318D   	fcall	_ymd_to_scalar
 10593  0DE7  0020               	movlb	0	; select bank0
 10594  0DE8  0843               	movf	?_ymd_to_scalar+3,w
 10595  0DE9  00DD               	movwf	mktime@tt+3
 10596  0DEA  0842               	movf	?_ymd_to_scalar+2,w
 10597  0DEB  00DC               	movwf	mktime@tt+2
 10598  0DEC  0841               	movf	?_ymd_to_scalar+1,w
 10599  0DED  00DB               	movwf	mktime@tt+1
 10600  0DEE  0840               	movf	?_ymd_to_scalar,w
 10601  0DEF  00DA               	movwf	mktime@tt
 10602  0DF0  30B2               	movlw	178
 10603  0DF1  00C0               	movwf	ymd_to_scalar@yr
 10604  0DF2  3007               	movlw	7
 10605  0DF3  00C1               	movwf	ymd_to_scalar@yr+1
 10606  0DF4  3001               	movlw	1
 10607  0DF5  00C2               	movwf	ymd_to_scalar@mo
 10608  0DF6  3000               	movlw	0
 10609  0DF7  00C3               	movwf	ymd_to_scalar@mo+1
 10610  0DF8  3001               	movlw	1
 10611  0DF9  00C4               	movwf	ymd_to_scalar@day
 10612  0DFA  3000               	movlw	0
 10613  0DFB  00C5               	movwf	ymd_to_scalar@day+1
 10614  0DFC  3188  2044  318D   	fcall	_ymd_to_scalar
 10615  0DFF  0020               	movlb	0	; select bank0
 10616  0E00  0840               	movf	?_ymd_to_scalar,w
 10617  0E01  02DA               	subwf	mktime@tt,f
 10618  0E02  0841               	movf	?_ymd_to_scalar+1,w
 10619  0E03  3BDB               	subwfb	mktime@tt+1,f
 10620  0E04  0842               	movf	?_ymd_to_scalar+2,w
 10621  0E05  3BDC               	subwfb	mktime@tt+2,f
 10622  0E06  0843               	movf	?_ymd_to_scalar+3,w
 10623  0E07  3BDD               	subwfb	mktime@tt+3,f
 10624  0E08  085E               	movf	mktime@timeptr,w
 10625  0E09  3E04               	addlw	4
 10626  0E0A  0086               	movwf	6
 10627  0E0B  0187               	clrf	7
 10628  0E0C  3F40               	moviw [0]fsr1
 10629  0E0D  00D4               	movwf	??_mktime
 10630  0E0E  3F41               	moviw [1]fsr1
 10631  0E0F  00D5               	movwf	??_mktime+1
 10632  0E10  0854               	movf	??_mktime,w
 10633  0E11  00D6               	movwf	??_mktime+2
 10634  0E12  0855               	movf	??_mktime+1,w
 10635  0E13  00D7               	movwf	??_mktime+3
 10636  0E14  3000               	movlw	0
 10637  0E15  1BD7               	btfsc	??_mktime+3,7
 10638  0E16  30FF               	movlw	255
 10639  0E17  00D8               	movwf	??_mktime+4
 10640  0E18  00D9               	movwf	??_mktime+5
 10641  0E19  085D               	movf	mktime@tt+3,w
 10642  0E1A  00A3               	movwf	___lmul@multiplier+3
 10643  0E1B  085C               	movf	mktime@tt+2,w
 10644  0E1C  00A2               	movwf	___lmul@multiplier+2
 10645  0E1D  085B               	movf	mktime@tt+1,w
 10646  0E1E  00A1               	movwf	___lmul@multiplier+1
 10647  0E1F  085A               	movf	mktime@tt,w
 10648  0E20  00A0               	movwf	___lmul@multiplier
 10649  0E21  3000               	movlw	0
 10650  0E22  00A7               	movwf	___lmul@multiplicand+3
 10651  0E23  3000               	movlw	0
 10652  0E24  00A6               	movwf	___lmul@multiplicand+2
 10653  0E25  3000               	movlw	0
 10654  0E26  00A5               	movwf	___lmul@multiplicand+1
 10655  0E27  3018               	movlw	24
 10656  0E28  00A4               	movwf	___lmul@multiplicand
 10657  0E29  3193  23F5  318D   	fcall	___lmul
 10658  0E2C  0020               	movlb	0	; select bank0
 10659  0E2D  0820               	movf	?___lmul,w
 10660  0E2E  07D6               	addwf	??_mktime+2,f
 10661  0E2F  0821               	movf	?___lmul+1,w
 10662  0E30  3DD7               	addwfc	??_mktime+3,f
 10663  0E31  0822               	movf	?___lmul+2,w
 10664  0E32  3DD8               	addwfc	??_mktime+4,f
 10665  0E33  0823               	movf	?___lmul+3,w
 10666  0E34  3DD9               	addwfc	??_mktime+5,f
 10667  0E35  0859               	movf	??_mktime+5,w
 10668  0E36  00DD               	movwf	mktime@tt+3
 10669  0E37  0858               	movf	??_mktime+4,w
 10670  0E38  00DC               	movwf	mktime@tt+2
 10671  0E39  0857               	movf	??_mktime+3,w
 10672  0E3A  00DB               	movwf	mktime@tt+1
 10673  0E3B  0856               	movf	??_mktime+2,w
 10674  0E3C  00DA               	movwf	mktime@tt
 10675  0E3D  085E               	movf	mktime@timeptr,w
 10676  0E3E  3E02               	addlw	2
 10677  0E3F  0086               	movwf	6
 10678  0E40  0187               	clrf	7
 10679  0E41  3F40               	moviw [0]fsr1
 10680  0E42  00D4               	movwf	??_mktime
 10681  0E43  3F41               	moviw [1]fsr1
 10682  0E44  00D5               	movwf	??_mktime+1
 10683  0E45  0854               	movf	??_mktime,w
 10684  0E46  00D6               	movwf	??_mktime+2
 10685  0E47  0855               	movf	??_mktime+1,w
 10686  0E48  00D7               	movwf	??_mktime+3
 10687  0E49  3000               	movlw	0
 10688  0E4A  1BD7               	btfsc	??_mktime+3,7
 10689  0E4B  30FF               	movlw	255
 10690  0E4C  00D8               	movwf	??_mktime+4
 10691  0E4D  00D9               	movwf	??_mktime+5
 10692  0E4E  085D               	movf	mktime@tt+3,w
 10693  0E4F  00A3               	movwf	___lmul@multiplier+3
 10694  0E50  085C               	movf	mktime@tt+2,w
 10695  0E51  00A2               	movwf	___lmul@multiplier+2
 10696  0E52  085B               	movf	mktime@tt+1,w
 10697  0E53  00A1               	movwf	___lmul@multiplier+1
 10698  0E54  085A               	movf	mktime@tt,w
 10699  0E55  00A0               	movwf	___lmul@multiplier
 10700  0E56  3000               	movlw	0
 10701  0E57  00A7               	movwf	___lmul@multiplicand+3
 10702  0E58  3000               	movlw	0
 10703  0E59  00A6               	movwf	___lmul@multiplicand+2
 10704  0E5A  3000               	movlw	0
 10705  0E5B  00A5               	movwf	___lmul@multiplicand+1
 10706  0E5C  303C               	movlw	60
 10707  0E5D  00A4               	movwf	___lmul@multiplicand
 10708  0E5E  3193  23F5  318D   	fcall	___lmul
 10709  0E61  0020               	movlb	0	; select bank0
 10710  0E62  0820               	movf	?___lmul,w
 10711  0E63  07D6               	addwf	??_mktime+2,f
 10712  0E64  0821               	movf	?___lmul+1,w
 10713  0E65  3DD7               	addwfc	??_mktime+3,f
 10714  0E66  0822               	movf	?___lmul+2,w
 10715  0E67  3DD8               	addwfc	??_mktime+4,f
 10716  0E68  0823               	movf	?___lmul+3,w
 10717  0E69  3DD9               	addwfc	??_mktime+5,f
 10718  0E6A  0859               	movf	??_mktime+5,w
 10719  0E6B  00DD               	movwf	mktime@tt+3
 10720  0E6C  0858               	movf	??_mktime+4,w
 10721  0E6D  00DC               	movwf	mktime@tt+2
 10722  0E6E  0857               	movf	??_mktime+3,w
 10723  0E6F  00DB               	movwf	mktime@tt+1
 10724  0E70  0856               	movf	??_mktime+2,w
 10725  0E71  00DA               	movwf	mktime@tt
 10726  0E72  085E               	movf	mktime@timeptr,w
 10727  0E73  0086               	movwf	6
 10728  0E74  0187               	clrf	7
 10729  0E75  3F40               	moviw [0]fsr1
 10730  0E76  00D4               	movwf	??_mktime
 10731  0E77  3F41               	moviw [1]fsr1
 10732  0E78  00D5               	movwf	??_mktime+1
 10733  0E79  0854               	movf	??_mktime,w
 10734  0E7A  00D6               	movwf	??_mktime+2
 10735  0E7B  0855               	movf	??_mktime+1,w
 10736  0E7C  00D7               	movwf	??_mktime+3
 10737  0E7D  3000               	movlw	0
 10738  0E7E  1BD7               	btfsc	??_mktime+3,7
 10739  0E7F  30FF               	movlw	255
 10740  0E80  00D8               	movwf	??_mktime+4
 10741  0E81  00D9               	movwf	??_mktime+5
 10742  0E82  085D               	movf	mktime@tt+3,w
 10743  0E83  00A3               	movwf	___lmul@multiplier+3
 10744  0E84  085C               	movf	mktime@tt+2,w
 10745  0E85  00A2               	movwf	___lmul@multiplier+2
 10746  0E86  085B               	movf	mktime@tt+1,w
 10747  0E87  00A1               	movwf	___lmul@multiplier+1
 10748  0E88  085A               	movf	mktime@tt,w
 10749  0E89  00A0               	movwf	___lmul@multiplier
 10750  0E8A  3000               	movlw	0
 10751  0E8B  00A7               	movwf	___lmul@multiplicand+3
 10752  0E8C  3000               	movlw	0
 10753  0E8D  00A6               	movwf	___lmul@multiplicand+2
 10754  0E8E  3000               	movlw	0
 10755  0E8F  00A5               	movwf	___lmul@multiplicand+1
 10756  0E90  303C               	movlw	60
 10757  0E91  00A4               	movwf	___lmul@multiplicand
 10758  0E92  3193  23F5         	fcall	___lmul
 10759  0E94  0020               	movlb	0	; select bank0
 10760  0E95  0820               	movf	?___lmul,w
 10761  0E96  07D6               	addwf	??_mktime+2,f
 10762  0E97  0821               	movf	?___lmul+1,w
 10763  0E98  3DD7               	addwfc	??_mktime+3,f
 10764  0E99  0822               	movf	?___lmul+2,w
 10765  0E9A  3DD8               	addwfc	??_mktime+4,f
 10766  0E9B  0823               	movf	?___lmul+3,w
 10767  0E9C  3DD9               	addwfc	??_mktime+5,f
 10768  0E9D  0859               	movf	??_mktime+5,w
 10769  0E9E  00DD               	movwf	mktime@tt+3
 10770  0E9F  0858               	movf	??_mktime+4,w
 10771  0EA0  00DC               	movwf	mktime@tt+2
 10772  0EA1  0857               	movf	??_mktime+3,w
 10773  0EA2  00DB               	movwf	mktime@tt+1
 10774  0EA3  0856               	movf	??_mktime+2,w
 10775  0EA4                     L1:	
 10776  0EA4  00DA               	movwf	mktime@tt
 10777  0EA5  085D               	movf	mktime@tt+3,w
 10778  0EA6  00D3               	movwf	?_mktime+3
 10779  0EA7  085C               	movf	mktime@tt+2,w
 10780  0EA8  00D2               	movwf	?_mktime+2
 10781  0EA9  085B               	movf	mktime@tt+1,w
 10782  0EAA  00D1               	movwf	?_mktime+1
 10783  0EAB  085A               	movf	mktime@tt,w
 10784  0EAC  00D0               	movwf	?_mktime
 10785  0EAD  0008               	return
 10786  0EAE                     __end_of_mktime:	
 10787                           
 10788                           	psect	text14
 10789  0844                     __ptext14:	
 10790 ;; *************** function _ymd_to_scalar *****************
 10791 ;; Defined at:
 10792 ;;		line 40 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;  yr              2   32[BANK0 ] unsigned int 
 10795 ;;  mo              2   34[BANK0 ] unsigned int 
 10796 ;;  day             2   36[BANK0 ] unsigned int 
 10797 ;; Auto vars:     Size  Location     Type
 10798 ;;  scalar          4   44[BANK0 ] long 
 10799 ;; Return value:  Size  Location     Type
 10800 ;;                  4   32[BANK0 ] long 
 10801 ;; Registers used:
 10802 ;;		wreg, status,2, status,0, pclath, cstack
 10803 ;; Tracked objects:
 10804 ;;		On entry : 0/0
 10805 ;;		On exit  : 0/0
 10806 ;;		Unchanged: 0/0
 10807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10808 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;Total ram usage:       16 bytes
 10813 ;; Hardware stack levels used:    1
 10814 ;; Hardware stack levels required when called:    8
 10815 ;; This function calls:
 10816 ;;		_isleap
 10817 ;;		_months_to_days
 10818 ;;		_years_to_days
 10819 ;; This function is called by:
 10820 ;;		_mktime
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           
 10825                           ;psect for function _ymd_to_scalar
 10826  0844                     _ymd_to_scalar:	
 10827                           
 10828                           ;incstack = 0
 10829                           ; Regs used in _ymd_to_scalar: [wreg+status,2+status,0+pclath+cstack]
 10830  0844  0020               	movlb	0	; select bank0
 10831  0845  0843               	movf	ymd_to_scalar@mo+1,w
 10832  0846  00AF               	movwf	months_to_days@month+1
 10833  0847  0842               	movf	ymd_to_scalar@mo,w
 10834  0848  00AE               	movwf	months_to_days@month
 10835  0849  3191  21F6  3188   	fcall	_months_to_days
 10836  084C  0020               	movlb	0	; select bank0
 10837  084D  0844               	movf	ymd_to_scalar@day,w
 10838  084E  072E               	addwf	?_months_to_days,w
 10839  084F  00CC               	movwf	ymd_to_scalar@scalar
 10840  0850  0845               	movf	ymd_to_scalar@day+1,w
 10841  0851  3D2F               	addwfc	?_months_to_days+1,w
 10842  0852  00CD               	movwf	ymd_to_scalar@scalar+1
 10843  0853  01CE               	clrf	ymd_to_scalar@scalar+2
 10844  0854  01CF               	clrf	ymd_to_scalar@scalar+3
 10845  0855  3000               	movlw	0
 10846  0856  0243               	subwf	ymd_to_scalar@mo+1,w
 10847  0857  3003               	movlw	3
 10848  0858  1903               	skipnz
 10849  0859  0242               	subwf	ymd_to_scalar@mo,w
 10850  085A  1C03               	skipc
 10851  085B  287F               	goto	l1395
 10852  085C  0841               	movf	ymd_to_scalar@yr+1,w
 10853  085D  00B5               	movwf	isleap@yr+1
 10854  085E  0840               	movf	ymd_to_scalar@yr,w
 10855  085F  00B4               	movwf	isleap@yr
 10856  0860  3194  2457  3188   	fcall	_isleap
 10857  0863  0020               	movlb	0	; select bank0
 10858  0864  0834               	movf	?_isleap,w
 10859  0865  0435               	iorwf	?_isleap+1,w
 10860  0866  1D03               	btfss	3,2
 10861  0867  286A               	goto	l4149
 10862  0868  3002               	movlw	2
 10863  0869  286B               	goto	L2
 10864  086A                     l4149:	
 10865  086A  3001               	movlw	1
 10866  086B                     L2:	
 10867  086B  00CA               	movwf	_ymd_to_scalar$2112
 10868  086C  3000               	movlw	0
 10869  086D  00CB               	movwf	_ymd_to_scalar$2112+1
 10870  086E  084A               	movf	_ymd_to_scalar$2112,w
 10871  086F  00C6               	movwf	??_ymd_to_scalar
 10872  0870  084B               	movf	_ymd_to_scalar$2112+1,w
 10873  0871  00C7               	movwf	??_ymd_to_scalar+1
 10874  0872  3000               	movlw	0
 10875  0873  1BC7               	btfsc	??_ymd_to_scalar+1,7
 10876  0874  30FF               	movlw	255
 10877  0875  00C8               	movwf	??_ymd_to_scalar+2
 10878  0876  00C9               	movwf	??_ymd_to_scalar+3
 10879  0877  0846               	movf	??_ymd_to_scalar,w
 10880  0878  02CC               	subwf	ymd_to_scalar@scalar,f
 10881  0879  0847               	movf	??_ymd_to_scalar+1,w
 10882  087A  3BCD               	subwfb	ymd_to_scalar@scalar+1,f
 10883  087B  0848               	movf	??_ymd_to_scalar+2,w
 10884  087C  3BCE               	subwfb	ymd_to_scalar@scalar+2,f
 10885  087D  0849               	movf	??_ymd_to_scalar+3,w
 10886  087E  3BCF               	subwfb	ymd_to_scalar@scalar+3,f
 10887  087F                     l1395:	
 10888  087F  3001               	movlw	1
 10889  0880  02C0               	subwf	ymd_to_scalar@yr,f
 10890  0881  3000               	movlw	0
 10891  0882  3BC1               	subwfb	ymd_to_scalar@yr+1,f
 10892  0883  0841               	movf	ymd_to_scalar@yr+1,w
 10893  0884  00AF               	movwf	years_to_days@yr+1
 10894  0885  0840               	movf	ymd_to_scalar@yr,w
 10895  0886  00AE               	movwf	years_to_days@yr
 10896  0887  3189  21BB         	fcall	_years_to_days
 10897  0889  0020               	movlb	0	; select bank0
 10898  088A  082E               	movf	?_years_to_days,w
 10899  088B  07CC               	addwf	ymd_to_scalar@scalar,f
 10900  088C  082F               	movf	?_years_to_days+1,w
 10901  088D  3DCD               	addwfc	ymd_to_scalar@scalar+1,f
 10902  088E  0830               	movf	?_years_to_days+2,w
 10903  088F  3DCE               	addwfc	ymd_to_scalar@scalar+2,f
 10904  0890  0831               	movf	?_years_to_days+3,w
 10905  0891  3DCF               	addwfc	ymd_to_scalar@scalar+3,f
 10906  0892  084F               	movf	ymd_to_scalar@scalar+3,w
 10907  0893  00C3               	movwf	?_ymd_to_scalar+3
 10908  0894  084E               	movf	ymd_to_scalar@scalar+2,w
 10909  0895  00C2               	movwf	?_ymd_to_scalar+2
 10910  0896  084D               	movf	ymd_to_scalar@scalar+1,w
 10911  0897  00C1               	movwf	?_ymd_to_scalar+1
 10912  0898  084C               	movf	ymd_to_scalar@scalar,w
 10913  0899  00C0               	movwf	?_ymd_to_scalar
 10914  089A  0008               	return
 10915  089B                     __end_of_ymd_to_scalar:	
 10916                           
 10917                           	psect	text15
 10918  09BB                     __ptext15:	
 10919 ;; *************** function _years_to_days *****************
 10920 ;; Defined at:
 10921 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 10922 ;; Parameters:    Size  Location     Type
 10923 ;;  yr              2   14[BANK0 ] unsigned int 
 10924 ;; Auto vars:     Size  Location     Type
 10925 ;;		None
 10926 ;; Return value:  Size  Location     Type
 10927 ;;                  4   14[BANK0 ] long 
 10928 ;; Registers used:
 10929 ;;		wreg, status,2, status,0, pclath, cstack
 10930 ;; Tracked objects:
 10931 ;;		On entry : 0/0
 10932 ;;		On exit  : 0/0
 10933 ;;		Unchanged: 0/0
 10934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10935 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10937 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10938 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;Total ram usage:       18 bytes
 10940 ;; Hardware stack levels used:    1
 10941 ;; Hardware stack levels required when called:    7
 10942 ;; This function calls:
 10943 ;;		___lmul
 10944 ;;		___lwdiv
 10945 ;; This function is called by:
 10946 ;;		_ymd_to_scalar
 10947 ;; This function uses a non-reentrant model
 10948 ;;
 10949                           
 10950                           
 10951                           ;psect for function _years_to_days
 10952  09BB                     _years_to_days:	
 10953                           
 10954                           ;incstack = 0
 10955                           ; Regs used in _years_to_days: [wreg+status,2+status,0+pclath+cstack]
 10956  09BB  3064               	movlw	100
 10957  09BC  0020               	movlb	0	; select bank0
 10958  09BD  00A6               	movwf	___lwdiv@divisor
 10959  09BE  3000               	movlw	0
 10960  09BF  00A7               	movwf	___lwdiv@divisor+1
 10961  09C0  082F               	movf	years_to_days@yr+1,w
 10962  09C1  00A9               	movwf	___lwdiv@dividend+1
 10963  09C2  082E               	movf	years_to_days@yr,w
 10964  09C3  00A8               	movwf	___lwdiv@dividend
 10965  09C4  3194  248B  3189   	fcall	___lwdiv
 10966  09C7  0020               	movlb	0	; select bank0
 10967  09C8  0826               	movf	?___lwdiv,w
 10968  09C9  00B2               	movwf	??_years_to_days
 10969  09CA  0827               	movf	?___lwdiv+1,w
 10970  09CB  00B3               	movwf	??_years_to_days+1
 10971  09CC  01B4               	clrf	??_years_to_days+2
 10972  09CD  01B5               	clrf	??_years_to_days+3
 10973  09CE  09B2               	comf	??_years_to_days,f
 10974  09CF  09B3               	comf	??_years_to_days+1,f
 10975  09D0  09B4               	comf	??_years_to_days+2,f
 10976  09D1  09B5               	comf	??_years_to_days+3,f
 10977  09D2  0AB2               	incf	??_years_to_days,f
 10978  09D3  1903               	skipnz
 10979  09D4  0AB3               	incf	??_years_to_days+1,f
 10980  09D5  1903               	skipnz
 10981  09D6  0AB4               	incf	??_years_to_days+2,f
 10982  09D7  1903               	skipnz
 10983  09D8  0AB5               	incf	??_years_to_days+3,f
 10984  09D9  3090               	movlw	144
 10985  09DA  00A6               	movwf	___lwdiv@divisor
 10986  09DB  3001               	movlw	1
 10987  09DC  00A7               	movwf	___lwdiv@divisor+1
 10988  09DD  082F               	movf	years_to_days@yr+1,w
 10989  09DE  00A9               	movwf	___lwdiv@dividend+1
 10990  09DF  082E               	movf	years_to_days@yr,w
 10991  09E0  00A8               	movwf	___lwdiv@dividend
 10992  09E1  3194  248B  3189   	fcall	___lwdiv
 10993  09E4  0020               	movlb	0	; select bank0
 10994  09E5  0826               	movf	?___lwdiv,w
 10995  09E6  00B6               	movwf	??_years_to_days+4
 10996  09E7  0827               	movf	?___lwdiv+1,w
 10997  09E8  00B7               	movwf	??_years_to_days+5
 10998  09E9  01B8               	clrf	??_years_to_days+6
 10999  09EA  01B9               	clrf	??_years_to_days+7
 11000  09EB  082F               	movf	years_to_days@yr+1,w
 11001  09EC  00BB               	movwf	??_years_to_days+9
 11002  09ED  082E               	movf	years_to_days@yr,w
 11003  09EE  00BA               	movwf	??_years_to_days+8
 11004  09EF  36BB               	lsrf	??_years_to_days+9,f
 11005  09F0  0CBA               	rrf	??_years_to_days+8,f
 11006  09F1  36BB               	lsrf	??_years_to_days+9,f
 11007  09F2  0CBA               	rrf	??_years_to_days+8,f
 11008  09F3  083A               	movf	??_years_to_days+8,w
 11009  09F4  00BC               	movwf	??_years_to_days+10
 11010  09F5  083B               	movf	??_years_to_days+9,w
 11011  09F6  00BD               	movwf	??_years_to_days+11
 11012  09F7  01BE               	clrf	??_years_to_days+12
 11013  09F8  01BF               	clrf	??_years_to_days+13
 11014  09F9  082E               	movf	years_to_days@yr,w
 11015  09FA  00A0               	movwf	___lmul@multiplier
 11016  09FB  082F               	movf	years_to_days@yr+1,w
 11017  09FC  00A1               	movwf	___lmul@multiplier+1
 11018  09FD  01A2               	clrf	___lmul@multiplier+2
 11019  09FE  01A3               	clrf	___lmul@multiplier+3
 11020  09FF  3000               	movlw	0
 11021  0A00  00A7               	movwf	___lmul@multiplicand+3
 11022  0A01  3000               	movlw	0
 11023  0A02  00A6               	movwf	___lmul@multiplicand+2
 11024  0A03  3001               	movlw	1
 11025  0A04  00A5               	movwf	___lmul@multiplicand+1
 11026  0A05  306D               	movlw	109
 11027  0A06  00A4               	movwf	___lmul@multiplicand
 11028  0A07  3193  23F5         	fcall	___lmul
 11029  0A09  0020               	movlb	0	; select bank0
 11030  0A0A  0820               	movf	?___lmul,w
 11031  0A0B  07BC               	addwf	??_years_to_days+10,f
 11032  0A0C  0821               	movf	?___lmul+1,w
 11033  0A0D  3DBD               	addwfc	??_years_to_days+11,f
 11034  0A0E  0822               	movf	?___lmul+2,w
 11035  0A0F  3DBE               	addwfc	??_years_to_days+12,f
 11036  0A10  0823               	movf	?___lmul+3,w
 11037  0A11  3DBF               	addwfc	??_years_to_days+13,f
 11038  0A12  083C               	movf	??_years_to_days+10,w
 11039  0A13  07B6               	addwf	??_years_to_days+4,f
 11040  0A14  083D               	movf	??_years_to_days+11,w
 11041  0A15  3DB7               	addwfc	??_years_to_days+5,f
 11042  0A16  083E               	movf	??_years_to_days+12,w
 11043  0A17  3DB8               	addwfc	??_years_to_days+6,f
 11044  0A18  083F               	movf	??_years_to_days+13,w
 11045  0A19  3DB9               	addwfc	??_years_to_days+7,f
 11046  0A1A  0836               	movf	??_years_to_days+4,w
 11047  0A1B  07B2               	addwf	??_years_to_days,f
 11048  0A1C  0837               	movf	??_years_to_days+5,w
 11049  0A1D  3DB3               	addwfc	??_years_to_days+1,f
 11050  0A1E  0838               	movf	??_years_to_days+6,w
 11051  0A1F  3DB4               	addwfc	??_years_to_days+2,f
 11052  0A20  0839               	movf	??_years_to_days+7,w
 11053  0A21  3DB5               	addwfc	??_years_to_days+3,f
 11054  0A22  0835               	movf	??_years_to_days+3,w
 11055  0A23  00B1               	movwf	?_years_to_days+3
 11056  0A24  0834               	movf	??_years_to_days+2,w
 11057  0A25  00B0               	movwf	?_years_to_days+2
 11058  0A26  0833               	movf	??_years_to_days+1,w
 11059  0A27  00AF               	movwf	?_years_to_days+1
 11060  0A28  0832               	movf	??_years_to_days,w
 11061  0A29  00AE               	movwf	?_years_to_days
 11062  0A2A  0008               	return
 11063  0A2B                     __end_of_years_to_days:	
 11064                           
 11065                           	psect	text16
 11066  13F5                     __ptext16:	
 11067 ;; *************** function ___lmul *****************
 11068 ;; Defined at:
 11069 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;  multiplier      4    0[BANK0 ] unsigned long 
 11072 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;  product         4    8[BANK0 ] unsigned long 
 11075 ;; Return value:  Size  Location     Type
 11076 ;;                  4    0[BANK0 ] unsigned long 
 11077 ;; Registers used:
 11078 ;;		wreg, status,2, status,0
 11079 ;; Tracked objects:
 11080 ;;		On entry : 0/0
 11081 ;;		On exit  : 0/0
 11082 ;;		Unchanged: 0/0
 11083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11084 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11085 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11087 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11088 ;;Total ram usage:       12 bytes
 11089 ;; Hardware stack levels used:    1
 11090 ;; Hardware stack levels required when called:    6
 11091 ;; This function calls:
 11092 ;;		Nothing
 11093 ;; This function is called by:
 11094 ;;		_years_to_days
 11095 ;;		_mktime
 11096 ;;		_localtime
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           
 11101                           ;psect for function ___lmul
 11102  13F5                     ___lmul:	
 11103                           
 11104                           ;incstack = 0
 11105                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11106  13F5  3000               	movlw	0
 11107  13F6  0020               	movlb	0	; select bank0
 11108  13F7  00AB               	movwf	___lmul@product+3
 11109  13F8  3000               	movlw	0
 11110  13F9  00AA               	movwf	___lmul@product+2
 11111  13FA  3000               	movlw	0
 11112  13FB  00A9               	movwf	___lmul@product+1
 11113  13FC  3000               	movlw	0
 11114  13FD  00A8               	movwf	___lmul@product
 11115  13FE                     l3733:	
 11116  13FE  1C20               	btfss	___lmul@multiplier,0
 11117  13FF  2C08               	goto	l3737
 11118  1400  0824               	movf	___lmul@multiplicand,w
 11119  1401  07A8               	addwf	___lmul@product,f
 11120  1402  0825               	movf	___lmul@multiplicand+1,w
 11121  1403  3DA9               	addwfc	___lmul@product+1,f
 11122  1404  0826               	movf	___lmul@multiplicand+2,w
 11123  1405  3DAA               	addwfc	___lmul@product+2,f
 11124  1406  0827               	movf	___lmul@multiplicand+3,w
 11125  1407  3DAB               	addwfc	___lmul@product+3,f
 11126  1408                     l3737:	
 11127  1408  3001               	movlw	1
 11128  1409                     u2015:	
 11129  1409  35A4               	lslf	___lmul@multiplicand,f
 11130  140A  0DA5               	rlf	___lmul@multiplicand+1,f
 11131  140B  0DA6               	rlf	___lmul@multiplicand+2,f
 11132  140C  0DA7               	rlf	___lmul@multiplicand+3,f
 11133  140D  0B89               	decfsz	9,f
 11134  140E  2C09               	goto	u2015
 11135  140F  3001               	movlw	1
 11136  1410                     u2025:	
 11137  1410  36A3               	lsrf	___lmul@multiplier+3,f
 11138  1411  0CA2               	rrf	___lmul@multiplier+2,f
 11139  1412  0CA1               	rrf	___lmul@multiplier+1,f
 11140  1413  0CA0               	rrf	___lmul@multiplier,f
 11141  1414  0B89               	decfsz	9,f
 11142  1415  2C10               	goto	u2025
 11143  1416  0823               	movf	___lmul@multiplier+3,w
 11144  1417  0422               	iorwf	___lmul@multiplier+2,w
 11145  1418  0421               	iorwf	___lmul@multiplier+1,w
 11146  1419  0420               	iorwf	___lmul@multiplier,w
 11147  141A  1D03               	skipz
 11148  141B  2BFE               	goto	l3733
 11149  141C  082B               	movf	___lmul@product+3,w
 11150  141D  00A3               	movwf	?___lmul+3
 11151  141E  082A               	movf	___lmul@product+2,w
 11152  141F  00A2               	movwf	?___lmul+2
 11153  1420  0829               	movf	___lmul@product+1,w
 11154  1421  00A1               	movwf	?___lmul+1
 11155  1422  0828               	movf	___lmul@product,w
 11156  1423  00A0               	movwf	?___lmul
 11157  1424  0008               	return
 11158  1425                     __end_of___lmul:	
 11159                           
 11160                           	psect	text17
 11161  11F6                     __ptext17:	
 11162 ;; *************** function _months_to_days *****************
 11163 ;; Defined at:
 11164 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;  month           2   14[BANK0 ] unsigned int 
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;		None
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  2   14[BANK0 ] unsigned int 
 11171 ;; Registers used:
 11172 ;;		wreg, status,2, status,0, pclath, cstack
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11178 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11181 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11182 ;;Total ram usage:        2 bytes
 11183 ;; Hardware stack levels used:    1
 11184 ;; Hardware stack levels required when called:    7
 11185 ;; This function calls:
 11186 ;;		___lwdiv
 11187 ;;		___wmul
 11188 ;; This function is called by:
 11189 ;;		_ymd_to_scalar
 11190 ;; This function uses a non-reentrant model
 11191 ;;
 11192                           
 11193                           
 11194                           ;psect for function _months_to_days
 11195  11F6                     _months_to_days:	
 11196                           
 11197                           ;incstack = 0
 11198                           ; Regs used in _months_to_days: [wreg+status,2+status,0+pclath+cstack]
 11199  11F6  3064               	movlw	100
 11200  11F7  0020               	movlb	0	; select bank0
 11201  11F8  00A6               	movwf	___lwdiv@divisor
 11202  11F9  3000               	movlw	0
 11203  11FA  00A7               	movwf	___lwdiv@divisor+1
 11204  11FB  082F               	movf	months_to_days@month+1,w
 11205  11FC  00A1               	movwf	___wmul@multiplier+1
 11206  11FD  082E               	movf	months_to_days@month,w
 11207  11FE  00A0               	movwf	___wmul@multiplier
 11208  11FF  30F1               	movlw	241
 11209  1200  00A2               	movwf	___wmul@multiplicand
 11210  1201  300B               	movlw	11
 11211  1202  00A3               	movwf	___wmul@multiplicand+1
 11212  1203  3191  219E  3191   	fcall	___wmul
 11213  1206  0020               	movlb	0	; select bank0
 11214  1207  0820               	movf	?___wmul,w
 11215  1208  3E41               	addlw	65
 11216  1209  00A8               	movwf	___lwdiv@dividend
 11217  120A  30F4               	movlw	244
 11218  120B  3D21               	addwfc	?___wmul+1,w
 11219  120C  00A9               	movwf	___lwdiv@dividend+1
 11220  120D  3194  248B         	fcall	___lwdiv
 11221  120F  0020               	movlb	0	; select bank0
 11222  1210  0827               	movf	?___lwdiv+1,w
 11223  1211  00AF               	movwf	?_months_to_days+1
 11224  1212  0826               	movf	?___lwdiv,w
 11225  1213  00AE               	movwf	?_months_to_days
 11226  1214  0008               	return
 11227  1215                     __end_of_months_to_days:	
 11228                           
 11229                           	psect	text18
 11230  1457                     __ptext18:	
 11231 ;; *************** function _isleap *****************
 11232 ;; Defined at:
 11233 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 11234 ;; Parameters:    Size  Location     Type
 11235 ;;  yr              2   20[BANK0 ] unsigned int 
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;		None
 11238 ;; Return value:  Size  Location     Type
 11239 ;;                  2   20[BANK0 ] int 
 11240 ;; Registers used:
 11241 ;;		wreg, status,2, status,0, pclath, cstack
 11242 ;; Tracked objects:
 11243 ;;		On entry : 0/0
 11244 ;;		On exit  : 0/0
 11245 ;;		Unchanged: 0/0
 11246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;Total ram usage:        5 bytes
 11252 ;; Hardware stack levels used:    1
 11253 ;; Hardware stack levels required when called:    7
 11254 ;; This function calls:
 11255 ;;		___lwmod
 11256 ;; This function is called by:
 11257 ;;		_ymd_to_scalar
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           
 11262                           ;psect for function _isleap
 11263  1457                     _isleap:	
 11264                           
 11265                           ;incstack = 0
 11266                           ; Regs used in _isleap: [wreg+status,2+status,0+pclath+cstack]
 11267  1457  0020               	movlb	0	; select bank0
 11268  1458  01B8               	clrf	_isleap$2100
 11269  1459  0AB8               	incf	_isleap$2100,f
 11270  145A  3090               	movlw	144
 11271  145B  00AE               	movwf	___lwmod@divisor
 11272  145C  3001               	movlw	1
 11273  145D  00AF               	movwf	___lwmod@divisor+1
 11274  145E  0835               	movf	isleap@yr+1,w
 11275  145F  00B1               	movwf	___lwmod@dividend+1
 11276  1460  0834               	movf	isleap@yr,w
 11277  1461  00B0               	movwf	___lwmod@dividend
 11278  1462  3193  236B  3194   	fcall	___lwmod
 11279  1465  0020               	movlb	0	; select bank0
 11280  1466  082E               	movf	?___lwmod,w
 11281  1467  042F               	iorwf	?___lwmod+1,w
 11282  1468  1903               	btfsc	3,2
 11283  1469  2C83               	goto	l3983
 11284  146A  3003               	movlw	3
 11285  146B  0534               	andwf	isleap@yr,w
 11286  146C  00B6               	movwf	??_isleap
 11287  146D  3000               	movlw	0
 11288  146E  0535               	andwf	isleap@yr+1,w
 11289  146F  00B7               	movwf	??_isleap+1
 11290  1470  0836               	movf	??_isleap,w
 11291  1471  0437               	iorwf	??_isleap+1,w
 11292  1472  1D03               	btfss	3,2
 11293  1473  2C82               	goto	l3981
 11294  1474  3064               	movlw	100
 11295  1475  00AE               	movwf	___lwmod@divisor
 11296  1476  3000               	movlw	0
 11297  1477  00AF               	movwf	___lwmod@divisor+1
 11298  1478  0835               	movf	isleap@yr+1,w
 11299  1479  00B1               	movwf	___lwmod@dividend+1
 11300  147A  0834               	movf	isleap@yr,w
 11301  147B  00B0               	movwf	___lwmod@dividend
 11302  147C  3193  236B         	fcall	___lwmod
 11303  147E  0020               	movlb	0	; select bank0
 11304  147F  082E               	movf	?___lwmod,w
 11305  1480  042F               	iorwf	?___lwmod+1,w
 11306  1481  1903               	btfsc	3,2
 11307  1482                     l3981:	
 11308  1482  01B8               	clrf	_isleap$2100
 11309  1483                     l3983:	
 11310  1483  0838               	movf	_isleap$2100,w
 11311  1484  00B6               	movwf	??_isleap
 11312  1485  01B7               	clrf	??_isleap+1
 11313  1486  0836               	movf	??_isleap,w
 11314  1487  00B4               	movwf	?_isleap
 11315  1488  0837               	movf	??_isleap+1,w
 11316  1489  00B5               	movwf	?_isleap+1
 11317  148A  0008               	return
 11318  148B                     __end_of_isleap:	
 11319                           
 11320                           	psect	text19
 11321  116A                     __ptext19:	
 11322 ;; *************** function _memset *****************
 11323 ;; Defined at:
 11324 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 11325 ;; Parameters:    Size  Location     Type
 11326 ;;  p1              2    0[BANK0 ] PTR void 
 11327 ;;		 -> gmtime@tim(18), rtc6_GetTime@tm_t(18), 
 11328 ;;  c               2    2[BANK0 ] int 
 11329 ;;  n               2    4[BANK0 ] unsigned int 
 11330 ;; Auto vars:     Size  Location     Type
 11331 ;;  p               2    6[BANK0 ] PTR unsigned char 
 11332 ;;		 -> gmtime@tim(18), rtc6_GetTime@tm_t(18), 
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  2    0[BANK0 ] PTR void 
 11335 ;; Registers used:
 11336 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/0
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11342 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11345 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11346 ;;Total ram usage:        8 bytes
 11347 ;; Hardware stack levels used:    1
 11348 ;; Hardware stack levels required when called:    6
 11349 ;; This function calls:
 11350 ;;		Nothing
 11351 ;; This function is called by:
 11352 ;;		_rtc6_SetTime
 11353 ;;		_rtc6_GetTime
 11354 ;;		_main
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           
 11359                           ;psect for function _memset
 11360  116A                     _memset:	
 11361                           
 11362                           ;incstack = 0
 11363                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11364  116A  0020               	movlb	0	; select bank0
 11365  116B  0821               	movf	memset@p1+1,w
 11366  116C  00A7               	movwf	memset@p+1
 11367  116D  0820               	movf	memset@p1,w
 11368  116E  00A6               	movwf	memset@p
 11369  116F                     l4287:	
 11370  116F  3001               	movlw	1
 11371  1170  02A4               	subwf	memset@n,f
 11372  1171  3000               	movlw	0
 11373  1172  3BA5               	subwfb	memset@n+1,f
 11374  1173  0A24               	incf	memset@n,w
 11375  1174  1903               	btfsc	3,2
 11376  1175  0A25               	incf	memset@n+1,w
 11377  1176  1903               	btfsc	3,2
 11378  1177  0008               	return
 11379  1178  0826               	movf	memset@p,w
 11380  1179  0086               	movwf	6
 11381  117A  0827               	movf	memset@p+1,w
 11382  117B  0087               	movwf	7
 11383  117C  0822               	movf	memset@c,w
 11384  117D  0081               	movwf	1
 11385  117E  3001               	movlw	1
 11386  117F  07A6               	addwf	memset@p,f
 11387  1180  3000               	movlw	0
 11388  1181  3DA7               	addwfc	memset@p+1,f
 11389  1182  296F               	goto	l4287
 11390  1183                     __end_of_memset:	
 11391                           ;	Return value of _memset is never used
 11392                           
 11393                           
 11394                           	psect	text20
 11395  13C6                     __ptext20:	
 11396 ;; *************** function _Write_String *****************
 11397 ;; Defined at:
 11398 ;;		line 108 in file "oled.c"
 11399 ;; Parameters:    Size  Location     Type
 11400 ;;  message         2   51[BANK0 ] PTR unsigned char 
 11401 ;;		 -> main@timeStr(0), main@welcomeMsg(12), 
 11402 ;; Auto vars:     Size  Location     Type
 11403 ;;  len             2   53[BANK0 ] unsigned int 
 11404 ;; Return value:  Size  Location     Type
 11405 ;;                  1    wreg      void 
 11406 ;; Registers used:
 11407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11408 ;; Tracked objects:
 11409 ;;		On entry : 0/0
 11410 ;;		On exit  : 0/0
 11411 ;;		Unchanged: 0/0
 11412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11416 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11417 ;;Total ram usage:        4 bytes
 11418 ;; Hardware stack levels used:    1
 11419 ;; Hardware stack levels required when called:   10
 11420 ;; This function calls:
 11421 ;;		_Modify_Data
 11422 ;;		_OLED_PutPicture
 11423 ;;		_sprintf
 11424 ;;		_strlen
 11425 ;; This function is called by:
 11426 ;;		_main
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           
 11431                           ;psect for function _Write_String
 11432  13C6                     _Write_String:	
 11433                           
 11434                           ;oled.c: 109: size_t len = strlen(message);
 11435                           
 11436                           ;incstack = 0
 11437                           ; Regs used in _Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11438  13C6  0020               	movlb	0	; select bank0
 11439  13C7  0854               	movf	Write_String@message+1,w
 11440  13C8  00A1               	movwf	strlen@s+1
 11441  13C9  0853               	movf	Write_String@message,w
 11442  13CA  00A0               	movwf	strlen@s
 11443  13CB  3191  21D7  3193   	fcall	_strlen
 11444  13CE  0020               	movlb	0	; select bank0
 11445  13CF  0821               	movf	?_strlen+1,w
 11446  13D0  00D6               	movwf	Write_String@len+1
 11447  13D1  0820               	movf	?_strlen,w
 11448  13D2  00D5               	movwf	Write_String@len
 11449                           
 11450                           ;oled.c: 110: sprintf(CharacterArray, message);
 11451  13D3  308C               	movlw	140
 11452  13D4  00B4               	movwf	sprintf@sp
 11453  13D5  3023               	movlw	35
 11454  13D6  00B5               	movwf	sprintf@sp+1
 11455  13D7  0854               	movf	Write_String@message+1,w
 11456  13D8  00B7               	movwf	sprintf@f+1
 11457  13D9  0853               	movf	Write_String@message,w
 11458  13DA  00B6               	movwf	sprintf@f
 11459  13DB  3186  2624  3193   	fcall	_sprintf
 11460                           
 11461                           ;oled.c: 111: Modify_Data(CharacterArray, 0, len);
 11462  13DE  308C               	movlw	140
 11463  13DF  0020               	movlb	0	; select bank0
 11464  13E0  00A6               	movwf	Modify_Data@c
 11465  13E1  3023               	movlw	35
 11466  13E2  00A7               	movwf	Modify_Data@c+1
 11467  13E3  3000               	movlw	0
 11468  13E4  00A8               	movwf	Modify_Data@offset
 11469  13E5  00A9               	movwf	Modify_Data@offset+1
 11470  13E6  0856               	movf	Write_String@len+1,w
 11471  13E7  00AB               	movwf	Modify_Data@limit+1
 11472  13E8  0855               	movf	Write_String@len,w
 11473  13E9  00AA               	movwf	Modify_Data@limit
 11474  13EA  318A  222B  3193   	fcall	_Modify_Data
 11475                           
 11476                           ;oled.c: 112: OLED_PutPicture(displayArray);
 11477  13ED  30B1               	movlw	177
 11478  13EE  0020               	movlb	0	; select bank0
 11479  13EF  00A4               	movwf	OLED_PutPicture@pic
 11480  13F0  3021               	movlw	33
 11481  13F1  00A5               	movwf	OLED_PutPicture@pic+1
 11482  13F2  3194  24F7         	fcall	_OLED_PutPicture
 11483  13F4  0008               	return
 11484  13F5                     __end_of_Write_String:	
 11485                           
 11486                           	psect	text21
 11487  11D7                     __ptext21:	
 11488 ;; *************** function _strlen *****************
 11489 ;; Defined at:
 11490 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 11493 ;;		 -> main@timeStr(0), main@welcomeMsg(12), 
 11494 ;; Auto vars:     Size  Location     Type
 11495 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 11496 ;;		 -> main@timeStr(0), main@welcomeMsg(12), 
 11497 ;; Return value:  Size  Location     Type
 11498 ;;                  2    0[BANK0 ] unsigned int 
 11499 ;; Registers used:
 11500 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11501 ;; Tracked objects:
 11502 ;;		On entry : 0/0
 11503 ;;		On exit  : 0/0
 11504 ;;		Unchanged: 0/0
 11505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11510 ;;Total ram usage:        6 bytes
 11511 ;; Hardware stack levels used:    1
 11512 ;; Hardware stack levels required when called:    6
 11513 ;; This function calls:
 11514 ;;		Nothing
 11515 ;; This function is called by:
 11516 ;;		_Write_String
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           
 11521                           ;psect for function _strlen
 11522  11D7                     _strlen:	
 11523                           
 11524                           ;incstack = 0
 11525                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 11526  11D7  0020               	movlb	0	; select bank0
 11527  11D8  0821               	movf	strlen@s+1,w
 11528  11D9  00A5               	movwf	strlen@cp+1
 11529  11DA  0820               	movf	strlen@s,w
 11530  11DB  00A4               	movwf	strlen@cp
 11531  11DC                     l4561:	
 11532  11DC  0824               	movf	strlen@cp,w
 11533  11DD  0086               	movwf	6
 11534  11DE  0825               	movf	strlen@cp+1,w
 11535  11DF  0087               	movwf	7
 11536  11E0  0801               	movf	1,w
 11537  11E1  1903               	btfsc	3,2
 11538  11E2  29E8               	goto	l4563
 11539  11E3  3001               	movlw	1
 11540  11E4  07A4               	addwf	strlen@cp,f
 11541  11E5  3000               	movlw	0
 11542  11E6  3DA5               	addwfc	strlen@cp+1,f
 11543  11E7  29DC               	goto	l4561
 11544  11E8                     l4563:	
 11545  11E8  0920               	comf	strlen@s,w
 11546  11E9  00A2               	movwf	??_strlen
 11547  11EA  0921               	comf	strlen@s+1,w
 11548  11EB  00A3               	movwf	??_strlen+1
 11549  11EC  0AA2               	incf	??_strlen,f
 11550  11ED  1903               	skipnz
 11551  11EE  0AA3               	incf	??_strlen+1,f
 11552  11EF  0824               	movf	strlen@cp,w
 11553  11F0  0722               	addwf	??_strlen,w
 11554  11F1  00A0               	movwf	?_strlen
 11555  11F2  0825               	movf	strlen@cp+1,w
 11556  11F3  3D23               	addwfc	??_strlen+1,w
 11557  11F4  00A1               	movwf	?_strlen+1
 11558  11F5  0008               	return
 11559  11F6                     __end_of_strlen:	
 11560                           
 11561                           	psect	text22
 11562  0624                     __ptext22:	
 11563 ;; *************** function _sprintf *****************
 11564 ;; Defined at:
 11565 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  sp              2   20[BANK0 ] PTR unsigned char 
 11568 ;;		 -> CharacterArray(100), main@timeStr(0), 
 11569 ;;  f               2   22[BANK0 ] PTR const unsigned char 
 11570 ;;		 -> STR_1(31), main@timeStr(0), main@welcomeMsg(12), 
 11571 ;; Auto vars:     Size  Location     Type
 11572 ;;  tmpval          4    0        struct .
 11573 ;;  width           2   48[BANK0 ] int 
 11574 ;;  val             2   45[BANK0 ] unsigned int 
 11575 ;;  len             2   43[BANK0 ] unsigned int 
 11576 ;;  c               1   50[BANK0 ] char 
 11577 ;;  flag            1   47[BANK0 ] unsigned char 
 11578 ;;  prec            1   42[BANK0 ] char 
 11579 ;;  cp              1   41[BANK0 ] PTR const unsigned char 
 11580 ;;		 -> sprintf@c(1), 
 11581 ;;  ap              1   40[BANK0 ] PTR void [1]
 11582 ;;		 -> ?_sprintf(2), 
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  2   20[BANK0 ] int 
 11585 ;; Registers used:
 11586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11592 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11593 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;Total ram usage:       31 bytes
 11597 ;; Hardware stack levels used:    1
 11598 ;; Hardware stack levels required when called:    7
 11599 ;; This function calls:
 11600 ;;		___lwdiv
 11601 ;;		___lwmod
 11602 ;;		___wmul
 11603 ;;		_isdigit
 11604 ;; This function is called by:
 11605 ;;		_main
 11606 ;;		_Write_String
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           
 11611                           ;psect for function _sprintf
 11612  0624                     _sprintf:	
 11613                           
 11614                           ;doprnt.c: 494: va_list ap;
 11615                           ;doprnt.c: 499: signed char c;
 11616                           ;doprnt.c: 501: int width;
 11617                           ;doprnt.c: 506: signed char prec;
 11618                           ;doprnt.c: 508: unsigned char flag;
 11619                           ;doprnt.c: 523: union {
 11620                           ;doprnt.c: 524: unsigned long vd;
 11621                           ;doprnt.c: 525: double integ;
 11622                           ;doprnt.c: 526: } tmpval;
 11623                           ;doprnt.c: 528: unsigned int val;
 11624                           ;doprnt.c: 529: unsigned len;
 11625                           ;doprnt.c: 530: const char * cp;
 11626                           ;doprnt.c: 533: *ap = __va_start();
 11627                           
 11628                           ;incstack = 0
 11629                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11630  0624  3038               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
 11631  0625  0020               	movlb	0	; select bank0
 11632  0626  00C4               	movwf	??_sprintf
 11633  0627  0844               	movf	??_sprintf,w
 11634  0628  00C8               	movwf	sprintf@ap
 11635  0629                     l4527:	
 11636                           ;doprnt.c: 536: while(c = *f++) {
 11637                           
 11638  0629  0837               	movf	sprintf@f+1,w
 11639  062A  00C5               	movwf	??_sprintf+1
 11640  062B  0836               	movf	sprintf@f,w
 11641  062C  00C4               	movwf	??_sprintf
 11642  062D  0AB6               	incf	sprintf@f,f
 11643  062E  1903               	skipnz
 11644  062F  0AB7               	incf	sprintf@f+1,f
 11645  0630  0844               	movf	??_sprintf,w
 11646  0631  0084               	movwf	4
 11647  0632  0845               	movf	??_sprintf+1,w
 11648  0633  0085               	movwf	5
 11649  0634  0800               	movf	0,w	;code access
 11650  0635  00C6               	movwf	??_sprintf+2
 11651  0636  0846               	movf	??_sprintf+2,w
 11652  0637  00D2               	movwf	sprintf@c
 11653  0638  0852               	movf	sprintf@c,w
 11654  0639  1903               	btfsc	3,2
 11655  063A  2FE7               	goto	l4529
 11656                           
 11657                           ;doprnt.c: 538: if(c != '%')
 11658  063B  3025               	movlw	37
 11659  063C  0652               	xorwf	sprintf@c,w
 11660  063D  1903               	btfsc	3,2
 11661  063E  2E4A               	goto	l4409
 11662                           
 11663                           ;doprnt.c: 540: {
 11664                           ;doprnt.c: 541: ((*sp++ = (c)));
 11665  063F  0834               	movf	sprintf@sp,w
 11666  0640  0086               	movwf	6
 11667  0641  0835               	movf	sprintf@sp+1,w
 11668  0642  0087               	movwf	7
 11669  0643  0852               	movf	sprintf@c,w
 11670  0644  0081               	movwf	1
 11671  0645  3001               	movlw	1
 11672  0646  07B4               	addwf	sprintf@sp,f
 11673  0647  3000               	movlw	0
 11674  0648  3DB5               	addwfc	sprintf@sp+1,f
 11675                           
 11676                           ;doprnt.c: 542: continue;
 11677  0649  2E29               	goto	l4527
 11678  064A                     l4409:	
 11679                           
 11680                           ;doprnt.c: 543: }
 11681                           ;doprnt.c: 546: width = 0;
 11682  064A  01D0               	clrf	sprintf@width
 11683  064B  01D1               	clrf	sprintf@width+1
 11684                           
 11685                           ;doprnt.c: 548: flag = 0;
 11686  064C  01CF               	clrf	sprintf@flag
 11687                           
 11688                           ;doprnt.c: 551: switch(*f) {
 11689                           
 11690                           ;doprnt.c: 550: for(;;) {
 11691  064D  2E53               	goto	l4415
 11692  064E                     l859:	
 11693                           ;doprnt.c: 579: case '0':
 11694                           
 11695                           
 11696                           ;doprnt.c: 580: flag |= 0x04;
 11697  064E  154F               	bsf	sprintf@flag,2
 11698                           
 11699                           ;doprnt.c: 581: f++;
 11700  064F  3001               	movlw	1
 11701  0650  07B6               	addwf	sprintf@f,f
 11702  0651  3000               	movlw	0
 11703  0652  3DB7               	addwfc	sprintf@f+1,f
 11704  0653                     l4415:	
 11705                           ;doprnt.c: 584: }
 11706                           
 11707                           ;doprnt.c: 582: continue;
 11708                           
 11709  0653  0836               	movf	sprintf@f,w
 11710  0654  0084               	movwf	4
 11711  0655  0837               	movf	sprintf@f+1,w
 11712  0656  0085               	movwf	5
 11713  0657  0800               	movf	0,w	;code access
 11714                           
 11715                           ; Switch size 1, requested type "space"
 11716                           ; Number of cases is 1, Range of values is 48 to 48
 11717                           ; switch strategies available:
 11718                           ; Name         Instructions Cycles
 11719                           ; simple_byte            4     3 (average)
 11720                           ; direct_byte           11     9 (fixed)
 11721                           ; jumptable            263     9 (fixed)
 11722                           ;	Chosen strategy is simple_byte
 11723  0658  3A30               	xorlw	48	; case 48
 11724  0659  1903               	skipnz
 11725  065A  2E4E               	goto	l859
 11726  065B  2E5C               	goto	l4417
 11727  065C                     l4417:	
 11728                           ;doprnt.c: 586: }
 11729                           
 11730                           ;doprnt.c: 585: break;
 11731                           
 11732                           
 11733                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11734  065C  0836               	movf	sprintf@f,w
 11735  065D  0084               	movwf	4
 11736  065E  0837               	movf	sprintf@f+1,w
 11737  065F  0085               	movwf	5
 11738  0660  0800               	movf	0,w	;code access
 11739  0661  3190  206D  3186   	fcall	_isdigit
 11740  0664  1C03               	btfss	3,0
 11741  0665  2EE3               	goto	l4453
 11742                           
 11743                           ;doprnt.c: 598: width = 0;
 11744  0666  0020               	movlb	0	; select bank0
 11745  0667  01D0               	clrf	sprintf@width
 11746  0668  01D1               	clrf	sprintf@width+1
 11747  0669                     l4421:	
 11748                           ;doprnt.c: 599: do {
 11749                           
 11750                           
 11751                           ;doprnt.c: 600: width *= 10;
 11752  0669  300A               	movlw	10
 11753  066A  0020               	movlb	0	; select bank0
 11754  066B  00A0               	movwf	___wmul@multiplier
 11755  066C  3000               	movlw	0
 11756  066D  00A1               	movwf	___wmul@multiplier+1
 11757  066E  0851               	movf	sprintf@width+1,w
 11758  066F  00A3               	movwf	___wmul@multiplicand+1
 11759  0670  0850               	movf	sprintf@width,w
 11760  0671  00A2               	movwf	___wmul@multiplicand
 11761  0672  3191  219E  3186   	fcall	___wmul
 11762  0675  0020               	movlb	0	; select bank0
 11763  0676  0821               	movf	?___wmul+1,w
 11764  0677  00D1               	movwf	sprintf@width+1
 11765  0678  0820               	movf	?___wmul,w
 11766  0679  00D0               	movwf	sprintf@width
 11767                           
 11768                           ;doprnt.c: 601: width += *f++ - '0';
 11769  067A  0836               	movf	sprintf@f,w
 11770  067B  0084               	movwf	4
 11771  067C  0837               	movf	sprintf@f+1,w
 11772  067D  0085               	movwf	5
 11773  067E  0800               	movf	0,w	;code access
 11774  067F  3ED0               	addlw	208
 11775  0680  00C4               	movwf	??_sprintf
 11776  0681  30FF               	movlw	255
 11777  0682  1803               	skipnc
 11778  0683  3000               	movlw	0
 11779  0684  00C5               	movwf	??_sprintf+1
 11780  0685  0844               	movf	??_sprintf,w
 11781  0686  07D0               	addwf	sprintf@width,f
 11782  0687  0845               	movf	??_sprintf+1,w
 11783  0688  3DD1               	addwfc	sprintf@width+1,f
 11784  0689  3001               	movlw	1
 11785  068A  07B6               	addwf	sprintf@f,f
 11786  068B  3000               	movlw	0
 11787  068C  3DB7               	addwfc	sprintf@f+1,f
 11788                           
 11789                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11790  068D  0836               	movf	sprintf@f,w
 11791  068E  0084               	movwf	4
 11792  068F  0837               	movf	sprintf@f+1,w
 11793  0690  0085               	movwf	5
 11794  0691  0800               	movf	0,w	;code access
 11795  0692  3190  206D  3186   	fcall	_isdigit
 11796  0695  1C03               	btfss	3,0
 11797  0696  2EE3               	goto	l4453
 11798  0697  2E69               	goto	l4421
 11799  0698                     l4429:	
 11800                           ;doprnt.c: 750: dostring:
 11801                           
 11802                           ;doprnt.c: 698: case 'i':
 11803                           ;doprnt.c: 699: break;
 11804                           
 11805                           ;doprnt.c: 697: case 'd':
 11806                           
 11807                           ;doprnt.c: 638: goto alldone;
 11808                           
 11809                           ;doprnt.c: 637: case 0:
 11810                           
 11811                           ;doprnt.c: 608: }
 11812                           ;doprnt.c: 635: switch(c = *f++) {
 11813                           
 11814                           
 11815                           ;doprnt.c: 757: if(width > len)
 11816  0698  0020               	movlb	0	; select bank0
 11817  0699  0851               	movf	sprintf@width+1,w
 11818  069A  024C               	subwf	sprintf@len+1,w
 11819  069B  1D03               	skipz
 11820  069C  2E9F               	goto	u2885
 11821  069D  0850               	movf	sprintf@width,w
 11822  069E  024B               	subwf	sprintf@len,w
 11823  069F                     u2885:	
 11824  069F  1803               	skipnc
 11825  06A0  2EA6               	goto	l4433
 11826                           
 11827                           ;doprnt.c: 758: width -= len;
 11828  06A1  084B               	movf	sprintf@len,w
 11829  06A2  02D0               	subwf	sprintf@width,f
 11830  06A3  084C               	movf	sprintf@len+1,w
 11831  06A4  3BD1               	subwfb	sprintf@width+1,f
 11832  06A5  2EA8               	goto	l4439
 11833  06A6                     l4433:	
 11834                           
 11835                           ;doprnt.c: 759: else
 11836                           ;doprnt.c: 760: width = 0;
 11837  06A6  01D0               	clrf	sprintf@width
 11838  06A7  01D1               	clrf	sprintf@width+1
 11839  06A8                     l4439:	
 11840                           ;doprnt.c: 764: while(width--)
 11841                           
 11842  06A8  30FF               	movlw	255
 11843  06A9  07D0               	addwf	sprintf@width,f
 11844  06AA  30FF               	movlw	255
 11845  06AB  3DD1               	addwfc	sprintf@width+1,f
 11846  06AC  0A50               	incf	sprintf@width,w
 11847  06AD  1903               	btfsc	3,2
 11848  06AE  0A51               	incf	sprintf@width+1,w
 11849  06AF  1903               	btfsc	3,2
 11850  06B0  2ECF               	goto	l4447
 11851                           
 11852                           ;doprnt.c: 765: ((*sp++ = (' ')));
 11853  06B1  0834               	movf	sprintf@sp,w
 11854  06B2  0086               	movwf	6
 11855  06B3  0835               	movf	sprintf@sp+1,w
 11856  06B4  0087               	movwf	7
 11857  06B5  3020               	movlw	32
 11858  06B6  0081               	movwf	1
 11859  06B7  3001               	movlw	1
 11860  06B8  07B4               	addwf	sprintf@sp,f
 11861  06B9  3000               	movlw	0
 11862  06BA  3DB5               	addwfc	sprintf@sp+1,f
 11863  06BB  2EA8               	goto	l4439
 11864  06BC                     l4441:	
 11865                           ;doprnt.c: 767: while(len--)
 11866                           
 11867                           
 11868                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 11869  06BC  0849               	movf	sprintf@cp,w
 11870  06BD  0086               	movwf	6
 11871  06BE  0187               	clrf	7
 11872  06BF  0801               	movf	1,w
 11873  06C0  00C4               	movwf	??_sprintf
 11874  06C1  0834               	movf	sprintf@sp,w
 11875  06C2  0086               	movwf	6
 11876  06C3  0835               	movf	sprintf@sp+1,w
 11877  06C4  0087               	movwf	7
 11878  06C5  0844               	movf	??_sprintf,w
 11879  06C6  0081               	movwf	1
 11880  06C7  3001               	movlw	1
 11881  06C8  00C4               	movwf	??_sprintf
 11882  06C9  0844               	movf	??_sprintf,w
 11883  06CA  07C9               	addwf	sprintf@cp,f
 11884  06CB  3001               	movlw	1
 11885  06CC  07B4               	addwf	sprintf@sp,f
 11886  06CD  3000               	movlw	0
 11887  06CE  3DB5               	addwfc	sprintf@sp+1,f
 11888  06CF                     l4447:	
 11889  06CF  3001               	movlw	1
 11890  06D0  02CB               	subwf	sprintf@len,f
 11891  06D1  3000               	movlw	0
 11892  06D2  3BCC               	subwfb	sprintf@len+1,f
 11893  06D3  0A4B               	incf	sprintf@len,w
 11894  06D4  1D03               	skipz
 11895  06D5  2EBC               	goto	l4441
 11896  06D6  0A4C               	incf	sprintf@len+1,w
 11897  06D7  1903               	btfsc	3,2
 11898  06D8  2E29               	goto	l4527
 11899  06D9  2EBC               	goto	l4441
 11900  06DA                     l4449:	
 11901                           ;doprnt.c: 802: default:
 11902                           
 11903                           ;doprnt.c: 774: continue;
 11904                           
 11905                           
 11906                           ;doprnt.c: 805: cp = (char *)&c;
 11907  06DA  3052               	movlw	(low (sprintf@c| 0))& (0+255)
 11908  06DB  00C4               	movwf	??_sprintf
 11909  06DC  0844               	movf	??_sprintf,w
 11910  06DD  00C9               	movwf	sprintf@cp
 11911                           
 11912                           ;doprnt.c: 806: len = 1;
 11913  06DE  3001               	movlw	1
 11914  06DF  00CB               	movwf	sprintf@len
 11915  06E0  3000               	movlw	0
 11916  06E1  00CC               	movwf	sprintf@len+1
 11917                           
 11918                           ;doprnt.c: 807: goto dostring;
 11919  06E2  2E98               	goto	l4429
 11920  06E3                     l4453:	
 11921                           ;doprnt.c: 822: }
 11922                           
 11923  06E3  0020               	movlb	0	; select bank0
 11924  06E4  0837               	movf	sprintf@f+1,w
 11925  06E5  00C5               	movwf	??_sprintf+1
 11926  06E6  0836               	movf	sprintf@f,w
 11927  06E7  00C4               	movwf	??_sprintf
 11928  06E8  0AB6               	incf	sprintf@f,f
 11929  06E9  1903               	skipnz
 11930  06EA  0AB7               	incf	sprintf@f+1,f
 11931  06EB  0844               	movf	??_sprintf,w
 11932  06EC  0084               	movwf	4
 11933  06ED  0845               	movf	??_sprintf+1,w
 11934  06EE  0085               	movwf	5
 11935  06EF  0800               	movf	0,w	;code access
 11936  06F0  00D2               	movwf	sprintf@c
 11937                           
 11938                           ; Switch size 1, requested type "space"
 11939                           ; Number of cases is 3, Range of values is 0 to 105
 11940                           ; switch strategies available:
 11941                           ; Name         Instructions Cycles
 11942                           ; simple_byte           10     6 (average)
 11943                           ; direct_byte          218     6 (fixed)
 11944                           ; jumptable            260     6 (fixed)
 11945                           ;	Chosen strategy is simple_byte
 11946  06F1  3A00               	xorlw	0	; case 0
 11947  06F2  1903               	skipnz
 11948  06F3  2FE7               	goto	l4529
 11949  06F4  3A64               	xorlw	100	; case 100
 11950  06F5  1903               	skipnz
 11951  06F6  2EFB               	goto	l4455
 11952  06F7  3A0D               	xorlw	13	; case 105
 11953  06F8  1903               	skipnz
 11954  06F9  2EFB               	goto	l4455
 11955  06FA  2EDA               	goto	l4449
 11956  06FB                     l4455:	
 11957                           
 11958                           ;doprnt.c: 1253: {
 11959                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 11960  06FB  0020               	movlb	0	; select bank0
 11961  06FC  0848               	movf	sprintf@ap,w
 11962  06FD  0086               	movwf	6
 11963  06FE  0187               	clrf	7
 11964  06FF  3F40               	moviw [0]fsr1
 11965  0700  00CD               	movwf	sprintf@val
 11966  0701  3F41               	moviw [1]fsr1
 11967  0702  00CE               	movwf	sprintf@val+1
 11968  0703  3002               	movlw	2
 11969  0704  00C4               	movwf	??_sprintf
 11970  0705  0844               	movf	??_sprintf,w
 11971  0706  07C8               	addwf	sprintf@ap,f
 11972                           
 11973                           ;doprnt.c: 1261: if((int)val < 0) {
 11974  0707  1FCE               	btfss	sprintf@val+1,7
 11975  0708  2F12               	goto	l4465
 11976                           
 11977                           ;doprnt.c: 1262: flag |= 0x03;
 11978  0709  3003               	movlw	3
 11979  070A  00C4               	movwf	??_sprintf
 11980  070B  0844               	movf	??_sprintf,w
 11981  070C  04CF               	iorwf	sprintf@flag,f
 11982                           
 11983                           ;doprnt.c: 1263: val = -val;
 11984  070D  09CD               	comf	sprintf@val,f
 11985  070E  09CE               	comf	sprintf@val+1,f
 11986  070F  0ACD               	incf	sprintf@val,f
 11987  0710  1903               	skipnz
 11988  0711  0ACE               	incf	sprintf@val+1,f
 11989  0712                     l4465:	
 11990                           
 11991                           ;doprnt.c: 1264: }
 11992                           ;doprnt.c: 1266: }
 11993                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11994  0712  01D2               	clrf	sprintf@c
 11995  0713  0AD2               	incf	sprintf@c,f
 11996  0714  3005               	movlw	5
 11997  0715  0652               	xorwf	sprintf@c,w
 11998  0716  1903               	btfsc	3,2
 11999  0717  2F37               	goto	l4477
 12000  0718                     l4471:	
 12001                           
 12002                           ;doprnt.c: 1306: if(val < dpowers[c])
 12003  0718  0852               	movf	sprintf@c,w
 12004  0719  00C4               	movwf	??_sprintf
 12005  071A  01C5               	clrf	??_sprintf+1
 12006  071B  35C4               	lslf	??_sprintf,f
 12007  071C  0DC5               	rlf	??_sprintf+1,f
 12008  071D  3061               	movlw	low (_dpowers| (0+32768))
 12009  071E  0744               	addwf	??_sprintf,w
 12010  071F  0084               	movwf	4
 12011  0720  3098               	movlw	high (_dpowers| (0+32768))
 12012  0721  3D45               	addwfc	??_sprintf+1,w
 12013  0722  0085               	movwf	5
 12014  0723  3F00               	moviw [0]fsr0
 12015  0724  00C6               	movwf	??_sprintf+2
 12016  0725  3F01               	moviw [1]fsr0
 12017  0726  00C7               	movwf	??_sprintf+3
 12018  0727  0847               	movf	??_sprintf+3,w
 12019  0728  024E               	subwf	sprintf@val+1,w
 12020  0729  1D03               	skipz
 12021  072A  2F2D               	goto	u2935
 12022  072B  0846               	movf	??_sprintf+2,w
 12023  072C  024D               	subwf	sprintf@val,w
 12024  072D                     u2935:	
 12025  072D  1C03               	btfss	3,0
 12026  072E  2F37               	goto	l4477
 12027                           
 12028                           ;doprnt.c: 1307: break;
 12029  072F  3001               	movlw	1
 12030  0730  00C4               	movwf	??_sprintf
 12031  0731  0844               	movf	??_sprintf,w
 12032  0732  07D2               	addwf	sprintf@c,f
 12033  0733  3005               	movlw	5
 12034  0734  0652               	xorwf	sprintf@c,w
 12035  0735  1D03               	btfss	3,2
 12036  0736  2F18               	goto	l4471
 12037  0737                     l4477:	
 12038                           
 12039                           ;doprnt.c: 1345: if(width && flag & 0x03)
 12040  0737  0850               	movf	sprintf@width,w
 12041  0738  0451               	iorwf	sprintf@width+1,w
 12042  0739  1903               	btfsc	3,2
 12043  073A  2F43               	goto	l886
 12044  073B  084F               	movf	sprintf@flag,w
 12045  073C  3903               	andlw	3
 12046  073D  1903               	btfsc	3,2
 12047  073E  2F43               	goto	l886
 12048                           
 12049                           ;doprnt.c: 1346: width--;
 12050  073F  30FF               	movlw	255
 12051  0740  07D0               	addwf	sprintf@width,f
 12052  0741  30FF               	movlw	255
 12053  0742  3DD1               	addwfc	sprintf@width+1,f
 12054  0743                     l886:	
 12055                           
 12056                           ;doprnt.c: 1381: if(width > c)
 12057  0743  0852               	movf	sprintf@c,w
 12058  0744  00C4               	movwf	??_sprintf
 12059  0745  01C5               	clrf	??_sprintf+1
 12060  0746  1BC4               	btfsc	??_sprintf,7
 12061  0747  03C5               	decf	??_sprintf+1,f
 12062  0748  0845               	movf	??_sprintf+1,w
 12063  0749  3A80               	xorlw	128
 12064  074A  00C6               	movwf	??_sprintf+2
 12065  074B  0851               	movf	sprintf@width+1,w
 12066  074C  3A80               	xorlw	128
 12067  074D  0246               	subwf	??_sprintf+2,w
 12068  074E  1D03               	skipz
 12069  074F  2F52               	goto	u2975
 12070  0750  0850               	movf	sprintf@width,w
 12071  0751  0244               	subwf	??_sprintf,w
 12072  0752                     u2975:	
 12073  0752  1803               	skipnc
 12074  0753  2F5F               	goto	l4485
 12075                           
 12076                           ;doprnt.c: 1382: width -= c;
 12077  0754  0020               	movlb	0	; select bank0
 12078  0755  0852               	movf	sprintf@c,w
 12079  0756  00C4               	movwf	??_sprintf
 12080  0757  01C5               	clrf	??_sprintf+1
 12081  0758  1BC4               	btfsc	??_sprintf,7
 12082  0759  03C5               	decf	??_sprintf+1,f
 12083  075A  0844               	movf	??_sprintf,w
 12084  075B  02D0               	subwf	sprintf@width,f
 12085  075C  0845               	movf	??_sprintf+1,w
 12086  075D  3BD1               	subwfb	sprintf@width+1,f
 12087  075E  2F62               	goto	l4487
 12088  075F                     l4485:	
 12089                           
 12090                           ;doprnt.c: 1383: else
 12091                           ;doprnt.c: 1384: width = 0;
 12092  075F  0020               	movlb	0	; select bank0
 12093  0760  01D0               	clrf	sprintf@width
 12094  0761  01D1               	clrf	sprintf@width+1
 12095  0762                     l4487:	
 12096                           
 12097                           ;doprnt.c: 1387: if(flag & 0x04) {
 12098  0762  1D4F               	btfss	sprintf@flag,2
 12099  0763  2F85               	goto	l4503
 12100                           
 12101                           ;doprnt.c: 1392: if(flag & 0x03)
 12102  0764  084F               	movf	sprintf@flag,w
 12103  0765  3903               	andlw	3
 12104  0766  1903               	btfsc	3,2
 12105  0767  2F72               	goto	l4495
 12106                           
 12107                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 12108  0768  0834               	movf	sprintf@sp,w
 12109  0769  0086               	movwf	6
 12110  076A  0835               	movf	sprintf@sp+1,w
 12111  076B  0087               	movwf	7
 12112  076C  302D               	movlw	45
 12113  076D  0081               	movwf	1
 12114  076E  3001               	movlw	1
 12115  076F  07B4               	addwf	sprintf@sp,f
 12116  0770  3000               	movlw	0
 12117  0771  3DB5               	addwfc	sprintf@sp+1,f
 12118  0772                     l4495:	
 12119                           
 12120                           ;doprnt.c: 1415: if(width)
 12121  0772  0850               	movf	sprintf@width,w
 12122  0773  0451               	iorwf	sprintf@width+1,w
 12123  0774  1903               	btfsc	3,2
 12124  0775  2FA9               	goto	l4517
 12125                           
 12126                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 12127                           
 12128                           ;doprnt.c: 1416: do
 12129  0776  0834               	movf	sprintf@sp,w
 12130  0777  0086               	movwf	6
 12131  0778  0835               	movf	sprintf@sp+1,w
 12132  0779  0087               	movwf	7
 12133  077A  3030               	movlw	48
 12134  077B  0081               	movwf	1
 12135  077C  3001               	movlw	1
 12136  077D  07B4               	addwf	sprintf@sp,f
 12137  077E  3000               	movlw	0
 12138  077F  3DB5               	addwfc	sprintf@sp+1,f
 12139                           
 12140                           ;doprnt.c: 1418: while(--width);
 12141  0780  30FF               	movlw	255
 12142  0781  07D0               	addwf	sprintf@width,f
 12143  0782  30FF               	movlw	255
 12144  0783  3DD1               	addwfc	sprintf@width+1,f
 12145  0784  2F72               	goto	l4495
 12146  0785                     l4503:	
 12147                           ;doprnt.c: 1420: } else
 12148                           
 12149                           
 12150                           ;doprnt.c: 1422: {
 12151                           ;doprnt.c: 1424: if(width
 12152                           ;doprnt.c: 1428: )
 12153  0785  0850               	movf	sprintf@width,w
 12154  0786  0451               	iorwf	sprintf@width+1,w
 12155  0787  1903               	btfsc	3,2
 12156  0788  2F9B               	goto	l4511
 12157  0789                     l4505:	
 12158                           ;doprnt.c: 1429: do
 12159                           
 12160                           
 12161                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 12162  0789  0834               	movf	sprintf@sp,w
 12163  078A  0086               	movwf	6
 12164  078B  0835               	movf	sprintf@sp+1,w
 12165  078C  0087               	movwf	7
 12166  078D  3020               	movlw	32
 12167  078E  0081               	movwf	1
 12168  078F  3001               	movlw	1
 12169  0790  07B4               	addwf	sprintf@sp,f
 12170  0791  3000               	movlw	0
 12171  0792  3DB5               	addwfc	sprintf@sp+1,f
 12172                           
 12173                           ;doprnt.c: 1431: while(--width);
 12174  0793  30FF               	movlw	255
 12175  0794  07D0               	addwf	sprintf@width,f
 12176  0795  30FF               	movlw	255
 12177  0796  3DD1               	addwfc	sprintf@width+1,f
 12178  0797  0850               	movf	sprintf@width,w
 12179  0798  0451               	iorwf	sprintf@width+1,w
 12180  0799  1D03               	btfss	3,2
 12181  079A  2F89               	goto	l4505
 12182  079B                     l4511:	
 12183                           
 12184                           ;doprnt.c: 1438: if(flag & 0x03)
 12185  079B  084F               	movf	sprintf@flag,w
 12186  079C  3903               	andlw	3
 12187  079D  1903               	btfsc	3,2
 12188  079E  2FA9               	goto	l4517
 12189                           
 12190                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 12191  079F  0834               	movf	sprintf@sp,w
 12192  07A0  0086               	movwf	6
 12193  07A1  0835               	movf	sprintf@sp+1,w
 12194  07A2  0087               	movwf	7
 12195  07A3  302D               	movlw	45
 12196  07A4  0081               	movwf	1
 12197  07A5  3001               	movlw	1
 12198  07A6  07B4               	addwf	sprintf@sp,f
 12199  07A7  3000               	movlw	0
 12200  07A8  3DB5               	addwfc	sprintf@sp+1,f
 12201  07A9                     l4517:	
 12202                           
 12203                           ;doprnt.c: 1469: }
 12204                           ;doprnt.c: 1472: prec = c;
 12205  07A9  0852               	movf	sprintf@c,w
 12206  07AA  00C4               	movwf	??_sprintf
 12207  07AB  0844               	movf	??_sprintf,w
 12208  07AC  00CA               	movwf	sprintf@prec
 12209  07AD                     l4525:	
 12210                           ;doprnt.c: 1474: while(prec--) {
 12211                           
 12212  07AD  30FF               	movlw	255
 12213  07AE  00C4               	movwf	??_sprintf
 12214  07AF  0844               	movf	??_sprintf,w
 12215  07B0  07CA               	addwf	sprintf@prec,f
 12216  07B1  0A4A               	incf	sprintf@prec,w
 12217  07B2  1903               	btfsc	3,2
 12218  07B3  2E29               	goto	l4527
 12219                           
 12220                           ;doprnt.c: 1478: {
 12221                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 12222  07B4  300A               	movlw	10
 12223  07B5  00AE               	movwf	___lwmod@divisor
 12224  07B6  3000               	movlw	0
 12225  07B7  00AF               	movwf	___lwmod@divisor+1
 12226  07B8  084A               	movf	sprintf@prec,w
 12227  07B9  00C4               	movwf	??_sprintf
 12228  07BA  01C5               	clrf	??_sprintf+1
 12229  07BB  35C4               	lslf	??_sprintf,f
 12230  07BC  0DC5               	rlf	??_sprintf+1,f
 12231  07BD  3061               	movlw	low (_dpowers| (0+32768))
 12232  07BE  0744               	addwf	??_sprintf,w
 12233  07BF  0084               	movwf	4
 12234  07C0  3098               	movlw	high (_dpowers| (0+32768))
 12235  07C1  3D45               	addwfc	??_sprintf+1,w
 12236  07C2  0085               	movwf	5
 12237  07C3  3F00               	moviw [0]fsr0
 12238  07C4  00A6               	movwf	___lwdiv@divisor
 12239  07C5  3F01               	moviw [1]fsr0
 12240  07C6  00A7               	movwf	___lwdiv@divisor+1
 12241  07C7  084E               	movf	sprintf@val+1,w
 12242  07C8  00A9               	movwf	___lwdiv@dividend+1
 12243  07C9  084D               	movf	sprintf@val,w
 12244  07CA  00A8               	movwf	___lwdiv@dividend
 12245  07CB  3194  248B  3186   	fcall	___lwdiv
 12246  07CE  0020               	movlb	0	; select bank0
 12247  07CF  0827               	movf	?___lwdiv+1,w
 12248  07D0  00B1               	movwf	___lwmod@dividend+1
 12249  07D1  0826               	movf	?___lwdiv,w
 12250  07D2  00B0               	movwf	___lwmod@dividend
 12251  07D3  3193  236B  3186   	fcall	___lwmod
 12252  07D6  0020               	movlb	0	; select bank0
 12253  07D7  082E               	movf	?___lwmod,w
 12254  07D8  3E30               	addlw	48
 12255  07D9  00C6               	movwf	??_sprintf+2
 12256  07DA  0846               	movf	??_sprintf+2,w
 12257  07DB  00D2               	movwf	sprintf@c
 12258                           
 12259                           ;doprnt.c: 1523: }
 12260                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12261  07DC  0834               	movf	sprintf@sp,w
 12262  07DD  0086               	movwf	6
 12263  07DE  0835               	movf	sprintf@sp+1,w
 12264  07DF  0087               	movwf	7
 12265  07E0  0852               	movf	sprintf@c,w
 12266  07E1  0081               	movwf	1
 12267  07E2  3001               	movlw	1
 12268  07E3  07B4               	addwf	sprintf@sp,f
 12269  07E4  3000               	movlw	0
 12270  07E5  3DB5               	addwfc	sprintf@sp+1,f
 12271  07E6  2FAD               	goto	l4525
 12272  07E7                     l4529:	
 12273                           ;doprnt.c: 1525: }
 12274                           ;doprnt.c: 1533: }
 12275                           ;doprnt.c: 1535: alldone:
 12276                           
 12277                           
 12278                           ;doprnt.c: 1538: *sp = 0;
 12279  07E7  0020               	movlb	0	; select bank0
 12280  07E8  0834               	movf	sprintf@sp,w
 12281  07E9  0086               	movwf	6
 12282  07EA  0835               	movf	sprintf@sp+1,w
 12283  07EB  0087               	movwf	7
 12284  07EC  0181               	clrf	1
 12285  07ED  0008               	return
 12286  07EE                     __end_of_sprintf:	
 12287                           ;doprnt.c: 1540: return 0;
 12288                           ;	Return value of _sprintf is never used
 12289                           
 12290                           
 12291                           	psect	text23
 12292  106D                     __ptext23:	
 12293 ;; *************** function _isdigit *****************
 12294 ;; Defined at:
 12295 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 12296 ;; Parameters:    Size  Location     Type
 12297 ;;  c               1    wreg     unsigned char 
 12298 ;; Auto vars:     Size  Location     Type
 12299 ;;  c               1    1[BANK0 ] unsigned char 
 12300 ;; Return value:  Size  Location     Type
 12301 ;;		None               void
 12302 ;; Registers used:
 12303 ;;		wreg, status,2, status,0
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12310 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;Total ram usage:        2 bytes
 12314 ;; Hardware stack levels used:    1
 12315 ;; Hardware stack levels required when called:    6
 12316 ;; This function calls:
 12317 ;;		Nothing
 12318 ;; This function is called by:
 12319 ;;		_sprintf
 12320 ;; This function uses a non-reentrant model
 12321 ;;
 12322                           
 12323                           
 12324                           ;psect for function _isdigit
 12325  106D                     _isdigit:	
 12326                           
 12327                           ;incstack = 0
 12328                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 12329                           ;isdigit@c stored from wreg
 12330  106D  0020               	movlb	0	; select bank0
 12331  106E  00A1               	movwf	isdigit@c
 12332  106F  01A0               	clrf	_isdigit$2032
 12333  1070  303A               	movlw	58
 12334  1071  0221               	subwf	isdigit@c,w
 12335  1072  1803               	skipnc
 12336  1073  287A               	goto	l4041
 12337  1074  3030               	movlw	48
 12338  1075  0221               	subwf	isdigit@c,w
 12339  1076  1C03               	skipc
 12340  1077  287A               	goto	l4041
 12341  1078  01A0               	clrf	_isdigit$2032
 12342  1079  0AA0               	incf	_isdigit$2032,f
 12343  107A                     l4041:	
 12344  107A  0C20               	rrf	_isdigit$2032,w
 12345  107B  0008               	return
 12346  107C                     __end_of_isdigit:	
 12347                           
 12348                           	psect	text24
 12349  136B                     __ptext24:	
 12350 ;; *************** function ___lwmod *****************
 12351 ;; Defined at:
 12352 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 12353 ;; Parameters:    Size  Location     Type
 12354 ;;  divisor         2   14[BANK0 ] unsigned int 
 12355 ;;  dividend        2   16[BANK0 ] unsigned int 
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  counter         1   19[BANK0 ] unsigned char 
 12358 ;; Return value:  Size  Location     Type
 12359 ;;                  2   14[BANK0 ] unsigned int 
 12360 ;; Registers used:
 12361 ;;		wreg, status,2, status,0
 12362 ;; Tracked objects:
 12363 ;;		On entry : 0/0
 12364 ;;		On exit  : 0/0
 12365 ;;		Unchanged: 0/0
 12366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12367 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12369 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12370 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12371 ;;Total ram usage:        6 bytes
 12372 ;; Hardware stack levels used:    1
 12373 ;; Hardware stack levels required when called:    6
 12374 ;; This function calls:
 12375 ;;		Nothing
 12376 ;; This function is called by:
 12377 ;;		_sprintf
 12378 ;;		_dylen
 12379 ;;		_isleap
 12380 ;; This function uses a non-reentrant model
 12381 ;;
 12382                           
 12383                           
 12384                           ;psect for function ___lwmod
 12385  136B                     ___lwmod:	
 12386                           
 12387                           ;incstack = 0
 12388                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12389  136B  0020               	movlb	0	; select bank0
 12390  136C  082E               	movf	___lwmod@divisor,w
 12391  136D  042F               	iorwf	___lwmod@divisor+1,w
 12392  136E  1903               	btfsc	3,2
 12393  136F  2B93               	goto	l3789
 12394  1370  01B3               	clrf	___lwmod@counter
 12395  1371  0AB3               	incf	___lwmod@counter,f
 12396  1372                     l3779:	
 12397  1372  1BAF               	btfsc	___lwmod@divisor+1,7
 12398  1373  2B7E               	goto	l3781
 12399  1374  3001               	movlw	1
 12400  1375                     u2125:	
 12401  1375  35AE               	lslf	___lwmod@divisor,f
 12402  1376  0DAF               	rlf	___lwmod@divisor+1,f
 12403  1377  0B89               	decfsz	9,f
 12404  1378  2B75               	goto	u2125
 12405  1379  3001               	movlw	1
 12406  137A  00B2               	movwf	??___lwmod
 12407  137B  0832               	movf	??___lwmod,w
 12408  137C  07B3               	addwf	___lwmod@counter,f
 12409  137D  2B72               	goto	l3779
 12410  137E                     l3781:	
 12411  137E  082F               	movf	___lwmod@divisor+1,w
 12412  137F  0231               	subwf	___lwmod@dividend+1,w
 12413  1380  1D03               	skipz
 12414  1381  2B84               	goto	u2145
 12415  1382  082E               	movf	___lwmod@divisor,w
 12416  1383  0230               	subwf	___lwmod@dividend,w
 12417  1384                     u2145:	
 12418  1384  1C03               	skipc
 12419  1385  2B8A               	goto	l3785
 12420  1386  082E               	movf	___lwmod@divisor,w
 12421  1387  02B0               	subwf	___lwmod@dividend,f
 12422  1388  082F               	movf	___lwmod@divisor+1,w
 12423  1389  3BB1               	subwfb	___lwmod@dividend+1,f
 12424  138A                     l3785:	
 12425  138A  3001               	movlw	1
 12426  138B                     u2155:	
 12427  138B  36AF               	lsrf	___lwmod@divisor+1,f
 12428  138C  0CAE               	rrf	___lwmod@divisor,f
 12429  138D  0B89               	decfsz	9,f
 12430  138E  2B8B               	goto	u2155
 12431  138F  3001               	movlw	1
 12432  1390  02B3               	subwf	___lwmod@counter,f
 12433  1391  1D03               	btfss	3,2
 12434  1392  2B7E               	goto	l3781
 12435  1393                     l3789:	
 12436  1393  0831               	movf	___lwmod@dividend+1,w
 12437  1394  00AF               	movwf	?___lwmod+1
 12438  1395  0830               	movf	___lwmod@dividend,w
 12439  1396  00AE               	movwf	?___lwmod
 12440  1397  0008               	return
 12441  1398                     __end_of___lwmod:	
 12442                           
 12443                           	psect	text25
 12444  148B                     __ptext25:	
 12445 ;; *************** function ___lwdiv *****************
 12446 ;; Defined at:
 12447 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 12448 ;; Parameters:    Size  Location     Type
 12449 ;;  divisor         2    6[BANK0 ] unsigned int 
 12450 ;;  dividend        2    8[BANK0 ] unsigned int 
 12451 ;; Auto vars:     Size  Location     Type
 12452 ;;  quotient        2   11[BANK0 ] unsigned int 
 12453 ;;  counter         1   13[BANK0 ] unsigned char 
 12454 ;; Return value:  Size  Location     Type
 12455 ;;                  2    6[BANK0 ] unsigned int 
 12456 ;; Registers used:
 12457 ;;		wreg, status,2, status,0
 12458 ;; Tracked objects:
 12459 ;;		On entry : 0/0
 12460 ;;		On exit  : 0/0
 12461 ;;		Unchanged: 0/0
 12462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12463 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12464 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;Total ram usage:        8 bytes
 12468 ;; Hardware stack levels used:    1
 12469 ;; Hardware stack levels required when called:    6
 12470 ;; This function calls:
 12471 ;;		Nothing
 12472 ;; This function is called by:
 12473 ;;		_sprintf
 12474 ;;		_months_to_days
 12475 ;;		_years_to_days
 12476 ;; This function uses a non-reentrant model
 12477 ;;
 12478                           
 12479                           
 12480                           ;psect for function ___lwdiv
 12481  148B                     ___lwdiv:	
 12482                           
 12483                           ;incstack = 0
 12484                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12485  148B  0020               	movlb	0	; select bank0
 12486  148C  01AB               	clrf	___lwdiv@quotient
 12487  148D  01AC               	clrf	___lwdiv@quotient+1
 12488  148E  0826               	movf	___lwdiv@divisor,w
 12489  148F  0427               	iorwf	___lwdiv@divisor+1,w
 12490  1490  1903               	btfsc	3,2
 12491  1491  2CBB               	goto	l3767
 12492  1492  01AD               	clrf	___lwdiv@counter
 12493  1493  0AAD               	incf	___lwdiv@counter,f
 12494  1494                     l3755:	
 12495  1494  1BA7               	btfsc	___lwdiv@divisor+1,7
 12496  1495  2CA0               	goto	l3757
 12497  1496  3001               	movlw	1
 12498  1497                     u2055:	
 12499  1497  35A6               	lslf	___lwdiv@divisor,f
 12500  1498  0DA7               	rlf	___lwdiv@divisor+1,f
 12501  1499  0B89               	decfsz	9,f
 12502  149A  2C97               	goto	u2055
 12503  149B  3001               	movlw	1
 12504  149C  00AA               	movwf	??___lwdiv
 12505  149D  082A               	movf	??___lwdiv,w
 12506  149E  07AD               	addwf	___lwdiv@counter,f
 12507  149F  2C94               	goto	l3755
 12508  14A0                     l3757:	
 12509  14A0  3001               	movlw	1
 12510  14A1                     u2075:	
 12511  14A1  35AB               	lslf	___lwdiv@quotient,f
 12512  14A2  0DAC               	rlf	___lwdiv@quotient+1,f
 12513  14A3  0B89               	decfsz	9,f
 12514  14A4  2CA1               	goto	u2075
 12515  14A5  0827               	movf	___lwdiv@divisor+1,w
 12516  14A6  0229               	subwf	___lwdiv@dividend+1,w
 12517  14A7  1D03               	skipz
 12518  14A8  2CAB               	goto	u2085
 12519  14A9  0826               	movf	___lwdiv@divisor,w
 12520  14AA  0228               	subwf	___lwdiv@dividend,w
 12521  14AB                     u2085:	
 12522  14AB  1C03               	skipc
 12523  14AC  2CB2               	goto	l3763
 12524  14AD  0826               	movf	___lwdiv@divisor,w
 12525  14AE  02A8               	subwf	___lwdiv@dividend,f
 12526  14AF  0827               	movf	___lwdiv@divisor+1,w
 12527  14B0  3BA9               	subwfb	___lwdiv@dividend+1,f
 12528  14B1  142B               	bsf	___lwdiv@quotient,0
 12529  14B2                     l3763:	
 12530  14B2  3001               	movlw	1
 12531  14B3                     u2095:	
 12532  14B3  36A7               	lsrf	___lwdiv@divisor+1,f
 12533  14B4  0CA6               	rrf	___lwdiv@divisor,f
 12534  14B5  0B89               	decfsz	9,f
 12535  14B6  2CB3               	goto	u2095
 12536  14B7  3001               	movlw	1
 12537  14B8  02AD               	subwf	___lwdiv@counter,f
 12538  14B9  1D03               	btfss	3,2
 12539  14BA  2CA0               	goto	l3757
 12540  14BB                     l3767:	
 12541  14BB  082C               	movf	___lwdiv@quotient+1,w
 12542  14BC  00A7               	movwf	?___lwdiv+1
 12543  14BD  082B               	movf	___lwdiv@quotient,w
 12544  14BE  00A6               	movwf	?___lwdiv
 12545  14BF  0008               	return
 12546  14C0                     __end_of___lwdiv:	
 12547                           
 12548                           	psect	text26
 12549  0A2B                     __ptext26:	
 12550 ;; *************** function _Modify_Data *****************
 12551 ;; Defined at:
 12552 ;;		line 115 in file "oled.c"
 12553 ;; Parameters:    Size  Location     Type
 12554 ;;  c               2    6[BANK0 ] PTR unsigned char 
 12555 ;;		 -> CharacterArray(100), 
 12556 ;;  offset          2    8[BANK0 ] unsigned int 
 12557 ;;  limit           2   10[BANK0 ] unsigned int 
 12558 ;; Auto vars:     Size  Location     Type
 12559 ;;  right           2   21[BANK0 ] int 
 12560 ;;  p               2   23[BANK0 ] int 
 12561 ;;  j               2   25[BANK0 ] unsigned int 
 12562 ;; Return value:  Size  Location     Type
 12563 ;;                  1    wreg      void 
 12564 ;; Registers used:
 12565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12566 ;; Tracked objects:
 12567 ;;		On entry : 0/0
 12568 ;;		On exit  : 0/0
 12569 ;;		Unchanged: 0/0
 12570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12571 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12572 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12573 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12574 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12575 ;;Total ram usage:       21 bytes
 12576 ;; Hardware stack levels used:    1
 12577 ;; Hardware stack levels required when called:    7
 12578 ;; This function calls:
 12579 ;;		___wmul
 12580 ;; This function is called by:
 12581 ;;		_Write_String
 12582 ;; This function uses a non-reentrant model
 12583 ;;
 12584                           
 12585                           
 12586                           ;psect for function _Modify_Data
 12587  0A2B                     _Modify_Data:	
 12588                           
 12589                           ;oled.c: 119: unsigned int j;
 12590                           ;oled.c: 120: for(int p=0;p<=limit;p++)
 12591                           
 12592                           ;incstack = 0
 12593                           ; Regs used in _Modify_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12594  0A2B  0020               	movlb	0	; select bank0
 12595  0A2C  01B7               	clrf	Modify_Data@p
 12596  0A2D  01B8               	clrf	Modify_Data@p+1
 12597  0A2E                     l838:	
 12598  0A2E  0838               	movf	Modify_Data@p+1,w
 12599  0A2F  022B               	subwf	Modify_Data@limit+1,w
 12600  0A30  1D03               	skipz
 12601  0A31  2A34               	goto	u3145
 12602  0A32  0837               	movf	Modify_Data@p,w
 12603  0A33  022A               	subwf	Modify_Data@limit,w
 12604  0A34                     u3145:	
 12605  0A34  1C03               	btfss	3,0
 12606  0A35  0008               	return
 12607                           
 12608                           ;oled.c: 121: {
 12609                           ;oled.c: 122: for(j=0;j<5;j++)
 12610  0A36  01B9               	clrf	Modify_Data@j
 12611  0A37  01BA               	clrf	Modify_Data@j+1
 12612  0A38  3000               	movlw	0
 12613  0A39  023A               	subwf	Modify_Data@j+1,w
 12614  0A3A  3005               	movlw	5
 12615  0A3B  1903               	skipnz
 12616  0A3C  0239               	subwf	Modify_Data@j,w
 12617  0A3D  1803               	btfsc	3,0
 12618  0A3E  2A97               	goto	l4583
 12619  0A3F                     l4575:	
 12620                           
 12621                           ;oled.c: 123: {
 12622                           ;oled.c: 124: int right;
 12623                           ;oled.c: 125: right=(j+((int)(c[p])-0x20)*5);
 12624  0A3F  0837               	movf	Modify_Data@p,w
 12625  0A40  0726               	addwf	Modify_Data@c,w
 12626  0A41  0086               	movwf	6
 12627  0A42  0838               	movf	Modify_Data@p+1,w
 12628  0A43  3D27               	addwfc	Modify_Data@c+1,w
 12629  0A44  0087               	movwf	7
 12630  0A45  0801               	movf	1,w
 12631  0A46  3EE0               	addlw	224
 12632  0A47  00A0               	movwf	___wmul@multiplier
 12633  0A48  30FF               	movlw	255
 12634  0A49  1803               	skipnc
 12635  0A4A  3000               	movlw	0
 12636  0A4B  00A1               	movwf	___wmul@multiplier+1
 12637  0A4C  3005               	movlw	5
 12638  0A4D  00A2               	movwf	___wmul@multiplicand
 12639  0A4E  3000               	movlw	0
 12640  0A4F  00A3               	movwf	___wmul@multiplicand+1
 12641  0A50  3191  219E  318A   	fcall	___wmul
 12642  0A53  0020               	movlb	0	; select bank0
 12643  0A54  0839               	movf	Modify_Data@j,w
 12644  0A55  0720               	addwf	?___wmul,w
 12645  0A56  00B5               	movwf	Modify_Data@right
 12646  0A57  083A               	movf	Modify_Data@j+1,w
 12647  0A58  3D21               	addwfc	?___wmul+1,w
 12648  0A59  00B6               	movwf	Modify_Data@right+1
 12649                           
 12650                           ;oled.c: 126: displayArray[offset+j+(p*5)]=lookup[right];
 12651  0A5A  0836               	movf	Modify_Data@right+1,w
 12652  0A5B  0085               	movwf	5
 12653  0A5C  0835               	movf	Modify_Data@right,w
 12654  0A5D  0084               	movwf	4
 12655  0A5E  3049               	movlw	low (_lookup| (0+32768))
 12656  0A5F  0784               	addwf	4,f
 12657  0A60  3084               	movlw	high (_lookup| (0+32768))
 12658  0A61  3D85               	addwfc	5,f
 12659  0A62  0800               	movf	0,w	;code access
 12660  0A63  00AC               	movwf	??_Modify_Data
 12661  0A64  0838               	movf	Modify_Data@p+1,w
 12662  0A65  00A1               	movwf	___wmul@multiplier+1
 12663  0A66  0837               	movf	Modify_Data@p,w
 12664  0A67  00A0               	movwf	___wmul@multiplier
 12665  0A68  3005               	movlw	5
 12666  0A69  00A2               	movwf	___wmul@multiplicand
 12667  0A6A  3000               	movlw	0
 12668  0A6B  00A3               	movwf	___wmul@multiplicand+1
 12669  0A6C  3191  219E  318A   	fcall	___wmul
 12670  0A6F  0020               	movlb	0	; select bank0
 12671  0A70  0828               	movf	Modify_Data@offset,w
 12672  0A71  0720               	addwf	?___wmul,w
 12673  0A72  00AD               	movwf	??_Modify_Data+1
 12674  0A73  0829               	movf	Modify_Data@offset+1,w
 12675  0A74  3D21               	addwfc	?___wmul+1,w
 12676  0A75  00AE               	movwf	??_Modify_Data+2
 12677  0A76  0839               	movf	Modify_Data@j,w
 12678  0A77  072D               	addwf	??_Modify_Data+1,w
 12679  0A78  00AF               	movwf	??_Modify_Data+3
 12680  0A79  083A               	movf	Modify_Data@j+1,w
 12681  0A7A  3D2E               	addwfc	??_Modify_Data+2,w
 12682  0A7B  00B0               	movwf	??_Modify_Data+4
 12683  0A7C  30B1               	movlw	177
 12684  0A7D  00B1               	movwf	??_Modify_Data+5
 12685  0A7E  3021               	movlw	33
 12686  0A7F  00B2               	movwf	??_Modify_Data+6
 12687  0A80  082F               	movf	??_Modify_Data+3,w
 12688  0A81  0731               	addwf	??_Modify_Data+5,w
 12689  0A82  00B3               	movwf	??_Modify_Data+7
 12690  0A83  0830               	movf	??_Modify_Data+4,w
 12691  0A84  3D32               	addwfc	??_Modify_Data+6,w
 12692  0A85  00B4               	movwf	??_Modify_Data+8
 12693  0A86  0833               	movf	??_Modify_Data+7,w
 12694  0A87  0086               	movwf	6
 12695  0A88  0834               	movf	??_Modify_Data+8,w
 12696  0A89  0087               	movwf	7
 12697  0A8A  082C               	movf	??_Modify_Data,w
 12698  0A8B  0081               	movwf	1
 12699  0A8C  3001               	movlw	1
 12700  0A8D  07B9               	addwf	Modify_Data@j,f
 12701  0A8E  3000               	movlw	0
 12702  0A8F  3DBA               	addwfc	Modify_Data@j+1,f
 12703  0A90  3000               	movlw	0
 12704  0A91  023A               	subwf	Modify_Data@j+1,w
 12705  0A92  3005               	movlw	5
 12706  0A93  1903               	skipnz
 12707  0A94  0239               	subwf	Modify_Data@j,w
 12708  0A95  1C03               	skipc
 12709  0A96  2A3F               	goto	l4575
 12710  0A97                     l4583:	
 12711  0A97  3001               	movlw	1
 12712  0A98  07B7               	addwf	Modify_Data@p,f
 12713  0A99  3000               	movlw	0
 12714  0A9A  3DB8               	addwfc	Modify_Data@p+1,f
 12715  0A9B  2A2E               	goto	l838
 12716  0A9C                     __end_of_Modify_Data:	
 12717                           
 12718                           	psect	text27
 12719  119E                     __ptext27:	
 12720 ;; *************** function ___wmul *****************
 12721 ;; Defined at:
 12722 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 12723 ;; Parameters:    Size  Location     Type
 12724 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12725 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12726 ;; Auto vars:     Size  Location     Type
 12727 ;;  product         2    4[BANK0 ] unsigned int 
 12728 ;; Return value:  Size  Location     Type
 12729 ;;                  2    0[BANK0 ] unsigned int 
 12730 ;; Registers used:
 12731 ;;		wreg, status,2, status,0
 12732 ;; Tracked objects:
 12733 ;;		On entry : 0/0
 12734 ;;		On exit  : 0/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12738 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;Total ram usage:        6 bytes
 12742 ;; Hardware stack levels used:    1
 12743 ;; Hardware stack levels required when called:    6
 12744 ;; This function calls:
 12745 ;;		Nothing
 12746 ;; This function is called by:
 12747 ;;		_Modify_Data
 12748 ;;		_sprintf
 12749 ;;		_months_to_days
 12750 ;;		_asctime
 12751 ;; This function uses a non-reentrant model
 12752 ;;
 12753                           
 12754                           
 12755                           ;psect for function ___wmul
 12756  119E                     ___wmul:	
 12757                           
 12758                           ;incstack = 0
 12759                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12760  119E  0020               	movlb	0	; select bank0
 12761  119F  01A4               	clrf	___wmul@product
 12762  11A0  01A5               	clrf	___wmul@product+1
 12763  11A1                     l3719:	
 12764  11A1  1C20               	btfss	___wmul@multiplier,0
 12765  11A2  29A7               	goto	l985
 12766  11A3  0822               	movf	___wmul@multiplicand,w
 12767  11A4  07A4               	addwf	___wmul@product,f
 12768  11A5  0823               	movf	___wmul@multiplicand+1,w
 12769  11A6  3DA5               	addwfc	___wmul@product+1,f
 12770  11A7                     l985:	
 12771  11A7  3001               	movlw	1
 12772  11A8                     u1975:	
 12773  11A8  35A2               	lslf	___wmul@multiplicand,f
 12774  11A9  0DA3               	rlf	___wmul@multiplicand+1,f
 12775  11AA  0B89               	decfsz	9,f
 12776  11AB  29A8               	goto	u1975
 12777  11AC  3001               	movlw	1
 12778  11AD                     u1985:	
 12779  11AD  36A1               	lsrf	___wmul@multiplier+1,f
 12780  11AE  0CA0               	rrf	___wmul@multiplier,f
 12781  11AF  0B89               	decfsz	9,f
 12782  11B0  29AD               	goto	u1985
 12783  11B1  0820               	movf	___wmul@multiplier,w
 12784  11B2  0421               	iorwf	___wmul@multiplier+1,w
 12785  11B3  1D03               	btfss	3,2
 12786  11B4  29A1               	goto	l3719
 12787  11B5  0825               	movf	___wmul@product+1,w
 12788  11B6  00A1               	movwf	?___wmul+1
 12789  11B7  0824               	movf	___wmul@product,w
 12790  11B8  00A0               	movwf	?___wmul
 12791  11B9  0008               	return
 12792  11BA                     __end_of___wmul:	
 12793                           
 12794                           	psect	text28
 12795  1E68                     __ptext28:	
 12796 ;; *************** function _SetupClock *****************
 12797 ;; Defined at:
 12798 ;;		line 58 in file "main.c"
 12799 ;; Parameters:    Size  Location     Type
 12800 ;;		None
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;		None
 12803 ;; Return value:  Size  Location     Type
 12804 ;;                  1    wreg      void 
 12805 ;; Registers used:
 12806 ;;		None
 12807 ;; Tracked objects:
 12808 ;;		On entry : 0/0
 12809 ;;		On exit  : 0/0
 12810 ;;		Unchanged: 0/0
 12811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12816 ;;Total ram usage:        0 bytes
 12817 ;; Hardware stack levels used:    1
 12818 ;; Hardware stack levels required when called:    6
 12819 ;; This function calls:
 12820 ;;		Nothing
 12821 ;; This function is called by:
 12822 ;;		_main
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           
 12827                           ;psect for function _SetupClock
 12828  1E68                     _SetupClock:	
 12829                           
 12830                           ;incstack = 0
 12831                           ; Regs used in _SetupClock: []
 12832  1E68  0008               	return
 12833  1E69                     __end_of_SetupClock:	
 12834                           
 12835                           	psect	text29
 12836  105E                     __ptext29:	
 12837 ;; *************** function _SYSTEM_Initialize *****************
 12838 ;; Defined at:
 12839 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;		None
 12842 ;; Auto vars:     Size  Location     Type
 12843 ;;		None
 12844 ;; Return value:  Size  Location     Type
 12845 ;;                  1    wreg      void 
 12846 ;; Registers used:
 12847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12848 ;; Tracked objects:
 12849 ;;		On entry : 0/0
 12850 ;;		On exit  : 0/0
 12851 ;;		Unchanged: 0/0
 12852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;Total ram usage:        0 bytes
 12858 ;; Hardware stack levels used:    1
 12859 ;; Hardware stack levels required when called:   17
 12860 ;; This function calls:
 12861 ;;		_OSCILLATOR_Initialize
 12862 ;;		_PIN_MANAGER_Initialize
 12863 ;;		_PMD_Initialize
 12864 ;;		_SPI2_Initialize
 12865 ;;		_rtc6_Initialize
 12866 ;; This function is called by:
 12867 ;;		_main
 12868 ;; This function uses a non-reentrant model
 12869 ;;
 12870                           
 12871                           
 12872                           ;psect for function _SYSTEM_Initialize
 12873  105E                     _SYSTEM_Initialize:	
 12874                           
 12875                           ;mcc.c: 52: PMD_Initialize();
 12876                           
 12877                           ;incstack = 0
 12878 ;; hardware stack exceeded
 12879                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12880  105E  319F  2724  3190   	fcall	_PMD_Initialize
 12881                           
 12882                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 12883  1061  3188  2002  3190   	fcall	_PIN_MANAGER_Initialize
 12884                           
 12885                           ;mcc.c: 54: OSCILLATOR_Initialize();
 12886  1064  319F  2764  3190   	fcall	_OSCILLATOR_Initialize
 12887                           
 12888                           ;mcc.c: 55: SPI2_Initialize();
 12889  1067  319E  26DB  3190   	fcall	_SPI2_Initialize
 12890                           
 12891                           ;mcc.c: 56: rtc6_Initialize();
 12892  106A  3188  20F4         	fcall	_rtc6_Initialize
 12893  106C  0008               	return
 12894  106D                     __end_of_SYSTEM_Initialize:	
 12895                           
 12896                           	psect	text30
 12897  08F4                     __ptext30:	
 12898 ;; *************** function _rtc6_Initialize *****************
 12899 ;; Defined at:
 12900 ;;		line 111 in file "mcc_generated_files/RTC6.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;		None
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  reg             1   21[BANK0 ] unsigned char 
 12905 ;; Return value:  Size  Location     Type
 12906 ;;                  1    wreg      void 
 12907 ;; Registers used:
 12908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12909 ;; Tracked objects:
 12910 ;;		On entry : 0/0
 12911 ;;		On exit  : 0/0
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12916 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12918 ;;Total ram usage:        3 bytes
 12919 ;; Hardware stack levels used:    1
 12920 ;; Hardware stack levels required when called:   16
 12921 ;; This function calls:
 12922 ;;		_rtcc_read
 12923 ;;		_rtcc_write
 12924 ;; This function is called by:
 12925 ;;		_SYSTEM_Initialize
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           
 12930                           ;psect for function _rtc6_Initialize
 12931  08F4                     _rtc6_Initialize:	
 12932                           
 12933                           ;RTC6.c: 112: uint8_t reg = 0;
 12934                           
 12935                           ;incstack = 0
 12936 ;; hardware stack exceeded
 12937                           ; Regs used in _rtc6_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12938  08F4  0020               	movlb	0	; select bank0
 12939  08F5  01B5               	clrf	rtc6_Initialize@reg
 12940                           
 12941                           ;RTC6.c: 114: dateTime.day = (rtcc_read(0x03) & 0x07);
 12942  08F6  3003               	movlw	3
 12943  08F7  319F  27A7  3188   	fcall	_rtcc_read
 12944  08FA  3907               	andlw	7
 12945  08FB  0020               	movlb	0	; select bank0
 12946  08FC  00B3               	movwf	??_rtc6_Initialize
 12947  08FD  01B4               	clrf	??_rtc6_Initialize+1
 12948  08FE  0833               	movf	??_rtc6_Initialize,w
 12949  08FF  0022               	movlb	2	; select bank2
 12950  0900  00AC               	movwf	(_dateTime^(0+256)+12)
 12951  0901  0020               	movlb	0	; select bank0
 12952  0902  0834               	movf	??_rtc6_Initialize+1,w
 12953  0903  0022               	movlb	2	; select bank2
 12954  0904  00AD               	movwf	((_dateTime+1)^(0+256)+12)
 12955                           
 12956                           ;RTC6.c: 115: rtcc_write(0x03, (dateTime.day | 0x08));
 12957  0905  082C               	movf	(_dateTime^(0+256)+12),w
 12958  0906  3808               	iorlw	8
 12959  0907  0020               	movlb	0	; select bank0
 12960  0908  00B3               	movwf	??_rtc6_Initialize
 12961  0909  0833               	movf	??_rtc6_Initialize,w
 12962  090A  00AE               	movwf	rtcc_write@data
 12963  090B  3003               	movlw	3
 12964  090C  3190  20BC  3188   	fcall	_rtcc_write
 12965                           
 12966                           ;RTC6.c: 116: dateTime.sec = rtcc_read(0x00);
 12967  090F  3000               	movlw	0
 12968  0910  319F  27A7  3188   	fcall	_rtcc_read
 12969  0913  0020               	movlb	0	; select bank0
 12970  0914  00B3               	movwf	??_rtc6_Initialize
 12971  0915  01B4               	clrf	??_rtc6_Initialize+1
 12972  0916  0833               	movf	??_rtc6_Initialize,w
 12973  0917  0022               	movlb	2	; select bank2
 12974  0918  00A0               	movwf	_dateTime^(0+256)
 12975  0919  0020               	movlb	0	; select bank0
 12976  091A  0834               	movf	??_rtc6_Initialize+1,w
 12977  091B  0022               	movlb	2	; select bank2
 12978  091C  00A1               	movwf	(_dateTime+1)^(0+256)
 12979                           
 12980                           ;RTC6.c: 120: rtcc_write(0x07, 0x00 + 0x40 + 0x00);
 12981  091D  3040               	movlw	64
 12982  091E  0020               	movlb	0	; select bank0
 12983  091F  00B3               	movwf	??_rtc6_Initialize
 12984  0920  0833               	movf	??_rtc6_Initialize,w
 12985  0921  00AE               	movwf	rtcc_write@data
 12986  0922  3007               	movlw	7
 12987  0923  3190  20BC  3188   	fcall	_rtcc_write
 12988                           
 12989                           ;RTC6.c: 123: rtcc_write(0x00, dateTime.sec | 0x80);
 12990  0926  0022               	movlb	2	; select bank2
 12991  0927  0820               	movf	_dateTime^(0+256),w
 12992  0928  3880               	iorlw	128
 12993  0929  0020               	movlb	0	; select bank0
 12994  092A  00B3               	movwf	??_rtc6_Initialize
 12995  092B  0833               	movf	??_rtc6_Initialize,w
 12996  092C  00AE               	movwf	rtcc_write@data
 12997  092D  3000               	movlw	0
 12998  092E  3190  20BC  3188   	fcall	_rtcc_write
 12999  0931                     l6953:	
 13000                           ;RTC6.c: 124: while (!reg) {
 13001                           
 13002  0931  0020               	movlb	0	; select bank0
 13003  0932  0835               	movf	rtc6_Initialize@reg,w
 13004  0933  1D03               	btfss	3,2
 13005  0934  2942               	goto	l6955
 13006                           
 13007                           ;RTC6.c: 125: reg = rtcc_read(0x03);
 13008  0935  3003               	movlw	3
 13009  0936  319F  27A7  3188   	fcall	_rtcc_read
 13010  0939  0020               	movlb	0	; select bank0
 13011  093A  00B3               	movwf	??_rtc6_Initialize
 13012  093B  0833               	movf	??_rtc6_Initialize,w
 13013  093C  00B5               	movwf	rtc6_Initialize@reg
 13014                           
 13015                           ;RTC6.c: 126: reg &= 0x20;
 13016  093D  3020               	movlw	32
 13017  093E  00B3               	movwf	??_rtc6_Initialize
 13018  093F  0833               	movf	??_rtc6_Initialize,w
 13019  0940  05B5               	andwf	rtc6_Initialize@reg,f
 13020  0941  2931               	goto	l6953
 13021  0942                     l6955:	
 13022                           
 13023                           ;RTC6.c: 127: }
 13024                           ;RTC6.c: 130: rtcc_write(0x03, dateTime.day | (0x08 & 0xEF));
 13025  0942  0022               	movlb	2	; select bank2
 13026  0943  082C               	movf	(_dateTime^(0+256)+12),w
 13027  0944  3808               	iorlw	8
 13028  0945  0020               	movlb	0	; select bank0
 13029  0946  00B3               	movwf	??_rtc6_Initialize
 13030  0947  0833               	movf	??_rtc6_Initialize,w
 13031  0948  00AE               	movwf	rtcc_write@data
 13032  0949  3003               	movlw	3
 13033  094A  3190  20BC         	fcall	_rtcc_write
 13034  094C  0008               	return
 13035  094D                     __end_of_rtc6_Initialize:	
 13036                           
 13037                           	psect	text31
 13038  10BC                     __ptext31:	
 13039 ;; *************** function _rtcc_write *****************
 13040 ;; Defined at:
 13041 ;;		line 106 in file "mcc_generated_files/RTC6.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;  addr            1    wreg     unsigned char 
 13044 ;;  data            1   14[BANK0 ] unsigned char 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  addr            1   17[BANK0 ] unsigned char 
 13047 ;; Return value:  Size  Location     Type
 13048 ;;                  1    wreg      void 
 13049 ;; Registers used:
 13050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/0
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13056 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13058 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13059 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13060 ;;Total ram usage:        4 bytes
 13061 ;; Hardware stack levels used:    1
 13062 ;; Hardware stack levels required when called:   15
 13063 ;; This function calls:
 13064 ;;		_i2c_write1ByteRegister
 13065 ;; This function is called by:
 13066 ;;		_rtc6_Initialize
 13067 ;;		_rtc6_SetComponent
 13068 ;;		_rtc6_EnableAlarms
 13069 ;;		_rtc6_SetAlarm0
 13070 ;;		_rtc6_ClearAlarm0
 13071 ;;		_rtc6_SetAlarm1
 13072 ;;		_rtc6_ClearAlarm1
 13073 ;; This function uses a non-reentrant model
 13074 ;;
 13075                           
 13076                           
 13077                           ;psect for function _rtcc_write
 13078  10BC                     _rtcc_write:	
 13079                           
 13080                           ;incstack = 0
 13081 ;; hardware stack exceeded
 13082                           ; Regs used in _rtcc_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13083                           ;rtcc_write@addr stored from wreg
 13084  10BC  0020               	movlb	0	; select bank0
 13085  10BD  00B1               	movwf	rtcc_write@addr
 13086                           
 13087                           ;RTC6.c: 107: i2c_write1ByteRegister(0x6F, addr, data);
 13088  10BE  0831               	movf	rtcc_write@addr,w
 13089  10BF  00AF               	movwf	??_rtcc_write
 13090  10C0  082F               	movf	??_rtcc_write,w
 13091  10C1  00AA               	movwf	i2c_write1ByteRegister@reg
 13092  10C2  082E               	movf	rtcc_write@data,w
 13093  10C3  00B0               	movwf	??_rtcc_write+1
 13094  10C4  0830               	movf	??_rtcc_write+1,w
 13095  10C5  00AB               	movwf	i2c_write1ByteRegister@data
 13096  10C6  306F               	movlw	111
 13097  10C7  3194  2425  3190   	fcall	_i2c_write1ByteRegister
 13098                           
 13099                           ;RTC6.c: 108: _delay((unsigned long)((5)*(1000000/4000.0)));
 13100  10CA  30FA               	movlw	250
 13101  10CB                     u5547:	
 13102  10CB  3200               	nop2
 13103  10CC  0B89               	decfsz	9,f
 13104  10CD  28CB               	goto	u5547
 13105  10CE  0008               	return
 13106  10CF                     __end_of_rtcc_write:	
 13107                           
 13108                           	psect	text32
 13109  1425                     __ptext32:	
 13110 ;; *************** function _i2c_write1ByteRegister *****************
 13111 ;; Defined at:
 13112 ;;		line 38 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;  address         1    wreg     unsigned char 
 13115 ;;  reg             1   10[BANK0 ] unsigned char 
 13116 ;;  data            1   11[BANK0 ] unsigned char 
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;  address         1   13[BANK0 ] unsigned char 
 13119 ;; Return value:  Size  Location     Type
 13120 ;;                  1    wreg      void 
 13121 ;; Registers used:
 13122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13123 ;; Tracked objects:
 13124 ;;		On entry : 0/0
 13125 ;;		On exit  : 0/0
 13126 ;;		Unchanged: 0/0
 13127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13131 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;Total ram usage:        4 bytes
 13133 ;; Hardware stack levels used:    1
 13134 ;; Hardware stack levels required when called:   14
 13135 ;; This function calls:
 13136 ;;		_i2c_close
 13137 ;;		_i2c_masterWrite
 13138 ;;		_i2c_open
 13139 ;;		_i2c_setAddressNACKCallback
 13140 ;;		_i2c_setBuffer
 13141 ;;		_i2c_setDataCompleteCallback
 13142 ;; This function is called by:
 13143 ;;		_rtcc_write
 13144 ;;		_rtc6_EEPRWriteLatchEnable
 13145 ;;		_rtc6_EEPRWriteLatchDisable
 13146 ;;		_rtc6_WriteByteEEPROM
 13147 ;; This function uses a non-reentrant model
 13148 ;;
 13149                           
 13150                           
 13151                           ;psect for function _i2c_write1ByteRegister
 13152  1425                     _i2c_write1ByteRegister:	
 13153                           
 13154                           ;incstack = 0
 13155 ;; hardware stack exceeded
 13156                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13157                           ;i2c_write1ByteRegister@address stored from wreg
 13158  1425  0020               	movlb	0	; select bank0
 13159  1426  00AD               	movwf	i2c_write1ByteRegister@address
 13160  1427                     l6917:	
 13161                           ;i2c_simple_master.c: 40: while(!i2c_open(address));
 13162                           
 13163  1427  0020               	movlb	0	; select bank0
 13164  1428  082D               	movf	i2c_write1ByteRegister@address,w
 13165  1429  3196  26C2  3194   	fcall	_i2c_open
 13166  142C  3A00               	xorlw	0
 13167  142D  1903               	skipnz
 13168  142E  2C27               	goto	l6917
 13169                           
 13170                           ;i2c_simple_master.c: 41: i2c_setDataCompleteCallback(wr1RegCompleteHandler,&data);
 13171  142F  30FA               	movlw	low _wr1RegCompleteHandler
 13172  1430  0020               	movlb	0	; select bank0
 13173  1431  00A5               	movwf	i2c_setDataCompleteCallback@cb
 13174  1432  3010               	movlw	high _wr1RegCompleteHandler
 13175  1433  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 13176  1434  302B               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 13177  1435  00AC               	movwf	??_i2c_write1ByteRegister
 13178  1436  082C               	movf	??_i2c_write1ByteRegister,w
 13179  1437  00A7               	movwf	i2c_setDataCompleteCallback@p
 13180  1438  3190  2036  3194   	fcall	_i2c_setDataCompleteCallback
 13181                           
 13182                           ;i2c_simple_master.c: 42: i2c_setBuffer(&reg,1);
 13183  143B  3001               	movlw	1
 13184  143C  0020               	movlb	0	; select bank0
 13185  143D  00A0               	movwf	i2c_setBuffer@bufferSize
 13186  143E  3000               	movlw	0
 13187  143F  00A1               	movwf	i2c_setBuffer@bufferSize+1
 13188  1440  302A               	movlw	(low (i2c_write1ByteRegister@reg| 0))& (0+255)
 13189  1441  3190  20CF  3194   	fcall	_i2c_setBuffer
 13190                           
 13191                           ;i2c_simple_master.c: 43: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 13192  1444  30ED               	movlw	low _i2c_restartWrite
 13193  1445  0020               	movlb	0	; select bank0
 13194  1446  00A5               	movwf	i2c_setAddressNACKCallback@cb
 13195  1447  301E               	movlw	high _i2c_restartWrite
 13196  1448  00A6               	movwf	i2c_setAddressNACKCallback@cb+1
 13197  1449  01A7               	clrf	i2c_setAddressNACKCallback@p
 13198  144A  3190  2043  3194   	fcall	_i2c_setAddressNACKCallback
 13199                           
 13200                           ;i2c_simple_master.c: 44: i2c_masterWrite();
 13201  144D  319E  26C7  3194   	fcall	_i2c_masterWrite
 13202  1450                     l6927:	
 13203                           ;i2c_simple_master.c: 45: while(I2C_BUSY == i2c_close());
 13204                           
 13205  1450  3191  2183  3194   	fcall	_i2c_close
 13206  1453  3A01               	xorlw	1
 13207  1454  1D03               	btfss	3,2
 13208  1455  0008               	return
 13209  1456  2C50               	goto	l6927
 13210  1457                     __end_of_i2c_write1ByteRegister:	
 13211                           
 13212                           	psect	text33
 13213  1FA7                     __ptext33:	
 13214 ;; *************** function _rtcc_read *****************
 13215 ;; Defined at:
 13216 ;;		line 102 in file "mcc_generated_files/RTC6.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;  addr            1    wreg     unsigned char 
 13219 ;; Auto vars:     Size  Location     Type
 13220 ;;  addr            1   18[BANK0 ] unsigned char 
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  1    wreg      unsigned char 
 13223 ;; Registers used:
 13224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13225 ;; Tracked objects:
 13226 ;;		On entry : 0/0
 13227 ;;		On exit  : 0/0
 13228 ;;		Unchanged: 0/0
 13229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13231 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13232 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13233 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13234 ;;Total ram usage:        2 bytes
 13235 ;; Hardware stack levels used:    1
 13236 ;; Hardware stack levels required when called:   15
 13237 ;; This function calls:
 13238 ;;		_i2c_read1ByteRegister
 13239 ;; This function is called by:
 13240 ;;		_rtc6_Initialize
 13241 ;;		_rtc6_SetComponent
 13242 ;;		_rtc6_GetComponent
 13243 ;;		_rtc6_EnableAlarms
 13244 ;;		_rtc6_ClearAlarm0
 13245 ;;		_rtc6_ClearAlarm1
 13246 ;; This function uses a non-reentrant model
 13247 ;;
 13248                           
 13249                           
 13250                           ;psect for function _rtcc_read
 13251  1FA7                     _rtcc_read:	
 13252                           
 13253                           ;incstack = 0
 13254 ;; hardware stack exceeded
 13255                           ; Regs used in _rtcc_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13256                           ;rtcc_read@addr stored from wreg
 13257  1FA7  0020               	movlb	0	; select bank0
 13258  1FA8  00B2               	movwf	rtcc_read@addr
 13259                           
 13260                           ;RTC6.c: 103: return i2c_read1ByteRegister(0x6F, addr);
 13261  1FA9  0832               	movf	rtcc_read@addr,w
 13262  1FAA  00B1               	movwf	??_rtcc_read
 13263  1FAB  0831               	movf	??_rtcc_read,w
 13264  1FAC  00AA               	movwf	i2c_read1ByteRegister@reg
 13265  1FAD  306F               	movlw	111
 13266  1FAE  3197  2710         	fcall	_i2c_read1ByteRegister
 13267  1FB0  0008               	return
 13268  1FB1                     __end_of_rtcc_read:	
 13269                           
 13270                           	psect	text34
 13271  1710                     __ptext34:	
 13272 ;; *************** function _i2c_read1ByteRegister *****************
 13273 ;; Defined at:
 13274 ;;		line 65 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 13275 ;; Parameters:    Size  Location     Type
 13276 ;;  address         1    wreg     unsigned char 
 13277 ;;  reg             1   10[BANK0 ] unsigned char 
 13278 ;; Auto vars:     Size  Location     Type
 13279 ;;  address         1   12[BANK0 ] unsigned char 
 13280 ;;  x               2   14[BANK0 ] int 
 13281 ;;  d2              1   16[BANK0 ] unsigned char 
 13282 ;;  e               1   13[BANK0 ] enum E92
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1    wreg      unsigned char 
 13285 ;; Registers used:
 13286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13292 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13293 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13295 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13296 ;;Total ram usage:        7 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; Hardware stack levels required when called:   14
 13299 ;; This function calls:
 13300 ;;		_i2c_close
 13301 ;;		_i2c_masterWrite
 13302 ;;		_i2c_open
 13303 ;;		_i2c_setAddressNACKCallback
 13304 ;;		_i2c_setBuffer
 13305 ;;		_i2c_setDataCompleteCallback
 13306 ;; This function is called by:
 13307 ;;		_rtcc_read
 13308 ;;		_rtc6_EEPRReadStatusRegister
 13309 ;;		_rtc6_ReadByteEEPROM
 13310 ;; This function uses a non-reentrant model
 13311 ;;
 13312                           
 13313                           
 13314                           ;psect for function _i2c_read1ByteRegister
 13315  1710                     _i2c_read1ByteRegister:	
 13316                           
 13317                           ;incstack = 0
 13318 ;; hardware stack exceeded
 13319                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13320                           ;i2c_read1ByteRegister@address stored from wreg
 13321  1710  0020               	movlb	0	; select bank0
 13322  1711  00AC               	movwf	i2c_read1ByteRegister@address
 13323                           
 13324                           ;i2c_simple_master.c: 67: uint8_t d2=42;
 13325  1712  302A               	movlw	42
 13326  1713  00AB               	movwf	??_i2c_read1ByteRegister
 13327  1714  082B               	movf	??_i2c_read1ByteRegister,w
 13328  1715  00B0               	movwf	i2c_read1ByteRegister@d2
 13329                           
 13330                           ;i2c_simple_master.c: 68: i2c_error_t e;
 13331                           ;i2c_simple_master.c: 69: int x;
 13332                           ;i2c_simple_master.c: 71: for(x = 2; x != 0; x--)
 13333  1716  3002               	movlw	2
 13334  1717  00AE               	movwf	i2c_read1ByteRegister@x
 13335  1718  3000               	movlw	0
 13336  1719  00AF               	movwf	i2c_read1ByteRegister@x+1
 13337  171A  082E               	movf	i2c_read1ByteRegister@x,w
 13338  171B  042F               	iorwf	i2c_read1ByteRegister@x+1,w
 13339  171C  1903               	btfsc	3,2
 13340  171D  2F5C               	goto	l6911
 13341  171E                     l6891:	
 13342                           ;i2c_simple_master.c: 72: {
 13343                           ;i2c_simple_master.c: 73: while(!i2c_open(address));
 13344                           
 13345  171E  0020               	movlb	0	; select bank0
 13346  171F  082C               	movf	i2c_read1ByteRegister@address,w
 13347  1720  3196  26C2  3197   	fcall	_i2c_open
 13348  1723  3A00               	xorlw	0
 13349  1724  1903               	skipnz
 13350  1725  2F1E               	goto	l6891
 13351                           
 13352                           ;i2c_simple_master.c: 74: i2c_setDataCompleteCallback(rd1RegCompleteHandler,&d2);
 13353  1726  3010               	movlw	low _rd1RegCompleteHandler
 13354  1727  0020               	movlb	0	; select bank0
 13355  1728  00A5               	movwf	i2c_setDataCompleteCallback@cb
 13356  1729  3011               	movlw	high _rd1RegCompleteHandler
 13357  172A  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 13358  172B  3030               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 13359  172C  00AB               	movwf	??_i2c_read1ByteRegister
 13360  172D  082B               	movf	??_i2c_read1ByteRegister,w
 13361  172E  00A7               	movwf	i2c_setDataCompleteCallback@p
 13362  172F  3190  2036  3197   	fcall	_i2c_setDataCompleteCallback
 13363                           
 13364                           ;i2c_simple_master.c: 75: i2c_setBuffer(&reg,1);
 13365  1732  3001               	movlw	1
 13366  1733  0020               	movlb	0	; select bank0
 13367  1734  00A0               	movwf	i2c_setBuffer@bufferSize
 13368  1735  3000               	movlw	0
 13369  1736  00A1               	movwf	i2c_setBuffer@bufferSize+1
 13370  1737  302A               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 13371  1738  3190  20CF  3197   	fcall	_i2c_setBuffer
 13372                           
 13373                           ;i2c_simple_master.c: 76: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 13374  173B  30ED               	movlw	low _i2c_restartWrite
 13375  173C  0020               	movlb	0	; select bank0
 13376  173D  00A5               	movwf	i2c_setAddressNACKCallback@cb
 13377  173E  301E               	movlw	high _i2c_restartWrite
 13378  173F  00A6               	movwf	i2c_setAddressNACKCallback@cb+1
 13379  1740  01A7               	clrf	i2c_setAddressNACKCallback@p
 13380  1741  3190  2043  3197   	fcall	_i2c_setAddressNACKCallback
 13381                           
 13382                           ;i2c_simple_master.c: 77: i2c_masterWrite();
 13383  1744  319E  26C7  3197   	fcall	_i2c_masterWrite
 13384  1747                     l6901:	
 13385                           ;i2c_simple_master.c: 78: while(I2C_BUSY == (e = i2c_close()));
 13386                           
 13387  1747  3191  2183  3197   	fcall	_i2c_close
 13388  174A  0020               	movlb	0	; select bank0
 13389  174B  00AB               	movwf	??_i2c_read1ByteRegister
 13390  174C  082B               	movf	??_i2c_read1ByteRegister,w
 13391  174D  00AD               	movwf	i2c_read1ByteRegister@e
 13392  174E  032D               	decf	i2c_read1ByteRegister@e,w
 13393  174F  1903               	btfsc	3,2
 13394  1750  2F47               	goto	l6901
 13395                           
 13396                           ;i2c_simple_master.c: 79: if(e==I2C_NOERR) break;
 13397  1751  082D               	movf	i2c_read1ByteRegister@e,w
 13398  1752  1903               	btfsc	3,2
 13399  1753  2F5C               	goto	l6911
 13400  1754  30FF               	movlw	255
 13401  1755  07AE               	addwf	i2c_read1ByteRegister@x,f
 13402  1756  30FF               	movlw	255
 13403  1757  3DAF               	addwfc	i2c_read1ByteRegister@x+1,f
 13404  1758  082E               	movf	i2c_read1ByteRegister@x,w
 13405  1759  042F               	iorwf	i2c_read1ByteRegister@x+1,w
 13406  175A  1D03               	btfss	3,2
 13407  175B  2F1E               	goto	l6891
 13408  175C                     l6911:	
 13409                           
 13410                           ;i2c_simple_master.c: 80: }
 13411                           ;i2c_simple_master.c: 83: return d2;
 13412  175C  0830               	movf	i2c_read1ByteRegister@d2,w
 13413  175D  0008               	return
 13414  175E                     __end_of_i2c_read1ByteRegister:	
 13415                           
 13416                           	psect	text35
 13417  1043                     __ptext35:	
 13418 ;; *************** function _i2c_setAddressNACKCallback *****************
 13419 ;; Defined at:
 13420 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 13423 ;;		 -> i2c_restartWrite(1), 
 13424 ;;  p               1    7[BANK0 ] PTR void 
 13425 ;;		 -> NULL(0), 
 13426 ;; Auto vars:     Size  Location     Type
 13427 ;;		None
 13428 ;; Return value:  Size  Location     Type
 13429 ;;                  1    wreg      void 
 13430 ;; Registers used:
 13431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13432 ;; Tracked objects:
 13433 ;;		On entry : 0/0
 13434 ;;		On exit  : 0/0
 13435 ;;		Unchanged: 0/0
 13436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13437 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13439 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13440 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13441 ;;Total ram usage:        4 bytes
 13442 ;; Hardware stack levels used:    1
 13443 ;; Hardware stack levels required when called:    7
 13444 ;; This function calls:
 13445 ;;		_setCallBack
 13446 ;; This function is called by:
 13447 ;;		_i2c_write1ByteRegister
 13448 ;;		_i2c_read1ByteRegister
 13449 ;;		_i2c_writeNBytes
 13450 ;;		_i2c_read2ByteRegister
 13451 ;;		_i2c_write2ByteRegister
 13452 ;;		_i2c_readDataBlock
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456                           
 13457                           ;psect for function _i2c_setAddressNACKCallback
 13458  1043                     _i2c_setAddressNACKCallback:	
 13459                           
 13460                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
 13461                           
 13462                           ;incstack = 0
 13463                           ; Regs used in _i2c_setAddressNACKCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 13464  1043  0020               	movlb	0	; select bank0
 13465  1044  0826               	movf	i2c_setAddressNACKCallback@cb+1,w
 13466  1045  00A1               	movwf	setCallBack@cb+1
 13467  1046  0825               	movf	i2c_setAddressNACKCallback@cb,w
 13468  1047  00A0               	movwf	setCallBack@cb
 13469  1048  0827               	movf	i2c_setAddressNACKCallback@p,w
 13470  1049  00A8               	movwf	??_i2c_setAddressNACKCallback
 13471  104A  0828               	movf	??_i2c_setAddressNACKCallback,w
 13472  104B  00A2               	movwf	setCallBack@p
 13473  104C  3002               	movlw	2
 13474  104D  3192  22A0         	fcall	_setCallBack
 13475  104F  0008               	return
 13476  1050                     __end_of_i2c_setAddressNACKCallback:	
 13477                           
 13478                           	psect	text36
 13479  16C2                     __ptext36:	
 13480 ;; *************** function _i2c_open *****************
 13481 ;; Defined at:
 13482 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 13483 ;; Parameters:    Size  Location     Type
 13484 ;;  address         1    wreg     unsigned char 
 13485 ;; Auto vars:     Size  Location     Type
 13486 ;;  address         1    3[BANK0 ] unsigned char 
 13487 ;;  ret             1    4[BANK0 ] enum E15138
 13488 ;; Return value:  Size  Location     Type
 13489 ;;                  1    wreg      enum E15138
 13490 ;; Registers used:
 13491 ;;		wreg, status,2, status,0, pclath, cstack
 13492 ;; Tracked objects:
 13493 ;;		On entry : 0/0
 13494 ;;		On exit  : 0/0
 13495 ;;		Unchanged: 0/0
 13496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13498 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13500 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13501 ;;Total ram usage:        3 bytes
 13502 ;; Hardware stack levels used:    1
 13503 ;; Hardware stack levels required when called:    7
 13504 ;; This function calls:
 13505 ;;		_i2c1_driver_open
 13506 ;;		_i2c1_driver_setBusCollisionISR
 13507 ;;		_i2c1_driver_setI2cISR
 13508 ;;		_mssp1_clearIRQ
 13509 ;; This function is called by:
 13510 ;;		_i2c_write1ByteRegister
 13511 ;;		_i2c_read1ByteRegister
 13512 ;;		_i2c_writeNBytes
 13513 ;;		_i2c_read2ByteRegister
 13514 ;;		_i2c_write2ByteRegister
 13515 ;;		_i2c_readDataBlock
 13516 ;;		_i2c_readNBytes
 13517 ;; This function uses a non-reentrant model
 13518 ;;
 13519                           
 13520                           
 13521                           ;psect for function _i2c_open
 13522  16C2                     _i2c_open:	
 13523                           
 13524                           ;incstack = 0
 13525                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 13526                           ;i2c_open@address stored from wreg
 13527  16C2  0020               	movlb	0	; select bank0
 13528  16C3  00A3               	movwf	i2c_open@address
 13529                           
 13530                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 13531  16C4  01A4               	clrf	i2c_open@ret
 13532  16C5  0AA4               	incf	i2c_open@ret,f
 13533                           
 13534                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 13535  16C6  0021               	movlb	1	; select bank1
 13536  16C7  18C7               	btfsc	_i2c_status^(0+128),1
 13537  16C8  2F0D               	goto	l217
 13538                           
 13539                           ;i2c_master.c: 121: {
 13540                           ;i2c_master.c: 122: i2c_status.address = address;
 13541  16C9  0020               	movlb	0	; select bank0
 13542  16CA  0823               	movf	i2c_open@address,w
 13543  16CB  00A2               	movwf	??_i2c_open
 13544  16CC  0822               	movf	??_i2c_open,w
 13545  16CD  0021               	movlb	1	; select bank1
 13546  16CE  00C8               	movwf	(_i2c_status^(0+128)+1)
 13547                           
 13548                           ;i2c_master.c: 123: i2c_status.busy = 0;
 13549  16CF  1047               	bcf	_i2c_status^(0+128),0
 13550                           
 13551                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 13552  16D0  14C7               	bsf	_i2c_status^(0+128),1
 13553                           
 13554                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 13555  16D1  11C7               	bcf	_i2c_status^(0+128),3
 13556                           
 13557                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 13558  16D2  300E               	movlw	14
 13559  16D3  0020               	movlb	0	; select bank0
 13560  16D4  00A2               	movwf	??_i2c_open
 13561  16D5  0822               	movf	??_i2c_open,w
 13562  16D6  0021               	movlb	1	; select bank1
 13563  16D7  00D0               	movwf	(_i2c_status^(0+128)+9)
 13564                           
 13565                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 13566  16D8  30F4               	movlw	244
 13567  16D9  00CE               	movwf	(_i2c_status^(0+128)+7)
 13568  16DA  3001               	movlw	1
 13569  16DB  00CF               	movwf	(_i2c_status^(0+128)+8)
 13570                           
 13571                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 13572  16DC  1547               	bsf	_i2c_status^(0+128),2
 13573                           
 13574                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 13575  16DD  30E1               	movlw	low _returnStop
 13576  16DE  00D2               	movwf	(low ((_i2c_status| 0+11)))^(0+128)
 13577  16DF  301E               	movlw	high _returnStop
 13578  16E0  00D3               	movwf	((low ((_i2c_status| 0+11)))^(0+128)+1)
 13579                           
 13580                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 13581  16E1  01DE               	clrf	(low ((_i2c_status| 0+23)))^(0+128)
 13582                           
 13583                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 13584  16E2  30E1               	movlw	low _returnStop
 13585  16E3  00D4               	movwf	(low ((_i2c_status| 0+13)))^(0+128)
 13586  16E4  301E               	movlw	high _returnStop
 13587  16E5  00D5               	movwf	((low ((_i2c_status| 0+13)))^(0+128)+1)
 13588                           
 13589                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 13590  16E6  01DF               	clrf	(low ((_i2c_status| 0+24)))^(0+128)
 13591                           
 13592                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 13593  16E7  30E1               	movlw	low _returnStop
 13594  16E8  00D6               	movwf	(low ((_i2c_status| 0+15)))^(0+128)
 13595  16E9  301E               	movlw	high _returnStop
 13596  16EA  00D7               	movwf	((low ((_i2c_status| 0+15)))^(0+128)+1)
 13597                           
 13598                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 13599  16EB  01E0               	clrf	(low ((_i2c_status| 0+25)))^(0+128)
 13600                           
 13601                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 13602  16EC  30E1               	movlw	low _returnStop
 13603  16ED  00D8               	movwf	(low ((_i2c_status| 0+17)))^(0+128)
 13604  16EE  301E               	movlw	high _returnStop
 13605  16EF  00D9               	movwf	((low ((_i2c_status| 0+17)))^(0+128)+1)
 13606                           
 13607                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 13608  16F0  01E1               	clrf	(low ((_i2c_status| 0+26)))^(0+128)
 13609                           
 13610                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 13611  16F1  30E7               	movlw	low _returnReset
 13612  16F2  00DA               	movwf	(low ((_i2c_status| 0+19)))^(0+128)
 13613  16F3  301E               	movlw	high _returnReset
 13614  16F4  00DB               	movwf	((low ((_i2c_status| 0+19)))^(0+128)+1)
 13615                           
 13616                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 13617  16F5  01E2               	clrf	(low ((_i2c_status| 0+27)))^(0+128)
 13618                           
 13619                           ;i2c_master.c: 142: i2c1_driver_open();
 13620  16F6  319F  279D  3196   	fcall	_i2c1_driver_open
 13621                           
 13622                           ;i2c_master.c: 143: mssp1_clearIRQ();
 13623  16F9  319E  2683  3196   	fcall	_mssp1_clearIRQ
 13624                           
 13625                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 13626  16FC  306E               	movlw	low _i2c_busCollisionISR
 13627  16FD  0020               	movlb	0	; select bank0
 13628  16FE  00A0               	movwf	i2c1_driver_setBusCollisionISR@f
 13629  16FF  301E               	movlw	high _i2c_busCollisionISR
 13630  1700  00A1               	movwf	i2c1_driver_setBusCollisionISR@f+1
 13631  1701  319E  26F9  3196   	fcall	_i2c1_driver_setBusCollisionISR
 13632                           
 13633                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 13634  1704  303E               	movlw	low _i2c_ISR
 13635  1705  0020               	movlb	0	; select bank0
 13636  1706  00A0               	movwf	i2c1_driver_setI2cISR@f
 13637  1707  3013               	movlw	high _i2c_ISR
 13638  1708  00A1               	movwf	i2c1_driver_setI2cISR@f+1
 13639  1709  3190  2000         	fcall	_i2c1_driver_setI2cISR
 13640                           
 13641                           ;i2c_master.c: 151: ret = I2C_NOERR;
 13642  170B  0020               	movlb	0	; select bank0
 13643  170C  01A4               	clrf	i2c_open@ret
 13644  170D                     l217:	
 13645                           
 13646                           ;i2c_master.c: 152: }
 13647                           ;i2c_master.c: 153: return ret;
 13648  170D  0020               	movlb	0	; select bank0
 13649  170E  0824               	movf	i2c_open@ret,w
 13650  170F  0008               	return
 13651  1710                     __end_of_i2c_open:	
 13652                           
 13653                           	psect	text37
 13654  1000                     __ptext37:	
 13655 ;; *************** function _i2c1_driver_setI2cISR *****************
 13656 ;; Defined at:
 13657 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 13658 ;; Parameters:    Size  Location     Type
 13659 ;;  f               2    0[BANK0 ] PTR void 
 13660 ;;		 -> i2c_ISR(1), 
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;		None
 13663 ;; Return value:  Size  Location     Type
 13664 ;;                  1    wreg      void 
 13665 ;; Registers used:
 13666 ;;		wreg
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/0
 13669 ;;		On exit  : 0/0
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13672 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13675 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13676 ;;Total ram usage:        2 bytes
 13677 ;; Hardware stack levels used:    1
 13678 ;; Hardware stack levels required when called:    6
 13679 ;; This function calls:
 13680 ;;		Nothing
 13681 ;; This function is called by:
 13682 ;;		_i2c_open
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           
 13687                           ;psect for function _i2c1_driver_setI2cISR
 13688  1000                     _i2c1_driver_setI2cISR:	
 13689                           
 13690                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 13691                           
 13692                           ;incstack = 0
 13693                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 13694  1000  0020               	movlb	0	; select bank0
 13695  1001  0821               	movf	i2c1_driver_setI2cISR@f+1,w
 13696  1002  00FB               	movwf	_i2c1_driver_i2cISR+1
 13697  1003  0820               	movf	i2c1_driver_setI2cISR@f,w
 13698  1004  00FA               	movwf	_i2c1_driver_i2cISR
 13699  1005  0008               	return
 13700  1006                     __end_of_i2c1_driver_setI2cISR:	
 13701                           
 13702                           	psect	text38
 13703  1EF9                     __ptext38:	
 13704 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 13705 ;; Defined at:
 13706 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;  f               2    0[BANK0 ] PTR void 
 13709 ;;		 -> i2c_busCollisionISR(1), 
 13710 ;; Auto vars:     Size  Location     Type
 13711 ;;		None
 13712 ;; Return value:  Size  Location     Type
 13713 ;;                  1    wreg      void 
 13714 ;; Registers used:
 13715 ;;		wreg
 13716 ;; Tracked objects:
 13717 ;;		On entry : 0/0
 13718 ;;		On exit  : 0/0
 13719 ;;		Unchanged: 0/0
 13720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13725 ;;Total ram usage:        2 bytes
 13726 ;; Hardware stack levels used:    1
 13727 ;; Hardware stack levels required when called:    6
 13728 ;; This function calls:
 13729 ;;		Nothing
 13730 ;; This function is called by:
 13731 ;;		_i2c_open
 13732 ;; This function uses a non-reentrant model
 13733 ;;
 13734                           
 13735                           
 13736                           ;psect for function _i2c1_driver_setBusCollisionISR
 13737  1EF9                     _i2c1_driver_setBusCollisionISR:	
 13738                           
 13739                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 13740                           
 13741                           ;incstack = 0
 13742                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 13743  1EF9  0020               	movlb	0	; select bank0
 13744  1EFA  0821               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 13745  1EFB  00FD               	movwf	_i2c1_driver_busCollisionISR+1
 13746  1EFC  0820               	movf	i2c1_driver_setBusCollisionISR@f,w
 13747  1EFD  00FC               	movwf	_i2c1_driver_busCollisionISR
 13748  1EFE  0008               	return
 13749  1EFF                     __end_of_i2c1_driver_setBusCollisionISR:	
 13750                           
 13751                           	psect	text39
 13752  1F9D                     __ptext39:	
 13753 ;; *************** function _i2c1_driver_open *****************
 13754 ;; Defined at:
 13755 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;		None
 13758 ;; Auto vars:     Size  Location     Type
 13759 ;;		None
 13760 ;; Return value:  Size  Location     Type
 13761 ;;		None               void
 13762 ;; Registers used:
 13763 ;;		wreg, status,2
 13764 ;; Tracked objects:
 13765 ;;		On entry : 0/0
 13766 ;;		On exit  : 0/0
 13767 ;;		Unchanged: 0/0
 13768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13773 ;;Total ram usage:        0 bytes
 13774 ;; Hardware stack levels used:    1
 13775 ;; Hardware stack levels required when called:    6
 13776 ;; This function calls:
 13777 ;;		Nothing
 13778 ;; This function is called by:
 13779 ;;		_i2c_open
 13780 ;; This function uses a non-reentrant model
 13781 ;;
 13782                           
 13783                           
 13784                           ;psect for function _i2c1_driver_open
 13785  1F9D                     _i2c1_driver_open:	
 13786                           
 13787                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 13788                           
 13789                           ;incstack = 0
 13790                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 13791  1F9D  0023               	movlb	3	; select bank3
 13792  1F9E  1A90               	btfsc	16,5	;volatile
 13793  1F9F  0008               	return
 13794                           
 13795                           ;i2c1_driver.c: 86: {
 13796                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 13797  1FA0  018F               	clrf	15	;volatile
 13798                           
 13799                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 13800  1FA1  3028               	movlw	40
 13801  1FA2  0090               	movwf	16	;volatile
 13802                           
 13803                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 13804  1FA3  0191               	clrf	17	;volatile
 13805                           
 13806                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 13807  1FA4  3003               	movlw	3
 13808  1FA5  008D               	movwf	13	;volatile
 13809                           
 13810                           ;i2c1_driver.c: 93: else
 13811                           ;i2c1_driver.c: 94: return 0;
 13812                           ;	Return value of _i2c1_driver_open is never used
 13813                           
 13814                           ;i2c1_driver.c: 92: }
 13815                           
 13816                           ;i2c1_driver.c: 91: return 1;
 13817                           ;	Return value of _i2c1_driver_open is never used
 13818  1FA6  0008               	return
 13819  1FA7                     __end_of_i2c1_driver_open:	
 13820                           
 13821                           	psect	text40
 13822  1EC7                     __ptext40:	
 13823 ;; *************** function _i2c_masterWrite *****************
 13824 ;; Defined at:
 13825 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;		None
 13828 ;; Auto vars:     Size  Location     Type
 13829 ;;		None
 13830 ;; Return value:  Size  Location     Type
 13831 ;;                  1    wreg      enum E15138
 13832 ;; Registers used:
 13833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13834 ;; Tracked objects:
 13835 ;;		On entry : 0/0
 13836 ;;		On exit  : 0/0
 13837 ;;		Unchanged: 0/0
 13838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;Total ram usage:        0 bytes
 13844 ;; Hardware stack levels used:    1
 13845 ;; Hardware stack levels required when called:   13
 13846 ;; This function calls:
 13847 ;;		_i2c_masterOperation
 13848 ;; This function is called by:
 13849 ;;		_i2c_write1ByteRegister
 13850 ;;		_i2c_read1ByteRegister
 13851 ;;		_i2c_writeNBytes
 13852 ;;		_i2c_read2ByteRegister
 13853 ;;		_i2c_write2ByteRegister
 13854 ;;		_i2c_readDataBlock
 13855 ;; This function uses a non-reentrant model
 13856 ;;
 13857                           
 13858                           
 13859                           ;psect for function _i2c_masterWrite
 13860  1EC7                     _i2c_masterWrite:	
 13861                           
 13862                           ;i2c_master.c: 224: return i2c_masterOperation(0);
 13863                           ;	Return value of _i2c_masterWrite is never used
 13864                           
 13865                           ;incstack = 0
 13866 ;; hardware stack exceeded
 13867                           ; Regs used in _i2c_masterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13868  1EC7  3000               	movlw	0
 13869  1EC8  3192  227C         	fcall	_i2c_masterOperation
 13870  1ECA  0008               	return
 13871  1ECB                     __end_of_i2c_masterWrite:	
 13872                           
 13873                           	psect	text41
 13874  127C                     __ptext41:	
 13875 ;; *************** function _i2c_masterOperation *****************
 13876 ;; Defined at:
 13877 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 13878 ;; Parameters:    Size  Location     Type
 13879 ;;  read            1    wreg     unsigned char 
 13880 ;; Auto vars:     Size  Location     Type
 13881 ;;  read            1    8[BANK0 ] unsigned char 
 13882 ;;  ret             1    9[BANK0 ] enum E15138
 13883 ;; Return value:  Size  Location     Type
 13884 ;;                  1    wreg      enum E15138
 13885 ;; Registers used:
 13886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13887 ;; Tracked objects:
 13888 ;;		On entry : 0/0
 13889 ;;		On exit  : 0/0
 13890 ;;		Unchanged: 0/0
 13891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13893 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13894 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;Total ram usage:        3 bytes
 13897 ;; Hardware stack levels used:    1
 13898 ;; Hardware stack levels required when called:   12
 13899 ;; This function calls:
 13900 ;;		_i2c1_driver_start
 13901 ;;		_i2c_poller
 13902 ;;		_mssp1_IRQisEnabled
 13903 ;; This function is called by:
 13904 ;;		_i2c_masterWrite
 13905 ;;		_i2c_masterRead
 13906 ;; This function uses a non-reentrant model
 13907 ;;
 13908                           
 13909                           
 13910                           ;psect for function _i2c_masterOperation
 13911  127C                     _i2c_masterOperation:	
 13912                           
 13913                           ;incstack = 0
 13914 ;; hardware stack exceeded
 13915                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13916                           ;i2c_masterOperation@read stored from wreg
 13917  127C  0020               	movlb	0	; select bank0
 13918  127D  00A8               	movwf	i2c_masterOperation@read
 13919                           
 13920                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 13921  127E  01A9               	clrf	i2c_masterOperation@ret
 13922  127F  0AA9               	incf	i2c_masterOperation@ret,f
 13923                           
 13924                           ;i2c_master.c: 196: if(!i2c_status.busy)
 13925  1280  0021               	movlb	1	; select bank1
 13926  1281  1847               	btfsc	_i2c_status^(0+128),0
 13927  1282  2A9D               	goto	l6841
 13928                           
 13929                           ;i2c_master.c: 197: {
 13930                           ;i2c_master.c: 198: i2c_status.busy = 1;
 13931  1283  1447               	bsf	_i2c_status^(0+128),0
 13932                           
 13933                           ;i2c_master.c: 199: ret = I2C_NOERR;
 13934  1284  0020               	movlb	0	; select bank0
 13935  1285  01A9               	clrf	i2c_masterOperation@ret
 13936                           
 13937                           ;i2c_master.c: 201: if(read)
 13938  1286  0828               	movf	i2c_masterOperation@read,w
 13939  1287  1903               	btfsc	3,2
 13940  1288  2A8D               	goto	l6835
 13941                           
 13942                           ;i2c_master.c: 202: {
 13943                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 13944  1289  0021               	movlb	1	; select bank1
 13945  128A  01D0               	clrf	(_i2c_status^(0+128)+9)
 13946  128B  0AD0               	incf	(_i2c_status^(0+128)+9),f
 13947                           
 13948                           ;i2c_master.c: 204: }
 13949  128C  2A93               	goto	l6837
 13950  128D                     l6835:	
 13951                           
 13952                           ;i2c_master.c: 205: else
 13953                           ;i2c_master.c: 206: {
 13954                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 13955  128D  3002               	movlw	2
 13956  128E  0020               	movlb	0	; select bank0
 13957  128F  00A7               	movwf	??_i2c_masterOperation
 13958  1290  0827               	movf	??_i2c_masterOperation,w
 13959  1291  0021               	movlb	1	; select bank1
 13960  1292  00D0               	movwf	(_i2c_status^(0+128)+9)
 13961  1293                     l6837:	
 13962                           
 13963                           ;i2c_master.c: 208: }
 13964                           ;i2c_master.c: 209: i2c1_driver_start();
 13965  1293  319E  2689  3192   	fcall	_i2c1_driver_start
 13966                           
 13967                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 13968  1296  319F  270D  3192   	fcall	_mssp1_IRQisEnabled
 13969  1299  1803               	btfsc	3,0
 13970  129A  2A9D               	goto	l6841
 13971                           
 13972                           ;i2c_master.c: 212: i2c_poller();
 13973  129B  319F  27DD         	fcall	_i2c_poller
 13974  129D                     l6841:	
 13975                           
 13976                           ;i2c_master.c: 213: }
 13977                           ;i2c_master.c: 214: return ret;
 13978  129D  0020               	movlb	0	; select bank0
 13979  129E  0829               	movf	i2c_masterOperation@ret,w
 13980  129F  0008               	return
 13981  12A0                     __end_of_i2c_masterOperation:	
 13982                           
 13983                           	psect	text42
 13984  1F0D                     __ptext42:	
 13985 ;; *************** function _mssp1_IRQisEnabled *****************
 13986 ;; Defined at:
 13987 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 13988 ;; Parameters:    Size  Location     Type
 13989 ;;		None
 13990 ;; Auto vars:     Size  Location     Type
 13991 ;;		None
 13992 ;; Return value:  Size  Location     Type
 13993 ;;		None               void
 13994 ;; Registers used:
 13995 ;;		wreg, status,2, status,0
 13996 ;; Tracked objects:
 13997 ;;		On entry : 0/0
 13998 ;;		On exit  : 0/0
 13999 ;;		Unchanged: 0/0
 14000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14003 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14004 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14005 ;;Total ram usage:        1 bytes
 14006 ;; Hardware stack levels used:    1
 14007 ;; Hardware stack levels required when called:    6
 14008 ;; This function calls:
 14009 ;;		Nothing
 14010 ;; This function is called by:
 14011 ;;		_i2c_masterOperation
 14012 ;; This function uses a non-reentrant model
 14013 ;;
 14014                           
 14015                           
 14016                           ;psect for function _mssp1_IRQisEnabled
 14017  1F0D                     _mssp1_IRQisEnabled:	
 14018                           
 14019                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
 14020                           
 14021                           ;incstack = 0
 14022                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 14023  1F0D  002E               	movlb	14	; select bank14
 14024  1F0E  0819               	movf	25,w	;volatile
 14025  1F0F  3901               	andlw	1
 14026  1F10  0020               	movlb	0	; select bank0
 14027  1F11  00A0               	movwf	??_mssp1_IRQisEnabled
 14028  1F12  0C20               	rrf	??_mssp1_IRQisEnabled,w
 14029  1F13  0008               	return
 14030  1F14                     __end_of_mssp1_IRQisEnabled:	
 14031                           
 14032                           	psect	text43
 14033  1FDD                     __ptext43:	
 14034 ;; *************** function _i2c_poller *****************
 14035 ;; Defined at:
 14036 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 14037 ;; Parameters:    Size  Location     Type
 14038 ;;		None
 14039 ;; Auto vars:     Size  Location     Type
 14040 ;;		None
 14041 ;; Return value:  Size  Location     Type
 14042 ;;                  1    wreg      void 
 14043 ;; Registers used:
 14044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14045 ;; Tracked objects:
 14046 ;;		On entry : 0/0
 14047 ;;		On exit  : 0/0
 14048 ;;		Unchanged: 0/0
 14049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14054 ;;Total ram usage:        0 bytes
 14055 ;; Hardware stack levels used:    1
 14056 ;; Hardware stack levels required when called:   11
 14057 ;; This function calls:
 14058 ;;		_i2c_ISR
 14059 ;;		_mssp1_waitForEvent
 14060 ;; This function is called by:
 14061 ;;		_i2c_masterOperation
 14062 ;; This function uses a non-reentrant model
 14063 ;;
 14064                           
 14065                           
 14066                           ;psect for function _i2c_poller
 14067  1FDD                     _i2c_poller:	
 14068  1FDD                     l6823:	
 14069                           ;i2c_master.c: 232: while(i2c_status.busy)
 14070                           
 14071                           ;incstack = 0
 14072 ;; hardware stack exceeded
 14073                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14074                           
 14075  1FDD  0021               	movlb	1	; select bank1
 14076  1FDE  1C47               	btfss	_i2c_status^(0+128),0
 14077  1FDF  0008               	return
 14078                           
 14079                           ;i2c_master.c: 233: {
 14080                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 14081  1FE0  3000               	movlw	0
 14082  1FE1  319F  27D2  319F   	fcall	_mssp1_waitForEvent
 14083                           
 14084                           ;i2c_master.c: 235: i2c_ISR();
 14085  1FE4  3193  233E  319F   	fcall	_i2c_ISR
 14086  1FE7  2FDD               	goto	l6823
 14087  1FE8                     __end_of_i2c_poller:	
 14088                           
 14089                           	psect	text44
 14090  1FD2                     __ptext44:	
 14091 ;; *************** function _mssp1_waitForEvent *****************
 14092 ;; Defined at:
 14093 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  timeout         1    wreg     PTR unsigned int 
 14096 ;;		 -> NULL(0), 
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;  timeout         1    0[BANK0 ] PTR unsigned int 
 14099 ;;		 -> NULL(0), 
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  1    wreg      void 
 14102 ;; Registers used:
 14103 ;;		wreg
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;Total ram usage:        1 bytes
 14114 ;; Hardware stack levels used:    1
 14115 ;; Hardware stack levels required when called:    6
 14116 ;; This function calls:
 14117 ;;		Nothing
 14118 ;; This function is called by:
 14119 ;;		_i2c_poller
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           
 14124                           ;psect for function _mssp1_waitForEvent
 14125  1FD2                     _mssp1_waitForEvent:	
 14126                           
 14127                           ;i2c1_driver.c: 73: if(PIR3bits.SSP1IF == 0)
 14128                           
 14129                           ;incstack = 0
 14130                           ; Regs used in _mssp1_waitForEvent: [wreg]
 14131  1FD2  002E               	movlb	14	; select bank14
 14132  1FD3  180F               	btfsc	15,0	;volatile
 14133  1FD4  0008               	return
 14134  1FD5                     l53:	
 14135                           ;i2c1_driver.c: 74: {
 14136                           ;i2c1_driver.c: 75: while(1)
 14137                           
 14138                           
 14139                           ;i2c1_driver.c: 76: {
 14140                           ;i2c1_driver.c: 77: if(PIR3bits.SSP1IF) break;
 14141  1FD5  002E               	movlb	14	; select bank14
 14142  1FD6  180F               	btfsc	15,0	;volatile
 14143  1FD7  0008               	return
 14144                           
 14145                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 14146  1FD8  3008               	movlw	8
 14147  1FD9                     u5557:	
 14148  1FD9  0B89               	decfsz	9,f
 14149  1FDA  2FD9               	goto	u5557
 14150  1FDB  0000               	nop
 14151  1FDC  2FD5               	goto	l53
 14152  1FDD                     __end_of_mssp1_waitForEvent:	
 14153                           
 14154                           	psect	text45
 14155  133E                     __ptext45:	
 14156 ;; *************** function _i2c_ISR *****************
 14157 ;; Defined at:
 14158 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 14159 ;; Parameters:    Size  Location     Type
 14160 ;;		None
 14161 ;; Auto vars:     Size  Location     Type
 14162 ;;		None
 14163 ;; Return value:  Size  Location     Type
 14164 ;;                  1    wreg      void 
 14165 ;; Registers used:
 14166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14167 ;; Tracked objects:
 14168 ;;		On entry : 0/0
 14169 ;;		On exit  : 0/0
 14170 ;;		Unchanged: 0/0
 14171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14174 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14175 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14176 ;;Total ram usage:        3 bytes
 14177 ;; Hardware stack levels used:    1
 14178 ;; Hardware stack levels required when called:   10
 14179 ;; This function calls:
 14180 ;;		_do_I2C_DO_ACK
 14181 ;;		_do_I2C_DO_ADDRESS_NACK
 14182 ;;		_do_I2C_DO_NACK_RESTART
 14183 ;;		_do_I2C_DO_NACK_STOP
 14184 ;;		_do_I2C_IDLE
 14185 ;;		_do_I2C_RCEN
 14186 ;;		_do_I2C_RESET
 14187 ;;		_do_I2C_RX
 14188 ;;		_do_I2C_SEND_ADR_READ
 14189 ;;		_do_I2C_SEND_ADR_WRITE
 14190 ;;		_do_I2C_SEND_RESTART
 14191 ;;		_do_I2C_SEND_RESTART_READ
 14192 ;;		_do_I2C_SEND_RESTART_WRITE
 14193 ;;		_do_I2C_SEND_STOP
 14194 ;;		_do_I2C_TX
 14195 ;;		_do_I2C_TX_EMPTY
 14196 ;;		_i2c1_driver_isNACK
 14197 ;;		_mssp1_clearIRQ
 14198 ;; This function is called by:
 14199 ;;		_i2c_open
 14200 ;;		_i2c_poller
 14201 ;;		_INTERRUPT_InterruptManager
 14202 ;; This function uses a non-reentrant model
 14203 ;;
 14204                           
 14205                           
 14206                           ;psect for function _i2c_ISR
 14207  133E                     _i2c_ISR:	
 14208                           
 14209                           ;Skip over the trampoline to the duplicate function for level 1
 14210  133E  1C7E               	btfss	126,0
 14211  133F  2B42               	goto	l6807
 14212  1340  3192  2AC5         	ljmp	i1l7099
 14213  1342                     _i2c_ISR$intlevel0:	
 14214  1342                     l6807:	
 14215                           ;incstack = 0
 14216 ;; hardware stack exceeded
 14217                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14218                           
 14219                           
 14220                           ;i2c_master.c: 421: mssp1_clearIRQ();
 14221  1342  319E  2683  3193   	fcall	_mssp1_clearIRQ
 14222                           
 14223                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 14224  1345  0021               	movlb	1	; select bank1
 14225  1346  1DC7               	btfss	_i2c_status^(0+128),3
 14226  1347  2B53               	goto	l6815
 14227  1348  319F  276D  3193   	fcall	_i2c1_driver_isNACK
 14228  134B  1C03               	btfss	3,0
 14229  134C  2B53               	goto	l6815
 14230                           
 14231                           ;i2c_master.c: 428: {
 14232                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 14233  134D  300F               	movlw	15
 14234  134E  0020               	movlb	0	; select bank0
 14235  134F  00A4               	movwf	??_i2c_ISR
 14236  1350  0824               	movf	??_i2c_ISR,w
 14237  1351  0021               	movlb	1	; select bank1
 14238  1352  00D0               	movwf	(_i2c_status^(0+128)+9)
 14239  1353                     l6815:	
 14240                           
 14241                           ;i2c_master.c: 430: }
 14242                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 14243  1353  0021               	movlb	1	; select bank1
 14244  1354  0850               	movf	(_i2c_status^(0+128)+9),w
 14245  1355  0020               	movlb	0	; select bank0
 14246  1356  00A4               	movwf	??_i2c_ISR
 14247  1357  01A5               	clrf	??_i2c_ISR+1
 14248  1358  35A4               	lslf	??_i2c_ISR,f
 14249  1359  0DA5               	rlf	??_i2c_ISR+1,f
 14250  135A  3000               	movlw	low (_fsmStateTable| (0+32768))
 14251  135B  0724               	addwf	??_i2c_ISR,w
 14252  135C  0084               	movwf	4
 14253  135D  3098               	movlw	high (_fsmStateTable| (0+32768))
 14254  135E  3D25               	addwfc	??_i2c_ISR+1,w
 14255  135F  0085               	movwf	5
 14256  1360  3F01               	moviw [1]fsr0
 14257  1361  008A               	movwf	10
 14258  1362  3F00               	moviw [0]fsr0
 14259  1363  000A               	callw
 14260  1364  3193               	pagesel	$
 14261  1365  0020               	movlb	0	; select bank0
 14262  1366  00A6               	movwf	??_i2c_ISR+2
 14263  1367  0826               	movf	??_i2c_ISR+2,w
 14264  1368  0021               	movlb	1	; select bank1
 14265  1369  00D0               	movwf	(_i2c_status^(0+128)+9)
 14266  136A  0008               	return
 14267  136B                     __end_of_i2c_ISR:	
 14268                           
 14269                           	psect	text46
 14270  15EC                     __ptext46:	
 14271 ;; *************** function _do_I2C_RX *****************
 14272 ;; Defined at:
 14273 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 14274 ;; Parameters:    Size  Location     Type
 14275 ;;		None
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;		None
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  1    wreg      enum E15307
 14280 ;; Registers used:
 14281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14291 ;;Total ram usage:        1 bytes
 14292 ;; Hardware stack levels used:    1
 14293 ;; Hardware stack levels required when called:    9
 14294 ;; This function calls:
 14295 ;;		Absolute function
 14296 ;;		_do_I2C_DO_NACK_RESTART
 14297 ;;		_do_I2C_DO_NACK_STOP
 14298 ;;		_i2c1_driver_getRXData
 14299 ;;		_i2c1_driver_sendACK
 14300 ;;		_i2c_restartWrite
 14301 ;;		_rd1RegCompleteHandler
 14302 ;;		_rd2RegCompleteHandler
 14303 ;;		_rdBlkRegCompleteHandler
 14304 ;;		_returnReset
 14305 ;;		_returnStop
 14306 ;;		_wr1RegCompleteHandler
 14307 ;;		_wr2RegCompleteHandler
 14308 ;; This function is called by:
 14309 ;;		_i2c_ISR
 14310 ;;		i1_i2c_ISR
 14311 ;; This function uses a non-reentrant model
 14312 ;;
 14313                           
 14314                           
 14315                           ;psect for function _do_I2C_RX
 14316  15EC                     _do_I2C_RX:	
 14317                           
 14318                           ;Skip over the trampoline to the duplicate function for level 1
 14319  15EC  1C7E               	btfss	126,0
 14320  15ED  2DF0               	goto	l6761
 14321  15EE  3195  2D69         	ljmp	i1l7011
 14322  15F0                     _do_I2C_RX$intlevel0:	
 14323  15F0                     l6761:	
 14324                           ;incstack = 0
 14325 ;; hardware stack exceeded
 14326                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14327                           
 14328                           
 14329                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 14330  15F0  319E  2695  3195   	fcall	_i2c1_driver_getRXData
 14331  15F3  0020               	movlb	0	; select bank0
 14332  15F4  00A0               	movwf	??_do_I2C_RX
 14333  15F5  0021               	movlb	1	; select bank1
 14334  15F6  0849               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 14335  15F7  0086               	movwf	6
 14336  15F8  0187               	clrf	7
 14337  15F9  0020               	movlb	0	; select bank0
 14338  15FA  0820               	movf	??_do_I2C_RX,w
 14339  15FB  0081               	movwf	1
 14340  15FC  3001               	movlw	1
 14341  15FD  00A0               	movwf	??_do_I2C_RX
 14342  15FE  0820               	movf	??_do_I2C_RX,w
 14343  15FF  0021               	movlb	1	; select bank1
 14344  1600  07C9               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 14345                           
 14346                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 14347  1601  3001               	movlw	1
 14348  1602  02CA               	subwf	(_i2c_status^(0+128)+3),f
 14349  1603  3000               	movlw	0
 14350  1604  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14351  1605  084A               	movf	(_i2c_status^(0+128)+3),w
 14352  1606  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14353  1607  1903               	btfsc	3,2
 14354  1608  2E0D               	goto	l314
 14355                           
 14356                           ;i2c_master.c: 361: {
 14357                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 14358  1609  319E  26BF         	fcall	_i2c1_driver_sendACK
 14359                           
 14360                           ;i2c_master.c: 363: return I2C_RCEN;
 14361  160B  3005               	movlw	5
 14362                           
 14363                           ;i2c_master.c: 364: }
 14364  160C  0008               	return
 14365  160D                     l314:	
 14366                           
 14367                           ;i2c_master.c: 365: else
 14368                           ;i2c_master.c: 366: {
 14369                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 14370  160D  1547               	bsf	_i2c_status^(0+128),2
 14371                           
 14372                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 14373  160E  2E15               	goto	l6785
 14374  160F                     l6775:	
 14375                           ;i2c_master.c: 369: {
 14376                           ;i2c_master.c: 370: case i2c_restart_write:
 14377                           
 14378                           
 14379                           ;i2c_master.c: 371: case i2c_restart_read:
 14380                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 14381  160F  319F  275C         	fcall	_do_I2C_DO_NACK_RESTART
 14382  1611  0008               	return
 14383  1612                     l6779:	
 14384                           ;i2c_master.c: 374: case i2c_continue:
 14385                           
 14386                           ;i2c_master.c: 373: default:
 14387                           
 14388                           
 14389                           ;i2c_master.c: 375: case i2c_stop:
 14390                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 14391  1612  319F  2754         	fcall	_do_I2C_DO_NACK_STOP
 14392                           
 14393                           ;i2c_master.c: 377: }
 14394  1614  0008               	return
 14395  1615                     l6785:	
 14396  1615  0021               	movlb	1	; select bank1
 14397  1616  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 14398  1617  0020               	movlb	0	; select bank0
 14399  1618  00A0               	movwf	??_do_I2C_RX
 14400  1619  0820               	movf	??_do_I2C_RX,w
 14401  161A  00A9               	movwf	returnStop@p
 14402  161B  300B               	movlw	11
 14403  161C  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 14404  161D  0086               	movwf	6
 14405  161E  0187               	clrf	7
 14406  161F  3F41               	moviw [1]fsr1
 14407  1620  008A               	movwf	10
 14408  1621  3F40               	moviw [0]fsr1
 14409  1622  000A               	callw
 14410  1623  3195               	pagesel	$
 14411                           
 14412                           ; Switch size 1, requested type "space"
 14413                           ; Number of cases is 4, Range of values is 1 to 4
 14414                           ; switch strategies available:
 14415                           ; Name         Instructions Cycles
 14416                           ; simple_byte           13     7 (average)
 14417                           ; direct_byte           17     9 (fixed)
 14418                           ; jumptable            263     9 (fixed)
 14419                           ;	Chosen strategy is simple_byte
 14420  1624  3A01               	xorlw	1	; case 1
 14421  1625  1903               	skipnz
 14422  1626  2E12               	goto	l6779
 14423  1627  3A03               	xorlw	3	; case 2
 14424  1628  1903               	skipnz
 14425  1629  2E0F               	goto	l6775
 14426  162A  3A01               	xorlw	1	; case 3
 14427  162B  1903               	skipnz
 14428  162C  2E0F               	goto	l6775
 14429  162D  3A07               	xorlw	7	; case 4
 14430  162E  1903               	skipnz
 14431  162F  2E12               	goto	l6779
 14432  1630  2E12               	goto	l6779
 14433  1631  0008               	return
 14434  1632                     __end_of_do_I2C_RX:	
 14435                           
 14436                           	psect	text47
 14437  175E                     __ptext47:	
 14438 ;; *************** function _do_I2C_TX *****************
 14439 ;; Defined at:
 14440 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;		None
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;		None
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      enum E15307
 14447 ;; Registers used:
 14448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14456 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14457 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;Total ram usage:        3 bytes
 14459 ;; Hardware stack levels used:    1
 14460 ;; Hardware stack levels required when called:    9
 14461 ;; This function calls:
 14462 ;;		Absolute function
 14463 ;;		_do_I2C_SEND_RESTART_READ
 14464 ;;		_do_I2C_SEND_RESTART_WRITE
 14465 ;;		_do_I2C_SEND_STOP
 14466 ;;		_i2c1_driver_TXData
 14467 ;;		_i2c1_driver_isNACK
 14468 ;;		_i2c_restartWrite
 14469 ;;		_rd1RegCompleteHandler
 14470 ;;		_rd2RegCompleteHandler
 14471 ;;		_rdBlkRegCompleteHandler
 14472 ;;		_returnReset
 14473 ;;		_returnStop
 14474 ;;		_wr1RegCompleteHandler
 14475 ;;		_wr2RegCompleteHandler
 14476 ;; This function is called by:
 14477 ;;		_i2c_ISR
 14478 ;;		i1_i2c_ISR
 14479 ;; This function uses a non-reentrant model
 14480 ;;
 14481                           
 14482                           
 14483                           ;psect for function _do_I2C_TX
 14484  175E                     _do_I2C_TX:	
 14485                           
 14486                           ;Skip over the trampoline to the duplicate function for level 1
 14487  175E  1C7E               	btfss	126,0
 14488  175F  2F62               	goto	l6731
 14489  1760  3196  2E78         	ljmp	i1l6981
 14490  1762                     _do_I2C_TX$intlevel0:	
 14491  1762                     l6731:	
 14492                           ;incstack = 0
 14493 ;; hardware stack exceeded
 14494                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14495                           
 14496                           
 14497                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 14498  1762  319F  276D  3197   	fcall	_i2c1_driver_isNACK
 14499  1765  1803               	btfsc	3,0
 14500  1766  2F71               	goto	l6749
 14501  1767  2F8E               	goto	l298
 14502  1768                     l6735:	
 14503                           ;i2c_master.c: 338: {
 14504                           ;i2c_master.c: 339: case i2c_restart_read:
 14505                           
 14506                           ;i2c_master.c: 336: {
 14507                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 14508                           
 14509                           
 14510                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 14511  1768  319F  272C         	fcall	_do_I2C_SEND_RESTART_READ
 14512  176A  0008               	return
 14513  176B                     l6739:	
 14514                           ;i2c_master.c: 341: case i2c_restart_write:
 14515                           
 14516                           
 14517                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 14518  176B  319F  2734         	fcall	_do_I2C_SEND_RESTART_WRITE
 14519  176D  0008               	return
 14520  176E                     l6743:	
 14521                           ;i2c_master.c: 344: case i2c_continue:
 14522                           
 14523                           ;i2c_master.c: 343: default:
 14524                           
 14525                           
 14526                           ;i2c_master.c: 345: case i2c_stop:
 14527                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 14528  176E  319F  2744         	fcall	_do_I2C_SEND_STOP
 14529                           
 14530                           ;i2c_master.c: 347: }
 14531  1770  0008               	return
 14532  1771                     l6749:	
 14533  1771  0021               	movlb	1	; select bank1
 14534  1772  0861               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 14535  1773  0020               	movlb	0	; select bank0
 14536  1774  00A1               	movwf	??_do_I2C_TX
 14537  1775  0821               	movf	??_do_I2C_TX,w
 14538  1776  00A9               	movwf	returnStop@p
 14539  1777  3011               	movlw	17
 14540  1778  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 14541  1779  0086               	movwf	6
 14542  177A  0187               	clrf	7
 14543  177B  3F41               	moviw [1]fsr1
 14544  177C  008A               	movwf	10
 14545  177D  3F40               	moviw [0]fsr1
 14546  177E  000A               	callw
 14547  177F  3197               	pagesel	$
 14548                           
 14549                           ; Switch size 1, requested type "space"
 14550                           ; Number of cases is 4, Range of values is 1 to 4
 14551                           ; switch strategies available:
 14552                           ; Name         Instructions Cycles
 14553                           ; simple_byte           13     7 (average)
 14554                           ; direct_byte           17     9 (fixed)
 14555                           ; jumptable            263     9 (fixed)
 14556                           ;	Chosen strategy is simple_byte
 14557  1780  3A01               	xorlw	1	; case 1
 14558  1781  1903               	skipnz
 14559  1782  2F6E               	goto	l6743
 14560  1783  3A03               	xorlw	3	; case 2
 14561  1784  1903               	skipnz
 14562  1785  2F68               	goto	l6735
 14563  1786  3A01               	xorlw	1	; case 3
 14564  1787  1903               	skipnz
 14565  1788  2F6B               	goto	l6739
 14566  1789  3A07               	xorlw	7	; case 4
 14567  178A  1903               	skipnz
 14568  178B  2F6E               	goto	l6743
 14569  178C  2F6E               	goto	l6743
 14570                           
 14571                           ;i2c_master.c: 348: }
 14572  178D  0008               	return
 14573  178E                     l298:	
 14574                           
 14575                           ;i2c_master.c: 349: else
 14576                           ;i2c_master.c: 350: {
 14577                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 14578  178E  0021               	movlb	1	; select bank1
 14579  178F  11C7               	bcf	_i2c_status^(0+128),3
 14580                           
 14581                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 14582  1790  3002               	movlw	2
 14583  1791  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 14584  1792  0086               	movwf	6
 14585  1793  0187               	clrf	7
 14586  1794  3F40               	moviw [0]fsr1
 14587  1795  0084               	movwf	4
 14588  1796  0185               	clrf	5
 14589  1797  0A81               	incf	1,f
 14590  1798  0800               	movf	0,w
 14591  1799  319E  26F3  3197   	fcall	_i2c1_driver_TXData
 14592                           
 14593                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 14594  179C  3001               	movlw	1
 14595  179D  0021               	movlb	1	; select bank1
 14596  179E  02CA               	subwf	(_i2c_status^(0+128)+3),f
 14597  179F  3000               	movlw	0
 14598  17A0  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14599  17A1  084A               	movf	(_i2c_status^(0+128)+3),w
 14600  17A2  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14601  17A3  1D03               	btfss	3,2
 14602  17A4  2FA7               	goto	l6757
 14603  17A5  3006               	movlw	6
 14604  17A6  2FA8               	goto	L4
 14605  17A7                     l6757:	
 14606  17A7  3003               	movlw	3
 14607  17A8                     L4:	
 14608  17A8  0020               	movlb	0	; select bank0
 14609  17A9  00A2               	movwf	_do_I2C_TX$723
 14610  17AA  3000               	movlw	0
 14611  17AB  00A3               	movwf	_do_I2C_TX$723+1
 14612  17AC  0822               	movf	_do_I2C_TX$723,w
 14613  17AD  0008               	return
 14614  17AE                     __end_of_do_I2C_TX:	
 14615                           
 14616                           	psect	text48
 14617  1314                     __ptext48:	
 14618 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 14619 ;; Defined at:
 14620 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 14621 ;; Parameters:    Size  Location     Type
 14622 ;;		None
 14623 ;; Auto vars:     Size  Location     Type
 14624 ;;		None
 14625 ;; Return value:  Size  Location     Type
 14626 ;;                  1    wreg      enum E15307
 14627 ;; Registers used:
 14628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14629 ;; Tracked objects:
 14630 ;;		On entry : 0/0
 14631 ;;		On exit  : 0/0
 14632 ;;		Unchanged: 0/0
 14633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14637 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14638 ;;Total ram usage:        1 bytes
 14639 ;; Hardware stack levels used:    1
 14640 ;; Hardware stack levels required when called:    9
 14641 ;; This function calls:
 14642 ;;		Absolute function
 14643 ;;		_do_I2C_SEND_RESTART
 14644 ;;		_do_I2C_SEND_STOP
 14645 ;;		_i2c_restartWrite
 14646 ;;		_rd1RegCompleteHandler
 14647 ;;		_rd2RegCompleteHandler
 14648 ;;		_rdBlkRegCompleteHandler
 14649 ;;		_returnReset
 14650 ;;		_returnStop
 14651 ;;		_wr1RegCompleteHandler
 14652 ;;		_wr2RegCompleteHandler
 14653 ;; This function is called by:
 14654 ;;		_i2c_ISR
 14655 ;;		i1_i2c_ISR
 14656 ;; This function uses a non-reentrant model
 14657 ;;
 14658                           
 14659                           
 14660                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 14661  1314                     _do_I2C_DO_ADDRESS_NACK:	
 14662                           
 14663                           ;Skip over the trampoline to the duplicate function for level 1
 14664  1314  1C7E               	btfss	126,0
 14665  1315  2B18               	goto	l6715
 14666  1316  3192  2A35         	ljmp	i1l6965
 14667  1318                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 14668  1318                     l6715:	
 14669                           ;incstack = 0
 14670 ;; hardware stack exceeded
 14671                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14672                           
 14673                           
 14674                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 14675  1318  0021               	movlb	1	; select bank1
 14676  1319  11C7               	bcf	_i2c_status^(0+128),3
 14677                           
 14678                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 14679  131A  3002               	movlw	2
 14680  131B  0020               	movlb	0	; select bank0
 14681  131C  00A0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14682  131D  0820               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14683  131E  0021               	movlb	1	; select bank1
 14684  131F  00D1               	movwf	(_i2c_status^(0+128)+10)
 14685                           
 14686                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 14687  1320  2B27               	goto	l6729
 14688  1321                     l6719:	
 14689                           ;i2c_master.c: 324: {
 14690                           ;i2c_master.c: 325: case i2c_restart_read:
 14691                           
 14692                           
 14693                           ;i2c_master.c: 326: case i2c_restart_write:
 14694                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 14695  1321  319F  273C         	fcall	_do_I2C_SEND_RESTART
 14696  1323  0008               	return
 14697  1324                     l6723:	
 14698                           ;i2c_master.c: 328: default:
 14699                           
 14700                           
 14701                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 14702  1324  319F  2744         	fcall	_do_I2C_SEND_STOP
 14703                           
 14704                           ;i2c_master.c: 330: }
 14705  1326  0008               	return
 14706  1327                     l6729:	
 14707  1327  0021               	movlb	1	; select bank1
 14708  1328  0860               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 14709  1329  0020               	movlb	0	; select bank0
 14710  132A  00A0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14711  132B  0820               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14712  132C  00A9               	movwf	returnStop@p
 14713  132D  300F               	movlw	15
 14714  132E  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 14715  132F  0086               	movwf	6
 14716  1330  0187               	clrf	7
 14717  1331  3F41               	moviw [1]fsr1
 14718  1332  008A               	movwf	10
 14719  1333  3F40               	moviw [0]fsr1
 14720  1334  000A               	callw
 14721  1335  3193               	pagesel	$
 14722                           
 14723                           ; Switch size 1, requested type "space"
 14724                           ; Number of cases is 2, Range of values is 2 to 3
 14725                           ; switch strategies available:
 14726                           ; Name         Instructions Cycles
 14727                           ; simple_byte            7     4 (average)
 14728                           ; direct_byte           13     9 (fixed)
 14729                           ; jumptable            263     9 (fixed)
 14730                           ;	Chosen strategy is simple_byte
 14731  1336  3A02               	xorlw	2	; case 2
 14732  1337  1903               	skipnz
 14733  1338  2B21               	goto	l6719
 14734  1339  3A01               	xorlw	1	; case 3
 14735  133A  1903               	skipnz
 14736  133B  2B21               	goto	l6719
 14737  133C  2B24               	goto	l6723
 14738  133D  0008               	return
 14739  133E                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 14740                           
 14741                           	psect	text49
 14742  1F5C                     __ptext49:	
 14743 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 14744 ;; Defined at:
 14745 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 14746 ;; Parameters:    Size  Location     Type
 14747 ;;		None
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;		None
 14750 ;; Return value:  Size  Location     Type
 14751 ;;                  1    wreg      enum E15307
 14752 ;; Registers used:
 14753 ;;		wreg, status,2, status,0, pclath, cstack
 14754 ;; Tracked objects:
 14755 ;;		On entry : 0/0
 14756 ;;		On exit  : 0/0
 14757 ;;		Unchanged: 0/0
 14758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14763 ;;Total ram usage:        0 bytes
 14764 ;; Hardware stack levels used:    1
 14765 ;; Hardware stack levels required when called:    7
 14766 ;; This function calls:
 14767 ;;		_i2c1_driver_sendNACK
 14768 ;; This function is called by:
 14769 ;;		_do_I2C_RX
 14770 ;;		_i2c_ISR
 14771 ;;		i1_i2c_ISR
 14772 ;; This function uses a non-reentrant model
 14773 ;;
 14774                           
 14775                           
 14776                           ;psect for function _do_I2C_DO_NACK_RESTART
 14777  1F5C                     _do_I2C_DO_NACK_RESTART:	
 14778                           
 14779                           ;Skip over the trampoline to the duplicate function for level 1
 14780  1F5C  1C7E               	btfss	126,0
 14781  1F5D  2F60               	goto	l3389
 14782  1F5E  319E  2EBB         	ljmp	i1l4203
 14783  1F60                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 14784  1F60                     l3389:	
 14785                           ;incstack = 0
 14786 ;; hardware stack exceeded
 14787                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14788                           
 14789                           
 14790                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 14791  1F60  319E  26C3         	fcall	_i2c1_driver_sendNACK
 14792                           
 14793                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 14794  1F62  3009               	movlw	9
 14795  1F63  0008               	return
 14796  1F64                     __end_of_do_I2C_DO_NACK_RESTART:	
 14797                           
 14798                           	psect	text50
 14799  1F54                     __ptext50:	
 14800 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 14801 ;; Defined at:
 14802 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 14803 ;; Parameters:    Size  Location     Type
 14804 ;;		None
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;		None
 14807 ;; Return value:  Size  Location     Type
 14808 ;;                  1    wreg      enum E15307
 14809 ;; Registers used:
 14810 ;;		wreg, status,2, status,0, pclath, cstack
 14811 ;; Tracked objects:
 14812 ;;		On entry : 0/0
 14813 ;;		On exit  : 0/0
 14814 ;;		Unchanged: 0/0
 14815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;Total ram usage:        0 bytes
 14821 ;; Hardware stack levels used:    1
 14822 ;; Hardware stack levels required when called:    7
 14823 ;; This function calls:
 14824 ;;		_i2c1_driver_sendNACK
 14825 ;; This function is called by:
 14826 ;;		_do_I2C_RX
 14827 ;;		_i2c_ISR
 14828 ;;		i1_i2c_ISR
 14829 ;; This function uses a non-reentrant model
 14830 ;;
 14831                           
 14832                           
 14833                           ;psect for function _do_I2C_DO_NACK_STOP
 14834  1F54                     _do_I2C_DO_NACK_STOP:	
 14835                           
 14836                           ;Skip over the trampoline to the duplicate function for level 1
 14837  1F54  1C7E               	btfss	126,0
 14838  1F55  2F58               	goto	l3383
 14839  1F56  319E  2EB7         	ljmp	i1l4197
 14840  1F58                     _do_I2C_DO_NACK_STOP$intlevel0:	
 14841  1F58                     l3383:	
 14842                           ;incstack = 0
 14843 ;; hardware stack exceeded
 14844                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 14845                           
 14846                           
 14847                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 14848  1F58  319E  26C3         	fcall	_i2c1_driver_sendNACK
 14849                           
 14850                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 14851  1F5A  300A               	movlw	10
 14852  1F5B  0008               	return
 14853  1F5C                     __end_of_do_I2C_DO_NACK_STOP:	
 14854                           
 14855                           	psect	text51
 14856  1F4C                     __ptext51:	
 14857 ;; *************** function _do_I2C_DO_ACK *****************
 14858 ;; Defined at:
 14859 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 14860 ;; Parameters:    Size  Location     Type
 14861 ;;		None
 14862 ;; Auto vars:     Size  Location     Type
 14863 ;;		None
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  1    wreg      enum E15307
 14866 ;; Registers used:
 14867 ;;		wreg, status,2, status,0, pclath, cstack
 14868 ;; Tracked objects:
 14869 ;;		On entry : 0/0
 14870 ;;		On exit  : 0/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14877 ;;Total ram usage:        0 bytes
 14878 ;; Hardware stack levels used:    1
 14879 ;; Hardware stack levels required when called:    7
 14880 ;; This function calls:
 14881 ;;		_i2c1_driver_sendACK
 14882 ;; This function is called by:
 14883 ;;		_i2c_ISR
 14884 ;;		i1_i2c_ISR
 14885 ;; This function uses a non-reentrant model
 14886 ;;
 14887                           
 14888                           
 14889                           ;psect for function _do_I2C_DO_ACK
 14890  1F4C                     _do_I2C_DO_ACK:	
 14891                           
 14892                           ;Skip over the trampoline to the duplicate function for level 1
 14893  1F4C  1C7E               	btfss	126,0
 14894  1F4D  2F50               	goto	l3489
 14895  1F4E  319E  2EB3         	ljmp	i1l4629
 14896  1F50                     _do_I2C_DO_ACK$intlevel0:	
 14897  1F50                     l3489:	
 14898                           ;incstack = 0
 14899                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 14900                           
 14901                           
 14902                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 14903  1F50  319E  26BF         	fcall	_i2c1_driver_sendACK
 14904                           
 14905                           ;i2c_master.c: 302: return I2C_RCEN;
 14906  1F52  3005               	movlw	5
 14907  1F53  0008               	return
 14908  1F54                     __end_of_do_I2C_DO_ACK:	
 14909                           
 14910                           	psect	text52
 14911  1F93                     __ptext52:	
 14912 ;; *************** function _do_I2C_RCEN *****************
 14913 ;; Defined at:
 14914 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 14915 ;; Parameters:    Size  Location     Type
 14916 ;;		None
 14917 ;; Auto vars:     Size  Location     Type
 14918 ;;		None
 14919 ;; Return value:  Size  Location     Type
 14920 ;;                  1    wreg      enum E15307
 14921 ;; Registers used:
 14922 ;;		wreg, status,2, status,0, pclath, cstack
 14923 ;; Tracked objects:
 14924 ;;		On entry : 0/0
 14925 ;;		On exit  : 0/0
 14926 ;;		Unchanged: 0/0
 14927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14932 ;;Total ram usage:        0 bytes
 14933 ;; Hardware stack levels used:    1
 14934 ;; Hardware stack levels required when called:    7
 14935 ;; This function calls:
 14936 ;;		_i2c1_driver_startRX
 14937 ;; This function is called by:
 14938 ;;		_i2c_ISR
 14939 ;;		i1_i2c_ISR
 14940 ;; This function uses a non-reentrant model
 14941 ;;
 14942                           
 14943                           
 14944                           ;psect for function _do_I2C_RCEN
 14945  1F93                     _do_I2C_RCEN:	
 14946                           
 14947                           ;Skip over the trampoline to the duplicate function for level 1
 14948  1F93  1C7E               	btfss	126,0
 14949  1F94  2F97               	goto	l3481
 14950  1F95  319E  2ED5         	ljmp	i1l4621
 14951  1F97                     _do_I2C_RCEN$intlevel0:	
 14952  1F97                     l3481:	
 14953                           ;incstack = 0
 14954                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 14955                           
 14956                           
 14957                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 14958  1F97  0021               	movlb	1	; select bank1
 14959  1F98  11C7               	bcf	_i2c_status^(0+128),3
 14960                           
 14961                           ;i2c_master.c: 295: i2c1_driver_startRX();
 14962  1F99  319E  2692         	fcall	_i2c1_driver_startRX
 14963                           
 14964                           ;i2c_master.c: 296: return I2C_RX;
 14965  1F9B  3004               	movlw	4
 14966  1F9C  0008               	return
 14967  1F9D                     __end_of_do_I2C_RCEN:	
 14968                           
 14969                           	psect	text53
 14970  1FC7                     __ptext53:	
 14971 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 14972 ;; Defined at:
 14973 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 14974 ;; Parameters:    Size  Location     Type
 14975 ;;		None
 14976 ;; Auto vars:     Size  Location     Type
 14977 ;;		None
 14978 ;; Return value:  Size  Location     Type
 14979 ;;                  1    wreg      enum E15307
 14980 ;; Registers used:
 14981 ;;		wreg, status,2, status,0, pclath, cstack
 14982 ;; Tracked objects:
 14983 ;;		On entry : 0/0
 14984 ;;		On exit  : 0/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14991 ;;Total ram usage:        0 bytes
 14992 ;; Hardware stack levels used:    1
 14993 ;; Hardware stack levels required when called:    7
 14994 ;; This function calls:
 14995 ;;		_i2c1_driver_TXData
 14996 ;; This function is called by:
 14997 ;;		_i2c_ISR
 14998 ;;		i1_i2c_ISR
 14999 ;; This function uses a non-reentrant model
 15000 ;;
 15001                           
 15002                           
 15003                           ;psect for function _do_I2C_SEND_ADR_WRITE
 15004  1FC7                     _do_I2C_SEND_ADR_WRITE:	
 15005                           
 15006                           ;Skip over the trampoline to the duplicate function for level 1
 15007  1FC7  1C7E               	btfss	126,0
 15008  1FC8  2FCB               	goto	l3473
 15009  1FC9  319F  2F06         	ljmp	i1l4613
 15010  1FCB                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 15011  1FCB                     l3473:	
 15012                           ;incstack = 0
 15013                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15014                           
 15015                           
 15016                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 15017  1FCB  0021               	movlb	1	; select bank1
 15018  1FCC  15C7               	bsf	_i2c_status^(0+128),3
 15019                           
 15020                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 15021  1FCD  3548               	lslf	(_i2c_status^(0+128)+1),w
 15022  1FCE  319E  26F3         	fcall	_i2c1_driver_TXData
 15023                           
 15024                           ;i2c_master.c: 289: return I2C_TX;
 15025  1FD0  3003               	movlw	3
 15026  1FD1  0008               	return
 15027  1FD2                     __end_of_do_I2C_SEND_ADR_WRITE:	
 15028                           
 15029                           	psect	text54
 15030  1006                     __ptext54:	
 15031 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 15032 ;; Defined at:
 15033 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;		None
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;		None
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  1    wreg      enum E15307
 15040 ;; Registers used:
 15041 ;;		wreg, status,2, status,0, pclath, cstack
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;Total ram usage:        0 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; Hardware stack levels required when called:    7
 15054 ;; This function calls:
 15055 ;;		_i2c1_driver_TXData
 15056 ;; This function is called by:
 15057 ;;		_i2c_ISR
 15058 ;;		i1_i2c_ISR
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           
 15063                           ;psect for function _do_I2C_SEND_ADR_READ
 15064  1006                     _do_I2C_SEND_ADR_READ:	
 15065                           
 15066                           ;Skip over the trampoline to the duplicate function for level 1
 15067  1006  1C7E               	btfss	126,0
 15068  1007  280A               	goto	l3465
 15069  1008  319F  2F1C         	ljmp	i1l4605
 15070  100A                     _do_I2C_SEND_ADR_READ$intlevel0:	
 15071  100A                     l3465:	
 15072                           ;incstack = 0
 15073                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 15074                           
 15075                           
 15076                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 15077  100A  0021               	movlb	1	; select bank1
 15078  100B  15C7               	bsf	_i2c_status^(0+128),3
 15079                           
 15080                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 15081  100C  1403               	setc
 15082  100D  0D48               	rlf	(_i2c_status^(0+128)+1),w
 15083  100E  319E  26F3         	fcall	_i2c1_driver_TXData
 15084                           
 15085                           ;i2c_master.c: 282: return I2C_RCEN;
 15086  1010  3005               	movlw	5
 15087  1011  0008               	return
 15088  1012                     __end_of_do_I2C_SEND_ADR_READ:	
 15089                           
 15090                           	psect	text55
 15091  1F44                     __ptext55:	
 15092 ;; *************** function _do_I2C_SEND_STOP *****************
 15093 ;; Defined at:
 15094 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 15095 ;; Parameters:    Size  Location     Type
 15096 ;;		None
 15097 ;; Auto vars:     Size  Location     Type
 15098 ;;		None
 15099 ;; Return value:  Size  Location     Type
 15100 ;;                  1    wreg      enum E15307
 15101 ;; Registers used:
 15102 ;;		wreg, status,2, status,0, pclath, cstack
 15103 ;; Tracked objects:
 15104 ;;		On entry : 0/0
 15105 ;;		On exit  : 0/0
 15106 ;;		Unchanged: 0/0
 15107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15112 ;;Total ram usage:        0 bytes
 15113 ;; Hardware stack levels used:    1
 15114 ;; Hardware stack levels required when called:    7
 15115 ;; This function calls:
 15116 ;;		_i2c1_driver_stop
 15117 ;; This function is called by:
 15118 ;;		_do_I2C_DO_ADDRESS_NACK
 15119 ;;		_do_I2C_TX
 15120 ;;		_do_I2C_TX_EMPTY
 15121 ;;		_i2c_ISR
 15122 ;;		i1_i2c_ISR
 15123 ;; This function uses a non-reentrant model
 15124 ;;
 15125                           
 15126                           
 15127                           ;psect for function _do_I2C_SEND_STOP
 15128  1F44                     _do_I2C_SEND_STOP:	
 15129                           
 15130                           ;Skip over the trampoline to the duplicate function for level 1
 15131  1F44  1C7E               	btfss	126,0
 15132  1F45  2F48               	goto	l3377
 15133  1F46  319E  2EAF         	ljmp	i1l4191
 15134  1F48                     _do_I2C_SEND_STOP$intlevel0:	
 15135  1F48                     l3377:	
 15136                           ;incstack = 0
 15137 ;; hardware stack exceeded
 15138                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 15139                           
 15140                           
 15141                           ;i2c_master.c: 274: i2c1_driver_stop();
 15142  1F48  319E  268F         	fcall	_i2c1_driver_stop
 15143                           
 15144                           ;i2c_master.c: 275: return I2C_IDLE;
 15145  1F4A  3000               	movlw	0
 15146  1F4B  0008               	return
 15147  1F4C                     __end_of_do_I2C_SEND_STOP:	
 15148                           
 15149                           	psect	text56
 15150  1F3C                     __ptext56:	
 15151 ;; *************** function _do_I2C_SEND_RESTART *****************
 15152 ;; Defined at:
 15153 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 15154 ;; Parameters:    Size  Location     Type
 15155 ;;		None
 15156 ;; Auto vars:     Size  Location     Type
 15157 ;;		None
 15158 ;; Return value:  Size  Location     Type
 15159 ;;                  1    wreg      enum E15307
 15160 ;; Registers used:
 15161 ;;		wreg, status,2, status,0, pclath, cstack
 15162 ;; Tracked objects:
 15163 ;;		On entry : 0/0
 15164 ;;		On exit  : 0/0
 15165 ;;		Unchanged: 0/0
 15166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15171 ;;Total ram usage:        0 bytes
 15172 ;; Hardware stack levels used:    1
 15173 ;; Hardware stack levels required when called:    7
 15174 ;; This function calls:
 15175 ;;		_i2c1_driver_restart
 15176 ;; This function is called by:
 15177 ;;		_do_I2C_DO_ADDRESS_NACK
 15178 ;;		_do_I2C_TX_EMPTY
 15179 ;;		_i2c_ISR
 15180 ;;		i1_i2c_ISR
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           
 15185                           ;psect for function _do_I2C_SEND_RESTART
 15186  1F3C                     _do_I2C_SEND_RESTART:	
 15187                           
 15188                           ;Skip over the trampoline to the duplicate function for level 1
 15189  1F3C  1C7E               	btfss	126,0
 15190  1F3D  2F40               	goto	l3371
 15191  1F3E  319E  2EAB         	ljmp	i1l4185
 15192  1F40                     _do_I2C_SEND_RESTART$intlevel0:	
 15193  1F40                     l3371:	
 15194                           ;incstack = 0
 15195 ;; hardware stack exceeded
 15196                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15197                           
 15198                           
 15199                           ;i2c_master.c: 268: i2c1_driver_restart();
 15200  1F40  319E  268C         	fcall	_i2c1_driver_restart
 15201                           
 15202                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 15203  1F42  3001               	movlw	1
 15204  1F43  0008               	return
 15205  1F44                     __end_of_do_I2C_SEND_RESTART:	
 15206                           
 15207                           	psect	text57
 15208  1F34                     __ptext57:	
 15209 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 15210 ;; Defined at:
 15211 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 15212 ;; Parameters:    Size  Location     Type
 15213 ;;		None
 15214 ;; Auto vars:     Size  Location     Type
 15215 ;;		None
 15216 ;; Return value:  Size  Location     Type
 15217 ;;                  1    wreg      enum E15307
 15218 ;; Registers used:
 15219 ;;		wreg, status,2, status,0, pclath, cstack
 15220 ;; Tracked objects:
 15221 ;;		On entry : 0/0
 15222 ;;		On exit  : 0/0
 15223 ;;		Unchanged: 0/0
 15224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15229 ;;Total ram usage:        0 bytes
 15230 ;; Hardware stack levels used:    1
 15231 ;; Hardware stack levels required when called:    7
 15232 ;; This function calls:
 15233 ;;		_i2c1_driver_restart
 15234 ;; This function is called by:
 15235 ;;		_do_I2C_TX
 15236 ;;		_i2c_ISR
 15237 ;;		i1_i2c_ISR
 15238 ;; This function uses a non-reentrant model
 15239 ;;
 15240                           
 15241                           
 15242                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 15243  1F34                     _do_I2C_SEND_RESTART_WRITE:	
 15244                           
 15245                           ;Skip over the trampoline to the duplicate function for level 1
 15246  1F34  1C7E               	btfss	126,0
 15247  1F35  2F38               	goto	l3365
 15248  1F36  319E  2EA7         	ljmp	i1l4179
 15249  1F38                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 15250  1F38                     l3365:	
 15251                           ;incstack = 0
 15252 ;; hardware stack exceeded
 15253                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15254                           
 15255                           
 15256                           ;i2c_master.c: 262: i2c1_driver_restart();
 15257  1F38  319E  268C         	fcall	_i2c1_driver_restart
 15258                           
 15259                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 15260  1F3A  3002               	movlw	2
 15261  1F3B  0008               	return
 15262  1F3C                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 15263                           
 15264                           	psect	text58
 15265  1F2C                     __ptext58:	
 15266 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 15267 ;; Defined at:
 15268 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;		None
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;		None
 15273 ;; Return value:  Size  Location     Type
 15274 ;;                  1    wreg      enum E15307
 15275 ;; Registers used:
 15276 ;;		wreg, status,2, status,0, pclath, cstack
 15277 ;; Tracked objects:
 15278 ;;		On entry : 0/0
 15279 ;;		On exit  : 0/0
 15280 ;;		Unchanged: 0/0
 15281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15286 ;;Total ram usage:        0 bytes
 15287 ;; Hardware stack levels used:    1
 15288 ;; Hardware stack levels required when called:    7
 15289 ;; This function calls:
 15290 ;;		_i2c1_driver_restart
 15291 ;; This function is called by:
 15292 ;;		_do_I2C_TX
 15293 ;;		_i2c_ISR
 15294 ;;		i1_i2c_ISR
 15295 ;; This function uses a non-reentrant model
 15296 ;;
 15297                           
 15298                           
 15299                           ;psect for function _do_I2C_SEND_RESTART_READ
 15300  1F2C                     _do_I2C_SEND_RESTART_READ:	
 15301                           
 15302                           ;Skip over the trampoline to the duplicate function for level 1
 15303  1F2C  1C7E               	btfss	126,0
 15304  1F2D  2F30               	goto	l3359
 15305  1F2E  319E  2EA3         	ljmp	i1l4173
 15306  1F30                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 15307  1F30                     l3359:	
 15308                           ;incstack = 0
 15309 ;; hardware stack exceeded
 15310                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 15311                           
 15312                           
 15313                           ;i2c_master.c: 256: i2c1_driver_restart();
 15314  1F30  319E  268C         	fcall	_i2c1_driver_restart
 15315                           
 15316                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 15317  1F32  3001               	movlw	1
 15318  1F33  0008               	return
 15319  1F34                     __end_of_do_I2C_SEND_RESTART_READ:	
 15320                           
 15321                           	psect	text59
 15322  1F76                     __ptext59:	
 15323 ;; *************** function _do_I2C_IDLE *****************
 15324 ;; Defined at:
 15325 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 15326 ;; Parameters:    Size  Location     Type
 15327 ;;		None
 15328 ;; Auto vars:     Size  Location     Type
 15329 ;;		None
 15330 ;; Return value:  Size  Location     Type
 15331 ;;                  1    wreg      enum E15307
 15332 ;; Registers used:
 15333 ;;		wreg, status,2
 15334 ;; Tracked objects:
 15335 ;;		On entry : 0/0
 15336 ;;		On exit  : 0/0
 15337 ;;		Unchanged: 0/0
 15338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15343 ;;Total ram usage:        0 bytes
 15344 ;; Hardware stack levels used:    1
 15345 ;; Hardware stack levels required when called:    6
 15346 ;; This function calls:
 15347 ;;		Nothing
 15348 ;; This function is called by:
 15349 ;;		_i2c_ISR
 15350 ;;		i1_i2c_ISR
 15351 ;; This function uses a non-reentrant model
 15352 ;;
 15353                           
 15354                           
 15355                           ;psect for function _do_I2C_IDLE
 15356  1F76                     _do_I2C_IDLE:	
 15357                           
 15358                           ;Skip over the trampoline to the duplicate function for level 1
 15359  1F76  1C7E               	btfss	126,0
 15360  1F77  2F7A               	goto	l3457
 15361  1F78  319E  2ED0         	ljmp	i1l4597
 15362  1F7A                     _do_I2C_IDLE$intlevel0:	
 15363  1F7A                     l3457:	
 15364                           ;incstack = 0
 15365                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 15366                           
 15367                           
 15368                           ;i2c_master.c: 249: i2c_status.busy = 0;
 15369  1F7A  0021               	movlb	1	; select bank1
 15370  1F7B  1047               	bcf	_i2c_status^(0+128),0
 15371                           
 15372                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 15373  1F7C  01D1               	clrf	(_i2c_status^(0+128)+10)
 15374                           
 15375                           ;i2c_master.c: 251: return I2C_RESET;
 15376  1F7D  300E               	movlw	14
 15377  1F7E  0008               	return
 15378  1F7F                     __end_of_do_I2C_IDLE:	
 15379                           
 15380                           	psect	text60
 15381  1FBC                     __ptext60:	
 15382 ;; *************** function _do_I2C_RESET *****************
 15383 ;; Defined at:
 15384 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 15385 ;; Parameters:    Size  Location     Type
 15386 ;;		None
 15387 ;; Auto vars:     Size  Location     Type
 15388 ;;		None
 15389 ;; Return value:  Size  Location     Type
 15390 ;;                  1    wreg      enum E15307
 15391 ;; Registers used:
 15392 ;;		wreg, status,2, status,0, pclath, cstack
 15393 ;; Tracked objects:
 15394 ;;		On entry : 0/0
 15395 ;;		On exit  : 0/0
 15396 ;;		Unchanged: 0/0
 15397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15402 ;;Total ram usage:        0 bytes
 15403 ;; Hardware stack levels used:    1
 15404 ;; Hardware stack levels required when called:    7
 15405 ;; This function calls:
 15406 ;;		_i2c1_driver_resetBus
 15407 ;; This function is called by:
 15408 ;;		_i2c_ISR
 15409 ;;		i1_i2c_ISR
 15410 ;; This function uses a non-reentrant model
 15411 ;;
 15412                           
 15413                           
 15414                           ;psect for function _do_I2C_RESET
 15415  1FBC                     _do_I2C_RESET:	
 15416                           
 15417                           ;Skip over the trampoline to the duplicate function for level 1
 15418  1FBC  1C7E               	btfss	126,0
 15419  1FBD  2FC0               	goto	l3447
 15420  1FBE  319E  2EFF         	ljmp	i1l4587
 15421  1FC0                     _do_I2C_RESET$intlevel0:	
 15422  1FC0                     l3447:	
 15423                           ;incstack = 0
 15424                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 15425                           
 15426                           
 15427                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 15428  1FC0  319E  2667         	fcall	_i2c1_driver_resetBus
 15429                           
 15430                           ;i2c_master.c: 242: i2c_status.busy = 0;
 15431  1FC2  0021               	movlb	1	; select bank1
 15432  1FC3  1047               	bcf	_i2c_status^(0+128),0
 15433                           
 15434                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 15435  1FC4  01D1               	clrf	(_i2c_status^(0+128)+10)
 15436                           
 15437                           ;i2c_master.c: 244: return I2C_RESET;
 15438  1FC5  300E               	movlw	14
 15439  1FC6  0008               	return
 15440  1FC7                     __end_of_do_I2C_RESET:	
 15441                           
 15442                           	psect	text61
 15443  1398                     __ptext61:	
 15444 ;; *************** function _do_I2C_TX_EMPTY *****************
 15445 ;; Defined at:
 15446 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 15447 ;; Parameters:    Size  Location     Type
 15448 ;;		None
 15449 ;; Auto vars:     Size  Location     Type
 15450 ;;		None
 15451 ;; Return value:  Size  Location     Type
 15452 ;;                  1    wreg      enum E15307
 15453 ;; Registers used:
 15454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15455 ;; Tracked objects:
 15456 ;;		On entry : 0/0
 15457 ;;		On exit  : 0/0
 15458 ;;		Unchanged: 0/0
 15459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15462 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15463 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15464 ;;Total ram usage:        1 bytes
 15465 ;; Hardware stack levels used:    1
 15466 ;; Hardware stack levels required when called:    9
 15467 ;; This function calls:
 15468 ;;		Absolute function
 15469 ;;		_do_I2C_SEND_RESTART
 15470 ;;		_do_I2C_SEND_STOP
 15471 ;;		_i2c_restartWrite
 15472 ;;		_mssp1_setIRQ
 15473 ;;		_rd1RegCompleteHandler
 15474 ;;		_rd2RegCompleteHandler
 15475 ;;		_rdBlkRegCompleteHandler
 15476 ;;		_returnReset
 15477 ;;		_returnStop
 15478 ;;		_wr1RegCompleteHandler
 15479 ;;		_wr2RegCompleteHandler
 15480 ;; This function is called by:
 15481 ;;		_i2c_ISR
 15482 ;;		i1_i2c_ISR
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           
 15487                           ;psect for function _do_I2C_TX_EMPTY
 15488  1398                     _do_I2C_TX_EMPTY:	
 15489                           
 15490                           ;Skip over the trampoline to the duplicate function for level 1
 15491  1398  1C7E               	btfss	126,0
 15492  1399  2B9C               	goto	l6787
 15493  139A  3192  2AEB         	ljmp	i1l7037
 15494  139C                     _do_I2C_TX_EMPTY$intlevel0:	
 15495  139C                     l6787:	
 15496                           ;incstack = 0
 15497 ;; hardware stack exceeded
 15498                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15499                           
 15500                           
 15501                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 15502  139C  0021               	movlb	1	; select bank1
 15503  139D  1547               	bsf	_i2c_status^(0+128),2
 15504                           
 15505                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 15506  139E  2BA9               	goto	l6805
 15507  139F                     l6789:	
 15508                           ;i2c_master.c: 386: {
 15509                           ;i2c_master.c: 387: case i2c_restart_read:
 15510                           
 15511                           
 15512                           ;i2c_master.c: 388: case i2c_restart_write:
 15513                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 15514  139F  319F  273C         	fcall	_do_I2C_SEND_RESTART
 15515  13A1  0008               	return
 15516  13A2                     l6793:	
 15517                           ;i2c_master.c: 390: case i2c_continue:
 15518                           
 15519                           
 15520                           ;i2c_master.c: 391: mssp1_setIRQ();
 15521  13A2  319E  2698         	fcall	_mssp1_setIRQ
 15522                           
 15523                           ;i2c_master.c: 392: return I2C_TX;
 15524  13A4  3003               	movlw	3
 15525  13A5  0008               	return
 15526  13A6                     l6799:	
 15527                           ;i2c_master.c: 394: case i2c_stop:
 15528                           
 15529                           ;i2c_master.c: 393: default:
 15530                           
 15531                           
 15532                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 15533  13A6  319F  2744         	fcall	_do_I2C_SEND_STOP
 15534                           
 15535                           ;i2c_master.c: 396: }
 15536  13A8  0008               	return
 15537  13A9                     l6805:	
 15538  13A9  0021               	movlb	1	; select bank1
 15539  13AA  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15540  13AB  0020               	movlb	0	; select bank0
 15541  13AC  00A0               	movwf	??_do_I2C_TX_EMPTY
 15542  13AD  0820               	movf	??_do_I2C_TX_EMPTY,w
 15543  13AE  00A9               	movwf	returnStop@p
 15544  13AF  300B               	movlw	11
 15545  13B0  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 15546  13B1  0086               	movwf	6
 15547  13B2  0187               	clrf	7
 15548  13B3  3F41               	moviw [1]fsr1
 15549  13B4  008A               	movwf	10
 15550  13B5  3F40               	moviw [0]fsr1
 15551  13B6  000A               	callw
 15552  13B7  3193               	pagesel	$
 15553                           
 15554                           ; Switch size 1, requested type "space"
 15555                           ; Number of cases is 4, Range of values is 1 to 4
 15556                           ; switch strategies available:
 15557                           ; Name         Instructions Cycles
 15558                           ; simple_byte           13     7 (average)
 15559                           ; direct_byte           17     9 (fixed)
 15560                           ; jumptable            263     9 (fixed)
 15561                           ;	Chosen strategy is simple_byte
 15562  13B8  3A01               	xorlw	1	; case 1
 15563  13B9  1903               	skipnz
 15564  13BA  2BA6               	goto	l6799
 15565  13BB  3A03               	xorlw	3	; case 2
 15566  13BC  1903               	skipnz
 15567  13BD  2B9F               	goto	l6789
 15568  13BE  3A01               	xorlw	1	; case 3
 15569  13BF  1903               	skipnz
 15570  13C0  2B9F               	goto	l6789
 15571  13C1  3A07               	xorlw	7	; case 4
 15572  13C2  1903               	skipnz
 15573  13C3  2BA2               	goto	l6793
 15574  13C4  2BA6               	goto	l6799
 15575  13C5  0008               	return
 15576  13C6                     __end_of_do_I2C_TX_EMPTY:	
 15577                           
 15578                           	psect	text62
 15579  1E98                     __ptext62:	
 15580 ;; *************** function _mssp1_setIRQ *****************
 15581 ;; Defined at:
 15582 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 15583 ;; Parameters:    Size  Location     Type
 15584 ;;		None
 15585 ;; Auto vars:     Size  Location     Type
 15586 ;;		None
 15587 ;; Return value:  Size  Location     Type
 15588 ;;                  1    wreg      void 
 15589 ;; Registers used:
 15590 ;;		None
 15591 ;; Tracked objects:
 15592 ;;		On entry : 0/0
 15593 ;;		On exit  : 0/0
 15594 ;;		Unchanged: 0/0
 15595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15600 ;;Total ram usage:        0 bytes
 15601 ;; Hardware stack levels used:    1
 15602 ;; Hardware stack levels required when called:    6
 15603 ;; This function calls:
 15604 ;;		Nothing
 15605 ;; This function is called by:
 15606 ;;		_do_I2C_TX_EMPTY
 15607 ;; This function uses a non-reentrant model
 15608 ;;
 15609                           
 15610                           
 15611                           ;psect for function _mssp1_setIRQ
 15612  1E98                     _mssp1_setIRQ:	
 15613                           
 15614                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 15615                           
 15616                           ;incstack = 0
 15617                           ; Regs used in _mssp1_setIRQ: []
 15618  1E98  002E               	movlb	14	; select bank14
 15619  1E99  140F               	bsf	15,0	;volatile
 15620  1E9A  0008               	return
 15621  1E9B                     __end_of_mssp1_setIRQ:	
 15622                           
 15623                           	psect	text63
 15624  1F6D                     __ptext63:	
 15625 ;; *************** function _i2c1_driver_isNACK *****************
 15626 ;; Defined at:
 15627 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;		None
 15630 ;; Auto vars:     Size  Location     Type
 15631 ;;		None
 15632 ;; Return value:  Size  Location     Type
 15633 ;;		None               void
 15634 ;; Registers used:
 15635 ;;		wreg, status,2, status,0
 15636 ;; Tracked objects:
 15637 ;;		On entry : 0/0
 15638 ;;		On exit  : 0/0
 15639 ;;		Unchanged: 0/0
 15640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15643 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15644 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15645 ;;Total ram usage:        1 bytes
 15646 ;; Hardware stack levels used:    1
 15647 ;; Hardware stack levels required when called:    6
 15648 ;; This function calls:
 15649 ;;		Nothing
 15650 ;; This function is called by:
 15651 ;;		_do_I2C_TX
 15652 ;;		_i2c_ISR
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           
 15657                           ;psect for function _i2c1_driver_isNACK
 15658  1F6D                     _i2c1_driver_isNACK:	
 15659                           
 15660                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT;
 15661                           
 15662                           ;incstack = 0
 15663                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 15664  1F6D  0023               	movlb	3	; select bank3
 15665  1F6E  0E11               	swapf	17,w	;volatile
 15666  1F6F  0C89               	rrf	9,f
 15667  1F70  0C89               	rrf	9,f
 15668  1F71  3901               	andlw	1
 15669  1F72  0020               	movlb	0	; select bank0
 15670  1F73  00A0               	movwf	??_i2c1_driver_isNACK
 15671  1F74  0C20               	rrf	??_i2c1_driver_isNACK,w
 15672  1F75  0008               	return
 15673  1F76                     __end_of_i2c1_driver_isNACK:	
 15674                           
 15675                           	psect	text64
 15676  1EF3                     __ptext64:	
 15677 ;; *************** function _i2c1_driver_TXData *****************
 15678 ;; Defined at:
 15679 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 15680 ;; Parameters:    Size  Location     Type
 15681 ;;  d               1    wreg     unsigned char 
 15682 ;; Auto vars:     Size  Location     Type
 15683 ;;  d               1    0[BANK0 ] unsigned char 
 15684 ;; Return value:  Size  Location     Type
 15685 ;;                  1    wreg      void 
 15686 ;; Registers used:
 15687 ;;		wreg
 15688 ;; Tracked objects:
 15689 ;;		On entry : 0/0
 15690 ;;		On exit  : 0/0
 15691 ;;		Unchanged: 0/0
 15692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15696 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15697 ;;Total ram usage:        1 bytes
 15698 ;; Hardware stack levels used:    1
 15699 ;; Hardware stack levels required when called:    6
 15700 ;; This function calls:
 15701 ;;		Nothing
 15702 ;; This function is called by:
 15703 ;;		_do_I2C_SEND_ADR_READ
 15704 ;;		_do_I2C_SEND_ADR_WRITE
 15705 ;;		_do_I2C_TX
 15706 ;; This function uses a non-reentrant model
 15707 ;;
 15708                           
 15709                           
 15710                           ;psect for function _i2c1_driver_TXData
 15711  1EF3                     _i2c1_driver_TXData:	
 15712                           
 15713                           ;incstack = 0
 15714                           ; Regs used in _i2c1_driver_TXData: [wreg]
 15715                           ;i2c1_driver_TXData@d stored from wreg
 15716  1EF3  0020               	movlb	0	; select bank0
 15717  1EF4  00A0               	movwf	i2c1_driver_TXData@d
 15718                           
 15719                           ;i2c1_driver.c: 188: SSP1BUF = d;
 15720  1EF5  0820               	movf	i2c1_driver_TXData@d,w
 15721  1EF6  0023               	movlb	3	; select bank3
 15722  1EF7  008C               	movwf	12	;volatile
 15723  1EF8  0008               	return
 15724  1EF9                     __end_of_i2c1_driver_TXData:	
 15725                           
 15726                           	psect	text65
 15727  1E95                     __ptext65:	
 15728 ;; *************** function _i2c1_driver_getRXData *****************
 15729 ;; Defined at:
 15730 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 15731 ;; Parameters:    Size  Location     Type
 15732 ;;		None
 15733 ;; Auto vars:     Size  Location     Type
 15734 ;;		None
 15735 ;; Return value:  Size  Location     Type
 15736 ;;                  1    wreg      unsigned char 
 15737 ;; Registers used:
 15738 ;;		wreg
 15739 ;; Tracked objects:
 15740 ;;		On entry : 0/0
 15741 ;;		On exit  : 0/0
 15742 ;;		Unchanged: 0/0
 15743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15748 ;;Total ram usage:        0 bytes
 15749 ;; Hardware stack levels used:    1
 15750 ;; Hardware stack levels required when called:    6
 15751 ;; This function calls:
 15752 ;;		Nothing
 15753 ;; This function is called by:
 15754 ;;		_do_I2C_RX
 15755 ;; This function uses a non-reentrant model
 15756 ;;
 15757                           
 15758                           
 15759                           ;psect for function _i2c1_driver_getRXData
 15760  1E95                     _i2c1_driver_getRXData:	
 15761                           
 15762                           ;i2c1_driver.c: 173: return SSP1BUF;
 15763                           
 15764                           ;incstack = 0
 15765                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 15766  1E95  0023               	movlb	3	; select bank3
 15767  1E96  080C               	movf	12,w	;volatile
 15768  1E97  0008               	return
 15769  1E98                     __end_of_i2c1_driver_getRXData:	
 15770                           
 15771                           	psect	text66
 15772  1EC3                     __ptext66:	
 15773 ;; *************** function _i2c1_driver_sendNACK *****************
 15774 ;; Defined at:
 15775 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 15776 ;; Parameters:    Size  Location     Type
 15777 ;;		None
 15778 ;; Auto vars:     Size  Location     Type
 15779 ;;		None
 15780 ;; Return value:  Size  Location     Type
 15781 ;;                  1    wreg      void 
 15782 ;; Registers used:
 15783 ;;		None
 15784 ;; Tracked objects:
 15785 ;;		On entry : 0/0
 15786 ;;		On exit  : 0/0
 15787 ;;		Unchanged: 0/0
 15788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15793 ;;Total ram usage:        0 bytes
 15794 ;; Hardware stack levels used:    1
 15795 ;; Hardware stack levels required when called:    6
 15796 ;; This function calls:
 15797 ;;		Nothing
 15798 ;; This function is called by:
 15799 ;;		_do_I2C_DO_NACK_STOP
 15800 ;;		_do_I2C_DO_NACK_RESTART
 15801 ;; This function uses a non-reentrant model
 15802 ;;
 15803                           
 15804                           
 15805                           ;psect for function _i2c1_driver_sendNACK
 15806  1EC3                     _i2c1_driver_sendNACK:	
 15807                           
 15808                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 15809                           
 15810                           ;incstack = 0
 15811 ;; hardware stack exceeded
 15812                           ; Regs used in _i2c1_driver_sendNACK: []
 15813  1EC3  0023               	movlb	3	; select bank3
 15814  1EC4  1691               	bsf	17,5	;volatile
 15815                           
 15816                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 15817  1EC5  1611               	bsf	17,4	;volatile
 15818  1EC6  0008               	return
 15819  1EC7                     __end_of_i2c1_driver_sendNACK:	
 15820                           
 15821                           	psect	text67
 15822  1E67                     __ptext67:	
 15823 ;; *************** function _i2c1_driver_resetBus *****************
 15824 ;; Defined at:
 15825 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 15826 ;; Parameters:    Size  Location     Type
 15827 ;;		None
 15828 ;; Auto vars:     Size  Location     Type
 15829 ;;		None
 15830 ;; Return value:  Size  Location     Type
 15831 ;;                  1    wreg      void 
 15832 ;; Registers used:
 15833 ;;		None
 15834 ;; Tracked objects:
 15835 ;;		On entry : 0/0
 15836 ;;		On exit  : 0/0
 15837 ;;		Unchanged: 0/0
 15838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15843 ;;Total ram usage:        0 bytes
 15844 ;; Hardware stack levels used:    1
 15845 ;; Hardware stack levels required when called:    6
 15846 ;; This function calls:
 15847 ;;		Nothing
 15848 ;; This function is called by:
 15849 ;;		_do_I2C_RESET
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           
 15854                           ;psect for function _i2c1_driver_resetBus
 15855  1E67                     _i2c1_driver_resetBus:	
 15856                           
 15857                           ;incstack = 0
 15858                           ; Regs used in _i2c1_driver_resetBus: []
 15859  1E67  0008               	return
 15860  1E68                     __end_of_i2c1_driver_resetBus:	
 15861                           
 15862                           	psect	text68
 15863  1E92                     __ptext68:	
 15864 ;; *************** function _i2c1_driver_startRX *****************
 15865 ;; Defined at:
 15866 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 15867 ;; Parameters:    Size  Location     Type
 15868 ;;		None
 15869 ;; Auto vars:     Size  Location     Type
 15870 ;;		None
 15871 ;; Return value:  Size  Location     Type
 15872 ;;                  1    wreg      void 
 15873 ;; Registers used:
 15874 ;;		None
 15875 ;; Tracked objects:
 15876 ;;		On entry : 0/0
 15877 ;;		On exit  : 0/0
 15878 ;;		Unchanged: 0/0
 15879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15884 ;;Total ram usage:        0 bytes
 15885 ;; Hardware stack levels used:    1
 15886 ;; Hardware stack levels required when called:    6
 15887 ;; This function calls:
 15888 ;;		Nothing
 15889 ;; This function is called by:
 15890 ;;		_do_I2C_RCEN
 15891 ;; This function uses a non-reentrant model
 15892 ;;
 15893                           
 15894                           
 15895                           ;psect for function _i2c1_driver_startRX
 15896  1E92                     _i2c1_driver_startRX:	
 15897                           
 15898                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 15899                           
 15900                           ;incstack = 0
 15901                           ; Regs used in _i2c1_driver_startRX: []
 15902  1E92  0023               	movlb	3	; select bank3
 15903  1E93  1591               	bsf	17,3	;volatile
 15904  1E94  0008               	return
 15905  1E95                     __end_of_i2c1_driver_startRX:	
 15906                           
 15907                           	psect	text69
 15908  11BA                     __ptext69:	
 15909 ;; *************** function _rdBlkRegCompleteHandler *****************
 15910 ;; Defined at:
 15911 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15912 ;; Parameters:    Size  Location     Type
 15913 ;;  p               1    9[BANK0 ] PTR void 
 15914 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15915 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15916 ;; Auto vars:     Size  Location     Type
 15917 ;;		None
 15918 ;; Return value:  Size  Location     Type
 15919 ;;                  1    wreg      enum E97
 15920 ;; Registers used:
 15921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15922 ;; Tracked objects:
 15923 ;;		On entry : 0/0
 15924 ;;		On exit  : 0/0
 15925 ;;		Unchanged: 0/0
 15926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15927 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;Total ram usage:        1 bytes
 15932 ;; Hardware stack levels used:    1
 15933 ;; Hardware stack levels required when called:    8
 15934 ;; This function calls:
 15935 ;;		_i2c_setBuffer
 15936 ;;		_i2c_setDataCompleteCallback
 15937 ;; This function is called by:
 15938 ;;		_i2c_readDataBlock
 15939 ;;		_do_I2C_DO_ADDRESS_NACK
 15940 ;;		_do_I2C_TX
 15941 ;;		_do_I2C_RX
 15942 ;;		_do_I2C_TX_EMPTY
 15943 ;;		i1_do_I2C_DO_ADDRESS_NACK
 15944 ;;		i1_do_I2C_TX
 15945 ;;		i1_do_I2C_RX
 15946 ;;		i1_do_I2C_TX_EMPTY
 15947 ;; This function uses a non-reentrant model
 15948 ;;
 15949                           
 15950                           
 15951                           ;psect for function _rdBlkRegCompleteHandler
 15952  11BA                     _rdBlkRegCompleteHandler:	
 15953                           
 15954                           ;Skip over the trampoline to the duplicate function for level 1
 15955  11BA  1C7E               	btfss	126,0
 15956  11BB  29BE               	goto	l3439
 15957  11BC  3191  293C         	ljmp	i1l4253
 15958  11BE                     _rdBlkRegCompleteHandler$intlevel0:	
 15959  11BE                     l3439:	
 15960                           ;incstack = 0
 15961 ;; hardware stack exceeded
 15962                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15963                           
 15964                           
 15965                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 15966  11BE  0020               	movlb	0	; select bank0
 15967  11BF  0829               	movf	rdBlkRegCompleteHandler@p,w
 15968  11C0  0086               	movwf	6
 15969  11C1  0187               	clrf	7
 15970  11C2  3F40               	moviw [0]fsr1
 15971  11C3  00A0               	movwf	i2c_setBuffer@bufferSize
 15972  11C4  3F41               	moviw [1]fsr1
 15973  11C5  00A1               	movwf	i2c_setBuffer@bufferSize+1
 15974  11C6  0829               	movf	rdBlkRegCompleteHandler@p,w
 15975  11C7  3E02               	addlw	2
 15976  11C8  0086               	movwf	6
 15977  11C9  0187               	clrf	7
 15978  11CA  0801               	movf	1,w
 15979  11CB  3190  20CF  3191   	fcall	_i2c_setBuffer
 15980                           
 15981                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 15982  11CE  3000               	movlw	0
 15983  11CF  0020               	movlb	0	; select bank0
 15984  11D0  00A5               	movwf	i2c_setDataCompleteCallback@cb
 15985  11D1  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 15986  11D2  01A7               	clrf	i2c_setDataCompleteCallback@p
 15987  11D3  3190  2036         	fcall	_i2c_setDataCompleteCallback
 15988                           
 15989                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 15990  11D5  3002               	movlw	2
 15991  11D6  0008               	return
 15992  11D7                     __end_of_rdBlkRegCompleteHandler:	
 15993                           
 15994                           	psect	text70
 15995  1126                     __ptext70:	
 15996 ;; *************** function _rd2RegCompleteHandler *****************
 15997 ;; Defined at:
 15998 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15999 ;; Parameters:    Size  Location     Type
 16000 ;;  p               1    9[BANK0 ] PTR void 
 16001 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16002 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16003 ;; Auto vars:     Size  Location     Type
 16004 ;;		None
 16005 ;; Return value:  Size  Location     Type
 16006 ;;                  1    wreg      enum E97
 16007 ;; Registers used:
 16008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16009 ;; Tracked objects:
 16010 ;;		On entry : 0/0
 16011 ;;		On exit  : 0/0
 16012 ;;		Unchanged: 0/0
 16013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16014 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16017 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16018 ;;Total ram usage:        1 bytes
 16019 ;; Hardware stack levels used:    1
 16020 ;; Hardware stack levels required when called:    8
 16021 ;; This function calls:
 16022 ;;		_i2c_setBuffer
 16023 ;;		_i2c_setDataCompleteCallback
 16024 ;; This function is called by:
 16025 ;;		_i2c_read2ByteRegister
 16026 ;;		_do_I2C_DO_ADDRESS_NACK
 16027 ;;		_do_I2C_TX
 16028 ;;		_do_I2C_RX
 16029 ;;		_do_I2C_TX_EMPTY
 16030 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16031 ;;		i1_do_I2C_TX
 16032 ;;		i1_do_I2C_RX
 16033 ;;		i1_do_I2C_TX_EMPTY
 16034 ;; This function uses a non-reentrant model
 16035 ;;
 16036                           
 16037                           
 16038                           ;psect for function _rd2RegCompleteHandler
 16039  1126                     _rd2RegCompleteHandler:	
 16040                           
 16041                           ;Skip over the trampoline to the duplicate function for level 1
 16042  1126  1C7E               	btfss	126,0
 16043  1127  292A               	goto	l3423
 16044  1128  3190  28AC         	ljmp	i1l4237
 16045  112A                     _rd2RegCompleteHandler$intlevel0:	
 16046  112A                     l3423:	
 16047                           ;incstack = 0
 16048 ;; hardware stack exceeded
 16049                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16050                           
 16051                           
 16052                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 16053  112A  3002               	movlw	2
 16054  112B  0020               	movlb	0	; select bank0
 16055  112C  00A0               	movwf	i2c_setBuffer@bufferSize
 16056  112D  3000               	movlw	0
 16057  112E  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16058  112F  0829               	movf	rd2RegCompleteHandler@p,w
 16059  1130  3190  20CF  3191   	fcall	_i2c_setBuffer
 16060                           
 16061                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 16062  1133  3000               	movlw	0
 16063  1134  0020               	movlb	0	; select bank0
 16064  1135  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16065  1136  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16066  1137  01A7               	clrf	i2c_setDataCompleteCallback@p
 16067  1138  3190  2036         	fcall	_i2c_setDataCompleteCallback
 16068                           
 16069                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 16070  113A  3002               	movlw	2
 16071  113B  0008               	return
 16072  113C                     __end_of_rd2RegCompleteHandler:	
 16073                           
 16074                           	psect	text71
 16075  1110                     __ptext71:	
 16076 ;; *************** function _rd1RegCompleteHandler *****************
 16077 ;; Defined at:
 16078 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16079 ;; Parameters:    Size  Location     Type
 16080 ;;  p               1    9[BANK0 ] PTR void 
 16081 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16082 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16083 ;; Auto vars:     Size  Location     Type
 16084 ;;		None
 16085 ;; Return value:  Size  Location     Type
 16086 ;;                  1    wreg      enum E97
 16087 ;; Registers used:
 16088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16089 ;; Tracked objects:
 16090 ;;		On entry : 0/0
 16091 ;;		On exit  : 0/0
 16092 ;;		Unchanged: 0/0
 16093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16094 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16097 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16098 ;;Total ram usage:        1 bytes
 16099 ;; Hardware stack levels used:    1
 16100 ;; Hardware stack levels required when called:    8
 16101 ;; This function calls:
 16102 ;;		_i2c_setBuffer
 16103 ;;		_i2c_setDataCompleteCallback
 16104 ;; This function is called by:
 16105 ;;		_i2c_read1ByteRegister
 16106 ;;		_do_I2C_DO_ADDRESS_NACK
 16107 ;;		_do_I2C_TX
 16108 ;;		_do_I2C_RX
 16109 ;;		_do_I2C_TX_EMPTY
 16110 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16111 ;;		i1_do_I2C_TX
 16112 ;;		i1_do_I2C_RX
 16113 ;;		i1_do_I2C_TX_EMPTY
 16114 ;; This function uses a non-reentrant model
 16115 ;;
 16116                           
 16117                           
 16118                           ;psect for function _rd1RegCompleteHandler
 16119  1110                     _rd1RegCompleteHandler:	
 16120                           
 16121                           ;Skip over the trampoline to the duplicate function for level 1
 16122  1110  1C7E               	btfss	126,0
 16123  1111  2914               	goto	l3415
 16124  1112  3190  289C         	ljmp	i1l4229
 16125  1114                     _rd1RegCompleteHandler$intlevel0:	
 16126  1114                     l3415:	
 16127                           ;incstack = 0
 16128 ;; hardware stack exceeded
 16129                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16130                           
 16131                           
 16132                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 16133  1114  3001               	movlw	1
 16134  1115  0020               	movlb	0	; select bank0
 16135  1116  00A0               	movwf	i2c_setBuffer@bufferSize
 16136  1117  3000               	movlw	0
 16137  1118  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16138  1119  0829               	movf	rd1RegCompleteHandler@p,w
 16139  111A  3190  20CF  3191   	fcall	_i2c_setBuffer
 16140                           
 16141                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 16142  111D  3000               	movlw	0
 16143  111E  0020               	movlb	0	; select bank0
 16144  111F  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16145  1120  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16146  1121  01A7               	clrf	i2c_setDataCompleteCallback@p
 16147  1122  3190  2036         	fcall	_i2c_setDataCompleteCallback
 16148                           
 16149                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 16150  1124  3002               	movlw	2
 16151  1125  0008               	return
 16152  1126                     __end_of_rd1RegCompleteHandler:	
 16153                           
 16154                           	psect	text72
 16155  10FA                     __ptext72:	
 16156 ;; *************** function _wr1RegCompleteHandler *****************
 16157 ;; Defined at:
 16158 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16159 ;; Parameters:    Size  Location     Type
 16160 ;;  p               1    9[BANK0 ] PTR void 
 16161 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16162 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16163 ;; Auto vars:     Size  Location     Type
 16164 ;;		None
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  1    wreg      enum E97
 16167 ;; Registers used:
 16168 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16169 ;; Tracked objects:
 16170 ;;		On entry : 0/0
 16171 ;;		On exit  : 0/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16174 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16177 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16178 ;;Total ram usage:        1 bytes
 16179 ;; Hardware stack levels used:    1
 16180 ;; Hardware stack levels required when called:    8
 16181 ;; This function calls:
 16182 ;;		_i2c_setBuffer
 16183 ;;		_i2c_setDataCompleteCallback
 16184 ;; This function is called by:
 16185 ;;		_i2c_write1ByteRegister
 16186 ;;		_do_I2C_DO_ADDRESS_NACK
 16187 ;;		_do_I2C_TX
 16188 ;;		_do_I2C_RX
 16189 ;;		_do_I2C_TX_EMPTY
 16190 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16191 ;;		i1_do_I2C_TX
 16192 ;;		i1_do_I2C_RX
 16193 ;;		i1_do_I2C_TX_EMPTY
 16194 ;; This function uses a non-reentrant model
 16195 ;;
 16196                           
 16197                           
 16198                           ;psect for function _wr1RegCompleteHandler
 16199  10FA                     _wr1RegCompleteHandler:	
 16200                           
 16201                           ;Skip over the trampoline to the duplicate function for level 1
 16202  10FA  1C7E               	btfss	126,0
 16203  10FB  28FE               	goto	l3407
 16204  10FC  3190  288C         	ljmp	i1l4221
 16205  10FE                     _wr1RegCompleteHandler$intlevel0:	
 16206  10FE                     l3407:	
 16207                           ;incstack = 0
 16208 ;; hardware stack exceeded
 16209                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16210                           
 16211                           
 16212                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 16213  10FE  3001               	movlw	1
 16214  10FF  0020               	movlb	0	; select bank0
 16215  1100  00A0               	movwf	i2c_setBuffer@bufferSize
 16216  1101  3000               	movlw	0
 16217  1102  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16218  1103  0829               	movf	wr1RegCompleteHandler@p,w
 16219  1104  3190  20CF  3190   	fcall	_i2c_setBuffer
 16220                           
 16221                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 16222  1107  3000               	movlw	0
 16223  1108  0020               	movlb	0	; select bank0
 16224  1109  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16225  110A  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16226  110B  01A7               	clrf	i2c_setDataCompleteCallback@p
 16227  110C  3190  2036         	fcall	_i2c_setDataCompleteCallback
 16228                           
 16229                           ;i2c_simple_master.c: 35: return i2c_continue;
 16230  110E  3004               	movlw	4
 16231  110F  0008               	return
 16232  1110                     __end_of_wr1RegCompleteHandler:	
 16233                           
 16234                           	psect	text73
 16235  1EED                     __ptext73:	
 16236 ;; *************** function _i2c_restartWrite *****************
 16237 ;; Defined at:
 16238 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 16239 ;; Parameters:    Size  Location     Type
 16240 ;;  p               1    9[BANK0 ] PTR void 
 16241 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16242 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16243 ;; Auto vars:     Size  Location     Type
 16244 ;;		None
 16245 ;; Return value:  Size  Location     Type
 16246 ;;                  1    wreg      enum E96
 16247 ;; Registers used:
 16248 ;;		wreg
 16249 ;; Tracked objects:
 16250 ;;		On entry : 0/0
 16251 ;;		On exit  : 0/0
 16252 ;;		Unchanged: 0/0
 16253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16254 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16257 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16258 ;;Total ram usage:        1 bytes
 16259 ;; Hardware stack levels used:    1
 16260 ;; Hardware stack levels required when called:    6
 16261 ;; This function calls:
 16262 ;;		Nothing
 16263 ;; This function is called by:
 16264 ;;		_i2c_write1ByteRegister
 16265 ;;		_i2c_read1ByteRegister
 16266 ;;		_i2c_writeNBytes
 16267 ;;		_i2c_read2ByteRegister
 16268 ;;		_i2c_write2ByteRegister
 16269 ;;		_i2c_readDataBlock
 16270 ;;		_do_I2C_DO_ADDRESS_NACK
 16271 ;;		_do_I2C_TX
 16272 ;;		_do_I2C_RX
 16273 ;;		_do_I2C_TX_EMPTY
 16274 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16275 ;;		i1_do_I2C_TX
 16276 ;;		i1_do_I2C_RX
 16277 ;;		i1_do_I2C_TX_EMPTY
 16278 ;; This function uses a non-reentrant model
 16279 ;;
 16280                           
 16281                           
 16282                           ;psect for function _i2c_restartWrite
 16283  1EED                     _i2c_restartWrite:	
 16284                           
 16285                           ;Skip over the trampoline to the duplicate function for level 1
 16286  1EED  1C7E               	btfss	126,0
 16287  1EEE  2EF1               	goto	l3403
 16288  1EEF  3180  2802         	ljmp	i1l4217
 16289  1EF1                     _i2c_restartWrite$intlevel0:	
 16290  1EF1                     l3403:	
 16291                           ;incstack = 0
 16292                           ; Regs used in _i2c_restartWrite: [wreg]
 16293                           
 16294                           
 16295                           ;i2c_types.c: 37: return i2c_restart_write;
 16296  1EF1  3003               	movlw	3
 16297  1EF2  0008               	return
 16298  1EF3                     __end_of_i2c_restartWrite:	
 16299                           
 16300                           	psect	text74
 16301  1EE7                     __ptext74:	
 16302 ;; *************** function _returnReset *****************
 16303 ;; Defined at:
 16304 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 16305 ;; Parameters:    Size  Location     Type
 16306 ;;  p               1    9[BANK0 ] PTR void 
 16307 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16308 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16309 ;; Auto vars:     Size  Location     Type
 16310 ;;		None
 16311 ;; Return value:  Size  Location     Type
 16312 ;;                  1    wreg      enum E15143
 16313 ;; Registers used:
 16314 ;;		wreg
 16315 ;; Tracked objects:
 16316 ;;		On entry : 0/0
 16317 ;;		On exit  : 0/0
 16318 ;;		Unchanged: 0/0
 16319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16320 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16323 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16324 ;;Total ram usage:        1 bytes
 16325 ;; Hardware stack levels used:    1
 16326 ;; Hardware stack levels required when called:    6
 16327 ;; This function calls:
 16328 ;;		Nothing
 16329 ;; This function is called by:
 16330 ;;		_i2c_open
 16331 ;;		_do_I2C_DO_ADDRESS_NACK
 16332 ;;		_do_I2C_TX
 16333 ;;		_do_I2C_RX
 16334 ;;		_do_I2C_TX_EMPTY
 16335 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16336 ;;		i1_do_I2C_TX
 16337 ;;		i1_do_I2C_RX
 16338 ;;		i1_do_I2C_TX_EMPTY
 16339 ;; This function uses a non-reentrant model
 16340 ;;
 16341                           
 16342                           
 16343                           ;psect for function _returnReset
 16344  1EE7                     _returnReset:	
 16345                           
 16346                           ;Skip over the trampoline to the duplicate function for level 1
 16347  1EE7  1C7E               	btfss	126,0
 16348  1EE8  2EEB               	goto	l3399
 16349  1EE9  3188  2800         	ljmp	i1l4213
 16350  1EEB                     _returnReset$intlevel0:	
 16351  1EEB                     l3399:	
 16352                           ;incstack = 0
 16353                           ; Regs used in _returnReset: [wreg]
 16354                           
 16355                           
 16356                           ;i2c_master.c: 450: return i2c_reset_link;
 16357  1EEB  3005               	movlw	5
 16358  1EEC  0008               	return
 16359  1EED                     __end_of_returnReset:	
 16360                           
 16361                           	psect	text75
 16362  1EE1                     __ptext75:	
 16363 ;; *************** function _returnStop *****************
 16364 ;; Defined at:
 16365 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 16366 ;; Parameters:    Size  Location     Type
 16367 ;;  p               1    9[BANK0 ] PTR void 
 16368 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16369 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16370 ;; Auto vars:     Size  Location     Type
 16371 ;;		None
 16372 ;; Return value:  Size  Location     Type
 16373 ;;                  1    wreg      enum E15143
 16374 ;; Registers used:
 16375 ;;		wreg
 16376 ;; Tracked objects:
 16377 ;;		On entry : 0/0
 16378 ;;		On exit  : 0/0
 16379 ;;		Unchanged: 0/0
 16380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16381 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16384 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16385 ;;Total ram usage:        1 bytes
 16386 ;; Hardware stack levels used:    1
 16387 ;; Hardware stack levels required when called:    6
 16388 ;; This function calls:
 16389 ;;		Nothing
 16390 ;; This function is called by:
 16391 ;;		_i2c_open
 16392 ;;		_setCallBack
 16393 ;;		_do_I2C_DO_ADDRESS_NACK
 16394 ;;		_do_I2C_TX
 16395 ;;		_do_I2C_RX
 16396 ;;		_do_I2C_TX_EMPTY
 16397 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16398 ;;		i1_do_I2C_TX
 16399 ;;		i1_do_I2C_RX
 16400 ;;		i1_do_I2C_TX_EMPTY
 16401 ;; This function uses a non-reentrant model
 16402 ;;
 16403                           
 16404                           
 16405                           ;psect for function _returnStop
 16406  1EE1                     _returnStop:	
 16407                           
 16408                           ;Skip over the trampoline to the duplicate function for level 1
 16409  1EE1  1C7E               	btfss	126,0
 16410  1EE2  2EE5               	goto	l3395
 16411  1EE3  319E  2E69         	ljmp	i1l4209
 16412  1EE5                     _returnStop$intlevel0:	
 16413  1EE5                     l3395:	
 16414                           ;incstack = 0
 16415                           ; Regs used in _returnStop: [wreg]
 16416                           
 16417                           
 16418                           ;i2c_master.c: 445: return i2c_stop;
 16419  1EE5  3001               	movlw	1
 16420  1EE6  0008               	return
 16421  1EE7                     __end_of_returnStop:	
 16422                           
 16423                           	psect	text76
 16424  10E4                     __ptext76:	
 16425 ;; *************** function _wr2RegCompleteHandler *****************
 16426 ;; Defined at:
 16427 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16428 ;; Parameters:    Size  Location     Type
 16429 ;;  p               1    9[BANK0 ] PTR void 
 16430 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16431 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16432 ;; Auto vars:     Size  Location     Type
 16433 ;;		None
 16434 ;; Return value:  Size  Location     Type
 16435 ;;                  1    wreg      enum E97
 16436 ;; Registers used:
 16437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16438 ;; Tracked objects:
 16439 ;;		On entry : 0/0
 16440 ;;		On exit  : 0/0
 16441 ;;		Unchanged: 0/0
 16442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16443 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16446 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16447 ;;Total ram usage:        1 bytes
 16448 ;; Hardware stack levels used:    1
 16449 ;; Hardware stack levels required when called:    8
 16450 ;; This function calls:
 16451 ;;		_i2c_setBuffer
 16452 ;;		_i2c_setDataCompleteCallback
 16453 ;; This function is called by:
 16454 ;;		_i2c_write2ByteRegister
 16455 ;;		_do_I2C_DO_ADDRESS_NACK
 16456 ;;		_do_I2C_TX
 16457 ;;		_do_I2C_RX
 16458 ;;		_do_I2C_TX_EMPTY
 16459 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16460 ;;		i1_do_I2C_TX
 16461 ;;		i1_do_I2C_RX
 16462 ;;		i1_do_I2C_TX_EMPTY
 16463 ;; This function uses a non-reentrant model
 16464 ;;
 16465                           
 16466                           
 16467                           ;psect for function _wr2RegCompleteHandler
 16468  10E4                     _wr2RegCompleteHandler:	
 16469                           
 16470                           ;Skip over the trampoline to the duplicate function for level 1
 16471  10E4  1C7E               	btfss	126,0
 16472  10E5  28E8               	goto	l3431
 16473  10E6  3190  287C         	ljmp	i1l4245
 16474  10E8                     _wr2RegCompleteHandler$intlevel0:	
 16475  10E8                     l3431:	
 16476                           ;incstack = 0
 16477 ;; hardware stack exceeded
 16478                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16479                           
 16480                           
 16481                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 16482  10E8  3002               	movlw	2
 16483  10E9  0020               	movlb	0	; select bank0
 16484  10EA  00A0               	movwf	i2c_setBuffer@bufferSize
 16485  10EB  3000               	movlw	0
 16486  10EC  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16487  10ED  0829               	movf	wr2RegCompleteHandler@p,w
 16488  10EE  3190  20CF  3190   	fcall	_i2c_setBuffer
 16489                           
 16490                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 16491  10F1  3000               	movlw	0
 16492  10F2  0020               	movlb	0	; select bank0
 16493  10F3  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16494  10F4  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16495  10F5  01A7               	clrf	i2c_setDataCompleteCallback@p
 16496  10F6  3190  2036         	fcall	_i2c_setDataCompleteCallback
 16497                           
 16498                           ;i2c_simple_master.c: 114: return i2c_continue;
 16499  10F8  3004               	movlw	4
 16500  10F9  0008               	return
 16501  10FA                     __end_of_wr2RegCompleteHandler:	
 16502                           
 16503                           	psect	text77
 16504  1036                     __ptext77:	
 16505 ;; *************** function _i2c_setDataCompleteCallback *****************
 16506 ;; Defined at:
 16507 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 16510 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16511 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 16512 ;;  p               1    7[BANK0 ] PTR void 
 16513 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16514 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16515 ;; Auto vars:     Size  Location     Type
 16516 ;;		None
 16517 ;; Return value:  Size  Location     Type
 16518 ;;                  1    wreg      void 
 16519 ;; Registers used:
 16520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16521 ;; Tracked objects:
 16522 ;;		On entry : 0/0
 16523 ;;		On exit  : 0/0
 16524 ;;		Unchanged: 0/0
 16525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16526 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16529 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16530 ;;Total ram usage:        4 bytes
 16531 ;; Hardware stack levels used:    1
 16532 ;; Hardware stack levels required when called:    7
 16533 ;; This function calls:
 16534 ;;		_setCallBack
 16535 ;; This function is called by:
 16536 ;;		_wr1RegCompleteHandler
 16537 ;;		_i2c_write1ByteRegister
 16538 ;;		_rd1RegCompleteHandler
 16539 ;;		_i2c_read1ByteRegister
 16540 ;;		_rd2RegCompleteHandler
 16541 ;;		_wr2RegCompleteHandler
 16542 ;;		_rdBlkRegCompleteHandler
 16543 ;;		_i2c_read2ByteRegister
 16544 ;;		_i2c_write2ByteRegister
 16545 ;;		_i2c_readDataBlock
 16546 ;; This function uses a non-reentrant model
 16547 ;;
 16548                           
 16549                           
 16550                           ;psect for function _i2c_setDataCompleteCallback
 16551  1036                     _i2c_setDataCompleteCallback:	
 16552                           
 16553                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 16554                           
 16555                           ;incstack = 0
 16556                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16557  1036  0020               	movlb	0	; select bank0
 16558  1037  0826               	movf	i2c_setDataCompleteCallback@cb+1,w
 16559  1038  00A1               	movwf	setCallBack@cb+1
 16560  1039  0825               	movf	i2c_setDataCompleteCallback@cb,w
 16561  103A  00A0               	movwf	setCallBack@cb
 16562  103B  0827               	movf	i2c_setDataCompleteCallback@p,w
 16563  103C  00A8               	movwf	??_i2c_setDataCompleteCallback
 16564  103D  0828               	movf	??_i2c_setDataCompleteCallback,w
 16565  103E  00A2               	movwf	setCallBack@p
 16566  103F  3000               	movlw	0
 16567  1040  3192  22A0         	fcall	_setCallBack
 16568  1042  0008               	return
 16569  1043                     __end_of_i2c_setDataCompleteCallback:	
 16570                           
 16571                           	psect	text78
 16572  12A0                     __ptext78:	
 16573 ;; *************** function _setCallBack *****************
 16574 ;; Defined at:
 16575 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 16576 ;; Parameters:    Size  Location     Type
 16577 ;;  idx             1    wreg     enum E15325
 16578 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 16579 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16580 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 16581 ;;  p               1    2[BANK0 ] PTR void 
 16582 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16583 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16584 ;; Auto vars:     Size  Location     Type
 16585 ;;  idx             1    4[BANK0 ] enum E15325
 16586 ;; Return value:  Size  Location     Type
 16587 ;;                  1    wreg      void 
 16588 ;; Registers used:
 16589 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16590 ;; Tracked objects:
 16591 ;;		On entry : 0/0
 16592 ;;		On exit  : 0/0
 16593 ;;		Unchanged: 0/0
 16594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16595 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16596 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16598 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16599 ;;Total ram usage:        5 bytes
 16600 ;; Hardware stack levels used:    1
 16601 ;; Hardware stack levels required when called:    6
 16602 ;; This function calls:
 16603 ;;		Nothing
 16604 ;; This function is called by:
 16605 ;;		_i2c_setDataCompleteCallback
 16606 ;;		_i2c_setAddressNACKCallback
 16607 ;;		_i2c_setWriteCollisionCallback
 16608 ;;		_i2c_setDataNACKCallback
 16609 ;;		_i2c_setTimeOutCallback
 16610 ;; This function uses a non-reentrant model
 16611 ;;
 16612                           
 16613                           
 16614                           ;psect for function _setCallBack
 16615  12A0                     _setCallBack:	
 16616                           
 16617                           ;incstack = 0
 16618                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 16619                           ;setCallBack@idx stored from wreg
 16620  12A0  0020               	movlb	0	; select bank0
 16621  12A1  00A4               	movwf	setCallBack@idx
 16622                           
 16623                           ;i2c_master.c: 455: if(cb)
 16624  12A2  0820               	movf	setCallBack@cb,w
 16625  12A3  0421               	iorwf	setCallBack@cb+1,w
 16626  12A4  1903               	btfsc	3,2
 16627  12A5  2AB7               	goto	l3327
 16628                           
 16629                           ;i2c_master.c: 456: {
 16630                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 16631  12A6  3524               	lslf	setCallBack@idx,w
 16632  12A7  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16633  12A8  0086               	movwf	6
 16634  12A9  0187               	clrf	7
 16635  12AA  0820               	movf	setCallBack@cb,w
 16636  12AB  3FC0               	movwi [0]fsr1
 16637  12AC  0821               	movf	setCallBack@cb+1,w
 16638  12AD  3FC1               	movwi [1]fsr1
 16639                           
 16640                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 16641  12AE  0822               	movf	setCallBack@p,w
 16642  12AF  00A3               	movwf	??_setCallBack
 16643  12B0  0824               	movf	setCallBack@idx,w
 16644  12B1  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16645  12B2  0086               	movwf	6
 16646  12B3  0187               	clrf	7
 16647  12B4  0823               	movf	??_setCallBack,w
 16648  12B5  0081               	movwf	1
 16649                           
 16650                           ;i2c_master.c: 459: }
 16651  12B6  0008               	return
 16652  12B7                     l3327:	
 16653                           
 16654                           ;i2c_master.c: 460: else
 16655                           ;i2c_master.c: 461: {
 16656                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 16657  12B7  3524               	lslf	setCallBack@idx,w
 16658  12B8  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16659  12B9  0086               	movwf	6
 16660  12BA  0187               	clrf	7
 16661  12BB  30E1               	movlw	low _returnStop
 16662  12BC  3FC0               	movwi [0]fsr1
 16663  12BD  301E               	movlw	high _returnStop
 16664  12BE  3FC1               	movwi [1]fsr1
 16665                           
 16666                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 16667  12BF  0824               	movf	setCallBack@idx,w
 16668  12C0  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16669  12C1  0086               	movwf	6
 16670  12C2  0187               	clrf	7
 16671  12C3  0181               	clrf	1
 16672  12C4  0008               	return
 16673  12C5                     __end_of_setCallBack:	
 16674                           
 16675                           	psect	text79
 16676  10CF                     __ptext79:	
 16677 ;; *************** function _i2c_setBuffer *****************
 16678 ;; Defined at:
 16679 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 16680 ;; Parameters:    Size  Location     Type
 16681 ;;  buffer          1    wreg     PTR void 
 16682 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16683 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16684 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16685 ;;  bufferSize      2    0[BANK0 ] unsigned int 
 16686 ;; Auto vars:     Size  Location     Type
 16687 ;;  buffer          1    3[BANK0 ] PTR void 
 16688 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16689 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16690 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16691 ;; Return value:  Size  Location     Type
 16692 ;;                  1    wreg      void 
 16693 ;; Registers used:
 16694 ;;		wreg
 16695 ;; Tracked objects:
 16696 ;;		On entry : 0/0
 16697 ;;		On exit  : 0/0
 16698 ;;		Unchanged: 0/0
 16699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16700 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16701 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16702 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16703 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16704 ;;Total ram usage:        4 bytes
 16705 ;; Hardware stack levels used:    1
 16706 ;; Hardware stack levels required when called:    6
 16707 ;; This function calls:
 16708 ;;		Nothing
 16709 ;; This function is called by:
 16710 ;;		_wr1RegCompleteHandler
 16711 ;;		_i2c_write1ByteRegister
 16712 ;;		_rd1RegCompleteHandler
 16713 ;;		_i2c_read1ByteRegister
 16714 ;;		_rd2RegCompleteHandler
 16715 ;;		_wr2RegCompleteHandler
 16716 ;;		_rdBlkRegCompleteHandler
 16717 ;;		_i2c_writeNBytes
 16718 ;;		_i2c_read2ByteRegister
 16719 ;;		_i2c_write2ByteRegister
 16720 ;;		_i2c_readDataBlock
 16721 ;;		_i2c_readNBytes
 16722 ;; This function uses a non-reentrant model
 16723 ;;
 16724                           
 16725                           
 16726                           ;psect for function _i2c_setBuffer
 16727  10CF                     _i2c_setBuffer:	
 16728                           
 16729                           ;incstack = 0
 16730                           ; Regs used in _i2c_setBuffer: [wreg]
 16731                           ;i2c_setBuffer@buffer stored from wreg
 16732  10CF  0020               	movlb	0	; select bank0
 16733  10D0  00A3               	movwf	i2c_setBuffer@buffer
 16734                           
 16735                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 16736  10D1  0021               	movlb	1	; select bank1
 16737  10D2  1D47               	btfss	_i2c_status^(0+128),2
 16738  10D3  0008               	return
 16739                           
 16740                           ;i2c_master.c: 187: {
 16741                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 16742  10D4  0020               	movlb	0	; select bank0
 16743  10D5  0823               	movf	i2c_setBuffer@buffer,w
 16744  10D6  00A2               	movwf	??_i2c_setBuffer
 16745  10D7  0822               	movf	??_i2c_setBuffer,w
 16746  10D8  0021               	movlb	1	; select bank1
 16747  10D9  00C9               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 16748                           
 16749                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 16750  10DA  0020               	movlb	0	; select bank0
 16751  10DB  0821               	movf	i2c_setBuffer@bufferSize+1,w
 16752  10DC  0021               	movlb	1	; select bank1
 16753  10DD  00CB               	movwf	((_i2c_status+1)^(0+128)+3)
 16754  10DE  0020               	movlb	0	; select bank0
 16755  10DF  0820               	movf	i2c_setBuffer@bufferSize,w
 16756  10E0  0021               	movlb	1	; select bank1
 16757  10E1  00CA               	movwf	(_i2c_status^(0+128)+3)
 16758                           
 16759                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 16760  10E2  1147               	bcf	_i2c_status^(0+128),2
 16761  10E3  0008               	return
 16762  10E4                     __end_of_i2c_setBuffer:	
 16763                           
 16764                           	psect	text80
 16765  1E8F                     __ptext80:	
 16766 ;; *************** function _i2c1_driver_stop *****************
 16767 ;; Defined at:
 16768 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 16769 ;; Parameters:    Size  Location     Type
 16770 ;;		None
 16771 ;; Auto vars:     Size  Location     Type
 16772 ;;		None
 16773 ;; Return value:  Size  Location     Type
 16774 ;;                  1    wreg      void 
 16775 ;; Registers used:
 16776 ;;		None
 16777 ;; Tracked objects:
 16778 ;;		On entry : 0/0
 16779 ;;		On exit  : 0/0
 16780 ;;		Unchanged: 0/0
 16781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16786 ;;Total ram usage:        0 bytes
 16787 ;; Hardware stack levels used:    1
 16788 ;; Hardware stack levels required when called:    6
 16789 ;; This function calls:
 16790 ;;		Nothing
 16791 ;; This function is called by:
 16792 ;;		_do_I2C_SEND_STOP
 16793 ;; This function uses a non-reentrant model
 16794 ;;
 16795                           
 16796                           
 16797                           ;psect for function _i2c1_driver_stop
 16798  1E8F                     _i2c1_driver_stop:	
 16799                           
 16800                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 16801                           
 16802                           ;incstack = 0
 16803 ;; hardware stack exceeded
 16804                           ; Regs used in _i2c1_driver_stop: []
 16805  1E8F  0023               	movlb	3	; select bank3
 16806  1E90  1511               	bsf	17,2	;volatile
 16807  1E91  0008               	return
 16808  1E92                     __end_of_i2c1_driver_stop:	
 16809                           
 16810                           	psect	text81
 16811  1E8C                     __ptext81:	
 16812 ;; *************** function _i2c1_driver_restart *****************
 16813 ;; Defined at:
 16814 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 16815 ;; Parameters:    Size  Location     Type
 16816 ;;		None
 16817 ;; Auto vars:     Size  Location     Type
 16818 ;;		None
 16819 ;; Return value:  Size  Location     Type
 16820 ;;                  1    wreg      void 
 16821 ;; Registers used:
 16822 ;;		None
 16823 ;; Tracked objects:
 16824 ;;		On entry : 0/0
 16825 ;;		On exit  : 0/0
 16826 ;;		Unchanged: 0/0
 16827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16832 ;;Total ram usage:        0 bytes
 16833 ;; Hardware stack levels used:    1
 16834 ;; Hardware stack levels required when called:    6
 16835 ;; This function calls:
 16836 ;;		Nothing
 16837 ;; This function is called by:
 16838 ;;		_do_I2C_SEND_RESTART_READ
 16839 ;;		_do_I2C_SEND_RESTART_WRITE
 16840 ;;		_do_I2C_SEND_RESTART
 16841 ;; This function uses a non-reentrant model
 16842 ;;
 16843                           
 16844                           
 16845                           ;psect for function _i2c1_driver_restart
 16846  1E8C                     _i2c1_driver_restart:	
 16847                           
 16848                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 16849                           
 16850                           ;incstack = 0
 16851 ;; hardware stack exceeded
 16852                           ; Regs used in _i2c1_driver_restart: []
 16853  1E8C  0023               	movlb	3	; select bank3
 16854  1E8D  1491               	bsf	17,1	;volatile
 16855  1E8E  0008               	return
 16856  1E8F                     __end_of_i2c1_driver_restart:	
 16857                           
 16858                           	psect	text82
 16859  1EBF                     __ptext82:	
 16860 ;; *************** function _i2c1_driver_sendACK *****************
 16861 ;; Defined at:
 16862 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;		None
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;		None
 16867 ;; Return value:  Size  Location     Type
 16868 ;;                  1    wreg      void 
 16869 ;; Registers used:
 16870 ;;		None
 16871 ;; Tracked objects:
 16872 ;;		On entry : 0/0
 16873 ;;		On exit  : 0/0
 16874 ;;		Unchanged: 0/0
 16875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16880 ;;Total ram usage:        0 bytes
 16881 ;; Hardware stack levels used:    1
 16882 ;; Hardware stack levels required when called:    6
 16883 ;; This function calls:
 16884 ;;		Nothing
 16885 ;; This function is called by:
 16886 ;;		_do_I2C_DO_ACK
 16887 ;;		_do_I2C_RX
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           
 16892                           ;psect for function _i2c1_driver_sendACK
 16893  1EBF                     _i2c1_driver_sendACK:	
 16894                           
 16895                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 16896                           
 16897                           ;incstack = 0
 16898                           ; Regs used in _i2c1_driver_sendACK: []
 16899  1EBF  0023               	movlb	3	; select bank3
 16900  1EC0  1291               	bcf	17,5	;volatile
 16901                           
 16902                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 16903  1EC1  1611               	bsf	17,4	;volatile
 16904  1EC2  0008               	return
 16905  1EC3                     __end_of_i2c1_driver_sendACK:	
 16906                           
 16907                           	psect	text83
 16908  1E89                     __ptext83:	
 16909 ;; *************** function _i2c1_driver_start *****************
 16910 ;; Defined at:
 16911 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;		None
 16914 ;; Auto vars:     Size  Location     Type
 16915 ;;		None
 16916 ;; Return value:  Size  Location     Type
 16917 ;;                  1    wreg      void 
 16918 ;; Registers used:
 16919 ;;		None
 16920 ;; Tracked objects:
 16921 ;;		On entry : 0/0
 16922 ;;		On exit  : 0/0
 16923 ;;		Unchanged: 0/0
 16924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16929 ;;Total ram usage:        0 bytes
 16930 ;; Hardware stack levels used:    1
 16931 ;; Hardware stack levels required when called:    6
 16932 ;; This function calls:
 16933 ;;		Nothing
 16934 ;; This function is called by:
 16935 ;;		_i2c_masterOperation
 16936 ;; This function uses a non-reentrant model
 16937 ;;
 16938                           
 16939                           
 16940                           ;psect for function _i2c1_driver_start
 16941  1E89                     _i2c1_driver_start:	
 16942                           
 16943                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 16944                           
 16945                           ;incstack = 0
 16946                           ; Regs used in _i2c1_driver_start: []
 16947  1E89  0023               	movlb	3	; select bank3
 16948  1E8A  1411               	bsf	17,0	;volatile
 16949  1E8B  0008               	return
 16950  1E8C                     __end_of_i2c1_driver_start:	
 16951                           
 16952                           	psect	text84
 16953  1183                     __ptext84:	
 16954 ;; *************** function _i2c_close *****************
 16955 ;; Defined at:
 16956 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
 16957 ;; Parameters:    Size  Location     Type
 16958 ;;		None
 16959 ;; Auto vars:     Size  Location     Type
 16960 ;;  ret             1    1[BANK0 ] enum E15138
 16961 ;; Return value:  Size  Location     Type
 16962 ;;                  1    wreg      enum E15138
 16963 ;; Registers used:
 16964 ;;		wreg, status,2, status,0, pclath, cstack
 16965 ;; Tracked objects:
 16966 ;;		On entry : 0/0
 16967 ;;		On exit  : 0/0
 16968 ;;		Unchanged: 0/0
 16969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16971 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16973 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16974 ;;Total ram usage:        2 bytes
 16975 ;; Hardware stack levels used:    1
 16976 ;; Hardware stack levels required when called:    7
 16977 ;; This function calls:
 16978 ;;		_mssp1_clearIRQ
 16979 ;;		_mssp1_disableIRQ
 16980 ;; This function is called by:
 16981 ;;		_i2c_write1ByteRegister
 16982 ;;		_i2c_read1ByteRegister
 16983 ;;		_i2c_writeNBytes
 16984 ;;		_i2c_read2ByteRegister
 16985 ;;		_i2c_write2ByteRegister
 16986 ;;		_i2c_readDataBlock
 16987 ;;		_i2c_readNBytes
 16988 ;; This function uses a non-reentrant model
 16989 ;;
 16990                           
 16991                           
 16992                           ;psect for function _i2c_close
 16993  1183                     _i2c_close:	
 16994                           
 16995                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
 16996                           
 16997                           ;incstack = 0
 16998                           ; Regs used in _i2c_close: [wreg+status,2+status,0+pclath+cstack]
 16999  1183  0020               	movlb	0	; select bank0
 17000  1184  01A1               	clrf	i2c_close@ret
 17001  1185  0AA1               	incf	i2c_close@ret,f
 17002                           
 17003                           ;i2c_master.c: 165: if(!i2c_status.busy)
 17004  1186  0021               	movlb	1	; select bank1
 17005  1187  1847               	btfsc	_i2c_status^(0+128),0
 17006  1188  299B               	goto	l224
 17007                           
 17008                           ;i2c_master.c: 166: {
 17009                           ;i2c_master.c: 167: i2c_status.inUse = 0;
 17010  1189  10C7               	bcf	_i2c_status^(0+128),1
 17011                           
 17012                           ;i2c_master.c: 169: i2c_status.address = 0xff;
 17013  118A  30FF               	movlw	255
 17014  118B  0020               	movlb	0	; select bank0
 17015  118C  00A0               	movwf	??_i2c_close
 17016  118D  0820               	movf	??_i2c_close,w
 17017  118E  0021               	movlb	1	; select bank1
 17018  118F  00C8               	movwf	(_i2c_status^(0+128)+1)
 17019                           
 17020                           ;i2c_master.c: 170: mssp1_clearIRQ();
 17021  1190  319E  2683  3191   	fcall	_mssp1_clearIRQ
 17022                           
 17023                           ;i2c_master.c: 171: mssp1_disableIRQ();
 17024  1193  319E  2686         	fcall	_mssp1_disableIRQ
 17025                           
 17026                           ;i2c_master.c: 172: ret = i2c_status.error;
 17027  1195  0021               	movlb	1	; select bank1
 17028  1196  0851               	movf	(_i2c_status^(0+128)+10),w
 17029  1197  0020               	movlb	0	; select bank0
 17030  1198  00A0               	movwf	??_i2c_close
 17031  1199  0820               	movf	??_i2c_close,w
 17032  119A  00A1               	movwf	i2c_close@ret
 17033  119B                     l224:	
 17034                           
 17035                           ;i2c_master.c: 173: }
 17036                           ;i2c_master.c: 174: return ret;
 17037  119B  0020               	movlb	0	; select bank0
 17038  119C  0821               	movf	i2c_close@ret,w
 17039  119D  0008               	return
 17040  119E                     __end_of_i2c_close:	
 17041                           
 17042                           	psect	text85
 17043  1E86                     __ptext85:	
 17044 ;; *************** function _mssp1_disableIRQ *****************
 17045 ;; Defined at:
 17046 ;;		line 48 in file "mcc_generated_files/i2c1_driver.c"
 17047 ;; Parameters:    Size  Location     Type
 17048 ;;		None
 17049 ;; Auto vars:     Size  Location     Type
 17050 ;;		None
 17051 ;; Return value:  Size  Location     Type
 17052 ;;                  1    wreg      void 
 17053 ;; Registers used:
 17054 ;;		None
 17055 ;; Tracked objects:
 17056 ;;		On entry : 0/0
 17057 ;;		On exit  : 0/0
 17058 ;;		Unchanged: 0/0
 17059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17064 ;;Total ram usage:        0 bytes
 17065 ;; Hardware stack levels used:    1
 17066 ;; Hardware stack levels required when called:    6
 17067 ;; This function calls:
 17068 ;;		Nothing
 17069 ;; This function is called by:
 17070 ;;		_i2c_close
 17071 ;;		_i2c_setTimeOut
 17072 ;; This function uses a non-reentrant model
 17073 ;;
 17074                           
 17075                           
 17076                           ;psect for function _mssp1_disableIRQ
 17077  1E86                     _mssp1_disableIRQ:	
 17078                           
 17079                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
 17080                           
 17081                           ;incstack = 0
 17082                           ; Regs used in _mssp1_disableIRQ: []
 17083  1E86  002E               	movlb	14	; select bank14
 17084  1E87  1019               	bcf	25,0	;volatile
 17085  1E88  0008               	return
 17086  1E89                     __end_of_mssp1_disableIRQ:	
 17087                           
 17088                           	psect	text86
 17089  1E83                     __ptext86:	
 17090 ;; *************** function _mssp1_clearIRQ *****************
 17091 ;; Defined at:
 17092 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 17093 ;; Parameters:    Size  Location     Type
 17094 ;;		None
 17095 ;; Auto vars:     Size  Location     Type
 17096 ;;		None
 17097 ;; Return value:  Size  Location     Type
 17098 ;;                  1    wreg      void 
 17099 ;; Registers used:
 17100 ;;		None
 17101 ;; Tracked objects:
 17102 ;;		On entry : 0/0
 17103 ;;		On exit  : 0/0
 17104 ;;		Unchanged: 0/0
 17105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17110 ;;Total ram usage:        0 bytes
 17111 ;; Hardware stack levels used:    1
 17112 ;; Hardware stack levels required when called:    6
 17113 ;; This function calls:
 17114 ;;		Nothing
 17115 ;; This function is called by:
 17116 ;;		_i2c_open
 17117 ;;		_i2c_close
 17118 ;;		_i2c_ISR
 17119 ;; This function uses a non-reentrant model
 17120 ;;
 17121                           
 17122                           
 17123                           ;psect for function _mssp1_clearIRQ
 17124  1E83                     _mssp1_clearIRQ:	
 17125                           
 17126                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
 17127                           
 17128                           ;incstack = 0
 17129                           ; Regs used in _mssp1_clearIRQ: []
 17130  1E83  002E               	movlb	14	; select bank14
 17131  1E84  100F               	bcf	15,0	;volatile
 17132  1E85  0008               	return
 17133  1E86                     __end_of_mssp1_clearIRQ:	
 17134                           
 17135                           	psect	text87
 17136  1EDB                     __ptext87:	
 17137 ;; *************** function _SPI2_Initialize *****************
 17138 ;; Defined at:
 17139 ;;		line 65 in file "mcc_generated_files/spi2.c"
 17140 ;; Parameters:    Size  Location     Type
 17141 ;;		None
 17142 ;; Auto vars:     Size  Location     Type
 17143 ;;		None
 17144 ;; Return value:  Size  Location     Type
 17145 ;;                  1    wreg      void 
 17146 ;; Registers used:
 17147 ;;		wreg, status,2
 17148 ;; Tracked objects:
 17149 ;;		On entry : 0/0
 17150 ;;		On exit  : 0/0
 17151 ;;		Unchanged: 0/0
 17152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17157 ;;Total ram usage:        0 bytes
 17158 ;; Hardware stack levels used:    1
 17159 ;; Hardware stack levels required when called:    6
 17160 ;; This function calls:
 17161 ;;		Nothing
 17162 ;; This function is called by:
 17163 ;;		_SYSTEM_Initialize
 17164 ;; This function uses a non-reentrant model
 17165 ;;
 17166                           
 17167                           
 17168                           ;psect for function _SPI2_Initialize
 17169  1EDB                     _SPI2_Initialize:	
 17170                           
 17171                           ;spi2.c: 70: SSP2STAT = 0x00;
 17172                           
 17173                           ;incstack = 0
 17174                           ; Regs used in _SPI2_Initialize: [wreg+status,2]
 17175  1EDB  0023               	movlb	3	; select bank3
 17176  1EDC  0199               	clrf	25	;volatile
 17177                           
 17178                           ;spi2.c: 73: SSP2CON1 = 0x30;
 17179  1EDD  3030               	movlw	48
 17180  1EDE  009A               	movwf	26	;volatile
 17181                           
 17182                           ;spi2.c: 76: SSP2ADD = 0x00;
 17183  1EDF  0197               	clrf	23	;volatile
 17184  1EE0  0008               	return
 17185  1EE1                     __end_of_SPI2_Initialize:	
 17186                           
 17187                           	psect	text88
 17188  1F24                     __ptext88:	
 17189 ;; *************** function _PMD_Initialize *****************
 17190 ;; Defined at:
 17191 ;;		line 73 in file "mcc_generated_files/mcc.c"
 17192 ;; Parameters:    Size  Location     Type
 17193 ;;		None
 17194 ;; Auto vars:     Size  Location     Type
 17195 ;;		None
 17196 ;; Return value:  Size  Location     Type
 17197 ;;                  1    wreg      void 
 17198 ;; Registers used:
 17199 ;;		status,2
 17200 ;; Tracked objects:
 17201 ;;		On entry : 0/0
 17202 ;;		On exit  : 0/0
 17203 ;;		Unchanged: 0/0
 17204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17209 ;;Total ram usage:        0 bytes
 17210 ;; Hardware stack levels used:    1
 17211 ;; Hardware stack levels required when called:    6
 17212 ;; This function calls:
 17213 ;;		Nothing
 17214 ;; This function is called by:
 17215 ;;		_SYSTEM_Initialize
 17216 ;; This function uses a non-reentrant model
 17217 ;;
 17218                           
 17219                           
 17220                           ;psect for function _PMD_Initialize
 17221  1F24                     _PMD_Initialize:	
 17222                           
 17223                           ;mcc.c: 76: PMD0 = 0x00;
 17224                           
 17225                           ;incstack = 0
 17226                           ; Regs used in _PMD_Initialize: [status,2]
 17227  1F24  002F               	movlb	15	; select bank15
 17228  1F25  0196               	clrf	22	;volatile
 17229                           
 17230                           ;mcc.c: 78: PMD1 = 0x00;
 17231  1F26  0197               	clrf	23	;volatile
 17232                           
 17233                           ;mcc.c: 80: PMD2 = 0x00;
 17234  1F27  0198               	clrf	24	;volatile
 17235                           
 17236                           ;mcc.c: 82: PMD3 = 0x00;
 17237  1F28  0199               	clrf	25	;volatile
 17238                           
 17239                           ;mcc.c: 84: PMD4 = 0x00;
 17240  1F29  019A               	clrf	26	;volatile
 17241                           
 17242                           ;mcc.c: 86: PMD5 = 0x00;
 17243  1F2A  019B               	clrf	27	;volatile
 17244  1F2B  0008               	return
 17245  1F2C                     __end_of_PMD_Initialize:	
 17246                           
 17247                           	psect	text89
 17248  0802                     __ptext89:	
 17249 ;; *************** function _PIN_MANAGER_Initialize *****************
 17250 ;; Defined at:
 17251 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17252 ;; Parameters:    Size  Location     Type
 17253 ;;		None
 17254 ;; Auto vars:     Size  Location     Type
 17255 ;;		None
 17256 ;; Return value:  Size  Location     Type
 17257 ;;                  1    wreg      void 
 17258 ;; Registers used:
 17259 ;;		wreg, status,2, status,0
 17260 ;; Tracked objects:
 17261 ;;		On entry : 0/0
 17262 ;;		On exit  : 0/0
 17263 ;;		Unchanged: 0/0
 17264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17269 ;;Total ram usage:        0 bytes
 17270 ;; Hardware stack levels used:    1
 17271 ;; Hardware stack levels required when called:    6
 17272 ;; This function calls:
 17273 ;;		Nothing
 17274 ;; This function is called by:
 17275 ;;		_SYSTEM_Initialize
 17276 ;; This function uses a non-reentrant model
 17277 ;;
 17278                           
 17279                           
 17280                           ;psect for function _PIN_MANAGER_Initialize
 17281  0802                     _PIN_MANAGER_Initialize:	
 17282                           
 17283                           ;pin_manager.c: 62: LATE = 0x00;
 17284                           
 17285                           ;incstack = 0
 17286                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 17287  0802  0020               	movlb	0	; select bank0
 17288  0803  019A               	clrf	26	;volatile
 17289                           
 17290                           ;pin_manager.c: 63: LATD = 0x00;
 17291  0804  0199               	clrf	25	;volatile
 17292                           
 17293                           ;pin_manager.c: 64: LATA = 0x08;
 17294  0805  3008               	movlw	8
 17295  0806  0096               	movwf	22	;volatile
 17296                           
 17297                           ;pin_manager.c: 65: LATB = 0x00;
 17298  0807  0197               	clrf	23	;volatile
 17299                           
 17300                           ;pin_manager.c: 66: LATC = 0x00;
 17301  0808  0198               	clrf	24	;volatile
 17302                           
 17303                           ;pin_manager.c: 71: TRISE = 0x07;
 17304  0809  3007               	movlw	7
 17305  080A  0095               	movwf	21	;volatile
 17306                           
 17307                           ;pin_manager.c: 72: TRISA = 0xF7;
 17308  080B  30F7               	movlw	247
 17309  080C  0091               	movwf	17	;volatile
 17310                           
 17311                           ;pin_manager.c: 73: TRISB = 0xF5;
 17312  080D  30F5               	movlw	245
 17313  080E  0092               	movwf	18	;volatile
 17314                           
 17315                           ;pin_manager.c: 74: TRISC = 0xFB;
 17316  080F  30FB               	movlw	251
 17317  0810  0093               	movwf	19	;volatile
 17318                           
 17319                           ;pin_manager.c: 75: TRISD = 0xFE;
 17320  0811  30FE               	movlw	254
 17321  0812  0094               	movwf	20	;volatile
 17322                           
 17323                           ;pin_manager.c: 80: ANSELD = 0xFE;
 17324  0813  30FE               	movlw	254
 17325  0814  003E               	movlb	30	; select bank30
 17326  0815  00D9               	movwf	89	;volatile
 17327                           
 17328                           ;pin_manager.c: 81: ANSELC = 0xC3;
 17329  0816  30C3               	movlw	195
 17330  0817  00CE               	movwf	78	;volatile
 17331                           
 17332                           ;pin_manager.c: 82: ANSELB = 0xE1;
 17333  0818  30E1               	movlw	225
 17334  0819  00C3               	movwf	67	;volatile
 17335                           
 17336                           ;pin_manager.c: 83: ANSELE = 0x07;
 17337  081A  3007               	movlw	7
 17338  081B  00E4               	movwf	100	;volatile
 17339                           
 17340                           ;pin_manager.c: 84: ANSELA = 0xF7;
 17341  081C  30F7               	movlw	247
 17342  081D  00B8               	movwf	56	;volatile
 17343                           
 17344                           ;pin_manager.c: 89: WPUD = 0x00;
 17345  081E  01DA               	clrf	90	;volatile
 17346                           
 17347                           ;pin_manager.c: 90: WPUE = 0x00;
 17348  081F  01E5               	clrf	101	;volatile
 17349                           
 17350                           ;pin_manager.c: 91: WPUB = 0x00;
 17351  0820  01C4               	clrf	68	;volatile
 17352                           
 17353                           ;pin_manager.c: 92: WPUA = 0x00;
 17354  0821  01B9               	clrf	57	;volatile
 17355                           
 17356                           ;pin_manager.c: 93: WPUC = 0x00;
 17357  0822  01CF               	clrf	79	;volatile
 17358                           
 17359                           ;pin_manager.c: 98: ODCONE = 0x00;
 17360  0823  01E6               	clrf	102	;volatile
 17361                           
 17362                           ;pin_manager.c: 99: ODCONA = 0x00;
 17363  0824  01BA               	clrf	58	;volatile
 17364                           
 17365                           ;pin_manager.c: 100: ODCONB = 0x00;
 17366  0825  01C5               	clrf	69	;volatile
 17367                           
 17368                           ;pin_manager.c: 101: ODCONC = 0x00;
 17369  0826  01D0               	clrf	80	;volatile
 17370                           
 17371                           ;pin_manager.c: 102: ODCOND = 0x00;
 17372  0827  01DB               	clrf	91	;volatile
 17373                           
 17374                           ;pin_manager.c: 111: SSP1CLKPPSbits.SSP1CLKPPS = 0x13;
 17375  0828  003D               	movlb	29	; select bank29
 17376  0829  0845               	movf	69,w	;volatile
 17377  082A  39E0               	andlw	-32
 17378  082B  3813               	iorlw	19
 17379  082C  00C5               	movwf	69	;volatile
 17380                           
 17381                           ;pin_manager.c: 112: SSP1DATPPSbits.SSP1DATPPS = 0x14;
 17382  082D  0846               	movf	70,w	;volatile
 17383  082E  39E0               	andlw	-32
 17384  082F  3814               	iorlw	20
 17385  0830  00C6               	movwf	70	;volatile
 17386                           
 17387                           ;pin_manager.c: 113: RB1PPS = 0x16;
 17388  0831  3016               	movlw	22
 17389  0832  003E               	movlb	30	; select bank30
 17390  0833  0099               	movwf	25	;volatile
 17391                           
 17392                           ;pin_manager.c: 114: RC3PPS = 0x14;
 17393  0834  3014               	movlw	20
 17394  0835  00A3               	movwf	35	;volatile
 17395                           
 17396                           ;pin_manager.c: 115: RC4PPS = 0x15;
 17397  0836  3015               	movlw	21
 17398  0837  00A4               	movwf	36	;volatile
 17399                           
 17400                           ;pin_manager.c: 116: RB3PPS = 0x17;
 17401  0838  3017               	movlw	23
 17402  0839  009B               	movwf	27	;volatile
 17403                           
 17404                           ;pin_manager.c: 117: SSP2CLKPPSbits.SSP2CLKPPS = 0x09;
 17405  083A  003D               	movlb	29	; select bank29
 17406  083B  0848               	movf	72,w	;volatile
 17407  083C  39E0               	andlw	-32
 17408  083D  3809               	iorlw	9
 17409  083E  00C8               	movwf	72	;volatile
 17410                           
 17411                           ;pin_manager.c: 118: SSP2DATPPSbits.SSP2DATPPS = 0x0A;
 17412  083F  0849               	movf	73,w	;volatile
 17413  0840  39E0               	andlw	-32
 17414  0841  380A               	iorlw	10
 17415  0842  00C9               	movwf	73	;volatile
 17416  0843  0008               	return
 17417  0844                     __end_of_PIN_MANAGER_Initialize:	
 17418                           
 17419                           	psect	text90
 17420  1F64                     __ptext90:	
 17421 ;; *************** function _OSCILLATOR_Initialize *****************
 17422 ;; Defined at:
 17423 ;;		line 59 in file "mcc_generated_files/mcc.c"
 17424 ;; Parameters:    Size  Location     Type
 17425 ;;		None
 17426 ;; Auto vars:     Size  Location     Type
 17427 ;;		None
 17428 ;; Return value:  Size  Location     Type
 17429 ;;                  1    wreg      void 
 17430 ;; Registers used:
 17431 ;;		wreg, status,2
 17432 ;; Tracked objects:
 17433 ;;		On entry : 0/0
 17434 ;;		On exit  : 0/0
 17435 ;;		Unchanged: 0/0
 17436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17441 ;;Total ram usage:        0 bytes
 17442 ;; Hardware stack levels used:    1
 17443 ;; Hardware stack levels required when called:    6
 17444 ;; This function calls:
 17445 ;;		Nothing
 17446 ;; This function is called by:
 17447 ;;		_SYSTEM_Initialize
 17448 ;; This function uses a non-reentrant model
 17449 ;;
 17450                           
 17451                           
 17452                           ;psect for function _OSCILLATOR_Initialize
 17453  1F64                     _OSCILLATOR_Initialize:	
 17454                           
 17455                           ;mcc.c: 62: OSCCON1 = 0x62;
 17456                           
 17457                           ;incstack = 0
 17458                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17459  1F64  3062               	movlw	98
 17460  1F65  0031               	movlb	17	; select bank17
 17461  1F66  008D               	movwf	13	;volatile
 17462                           
 17463                           ;mcc.c: 64: OSCCON3 = 0x00;
 17464  1F67  018F               	clrf	15	;volatile
 17465                           
 17466                           ;mcc.c: 66: OSCEN = 0x00;
 17467  1F68  0191               	clrf	17	;volatile
 17468                           
 17469                           ;mcc.c: 68: OSCFRQ = 0x02;
 17470  1F69  3002               	movlw	2
 17471  1F6A  0093               	movwf	19	;volatile
 17472                           
 17473                           ;mcc.c: 70: OSCTUNE = 0x00;
 17474  1F6B  0192               	clrf	18	;volatile
 17475  1F6C  0008               	return
 17476  1F6D                     __end_of_OSCILLATOR_Initialize:	
 17477                           
 17478                           	psect	text91
 17479  0A9C                     __ptext91:	
 17480 ;; *************** function _OLED_Initialize *****************
 17481 ;; Defined at:
 17482 ;;		line 24 in file "oled.c"
 17483 ;; Parameters:    Size  Location     Type
 17484 ;;		None
 17485 ;; Auto vars:     Size  Location     Type
 17486 ;;		None
 17487 ;; Return value:  Size  Location     Type
 17488 ;;                  1    wreg      void 
 17489 ;; Registers used:
 17490 ;;		wreg, status,2, status,0, pclath, cstack
 17491 ;; Tracked objects:
 17492 ;;		On entry : 0/0
 17493 ;;		On exit  : 0/0
 17494 ;;		Unchanged: 0/0
 17495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17498 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17499 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17500 ;;Total ram usage:        2 bytes
 17501 ;; Hardware stack levels used:    1
 17502 ;; Hardware stack levels required when called:    8
 17503 ;; This function calls:
 17504 ;;		_OLED_Command
 17505 ;; This function is called by:
 17506 ;;		_main
 17507 ;; This function uses a non-reentrant model
 17508 ;;
 17509                           
 17510                           
 17511                           ;psect for function _OLED_Initialize
 17512  0A9C                     _OLED_Initialize:	
 17513                           
 17514                           ;oled.c: 28: LATDbits.LATD0 = 0;
 17515                           
 17516                           ;incstack = 0
 17517                           ; Regs used in _OLED_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17518  0A9C  0020               	movlb	0	; select bank0
 17519  0A9D  1019               	bcf	25,0	;volatile
 17520                           
 17521                           ;oled.c: 29: _delay((unsigned long)((1000)*(1000000/4000.0)));
 17522  0A9E  3002               	movlw	2
 17523  0A9F  0020               	movlb	0	; select bank0
 17524  0AA0  00A3               	movwf	??_OLED_Initialize+1
 17525  0AA1  3045               	movlw	69
 17526  0AA2  00A2               	movwf	??_OLED_Initialize
 17527  0AA3  30A9               	movlw	169
 17528  0AA4                     u5567:	
 17529  0AA4  0B89               	decfsz	9,f
 17530  0AA5  2AA4               	goto	u5567
 17531  0AA6  0BA2               	decfsz	??_OLED_Initialize,f
 17532  0AA7  2AA4               	goto	u5567
 17533  0AA8  0BA3               	decfsz	??_OLED_Initialize+1,f
 17534  0AA9  2AA4               	goto	u5567
 17535  0AAA  3200               	nop2
 17536                           
 17537                           ;oled.c: 30: LATDbits.LATD0 = 1;
 17538  0AAB  0020               	movlb	0	; select bank0
 17539  0AAC  1419               	bsf	25,0	;volatile
 17540                           
 17541                           ;oled.c: 31: _delay((unsigned long)((1000)*(1000000/4000.0)));
 17542  0AAD  3002               	movlw	2
 17543  0AAE  0020               	movlb	0	; select bank0
 17544  0AAF  00A3               	movwf	??_OLED_Initialize+1
 17545  0AB0  3045               	movlw	69
 17546  0AB1  00A2               	movwf	??_OLED_Initialize
 17547  0AB2  30A9               	movlw	169
 17548  0AB3                     u5577:	
 17549  0AB3  0B89               	decfsz	9,f
 17550  0AB4  2AB3               	goto	u5577
 17551  0AB5  0BA2               	decfsz	??_OLED_Initialize,f
 17552  0AB6  2AB3               	goto	u5577
 17553  0AB7  0BA3               	decfsz	??_OLED_Initialize+1,f
 17554  0AB8  2AB3               	goto	u5577
 17555  0AB9  3200               	nop2
 17556                           
 17557                           ;oled.c: 32: OLED_Command(0xAE);
 17558  0ABA  30AE               	movlw	174
 17559  0ABB  319F  2789  318A   	fcall	_OLED_Command
 17560                           
 17561                           ;oled.c: 33: OLED_Command(0xD5);
 17562  0ABE  30D5               	movlw	213
 17563  0ABF  319F  2789  318A   	fcall	_OLED_Command
 17564                           
 17565                           ;oled.c: 34: OLED_Command(0x80);
 17566  0AC2  3080               	movlw	128
 17567  0AC3  319F  2789  318A   	fcall	_OLED_Command
 17568                           
 17569                           ;oled.c: 35: OLED_Command(0xA8);
 17570  0AC6  30A8               	movlw	168
 17571  0AC7  319F  2789  318A   	fcall	_OLED_Command
 17572                           
 17573                           ;oled.c: 36: OLED_Command(39);
 17574  0ACA  3027               	movlw	39
 17575  0ACB  319F  2789  318A   	fcall	_OLED_Command
 17576                           
 17577                           ;oled.c: 38: OLED_Command(0xA1);
 17578  0ACE  30A1               	movlw	161
 17579  0ACF  319F  2789  318A   	fcall	_OLED_Command
 17580                           
 17581                           ;oled.c: 39: OLED_Command(0xC8);
 17582  0AD2  30C8               	movlw	200
 17583  0AD3  319F  2789  318A   	fcall	_OLED_Command
 17584                           
 17585                           ;oled.c: 40: OLED_Command(0x40);
 17586  0AD6  3040               	movlw	64
 17587  0AD7  319F  2789  318A   	fcall	_OLED_Command
 17588                           
 17589                           ;oled.c: 42: OLED_Command(0xD3);
 17590  0ADA  30D3               	movlw	211
 17591  0ADB  319F  2789  318A   	fcall	_OLED_Command
 17592                           
 17593                           ;oled.c: 43: OLED_Command(0xA4);
 17594  0ADE  30A4               	movlw	164
 17595  0ADF  319F  2789  318A   	fcall	_OLED_Command
 17596                           
 17597                           ;oled.c: 44: OLED_Command(0x8D);
 17598  0AE2  308D               	movlw	141
 17599  0AE3  319F  2789  318A   	fcall	_OLED_Command
 17600                           
 17601                           ;oled.c: 45: OLED_Command(0x14);
 17602  0AE6  3014               	movlw	20
 17603  0AE7  319F  2789  318A   	fcall	_OLED_Command
 17604                           
 17605                           ;oled.c: 46: OLED_Command(0xDA);
 17606  0AEA  30DA               	movlw	218
 17607  0AEB  319F  2789  318A   	fcall	_OLED_Command
 17608                           
 17609                           ;oled.c: 47: OLED_Command(0x12);
 17610  0AEE  3012               	movlw	18
 17611  0AEF  319F  2789  318A   	fcall	_OLED_Command
 17612                           
 17613                           ;oled.c: 48: OLED_Command(0x81);
 17614  0AF2  3081               	movlw	129
 17615  0AF3  319F  2789  318A   	fcall	_OLED_Command
 17616                           
 17617                           ;oled.c: 49: OLED_Command(0xAF);
 17618  0AF6  30AF               	movlw	175
 17619  0AF7  319F  2789  318A   	fcall	_OLED_Command
 17620                           
 17621                           ;oled.c: 50: OLED_Command(0xD9);
 17622  0AFA  30D9               	movlw	217
 17623  0AFB  319F  2789  318A   	fcall	_OLED_Command
 17624                           
 17625                           ;oled.c: 51: OLED_Command(0x25);
 17626  0AFE  3025               	movlw	37
 17627  0AFF  319F  2789  318A   	fcall	_OLED_Command
 17628                           
 17629                           ;oled.c: 52: OLED_Command(0xDB);
 17630  0B02  30DB               	movlw	219
 17631  0B03  319F  2789  318A   	fcall	_OLED_Command
 17632                           
 17633                           ;oled.c: 53: OLED_Command(0x20);
 17634  0B06  3020               	movlw	32
 17635  0B07  319F  2789  318A   	fcall	_OLED_Command
 17636                           
 17637                           ;oled.c: 54: OLED_Command(0xA4);
 17638  0B0A  30A4               	movlw	164
 17639  0B0B  319F  2789  318A   	fcall	_OLED_Command
 17640                           
 17641                           ;oled.c: 55: OLED_Command(0xA6);
 17642  0B0E  30A6               	movlw	166
 17643  0B0F  319F  2789  318A   	fcall	_OLED_Command
 17644                           
 17645                           ;oled.c: 56: OLED_Command(0xAF);
 17646  0B12  30AF               	movlw	175
 17647  0B13  319F  2789         	fcall	_OLED_Command
 17648  0B15  0008               	return
 17649  0B16                     __end_of_OLED_Initialize:	
 17650                           
 17651                           	psect	text92
 17652  089B                     __ptext92:	
 17653 ;; *************** function _OLED_Clear *****************
 17654 ;; Defined at:
 17655 ;;		line 92 in file "oled.c"
 17656 ;; Parameters:    Size  Location     Type
 17657 ;;		None
 17658 ;; Auto vars:     Size  Location     Type
 17659 ;;  j               2   13[BANK0 ] int 
 17660 ;;  i               1   15[BANK0 ] unsigned char 
 17661 ;;  j               1   12[BANK0 ] unsigned char 
 17662 ;; Return value:  Size  Location     Type
 17663 ;;                  1    wreg      void 
 17664 ;; Registers used:
 17665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17666 ;; Tracked objects:
 17667 ;;		On entry : 0/0
 17668 ;;		On exit  : 0/0
 17669 ;;		Unchanged: 0/0
 17670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17672 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17673 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17674 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17675 ;;Total ram usage:        6 bytes
 17676 ;; Hardware stack levels used:    1
 17677 ;; Hardware stack levels required when called:   10
 17678 ;; This function calls:
 17679 ;;		_OLED_Data
 17680 ;;		_OLED_PutPicture
 17681 ;;		_OLED_SetColumn
 17682 ;;		_OLED_SetRow
 17683 ;; This function is called by:
 17684 ;;		_main
 17685 ;; This function uses a non-reentrant model
 17686 ;;
 17687                           
 17688                           
 17689                           ;psect for function _OLED_Clear
 17690  089B                     _OLED_Clear:	
 17691                           
 17692                           ;oled.c: 94: unsigned char i,j;
 17693                           ;oled.c: 95: for( i=0; i<5; i++)
 17694                           
 17695                           ;incstack = 0
 17696                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17697  089B  0020               	movlb	0	; select bank0
 17698  089C  01AF               	clrf	OLED_Clear@i
 17699  089D  3005               	movlw	5
 17700  089E  022F               	subwf	OLED_Clear@i,w
 17701  089F  1803               	btfsc	3,0
 17702  08A0  28C4               	goto	l4847
 17703  08A1                     l4829:	
 17704                           
 17705                           ;oled.c: 96: {
 17706                           ;oled.c: 97: OLED_SetRow( i);
 17707  08A1  082F               	movf	OLED_Clear@i,w
 17708  08A2  319F  27B1  3188   	fcall	_OLED_SetRow
 17709                           
 17710                           ;oled.c: 98: OLED_SetColumn( 0);
 17711  08A5  3000               	movlw	0
 17712  08A6  3191  2153  3188   	fcall	_OLED_SetColumn
 17713                           
 17714                           ;oled.c: 99: for( j=0; j<96; j++)
 17715  08A9  0020               	movlb	0	; select bank0
 17716  08AA  01AC               	clrf	OLED_Clear@j
 17717  08AB  3060               	movlw	96
 17718  08AC  022C               	subwf	OLED_Clear@j,w
 17719  08AD  1803               	btfsc	3,0
 17720  08AE  28BC               	goto	l4843
 17721  08AF                     l4837:	
 17722                           
 17723                           ;oled.c: 100: OLED_Data( 0x00);
 17724  08AF  3000               	movlw	0
 17725  08B0  319F  277F  3188   	fcall	_OLED_Data
 17726  08B3  3001               	movlw	1
 17727  08B4  0020               	movlb	0	; select bank0
 17728  08B5  00AA               	movwf	??_OLED_Clear
 17729  08B6  082A               	movf	??_OLED_Clear,w
 17730  08B7  07AC               	addwf	OLED_Clear@j,f
 17731  08B8  3060               	movlw	96
 17732  08B9  022C               	subwf	OLED_Clear@j,w
 17733  08BA  1C03               	skipc
 17734  08BB  28AF               	goto	l4837
 17735  08BC                     l4843:	
 17736  08BC  3001               	movlw	1
 17737  08BD  00AA               	movwf	??_OLED_Clear
 17738  08BE  082A               	movf	??_OLED_Clear,w
 17739  08BF  07AF               	addwf	OLED_Clear@i,f
 17740  08C0  3005               	movlw	5
 17741  08C1  022F               	subwf	OLED_Clear@i,w
 17742  08C2  1C03               	skipc
 17743  08C3  28A1               	goto	l4829
 17744  08C4                     l4847:	
 17745                           
 17746                           ;oled.c: 101: }
 17747                           ;oled.c: 102: for(int j = 0; j < 400; j++){
 17748  08C4  01AD               	clrf	OLED_Clear@j_1662
 17749  08C5  01AE               	clrf	OLED_Clear@j_1662+1
 17750  08C6  082E               	movf	OLED_Clear@j_1662+1,w
 17751  08C7  3A80               	xorlw	128
 17752  08C8  00AA               	movwf	??_OLED_Clear
 17753  08C9  3081               	movlw	129
 17754  08CA  022A               	subwf	??_OLED_Clear,w
 17755  08CB  1D03               	skipz
 17756  08CC  28CF               	goto	u3225
 17757  08CD  3090               	movlw	144
 17758  08CE  022D               	subwf	OLED_Clear@j_1662,w
 17759  08CF                     u3225:	
 17760  08CF  1803               	btfsc	3,0
 17761  08D0  28EC               	goto	l4859
 17762  08D1                     l4853:	
 17763                           
 17764                           ;oled.c: 103: displayArray[j] = 0x00;
 17765  08D1  30B1               	movlw	177
 17766  08D2  0020               	movlb	0	; select bank0
 17767  08D3  00AA               	movwf	??_OLED_Clear
 17768  08D4  3021               	movlw	33
 17769  08D5  00AB               	movwf	??_OLED_Clear+1
 17770  08D6  082D               	movf	OLED_Clear@j_1662,w
 17771  08D7  072A               	addwf	??_OLED_Clear,w
 17772  08D8  0086               	movwf	6
 17773  08D9  082E               	movf	OLED_Clear@j_1662+1,w
 17774  08DA  3D2B               	addwfc	??_OLED_Clear+1,w
 17775  08DB  0087               	movwf	7
 17776  08DC  0181               	clrf	1
 17777  08DD  3001               	movlw	1
 17778  08DE  07AD               	addwf	OLED_Clear@j_1662,f
 17779  08DF  3000               	movlw	0
 17780  08E0  3DAE               	addwfc	OLED_Clear@j_1662+1,f
 17781  08E1  082E               	movf	OLED_Clear@j_1662+1,w
 17782  08E2  3A80               	xorlw	128
 17783  08E3  00AA               	movwf	??_OLED_Clear
 17784  08E4  3081               	movlw	129
 17785  08E5  022A               	subwf	??_OLED_Clear,w
 17786  08E6  1D03               	skipz
 17787  08E7  28EA               	goto	u3235
 17788  08E8  3090               	movlw	144
 17789  08E9  022D               	subwf	OLED_Clear@j_1662,w
 17790  08EA                     u3235:	
 17791  08EA  1C03               	skipc
 17792  08EB  28D1               	goto	l4853
 17793  08EC                     l4859:	
 17794                           
 17795                           ;oled.c: 104: }
 17796                           ;oled.c: 105: OLED_PutPicture(emptyArray);
 17797  08EC  306E               	movlw	low (_emptyArray| (0+32768))
 17798  08ED  0020               	movlb	0	; select bank0
 17799  08EE  00A4               	movwf	OLED_PutPicture@pic
 17800  08EF  3080               	movlw	high (_emptyArray| (0+32768))
 17801  08F0  00A5               	movwf	OLED_PutPicture@pic+1
 17802  08F1  3194  24F7         	fcall	_OLED_PutPicture
 17803  08F3  0008               	return
 17804  08F4                     __end_of_OLED_Clear:	
 17805                           
 17806                           	psect	text93
 17807  14F7                     __ptext93:	
 17808 ;; *************** function _OLED_PutPicture *****************
 17809 ;; Defined at:
 17810 ;;		line 76 in file "oled.c"
 17811 ;; Parameters:    Size  Location     Type
 17812 ;;  pic             2    4[BANK0 ] PTR const unsigned char 
 17813 ;;		 -> emptyArray(475), displayArray(475), 
 17814 ;; Auto vars:     Size  Location     Type
 17815 ;;  i               2    8[BANK0 ] unsigned int 
 17816 ;;  j               2    6[BANK0 ] unsigned int 
 17817 ;; Return value:  Size  Location     Type
 17818 ;;                  1    wreg      void 
 17819 ;; Registers used:
 17820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17821 ;; Tracked objects:
 17822 ;;		On entry : 0/0
 17823 ;;		On exit  : 0/0
 17824 ;;		Unchanged: 0/0
 17825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17827 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17829 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17830 ;;Total ram usage:        6 bytes
 17831 ;; Hardware stack levels used:    1
 17832 ;; Hardware stack levels required when called:    9
 17833 ;; This function calls:
 17834 ;;		_OLED_Data
 17835 ;;		_OLED_SetColumn
 17836 ;;		_OLED_SetRow
 17837 ;; This function is called by:
 17838 ;;		_OLED_Clear
 17839 ;;		_Write_String
 17840 ;; This function uses a non-reentrant model
 17841 ;;
 17842                           
 17843                           
 17844                           ;psect for function _OLED_PutPicture
 17845  14F7                     _OLED_PutPicture:	
 17846                           
 17847                           ;oled.c: 80: unsigned int i,j;
 17848                           ;oled.c: 81: for( i=0; i<5; i++)
 17849                           
 17850                           ;incstack = 0
 17851                           ; Regs used in _OLED_PutPicture: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17852  14F7  0020               	movlb	0	; select bank0
 17853  14F8  01A8               	clrf	OLED_PutPicture@i
 17854  14F9  01A9               	clrf	OLED_PutPicture@i+1
 17855  14FA                     L5:	
 17856  14FA  3000               	movlw	0
 17857  14FB  0229               	subwf	OLED_PutPicture@i+1,w
 17858  14FC  3005               	movlw	5
 17859  14FD  1903               	skipnz
 17860  14FE  0228               	subwf	OLED_PutPicture@i,w
 17861  14FF  1803               	btfsc	3,0
 17862  1500  0008               	return
 17863                           
 17864                           ;oled.c: 82: {
 17865                           ;oled.c: 83: OLED_SetRow( i);
 17866  1501  0828               	movf	OLED_PutPicture@i,w
 17867  1502  319F  27B1  3194   	fcall	_OLED_SetRow
 17868                           
 17869                           ;oled.c: 84: OLED_SetColumn( 0);
 17870  1505  3000               	movlw	0
 17871  1506  3191  2153  3194   	fcall	_OLED_SetColumn
 17872                           
 17873                           ;oled.c: 85: for( j=0; j<96; j++)
 17874  1509  0020               	movlb	0	; select bank0
 17875  150A  01A6               	clrf	OLED_PutPicture@j
 17876  150B  01A7               	clrf	OLED_PutPicture@j+1
 17877  150C  3000               	movlw	0
 17878  150D  0227               	subwf	OLED_PutPicture@j+1,w
 17879  150E  3060               	movlw	96
 17880  150F  1903               	skipnz
 17881  1510  0226               	subwf	OLED_PutPicture@j,w
 17882  1511  1803               	btfsc	3,0
 17883  1512  2D2B               	goto	l4555
 17884  1513                     l4547:	
 17885                           
 17886                           ;oled.c: 86: {
 17887                           ;oled.c: 87: OLED_Data( *pic++);
 17888  1513  0824               	movf	OLED_PutPicture@pic,w
 17889  1514  0084               	movwf	4
 17890  1515  0825               	movf	OLED_PutPicture@pic+1,w
 17891  1516  0085               	movwf	5
 17892  1517  0800               	movf	0,w	;code access
 17893  1518  319F  277F  3194   	fcall	_OLED_Data
 17894  151B  3001               	movlw	1
 17895  151C  0020               	movlb	0	; select bank0
 17896  151D  07A4               	addwf	OLED_PutPicture@pic,f
 17897  151E  3000               	movlw	0
 17898  151F  3DA5               	addwfc	OLED_PutPicture@pic+1,f
 17899  1520  3001               	movlw	1
 17900  1521  07A6               	addwf	OLED_PutPicture@j,f
 17901  1522  3000               	movlw	0
 17902  1523  3DA7               	addwfc	OLED_PutPicture@j+1,f
 17903  1524  3000               	movlw	0
 17904  1525  0227               	subwf	OLED_PutPicture@j+1,w
 17905  1526  3060               	movlw	96
 17906  1527  1903               	skipnz
 17907  1528  0226               	subwf	OLED_PutPicture@j,w
 17908  1529  1C03               	skipc
 17909  152A  2D13               	goto	l4547
 17910  152B                     l4555:	
 17911  152B  3001               	movlw	1
 17912  152C  07A8               	addwf	OLED_PutPicture@i,f
 17913  152D  3000               	movlw	0
 17914  152E  3DA9               	addwfc	OLED_PutPicture@i+1,f
 17915  152F  2CFA               	goto	L5
 17916  1530                     __end_of_OLED_PutPicture:	
 17917                           
 17918                           	psect	text94
 17919  1FB1                     __ptext94:	
 17920 ;; *************** function _OLED_SetRow *****************
 17921 ;; Defined at:
 17922 ;;		line 59 in file "oled.c"
 17923 ;; Parameters:    Size  Location     Type
 17924 ;;  address         1    wreg     unsigned char 
 17925 ;; Auto vars:     Size  Location     Type
 17926 ;;  address         1    3[BANK0 ] unsigned char 
 17927 ;; Return value:  Size  Location     Type
 17928 ;;                  1    wreg      void 
 17929 ;; Registers used:
 17930 ;;		wreg, status,2, status,0, pclath, cstack
 17931 ;; Tracked objects:
 17932 ;;		On entry : 0/0
 17933 ;;		On exit  : 0/0
 17934 ;;		Unchanged: 0/0
 17935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17939 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17940 ;;Total ram usage:        2 bytes
 17941 ;; Hardware stack levels used:    1
 17942 ;; Hardware stack levels required when called:    8
 17943 ;; This function calls:
 17944 ;;		_OLED_Command
 17945 ;; This function is called by:
 17946 ;;		_OLED_PutPicture
 17947 ;;		_OLED_Clear
 17948 ;; This function uses a non-reentrant model
 17949 ;;
 17950                           
 17951                           
 17952                           ;psect for function _OLED_SetRow
 17953  1FB1                     _OLED_SetRow:	
 17954                           
 17955                           ;incstack = 0
 17956                           ; Regs used in _OLED_SetRow: [wreg+status,2+status,0+pclath+cstack]
 17957                           ;OLED_SetRow@address stored from wreg
 17958  1FB1  0020               	movlb	0	; select bank0
 17959  1FB2  00A3               	movwf	OLED_SetRow@address
 17960                           
 17961                           ;oled.c: 63: address = (uint8_t)(0xB0 | address);
 17962  1FB3  0823               	movf	OLED_SetRow@address,w
 17963  1FB4  38B0               	iorlw	176
 17964  1FB5  00A2               	movwf	??_OLED_SetRow
 17965  1FB6  0822               	movf	??_OLED_SetRow,w
 17966  1FB7  00A3               	movwf	OLED_SetRow@address
 17967                           
 17968                           ;oled.c: 64: OLED_Command( address);
 17969  1FB8  0823               	movf	OLED_SetRow@address,w
 17970  1FB9  319F  2789         	fcall	_OLED_Command
 17971  1FBB  0008               	return
 17972  1FBC                     __end_of_OLED_SetRow:	
 17973                           
 17974                           	psect	text95
 17975  1153                     __ptext95:	
 17976 ;; *************** function _OLED_SetColumn *****************
 17977 ;; Defined at:
 17978 ;;		line 67 in file "oled.c"
 17979 ;; Parameters:    Size  Location     Type
 17980 ;;  address         1    wreg     unsigned char 
 17981 ;; Auto vars:     Size  Location     Type
 17982 ;;  address         1    3[BANK0 ] unsigned char 
 17983 ;; Return value:  Size  Location     Type
 17984 ;;                  1    wreg      void 
 17985 ;; Registers used:
 17986 ;;		wreg, status,2, status,0, pclath, cstack
 17987 ;; Tracked objects:
 17988 ;;		On entry : 0/0
 17989 ;;		On exit  : 0/0
 17990 ;;		Unchanged: 0/0
 17991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17994 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17995 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17996 ;;Total ram usage:        2 bytes
 17997 ;; Hardware stack levels used:    1
 17998 ;; Hardware stack levels required when called:    8
 17999 ;; This function calls:
 18000 ;;		_OLED_Command
 18001 ;; This function is called by:
 18002 ;;		_OLED_PutPicture
 18003 ;;		_OLED_Clear
 18004 ;; This function uses a non-reentrant model
 18005 ;;
 18006                           
 18007                           
 18008                           ;psect for function _OLED_SetColumn
 18009  1153                     _OLED_SetColumn:	
 18010                           
 18011                           ;incstack = 0
 18012                           ; Regs used in _OLED_SetColumn: [wreg+status,2+status,0+pclath+cstack]
 18013                           ;OLED_SetColumn@address stored from wreg
 18014  1153  0020               	movlb	0	; select bank0
 18015  1154  00A3               	movwf	OLED_SetColumn@address
 18016                           
 18017                           ;oled.c: 71: address += 32;
 18018  1155  3020               	movlw	32
 18019  1156  00A2               	movwf	??_OLED_SetColumn
 18020  1157  0822               	movf	??_OLED_SetColumn,w
 18021  1158  07A3               	addwf	OLED_SetColumn@address,f
 18022                           
 18023                           ;oled.c: 72: OLED_Command(( 0x10 | (address >> 4)));
 18024  1159  0823               	movf	OLED_SetColumn@address,w
 18025  115A  00A2               	movwf	??_OLED_SetColumn
 18026  115B  3004               	movlw	4
 18027  115C                     u2605:	
 18028  115C  36A2               	lsrf	??_OLED_SetColumn,f
 18029  115D  0B89               	decfsz	9,f
 18030  115E  295C               	goto	u2605
 18031  115F  0822               	movf	??_OLED_SetColumn,w
 18032  1160  3810               	iorlw	16
 18033  1161  319F  2789  3191   	fcall	_OLED_Command
 18034                           
 18035                           ;oled.c: 73: OLED_Command(( 0x0f & address));
 18036  1164  0020               	movlb	0	; select bank0
 18037  1165  0823               	movf	OLED_SetColumn@address,w
 18038  1166  390F               	andlw	15
 18039  1167  319F  2789         	fcall	_OLED_Command
 18040  1169  0008               	return
 18041  116A                     __end_of_OLED_SetColumn:	
 18042                           
 18043                           	psect	text96
 18044  1F89                     __ptext96:	
 18045 ;; *************** function _OLED_Command *****************
 18046 ;; Defined at:
 18047 ;;		line 4 in file "oled.c"
 18048 ;; Parameters:    Size  Location     Type
 18049 ;;  temp            1    wreg     unsigned char 
 18050 ;; Auto vars:     Size  Location     Type
 18051 ;;  temp            1    1[BANK0 ] unsigned char 
 18052 ;; Return value:  Size  Location     Type
 18053 ;;                  1    wreg      void 
 18054 ;; Registers used:
 18055 ;;		wreg, status,2, status,0, pclath, cstack
 18056 ;; Tracked objects:
 18057 ;;		On entry : 0/0
 18058 ;;		On exit  : 0/0
 18059 ;;		Unchanged: 0/0
 18060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18064 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18065 ;;Total ram usage:        1 bytes
 18066 ;; Hardware stack levels used:    1
 18067 ;; Hardware stack levels required when called:    7
 18068 ;; This function calls:
 18069 ;;		_SPI2_Exchange8bit
 18070 ;; This function is called by:
 18071 ;;		_OLED_Initialize
 18072 ;;		_OLED_SetRow
 18073 ;;		_OLED_SetColumn
 18074 ;; This function uses a non-reentrant model
 18075 ;;
 18076                           
 18077                           
 18078                           ;psect for function _OLED_Command
 18079  1F89                     _OLED_Command:	
 18080                           
 18081                           ;incstack = 0
 18082                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
 18083                           ;OLED_Command@temp stored from wreg
 18084  1F89  0020               	movlb	0	; select bank0
 18085  1F8A  00A1               	movwf	OLED_Command@temp
 18086                           
 18087                           ;oled.c: 8: LATAbits.LATA3 = 0;
 18088  1F8B  1196               	bcf	22,3	;volatile
 18089                           
 18090                           ;oled.c: 9: LATCbits.LATC2 = 0;
 18091  1F8C  1118               	bcf	24,2	;volatile
 18092                           
 18093                           ;oled.c: 10: SPI2_Exchange8bit( temp);
 18094  1F8D  0821               	movf	OLED_Command@temp,w
 18095  1F8E  319F  27F4         	fcall	_SPI2_Exchange8bit
 18096                           
 18097                           ;oled.c: 11: LATAbits.LATA3 = 1;
 18098  1F90  0020               	movlb	0	; select bank0
 18099  1F91  1596               	bsf	22,3	;volatile
 18100  1F92  0008               	return
 18101  1F93                     __end_of_OLED_Command:	
 18102                           
 18103                           	psect	text97
 18104  1F7F                     __ptext97:	
 18105 ;; *************** function _OLED_Data *****************
 18106 ;; Defined at:
 18107 ;;		line 14 in file "oled.c"
 18108 ;; Parameters:    Size  Location     Type
 18109 ;;  temp            1    wreg     unsigned char 
 18110 ;; Auto vars:     Size  Location     Type
 18111 ;;  temp            1    1[BANK0 ] unsigned char 
 18112 ;; Return value:  Size  Location     Type
 18113 ;;                  1    wreg      void 
 18114 ;; Registers used:
 18115 ;;		wreg, status,2, status,0, pclath, cstack
 18116 ;; Tracked objects:
 18117 ;;		On entry : 0/0
 18118 ;;		On exit  : 0/0
 18119 ;;		Unchanged: 0/0
 18120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18124 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18125 ;;Total ram usage:        1 bytes
 18126 ;; Hardware stack levels used:    1
 18127 ;; Hardware stack levels required when called:    7
 18128 ;; This function calls:
 18129 ;;		_SPI2_Exchange8bit
 18130 ;; This function is called by:
 18131 ;;		_OLED_PutPicture
 18132 ;;		_OLED_Clear
 18133 ;; This function uses a non-reentrant model
 18134 ;;
 18135                           
 18136                           
 18137                           ;psect for function _OLED_Data
 18138  1F7F                     _OLED_Data:	
 18139                           
 18140                           ;incstack = 0
 18141                           ; Regs used in _OLED_Data: [wreg+status,2+status,0+pclath+cstack]
 18142                           ;OLED_Data@temp stored from wreg
 18143  1F7F  0020               	movlb	0	; select bank0
 18144  1F80  00A1               	movwf	OLED_Data@temp
 18145                           
 18146                           ;oled.c: 18: LATAbits.LATA3 = 0;
 18147  1F81  1196               	bcf	22,3	;volatile
 18148                           
 18149                           ;oled.c: 19: LATCbits.LATC2 = 1;
 18150  1F82  1518               	bsf	24,2	;volatile
 18151                           
 18152                           ;oled.c: 20: SPI2_Exchange8bit( temp);
 18153  1F83  0821               	movf	OLED_Data@temp,w
 18154  1F84  319F  27F4         	fcall	_SPI2_Exchange8bit
 18155                           
 18156                           ;oled.c: 21: LATAbits.LATA3 = 1;
 18157  1F86  0020               	movlb	0	; select bank0
 18158  1F87  1596               	bsf	22,3	;volatile
 18159  1F88  0008               	return
 18160  1F89                     __end_of_OLED_Data:	
 18161                           
 18162                           	psect	text98
 18163  1FF4                     __ptext98:	
 18164 ;; *************** function _SPI2_Exchange8bit *****************
 18165 ;; Defined at:
 18166 ;;		line 79 in file "mcc_generated_files/spi2.c"
 18167 ;; Parameters:    Size  Location     Type
 18168 ;;  data            1    wreg     unsigned char 
 18169 ;; Auto vars:     Size  Location     Type
 18170 ;;  data            1    0[BANK0 ] unsigned char 
 18171 ;; Return value:  Size  Location     Type
 18172 ;;                  1    wreg      unsigned char 
 18173 ;; Registers used:
 18174 ;;		wreg
 18175 ;; Tracked objects:
 18176 ;;		On entry : 0/0
 18177 ;;		On exit  : 0/0
 18178 ;;		Unchanged: 0/0
 18179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18183 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18184 ;;Total ram usage:        1 bytes
 18185 ;; Hardware stack levels used:    1
 18186 ;; Hardware stack levels required when called:    6
 18187 ;; This function calls:
 18188 ;;		Nothing
 18189 ;; This function is called by:
 18190 ;;		_OLED_Command
 18191 ;;		_OLED_Data
 18192 ;;		_SPI2_Exchange8bitBuffer
 18193 ;; This function uses a non-reentrant model
 18194 ;;
 18195                           
 18196                           
 18197                           ;psect for function _SPI2_Exchange8bit
 18198  1FF4                     _SPI2_Exchange8bit:	
 18199                           
 18200                           ;incstack = 0
 18201                           ; Regs used in _SPI2_Exchange8bit: [wreg]
 18202                           ;SPI2_Exchange8bit@data stored from wreg
 18203  1FF4  0020               	movlb	0	; select bank0
 18204  1FF5  00A0               	movwf	SPI2_Exchange8bit@data
 18205                           
 18206                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 18207  1FF6  0023               	movlb	3	; select bank3
 18208  1FF7  139A               	bcf	26,7	;volatile
 18209                           
 18210                           ;spi2.c: 84: SSP2BUF = data;
 18211  1FF8  0020               	movlb	0	; select bank0
 18212  1FF9  0820               	movf	SPI2_Exchange8bit@data,w
 18213  1FFA  0023               	movlb	3	; select bank3
 18214  1FFB  0096               	movwf	22	;volatile
 18215  1FFC                     l746:	
 18216                           ;spi2.c: 87: {
 18217                           
 18218                           ;spi2.c: 86: while(SSP2STATbits.BF == 0x0)
 18219                           
 18220  1FFC  1C19               	btfss	25,0	;volatile
 18221  1FFD  2FFC               	goto	l746
 18222                           
 18223                           ;spi2.c: 88: }
 18224                           ;spi2.c: 90: return (SSP2BUF);
 18225  1FFE  0816               	movf	22,w	;volatile
 18226  1FFF  0008               	return
 18227  2000                     __end_of_SPI2_Exchange8bit:	
 18228                           
 18229                           	psect	intentry
 18230  0004                     __pintentry:	
 18231 ;; *************** function _INTERRUPT_InterruptManager *****************
 18232 ;; Defined at:
 18233 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18234 ;; Parameters:    Size  Location     Type
 18235 ;;		None
 18236 ;; Auto vars:     Size  Location     Type
 18237 ;;		None
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  1    wreg      void 
 18240 ;; Registers used:
 18241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18250 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18251 ;;Total ram usage:        1 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; Hardware stack levels required when called:    5
 18254 ;; This function calls:
 18255 ;;		Absolute function
 18256 ;;		_i2c_busCollisionISR
 18257 ;;		i1_i2c_ISR
 18258 ;; This function is called by:
 18259 ;;		Interrupt level 1
 18260 ;; This function uses a non-reentrant model
 18261 ;;
 18262                           
 18263  0004                     _INTERRUPT_InterruptManager:	
 18264                           
 18265                           ;incstack = 0
 18266 ;; hardware stack exceeded
 18267  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18268                           
 18269                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18270  0005  3180               	pagesel	$
 18271  0006  0020               	movlb	0	; select bank0
 18272  0007  087F               	movf	127,w
 18273  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
 18274                           
 18275                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 18276  0009  1F0B               	btfss	11,6	;volatile
 18277  000A  281D               	goto	i1l633
 18278                           
 18279                           ;interrupt_manager.c: 56: {
 18280                           ;interrupt_manager.c: 57: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 18281  000B  002E               	movlb	14	; select bank14
 18282  000C  1899               	btfsc	25,1	;volatile
 18283  000D  1C8F               	btfss	15,1	;volatile
 18284  000E  2815               	goto	i1l628
 18285                           
 18286                           ;interrupt_manager.c: 58: {
 18287                           ;interrupt_manager.c: 59: i2c1_driver_busCollisionISR();
 18288  000F  087D               	movf	_i2c1_driver_busCollisionISR+1,w
 18289  0010  008A               	movwf	10
 18290  0011  087C               	movf	_i2c1_driver_busCollisionISR,w
 18291  0012  000A               	callw
 18292  0013  3180               	pagesel	$
 18293                           
 18294                           ;interrupt_manager.c: 60: }
 18295  0014  281D               	goto	i1l633
 18296  0015                     i1l628:	
 18297                           
 18298                           ;interrupt_manager.c: 61: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 18299  0015  1819               	btfsc	25,0	;volatile
 18300  0016  1C0F               	btfss	15,0	;volatile
 18301  0017  281D               	goto	i1l633
 18302                           
 18303                           ;interrupt_manager.c: 62: {
 18304                           ;interrupt_manager.c: 63: i2c1_driver_i2cISR();
 18305  0018  087B               	movf	_i2c1_driver_i2cISR+1,w
 18306  0019  008A               	movwf	10
 18307  001A  087A               	movf	_i2c1_driver_i2cISR,w
 18308  001B  000A               	callw
 18309  001C  3180               	pagesel	$
 18310  001D                     i1l633:	
 18311                           ;interrupt_manager.c: 70: else
 18312                           ;interrupt_manager.c: 71: {
 18313                           
 18314                           ;interrupt_manager.c: 68: }
 18315                           ;interrupt_manager.c: 69: }
 18316                           
 18317                           ;interrupt_manager.c: 65: else
 18318                           ;interrupt_manager.c: 66: {
 18319                           
 18320                           ;interrupt_manager.c: 64: }
 18321                           
 18322  001D  0877               	movf	??_INTERRUPT_InterruptManager,w
 18323  001E  0020               	movlb	0	; select bank0
 18324  001F  00FF               	movwf	127
 18325  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18326  0021  0009               	retfie
 18327  0022                     __end_of_INTERRUPT_InterruptManager:	
 18328                           
 18329                           	psect	text100
 18330  12C5                     __ptext100:	
 18331 ;; *************** function i1_i2c_ISR *****************
 18332 ;; Defined at:
 18333 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 18334 ;; Parameters:    Size  Location     Type
 18335 ;;		None
 18336 ;; Auto vars:     Size  Location     Type
 18337 ;;		None
 18338 ;; Return value:  Size  Location     Type
 18339 ;;                  1    wreg      void 
 18340 ;; Registers used:
 18341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18342 ;; Tracked objects:
 18343 ;;		On entry : 0/0
 18344 ;;		On exit  : 0/0
 18345 ;;		Unchanged: 0/0
 18346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18349 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18351 ;;Total ram usage:        3 bytes
 18352 ;; Hardware stack levels used:    1
 18353 ;; Hardware stack levels required when called:    4
 18354 ;; This function calls:
 18355 ;;		i1_do_I2C_DO_ACK
 18356 ;;		i1_do_I2C_DO_ADDRESS_NACK
 18357 ;;		i1_do_I2C_DO_NACK_RESTART
 18358 ;;		i1_do_I2C_DO_NACK_STOP
 18359 ;;		i1_do_I2C_IDLE
 18360 ;;		i1_do_I2C_RCEN
 18361 ;;		i1_do_I2C_RESET
 18362 ;;		i1_do_I2C_RX
 18363 ;;		i1_do_I2C_SEND_ADR_READ
 18364 ;;		i1_do_I2C_SEND_ADR_WRITE
 18365 ;;		i1_do_I2C_SEND_RESTART
 18366 ;;		i1_do_I2C_SEND_RESTART_READ
 18367 ;;		i1_do_I2C_SEND_RESTART_WRITE
 18368 ;;		i1_do_I2C_SEND_STOP
 18369 ;;		i1_do_I2C_TX
 18370 ;;		i1_do_I2C_TX_EMPTY
 18371 ;;		i1_i2c1_driver_isNACK
 18372 ;;		i1_mssp1_clearIRQ
 18373 ;; This function is called by:
 18374 ;; This function uses a non-reentrant model
 18375 ;;
 18376                           
 18377                           
 18378                           ;psect for function i1_i2c_ISR
 18379  12C5                     i1_i2c_ISR:	
 18380  12C5                     i1l7099:	
 18381                           ;incstack = 0
 18382 ;; hardware stack exceeded
 18383                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18384                           
 18385                           
 18386                           ;i2c_master.c: 421: mssp1_clearIRQ();
 18387  12C5  319E  2680  3192   	fcall	i1_mssp1_clearIRQ
 18388                           
 18389                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 18390  12C8  0021               	movlb	1	; select bank1
 18391  12C9  1DC7               	btfss	_i2c_status^(0+128),3
 18392  12CA  2AD5               	goto	i1l7107
 18393  12CB  319F  2714  3192   	fcall	i1_i2c1_driver_isNACK
 18394  12CE  1C03               	btfss	3,0
 18395  12CF  2AD5               	goto	i1l7107
 18396                           
 18397                           ;i2c_master.c: 428: {
 18398                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 18399  12D0  300F               	movlw	15
 18400  12D1  00F4               	movwf	??i1_i2c_ISR
 18401  12D2  0874               	movf	??i1_i2c_ISR,w
 18402  12D3  0021               	movlb	1	; select bank1
 18403  12D4  00D0               	movwf	(_i2c_status^(0+128)+9)
 18404  12D5                     i1l7107:	
 18405                           
 18406                           ;i2c_master.c: 430: }
 18407                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 18408  12D5  0021               	movlb	1	; select bank1
 18409  12D6  0850               	movf	(_i2c_status^(0+128)+9),w
 18410  12D7  00F4               	movwf	??i1_i2c_ISR
 18411  12D8  01F5               	clrf	??i1_i2c_ISR+1
 18412  12D9  35F4               	lslf	??i1_i2c_ISR,f
 18413  12DA  0DF5               	rlf	??i1_i2c_ISR+1,f
 18414  12DB  3000               	movlw	low (_fsmStateTable| (0+32768))
 18415  12DC  0774               	addwf	??i1_i2c_ISR,w
 18416  12DD  0084               	movwf	4
 18417  12DE  3098               	movlw	high (_fsmStateTable| (0+32768))
 18418  12DF  3D75               	addwfc	??i1_i2c_ISR+1,w
 18419  12E0  0085               	movwf	5
 18420  12E1  3F01               	moviw [1]fsr0
 18421  12E2  008A               	movwf	10
 18422  12E3  3F00               	moviw [0]fsr0
 18423  12E4  000A               	callw
 18424  12E5  3192               	pagesel	$
 18425  12E6  00F6               	movwf	??i1_i2c_ISR+2
 18426  12E7  0876               	movf	??i1_i2c_ISR+2,w
 18427  12E8  0021               	movlb	1	; select bank1
 18428  12E9  00D0               	movwf	(_i2c_status^(0+128)+9)
 18429  12EA  0008               	return
 18430  12EB                     __end_ofi1_i2c_ISR:	
 18431                           
 18432                           	psect	text101
 18433  1E80                     __ptext101:	
 18434 ;; *************** function i1_mssp1_clearIRQ *****************
 18435 ;; Defined at:
 18436 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 18437 ;; Parameters:    Size  Location     Type
 18438 ;;		None
 18439 ;; Auto vars:     Size  Location     Type
 18440 ;;		None
 18441 ;; Return value:  Size  Location     Type
 18442 ;;                  1    wreg      void 
 18443 ;; Registers used:
 18444 ;;		None
 18445 ;; Tracked objects:
 18446 ;;		On entry : 0/0
 18447 ;;		On exit  : 0/0
 18448 ;;		Unchanged: 0/0
 18449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18454 ;;Total ram usage:        0 bytes
 18455 ;; Hardware stack levels used:    1
 18456 ;; This function calls:
 18457 ;;		Nothing
 18458 ;; This function is called by:
 18459 ;;		i1_i2c_ISR
 18460 ;; This function uses a non-reentrant model
 18461 ;;
 18462                           
 18463                           
 18464                           ;psect for function i1_mssp1_clearIRQ
 18465  1E80                     i1_mssp1_clearIRQ:	
 18466                           
 18467                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
 18468                           
 18469                           ;incstack = 0
 18470                           ; Regs used in i1_mssp1_clearIRQ: []
 18471  1E80  002E               	movlb	14	; select bank14
 18472  1E81  100F               	bcf	15,0	;volatile
 18473  1E82  0008               	return
 18474  1E83                     __end_ofi1_mssp1_clearIRQ:	
 18475                           
 18476                           	psect	text102
 18477  1569                     __ptext102:	
 18478 ;; *************** function i1_do_I2C_RX *****************
 18479 ;; Defined at:
 18480 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 18481 ;; Parameters:    Size  Location     Type
 18482 ;;		None
 18483 ;; Auto vars:     Size  Location     Type
 18484 ;;		None
 18485 ;; Return value:  Size  Location     Type
 18486 ;;                  1    wreg      enum E15307
 18487 ;; Registers used:
 18488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18489 ;; Tracked objects:
 18490 ;;		On entry : 0/0
 18491 ;;		On exit  : 0/0
 18492 ;;		Unchanged: 0/0
 18493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18498 ;;Total ram usage:        1 bytes
 18499 ;; Hardware stack levels used:    1
 18500 ;; Hardware stack levels required when called:    3
 18501 ;; This function calls:
 18502 ;;		Absolute function
 18503 ;;		i1_do_I2C_DO_NACK_RESTART
 18504 ;;		i1_do_I2C_DO_NACK_STOP
 18505 ;;		i1_i2c1_driver_getRXData
 18506 ;;		i1_i2c1_driver_sendACK
 18507 ;;		i1_i2c_restartWrite
 18508 ;;		i1_rd1RegCompleteHandler
 18509 ;;		i1_rd2RegCompleteHandler
 18510 ;;		i1_rdBlkRegCompleteHandler
 18511 ;;		i1_returnReset
 18512 ;;		i1_returnStop
 18513 ;;		i1_wr1RegCompleteHandler
 18514 ;;		i1_wr2RegCompleteHandler
 18515 ;; This function is called by:
 18516 ;; This function uses a non-reentrant model
 18517 ;;
 18518                           
 18519                           
 18520                           ;psect for function i1_do_I2C_RX
 18521  1569                     i1_do_I2C_RX:	
 18522  1569                     i1l7011:	
 18523                           ;incstack = 0
 18524 ;; hardware stack exceeded
 18525                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18526                           
 18527                           
 18528                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 18529  1569  319E  267A  3195   	fcall	i1_i2c1_driver_getRXData
 18530  156C  00F0               	movwf	??i1_do_I2C_RX
 18531  156D  0021               	movlb	1	; select bank1
 18532  156E  0849               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 18533  156F  0086               	movwf	6
 18534  1570  0187               	clrf	7
 18535  1571  0870               	movf	??i1_do_I2C_RX,w
 18536  1572  0081               	movwf	1
 18537  1573  3001               	movlw	1
 18538  1574  00F0               	movwf	??i1_do_I2C_RX
 18539  1575  0870               	movf	??i1_do_I2C_RX,w
 18540  1576  07C9               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 18541                           
 18542                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 18543  1577  3001               	movlw	1
 18544  1578  02CA               	subwf	(_i2c_status^(0+128)+3),f
 18545  1579  3000               	movlw	0
 18546  157A  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 18547  157B  084A               	movf	(_i2c_status^(0+128)+3),w
 18548  157C  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 18549  157D  1903               	btfsc	3,2
 18550  157E  2D83               	goto	i1l314
 18551                           
 18552                           ;i2c_master.c: 361: {
 18553                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 18554  157F  319E  269B         	fcall	i1_i2c1_driver_sendACK
 18555                           
 18556                           ;i2c_master.c: 363: return I2C_RCEN;
 18557  1581  3005               	movlw	5
 18558                           
 18559                           ;i2c_master.c: 364: }
 18560  1582  0008               	return
 18561  1583                     i1l314:	
 18562                           
 18563                           ;i2c_master.c: 365: else
 18564                           ;i2c_master.c: 366: {
 18565                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 18566  1583  1547               	bsf	_i2c_status^(0+128),2
 18567                           
 18568                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 18569  1584  2D8B               	goto	i1l7035
 18570  1585                     i1l7025:	
 18571                           ;i2c_master.c: 369: {
 18572                           ;i2c_master.c: 370: case i2c_restart_write:
 18573                           
 18574                           
 18575                           ;i2c_master.c: 371: case i2c_restart_read:
 18576                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 18577  1585  319E  26BB         	fcall	i1_do_I2C_DO_NACK_RESTART
 18578  1587  0008               	return
 18579  1588                     i1l7029:	
 18580                           ;i2c_master.c: 374: case i2c_continue:
 18581                           
 18582                           ;i2c_master.c: 373: default:
 18583                           
 18584                           
 18585                           ;i2c_master.c: 375: case i2c_stop:
 18586                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 18587  1588  319E  26B7         	fcall	i1_do_I2C_DO_NACK_STOP
 18588                           
 18589                           ;i2c_master.c: 377: }
 18590  158A  0008               	return
 18591  158B                     i1l7035:	
 18592  158B  0021               	movlb	1	; select bank1
 18593  158C  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 18594  158D  00F0               	movwf	??i1_do_I2C_RX
 18595  158E  0870               	movf	??i1_do_I2C_RX,w
 18596  158F  00F9               	movwf	i1returnStop@p
 18597  1590  300B               	movlw	11
 18598  1591  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 18599  1592  0086               	movwf	6
 18600  1593  0187               	clrf	7
 18601  1594  3F41               	moviw [1]fsr1
 18602  1595  008A               	movwf	10
 18603  1596  3F40               	moviw [0]fsr1
 18604  1597  000A               	callw
 18605  1598  3195               	pagesel	$
 18606                           
 18607                           ; Switch size 1, requested type "space"
 18608                           ; Number of cases is 4, Range of values is 1 to 4
 18609                           ; switch strategies available:
 18610                           ; Name         Instructions Cycles
 18611                           ; simple_byte           13     7 (average)
 18612                           ; direct_byte           17     9 (fixed)
 18613                           ; jumptable            263     9 (fixed)
 18614                           ;	Chosen strategy is simple_byte
 18615  1599  3A01               	xorlw	1	; case 1
 18616  159A  1903               	skipnz
 18617  159B  2D88               	goto	i1l7029
 18618  159C  3A03               	xorlw	3	; case 2
 18619  159D  1903               	skipnz
 18620  159E  2D85               	goto	i1l7025
 18621  159F  3A01               	xorlw	1	; case 3
 18622  15A0  1903               	skipnz
 18623  15A1  2D85               	goto	i1l7025
 18624  15A2  3A07               	xorlw	7	; case 4
 18625  15A3  1903               	skipnz
 18626  15A4  2D88               	goto	i1l7029
 18627  15A5  2D88               	goto	i1l7029
 18628  15A6  0008               	return
 18629  15A7                     __end_ofi1_do_I2C_RX:	
 18630                           
 18631                           	psect	text103
 18632  1678                     __ptext103:	
 18633 ;; *************** function i1_do_I2C_TX *****************
 18634 ;; Defined at:
 18635 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 18636 ;; Parameters:    Size  Location     Type
 18637 ;;		None
 18638 ;; Auto vars:     Size  Location     Type
 18639 ;;		None
 18640 ;; Return value:  Size  Location     Type
 18641 ;;                  1    wreg      enum E15307
 18642 ;; Registers used:
 18643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18644 ;; Tracked objects:
 18645 ;;		On entry : 0/0
 18646 ;;		On exit  : 0/0
 18647 ;;		Unchanged: 0/0
 18648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18652 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18653 ;;Total ram usage:        3 bytes
 18654 ;; Hardware stack levels used:    1
 18655 ;; Hardware stack levels required when called:    3
 18656 ;; This function calls:
 18657 ;;		Absolute function
 18658 ;;		i1_do_I2C_SEND_RESTART_READ
 18659 ;;		i1_do_I2C_SEND_RESTART_WRITE
 18660 ;;		i1_do_I2C_SEND_STOP
 18661 ;;		i1_i2c1_driver_TXData
 18662 ;;		i1_i2c1_driver_isNACK
 18663 ;;		i1_i2c_restartWrite
 18664 ;;		i1_rd1RegCompleteHandler
 18665 ;;		i1_rd2RegCompleteHandler
 18666 ;;		i1_rdBlkRegCompleteHandler
 18667 ;;		i1_returnReset
 18668 ;;		i1_returnStop
 18669 ;;		i1_wr1RegCompleteHandler
 18670 ;;		i1_wr2RegCompleteHandler
 18671 ;; This function is called by:
 18672 ;; This function uses a non-reentrant model
 18673 ;;
 18674                           
 18675                           
 18676                           ;psect for function i1_do_I2C_TX
 18677  1678                     i1_do_I2C_TX:	
 18678  1678                     i1l6981:	
 18679                           ;incstack = 0
 18680 ;; hardware stack exceeded
 18681                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18682                           
 18683                           
 18684                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 18685  1678  319F  2714  3196   	fcall	i1_i2c1_driver_isNACK
 18686  167B  1803               	btfsc	3,0
 18687  167C  2E87               	goto	i1l6999
 18688  167D  2EA3               	goto	i1l298
 18689  167E                     i1l6985:	
 18690                           ;i2c_master.c: 338: {
 18691                           ;i2c_master.c: 339: case i2c_restart_read:
 18692                           
 18693                           ;i2c_master.c: 336: {
 18694                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 18695                           
 18696                           
 18697                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 18698  167E  319E  26A3         	fcall	i1_do_I2C_SEND_RESTART_READ
 18699  1680  0008               	return
 18700  1681                     i1l6989:	
 18701                           ;i2c_master.c: 341: case i2c_restart_write:
 18702                           
 18703                           
 18704                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 18705  1681  319E  26A7         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 18706  1683  0008               	return
 18707  1684                     i1l6993:	
 18708                           ;i2c_master.c: 344: case i2c_continue:
 18709                           
 18710                           ;i2c_master.c: 343: default:
 18711                           
 18712                           
 18713                           ;i2c_master.c: 345: case i2c_stop:
 18714                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 18715  1684  319E  26AF         	fcall	i1_do_I2C_SEND_STOP
 18716                           
 18717                           ;i2c_master.c: 347: }
 18718  1686  0008               	return
 18719  1687                     i1l6999:	
 18720  1687  0021               	movlb	1	; select bank1
 18721  1688  0861               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 18722  1689  00F1               	movwf	??i1_do_I2C_TX
 18723  168A  0871               	movf	??i1_do_I2C_TX,w
 18724  168B  00F9               	movwf	i1returnStop@p
 18725  168C  3011               	movlw	17
 18726  168D  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 18727  168E  0086               	movwf	6
 18728  168F  0187               	clrf	7
 18729  1690  3F41               	moviw [1]fsr1
 18730  1691  008A               	movwf	10
 18731  1692  3F40               	moviw [0]fsr1
 18732  1693  000A               	callw
 18733  1694  3196               	pagesel	$
 18734                           
 18735                           ; Switch size 1, requested type "space"
 18736                           ; Number of cases is 4, Range of values is 1 to 4
 18737                           ; switch strategies available:
 18738                           ; Name         Instructions Cycles
 18739                           ; simple_byte           13     7 (average)
 18740                           ; direct_byte           17     9 (fixed)
 18741                           ; jumptable            263     9 (fixed)
 18742                           ;	Chosen strategy is simple_byte
 18743  1695  3A01               	xorlw	1	; case 1
 18744  1696  1903               	skipnz
 18745  1697  2E84               	goto	i1l6993
 18746  1698  3A03               	xorlw	3	; case 2
 18747  1699  1903               	skipnz
 18748  169A  2E7E               	goto	i1l6985
 18749  169B  3A01               	xorlw	1	; case 3
 18750  169C  1903               	skipnz
 18751  169D  2E81               	goto	i1l6989
 18752  169E  3A07               	xorlw	7	; case 4
 18753  169F  1903               	skipnz
 18754  16A0  2E84               	goto	i1l6993
 18755  16A1  2E84               	goto	i1l6993
 18756                           
 18757                           ;i2c_master.c: 348: }
 18758  16A2  0008               	return
 18759  16A3                     i1l298:	
 18760                           
 18761                           ;i2c_master.c: 349: else
 18762                           ;i2c_master.c: 350: {
 18763                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 18764  16A3  0021               	movlb	1	; select bank1
 18765  16A4  11C7               	bcf	_i2c_status^(0+128),3
 18766                           
 18767                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 18768  16A5  3002               	movlw	2
 18769  16A6  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 18770  16A7  0086               	movwf	6
 18771  16A8  0187               	clrf	7
 18772  16A9  3F40               	moviw [0]fsr1
 18773  16AA  0084               	movwf	4
 18774  16AB  0185               	clrf	5
 18775  16AC  0A81               	incf	1,f
 18776  16AD  0800               	movf	0,w
 18777  16AE  319E  26CB  3196   	fcall	i1_i2c1_driver_TXData
 18778                           
 18779                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 18780  16B1  3001               	movlw	1
 18781  16B2  0021               	movlb	1	; select bank1
 18782  16B3  02CA               	subwf	(_i2c_status^(0+128)+3),f
 18783  16B4  3000               	movlw	0
 18784  16B5  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 18785  16B6  084A               	movf	(_i2c_status^(0+128)+3),w
 18786  16B7  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 18787  16B8  1D03               	btfss	3,2
 18788  16B9  2EBC               	goto	i1l7007
 18789  16BA  3006               	movlw	6
 18790  16BB  2EBD               	goto	L6
 18791  16BC                     i1l7007:	
 18792  16BC  3003               	movlw	3
 18793  16BD                     L6:	
 18794  16BD  00F2               	movwf	i1_do_I2C_TX$723
 18795  16BE  3000               	movlw	0
 18796  16BF  00F3               	movwf	i1_do_I2C_TX$723+1
 18797  16C0  0872               	movf	i1_do_I2C_TX$723,w
 18798  16C1  0008               	return
 18799  16C2                     __end_ofi1_do_I2C_TX:	
 18800                           
 18801                           	psect	text104
 18802  1235                     __ptext104:	
 18803 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 18804 ;; Defined at:
 18805 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 18806 ;; Parameters:    Size  Location     Type
 18807 ;;		None
 18808 ;; Auto vars:     Size  Location     Type
 18809 ;;		None
 18810 ;; Return value:  Size  Location     Type
 18811 ;;                  1    wreg      enum E15307
 18812 ;; Registers used:
 18813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18814 ;; Tracked objects:
 18815 ;;		On entry : 0/0
 18816 ;;		On exit  : 0/0
 18817 ;;		Unchanged: 0/0
 18818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18823 ;;Total ram usage:        1 bytes
 18824 ;; Hardware stack levels used:    1
 18825 ;; Hardware stack levels required when called:    3
 18826 ;; This function calls:
 18827 ;;		Absolute function
 18828 ;;		i1_do_I2C_SEND_RESTART
 18829 ;;		i1_do_I2C_SEND_STOP
 18830 ;;		i1_i2c_restartWrite
 18831 ;;		i1_rd1RegCompleteHandler
 18832 ;;		i1_rd2RegCompleteHandler
 18833 ;;		i1_rdBlkRegCompleteHandler
 18834 ;;		i1_returnReset
 18835 ;;		i1_returnStop
 18836 ;;		i1_wr1RegCompleteHandler
 18837 ;;		i1_wr2RegCompleteHandler
 18838 ;; This function is called by:
 18839 ;; This function uses a non-reentrant model
 18840 ;;
 18841                           
 18842                           
 18843                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 18844  1235                     i1_do_I2C_DO_ADDRESS_NACK:	
 18845  1235                     i1l6965:	
 18846                           ;incstack = 0
 18847 ;; hardware stack exceeded
 18848                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18849                           
 18850                           
 18851                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 18852  1235  0021               	movlb	1	; select bank1
 18853  1236  11C7               	bcf	_i2c_status^(0+128),3
 18854                           
 18855                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 18856  1237  3002               	movlw	2
 18857  1238  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 18858  1239  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 18859  123A  00D1               	movwf	(_i2c_status^(0+128)+10)
 18860                           
 18861                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 18862  123B  2A42               	goto	i1l6979
 18863  123C                     i1l6969:	
 18864                           ;i2c_master.c: 324: {
 18865                           ;i2c_master.c: 325: case i2c_restart_read:
 18866                           
 18867                           
 18868                           ;i2c_master.c: 326: case i2c_restart_write:
 18869                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 18870  123C  319E  26AB         	fcall	i1_do_I2C_SEND_RESTART
 18871  123E  0008               	return
 18872  123F                     i1l6973:	
 18873                           ;i2c_master.c: 328: default:
 18874                           
 18875                           
 18876                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 18877  123F  319E  26AF         	fcall	i1_do_I2C_SEND_STOP
 18878                           
 18879                           ;i2c_master.c: 330: }
 18880  1241  0008               	return
 18881  1242                     i1l6979:	
 18882  1242  0021               	movlb	1	; select bank1
 18883  1243  0860               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 18884  1244  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 18885  1245  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 18886  1246  00F9               	movwf	i1returnStop@p
 18887  1247  300F               	movlw	15
 18888  1248  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 18889  1249  0086               	movwf	6
 18890  124A  0187               	clrf	7
 18891  124B  3F41               	moviw [1]fsr1
 18892  124C  008A               	movwf	10
 18893  124D  3F40               	moviw [0]fsr1
 18894  124E  000A               	callw
 18895  124F  3192               	pagesel	$
 18896                           
 18897                           ; Switch size 1, requested type "space"
 18898                           ; Number of cases is 2, Range of values is 2 to 3
 18899                           ; switch strategies available:
 18900                           ; Name         Instructions Cycles
 18901                           ; simple_byte            7     4 (average)
 18902                           ; direct_byte           13     9 (fixed)
 18903                           ; jumptable            263     9 (fixed)
 18904                           ;	Chosen strategy is simple_byte
 18905  1250  3A02               	xorlw	2	; case 2
 18906  1251  1903               	skipnz
 18907  1252  2A3C               	goto	i1l6969
 18908  1253  3A01               	xorlw	1	; case 3
 18909  1254  1903               	skipnz
 18910  1255  2A3C               	goto	i1l6969
 18911  1256  2A3F               	goto	i1l6973
 18912  1257  0008               	return
 18913  1258                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 18914                           
 18915                           	psect	text105
 18916  1EBB                     __ptext105:	
 18917 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 18918 ;; Defined at:
 18919 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 18920 ;; Parameters:    Size  Location     Type
 18921 ;;		None
 18922 ;; Auto vars:     Size  Location     Type
 18923 ;;		None
 18924 ;; Return value:  Size  Location     Type
 18925 ;;                  1    wreg      enum E15307
 18926 ;; Registers used:
 18927 ;;		wreg, status,2, status,0, pclath, cstack
 18928 ;; Tracked objects:
 18929 ;;		On entry : 0/0
 18930 ;;		On exit  : 0/0
 18931 ;;		Unchanged: 0/0
 18932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18937 ;;Total ram usage:        0 bytes
 18938 ;; Hardware stack levels used:    1
 18939 ;; Hardware stack levels required when called:    1
 18940 ;; This function calls:
 18941 ;;		i1_i2c1_driver_sendNACK
 18942 ;; This function is called by:
 18943 ;;		i1_do_I2C_RX
 18944 ;; This function uses a non-reentrant model
 18945 ;;
 18946                           
 18947                           
 18948                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 18949  1EBB                     i1_do_I2C_DO_NACK_RESTART:	
 18950  1EBB                     i1l4203:	
 18951                           ;incstack = 0
 18952 ;; hardware stack exceeded
 18953                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18954                           
 18955                           
 18956                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 18957  1EBB  319E  269F         	fcall	i1_i2c1_driver_sendNACK
 18958                           
 18959                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 18960  1EBD  3009               	movlw	9
 18961  1EBE  0008               	return
 18962  1EBF                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 18963                           
 18964                           	psect	text106
 18965  1EB7                     __ptext106:	
 18966 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 18967 ;; Defined at:
 18968 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 18969 ;; Parameters:    Size  Location     Type
 18970 ;;		None
 18971 ;; Auto vars:     Size  Location     Type
 18972 ;;		None
 18973 ;; Return value:  Size  Location     Type
 18974 ;;                  1    wreg      enum E15307
 18975 ;; Registers used:
 18976 ;;		wreg, status,2, status,0, pclath, cstack
 18977 ;; Tracked objects:
 18978 ;;		On entry : 0/0
 18979 ;;		On exit  : 0/0
 18980 ;;		Unchanged: 0/0
 18981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18986 ;;Total ram usage:        0 bytes
 18987 ;; Hardware stack levels used:    1
 18988 ;; Hardware stack levels required when called:    1
 18989 ;; This function calls:
 18990 ;;		i1_i2c1_driver_sendNACK
 18991 ;; This function is called by:
 18992 ;;		i1_do_I2C_RX
 18993 ;; This function uses a non-reentrant model
 18994 ;;
 18995                           
 18996                           
 18997                           ;psect for function i1_do_I2C_DO_NACK_STOP
 18998  1EB7                     i1_do_I2C_DO_NACK_STOP:	
 18999  1EB7                     i1l4197:	
 19000                           ;incstack = 0
 19001 ;; hardware stack exceeded
 19002                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 19003                           
 19004                           
 19005                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 19006  1EB7  319E  269F         	fcall	i1_i2c1_driver_sendNACK
 19007                           
 19008                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 19009  1EB9  300A               	movlw	10
 19010  1EBA  0008               	return
 19011  1EBB                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 19012                           
 19013                           	psect	text107
 19014  1EB3                     __ptext107:	
 19015 ;; *************** function i1_do_I2C_DO_ACK *****************
 19016 ;; Defined at:
 19017 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 19018 ;; Parameters:    Size  Location     Type
 19019 ;;		None
 19020 ;; Auto vars:     Size  Location     Type
 19021 ;;		None
 19022 ;; Return value:  Size  Location     Type
 19023 ;;                  1    wreg      enum E15307
 19024 ;; Registers used:
 19025 ;;		wreg, status,2, status,0, pclath, cstack
 19026 ;; Tracked objects:
 19027 ;;		On entry : 0/0
 19028 ;;		On exit  : 0/0
 19029 ;;		Unchanged: 0/0
 19030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19035 ;;Total ram usage:        0 bytes
 19036 ;; Hardware stack levels used:    1
 19037 ;; Hardware stack levels required when called:    1
 19038 ;; This function calls:
 19039 ;;		i1_i2c1_driver_sendACK
 19040 ;; This function is called by:
 19041 ;; This function uses a non-reentrant model
 19042 ;;
 19043                           
 19044                           
 19045                           ;psect for function i1_do_I2C_DO_ACK
 19046  1EB3                     i1_do_I2C_DO_ACK:	
 19047  1EB3                     i1l4629:	
 19048                           ;incstack = 0
 19049                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 19050                           
 19051                           
 19052                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 19053  1EB3  319E  269B         	fcall	i1_i2c1_driver_sendACK
 19054                           
 19055                           ;i2c_master.c: 302: return I2C_RCEN;
 19056  1EB5  3005               	movlw	5
 19057  1EB6  0008               	return
 19058  1EB7                     __end_ofi1_do_I2C_DO_ACK:	
 19059                           
 19060                           	psect	text108
 19061  1ED5                     __ptext108:	
 19062 ;; *************** function i1_do_I2C_RCEN *****************
 19063 ;; Defined at:
 19064 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 19065 ;; Parameters:    Size  Location     Type
 19066 ;;		None
 19067 ;; Auto vars:     Size  Location     Type
 19068 ;;		None
 19069 ;; Return value:  Size  Location     Type
 19070 ;;                  1    wreg      enum E15307
 19071 ;; Registers used:
 19072 ;;		wreg, status,2, status,0, pclath, cstack
 19073 ;; Tracked objects:
 19074 ;;		On entry : 0/0
 19075 ;;		On exit  : 0/0
 19076 ;;		Unchanged: 0/0
 19077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19082 ;;Total ram usage:        0 bytes
 19083 ;; Hardware stack levels used:    1
 19084 ;; Hardware stack levels required when called:    1
 19085 ;; This function calls:
 19086 ;;		i1_i2c1_driver_startRX
 19087 ;; This function is called by:
 19088 ;; This function uses a non-reentrant model
 19089 ;;
 19090                           
 19091                           
 19092                           ;psect for function i1_do_I2C_RCEN
 19093  1ED5                     i1_do_I2C_RCEN:	
 19094  1ED5                     i1l4621:	
 19095                           ;incstack = 0
 19096                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 19097                           
 19098                           
 19099                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 19100  1ED5  0021               	movlb	1	; select bank1
 19101  1ED6  11C7               	bcf	_i2c_status^(0+128),3
 19102                           
 19103                           ;i2c_master.c: 295: i2c1_driver_startRX();
 19104  1ED7  319E  2677         	fcall	i1_i2c1_driver_startRX
 19105                           
 19106                           ;i2c_master.c: 296: return I2C_RX;
 19107  1ED9  3004               	movlw	4
 19108  1EDA  0008               	return
 19109  1EDB                     __end_ofi1_do_I2C_RCEN:	
 19110                           
 19111                           	psect	text109
 19112  1F06                     __ptext109:	
 19113 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 19114 ;; Defined at:
 19115 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 19116 ;; Parameters:    Size  Location     Type
 19117 ;;		None
 19118 ;; Auto vars:     Size  Location     Type
 19119 ;;		None
 19120 ;; Return value:  Size  Location     Type
 19121 ;;                  1    wreg      enum E15307
 19122 ;; Registers used:
 19123 ;;		wreg, status,2, status,0, pclath, cstack
 19124 ;; Tracked objects:
 19125 ;;		On entry : 0/0
 19126 ;;		On exit  : 0/0
 19127 ;;		Unchanged: 0/0
 19128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19133 ;;Total ram usage:        0 bytes
 19134 ;; Hardware stack levels used:    1
 19135 ;; Hardware stack levels required when called:    1
 19136 ;; This function calls:
 19137 ;;		i1_i2c1_driver_TXData
 19138 ;; This function is called by:
 19139 ;; This function uses a non-reentrant model
 19140 ;;
 19141                           
 19142                           
 19143                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 19144  1F06                     i1_do_I2C_SEND_ADR_WRITE:	
 19145  1F06                     i1l4613:	
 19146                           ;incstack = 0
 19147                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 19148                           
 19149                           
 19150                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 19151  1F06  0021               	movlb	1	; select bank1
 19152  1F07  15C7               	bsf	_i2c_status^(0+128),3
 19153                           
 19154                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 19155  1F08  3548               	lslf	(_i2c_status^(0+128)+1),w
 19156  1F09  319E  26CB         	fcall	i1_i2c1_driver_TXData
 19157                           
 19158                           ;i2c_master.c: 289: return I2C_TX;
 19159  1F0B  3003               	movlw	3
 19160  1F0C  0008               	return
 19161  1F0D                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 19162                           
 19163                           	psect	text110
 19164  1F1C                     __ptext110:	
 19165 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 19166 ;; Defined at:
 19167 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 19168 ;; Parameters:    Size  Location     Type
 19169 ;;		None
 19170 ;; Auto vars:     Size  Location     Type
 19171 ;;		None
 19172 ;; Return value:  Size  Location     Type
 19173 ;;                  1    wreg      enum E15307
 19174 ;; Registers used:
 19175 ;;		wreg, status,2, status,0, pclath, cstack
 19176 ;; Tracked objects:
 19177 ;;		On entry : 0/0
 19178 ;;		On exit  : 0/0
 19179 ;;		Unchanged: 0/0
 19180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19185 ;;Total ram usage:        0 bytes
 19186 ;; Hardware stack levels used:    1
 19187 ;; Hardware stack levels required when called:    1
 19188 ;; This function calls:
 19189 ;;		i1_i2c1_driver_TXData
 19190 ;; This function is called by:
 19191 ;; This function uses a non-reentrant model
 19192 ;;
 19193                           
 19194                           
 19195                           ;psect for function i1_do_I2C_SEND_ADR_READ
 19196  1F1C                     i1_do_I2C_SEND_ADR_READ:	
 19197  1F1C                     i1l4605:	
 19198                           ;incstack = 0
 19199                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 19200                           
 19201                           
 19202                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 19203  1F1C  0021               	movlb	1	; select bank1
 19204  1F1D  15C7               	bsf	_i2c_status^(0+128),3
 19205                           
 19206                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 19207  1F1E  1403               	setc
 19208  1F1F  0D48               	rlf	(_i2c_status^(0+128)+1),w
 19209  1F20  319E  26CB         	fcall	i1_i2c1_driver_TXData
 19210                           
 19211                           ;i2c_master.c: 282: return I2C_RCEN;
 19212  1F22  3005               	movlw	5
 19213  1F23  0008               	return
 19214  1F24                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 19215                           
 19216                           	psect	text111
 19217  1EAF                     __ptext111:	
 19218 ;; *************** function i1_do_I2C_SEND_STOP *****************
 19219 ;; Defined at:
 19220 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 19221 ;; Parameters:    Size  Location     Type
 19222 ;;		None
 19223 ;; Auto vars:     Size  Location     Type
 19224 ;;		None
 19225 ;; Return value:  Size  Location     Type
 19226 ;;                  1    wreg      enum E15307
 19227 ;; Registers used:
 19228 ;;		wreg, status,2, status,0, pclath, cstack
 19229 ;; Tracked objects:
 19230 ;;		On entry : 0/0
 19231 ;;		On exit  : 0/0
 19232 ;;		Unchanged: 0/0
 19233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19238 ;;Total ram usage:        0 bytes
 19239 ;; Hardware stack levels used:    1
 19240 ;; Hardware stack levels required when called:    1
 19241 ;; This function calls:
 19242 ;;		i1_i2c1_driver_stop
 19243 ;; This function is called by:
 19244 ;;		i1_do_I2C_DO_ADDRESS_NACK
 19245 ;;		i1_do_I2C_TX
 19246 ;;		i1_do_I2C_TX_EMPTY
 19247 ;; This function uses a non-reentrant model
 19248 ;;
 19249                           
 19250                           
 19251                           ;psect for function i1_do_I2C_SEND_STOP
 19252  1EAF                     i1_do_I2C_SEND_STOP:	
 19253  1EAF                     i1l4191:	
 19254                           ;incstack = 0
 19255 ;; hardware stack exceeded
 19256                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 19257                           
 19258                           
 19259                           ;i2c_master.c: 274: i2c1_driver_stop();
 19260  1EAF  319E  2674         	fcall	i1_i2c1_driver_stop
 19261                           
 19262                           ;i2c_master.c: 275: return I2C_IDLE;
 19263  1EB1  3000               	movlw	0
 19264  1EB2  0008               	return
 19265  1EB3                     __end_ofi1_do_I2C_SEND_STOP:	
 19266                           
 19267                           	psect	text112
 19268  1EAB                     __ptext112:	
 19269 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 19270 ;; Defined at:
 19271 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 19272 ;; Parameters:    Size  Location     Type
 19273 ;;		None
 19274 ;; Auto vars:     Size  Location     Type
 19275 ;;		None
 19276 ;; Return value:  Size  Location     Type
 19277 ;;                  1    wreg      enum E15307
 19278 ;; Registers used:
 19279 ;;		wreg, status,2, status,0, pclath, cstack
 19280 ;; Tracked objects:
 19281 ;;		On entry : 0/0
 19282 ;;		On exit  : 0/0
 19283 ;;		Unchanged: 0/0
 19284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19289 ;;Total ram usage:        0 bytes
 19290 ;; Hardware stack levels used:    1
 19291 ;; Hardware stack levels required when called:    1
 19292 ;; This function calls:
 19293 ;;		i1_i2c1_driver_restart
 19294 ;; This function is called by:
 19295 ;;		i1_do_I2C_DO_ADDRESS_NACK
 19296 ;;		i1_do_I2C_TX_EMPTY
 19297 ;; This function uses a non-reentrant model
 19298 ;;
 19299                           
 19300                           
 19301                           ;psect for function i1_do_I2C_SEND_RESTART
 19302  1EAB                     i1_do_I2C_SEND_RESTART:	
 19303  1EAB                     i1l4185:	
 19304                           ;incstack = 0
 19305 ;; hardware stack exceeded
 19306                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 19307                           
 19308                           
 19309                           ;i2c_master.c: 268: i2c1_driver_restart();
 19310  1EAB  319E  2671         	fcall	i1_i2c1_driver_restart
 19311                           
 19312                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 19313  1EAD  3001               	movlw	1
 19314  1EAE  0008               	return
 19315  1EAF                     __end_ofi1_do_I2C_SEND_RESTART:	
 19316                           
 19317                           	psect	text113
 19318  1EA7                     __ptext113:	
 19319 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 19320 ;; Defined at:
 19321 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 19322 ;; Parameters:    Size  Location     Type
 19323 ;;		None
 19324 ;; Auto vars:     Size  Location     Type
 19325 ;;		None
 19326 ;; Return value:  Size  Location     Type
 19327 ;;                  1    wreg      enum E15307
 19328 ;; Registers used:
 19329 ;;		wreg, status,2, status,0, pclath, cstack
 19330 ;; Tracked objects:
 19331 ;;		On entry : 0/0
 19332 ;;		On exit  : 0/0
 19333 ;;		Unchanged: 0/0
 19334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19339 ;;Total ram usage:        0 bytes
 19340 ;; Hardware stack levels used:    1
 19341 ;; Hardware stack levels required when called:    1
 19342 ;; This function calls:
 19343 ;;		i1_i2c1_driver_restart
 19344 ;; This function is called by:
 19345 ;;		i1_do_I2C_TX
 19346 ;; This function uses a non-reentrant model
 19347 ;;
 19348                           
 19349                           
 19350                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 19351  1EA7                     i1_do_I2C_SEND_RESTART_WRITE:	
 19352  1EA7                     i1l4179:	
 19353                           ;incstack = 0
 19354 ;; hardware stack exceeded
 19355                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 19356                           
 19357                           
 19358                           ;i2c_master.c: 262: i2c1_driver_restart();
 19359  1EA7  319E  2671         	fcall	i1_i2c1_driver_restart
 19360                           
 19361                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 19362  1EA9  3002               	movlw	2
 19363  1EAA  0008               	return
 19364  1EAB                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 19365                           
 19366                           	psect	text114
 19367  1EA3                     __ptext114:	
 19368 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 19369 ;; Defined at:
 19370 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 19371 ;; Parameters:    Size  Location     Type
 19372 ;;		None
 19373 ;; Auto vars:     Size  Location     Type
 19374 ;;		None
 19375 ;; Return value:  Size  Location     Type
 19376 ;;                  1    wreg      enum E15307
 19377 ;; Registers used:
 19378 ;;		wreg, status,2, status,0, pclath, cstack
 19379 ;; Tracked objects:
 19380 ;;		On entry : 0/0
 19381 ;;		On exit  : 0/0
 19382 ;;		Unchanged: 0/0
 19383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19388 ;;Total ram usage:        0 bytes
 19389 ;; Hardware stack levels used:    1
 19390 ;; Hardware stack levels required when called:    1
 19391 ;; This function calls:
 19392 ;;		i1_i2c1_driver_restart
 19393 ;; This function is called by:
 19394 ;;		i1_do_I2C_TX
 19395 ;; This function uses a non-reentrant model
 19396 ;;
 19397                           
 19398                           
 19399                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 19400  1EA3                     i1_do_I2C_SEND_RESTART_READ:	
 19401  1EA3                     i1l4173:	
 19402                           ;incstack = 0
 19403 ;; hardware stack exceeded
 19404                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 19405                           
 19406                           
 19407                           ;i2c_master.c: 256: i2c1_driver_restart();
 19408  1EA3  319E  2671         	fcall	i1_i2c1_driver_restart
 19409                           
 19410                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 19411  1EA5  3001               	movlw	1
 19412  1EA6  0008               	return
 19413  1EA7                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 19414                           
 19415                           	psect	text115
 19416  1ED0                     __ptext115:	
 19417 ;; *************** function i1_do_I2C_IDLE *****************
 19418 ;; Defined at:
 19419 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 19420 ;; Parameters:    Size  Location     Type
 19421 ;;		None
 19422 ;; Auto vars:     Size  Location     Type
 19423 ;;		None
 19424 ;; Return value:  Size  Location     Type
 19425 ;;                  1    wreg      enum E15307
 19426 ;; Registers used:
 19427 ;;		wreg, status,2
 19428 ;; Tracked objects:
 19429 ;;		On entry : 0/0
 19430 ;;		On exit  : 0/0
 19431 ;;		Unchanged: 0/0
 19432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19437 ;;Total ram usage:        0 bytes
 19438 ;; Hardware stack levels used:    1
 19439 ;; This function calls:
 19440 ;;		Nothing
 19441 ;; This function is called by:
 19442 ;; This function uses a non-reentrant model
 19443 ;;
 19444                           
 19445                           
 19446                           ;psect for function i1_do_I2C_IDLE
 19447  1ED0                     i1_do_I2C_IDLE:	
 19448  1ED0                     i1l4597:	
 19449                           ;incstack = 0
 19450                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 19451                           
 19452                           
 19453                           ;i2c_master.c: 249: i2c_status.busy = 0;
 19454  1ED0  0021               	movlb	1	; select bank1
 19455  1ED1  1047               	bcf	_i2c_status^(0+128),0
 19456                           
 19457                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 19458  1ED2  01D1               	clrf	(_i2c_status^(0+128)+10)
 19459                           
 19460                           ;i2c_master.c: 251: return I2C_RESET;
 19461  1ED3  300E               	movlw	14
 19462  1ED4  0008               	return
 19463  1ED5                     __end_ofi1_do_I2C_IDLE:	
 19464                           
 19465                           	psect	text116
 19466  1EFF                     __ptext116:	
 19467 ;; *************** function i1_do_I2C_RESET *****************
 19468 ;; Defined at:
 19469 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 19470 ;; Parameters:    Size  Location     Type
 19471 ;;		None
 19472 ;; Auto vars:     Size  Location     Type
 19473 ;;		None
 19474 ;; Return value:  Size  Location     Type
 19475 ;;                  1    wreg      enum E15307
 19476 ;; Registers used:
 19477 ;;		wreg, status,2, status,0, pclath, cstack
 19478 ;; Tracked objects:
 19479 ;;		On entry : 0/0
 19480 ;;		On exit  : 0/0
 19481 ;;		Unchanged: 0/0
 19482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19487 ;;Total ram usage:        0 bytes
 19488 ;; Hardware stack levels used:    1
 19489 ;; Hardware stack levels required when called:    1
 19490 ;; This function calls:
 19491 ;;		i1_i2c1_driver_resetBus
 19492 ;; This function is called by:
 19493 ;; This function uses a non-reentrant model
 19494 ;;
 19495                           
 19496                           
 19497                           ;psect for function i1_do_I2C_RESET
 19498  1EFF                     i1_do_I2C_RESET:	
 19499  1EFF                     i1l4587:	
 19500                           ;incstack = 0
 19501                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 19502                           
 19503                           
 19504                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 19505  1EFF  319E  2666         	fcall	i1_i2c1_driver_resetBus
 19506                           
 19507                           ;i2c_master.c: 242: i2c_status.busy = 0;
 19508  1F01  0021               	movlb	1	; select bank1
 19509  1F02  1047               	bcf	_i2c_status^(0+128),0
 19510                           
 19511                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 19512  1F03  01D1               	clrf	(_i2c_status^(0+128)+10)
 19513                           
 19514                           ;i2c_master.c: 244: return I2C_RESET;
 19515  1F04  300E               	movlw	14
 19516  1F05  0008               	return
 19517  1F06                     __end_ofi1_do_I2C_RESET:	
 19518                           
 19519                           	psect	text117
 19520  12EB                     __ptext117:	
 19521 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 19522 ;; Defined at:
 19523 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 19524 ;; Parameters:    Size  Location     Type
 19525 ;;		None
 19526 ;; Auto vars:     Size  Location     Type
 19527 ;;		None
 19528 ;; Return value:  Size  Location     Type
 19529 ;;                  1    wreg      enum E15307
 19530 ;; Registers used:
 19531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19532 ;; Tracked objects:
 19533 ;;		On entry : 0/0
 19534 ;;		On exit  : 0/0
 19535 ;;		Unchanged: 0/0
 19536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19541 ;;Total ram usage:        1 bytes
 19542 ;; Hardware stack levels used:    1
 19543 ;; Hardware stack levels required when called:    3
 19544 ;; This function calls:
 19545 ;;		Absolute function
 19546 ;;		i1_do_I2C_SEND_RESTART
 19547 ;;		i1_do_I2C_SEND_STOP
 19548 ;;		i1_i2c_restartWrite
 19549 ;;		i1_mssp1_setIRQ
 19550 ;;		i1_rd1RegCompleteHandler
 19551 ;;		i1_rd2RegCompleteHandler
 19552 ;;		i1_rdBlkRegCompleteHandler
 19553 ;;		i1_returnReset
 19554 ;;		i1_returnStop
 19555 ;;		i1_wr1RegCompleteHandler
 19556 ;;		i1_wr2RegCompleteHandler
 19557 ;; This function is called by:
 19558 ;; This function uses a non-reentrant model
 19559 ;;
 19560                           
 19561                           
 19562                           ;psect for function i1_do_I2C_TX_EMPTY
 19563  12EB                     i1_do_I2C_TX_EMPTY:	
 19564  12EB                     i1l7037:	
 19565                           ;incstack = 0
 19566 ;; hardware stack exceeded
 19567                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19568                           
 19569                           
 19570                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 19571  12EB  0021               	movlb	1	; select bank1
 19572  12EC  1547               	bsf	_i2c_status^(0+128),2
 19573                           
 19574                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 19575  12ED  2AF8               	goto	i1l7055
 19576  12EE                     i1l7039:	
 19577                           ;i2c_master.c: 386: {
 19578                           ;i2c_master.c: 387: case i2c_restart_read:
 19579                           
 19580                           
 19581                           ;i2c_master.c: 388: case i2c_restart_write:
 19582                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 19583  12EE  319E  26AB         	fcall	i1_do_I2C_SEND_RESTART
 19584  12F0  0008               	return
 19585  12F1                     i1l7043:	
 19586                           ;i2c_master.c: 390: case i2c_continue:
 19587                           
 19588                           
 19589                           ;i2c_master.c: 391: mssp1_setIRQ();
 19590  12F1  319E  267D         	fcall	i1_mssp1_setIRQ
 19591                           
 19592                           ;i2c_master.c: 392: return I2C_TX;
 19593  12F3  3003               	movlw	3
 19594  12F4  0008               	return
 19595  12F5                     i1l7049:	
 19596                           ;i2c_master.c: 394: case i2c_stop:
 19597                           
 19598                           ;i2c_master.c: 393: default:
 19599                           
 19600                           
 19601                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 19602  12F5  319E  26AF         	fcall	i1_do_I2C_SEND_STOP
 19603                           
 19604                           ;i2c_master.c: 396: }
 19605  12F7  0008               	return
 19606  12F8                     i1l7055:	
 19607  12F8  0021               	movlb	1	; select bank1
 19608  12F9  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 19609  12FA  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 19610  12FB  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 19611  12FC  00F9               	movwf	i1returnStop@p
 19612  12FD  300B               	movlw	11
 19613  12FE  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 19614  12FF  0086               	movwf	6
 19615  1300  0187               	clrf	7
 19616  1301  3F41               	moviw [1]fsr1
 19617  1302  008A               	movwf	10
 19618  1303  3F40               	moviw [0]fsr1
 19619  1304  000A               	callw
 19620  1305  3192               	pagesel	$
 19621                           
 19622                           ; Switch size 1, requested type "space"
 19623                           ; Number of cases is 4, Range of values is 1 to 4
 19624                           ; switch strategies available:
 19625                           ; Name         Instructions Cycles
 19626                           ; simple_byte           13     7 (average)
 19627                           ; direct_byte           17     9 (fixed)
 19628                           ; jumptable            263     9 (fixed)
 19629                           ;	Chosen strategy is simple_byte
 19630  1306  3A01               	xorlw	1	; case 1
 19631  1307  1903               	skipnz
 19632  1308  2AF5               	goto	i1l7049
 19633  1309  3A03               	xorlw	3	; case 2
 19634  130A  1903               	skipnz
 19635  130B  2AEE               	goto	i1l7039
 19636  130C  3A01               	xorlw	1	; case 3
 19637  130D  1903               	skipnz
 19638  130E  2AEE               	goto	i1l7039
 19639  130F  3A07               	xorlw	7	; case 4
 19640  1310  1903               	skipnz
 19641  1311  2AF1               	goto	i1l7043
 19642  1312  2AF5               	goto	i1l7049
 19643  1313  0008               	return
 19644  1314                     __end_ofi1_do_I2C_TX_EMPTY:	
 19645                           
 19646                           	psect	text118
 19647  1E7D                     __ptext118:	
 19648 ;; *************** function i1_mssp1_setIRQ *****************
 19649 ;; Defined at:
 19650 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 19651 ;; Parameters:    Size  Location     Type
 19652 ;;		None
 19653 ;; Auto vars:     Size  Location     Type
 19654 ;;		None
 19655 ;; Return value:  Size  Location     Type
 19656 ;;                  1    wreg      void 
 19657 ;; Registers used:
 19658 ;;		None
 19659 ;; Tracked objects:
 19660 ;;		On entry : 0/0
 19661 ;;		On exit  : 0/0
 19662 ;;		Unchanged: 0/0
 19663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19668 ;;Total ram usage:        0 bytes
 19669 ;; Hardware stack levels used:    1
 19670 ;; This function calls:
 19671 ;;		Nothing
 19672 ;; This function is called by:
 19673 ;;		i1_do_I2C_TX_EMPTY
 19674 ;; This function uses a non-reentrant model
 19675 ;;
 19676                           
 19677                           
 19678                           ;psect for function i1_mssp1_setIRQ
 19679  1E7D                     i1_mssp1_setIRQ:	
 19680                           
 19681                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 19682                           
 19683                           ;incstack = 0
 19684                           ; Regs used in i1_mssp1_setIRQ: []
 19685  1E7D  002E               	movlb	14	; select bank14
 19686  1E7E  140F               	bsf	15,0	;volatile
 19687  1E7F  0008               	return
 19688  1E80                     __end_ofi1_mssp1_setIRQ:	
 19689                           
 19690                           	psect	text119
 19691  1F14                     __ptext119:	
 19692 ;; *************** function i1_i2c1_driver_isNACK *****************
 19693 ;; Defined at:
 19694 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 19695 ;; Parameters:    Size  Location     Type
 19696 ;;		None
 19697 ;; Auto vars:     Size  Location     Type
 19698 ;;		None
 19699 ;; Return value:  Size  Location     Type
 19700 ;;		None               void
 19701 ;; Registers used:
 19702 ;;		wreg, status,2, status,0
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19712 ;;Total ram usage:        1 bytes
 19713 ;; Hardware stack levels used:    1
 19714 ;; This function calls:
 19715 ;;		Nothing
 19716 ;; This function is called by:
 19717 ;;		i1_do_I2C_TX
 19718 ;;		i1_i2c_ISR
 19719 ;; This function uses a non-reentrant model
 19720 ;;
 19721                           
 19722                           
 19723                           ;psect for function i1_i2c1_driver_isNACK
 19724  1F14                     i1_i2c1_driver_isNACK:	
 19725                           
 19726                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT;
 19727                           
 19728                           ;incstack = 0
 19729                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 19730  1F14  0023               	movlb	3	; select bank3
 19731  1F15  0E11               	swapf	17,w	;volatile
 19732  1F16  0C89               	rrf	9,f
 19733  1F17  0C89               	rrf	9,f
 19734  1F18  3901               	andlw	1
 19735  1F19  00F0               	movwf	??i1_i2c1_driver_isNACK
 19736  1F1A  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 19737  1F1B  0008               	return
 19738  1F1C                     __end_ofi1_i2c1_driver_isNACK:	
 19739                           
 19740                           	psect	text120
 19741  1ECB                     __ptext120:	
 19742 ;; *************** function i1_i2c1_driver_TXData *****************
 19743 ;; Defined at:
 19744 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 19745 ;; Parameters:    Size  Location     Type
 19746 ;;  d               1    wreg     unsigned char 
 19747 ;; Auto vars:     Size  Location     Type
 19748 ;;  d               1    0[COMMON] unsigned char 
 19749 ;; Return value:  Size  Location     Type
 19750 ;;                  1    wreg      void 
 19751 ;; Registers used:
 19752 ;;		wreg
 19753 ;; Tracked objects:
 19754 ;;		On entry : 0/0
 19755 ;;		On exit  : 0/0
 19756 ;;		Unchanged: 0/0
 19757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19762 ;;Total ram usage:        1 bytes
 19763 ;; Hardware stack levels used:    1
 19764 ;; This function calls:
 19765 ;;		Nothing
 19766 ;; This function is called by:
 19767 ;;		i1_do_I2C_SEND_ADR_READ
 19768 ;;		i1_do_I2C_SEND_ADR_WRITE
 19769 ;;		i1_do_I2C_TX
 19770 ;; This function uses a non-reentrant model
 19771 ;;
 19772                           
 19773                           
 19774                           ;psect for function i1_i2c1_driver_TXData
 19775  1ECB                     i1_i2c1_driver_TXData:	
 19776                           
 19777                           ;incstack = 0
 19778                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 19779                           ;i1i2c1_driver_TXData@d stored from wreg
 19780  1ECB  00F0               	movwf	i1i2c1_driver_TXData@d
 19781                           
 19782                           ;i2c1_driver.c: 188: SSP1BUF = d;
 19783  1ECC  0870               	movf	i1i2c1_driver_TXData@d,w
 19784  1ECD  0023               	movlb	3	; select bank3
 19785  1ECE  008C               	movwf	12	;volatile
 19786  1ECF  0008               	return
 19787  1ED0                     __end_ofi1_i2c1_driver_TXData:	
 19788                           
 19789                           	psect	text121
 19790  1E7A                     __ptext121:	
 19791 ;; *************** function i1_i2c1_driver_getRXData *****************
 19792 ;; Defined at:
 19793 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 19794 ;; Parameters:    Size  Location     Type
 19795 ;;		None
 19796 ;; Auto vars:     Size  Location     Type
 19797 ;;		None
 19798 ;; Return value:  Size  Location     Type
 19799 ;;                  1    wreg      unsigned char 
 19800 ;; Registers used:
 19801 ;;		wreg
 19802 ;; Tracked objects:
 19803 ;;		On entry : 0/0
 19804 ;;		On exit  : 0/0
 19805 ;;		Unchanged: 0/0
 19806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19811 ;;Total ram usage:        0 bytes
 19812 ;; Hardware stack levels used:    1
 19813 ;; This function calls:
 19814 ;;		Nothing
 19815 ;; This function is called by:
 19816 ;;		i1_do_I2C_RX
 19817 ;; This function uses a non-reentrant model
 19818 ;;
 19819                           
 19820                           
 19821                           ;psect for function i1_i2c1_driver_getRXData
 19822  1E7A                     i1_i2c1_driver_getRXData:	
 19823                           
 19824                           ;i2c1_driver.c: 173: return SSP1BUF;
 19825                           
 19826                           ;incstack = 0
 19827                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 19828  1E7A  0023               	movlb	3	; select bank3
 19829  1E7B  080C               	movf	12,w	;volatile
 19830  1E7C  0008               	return
 19831  1E7D                     __end_ofi1_i2c1_driver_getRXData:	
 19832                           
 19833                           	psect	text122
 19834  1E9F                     __ptext122:	
 19835 ;; *************** function i1_i2c1_driver_sendNACK *****************
 19836 ;; Defined at:
 19837 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 19838 ;; Parameters:    Size  Location     Type
 19839 ;;		None
 19840 ;; Auto vars:     Size  Location     Type
 19841 ;;		None
 19842 ;; Return value:  Size  Location     Type
 19843 ;;                  1    wreg      void 
 19844 ;; Registers used:
 19845 ;;		None
 19846 ;; Tracked objects:
 19847 ;;		On entry : 0/0
 19848 ;;		On exit  : 0/0
 19849 ;;		Unchanged: 0/0
 19850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19855 ;;Total ram usage:        0 bytes
 19856 ;; Hardware stack levels used:    1
 19857 ;; This function calls:
 19858 ;;		Nothing
 19859 ;; This function is called by:
 19860 ;;		i1_do_I2C_DO_NACK_STOP
 19861 ;;		i1_do_I2C_DO_NACK_RESTART
 19862 ;; This function uses a non-reentrant model
 19863 ;;
 19864                           
 19865                           
 19866                           ;psect for function i1_i2c1_driver_sendNACK
 19867  1E9F                     i1_i2c1_driver_sendNACK:	
 19868                           
 19869                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 19870                           
 19871                           ;incstack = 0
 19872 ;; hardware stack exceeded
 19873                           ; Regs used in i1_i2c1_driver_sendNACK: []
 19874  1E9F  0023               	movlb	3	; select bank3
 19875  1EA0  1691               	bsf	17,5	;volatile
 19876                           
 19877                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 19878  1EA1  1611               	bsf	17,4	;volatile
 19879  1EA2  0008               	return
 19880  1EA3                     __end_ofi1_i2c1_driver_sendNACK:	
 19881                           
 19882                           	psect	text123
 19883  1E66                     __ptext123:	
 19884 ;; *************** function i1_i2c1_driver_resetBus *****************
 19885 ;; Defined at:
 19886 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 19887 ;; Parameters:    Size  Location     Type
 19888 ;;		None
 19889 ;; Auto vars:     Size  Location     Type
 19890 ;;		None
 19891 ;; Return value:  Size  Location     Type
 19892 ;;                  1    wreg      void 
 19893 ;; Registers used:
 19894 ;;		None
 19895 ;; Tracked objects:
 19896 ;;		On entry : 0/0
 19897 ;;		On exit  : 0/0
 19898 ;;		Unchanged: 0/0
 19899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19904 ;;Total ram usage:        0 bytes
 19905 ;; Hardware stack levels used:    1
 19906 ;; This function calls:
 19907 ;;		Nothing
 19908 ;; This function is called by:
 19909 ;;		i1_do_I2C_RESET
 19910 ;; This function uses a non-reentrant model
 19911 ;;
 19912                           
 19913                           
 19914                           ;psect for function i1_i2c1_driver_resetBus
 19915  1E66                     i1_i2c1_driver_resetBus:	
 19916                           
 19917                           ;incstack = 0
 19918                           ; Regs used in i1_i2c1_driver_resetBus: []
 19919  1E66  0008               	return
 19920  1E67                     __end_ofi1_i2c1_driver_resetBus:	
 19921                           
 19922                           	psect	text124
 19923  1E77                     __ptext124:	
 19924 ;; *************** function i1_i2c1_driver_startRX *****************
 19925 ;; Defined at:
 19926 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 19927 ;; Parameters:    Size  Location     Type
 19928 ;;		None
 19929 ;; Auto vars:     Size  Location     Type
 19930 ;;		None
 19931 ;; Return value:  Size  Location     Type
 19932 ;;                  1    wreg      void 
 19933 ;; Registers used:
 19934 ;;		None
 19935 ;; Tracked objects:
 19936 ;;		On entry : 0/0
 19937 ;;		On exit  : 0/0
 19938 ;;		Unchanged: 0/0
 19939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19944 ;;Total ram usage:        0 bytes
 19945 ;; Hardware stack levels used:    1
 19946 ;; This function calls:
 19947 ;;		Nothing
 19948 ;; This function is called by:
 19949 ;;		i1_do_I2C_RCEN
 19950 ;; This function uses a non-reentrant model
 19951 ;;
 19952                           
 19953                           
 19954                           ;psect for function i1_i2c1_driver_startRX
 19955  1E77                     i1_i2c1_driver_startRX:	
 19956                           
 19957                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 19958                           
 19959                           ;incstack = 0
 19960                           ; Regs used in i1_i2c1_driver_startRX: []
 19961  1E77  0023               	movlb	3	; select bank3
 19962  1E78  1591               	bsf	17,3	;volatile
 19963  1E79  0008               	return
 19964  1E7A                     __end_ofi1_i2c1_driver_startRX:	
 19965                           
 19966                           	psect	text125
 19967  113C                     __ptext125:	
 19968 ;; *************** function i1_rdBlkRegCompleteHandler *****************
 19969 ;; Defined at:
 19970 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19971 ;; Parameters:    Size  Location     Type
 19972 ;;  p               1    9[COMMON] PTR void 
 19973 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19974 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19975 ;; Auto vars:     Size  Location     Type
 19976 ;;		None
 19977 ;; Return value:  Size  Location     Type
 19978 ;;                  1    wreg      enum E97
 19979 ;; Registers used:
 19980 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19981 ;; Tracked objects:
 19982 ;;		On entry : 0/0
 19983 ;;		On exit  : 0/0
 19984 ;;		Unchanged: 0/0
 19985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19986 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19989 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19990 ;;Total ram usage:        1 bytes
 19991 ;; Hardware stack levels used:    1
 19992 ;; Hardware stack levels required when called:    2
 19993 ;; This function calls:
 19994 ;;		i1_i2c_setBuffer
 19995 ;;		i1_i2c_setDataCompleteCallback
 19996 ;; This function is called by:
 19997 ;; This function uses a non-reentrant model
 19998 ;;
 19999                           
 20000                           
 20001                           ;psect for function i1_rdBlkRegCompleteHandler
 20002  113C                     i1_rdBlkRegCompleteHandler:	
 20003  113C                     i1l4253:	
 20004                           ;incstack = 0
 20005 ;; hardware stack exceeded
 20006                           ; Regs used in i1_rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 20007                           
 20008                           
 20009                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 20010  113C  0879               	movf	i1rdBlkRegCompleteHandler@p,w
 20011  113D  0086               	movwf	6
 20012  113E  0187               	clrf	7
 20013  113F  3F40               	moviw [0]fsr1
 20014  1140  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20015  1141  3F41               	moviw [1]fsr1
 20016  1142  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 20017  1143  0879               	movf	i1rdBlkRegCompleteHandler@p,w
 20018  1144  3E02               	addlw	2
 20019  1145  0086               	movwf	6
 20020  1146  0187               	clrf	7
 20021  1147  0801               	movf	1,w
 20022  1148  3190  2050  3191   	fcall	i1_i2c_setBuffer
 20023                           
 20024                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 20025  114B  3000               	movlw	0
 20026  114C  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 20027  114D  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 20028  114E  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 20029  114F  319F  27E8         	fcall	i1_i2c_setDataCompleteCallback
 20030                           
 20031                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 20032  1151  3002               	movlw	2
 20033  1152  0008               	return
 20034  1153                     __end_ofi1_rdBlkRegCompleteHandler:	
 20035                           
 20036                           	psect	text126
 20037  10AC                     __ptext126:	
 20038 ;; *************** function i1_rd2RegCompleteHandler *****************
 20039 ;; Defined at:
 20040 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20041 ;; Parameters:    Size  Location     Type
 20042 ;;  p               1    9[COMMON] PTR void 
 20043 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20044 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20045 ;; Auto vars:     Size  Location     Type
 20046 ;;		None
 20047 ;; Return value:  Size  Location     Type
 20048 ;;                  1    wreg      enum E97
 20049 ;; Registers used:
 20050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20051 ;; Tracked objects:
 20052 ;;		On entry : 0/0
 20053 ;;		On exit  : 0/0
 20054 ;;		Unchanged: 0/0
 20055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20056 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20060 ;;Total ram usage:        1 bytes
 20061 ;; Hardware stack levels used:    1
 20062 ;; Hardware stack levels required when called:    2
 20063 ;; This function calls:
 20064 ;;		i1_i2c_setBuffer
 20065 ;;		i1_i2c_setDataCompleteCallback
 20066 ;; This function is called by:
 20067 ;; This function uses a non-reentrant model
 20068 ;;
 20069                           
 20070                           
 20071                           ;psect for function i1_rd2RegCompleteHandler
 20072  10AC                     i1_rd2RegCompleteHandler:	
 20073  10AC                     i1l4237:	
 20074                           ;incstack = 0
 20075 ;; hardware stack exceeded
 20076                           ; Regs used in i1_rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20077                           
 20078                           
 20079                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 20080  10AC  3002               	movlw	2
 20081  10AD  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20082  10AE  3000               	movlw	0
 20083  10AF  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 20084  10B0  0879               	movf	i1rd2RegCompleteHandler@p,w
 20085  10B1  3190  2050  3190   	fcall	i1_i2c_setBuffer
 20086                           
 20087                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 20088  10B4  3000               	movlw	0
 20089  10B5  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 20090  10B6  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 20091  10B7  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 20092  10B8  319F  27E8         	fcall	i1_i2c_setDataCompleteCallback
 20093                           
 20094                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 20095  10BA  3002               	movlw	2
 20096  10BB  0008               	return
 20097  10BC                     __end_ofi1_rd2RegCompleteHandler:	
 20098                           
 20099                           	psect	text127
 20100  109C                     __ptext127:	
 20101 ;; *************** function i1_rd1RegCompleteHandler *****************
 20102 ;; Defined at:
 20103 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20104 ;; Parameters:    Size  Location     Type
 20105 ;;  p               1    9[COMMON] PTR void 
 20106 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20107 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20108 ;; Auto vars:     Size  Location     Type
 20109 ;;		None
 20110 ;; Return value:  Size  Location     Type
 20111 ;;                  1    wreg      enum E97
 20112 ;; Registers used:
 20113 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20114 ;; Tracked objects:
 20115 ;;		On entry : 0/0
 20116 ;;		On exit  : 0/0
 20117 ;;		Unchanged: 0/0
 20118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20119 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20122 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20123 ;;Total ram usage:        1 bytes
 20124 ;; Hardware stack levels used:    1
 20125 ;; Hardware stack levels required when called:    2
 20126 ;; This function calls:
 20127 ;;		i1_i2c_setBuffer
 20128 ;;		i1_i2c_setDataCompleteCallback
 20129 ;; This function is called by:
 20130 ;; This function uses a non-reentrant model
 20131 ;;
 20132                           
 20133                           
 20134                           ;psect for function i1_rd1RegCompleteHandler
 20135  109C                     i1_rd1RegCompleteHandler:	
 20136  109C                     i1l4229:	
 20137                           ;incstack = 0
 20138 ;; hardware stack exceeded
 20139                           ; Regs used in i1_rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20140                           
 20141                           
 20142                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 20143  109C  3001               	movlw	1
 20144  109D  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20145  109E  3000               	movlw	0
 20146  109F  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 20147  10A0  0879               	movf	i1rd1RegCompleteHandler@p,w
 20148  10A1  3190  2050  3190   	fcall	i1_i2c_setBuffer
 20149                           
 20150                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 20151  10A4  3000               	movlw	0
 20152  10A5  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 20153  10A6  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 20154  10A7  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 20155  10A8  319F  27E8         	fcall	i1_i2c_setDataCompleteCallback
 20156                           
 20157                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 20158  10AA  3002               	movlw	2
 20159  10AB  0008               	return
 20160  10AC                     __end_ofi1_rd1RegCompleteHandler:	
 20161                           
 20162                           	psect	text128
 20163  108C                     __ptext128:	
 20164 ;; *************** function i1_wr1RegCompleteHandler *****************
 20165 ;; Defined at:
 20166 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20167 ;; Parameters:    Size  Location     Type
 20168 ;;  p               1    9[COMMON] PTR void 
 20169 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20170 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20171 ;; Auto vars:     Size  Location     Type
 20172 ;;		None
 20173 ;; Return value:  Size  Location     Type
 20174 ;;                  1    wreg      enum E97
 20175 ;; Registers used:
 20176 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20177 ;; Tracked objects:
 20178 ;;		On entry : 0/0
 20179 ;;		On exit  : 0/0
 20180 ;;		Unchanged: 0/0
 20181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20182 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20186 ;;Total ram usage:        1 bytes
 20187 ;; Hardware stack levels used:    1
 20188 ;; Hardware stack levels required when called:    2
 20189 ;; This function calls:
 20190 ;;		i1_i2c_setBuffer
 20191 ;;		i1_i2c_setDataCompleteCallback
 20192 ;; This function is called by:
 20193 ;; This function uses a non-reentrant model
 20194 ;;
 20195                           
 20196                           
 20197                           ;psect for function i1_wr1RegCompleteHandler
 20198  108C                     i1_wr1RegCompleteHandler:	
 20199  108C                     i1l4221:	
 20200                           ;incstack = 0
 20201 ;; hardware stack exceeded
 20202                           ; Regs used in i1_wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20203                           
 20204                           
 20205                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 20206  108C  3001               	movlw	1
 20207  108D  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20208  108E  3000               	movlw	0
 20209  108F  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 20210  1090  0879               	movf	i1wr1RegCompleteHandler@p,w
 20211  1091  3190  2050  3190   	fcall	i1_i2c_setBuffer
 20212                           
 20213                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 20214  1094  3000               	movlw	0
 20215  1095  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 20216  1096  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 20217  1097  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 20218  1098  319F  27E8         	fcall	i1_i2c_setDataCompleteCallback
 20219                           
 20220                           ;i2c_simple_master.c: 35: return i2c_continue;
 20221  109A  3004               	movlw	4
 20222  109B  0008               	return
 20223  109C                     __end_ofi1_wr1RegCompleteHandler:	
 20224                           
 20225                           	psect	text129
 20226  0002                     __ptext129:	
 20227 ;; *************** function i1_i2c_restartWrite *****************
 20228 ;; Defined at:
 20229 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 20230 ;; Parameters:    Size  Location     Type
 20231 ;;  p               1    9[COMMON] PTR void 
 20232 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20233 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20234 ;; Auto vars:     Size  Location     Type
 20235 ;;		None
 20236 ;; Return value:  Size  Location     Type
 20237 ;;                  1    wreg      enum E96
 20238 ;; Registers used:
 20239 ;;		wreg
 20240 ;; Tracked objects:
 20241 ;;		On entry : 0/0
 20242 ;;		On exit  : 0/0
 20243 ;;		Unchanged: 0/0
 20244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20245 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20248 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20249 ;;Total ram usage:        1 bytes
 20250 ;; Hardware stack levels used:    1
 20251 ;; This function calls:
 20252 ;;		Nothing
 20253 ;; This function is called by:
 20254 ;; This function uses a non-reentrant model
 20255 ;;
 20256                           
 20257                           
 20258                           ;psect for function i1_i2c_restartWrite
 20259  0002                     i1_i2c_restartWrite:	
 20260  0002                     i1l4217:	
 20261                           ;incstack = 0
 20262                           ; Regs used in i1_i2c_restartWrite: [wreg]
 20263                           
 20264                           
 20265                           ;i2c_types.c: 37: return i2c_restart_write;
 20266  0002  3003               	movlw	3
 20267  0003  0008               	return
 20268  0004                     __end_ofi1_i2c_restartWrite:	
 20269                           
 20270                           	psect	text130
 20271  0800                     __ptext130:	
 20272 ;; *************** function i1_returnReset *****************
 20273 ;; Defined at:
 20274 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 20275 ;; Parameters:    Size  Location     Type
 20276 ;;  p               1    9[COMMON] PTR void 
 20277 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20278 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20279 ;; Auto vars:     Size  Location     Type
 20280 ;;		None
 20281 ;; Return value:  Size  Location     Type
 20282 ;;                  1    wreg      enum E15143
 20283 ;; Registers used:
 20284 ;;		wreg
 20285 ;; Tracked objects:
 20286 ;;		On entry : 0/0
 20287 ;;		On exit  : 0/0
 20288 ;;		Unchanged: 0/0
 20289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20290 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20294 ;;Total ram usage:        1 bytes
 20295 ;; Hardware stack levels used:    1
 20296 ;; This function calls:
 20297 ;;		Nothing
 20298 ;; This function is called by:
 20299 ;; This function uses a non-reentrant model
 20300 ;;
 20301                           
 20302                           
 20303                           ;psect for function i1_returnReset
 20304  0800                     i1_returnReset:	
 20305  0800                     i1l4213:	
 20306                           ;incstack = 0
 20307                           ; Regs used in i1_returnReset: [wreg]
 20308                           
 20309                           
 20310                           ;i2c_master.c: 450: return i2c_reset_link;
 20311  0800  3005               	movlw	5
 20312  0801  0008               	return
 20313  0802                     __end_ofi1_returnReset:	
 20314                           
 20315                           	psect	text131
 20316  1E69                     __ptext131:	
 20317 ;; *************** function i1_returnStop *****************
 20318 ;; Defined at:
 20319 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 20320 ;; Parameters:    Size  Location     Type
 20321 ;;  p               1    9[COMMON] PTR void 
 20322 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20323 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20324 ;; Auto vars:     Size  Location     Type
 20325 ;;		None
 20326 ;; Return value:  Size  Location     Type
 20327 ;;                  1    wreg      enum E15143
 20328 ;; Registers used:
 20329 ;;		wreg
 20330 ;; Tracked objects:
 20331 ;;		On entry : 0/0
 20332 ;;		On exit  : 0/0
 20333 ;;		Unchanged: 0/0
 20334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20335 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20338 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20339 ;;Total ram usage:        1 bytes
 20340 ;; Hardware stack levels used:    1
 20341 ;; This function calls:
 20342 ;;		Nothing
 20343 ;; This function is called by:
 20344 ;;		i1_setCallBack
 20345 ;;		_do_I2C_DO_ADDRESS_NACK
 20346 ;;		_do_I2C_TX
 20347 ;;		_do_I2C_RX
 20348 ;;		_do_I2C_TX_EMPTY
 20349 ;;		i1_do_I2C_DO_ADDRESS_NACK
 20350 ;;		i1_do_I2C_TX
 20351 ;;		i1_do_I2C_RX
 20352 ;;		i1_do_I2C_TX_EMPTY
 20353 ;; This function uses a non-reentrant model
 20354 ;;
 20355                           
 20356                           
 20357                           ;psect for function i1_returnStop
 20358  1E69                     i1_returnStop:	
 20359  1E69                     i1l4209:	
 20360                           ;incstack = 0
 20361                           ; Regs used in i1_returnStop: [wreg]
 20362                           
 20363                           
 20364                           ;i2c_master.c: 445: return i2c_stop;
 20365  1E69  3001               	movlw	1
 20366  1E6A  0008               	return
 20367  1E6B                     __end_ofi1_returnStop:	
 20368                           
 20369                           	psect	text132
 20370  107C                     __ptext132:	
 20371 ;; *************** function i1_wr2RegCompleteHandler *****************
 20372 ;; Defined at:
 20373 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20374 ;; Parameters:    Size  Location     Type
 20375 ;;  p               1    9[COMMON] PTR void 
 20376 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20377 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20378 ;; Auto vars:     Size  Location     Type
 20379 ;;		None
 20380 ;; Return value:  Size  Location     Type
 20381 ;;                  1    wreg      enum E97
 20382 ;; Registers used:
 20383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20384 ;; Tracked objects:
 20385 ;;		On entry : 0/0
 20386 ;;		On exit  : 0/0
 20387 ;;		Unchanged: 0/0
 20388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20389 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20393 ;;Total ram usage:        1 bytes
 20394 ;; Hardware stack levels used:    1
 20395 ;; Hardware stack levels required when called:    2
 20396 ;; This function calls:
 20397 ;;		i1_i2c_setBuffer
 20398 ;;		i1_i2c_setDataCompleteCallback
 20399 ;; This function is called by:
 20400 ;; This function uses a non-reentrant model
 20401 ;;
 20402                           
 20403                           
 20404                           ;psect for function i1_wr2RegCompleteHandler
 20405  107C                     i1_wr2RegCompleteHandler:	
 20406  107C                     i1l4245:	
 20407                           ;incstack = 0
 20408 ;; hardware stack exceeded
 20409                           ; Regs used in i1_wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20410                           
 20411                           
 20412                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 20413  107C  3002               	movlw	2
 20414  107D  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20415  107E  3000               	movlw	0
 20416  107F  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 20417  1080  0879               	movf	i1wr2RegCompleteHandler@p,w
 20418  1081  3190  2050  3190   	fcall	i1_i2c_setBuffer
 20419                           
 20420                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 20421  1084  3000               	movlw	0
 20422  1085  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 20423  1086  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 20424  1087  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 20425  1088  319F  27E8         	fcall	i1_i2c_setDataCompleteCallback
 20426                           
 20427                           ;i2c_simple_master.c: 114: return i2c_continue;
 20428  108A  3004               	movlw	4
 20429  108B  0008               	return
 20430  108C                     __end_ofi1_wr2RegCompleteHandler:	
 20431                           
 20432                           	psect	text133
 20433  1FE8                     __ptext133:	
 20434 ;; *************** function i1_i2c_setDataCompleteCallback *****************
 20435 ;; Defined at:
 20436 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 20437 ;; Parameters:    Size  Location     Type
 20438 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 20439 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 20440 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 20441 ;;  p               1    7[COMMON] PTR void 
 20442 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20443 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20444 ;; Auto vars:     Size  Location     Type
 20445 ;;		None
 20446 ;; Return value:  Size  Location     Type
 20447 ;;                  1    wreg      void 
 20448 ;; Registers used:
 20449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20450 ;; Tracked objects:
 20451 ;;		On entry : 0/0
 20452 ;;		On exit  : 0/0
 20453 ;;		Unchanged: 0/0
 20454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20455 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20458 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20459 ;;Total ram usage:        4 bytes
 20460 ;; Hardware stack levels used:    1
 20461 ;; Hardware stack levels required when called:    1
 20462 ;; This function calls:
 20463 ;;		i1_setCallBack
 20464 ;; This function is called by:
 20465 ;;		i1_wr1RegCompleteHandler
 20466 ;;		i1_rd1RegCompleteHandler
 20467 ;;		i1_rd2RegCompleteHandler
 20468 ;;		i1_wr2RegCompleteHandler
 20469 ;;		i1_rdBlkRegCompleteHandler
 20470 ;; This function uses a non-reentrant model
 20471 ;;
 20472                           
 20473                           
 20474                           ;psect for function i1_i2c_setDataCompleteCallback
 20475  1FE8                     i1_i2c_setDataCompleteCallback:	
 20476                           
 20477                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 20478                           
 20479                           ;incstack = 0
 20480 ;; hardware stack exceeded
 20481                           ; Regs used in i1_i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 20482  1FE8  0876               	movf	i1i2c_setDataCompleteCallback@cb+1,w
 20483  1FE9  00F1               	movwf	i1setCallBack@cb+1
 20484  1FEA  0875               	movf	i1i2c_setDataCompleteCallback@cb,w
 20485  1FEB  00F0               	movwf	i1setCallBack@cb
 20486  1FEC  0877               	movf	i1i2c_setDataCompleteCallback@p,w
 20487  1FED  00F8               	movwf	??i1_i2c_setDataCompleteCallback
 20488  1FEE  0878               	movf	??i1_i2c_setDataCompleteCallback,w
 20489  1FEF  00F2               	movwf	i1setCallBack@p
 20490  1FF0  3000               	movlw	0
 20491  1FF1  3192  2258         	fcall	i1_setCallBack
 20492  1FF3  0008               	return
 20493  1FF4                     __end_ofi1_i2c_setDataCompleteCallback:	
 20494                           
 20495                           	psect	text134
 20496  1258                     __ptext134:	
 20497 ;; *************** function i1_setCallBack *****************
 20498 ;; Defined at:
 20499 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 20500 ;; Parameters:    Size  Location     Type
 20501 ;;  idx             1    wreg     enum E15325
 20502 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 20503 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 20504 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 20505 ;;  p               1    2[COMMON] PTR void 
 20506 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20507 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20508 ;; Auto vars:     Size  Location     Type
 20509 ;;  idx             1    4[COMMON] enum E15325
 20510 ;; Return value:  Size  Location     Type
 20511 ;;                  1    wreg      void 
 20512 ;; Registers used:
 20513 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20514 ;; Tracked objects:
 20515 ;;		On entry : 0/0
 20516 ;;		On exit  : 0/0
 20517 ;;		Unchanged: 0/0
 20518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20519 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20522 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20523 ;;Total ram usage:        5 bytes
 20524 ;; Hardware stack levels used:    1
 20525 ;; This function calls:
 20526 ;;		Nothing
 20527 ;; This function is called by:
 20528 ;;		i1_i2c_setDataCompleteCallback
 20529 ;; This function uses a non-reentrant model
 20530 ;;
 20531                           
 20532                           
 20533                           ;psect for function i1_setCallBack
 20534  1258                     i1_setCallBack:	
 20535                           
 20536                           ;incstack = 0
 20537 ;; hardware stack exceeded
 20538                           ; Regs used in i1_setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 20539                           ;i1setCallBack@idx stored from wreg
 20540  1258  00F4               	movwf	i1setCallBack@idx
 20541                           
 20542                           ;i2c_master.c: 455: if(cb)
 20543  1259  0870               	movf	i1setCallBack@cb,w
 20544  125A  0471               	iorwf	i1setCallBack@cb+1,w
 20545  125B  1903               	btfsc	3,2
 20546  125C  2A6E               	goto	i1l3797
 20547                           
 20548                           ;i2c_master.c: 456: {
 20549                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 20550  125D  3574               	lslf	i1setCallBack@idx,w
 20551  125E  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 20552  125F  0086               	movwf	6
 20553  1260  0187               	clrf	7
 20554  1261  0870               	movf	i1setCallBack@cb,w
 20555  1262  3FC0               	movwi [0]fsr1
 20556  1263  0871               	movf	i1setCallBack@cb+1,w
 20557  1264  3FC1               	movwi [1]fsr1
 20558                           
 20559                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 20560  1265  0872               	movf	i1setCallBack@p,w
 20561  1266  00F3               	movwf	??i1_setCallBack
 20562  1267  0874               	movf	i1setCallBack@idx,w
 20563  1268  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 20564  1269  0086               	movwf	6
 20565  126A  0187               	clrf	7
 20566  126B  0873               	movf	??i1_setCallBack,w
 20567  126C  0081               	movwf	1
 20568                           
 20569                           ;i2c_master.c: 459: }
 20570  126D  0008               	return
 20571  126E                     i1l3797:	
 20572                           
 20573                           ;i2c_master.c: 460: else
 20574                           ;i2c_master.c: 461: {
 20575                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 20576  126E  3574               	lslf	i1setCallBack@idx,w
 20577  126F  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 20578  1270  0086               	movwf	6
 20579  1271  0187               	clrf	7
 20580  1272  30E1               	movlw	low _returnStop
 20581  1273  3FC0               	movwi [0]fsr1
 20582  1274  301E               	movlw	high _returnStop
 20583  1275  3FC1               	movwi [1]fsr1
 20584                           
 20585                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 20586  1276  0874               	movf	i1setCallBack@idx,w
 20587  1277  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 20588  1278  0086               	movwf	6
 20589  1279  0187               	clrf	7
 20590  127A  0181               	clrf	1
 20591  127B  0008               	return
 20592  127C                     __end_ofi1_setCallBack:	
 20593                           
 20594                           	psect	text135
 20595  1050                     __ptext135:	
 20596 ;; *************** function i1_i2c_setBuffer *****************
 20597 ;; Defined at:
 20598 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 20599 ;; Parameters:    Size  Location     Type
 20600 ;;  buffer          1    wreg     PTR void 
 20601 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 20602 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 20603 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20604 ;;  bufferSize      2    0[COMMON] unsigned int 
 20605 ;; Auto vars:     Size  Location     Type
 20606 ;;  buffer          1    3[COMMON] PTR void 
 20607 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 20608 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 20609 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20610 ;; Return value:  Size  Location     Type
 20611 ;;                  1    wreg      void 
 20612 ;; Registers used:
 20613 ;;		wreg
 20614 ;; Tracked objects:
 20615 ;;		On entry : 0/0
 20616 ;;		On exit  : 0/0
 20617 ;;		Unchanged: 0/0
 20618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20621 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20622 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20623 ;;Total ram usage:        4 bytes
 20624 ;; Hardware stack levels used:    1
 20625 ;; This function calls:
 20626 ;;		Nothing
 20627 ;; This function is called by:
 20628 ;;		i1_wr1RegCompleteHandler
 20629 ;;		i1_rd1RegCompleteHandler
 20630 ;;		i1_rd2RegCompleteHandler
 20631 ;;		i1_wr2RegCompleteHandler
 20632 ;;		i1_rdBlkRegCompleteHandler
 20633 ;; This function uses a non-reentrant model
 20634 ;;
 20635                           
 20636                           
 20637                           ;psect for function i1_i2c_setBuffer
 20638  1050                     i1_i2c_setBuffer:	
 20639                           
 20640                           ;incstack = 0
 20641 ;; hardware stack exceeded
 20642                           ; Regs used in i1_i2c_setBuffer: [wreg]
 20643                           ;i1i2c_setBuffer@buffer stored from wreg
 20644  1050  00F3               	movwf	i1i2c_setBuffer@buffer
 20645                           
 20646                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 20647  1051  0021               	movlb	1	; select bank1
 20648  1052  1D47               	btfss	_i2c_status^(0+128),2
 20649  1053  0008               	return
 20650                           
 20651                           ;i2c_master.c: 187: {
 20652                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 20653  1054  0873               	movf	i1i2c_setBuffer@buffer,w
 20654  1055  00F2               	movwf	??i1_i2c_setBuffer
 20655  1056  0872               	movf	??i1_i2c_setBuffer,w
 20656  1057  00C9               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 20657                           
 20658                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 20659  1058  0871               	movf	i1i2c_setBuffer@bufferSize+1,w
 20660  1059  00CB               	movwf	((_i2c_status+1)^(0+128)+3)
 20661  105A  0870               	movf	i1i2c_setBuffer@bufferSize,w
 20662  105B  00CA               	movwf	(_i2c_status^(0+128)+3)
 20663                           
 20664                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 20665  105C  1147               	bcf	_i2c_status^(0+128),2
 20666  105D  0008               	return
 20667  105E                     __end_ofi1_i2c_setBuffer:	
 20668                           
 20669                           	psect	text136
 20670  1E74                     __ptext136:	
 20671 ;; *************** function i1_i2c1_driver_stop *****************
 20672 ;; Defined at:
 20673 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 20674 ;; Parameters:    Size  Location     Type
 20675 ;;		None
 20676 ;; Auto vars:     Size  Location     Type
 20677 ;;		None
 20678 ;; Return value:  Size  Location     Type
 20679 ;;                  1    wreg      void 
 20680 ;; Registers used:
 20681 ;;		None
 20682 ;; Tracked objects:
 20683 ;;		On entry : 0/0
 20684 ;;		On exit  : 0/0
 20685 ;;		Unchanged: 0/0
 20686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20691 ;;Total ram usage:        0 bytes
 20692 ;; Hardware stack levels used:    1
 20693 ;; This function calls:
 20694 ;;		Nothing
 20695 ;; This function is called by:
 20696 ;;		i1_do_I2C_SEND_STOP
 20697 ;; This function uses a non-reentrant model
 20698 ;;
 20699                           
 20700                           
 20701                           ;psect for function i1_i2c1_driver_stop
 20702  1E74                     i1_i2c1_driver_stop:	
 20703                           
 20704                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 20705                           
 20706                           ;incstack = 0
 20707 ;; hardware stack exceeded
 20708                           ; Regs used in i1_i2c1_driver_stop: []
 20709  1E74  0023               	movlb	3	; select bank3
 20710  1E75  1511               	bsf	17,2	;volatile
 20711  1E76  0008               	return
 20712  1E77                     __end_ofi1_i2c1_driver_stop:	
 20713                           
 20714                           	psect	text137
 20715  1E71                     __ptext137:	
 20716 ;; *************** function i1_i2c1_driver_restart *****************
 20717 ;; Defined at:
 20718 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 20719 ;; Parameters:    Size  Location     Type
 20720 ;;		None
 20721 ;; Auto vars:     Size  Location     Type
 20722 ;;		None
 20723 ;; Return value:  Size  Location     Type
 20724 ;;                  1    wreg      void 
 20725 ;; Registers used:
 20726 ;;		None
 20727 ;; Tracked objects:
 20728 ;;		On entry : 0/0
 20729 ;;		On exit  : 0/0
 20730 ;;		Unchanged: 0/0
 20731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20736 ;;Total ram usage:        0 bytes
 20737 ;; Hardware stack levels used:    1
 20738 ;; This function calls:
 20739 ;;		Nothing
 20740 ;; This function is called by:
 20741 ;;		i1_do_I2C_SEND_RESTART_READ
 20742 ;;		i1_do_I2C_SEND_RESTART_WRITE
 20743 ;;		i1_do_I2C_SEND_RESTART
 20744 ;; This function uses a non-reentrant model
 20745 ;;
 20746                           
 20747                           
 20748                           ;psect for function i1_i2c1_driver_restart
 20749  1E71                     i1_i2c1_driver_restart:	
 20750                           
 20751                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 20752                           
 20753                           ;incstack = 0
 20754 ;; hardware stack exceeded
 20755                           ; Regs used in i1_i2c1_driver_restart: []
 20756  1E71  0023               	movlb	3	; select bank3
 20757  1E72  1491               	bsf	17,1	;volatile
 20758  1E73  0008               	return
 20759  1E74                     __end_ofi1_i2c1_driver_restart:	
 20760                           
 20761                           	psect	text138
 20762  1E9B                     __ptext138:	
 20763 ;; *************** function i1_i2c1_driver_sendACK *****************
 20764 ;; Defined at:
 20765 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 20766 ;; Parameters:    Size  Location     Type
 20767 ;;		None
 20768 ;; Auto vars:     Size  Location     Type
 20769 ;;		None
 20770 ;; Return value:  Size  Location     Type
 20771 ;;                  1    wreg      void 
 20772 ;; Registers used:
 20773 ;;		None
 20774 ;; Tracked objects:
 20775 ;;		On entry : 0/0
 20776 ;;		On exit  : 0/0
 20777 ;;		Unchanged: 0/0
 20778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20783 ;;Total ram usage:        0 bytes
 20784 ;; Hardware stack levels used:    1
 20785 ;; This function calls:
 20786 ;;		Nothing
 20787 ;; This function is called by:
 20788 ;;		i1_do_I2C_DO_ACK
 20789 ;;		i1_do_I2C_RX
 20790 ;; This function uses a non-reentrant model
 20791 ;;
 20792                           
 20793                           
 20794                           ;psect for function i1_i2c1_driver_sendACK
 20795  1E9B                     i1_i2c1_driver_sendACK:	
 20796                           
 20797                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 20798                           
 20799                           ;incstack = 0
 20800                           ; Regs used in i1_i2c1_driver_sendACK: []
 20801  1E9B  0023               	movlb	3	; select bank3
 20802  1E9C  1291               	bcf	17,5	;volatile
 20803                           
 20804                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 20805  1E9D  1611               	bsf	17,4	;volatile
 20806  1E9E  0008               	return
 20807  1E9F                     __end_ofi1_i2c1_driver_sendACK:	
 20808                           
 20809                           	psect	text139
 20810  1E6E                     __ptext139:	
 20811 ;; *************** function _i2c_busCollisionISR *****************
 20812 ;; Defined at:
 20813 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 20814 ;; Parameters:    Size  Location     Type
 20815 ;;		None
 20816 ;; Auto vars:     Size  Location     Type
 20817 ;;		None
 20818 ;; Return value:  Size  Location     Type
 20819 ;;                  1    wreg      void 
 20820 ;; Registers used:
 20821 ;;		status,2, status,0, pclath, cstack
 20822 ;; Tracked objects:
 20823 ;;		On entry : 0/0
 20824 ;;		On exit  : 0/0
 20825 ;;		Unchanged: 0/0
 20826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20831 ;;Total ram usage:        0 bytes
 20832 ;; Hardware stack levels used:    1
 20833 ;; Hardware stack levels required when called:    1
 20834 ;; This function calls:
 20835 ;;		_i2c1_driver_clearBusCollision
 20836 ;; This function is called by:
 20837 ;;		_i2c_open
 20838 ;;		_INTERRUPT_InterruptManager
 20839 ;; This function uses a non-reentrant model
 20840 ;;
 20841                           
 20842                           
 20843                           ;psect for function _i2c_busCollisionISR
 20844  1E6E                     _i2c_busCollisionISR:	
 20845                           
 20846                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 20847                           
 20848                           ;incstack = 0
 20849                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 20850  1E6E  319E  266B         	fcall	_i2c1_driver_clearBusCollision
 20851  1E70  0008               	return
 20852  1E71                     __end_of_i2c_busCollisionISR:	
 20853                           
 20854                           	psect	text140
 20855  1E6B                     __ptext140:	
 20856 ;; *************** function _i2c1_driver_clearBusCollision *****************
 20857 ;; Defined at:
 20858 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 20859 ;; Parameters:    Size  Location     Type
 20860 ;;		None
 20861 ;; Auto vars:     Size  Location     Type
 20862 ;;		None
 20863 ;; Return value:  Size  Location     Type
 20864 ;;                  1    wreg      void 
 20865 ;; Registers used:
 20866 ;;		None
 20867 ;; Tracked objects:
 20868 ;;		On entry : 0/0
 20869 ;;		On exit  : 0/0
 20870 ;;		Unchanged: 0/0
 20871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20876 ;;Total ram usage:        0 bytes
 20877 ;; Hardware stack levels used:    1
 20878 ;; This function calls:
 20879 ;;		Nothing
 20880 ;; This function is called by:
 20881 ;;		_i2c_busCollisionISR
 20882 ;; This function uses a non-reentrant model
 20883 ;;
 20884                           
 20885                           
 20886                           ;psect for function _i2c1_driver_clearBusCollision
 20887  1E6B                     _i2c1_driver_clearBusCollision:	
 20888                           
 20889                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
 20890                           
 20891                           ;incstack = 0
 20892                           ; Regs used in _i2c1_driver_clearBusCollision: []
 20893  1E6B  002E               	movlb	14	; select bank14
 20894  1E6C  108F               	bcf	15,1	;volatile
 20895  1E6D  0008               	return
 20896  1E6E                     __end_of_i2c1_driver_clearBusCollision:	
 20897  007E                     btemp	set	126	;btemp
 20898  007E                     int$flags	set	126
 20899  007E                     wtemp0	set	126


Data Sizes:
    Strings     90
    Constant    1004
    Data        487
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     74      80
    BANK1            80     39      80
    BANK2            80      0      59
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            33      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$2618$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$2624$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2630$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_ISR$2636	const PTR FTN()enum E15307 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$2635	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2630	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$2629	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$2624	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$2623	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX$2618	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S519$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 12
		 -> main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    mktime@timeptr	PTR struct tm size(1) Largest target is 18
		 -> rtc6_GetTime@tm_t(BANK1[18]), 

    memset@p1	PTR void  size(2) Largest target is 18
		 -> gmtime@tim(BANK2[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    memset@p	PTR unsigned char  size(2) Largest target is 18
		 -> gmtime@tim(BANK2[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    sp__ctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK2[27]), 

    sp__asctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK2[27]), 

    gmtime@tp	PTR const long  size(1) Largest target is 4
		 -> localtime@t(BANK0[4]), 

    sp__gmtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    localtime@tp	PTR const long  size(1) Largest target is 4
		 -> main@getTime(BANK1[4]), rtc6_SetTime@t(BANK0[4]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), main@timeStr(BANK1[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Modify_Data@c	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), 

    Write_String@message	PTR unsigned char  size(2) Largest target is 12
		 -> main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    OLED_PutPicture@pic	PTR const unsigned char  size(2) Largest target is 475
		 -> emptyArray(CODE[475]), displayArray(BIGRAM[475]), 

    main@tm_t	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S938$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    sp__localtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    sp__memset	PTR void  size(2) Largest target is 18
		 -> gmtime@tim(BANK2[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    rtc6_SetTime@tm_t	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E15307[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S519$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S519$callbackTable	PTR FTN(PTR void ,)enum E15143[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E15143[6] size(2) Largest target is 1
		 -> i1_returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> returnReset(), returnStop(), 

    S519$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->i1_i2c_ISR
    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    i1_wr2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_wr1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rdBlkRegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_i2c_setDataCompleteCallback->i1_setCallBack

Critical Paths under _main in BANK0

    _main->_rtc6_GetTime
    _rtc6_SetTime->_localtime
    _rtc6_SetComponent->_rtcc_read
    _localtime->_gmtime
    _gmtime->_dylen
    _dylen->___lwmod
    _rtc6_GetTime->_mktime
    _rtc6_GetComponent->_rtcc_read
    _mktime->_ymd_to_scalar
    _ymd_to_scalar->_years_to_days
    _years_to_days->___lwdiv
    _months_to_days->___lwdiv
    _isleap->___lwmod
    _Write_String->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _Modify_Data->___wmul
    _SYSTEM_Initialize->_rtc6_Initialize
    _rtc6_Initialize->_rtcc_read
    _rtcc_write->_i2c_write1ByteRegister
    _rtcc_read->_i2c_read1ByteRegister
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _OLED_Initialize->_OLED_Command
    _OLED_Clear->_OLED_PutPicture
    _OLED_PutPicture->_OLED_SetColumn
    _OLED_PutPicture->_OLED_SetRow
    _OLED_SetRow->_OLED_Command
    _OLED_SetColumn->_OLED_Command
    _OLED_Command->_SPI2_Exchange8bit
    _OLED_Data->_SPI2_Exchange8bit

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rtc6_GetTime

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0  479661
                                             70 BANK0      4     4      0
                                             18 BANK1     21    21      0
                         _OLED_Clear
                    _OLED_Initialize
                  _SYSTEM_Initialize
                         _SetupClock
                       _Write_String
                          _localtime
                             _memset
                       _rtc6_GetTime
                       _rtc6_SetTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _rtc6_SetTime                                         8     4      4  185827
                                             44 BANK0      8     4      4
                            ___awmod
                          _localtime
                             _memset
                  _rtc6_SetComponent
 ---------------------------------------------------------------------------------
 (2) _rtc6_SetComponent                                   10     8      2  178519
                                             19 BANK0     10     8      2
                            ___awdiv
                            ___awmod
                          _rtcc_read
                         _rtcc_write
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     580
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _localtime                                           13    13      0    4835
                                             31 BANK0     13    13      0
                             ___lmul
                             _gmtime
 ---------------------------------------------------------------------------------
 (3) _gmtime                                               7     7      0    3988
                                             24 BANK0      7     7      0
                            ___aldiv
                            ___almod
                            ___awmod
                              _dylen
 ---------------------------------------------------------------------------------
 (4) _dylen                                                4     2      2    1213
                                             20 BANK0      4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1006
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___almod                                             11     3      8     752
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     756
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _rtc6_GetTime                                        25    21      4   96182
                                             63 BANK0      7     3      4
                                              0 BANK1     18    18      0
                             _memset
                             _mktime
                  _rtc6_GetComponent
 ---------------------------------------------------------------------------------
 (2) _rtc6_GetComponent                                    6     5      1   87117
                                             19 BANK0      6     5      1
                             ___bmul
                          _rtcc_read
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _mktime                                              15    11      4    7666
                                             48 BANK0     15    11      4
                             ___lmul
                      _ymd_to_scalar
 ---------------------------------------------------------------------------------
 (3) _ymd_to_scalar                                       16    10      6    6661
                                             32 BANK0     16    10      6
                             _isleap
                     _months_to_days
                      _years_to_days
 ---------------------------------------------------------------------------------
 (4) _years_to_days                                       18    14      4    1636
                                             14 BANK0     18    14      4
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     702
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _months_to_days                                       2     0      2    3324
                                             14 BANK0      2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isleap                                               5     3      2    1085
                                             20 BANK0      5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     654
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _Write_String                                         4     2      2    9458
                                             51 BANK0      4     2      2
                        _Modify_Data
                    _OLED_PutPicture
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    19     16    5631
                                             20 BANK0     31    15     16
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     919
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     770
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Modify_Data                                         21    15      6    2931
                                              6 BANK0     21    15      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2456
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SetupClock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0  174885
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI2_Initialize
                    _rtc6_Initialize
 ---------------------------------------------------------------------------------
 (2) _rtc6_Initialize                                      3     3      0  174885
                                             19 BANK0      3     3      0
                          _rtcc_read
                         _rtcc_write
 ---------------------------------------------------------------------------------
 (3) _rtcc_write                                           4     3      1   89050
                                             14 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               4     2      2   86030
                                             10 BANK0      4     2      2
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _rtcc_read                                            2     2      0   85720
                                             17 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                7     6      1   85650
                                             10 BANK0      7     6      1
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _i2c_setAddressNACKCallback                           4     1      3    1870
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (5) _i2c_open                                             3     3      0     366
                                              2 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_setI2cISR                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_setBusCollisionISR                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_masterWrite                                      0     0      0   78362
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (6) _i2c_masterOperation                                  3     3      0   78362
                                              7 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (7) _mssp1_IRQisEnabled                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _i2c_poller                                           0     0      0   78192
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (8) _mssp1_waitForEvent                                   1     1      0      50
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _i2c_ISR                                              3     3      0   78142
                                              4 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX_EMPTY                                      1     1      0   19494
                                              0 BANK0      1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX                                            3     3      0   19616
                                              1 BANK0      3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_TXData                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RX                                            1     1      0   19494
                                              0 BANK0      1     1      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ADDRESS_NACK                               1     1      0   19494
                                              0 BANK0      1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _returnStop                                          1     0      1      76
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _returnReset                                         1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4010
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (6) _setCallBack                                          5     2      3     914
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (5) _i2c_setBuffer                                        4     2      2    1352
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (10) _i2c_restartWrite                                    1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_close                                            2     2      0      24
                                              0 BANK0      2     2      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (6) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OLED_Initialize                                      2     2      0      44
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           6     6      0     915
                                             10 BANK0      6     6      0
                          _OLED_Data
                    _OLED_PutPicture
                     _OLED_SetColumn
                        _OLED_SetRow
 ---------------------------------------------------------------------------------
 (2) _OLED_PutPicture                                      6     4      2     511
                                              4 BANK0      6     4      2
                          _OLED_Data
                     _OLED_SetColumn
                        _OLED_SetRow
 ---------------------------------------------------------------------------------
 (3) _OLED_SetRow                                          2     2      0      89
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_SetColumn                                       2     2      0      89
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (4) _OLED_Command                                         1     1      0      44
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _OLED_Data                                            1     1      0      44
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI2_Exchange8bit                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          1     1      0   14790
                                              7 COMMON     1     1      0
                   Absolute function *
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (14) i1_i2c_ISR                                           3     3      0   14790
                                              4 COMMON     3     3      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (15) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_TX_EMPTY                                   1     1      0    3656
                                              0 COMMON     1     1      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
                     i1_mssp1_setIRQ
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_TX                                         3     3      0    3778
                                              1 COMMON     3     3      0
                   Absolute function *
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_ADR_READ                              0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_TXData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_RX                                         1     1      0    3656
                                              0 COMMON     1     1      0
                   Absolute function *
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0    3656
                                              0 COMMON     1     1      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_wr2RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_wr1RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_returnStop                                        1     0      1      76
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (16) i1_returnReset                                       1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (16) i1_rdBlkRegCompleteHandler                           1     0      1     756
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_rd2RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_rd1RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_i2c_setDataCompleteCallback                       4     1      3     510
                                              5 COMMON     4     1      3
                      i1_setCallBack
 ---------------------------------------------------------------------------------
 (18) i1_setCallBack                                       5     2      3     206
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (17) i1_i2c_setBuffer                                     4     2      2     174
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (16) i1_i2c_restartWrite                                  1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (15) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OLED_Clear
     _OLED_Data
       _SPI2_Exchange8bit
     _OLED_PutPicture
       _OLED_Data
         _SPI2_Exchange8bit
       _OLED_SetColumn
         _OLED_Command
           _SPI2_Exchange8bit
       _OLED_SetRow
         _OLED_Command
           _SPI2_Exchange8bit
     _OLED_SetColumn
       _OLED_Command
         _SPI2_Exchange8bit
     _OLED_SetRow
       _OLED_Command
         _SPI2_Exchange8bit
   _OLED_Initialize
     _OLED_Command
       _SPI2_Exchange8bit
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI2_Initialize
     _rtc6_Initialize
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
       _rtcc_write
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_write1ByteRegister (ARG)
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _SetupClock
   _Write_String
     _Modify_Data
       ___wmul
     _OLED_PutPicture
       _OLED_Data
         _SPI2_Exchange8bit
       _OLED_SetColumn
         _OLED_Command
           _SPI2_Exchange8bit
       _OLED_SetRow
         _OLED_Command
           _SPI2_Exchange8bit
     _sprintf
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       ___wmul
       _isdigit
     _strlen
   _localtime
     ___lmul
     _gmtime
       ___aldiv
       ___almod
       ___awmod
       _dylen
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
   _memset
   _rtc6_GetTime
     _memset
     _mktime
       ___lmul
       _ymd_to_scalar
         _isleap
           ___lwmod
             ___lwdiv (ARG)
               ___wmul (ARG)
         _months_to_days
           ___lwdiv
             ___wmul (ARG)
           ___wmul
         _years_to_days
           ___lmul
           ___lwdiv
             ___wmul (ARG)
     _rtc6_GetComponent
       ___bmul
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _rtc6_SetTime
     ___awmod
     _localtime
       ___lmul
       _gmtime
         ___aldiv
         ___almod
         ___awmod
         _dylen
           ___lwmod
             ___lwdiv (ARG)
               ___wmul (ARG)
     _memset
     _rtc6_SetComponent
       ___awdiv
       ___awmod
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
       _rtcc_write
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_write1ByteRegister (ARG)
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _sprintf
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
     ___wmul
     _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       Absolute function(Fake) *
       i1_do_I2C_DO_NACK_RESTART *
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP *
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData *
       i1_i2c1_driver_sendACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART_READ *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData *
       i1_i2c1_driver_isNACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c_restartWrite *
       i1_mssp1_setIRQ *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     27      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3B       9       73.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               21      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Aug 27 17:48:43 2018

                           returnReset@p 0029                            _years_to_days 09BB  
              rtc6_SetComponent@location 003C                        _rtc6_SetTime$2616 0052  
                         ___bmul@product 0022            _do_I2C_SEND_RESTART$intlevel0 1F40  
                            __CFG_CP$OFF 0000                                       l53 1FD5  
                           ___awdiv@sign 0026                      months_to_days@month 002E  
                    ??_rtc6_SetComponent 0035                     __size_of_do_I2C_IDLE 0009  
                    _do_I2C_SEND_RESTART 1F3C                     __size_of_do_I2C_RCEN 000A  
                    ___wmul@multiplicand 0022                     __end_ofi1_returnStop 1E6B  
                          rtcc_read@addr 0032                              i1_do_I2C_RX 1569  
                            i1_do_I2C_TX 1678                              __CFG_LVP$ON 0000  
                                    l224 119B                                      l217 170D  
                                    l314 160D                                      l298 178E  
                                    l746 1FFC                                      l838 0A2E  
                                    l859 064E                                      l886 0743  
                                    l985 11A7                             __CFG_CPD$OFF 0000  
               i1_do_I2C_DO_NACK_RESTART 1EBB                        ??_OLED_Initialize 0022  
                       ??_OLED_SetColumn 0022             __size_of_i2c_masterOperation 0024  
                   _returnStop$intlevel0 1EE5            i2c_setDataCompleteCallback@cb 0025  
                __size_of_PMD_Initialize 0008                             ___awmod@sign 0026  
               ?i1_rd2RegCompleteHandler 0079                    __size_of_do_I2C_RESET 000B  
                           __CFG_BORV$LO 0000                                      wreg 0009  
                  __end_ofi1_returnReset 0802                          ?i1_mssp1_setIRQ 0070  
                       OLED_Command@temp 0021                 ?i1_wr2RegCompleteHandler 0079  
                     i1_i2c1_driver_stop 1E74          i2c1_driver_setBusCollisionISR@f 0020  
        ??i1_i2c_setDataCompleteCallback 0078                              main@getTime 00C3  
                           __CFG_ZCD$OFF 0000                                     l1040 0BA7  
                ??_rd2RegCompleteHandler 002A                                     l1053 095E  
                                   l4041 107A                                     l3403 1EF1  
                                   l1395 087F                                     l4051 07F7  
                                   l4125 0F80                                     l3327 12B7  
                                   l3431 10E8                                     l3407 10FE  
                                   l3415 1114                                     l3423 112A  
                                   l4047 07F1                                     l4135 0FC9  
                                   l4127 0FB1                                     l4305 0DB6  
                                   l4137 0FF9                                     l4073 17C4  
                                   l3371 1F40                                     l4307 0DBF  
                                   l4091 17EA                                     l4083 17CC  
                                   l4067 17B9                            i1returnStop@p 0079  
                                   l3365 1F38                                     l4421 0669  
                                   l4149 086A                                     l4085 17D8  
                                   l3439 11BE                                     l3447 1FC0  
                                   l3359 1F30                                     l3383 1F58  
                                   l4511 079B                                     l4503 0785  
                                   l4415 0653                                     l4095 17F3  
                                   l3457 1F7A                                     l3377 1F48  
                                   l3465 100A                                     l3473 1FCB  
                                   l3481 1F97                                     l4505 0789  
                                   l4441 06BC                                     l4433 06A6  
                                   l4417 065C                                     l4409 064A  
                                   l3395 1EE5                                     l4099 17FB  
                                   l3389 1F60                                     l4525 07AD  
                                   l4517 07A9                                     l4429 0698  
                                   l4453 06E3                                     l3733 13FE  
                                   l3399 1EEB                                     l3719 11A1  
                                   l4471 0718                                     l4447 06CF  
                                   l4439 06A8                                     l4455 06FB  
                                   l4527 0629                                     l4287 116F  
                                   l3903 0973                                     l3489 1F50  
                                   l4465 0712                                     l4449 06DA  
                                   l4529 07E7                                     l4561 11DC  
                                   l3737 1408                                     l3905 0981  
                                   l3913 09A4                                     l4555 152B  
                                   l4547 1513                                     l3763 14B2  
                                   l3755 1494                                     l4563 11E8  
                                   l3757 14A0                                     l3781 137E  
                                   l4485 075F                                     l4477 0737  
                                   l3917 09B2                                     l3909 0999  
                                   l3941 164A                                     l3933 1644  
                                   l4583 0A97                                     l4575 0A3F  
                                   l3767 14BB                                     l4495 0772  
                                   l4487 0762                                     l3943 1656  
                                   l3951 166B                                     l3785 138A  
                                   l3881 0C01                                     l3929 163D  
                                   l4843 08BC                                     l3779 1372  
                                   l3867 0BC8                                     l3859 0BB8  
                                   l3955 1673                                     l3947 1662  
                                   l4853 08D1                                     l4837 08AF  
                                   l4829 08A1                                     l3789 1393  
                                   l3981 1482                                     l3885 0C0F  
                                   l3877 0BF6                                     l3869 0BD6  
                                   l3965 14ED                                     l4847 08C4  
                                   l3983 1483                                     l7239 0D0F  
                                   l3897 096B                                     l3969 14F2  
                                   l4859 08EC                                     l6723 1324  
                                   l6715 1318                                     l6731 1762  
                                   l6805 13A9                                     l6901 1747  
                                   l6719 1321                                     l6743 176E  
                                   l6735 1768                                     l6815 1353  
                                   l6807 1342                                     l6823 1FDD  
                                   l6911 175C                                     l6729 1327  
                                   l6761 15F0                                     l6841 129D  
                                   l6739 176B                                     l6835 128D  
                                   l6757 17A7                                     l6749 1771  
                                   l6837 1293                                     l6917 1427  
                                   l6775 160F                                     l6927 1450  
                                   l6793 13A2                                     l6785 1615  
                                   l6953 0931                                     l6787 139C  
                                   l6779 1612                                     l6891 171E  
                                   l6955 0942                                     l6789 139F  
                                   l6799 13A6                                     STR_1 1820  
                                   STR_2 183F                                     STR_3 0249  
                                   u2015 1409                              ?_OLED_Clear 0070  
                                   u2025 1410                                     u2125 1375  
                                   _LATA 0016                                     _LATB 0017  
                                   u2055 1497                                     _LATC 0018  
                                   _LATD 0019                                     u2145 1384  
                                   u2305 0BD7                                     _LATE 001A  
                                   u2075 14A1                                     u2155 138B  
                                   u2315 0BEB                                     u2085 14AB  
                                   u2325 0BF7                                     u2405 098F  
                                   u2095 14B3                                     u2415 099A  
                                   u3225 08CF                                     u3145 0A34  
                                   u2505 1663                                     u3235 08EA  
                                   u2605 115C                                     u2285 0BCB  
                                   u2385 0976                                     u2705 17D9  
                                   u2475 164D                                     u2715 17E3  
                                   u2725 17EB                                     u2495 165C  
                                   u5215 154D                                     u5225 122B  
                                   u2835 0DA0                                     u2755 0F97  
                                   _PMD0 0796                                     u2845 0DB4  
                                   u2765 0FE4                                     u2685 17CF  
                                   _PMD1 0797                                     u5510 0CB4  
                                   _PMD2 0798                                     u1975 11A8  
                                   u2935 072D                                     _PMD3 0799  
                                   _PMD4 079A                                     u1985 11AD  
                                   _PMD5 079B                                     u2885 069F  
                                   u2975 0752                                     u5527 0CC9  
                                   u5537 0D0B                                     u5547 10CB  
                                   u5557 1FD9                                     u5567 0AA4  
                                   u5577 0AB3                     ?_do_I2C_SEND_RESTART 0070  
              __end_of_rtc6_SetComponent 1569                                     _WPUA 0F39  
                                   _WPUB 0F44                                     _WPUC 0F4F  
                                   _WPUD 0F5A                                     _WPUE 0F65  
                ??_wr2RegCompleteHandler 002A                             __CFG_WRT$OFF 0000  
                          __CFG_FCMEN$ON 0000        __size_of_do_I2C_SEND_RESTART_READ 0008  
                    ?i1_i2c1_driver_stop 0070                ?_do_I2C_SEND_RESTART_READ 0070  
                            main@setTime 00BE                                     _main 0CA0  
              __size_of_do_I2C_SEND_STOP 0008                   __size_of_do_I2C_DO_ACK 0008  
                                   fsr0h 0005                                     fsr1h 0007  
                                   indf0 0000                                     fsr0l 0004  
                                   indf1 0001                                     fsr1l 0006  
                                   btemp 007E                              main@timeStr 00B2  
                  __size_of_Write_String 002F                        ??i1_do_I2C_DO_ACK 0070  
                          __CFG_BOREN$ON 0000                  i1_i2c1_driver_getRXData 1E7A  
                  ?_do_I2C_SEND_ADR_READ 0070          ??_i2c1_driver_clearBusCollision 0070  
                                   start 0022                            _i2c_setBuffer 10CF  
                          __CFG_CSWEN$ON 0000                        ___bmul@multiplier 0023  
                          __CFG_MCLRE$ON 0000                          __end_of_i2c_ISR 136B  
                         ?_years_to_days 002E         __size_of_rdBlkRegCompleteHandler 001D  
               ??_do_I2C_DO_NACK_RESTART 0020                       __size_of_OLED_Data 000A  
                          i1_do_I2C_IDLE 1ED0                __size_of_mssp1_disableIRQ 0003  
                          i1_do_I2C_RCEN 1ED5                             _do_I2C_RESET 1FBC  
                         i1returnReset@p 0079                   _i2c_write1ByteRegister 1425  
         __size_of_OSCILLATOR_Initialize 0009              i2c_setAddressNACKCallback@p 0027  
          __end_of_OSCILLATOR_Initialize 1F6D                     ??i1_i2c1_driver_stop 0070  
                        __end_of___aldiv 0C18                          __end_of___almod 09BB  
               __end_of_i2c1_driver_open 1FA7                                    ?_main 0070  
                 __size_of_ymd_to_scalar 0057                          __end_of___awdiv 1800  
               __end_of_i2c1_driver_stop 1E92                            __CFG_WDTE$OFF 0000  
                        __end_of___awmod 1678                          ___awdiv@divisor 0020  
             __end_of_i2c1_driver_TXData 1EF9                           __CFG_DEBUG$OFF 0000  
                        __end_of___lwdiv 14C0                                    i1l314 1583  
                        __end_of___lwmod 1398                                    i1l633 001D  
                                  i1l298 16A3                                    i1l628 0015  
                        ___awdiv@counter 0025                                    _OSCEN 0891  
                                  _TRISA 0011                                    _TRISB 0012  
                                  _TRISC 0013                                    _TRISD 0014  
                                  _TRISE 0015                      ___lmul@multiplicand 0024  
                           ?_OLED_SetRow 0070                              i2c_open@ret 0024  
                      ??_OLED_PutPicture 0026                       __size_ofi1_i2c_ISR 0026  
                           _Write_String 13C6               __end_of_i2c1_driver_isNACK 1F76  
                        __end_of_dpowers 186B                                    _dylen 14C0  
                        __end_of_isdigit 107C             ?i1_do_I2C_SEND_RESTART_WRITE 0070  
             ?_do_I2C_SEND_RESTART_WRITE 0070                    ??_do_I2C_SEND_RESTART 0020  
                  _i2c_read1ByteRegister 1710                        ?i1_mssp1_clearIRQ 0070  
 __end_of_i2c1_driver_setBusCollisionISR 1EFF  __size_of_i2c1_driver_setBusCollisionISR 0006  
         _i2c1_driver_setBusCollisionISR 1EF9                          __end_of_moninit 1861  
                                  pclath 000A                      Write_String@message 0053  
                __size_of_mssp1_clearIRQ 0003                     i1_i2c1_driver_TXData 1ECB  
                       ymd_to_scalar@day 0044                i2c_write1ByteRegister@reg 002A  
                 ?_do_I2C_SEND_ADR_WRITE 0070                                    status 0003  
                     ??i1_mssp1_clearIRQ 0070                                    wtemp0 007E  
                        __end_of_sprintf 07EE                            ??_Modify_Data 002C  
                        years_to_days@yr 002E                           ?_i2c_setBuffer 0020  
                           ?_setCallBack 0020                     i1_i2c1_driver_isNACK 1F14  
                          _fsmStateTable 1800                          __initialization 0024  
         __size_ofi1_do_I2C_SEND_RESTART 0004                               _i2c_poller 1FDD  
          __end_ofi1_do_I2C_SEND_RESTART 1EAF                        _SPI2_Exchange8bit 1FF4  
                             _i2c_status 00C7                           ?i1_do_I2C_IDLE 0070  
                           __end_of_main 0D8D                           ?i1_do_I2C_RCEN 0070  
             __end_ofi1_do_I2C_SEND_STOP 1EB3                         __end_of_i2c_open 1710  
                     ?_SPI2_Exchange8bit 0070              ?_INTERRUPT_InterruptManager 0070  
                          rtc6_SetTime@t 004C          __end_ofi1_rd2RegCompleteHandler 10BC  
                    __size_of_OLED_Clear 0059                            setCallBack@cb 0020  
                         i1_do_I2C_RESET 1EFF                            _do_I2C_DO_ACK 1F4C  
                                 ??_main 0066                            _do_I2C_TX$723 0022  
                      ?_i2c_restartWrite 0029          __end_ofi1_wr2RegCompleteHandler 108C  
                     OLED_PutPicture@pic 0024            __size_of_i2c1_driver_sendNACK 0004  
                           i2c_close@ret 0021                 __size_of_SPI2_Initialize 0006  
                    ??_SPI2_Exchange8bit 0020                       ??_i2c_restartWrite 002A  
          __size_of_i2c1_driver_resetBus 0001                  ?_do_I2C_DO_ADDRESS_NACK 0070  
                                 ?_dylen 0034                         ___awdiv@dividend 0022  
        i1i2c_setDataCompleteCallback@cb 0075                                   _ANSELA 0F38  
                                 _ANSELB 0F43                                   _ANSELC 0F4E  
                                 _ANSELD 0F59                        __end_of_OLED_Data 1F89  
                                 _ANSELE 0F64                       __CFG_RSTOSC$HFINT1 0000  
                ?i1_do_I2C_SEND_ADR_READ 0070                    ?i1_i2c1_driver_TXData 0070  
                                 _RB1PPS 0F19                           rtcc_write@addr 0031  
                                 _RB3PPS 0F1B                                   _RC3PPS 0F23  
                         rtcc_write@data 002E                                   _RC4PPS 0F24  
                                 _ODCONA 0F3A                                   _ODCONB 0F45  
                                 _ODCONC 0F50                                   _ODCOND 0F5B  
                                 _ODCONE 0F66                                   i1l4203 1EBB  
                                 i1l4213 0800                                   i1l4221 108C  
                                 i1l4209 1E69                                   i1l4217 0002  
                                 i1l4245 107C                                   i1l4229 109C  
                                 i1l4237 10AC                                   i1l4253 113C  
                                 i1l4173 1EA3                                   i1l4191 1EAF  
                                 i1l4185 1EAB                                   i1l4179 1EA7  
                                 i1l7011 1569                                   i1l4605 1F1C  
                                 i1l4613 1F06                                   i1l4621 1ED5  
                                 i1l4197 1EB7                                   i1l7007 16BC  
                                 i1l7025 1585                           __CFG_WDTCCS$SC 0000  
                                 i1l7043 12F1                                   i1l7035 158B  
                                 i1l7107 12D5                                   i1l7037 12EB  
                                 i1l4629 1EB3                                   i1l7029 1588  
                                 i1l7039 12EE                                   i1l7055 12F8  
                                 i1l7049 12F5                                   i1l4587 1EFF  
                                 i1l3797 126E                                   i1l4597 1ED0  
              ??i1_i2c1_driver_getRXData 0070               __size_of_rtc6_SetComponent 0039  
                                 i1l7099 12C5                                   i1l6973 123F  
                                 i1l6965 1235                                   i1l6981 1678  
                                 i1l6969 123C                                   i1l6993 1684  
                                 i1l6985 167E                                   i1l6979 1242  
                                 i1l6989 1681                                   i1l6999 1687  
          ??i1_do_I2C_SEND_RESTART_WRITE 0070                       __size_of_i2c_close 001B  
                                 _OSCFRQ 0893                            ?_OLED_Command 0070  
                i1_rd1RegCompleteHandler 109C                            _ymd_to_scalar 0844  
                 ??_do_I2C_SEND_ADR_READ 0021                                   _STATUS 0003  
               rdBlkRegCompleteHandler@p 0029                                ??_i2c_ISR 0024  
                i1_wr1RegCompleteHandler 108C                         rtc6_SetTime@tm_t 0053  
            ??i1_rdBlkRegCompleteHandler 007A                       rtc6_Initialize@reg 0035  
                  ?i1_i2c1_driver_isNACK 0070                           __CFG_PWRTE$OFF 0000  
                        ??_years_to_days 0032                __end_of_SPI2_Exchange8bit 2000  
                  _i2c1_driver_getRXData 1E95                      _do_I2C_RX$intlevel0 15F0  
                                 ___bmul 07EE                    __size_ofi1_returnStop 0002  
            __end_of_do_I2C_DO_NACK_STOP 1F5C                        __end_ofi1_i2c_ISR 12EB  
    __end_of_i2c_setDataCompleteCallback 1043              _i2c_setDataCompleteCallback 1036  
                                 ___lmul 13F5                                ??___aldiv 0028  
                              ??___almod 0028                                   ___wmul 119E  
                        _i2c_masterWrite 1EC7                      __end_of_Modify_Data 0A9C  
                              ??___awdiv 0024    __end_of_i2c1_driver_clearBusCollision 1E6E  
 __size_of_i2c1_driver_clearBusCollision 0003            _i2c1_driver_clearBusCollision 1E6B  
                         __CFG_STVREN$ON 0000                                ??___awmod 0024  
        __size_of_do_I2C_DO_NACK_RESTART 0008                                ??___lwdiv 002A  
                              ??___lwmod 0032                   __end_ofi1_do_I2C_RESET 1F06  
                        i1_i2c_setBuffer 1050                               _SetupClock 1E68  
                                 _gmtime 0EAE                                   _memset 116A  
                                 _isleap 1457                              OLED_Clear@i 002F  
                            OLED_Clear@j 002C                         ___awdiv@quotient 0027  
                         ?_do_I2C_DO_ACK 0070                                   _mktime 0D8D  
                        ___awmod@divisor 0020                                   _lookup 0449  
            __size_ofi1_i2c_restartWrite 0002                          ___awmod@counter 0025  
                                 _strlen 11D7                 rtc6_GetComponent@working 0038  
                 i2c1_driver_setI2cISR@f 0020                             __pdataBIGRAM 21B1  
            __end_of_i2c1_driver_sendACK 1EC3                           _PMD_Initialize 1F24  
         __end_of_do_I2C_DO_ADDRESS_NACK 133E                                ??_isdigit 0020  
             i2c_write1ByteRegister@data 002B              ?_i2c_setAddressNACKCallback 0025  
            __end_of_i2c1_driver_restart 1E8F                             ?_returnReset 0029  
          _do_I2C_DO_NACK_STOP$intlevel0 1F58               i1rdBlkRegCompleteHandler@p 0079  
                  _i2c1_driver_setI2cISR 1000              __end_of_i2c1_driver_startRX 1E95  
                 ?_i2c_read1ByteRegister 002A        __size_ofi1_do_I2C_DO_ADDRESS_NACK 0023  
         __end_ofi1_do_I2C_SEND_ADR_READ 1F24                            ?_rtc6_GetTime 005F  
              ?i1_do_I2C_DO_ADDRESS_NACK 0070                                ??_sprintf 0044  
                            localtime@tp 004B                           ??_OLED_Command 0021  
                      i1_do_I2C_TX_EMPTY 12EB                           ?_ymd_to_scalar 0040  
                      _SYSTEM_Initialize 105E                  __end_of__initialization 006A  
                          ?_rtc6_SetTime 004C                          ??_i2c_setBuffer 0022  
         _do_I2C_SEND_ADR_READ$intlevel0 100A                         _do_I2C_SEND_STOP 1F44  
                           i1_returnStop 1E69                    i1_do_I2C_DO_NACK_STOP 1EB7  
                     __size_of_do_I2C_RX 0046                       __size_of_do_I2C_TX 0050  
                     ?i1_do_I2C_TX_EMPTY 0070                       ?_SYSTEM_Initialize 0070  
             __end_of_mssp1_IRQisEnabled 1F14        _rdBlkRegCompleteHandler$intlevel0 11BE  
                    _i2c_masterOperation 127C                 __size_of_do_I2C_TX_EMPTY 002E  
                    ___bmul@multiplicand 0020                          ??i1_do_I2C_IDLE 0070  
                        ??i1_do_I2C_RCEN 0070                  _rdBlkRegCompleteHandler 11BA  
             __end_of_mssp1_waitForEvent 1FDD                              ?_i2c_poller 0070  
                        _OLED_Initialize 0A9C                           __pcstackCOMMON 0070  
             ??i1_do_I2C_DO_NACK_RESTART 0070                      _do_I2C_TX$intlevel0 1762  
                    ??i1_do_I2C_TX_EMPTY 0070                             __pidataBANK1 102A  
                    ??_SYSTEM_Initialize 0036                         _mssp1_disableIRQ 1E86  
                  i1_i2c1_driver_sendACK 1E9B                            __end_of_dylen 14F7  
                  i1i2c1_driver_TXData@d 0070                          ?i1_do_I2C_RESET 0070  
                  i1_i2c1_driver_restart 1E71                   __end_of_PMD_Initialize 1F2C  
                      __end_of_i2c_close 119E                             ?i1_do_I2C_RX 0070  
                           ?i1_do_I2C_TX 0070                    i1_i2c1_driver_startRX 1E77  
                       ??i1_mssp1_setIRQ 0070                      i1i2c_restartWrite@p 0079  
              i1_rdBlkRegCompleteHandler 113C                     ?_i2c_masterOperation 0070  
         i1i2c_setDataCompleteCallback@p 0077             ??i1_do_I2C_SEND_RESTART_READ 0070  
                __size_of_months_to_days 001F                   __size_ofi1_setCallBack 0024  
                        i1setCallBack@cb 0070                 i1rd1RegCompleteHandler@p 0079  
                        i1_do_I2C_DO_ACK 1EB3                           ??_rtc6_GetTime 0063  
                        i1_do_I2C_TX$723 0072                           setCallBack@idx 0024  
              __end_ofi1_do_I2C_TX_EMPTY 1314                   _do_I2C_DO_NACK_RESTART 1F5C  
                 ??i1_i2c1_driver_TXData 0070                                  ??_dylen 0036  
              __end_of_SYSTEM_Initialize 106D                     __size_of_OLED_SetRow 000B  
              ??i1_rd1RegCompleteHandler 007A                             sprintf@width 0050  
                           ??_OLED_Clear 002A                        ??_SPI2_Initialize 0020  
                         _mssp1_clearIRQ 1E83                               __pbssBANK0 006A  
                             __pbssBANK1 00C7                               __pbssBANK2 0120  
              ??i1_wr1RegCompleteHandler 007A                           ??_rtc6_SetTime 0050  
         __size_of_rd2RegCompleteHandler 0016                                ?_i2c_open 0070  
          __end_of_rd2RegCompleteHandler 113C                 ??i1_i2c1_driver_sendNACK 0070  
         __size_of_wr2RegCompleteHandler 0016                   ??i1_i2c1_driver_isNACK 0070  
       __size_ofi1_rd2RegCompleteHandler 0010            __end_of_wr2RegCompleteHandler 10FA  
                __end_of_i2c_masterWrite 1ECB                              _Modify_Data 0A2B  
               i1wr1RegCompleteHandler@p 0079                    _rd1RegCompleteHandler 1110  
                 ?_i2c1_driver_getRXData 0070                 ??i1_i2c1_driver_resetBus 0070  
               __size_of_rtc6_Initialize 0059                  __end_ofi1_i2c_setBuffer 105E  
                     __size_of_localtime 0045               __size_of_SPI2_Exchange8bit 000C  
       __size_ofi1_wr2RegCompleteHandler 0010                    _do_I2C_IDLE$intlevel0 1F7A  
                  _wr1RegCompleteHandler 10FA                           _SSP1DATPPSbits 0EC6  
           __size_of_i2c_busCollisionISR 0003          _wr1RegCompleteHandler$intlevel0 10FE  
        _rd1RegCompleteHandler$intlevel0 1114                               __pmaintext 0CA0  
                          ??_do_I2C_IDLE 0020                  ?_i2c_write1ByteRegister 002A  
                   __size_of_setCallBack 0025                            ??_do_I2C_RCEN 0020  
                                ?___bmul 0020                                  ?___lmul 0020  
                                ?___wmul 0020                          __CFG_PPS1WAY$ON 0000  
                        ??_do_I2C_DO_ACK 0020                               __pintentry 0004  
                        _OLED_PutPicture 14F7                              ?_SetupClock 0070  
                                ?_gmtime 0070                                  ?_memset 0020  
                                ?_isleap 0034                           ___lmul@product 0028  
                    i2c_setBuffer@buffer 0023                                  ?_mktime 0050  
                         _SSP2DATPPSbits 0EC9                           _SSP1CLKPPSbits 0EC5  
                        ?_PMD_Initialize 0070                       __end_of_OLED_Clear 08F4  
         ?_i2c1_driver_clearBusCollision 0070                                  ?_strlen 0020  
                  ??_i2c_masterOperation 0027                        ?_i2c1_driver_open 0070  
                      __end_of_do_I2C_RX 1632                        __end_of_do_I2C_TX 17AE  
                      ?_i2c1_driver_stop 0070                 ?i1_do_I2C_SEND_ADR_WRITE 0070  
                     __size_of_rtcc_read 000A                   ?_i2c1_driver_setI2cISR 0020  
                     ??_i2c1_driver_open 0020                       ??_i2c1_driver_stop 0020  
                                _OSCCON1 088D                                  _OSCCON3 088F  
                          ?_mssp1_setIRQ 0070                           _SSP2CLKPPSbits 0EC8  
                                _OSCTUNE 0892                                  _SSP1ADD 018D  
                                _SSP2ADD 0197                                  _SSP1BUF 018C  
                 __end_of_mssp1_clearIRQ 1E86                                  _SSP2BUF 0196  
                                _SSP1MSK 018E                      __size_of_i2c_poller 000B  
                        ??_ymd_to_scalar 0046                  ??_do_I2C_SEND_ADR_WRITE 0021  
          i2c_write1ByteRegister@address 002D      _do_I2C_SEND_RESTART_WRITE$intlevel0 1F38  
            ??_do_I2C_SEND_RESTART_WRITE 0020                   ?i1_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_TXData 1EF3                               ??_i2c_open 0022  
                     _i2c1_driver_i2cISR 007A                  __end_of_OLED_Initialize 0B16  
                                _i2c_ISR 133E                ??_rdBlkRegCompleteHandler 002A  
                             _emptyArray 006E           __end_of_i2c_write1ByteRegister 1457  
                  _returnReset$intlevel0 1EEB                    _do_I2C_RCEN$intlevel0 1F97  
                          i1_setCallBack 1258                       _i2c1_driver_isNACK 1F6D  
                    ?_i2c1_driver_TXData 0070         _do_I2C_DO_ADDRESS_NACK$intlevel0 1318  
                 ?i1_i2c1_driver_sendACK 0070                     __CFG_SCANE$available 0000  
    __size_of_i2c_setAddressNACKCallback 000D                                  ___aldiv 0B96  
                        __size_of___bmul 0012                                  ___almod 094D  
                 __size_ofi1_returnReset 0002                                  ___awdiv 17AE  
                        __size_of___lmul 0030                                  ___awmod 1632  
              __size_ofi1_mssp1_clearIRQ 0003                          __size_of___wmul 001C  
                                ___lwdiv 148B                   ?i1_i2c1_driver_restart 0070  
                                ___lwmod 136B                        ??_do_I2C_TX_EMPTY 0020  
                    ?_i2c1_driver_isNACK 0070                   ?i1_i2c1_driver_startRX 0070  
                        __size_of_gmtime 0152                          __size_of_memset 0019  
                        __size_of_isleap 0034                     __end_of_OLED_Command 1F93  
                __end_ofi1_do_I2C_DO_ACK 1EB7                          __size_of_mktime 0121  
                                __ptext1 0B16                                  __ptext2 1530  
                                __ptext3 17AE                                  __ptext4 15A7  
                                __ptext5 0EAE                                  __ptext6 14C0  
                                __ptext7 1632                                  __ptext8 094D  
                                __ptext9 0B96              __size_ofi1_i2c1_driver_stop 0003  
                    __end_of_do_I2C_IDLE 1F7F                      __end_of_do_I2C_RCEN 1F9D  
                        __size_of_strlen 001F                                  _dpowers 1861  
                  _OSCILLATOR_Initialize 1F64                                  _isdigit 106D  
            __end_of_do_I2C_SEND_RESTART 1F44                           ??_mssp1_setIRQ 0020  
                       ___awmod@dividend 0022                             Modify_Data@c 0026  
                       ___aldiv@dividend 0024                             Modify_Data@j 0039  
                           Modify_Data@p 0037                     ??_i2c1_driver_TXData 0020  
                      __end_of_localtime 15EC                            mktime@timeptr 005E  
               ??_PIN_MANAGER_Initialize 0020                                  _moninit 1855  
                 i2c_masterOperation@ret 0029                       i1_do_I2C_SEND_STOP 1EAF  
                        ?_mssp1_clearIRQ 0070               _do_I2C_SEND_STOP$intlevel0 1F48  
             __size_ofi1_do_I2C_TX_EMPTY 0029                 _do_I2C_SEND_RESTART_READ 1F2C  
             __size_of_SYSTEM_Initialize 000F                  i2c_read1ByteRegister@d2 0030  
                                _sprintf 0624                                  clrloop0 1013  
                   __size_of_returnReset 0006                     end_of_initialization 006A  
                   ??_i2c1_driver_isNACK 0020                  __size_of_OLED_SetColumn 0017  
                                dylen@yr 0034                      __size_of_SetupClock 0001  
              __size_of_i2c_restartWrite 0006                                  init_ram 101E  
                                memset@c 0022             __end_of_i2c1_driver_sendNACK 1EC7  
                    ?i1_do_I2C_SEND_STOP 0070                                  memset@n 0024  
                                memset@p 0026                   ?_rd1RegCompleteHandler 0029  
                                initloop 101F          __size_ofi1_i2c1_driver_sendNACK 0004  
                         main@welcomeMsg 00B2                                _OLED_Data 1F7F  
                       ?_i2c_masterWrite 0070                   ?_wr1RegCompleteHandler 0029  
           __end_of_i2c1_driver_resetBus 1E68                           ?i1_setCallBack 0070  
                __end_of_OLED_PutPicture 1530                        __end_of_rtcc_read 1FB1  
                       ?i1_i2c_setBuffer 0070          __size_ofi1_i2c1_driver_resetBus 0001  
                       ___aldiv@quotient 002B                     __end_of_rtc6_GetTime 0CA0  
              _do_I2C_SEND_RESTART_WRITE 1F34                               main@F15398 00E4  
                      ??_rtc6_Initialize 0033                    i1_do_I2C_SEND_RESTART 1EAB  
       __end_ofi1_do_I2C_DO_ADDRESS_NACK 1258          __end_ofi1_do_I2C_SEND_ADR_WRITE 1F0D  
                  __CFG_WDTCPS$WDTCPS_31 0000                                  strlen@s 0020  
                              i1_i2c_ISR 12C5                     ??i1_do_I2C_SEND_STOP 0070  
                           _displayArray 21B1                     __end_of_rtc6_SetTime 0B96  
                             _returnStop 1EE1          __end_of_rdBlkRegCompleteHandler 11D7  
               __end_of_do_I2C_SEND_STOP 1F4C       __end_ofi1_do_I2C_SEND_RESTART_READ 1EA7  
             i1_do_I2C_SEND_RESTART_READ 1EA3                               _rtcc_write 10BC  
                ??_i2c_read1ByteRegister 002B                     __size_ofi1_do_I2C_RX 003E  
                   __size_ofi1_do_I2C_TX 004A                           _months_to_days 11F6  
                             asctime@buf 012E     __size_of_i2c_setDataCompleteCallback 000D  
                          i1_returnReset 0800                              returnStop@p 0029  
                       __CFG_FEXTOSC$OFF 0000                 __end_of_mssp1_disableIRQ 1E89  
     __size_ofi1_rdBlkRegCompleteHandler 0017             i2c_setDataCompleteCallback@p 0027  
                     OLED_SetRow@address 0023                  i1_rd2RegCompleteHandler 10AC  
                       ?_OLED_Initialize 0070                               ?_OLED_Data 0070  
                i1_wr2RegCompleteHandler 107C                    SPI2_Exchange8bit@data 0020  
          __size_of_do_I2C_SEND_ADR_READ 000C                         ??i1_do_I2C_RESET 0070  
                           ??_i2c_poller 0027                    __end_of_years_to_days 0A2B  
                            _do_I2C_IDLE 1F76                         OLED_PutPicture@i 0028  
                       OLED_PutPicture@j 0026                              _do_I2C_RCEN 1F93  
             __end_ofi1_i2c_restartWrite 0004                           __end_of___bmul 0800  
                         __end_of___lmul 1425                            __pidataBIGRAM 026E  
                         __end_of___wmul 11BA                               ?i1_i2c_ISR 0070  
                     _mssp1_IRQisEnabled 1F0D                   i1_i2c1_driver_sendNACK 1E9F  
                       ?i1_do_I2C_DO_ACK 0070                           __end_of_gmtime 1000  
                 ?_OSCILLATOR_Initialize 0070                           __end_of_memset 1183  
                         __end_of_isleap 148B                   __end_of_months_to_days 1215  
                        _SPI2_Initialize 1EDB                           __end_of_mktime 0EAE  
           __size_of_do_I2C_DO_NACK_STOP 0008                           __end_of_lookup 0624  
                        ymd_to_scalar@mo 0042                          ymd_to_scalar@yr 0040  
                     _mssp1_waitForEvent 1FD2                   i1_i2c1_driver_resetBus 1E66  
                         __end_of_strlen 11F6                  ?_do_I2C_DO_NACK_RESTART 0070  
                    start_initialization 0024                                _i2c_close 1183  
                    _i2c_busCollisionISR 1E6E          __size_of_PIN_MANAGER_Initialize 0042  
                    ?_mssp1_IRQisEnabled 0070                           ?i1_returnReset 0079  
               ?i1_i2c1_driver_getRXData 0070      __end_ofi1_do_I2C_SEND_RESTART_WRITE 1EAB  
            i1_do_I2C_SEND_RESTART_WRITE 1EA7                      ?_mssp1_waitForEvent 0070  
                           setCallBack@p 0022                       __end_of_i2c_poller 1FE8  
           __size_of_i2c1_driver_sendACK 0004                          i2c_open@address 0023  
                i2c_setBuffer@bufferSize 0020                  ??_i2c1_driver_getRXData 0020  
                      _rtc6_GetComponent 1215                   rd1RegCompleteHandler@p 0029  
           __size_of_i2c1_driver_restart 0003                          ??i1_setCallBack 0073  
           __size_of_i2c1_driver_startRX 0003                             ?_Modify_Data 0026  
                     ?_rtc6_GetComponent 0033                    __end_of_i2c_setBuffer 10E4  
                      __size_of_i2c_open 004E    __end_ofi1_i2c_setDataCompleteCallback 1FF4  
 __size_ofi1_i2c_setDataCompleteCallback 000C            i1_i2c_setDataCompleteCallback 1FE8  
                       ?_OLED_PutPicture 0024                     ?_i2c_busCollisionISR 0070  
                       __CFG_LPBOREN$OFF 0000                     __end_of_mssp1_setIRQ 1E9B  
                   ??_mssp1_IRQisEnabled 0020                         i1setCallBack@idx 0074  
                  __size_of_OLED_Command 000A                                 ??___bmul 0021  
                       ??_PMD_Initialize 0020                    __end_ofi1_do_I2C_IDLE 1ED5  
                               ??___lmul 0028             i2c_read1ByteRegister@address 002C  
                  __end_ofi1_do_I2C_RCEN 1EDB                i1i2c_setBuffer@bufferSize 0070  
                               ??___wmul 0024                   ?i1_do_I2C_SEND_RESTART 0070  
                    ??_rtc6_GetComponent 0034                     ??_mssp1_waitForEvent 0020  
                       i1_mssp1_clearIRQ 1E80                   wr1RegCompleteHandler@p 0029  
                          ?_do_I2C_RESET 0070                              __pdataBANK1 00E4  
                           ??_SetupClock 0020                                 ??_gmtime 0038  
                               ??_memset 0026                                 ??_isleap 0036  
              _do_I2C_TX_EMPTY$intlevel0 139C                                 ??_mktime 0054  
                            ?_returnStop 0029                  ??_i2c1_driver_setI2cISR 0022  
                               ??_strlen 0022           __end_of_do_I2C_DO_NACK_RESTART 1F64  
                            ?_rtcc_write 002E                          ?_months_to_days 002E  
                             localtime@t 0047                     _i2c1_driver_sendNACK 1EC3  
                            __pbssBIGRAM 238C                 i1_do_I2C_DO_ADDRESS_NACK 1235  
                          ??_OLED_SetRow 0022                              __pbssCOMMON 007A  
                             ?_i2c_close 0070                                ___latbits 0002  
                   _i2c1_driver_resetBus 1E67                            __pcstackBANK0 0020  
                          __pcstackBANK1 00A0        __size_ofi1_do_I2C_DO_NACK_RESTART 0004  
               i1rd2RegCompleteHandler@p 0079                                _do_I2C_RX 15EC  
              ?i1_do_I2C_DO_NACK_RESTART 0070                                _do_I2C_TX 175E  
                          ?_Write_String 0053                  ??i1_do_I2C_DO_NACK_STOP 0070  
                           _isdigit$2032 0020                ??i1_rd2RegCompleteHandler 007A  
              __end_of_rtc6_GetComponent 1235                           _OLED_SetColumn 1153  
         __size_of_do_I2C_SEND_ADR_WRITE 000B                ??i1_wr2RegCompleteHandler 007A  
          __size_ofi1_i2c1_driver_TXData 0005            __end_of_do_I2C_SEND_ADR_WRITE 1FD2  
                         i1setCallBack@p 0072                         _i2c_restartWrite 1EED  
                            sprintf@flag 004F               _i2c_restartWrite$intlevel0 1EF1  
                           _OLED_Command 1F89                __size_of_i2c1_driver_open 000A  
                     __end_of_SetupClock 1E69                __size_of_i2c1_driver_stop 0003  
                            sprintf@prec 004A                                 ?_i2c_ISR 0070  
        _do_I2C_SEND_ADR_WRITE$intlevel0 1FCB         __size_ofi1_do_I2C_SEND_ADR_WRITE 0007  
                            ??_OLED_Data 0021                          _do_I2C_TX_EMPTY 1398  
                          ??_setCallBack 0023                    __size_of_rtc6_GetTime 0088  
                  OLED_SetColumn@address 0023                 i1wr2RegCompleteHandler@p 0079  
                ??i1_i2c1_driver_sendACK 0070                    _rd2RegCompleteHandler 1126  
                  ??_i2c_busCollisionISR 0070                    __end_of_fsmStateTable 1820  
          __size_ofi1_i2c1_driver_isNACK 0008                         ___lwdiv@dividend 0028  
                 _PIN_MANAGER_Initialize 0802                    _wr2RegCompleteHandler 10E4  
                ??i1_i2c1_driver_restart 0070                  ??i1_i2c1_driver_startRX 0070  
                  __size_of_rtc6_SetTime 0080                                 ?___aldiv 0020  
                __end_of_SPI2_Initialize 1EE1                                 ?___almod 0020  
                         ??_do_I2C_RESET 0020                                 ?___awdiv 0020  
                              __ptext100 12C5                                __ptext101 1E80  
                              __ptext110 1F1C                                __ptext102 1569  
                              __ptext111 1EAF                                __ptext103 1678  
                              __ptext120 1ECB                                __ptext112 1EAB  
                              __ptext104 1235                                __ptext121 1E7A  
                              __ptext113 1EA7                                __ptext105 1EBB  
                              __ptext130 0800                                __ptext122 1E9F  
                              __ptext114 1EA3                                __ptext106 1EB7  
                              __ptext131 1E69                                __ptext123 1E66  
                              __ptext115 1ED0                                __ptext107 1EB3  
                              __ptext140 1E6B                                __ptext132 107C  
                              __ptext124 1E77                                __ptext116 1EFF  
                              __ptext108 1ED5                                __ptext133 1FE8  
                              __ptext125 113C                                __ptext117 12EB  
                              __ptext109 1F06                                __ptext134 1258  
                              __ptext126 10AC                                __ptext118 1E7D  
                              __ptext135 1050                                __ptext127 109C  
                              __ptext119 1F14                                __ptext136 1E74  
                              __ptext128 108C                                __ptext137 1E71  
                              __ptext129 0002                                __ptext138 1E9B  
                              __ptext139 1E6E                                 ?___awmod 0020  
            __end_of_i2c_masterOperation 12A0                                 ?___lwdiv 0026  
               ??_do_I2C_DO_ADDRESS_NACK 0020                                 ?___lwmod 002E  
            _i2c1_driver_busCollisionISR 007C                    __end_of_do_I2C_DO_ACK 1F54  
                            ??i1_i2c_ISR 0074             ??_INTERRUPT_InterruptManager 0077  
                       ___almod@dividend 0024               ??_do_I2C_SEND_RESTART_READ 0020  
                  ?_i2c1_driver_sendNACK 0070          __end_ofi1_i2c1_driver_getRXData 1E7D  
               ??i1_do_I2C_SEND_ADR_READ 0071                         ??_mssp1_clearIRQ 0020  
                        ??i1_returnReset 007A                                 ?_isdigit 0070  
                  ?_i2c1_driver_resetBus 0070                 ?i1_rd1RegCompleteHandler 0079  
     __size_of_do_I2C_SEND_RESTART_WRITE 0008                           ??_Write_String 0055  
               ?i1_wr1RegCompleteHandler 0079                               ?_do_I2C_RX 0070  
                             ?_do_I2C_TX 0070                         ___lwdiv@quotient 002B  
                 __end_of_OLED_SetColumn 116A                        _i2c1_driver_start 1E89  
                               ?_sprintf 0034                             _rtc6_GetTime 0C18  
                         __size_of_dylen 0037                  ??_rd1RegCompleteHandler 002A  
                              _localtime 15A7                  __size_ofi1_mssp1_setIRQ 0003  
                      _i2c_ISR$intlevel0 1342                       ?_i2c1_driver_start 0070  
                    __end_of_OLED_SetRow 1FBC                    __end_of_ymd_to_scalar 089B  
                ??_wr1RegCompleteHandler 002A                          ___aldiv@divisor 0020  
                        ___aldiv@counter 0029                           ___wmul@product 0024  
                           _rtc6_SetTime 0B16                   i2c_read1ByteRegister@e 002D  
                               _LATAbits 0016                   i2c_read1ByteRegister@x 002E  
                               _LATCbits 0018                                 _LATDbits 0019  
                        _rtc6_Initialize 08F4                      __size_of_returnStop 0006  
                              clear_ram0 1012                                 _PIE3bits 0719  
                    __size_of_rtcc_write 0013                      ??_i2c1_driver_start 0020  
    __size_of_INTERRUPT_InterruptManager 001E                                 _PIR3bits 070F  
                               _SSP1CON1 0190                                 _SSP1CON2 0191  
                               _SSP2CON1 019A                                _time_zone 006E  
           ?_i2c_setDataCompleteCallback 0025           ?i1_i2c_setDataCompleteCallback 0075  
                              _rtcc_read 1FA7                                 _SSP1STAT 018F  
                               _SSP2STAT 0199                      __end_of_setCallBack 12C5  
             __end_ofi1_i2c1_driver_stop 1E77                        ___wmul@multiplier 0020  
           i2c_setAddressNACKCallback@cb 0025                          Write_String@len 0055  
                      ?_do_I2C_SEND_STOP 0070              ?i1_do_I2C_SEND_RESTART_READ 0070  
                         _CharacterArray 238C                              ??_i2c_close 0020  
              __end_of_i2c1_driver_start 1E8C                            ??_returnReset 002A  
                     ??_do_I2C_SEND_STOP 0020              __size_of_i2c1_driver_TXData 0006  
         __size_of_i2c_read1ByteRegister 004E             ??_i2c_setAddressNACKCallback 0028  
          __end_of_i2c_read1ByteRegister 175E        __end_of_do_I2C_SEND_RESTART_WRITE 1F3C  
                      Modify_Data@offset 0028                  __end_of_do_I2C_TX_EMPTY 13C6  
                        ?_OLED_SetColumn 0070               __size_of_rtc6_GetComponent 0020  
                      ___lmul@multiplier 0020                    rtc6_GetComponent@mask 0033  
                  rtc6_SetComponent@mask 0033                               ?_localtime 0070  
               ?_rdBlkRegCompleteHandler 0029                    rtc6_SetComponent@time 0034  
                      ?_mssp1_disableIRQ 0070             __size_of_do_I2C_SEND_RESTART 0008  
            __size_of_i2c1_driver_isNACK 0009                  _do_I2C_DO_ACK$intlevel0 1F50  
                               _i2c_open 16C2                            ?i1_returnStop 0079  
                  __size_of_mssp1_setIRQ 0003                         rtc6_GetTime@tm_t 00A0  
                     ??_mssp1_disableIRQ 0020                   ?_rd2RegCompleteHandler 0029  
                    _do_I2C_DO_NACK_STOP 1F54                         __size_of_i2c_ISR 002D  
                 ?_wr2RegCompleteHandler 0029          _wr2RegCompleteHandler$intlevel0 10E8  
        _rd2RegCompleteHandler$intlevel0 112A                                gmtime@tim 0149  
                   __size_of_Modify_Data 0071                             ?_do_I2C_IDLE 0070  
                           ?_do_I2C_RCEN 0070                         ?_SPI2_Initialize 0070  
                ?i1_i2c1_driver_sendNACK 0070                  ??_OSCILLATOR_Initialize 0020  
                             ?_rtcc_read 0070                         __size_of___aldiv 0082  
                       __size_of___almod 006E                      _i2c1_driver_sendACK 1EBF  
               __size_of_i2c_masterWrite 0004                         __size_of___awdiv 0052  
                       __size_of___awmod 0046          __size_of_do_I2C_DO_ADDRESS_NACK 002A  
                    i2c1_driver_TXData@d 0020                    i1i2c_setBuffer@buffer 0073  
                       __size_of___lwdiv 0035                   ??_i2c1_driver_sendNACK 0020  
                       __size_of___lwmod 002D            ??_i2c_setDataCompleteCallback 0028  
        __end_ofi1_rd1RegCompleteHandler 10AC                  ?i1_i2c1_driver_resetBus 0070  
               __size_ofi1_i2c_setBuffer 000E         ??_i2c1_driver_setBusCollisionISR 0022  
        ?_i2c1_driver_setBusCollisionISR 0020                            ??i1_do_I2C_RX 0070  
                          ??i1_do_I2C_TX 0071       _do_I2C_SEND_RESTART_READ$intlevel0 1F30  
                    _i2c1_driver_restart 1E8C              __size_ofi1_do_I2C_SEND_STOP 0004  
        __end_ofi1_wr1RegCompleteHandler 109C                     ?_do_I2C_DO_NACK_STOP 0070  
                    _i2c1_driver_startRX 1E92             __end_of_do_I2C_SEND_ADR_READ 1012  
                 ??_i2c1_driver_resetBus 0020                              _isleap$2100 0038  
        __size_ofi1_do_I2C_SEND_ADR_READ 0008                               sprintf@len 004B  
                             sprintf@val 004D                                 _dateTime 0120  
                       __size_of_isdigit 000F                              _OLED_SetRow 1FB1  
                     i1_i2c_restartWrite 0002                          ___lwdiv@divisor 0026  
                           _mssp1_setIRQ 1E98                              ??_do_I2C_RX 0020  
                            ??_do_I2C_TX 0021                       __end_of_emptyArray 0249  
                        ___lwdiv@counter 002D                                 __ptext10 0C18  
                               __ptext11 1215                                 __ptext20 13C6  
                               __ptext12 07EE                                 __ptext21 11D7  
                               __ptext13 0D8D                                 __ptext30 08F4  
                               __ptext22 0624                                 __ptext14 0844  
                               __ptext31 10BC                                 __ptext23 106D  
                               __ptext15 09BB                                 __ptext40 1EC7  
                               __ptext32 1425                                 __ptext24 136B  
                               __ptext16 13F5                                 __ptext41 127C  
                               __ptext33 1FA7                                 __ptext25 148B  
                               __ptext17 11F6                                 __ptext50 1F54  
                               __ptext42 1F0D                                 __ptext34 1710  
                               __ptext26 0A2B                                 __ptext18 1457  
                               __ptext51 1F4C                                 __ptext43 1FDD  
                               __ptext35 1043                                 __ptext27 119E  
                               __ptext19 116A                                 __ptext60 1FBC  
                               __ptext52 1F93                                 __ptext44 1FD2  
                               __ptext36 16C2                                 __ptext28 1E68  
                               __ptext61 1398                                 __ptext53 1FC7  
                               __ptext45 133E                                 __ptext37 1000  
                               __ptext29 105E                                 __ptext70 1126  
                               __ptext62 1E98                                 __ptext54 1006  
                               __ptext46 15EC                                 __ptext38 1EF9  
                               __ptext71 1110                                 __ptext63 1F6D  
                               __ptext55 1F44                                 __ptext47 175E  
                               __ptext39 1F9D                                 __ptext80 1E8F  
                               __ptext72 10FA                                 __ptext64 1EF3  
                               __ptext56 1F3C                                 __ptext48 1314  
                               __ptext81 1E8C                                 __ptext73 1EED  
                               __ptext65 1E95                                 __ptext57 1F34  
                               __ptext49 1F5C                                 __ptext90 1F64  
                               __ptext82 1EBF                                 __ptext74 1EE7  
                               __ptext66 1EC3                                 __ptext58 1F2C  
                               __ptext91 0A9C                                 __ptext83 1E89  
                               __ptext75 1EE1                                 __ptext67 1E67  
                               __ptext59 1F76                                 __ptext92 089B  
                               __ptext84 1183                                 __ptext76 10E4  
                               __ptext68 1E92                                 __ptext93 14F7  
                               __ptext85 1E86                                 __ptext77 1036  
                               __ptext69 11BA                                 __ptext94 1FB1  
                               __ptext86 1E83                                 __ptext78 12A0  
                               __ptext95 1153                                 __ptext87 1EDB  
                               __ptext79 10CF                                 __ptext96 1F89  
                               __ptext88 1F24                                 __ptext97 1F7F  
                               __ptext89 0802                                 __ptext98 1FF4  
                           _SSP1CON1bits 0190                             _SSP1CON2bits 0191  
                __end_of_rtc6_Initialize 094D                 __end_ofi1_mssp1_clearIRQ 1E83  
                           _SSP2CON1bits 019A                     ?_i2c1_driver_sendACK 0070  
                   __end_of_do_I2C_RESET 1FC7                          ___almod@divisor 0020  
                       __size_of_sprintf 01CA                          ___almod@counter 0029  
               ??_i2c_write1ByteRegister 002C                           ??i1_returnStop 007A  
                          OLED_Data@temp 0021                         OLED_Clear@j_1662 002D  
                i1_do_I2C_SEND_ADR_WRITE 1F06                      ?i1_i2c_restartWrite 0079  
                   ?_i2c1_driver_restart 0070                      __end_of_returnReset 1EED  
                       _i2c1_driver_open 1F9D                         _i2c1_driver_stop 1E8F  
                          __size_of_main 00ED                     ?_i2c1_driver_startRX 0070  
         __size_of_i2c1_driver_getRXData 0003            __end_of_i2c1_driver_getRXData 1E98  
                   __CFG_WDTCWS$WDTCWS_7 0000                              _setCallBack 12A0  
                ??i1_do_I2C_SEND_RESTART 0070         __size_ofi1_i2c1_driver_getRXData 0003  
                i2c_masterOperation@read 0028     __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004  
         __end_ofi1_i2c1_driver_sendNACK 1EA3                     __end_of_Write_String 13F5  
                               _timezone 006A                                 int$flags 007E  
             ??i1_do_I2C_DO_ADDRESS_NACK 0070                 __size_of_OLED_Initialize 007A  
                       ??_months_to_days 0030         __end_ofi1_do_I2C_DO_NACK_RESTART 1EBF  
         __end_ofi1_i2c1_driver_resetBus 1E67       __end_of_INTERRUPT_InterruptManager 0022  
             _INTERRUPT_InterruptManager 0004                             _SSP1STATbits 018F  
                   ??i1_i2c_restartWrite 007A                                 main@tm_t 00C2  
       __end_of_do_I2C_SEND_RESTART_READ 1F34                 i2c_read1ByteRegister@reg 002A  
                           ??_returnStop 002A                 __end_of_i2c_restartWrite 1EF3  
                           _SSP2STATbits 0199                         Modify_Data@limit 002A  
                  ??_do_I2C_DO_NACK_STOP 0020                         Modify_Data@right 0035  
                           ??_rtcc_write 002F                       _ymd_to_scalar$2112 004A  
              mssp1_waitForEvent@timeout 0020           __size_of_i2c1_driver_setI2cISR 0006  
          __end_of_i2c1_driver_setI2cISR 1006                               _INTCONbits 000B  
             __size_of_i2c1_driver_start 0003                                 gmtime@tc 003B  
                               gmtime@tp 003A                      __end_ofi1_do_I2C_RX 15A7  
                    __end_ofi1_do_I2C_TX 16C2                                 isdigit@c 0021  
                               memset@p1 0020                 __size_ofi1_do_I2C_DO_ACK 0004  
                 __size_of_years_to_days 0070                    ??_i2c1_driver_sendACK 0020  
                               isleap@yr 0034                         ?_do_I2C_TX_EMPTY 0070  
                         i1_mssp1_setIRQ 1E7D                              ??_localtime 003F  
                 _do_I2C_DO_ADDRESS_NACK 1314           __size_ofi1_do_I2C_DO_NACK_STOP 0004  
                               intlevel1 0000            __end_ofi1_do_I2C_DO_NACK_STOP 1EBB  
                             _OLED_Clear 089B                                sprintf@ap 0048  
                 _do_I2C_RESET$intlevel0 1FC0                                sprintf@cp 0049  
                              sprintf@sp 0034                    ??_i2c1_driver_restart 0020  
                 rd2RegCompleteHandler@p 0029                    ??_i2c1_driver_startRX 0020  
                       ___lwmod@dividend 0030                                 mktime@tt 005A  
                ?_PIN_MANAGER_Initialize 0070                        i2c_restartWrite@p 0029  
                 i1_do_I2C_SEND_ADR_READ 1F1C                        __CFG_CLKOUTEN$OFF 0000  
             ?i1_rdBlkRegCompleteHandler 0079                       __end_of_returnStop 1EE7  
                  __end_ofi1_setCallBack 127C                      ymd_to_scalar@scalar 004C  
                     __end_of_rtcc_write 10CF      __size_ofi1_do_I2C_SEND_RESTART_READ 0004  
         __size_ofi1_i2c1_driver_sendACK 0004            __end_ofi1_i2c1_driver_sendACK 1E9F  
            __size_of_mssp1_IRQisEnabled 0007           __size_ofi1_i2c1_driver_restart 0003  
          __end_ofi1_i2c1_driver_restart 1E74                   wr2RegCompleteHandler@p 0029  
                            ??_rtcc_read 0031              __size_of_mssp1_waitForEvent 000B  
         __size_ofi1_i2c1_driver_startRX 0003             __end_ofi1_i2c1_driver_TXData 1ED0  
          __end_ofi1_i2c1_driver_startRX 1E7A                 __size_of_OLED_PutPicture 0039  
                          __pstringtext1 0449                            __pstringtext2 1800  
                          __pstringtext3 1855                            __pstringtext4 1861  
                          __pstringtext5 006E                            __pstringtext6 1820  
                          __pstringtext7 183F                            __pstringtext8 0000  
                __size_ofi1_do_I2C_RESET 0007                                 sprintf@c 0052  
                               sprintf@f 0036             __end_ofi1_i2c1_driver_isNACK 1F1C  
                        ___lwmod@divisor 002E                                 strlen@cp 0024  
                      ??_i2c_masterWrite 002A       __end_of_i2c_setAddressNACKCallback 1050  
             _i2c_setAddressNACKCallback 1043                          ___lwmod@counter 0033  
                 __size_of_i2c_setBuffer 0015                             ___aldiv@sign 002A  
                 __end_ofi1_mssp1_setIRQ 1E80                        ??i1_i2c_setBuffer 0072  
                            _returnReset 1EE7         _do_I2C_DO_NACK_RESTART$intlevel0 1F60  
              ??i1_do_I2C_SEND_ADR_WRITE 0071                         ?_rtc6_Initialize 0070  
                 __size_ofi1_do_I2C_IDLE 0005                   __size_ofi1_do_I2C_RCEN 0006  
         __end_of_PIN_MANAGER_Initialize 0844              __end_of_i2c_busCollisionISR 1E71  
                           ___almod@sign 002A           __size_of_rd1RegCompleteHandler 0016  
        __size_of_i2c_write1ByteRegister 0032            __end_of_rd1RegCompleteHandler 1126  
              rtc6_SetComponent@inMemory 003B           __size_of_wr1RegCompleteHandler 0016  
                      _rtc6_SetComponent 1530         __size_ofi1_rd1RegCompleteHandler 0010  
          __end_of_wr1RegCompleteHandler 1110                    _do_I2C_SEND_ADR_WRITE 1FC7  
                   _do_I2C_SEND_ADR_READ 1006        __end_ofi1_rdBlkRegCompleteHandler 1153  
       __size_ofi1_wr1RegCompleteHandler 0010                       ?_rtc6_SetComponent 0033  
              rtc6_GetComponent@location 0037  
