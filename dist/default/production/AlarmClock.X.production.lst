

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 26 21:50:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBIGRAM,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text83,local,class=CODE,merge=1,delta=2
   109                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text86,local,class=CODE,merge=1,delta=2
   112                           	psect	text87,local,class=CODE,merge=1,delta=2
   113                           	psect	text88,local,class=CODE,merge=1,delta=2
   114                           	psect	text89,local,class=CODE,merge=1,delta=2
   115                           	psect	text90,local,class=CODE,merge=1,delta=2
   116                           	psect	text91,local,class=CODE,merge=1,delta=2
   117                           	psect	text92,local,class=CODE,merge=1,delta=2
   118                           	psect	text93,local,class=CODE,merge=1,delta=2
   119                           	psect	text94,local,class=CODE,merge=1,delta=2
   120                           	psect	text95,local,class=CODE,merge=1,delta=2
   121                           	psect	text96,local,class=CODE,merge=1,delta=2
   122                           	psect	text97,local,class=CODE,merge=1,delta=2
   123                           	psect	intentry,global,class=CODE,delta=2
   124                           	psect	text99,local,class=CODE,merge=1,delta=2
   125                           	psect	text100,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text101,local,class=CODE,merge=1,delta=2
   127                           	psect	text102,local,class=CODE,merge=1,delta=2
   128                           	psect	text103,local,class=CODE,merge=1,delta=2
   129                           	psect	text104,local,class=CODE,merge=1,delta=2
   130                           	psect	text105,local,class=CODE,merge=1,delta=2
   131                           	psect	text106,local,class=CODE,merge=1,delta=2
   132                           	psect	text107,local,class=CODE,merge=1,delta=2
   133                           	psect	text108,local,class=CODE,merge=1,delta=2
   134                           	psect	text109,local,class=CODE,merge=1,delta=2
   135                           	psect	text110,local,class=CODE,merge=1,delta=2
   136                           	psect	text111,local,class=CODE,merge=1,delta=2
   137                           	psect	text112,local,class=CODE,merge=1,delta=2
   138                           	psect	text113,local,class=CODE,merge=1,delta=2
   139                           	psect	text114,local,class=CODE,merge=1,delta=2
   140                           	psect	text115,local,class=CODE,merge=1,delta=2
   141                           	psect	text116,local,class=CODE,merge=1,delta=2
   142                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   143                           	psect	text118,local,class=CODE,merge=1,inline,delta=2
   144                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   145                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   146                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   147                           	psect	text122,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text123,local,class=CODE,merge=1,inline,delta=2
   149                           	psect	text124,local,class=CODE,merge=1,delta=2
   150                           	psect	text125,local,class=CODE,merge=1,delta=2
   151                           	psect	text126,local,class=CODE,merge=1,delta=2
   152                           	psect	text127,local,class=CODE,merge=1,delta=2
   153                           	psect	text128,local,class=CODE,merge=1,delta=2
   154                           	psect	text129,local,class=CODE,merge=1,delta=2
   155                           	psect	text130,local,class=CODE,merge=1,delta=2
   156                           	psect	text131,local,class=CODE,merge=1,delta=2
   157                           	psect	text132,local,class=CODE,merge=1,delta=2
   158                           	psect	text133,local,class=CODE,merge=1,delta=2
   159                           	psect	text134,local,class=CODE,merge=1,delta=2
   160                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   161                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   162                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   163                           	psect	text138,local,class=CODE,merge=1,delta=2
   164                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   165                           	dabs	1,0x620,48
   166                           	dabs	1,0x5BC,52
   167                           	dabs	1,0x5A0,28
   168                           	dabs	1,0x520,80
   169                           	dabs	1,0x4A0,80
   170                           	dabs	1,0x420,80
   171                           	dabs	1,0x3A0,80
   172                           	dabs	1,0x320,80
   173                           	dabs	1,0x2C1,47
   174                           	dabs	1,0x238C,0,_CharacterArray
   175                           	dabs	1,0x21B1,0,_displayArray
   176                           	dabs	1,0x7E,2
   177  0000                     
   178                           ; Version 1.45
   179                           ; Generated 16/11/2017 GMT
   180                           ; 
   181                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   182                           ; All rights reserved.
   183                           ; 
   184                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   185                           ; 
   186                           ; Redistribution and use in source and binary forms, with or without modification, are
   187                           ; permitted provided that the following conditions are met:
   188                           ; 
   189                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   190                           ;        conditions and the following disclaimer.
   191                           ; 
   192                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   193                           ;        of conditions and the following disclaimer in the documentation and/or other
   194                           ;        materials provided with the distribution.
   195                           ; 
   196                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   197                           ;        software without specific prior written permission.
   198                           ; 
   199                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   200                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   201                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   202                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   203                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   204                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   205                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   206                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   207                           ; 
   208                           ; 
   209                           ; Code-generator required, PIC16F18875 Definitions
   210                           ; 
   211                           ; SFR Addresses
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001C                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  008C                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010E                     	;# 
   269  010E                     	;# 
   270  010F                     	;# 
   271  0110                     	;# 
   272  0110                     	;# 
   273  0111                     	;# 
   274  0112                     	;# 
   275  0112                     	;# 
   276  0113                     	;# 
   277  0114                     	;# 
   278  0114                     	;# 
   279  0115                     	;# 
   280  0116                     	;# 
   281  0116                     	;# 
   282  0117                     	;# 
   283  0119                     	;# 
   284  0119                     	;# 
   285  0119                     	;# 
   286  011A                     	;# 
   287  011A                     	;# 
   288  011A                     	;# 
   289  011B                     	;# 
   290  011B                     	;# 
   291  011B                     	;# 
   292  011B                     	;# 
   293  011B                     	;# 
   294  011C                     	;# 
   295  011C                     	;# 
   296  011C                     	;# 
   297  011D                     	;# 
   298  011D                     	;# 
   299  011D                     	;# 
   300  011E                     	;# 
   301  011E                     	;# 
   302  011E                     	;# 
   303  011F                     	;# 
   304  011F                     	;# 
   305  011F                     	;# 
   306  011F                     	;# 
   307  011F                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  018E                     	;# 
   311  018F                     	;# 
   312  0190                     	;# 
   313  0191                     	;# 
   314  0192                     	;# 
   315  0196                     	;# 
   316  0197                     	;# 
   317  0198                     	;# 
   318  0199                     	;# 
   319  019A                     	;# 
   320  019B                     	;# 
   321  019C                     	;# 
   322  020C                     	;# 
   323  020C                     	;# 
   324  020D                     	;# 
   325  020E                     	;# 
   326  020F                     	;# 
   327  020F                     	;# 
   328  0210                     	;# 
   329  0210                     	;# 
   330  0211                     	;# 
   331  0211                     	;# 
   332  0212                     	;# 
   333  0212                     	;# 
   334  0213                     	;# 
   335  0214                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0216                     	;# 
   340  0217                     	;# 
   341  0217                     	;# 
   342  0218                     	;# 
   343  0218                     	;# 
   344  0219                     	;# 
   345  021A                     	;# 
   346  021B                     	;# 
   347  021B                     	;# 
   348  021C                     	;# 
   349  021C                     	;# 
   350  021D                     	;# 
   351  021D                     	;# 
   352  021E                     	;# 
   353  021F                     	;# 
   354  028C                     	;# 
   355  028C                     	;# 
   356  028D                     	;# 
   357  028D                     	;# 
   358  028E                     	;# 
   359  028F                     	;# 
   360  0290                     	;# 
   361  0290                     	;# 
   362  0291                     	;# 
   363  0292                     	;# 
   364  0292                     	;# 
   365  0293                     	;# 
   366  0293                     	;# 
   367  0294                     	;# 
   368  0295                     	;# 
   369  0296                     	;# 
   370  0296                     	;# 
   371  0297                     	;# 
   372  0298                     	;# 
   373  0298                     	;# 
   374  0299                     	;# 
   375  0299                     	;# 
   376  029A                     	;# 
   377  029B                     	;# 
   378  029C                     	;# 
   379  029C                     	;# 
   380  029D                     	;# 
   381  030C                     	;# 
   382  030C                     	;# 
   383  030D                     	;# 
   384  030E                     	;# 
   385  030F                     	;# 
   386  0310                     	;# 
   387  0310                     	;# 
   388  0311                     	;# 
   389  0312                     	;# 
   390  0313                     	;# 
   391  0314                     	;# 
   392  0314                     	;# 
   393  0315                     	;# 
   394  0316                     	;# 
   395  0317                     	;# 
   396  0318                     	;# 
   397  0318                     	;# 
   398  0319                     	;# 
   399  031A                     	;# 
   400  031B                     	;# 
   401  031C                     	;# 
   402  031C                     	;# 
   403  031D                     	;# 
   404  031E                     	;# 
   405  031F                     	;# 
   406  038C                     	;# 
   407  038D                     	;# 
   408  038E                     	;# 
   409  0390                     	;# 
   410  0391                     	;# 
   411  0392                     	;# 
   412  040C                     	;# 
   413  040D                     	;# 
   414  040E                     	;# 
   415  040F                     	;# 
   416  0410                     	;# 
   417  0411                     	;# 
   418  0416                     	;# 
   419  0416                     	;# 
   420  0417                     	;# 
   421  0418                     	;# 
   422  0418                     	;# 
   423  0419                     	;# 
   424  041A                     	;# 
   425  041A                     	;# 
   426  041B                     	;# 
   427  041C                     	;# 
   428  041C                     	;# 
   429  041D                     	;# 
   430  041E                     	;# 
   431  041F                     	;# 
   432  048C                     	;# 
   433  048C                     	;# 
   434  048D                     	;# 
   435  048E                     	;# 
   436  048F                     	;# 
   437  048F                     	;# 
   438  0490                     	;# 
   439  0491                     	;# 
   440  0492                     	;# 
   441  0492                     	;# 
   442  0493                     	;# 
   443  0494                     	;# 
   444  0495                     	;# 
   445  0495                     	;# 
   446  0496                     	;# 
   447  0497                     	;# 
   448  0498                     	;# 
   449  0499                     	;# 
   450  049A                     	;# 
   451  049B                     	;# 
   452  049C                     	;# 
   453  049D                     	;# 
   454  050C                     	;# 
   455  050C                     	;# 
   456  050D                     	;# 
   457  050E                     	;# 
   458  050F                     	;# 
   459  050F                     	;# 
   460  0510                     	;# 
   461  0511                     	;# 
   462  0512                     	;# 
   463  0512                     	;# 
   464  0513                     	;# 
   465  0514                     	;# 
   466  0515                     	;# 
   467  0515                     	;# 
   468  0516                     	;# 
   469  0517                     	;# 
   470  0518                     	;# 
   471  0519                     	;# 
   472  051A                     	;# 
   473  051B                     	;# 
   474  051C                     	;# 
   475  051D                     	;# 
   476  058C                     	;# 
   477  058C                     	;# 
   478  058D                     	;# 
   479  058E                     	;# 
   480  058F                     	;# 
   481  058F                     	;# 
   482  0590                     	;# 
   483  0591                     	;# 
   484  0592                     	;# 
   485  0593                     	;# 
   486  060C                     	;# 
   487  060D                     	;# 
   488  060E                     	;# 
   489  060F                     	;# 
   490  0610                     	;# 
   491  0611                     	;# 
   492  0612                     	;# 
   493  0613                     	;# 
   494  0614                     	;# 
   495  0616                     	;# 
   496  0617                     	;# 
   497  0618                     	;# 
   498  0619                     	;# 
   499  061A                     	;# 
   500  061B                     	;# 
   501  061C                     	;# 
   502  061D                     	;# 
   503  061E                     	;# 
   504  068C                     	;# 
   505  068D                     	;# 
   506  068E                     	;# 
   507  068F                     	;# 
   508  0690                     	;# 
   509  0691                     	;# 
   510  0692                     	;# 
   511  0693                     	;# 
   512  0694                     	;# 
   513  070C                     	;# 
   514  070D                     	;# 
   515  070E                     	;# 
   516  070F                     	;# 
   517  0710                     	;# 
   518  0711                     	;# 
   519  0712                     	;# 
   520  0713                     	;# 
   521  0714                     	;# 
   522  0716                     	;# 
   523  0717                     	;# 
   524  0718                     	;# 
   525  0719                     	;# 
   526  071A                     	;# 
   527  071B                     	;# 
   528  071C                     	;# 
   529  071D                     	;# 
   530  071E                     	;# 
   531  0796                     	;# 
   532  0797                     	;# 
   533  0798                     	;# 
   534  0799                     	;# 
   535  079A                     	;# 
   536  079B                     	;# 
   537  080C                     	;# 
   538  080D                     	;# 
   539  080E                     	;# 
   540  080F                     	;# 
   541  0810                     	;# 
   542  0811                     	;# 
   543  0812                     	;# 
   544  0813                     	;# 
   545  0814                     	;# 
   546  081A                     	;# 
   547  081B                     	;# 
   548  081C                     	;# 
   549  081D                     	;# 
   550  081E                     	;# 
   551  081F                     	;# 
   552  088C                     	;# 
   553  088D                     	;# 
   554  088E                     	;# 
   555  088F                     	;# 
   556  0890                     	;# 
   557  0891                     	;# 
   558  0892                     	;# 
   559  0893                     	;# 
   560  0895                     	;# 
   561  0896                     	;# 
   562  0897                     	;# 
   563  0898                     	;# 
   564  0899                     	;# 
   565  089A                     	;# 
   566  089B                     	;# 
   567  090C                     	;# 
   568  090E                     	;# 
   569  090F                     	;# 
   570  091F                     	;# 
   571  091F                     	;# 
   572  098F                     	;# 
   573  098F                     	;# 
   574  0990                     	;# 
   575  0991                     	;# 
   576  0992                     	;# 
   577  0993                     	;# 
   578  0994                     	;# 
   579  0995                     	;# 
   580  0996                     	;# 
   581  0997                     	;# 
   582  0E0F                     	;# 
   583  0E10                     	;# 
   584  0E11                     	;# 
   585  0E12                     	;# 
   586  0E13                     	;# 
   587  0E14                     	;# 
   588  0E15                     	;# 
   589  0E16                     	;# 
   590  0E17                     	;# 
   591  0E18                     	;# 
   592  0E19                     	;# 
   593  0E1A                     	;# 
   594  0E1B                     	;# 
   595  0E1C                     	;# 
   596  0E1D                     	;# 
   597  0E1E                     	;# 
   598  0E1F                     	;# 
   599  0E20                     	;# 
   600  0E21                     	;# 
   601  0E22                     	;# 
   602  0E23                     	;# 
   603  0E24                     	;# 
   604  0E25                     	;# 
   605  0E26                     	;# 
   606  0E27                     	;# 
   607  0E28                     	;# 
   608  0E29                     	;# 
   609  0E2A                     	;# 
   610  0E2B                     	;# 
   611  0E2C                     	;# 
   612  0E2D                     	;# 
   613  0E2E                     	;# 
   614  0E2F                     	;# 
   615  0E30                     	;# 
   616  0E31                     	;# 
   617  0E32                     	;# 
   618  0E33                     	;# 
   619  0E34                     	;# 
   620  0E35                     	;# 
   621  0E36                     	;# 
   622  0E37                     	;# 
   623  0E8F                     	;# 
   624  0E90                     	;# 
   625  0E91                     	;# 
   626  0E92                     	;# 
   627  0E93                     	;# 
   628  0E94                     	;# 
   629  0E95                     	;# 
   630  0E96                     	;# 
   631  0E97                     	;# 
   632  0E9C                     	;# 
   633  0E9D                     	;# 
   634  0E9E                     	;# 
   635  0EA1                     	;# 
   636  0EA2                     	;# 
   637  0EA3                     	;# 
   638  0EA4                     	;# 
   639  0EA5                     	;# 
   640  0EA9                     	;# 
   641  0EAA                     	;# 
   642  0EAB                     	;# 
   643  0EAC                     	;# 
   644  0EB1                     	;# 
   645  0EB2                     	;# 
   646  0EB3                     	;# 
   647  0EB8                     	;# 
   648  0EB9                     	;# 
   649  0EBA                     	;# 
   650  0EBB                     	;# 
   651  0EBC                     	;# 
   652  0EBD                     	;# 
   653  0EBE                     	;# 
   654  0EC3                     	;# 
   655  0EC5                     	;# 
   656  0EC6                     	;# 
   657  0EC7                     	;# 
   658  0EC8                     	;# 
   659  0EC9                     	;# 
   660  0ECA                     	;# 
   661  0ECB                     	;# 
   662  0ECC                     	;# 
   663  0F10                     	;# 
   664  0F11                     	;# 
   665  0F12                     	;# 
   666  0F13                     	;# 
   667  0F14                     	;# 
   668  0F15                     	;# 
   669  0F16                     	;# 
   670  0F17                     	;# 
   671  0F18                     	;# 
   672  0F19                     	;# 
   673  0F1A                     	;# 
   674  0F1B                     	;# 
   675  0F1C                     	;# 
   676  0F1D                     	;# 
   677  0F1E                     	;# 
   678  0F1F                     	;# 
   679  0F20                     	;# 
   680  0F21                     	;# 
   681  0F22                     	;# 
   682  0F23                     	;# 
   683  0F24                     	;# 
   684  0F25                     	;# 
   685  0F26                     	;# 
   686  0F27                     	;# 
   687  0F28                     	;# 
   688  0F29                     	;# 
   689  0F2A                     	;# 
   690  0F2B                     	;# 
   691  0F2C                     	;# 
   692  0F2D                     	;# 
   693  0F2E                     	;# 
   694  0F2F                     	;# 
   695  0F30                     	;# 
   696  0F31                     	;# 
   697  0F32                     	;# 
   698  0F38                     	;# 
   699  0F39                     	;# 
   700  0F3A                     	;# 
   701  0F3B                     	;# 
   702  0F3C                     	;# 
   703  0F3D                     	;# 
   704  0F3E                     	;# 
   705  0F3F                     	;# 
   706  0F40                     	;# 
   707  0F41                     	;# 
   708  0F43                     	;# 
   709  0F44                     	;# 
   710  0F45                     	;# 
   711  0F46                     	;# 
   712  0F47                     	;# 
   713  0F48                     	;# 
   714  0F49                     	;# 
   715  0F4A                     	;# 
   716  0F4B                     	;# 
   717  0F4C                     	;# 
   718  0F4E                     	;# 
   719  0F4F                     	;# 
   720  0F50                     	;# 
   721  0F51                     	;# 
   722  0F52                     	;# 
   723  0F53                     	;# 
   724  0F54                     	;# 
   725  0F55                     	;# 
   726  0F56                     	;# 
   727  0F57                     	;# 
   728  0F59                     	;# 
   729  0F5A                     	;# 
   730  0F5B                     	;# 
   731  0F5C                     	;# 
   732  0F5D                     	;# 
   733  0F61                     	;# 
   734  0F62                     	;# 
   735  0F64                     	;# 
   736  0F65                     	;# 
   737  0F66                     	;# 
   738  0F67                     	;# 
   739  0F68                     	;# 
   740  0F69                     	;# 
   741  0F6A                     	;# 
   742  0F6B                     	;# 
   743  0F6C                     	;# 
   744  0F6D                     	;# 
   745  0FE4                     	;# 
   746  0FE5                     	;# 
   747  0FE6                     	;# 
   748  0FE7                     	;# 
   749  0FE8                     	;# 
   750  0FE9                     	;# 
   751  0FEA                     	;# 
   752  0FEB                     	;# 
   753  0FED                     	;# 
   754  0FEE                     	;# 
   755  0FEF                     	;# 
   756  0000                     	;# 
   757  0001                     	;# 
   758  0002                     	;# 
   759  0003                     	;# 
   760  0004                     	;# 
   761  0005                     	;# 
   762  0006                     	;# 
   763  0007                     	;# 
   764  0008                     	;# 
   765  0009                     	;# 
   766  000A                     	;# 
   767  000B                     	;# 
   768  000C                     	;# 
   769  000D                     	;# 
   770  000E                     	;# 
   771  000F                     	;# 
   772  0010                     	;# 
   773  0011                     	;# 
   774  0012                     	;# 
   775  0013                     	;# 
   776  0014                     	;# 
   777  0015                     	;# 
   778  0016                     	;# 
   779  0017                     	;# 
   780  0018                     	;# 
   781  0019                     	;# 
   782  001A                     	;# 
   783  001C                     	;# 
   784  001C                     	;# 
   785  001D                     	;# 
   786  001D                     	;# 
   787  001E                     	;# 
   788  001F                     	;# 
   789  008C                     	;# 
   790  008C                     	;# 
   791  008D                     	;# 
   792  008E                     	;# 
   793  008E                     	;# 
   794  008F                     	;# 
   795  0090                     	;# 
   796  0090                     	;# 
   797  0091                     	;# 
   798  0093                     	;# 
   799  0094                     	;# 
   800  0095                     	;# 
   801  0096                     	;# 
   802  0097                     	;# 
   803  0098                     	;# 
   804  0099                     	;# 
   805  009A                     	;# 
   806  009B                     	;# 
   807  009C                     	;# 
   808  009D                     	;# 
   809  009E                     	;# 
   810  010C                     	;# 
   811  010D                     	;# 
   812  010E                     	;# 
   813  010E                     	;# 
   814  010F                     	;# 
   815  0110                     	;# 
   816  0110                     	;# 
   817  0111                     	;# 
   818  0112                     	;# 
   819  0112                     	;# 
   820  0113                     	;# 
   821  0114                     	;# 
   822  0114                     	;# 
   823  0115                     	;# 
   824  0116                     	;# 
   825  0116                     	;# 
   826  0117                     	;# 
   827  0119                     	;# 
   828  0119                     	;# 
   829  0119                     	;# 
   830  011A                     	;# 
   831  011A                     	;# 
   832  011A                     	;# 
   833  011B                     	;# 
   834  011B                     	;# 
   835  011B                     	;# 
   836  011B                     	;# 
   837  011B                     	;# 
   838  011C                     	;# 
   839  011C                     	;# 
   840  011C                     	;# 
   841  011D                     	;# 
   842  011D                     	;# 
   843  011D                     	;# 
   844  011E                     	;# 
   845  011E                     	;# 
   846  011E                     	;# 
   847  011F                     	;# 
   848  011F                     	;# 
   849  011F                     	;# 
   850  011F                     	;# 
   851  011F                     	;# 
   852  018C                     	;# 
   853  018D                     	;# 
   854  018E                     	;# 
   855  018F                     	;# 
   856  0190                     	;# 
   857  0191                     	;# 
   858  0192                     	;# 
   859  0196                     	;# 
   860  0197                     	;# 
   861  0198                     	;# 
   862  0199                     	;# 
   863  019A                     	;# 
   864  019B                     	;# 
   865  019C                     	;# 
   866  020C                     	;# 
   867  020C                     	;# 
   868  020D                     	;# 
   869  020E                     	;# 
   870  020F                     	;# 
   871  020F                     	;# 
   872  0210                     	;# 
   873  0210                     	;# 
   874  0211                     	;# 
   875  0211                     	;# 
   876  0212                     	;# 
   877  0212                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0215                     	;# 
   881  0215                     	;# 
   882  0216                     	;# 
   883  0216                     	;# 
   884  0217                     	;# 
   885  0217                     	;# 
   886  0218                     	;# 
   887  0218                     	;# 
   888  0219                     	;# 
   889  021A                     	;# 
   890  021B                     	;# 
   891  021B                     	;# 
   892  021C                     	;# 
   893  021C                     	;# 
   894  021D                     	;# 
   895  021D                     	;# 
   896  021E                     	;# 
   897  021F                     	;# 
   898  028C                     	;# 
   899  028C                     	;# 
   900  028D                     	;# 
   901  028D                     	;# 
   902  028E                     	;# 
   903  028F                     	;# 
   904  0290                     	;# 
   905  0290                     	;# 
   906  0291                     	;# 
   907  0292                     	;# 
   908  0292                     	;# 
   909  0293                     	;# 
   910  0293                     	;# 
   911  0294                     	;# 
   912  0295                     	;# 
   913  0296                     	;# 
   914  0296                     	;# 
   915  0297                     	;# 
   916  0298                     	;# 
   917  0298                     	;# 
   918  0299                     	;# 
   919  0299                     	;# 
   920  029A                     	;# 
   921  029B                     	;# 
   922  029C                     	;# 
   923  029C                     	;# 
   924  029D                     	;# 
   925  030C                     	;# 
   926  030C                     	;# 
   927  030D                     	;# 
   928  030E                     	;# 
   929  030F                     	;# 
   930  0310                     	;# 
   931  0310                     	;# 
   932  0311                     	;# 
   933  0312                     	;# 
   934  0313                     	;# 
   935  0314                     	;# 
   936  0314                     	;# 
   937  0315                     	;# 
   938  0316                     	;# 
   939  0317                     	;# 
   940  0318                     	;# 
   941  0318                     	;# 
   942  0319                     	;# 
   943  031A                     	;# 
   944  031B                     	;# 
   945  031C                     	;# 
   946  031C                     	;# 
   947  031D                     	;# 
   948  031E                     	;# 
   949  031F                     	;# 
   950  038C                     	;# 
   951  038D                     	;# 
   952  038E                     	;# 
   953  0390                     	;# 
   954  0391                     	;# 
   955  0392                     	;# 
   956  040C                     	;# 
   957  040D                     	;# 
   958  040E                     	;# 
   959  040F                     	;# 
   960  0410                     	;# 
   961  0411                     	;# 
   962  0416                     	;# 
   963  0416                     	;# 
   964  0417                     	;# 
   965  0418                     	;# 
   966  0418                     	;# 
   967  0419                     	;# 
   968  041A                     	;# 
   969  041A                     	;# 
   970  041B                     	;# 
   971  041C                     	;# 
   972  041C                     	;# 
   973  041D                     	;# 
   974  041E                     	;# 
   975  041F                     	;# 
   976  048C                     	;# 
   977  048C                     	;# 
   978  048D                     	;# 
   979  048E                     	;# 
   980  048F                     	;# 
   981  048F                     	;# 
   982  0490                     	;# 
   983  0491                     	;# 
   984  0492                     	;# 
   985  0492                     	;# 
   986  0493                     	;# 
   987  0494                     	;# 
   988  0495                     	;# 
   989  0495                     	;# 
   990  0496                     	;# 
   991  0497                     	;# 
   992  0498                     	;# 
   993  0499                     	;# 
   994  049A                     	;# 
   995  049B                     	;# 
   996  049C                     	;# 
   997  049D                     	;# 
   998  050C                     	;# 
   999  050C                     	;# 
  1000  050D                     	;# 
  1001  050E                     	;# 
  1002  050F                     	;# 
  1003  050F                     	;# 
  1004  0510                     	;# 
  1005  0511                     	;# 
  1006  0512                     	;# 
  1007  0512                     	;# 
  1008  0513                     	;# 
  1009  0514                     	;# 
  1010  0515                     	;# 
  1011  0515                     	;# 
  1012  0516                     	;# 
  1013  0517                     	;# 
  1014  0518                     	;# 
  1015  0519                     	;# 
  1016  051A                     	;# 
  1017  051B                     	;# 
  1018  051C                     	;# 
  1019  051D                     	;# 
  1020  058C                     	;# 
  1021  058C                     	;# 
  1022  058D                     	;# 
  1023  058E                     	;# 
  1024  058F                     	;# 
  1025  058F                     	;# 
  1026  0590                     	;# 
  1027  0591                     	;# 
  1028  0592                     	;# 
  1029  0593                     	;# 
  1030  060C                     	;# 
  1031  060D                     	;# 
  1032  060E                     	;# 
  1033  060F                     	;# 
  1034  0610                     	;# 
  1035  0611                     	;# 
  1036  0612                     	;# 
  1037  0613                     	;# 
  1038  0614                     	;# 
  1039  0616                     	;# 
  1040  0617                     	;# 
  1041  0618                     	;# 
  1042  0619                     	;# 
  1043  061A                     	;# 
  1044  061B                     	;# 
  1045  061C                     	;# 
  1046  061D                     	;# 
  1047  061E                     	;# 
  1048  068C                     	;# 
  1049  068D                     	;# 
  1050  068E                     	;# 
  1051  068F                     	;# 
  1052  0690                     	;# 
  1053  0691                     	;# 
  1054  0692                     	;# 
  1055  0693                     	;# 
  1056  0694                     	;# 
  1057  070C                     	;# 
  1058  070D                     	;# 
  1059  070E                     	;# 
  1060  070F                     	;# 
  1061  0710                     	;# 
  1062  0711                     	;# 
  1063  0712                     	;# 
  1064  0713                     	;# 
  1065  0714                     	;# 
  1066  0716                     	;# 
  1067  0717                     	;# 
  1068  0718                     	;# 
  1069  0719                     	;# 
  1070  071A                     	;# 
  1071  071B                     	;# 
  1072  071C                     	;# 
  1073  071D                     	;# 
  1074  071E                     	;# 
  1075  0796                     	;# 
  1076  0797                     	;# 
  1077  0798                     	;# 
  1078  0799                     	;# 
  1079  079A                     	;# 
  1080  079B                     	;# 
  1081  080C                     	;# 
  1082  080D                     	;# 
  1083  080E                     	;# 
  1084  080F                     	;# 
  1085  0810                     	;# 
  1086  0811                     	;# 
  1087  0812                     	;# 
  1088  0813                     	;# 
  1089  0814                     	;# 
  1090  081A                     	;# 
  1091  081B                     	;# 
  1092  081C                     	;# 
  1093  081D                     	;# 
  1094  081E                     	;# 
  1095  081F                     	;# 
  1096  088C                     	;# 
  1097  088D                     	;# 
  1098  088E                     	;# 
  1099  088F                     	;# 
  1100  0890                     	;# 
  1101  0891                     	;# 
  1102  0892                     	;# 
  1103  0893                     	;# 
  1104  0895                     	;# 
  1105  0896                     	;# 
  1106  0897                     	;# 
  1107  0898                     	;# 
  1108  0899                     	;# 
  1109  089A                     	;# 
  1110  089B                     	;# 
  1111  090C                     	;# 
  1112  090E                     	;# 
  1113  090F                     	;# 
  1114  091F                     	;# 
  1115  091F                     	;# 
  1116  098F                     	;# 
  1117  098F                     	;# 
  1118  0990                     	;# 
  1119  0991                     	;# 
  1120  0992                     	;# 
  1121  0993                     	;# 
  1122  0994                     	;# 
  1123  0995                     	;# 
  1124  0996                     	;# 
  1125  0997                     	;# 
  1126  0E0F                     	;# 
  1127  0E10                     	;# 
  1128  0E11                     	;# 
  1129  0E12                     	;# 
  1130  0E13                     	;# 
  1131  0E14                     	;# 
  1132  0E15                     	;# 
  1133  0E16                     	;# 
  1134  0E17                     	;# 
  1135  0E18                     	;# 
  1136  0E19                     	;# 
  1137  0E1A                     	;# 
  1138  0E1B                     	;# 
  1139  0E1C                     	;# 
  1140  0E1D                     	;# 
  1141  0E1E                     	;# 
  1142  0E1F                     	;# 
  1143  0E20                     	;# 
  1144  0E21                     	;# 
  1145  0E22                     	;# 
  1146  0E23                     	;# 
  1147  0E24                     	;# 
  1148  0E25                     	;# 
  1149  0E26                     	;# 
  1150  0E27                     	;# 
  1151  0E28                     	;# 
  1152  0E29                     	;# 
  1153  0E2A                     	;# 
  1154  0E2B                     	;# 
  1155  0E2C                     	;# 
  1156  0E2D                     	;# 
  1157  0E2E                     	;# 
  1158  0E2F                     	;# 
  1159  0E30                     	;# 
  1160  0E31                     	;# 
  1161  0E32                     	;# 
  1162  0E33                     	;# 
  1163  0E34                     	;# 
  1164  0E35                     	;# 
  1165  0E36                     	;# 
  1166  0E37                     	;# 
  1167  0E8F                     	;# 
  1168  0E90                     	;# 
  1169  0E91                     	;# 
  1170  0E92                     	;# 
  1171  0E93                     	;# 
  1172  0E94                     	;# 
  1173  0E95                     	;# 
  1174  0E96                     	;# 
  1175  0E97                     	;# 
  1176  0E9C                     	;# 
  1177  0E9D                     	;# 
  1178  0E9E                     	;# 
  1179  0EA1                     	;# 
  1180  0EA2                     	;# 
  1181  0EA3                     	;# 
  1182  0EA4                     	;# 
  1183  0EA5                     	;# 
  1184  0EA9                     	;# 
  1185  0EAA                     	;# 
  1186  0EAB                     	;# 
  1187  0EAC                     	;# 
  1188  0EB1                     	;# 
  1189  0EB2                     	;# 
  1190  0EB3                     	;# 
  1191  0EB8                     	;# 
  1192  0EB9                     	;# 
  1193  0EBA                     	;# 
  1194  0EBB                     	;# 
  1195  0EBC                     	;# 
  1196  0EBD                     	;# 
  1197  0EBE                     	;# 
  1198  0EC3                     	;# 
  1199  0EC5                     	;# 
  1200  0EC6                     	;# 
  1201  0EC7                     	;# 
  1202  0EC8                     	;# 
  1203  0EC9                     	;# 
  1204  0ECA                     	;# 
  1205  0ECB                     	;# 
  1206  0ECC                     	;# 
  1207  0F10                     	;# 
  1208  0F11                     	;# 
  1209  0F12                     	;# 
  1210  0F13                     	;# 
  1211  0F14                     	;# 
  1212  0F15                     	;# 
  1213  0F16                     	;# 
  1214  0F17                     	;# 
  1215  0F18                     	;# 
  1216  0F19                     	;# 
  1217  0F1A                     	;# 
  1218  0F1B                     	;# 
  1219  0F1C                     	;# 
  1220  0F1D                     	;# 
  1221  0F1E                     	;# 
  1222  0F1F                     	;# 
  1223  0F20                     	;# 
  1224  0F21                     	;# 
  1225  0F22                     	;# 
  1226  0F23                     	;# 
  1227  0F24                     	;# 
  1228  0F25                     	;# 
  1229  0F26                     	;# 
  1230  0F27                     	;# 
  1231  0F28                     	;# 
  1232  0F29                     	;# 
  1233  0F2A                     	;# 
  1234  0F2B                     	;# 
  1235  0F2C                     	;# 
  1236  0F2D                     	;# 
  1237  0F2E                     	;# 
  1238  0F2F                     	;# 
  1239  0F30                     	;# 
  1240  0F31                     	;# 
  1241  0F32                     	;# 
  1242  0F38                     	;# 
  1243  0F39                     	;# 
  1244  0F3A                     	;# 
  1245  0F3B                     	;# 
  1246  0F3C                     	;# 
  1247  0F3D                     	;# 
  1248  0F3E                     	;# 
  1249  0F3F                     	;# 
  1250  0F40                     	;# 
  1251  0F41                     	;# 
  1252  0F43                     	;# 
  1253  0F44                     	;# 
  1254  0F45                     	;# 
  1255  0F46                     	;# 
  1256  0F47                     	;# 
  1257  0F48                     	;# 
  1258  0F49                     	;# 
  1259  0F4A                     	;# 
  1260  0F4B                     	;# 
  1261  0F4C                     	;# 
  1262  0F4E                     	;# 
  1263  0F4F                     	;# 
  1264  0F50                     	;# 
  1265  0F51                     	;# 
  1266  0F52                     	;# 
  1267  0F53                     	;# 
  1268  0F54                     	;# 
  1269  0F55                     	;# 
  1270  0F56                     	;# 
  1271  0F57                     	;# 
  1272  0F59                     	;# 
  1273  0F5A                     	;# 
  1274  0F5B                     	;# 
  1275  0F5C                     	;# 
  1276  0F5D                     	;# 
  1277  0F61                     	;# 
  1278  0F62                     	;# 
  1279  0F64                     	;# 
  1280  0F65                     	;# 
  1281  0F66                     	;# 
  1282  0F67                     	;# 
  1283  0F68                     	;# 
  1284  0F69                     	;# 
  1285  0F6A                     	;# 
  1286  0F6B                     	;# 
  1287  0F6C                     	;# 
  1288  0F6D                     	;# 
  1289  0FE4                     	;# 
  1290  0FE5                     	;# 
  1291  0FE6                     	;# 
  1292  0FE7                     	;# 
  1293  0FE8                     	;# 
  1294  0FE9                     	;# 
  1295  0FEA                     	;# 
  1296  0FEB                     	;# 
  1297  0FED                     	;# 
  1298  0FEE                     	;# 
  1299  0FEF                     	;# 
  1300  0000                     	;# 
  1301  0001                     	;# 
  1302  0002                     	;# 
  1303  0003                     	;# 
  1304  0004                     	;# 
  1305  0005                     	;# 
  1306  0006                     	;# 
  1307  0007                     	;# 
  1308  0008                     	;# 
  1309  0009                     	;# 
  1310  000A                     	;# 
  1311  000B                     	;# 
  1312  000C                     	;# 
  1313  000D                     	;# 
  1314  000E                     	;# 
  1315  000F                     	;# 
  1316  0010                     	;# 
  1317  0011                     	;# 
  1318  0012                     	;# 
  1319  0013                     	;# 
  1320  0014                     	;# 
  1321  0015                     	;# 
  1322  0016                     	;# 
  1323  0017                     	;# 
  1324  0018                     	;# 
  1325  0019                     	;# 
  1326  001A                     	;# 
  1327  001C                     	;# 
  1328  001C                     	;# 
  1329  001D                     	;# 
  1330  001D                     	;# 
  1331  001E                     	;# 
  1332  001F                     	;# 
  1333  008C                     	;# 
  1334  008C                     	;# 
  1335  008D                     	;# 
  1336  008E                     	;# 
  1337  008E                     	;# 
  1338  008F                     	;# 
  1339  0090                     	;# 
  1340  0090                     	;# 
  1341  0091                     	;# 
  1342  0093                     	;# 
  1343  0094                     	;# 
  1344  0095                     	;# 
  1345  0096                     	;# 
  1346  0097                     	;# 
  1347  0098                     	;# 
  1348  0099                     	;# 
  1349  009A                     	;# 
  1350  009B                     	;# 
  1351  009C                     	;# 
  1352  009D                     	;# 
  1353  009E                     	;# 
  1354  010C                     	;# 
  1355  010D                     	;# 
  1356  010E                     	;# 
  1357  010E                     	;# 
  1358  010F                     	;# 
  1359  0110                     	;# 
  1360  0110                     	;# 
  1361  0111                     	;# 
  1362  0112                     	;# 
  1363  0112                     	;# 
  1364  0113                     	;# 
  1365  0114                     	;# 
  1366  0114                     	;# 
  1367  0115                     	;# 
  1368  0116                     	;# 
  1369  0116                     	;# 
  1370  0117                     	;# 
  1371  0119                     	;# 
  1372  0119                     	;# 
  1373  0119                     	;# 
  1374  011A                     	;# 
  1375  011A                     	;# 
  1376  011A                     	;# 
  1377  011B                     	;# 
  1378  011B                     	;# 
  1379  011B                     	;# 
  1380  011B                     	;# 
  1381  011B                     	;# 
  1382  011C                     	;# 
  1383  011C                     	;# 
  1384  011C                     	;# 
  1385  011D                     	;# 
  1386  011D                     	;# 
  1387  011D                     	;# 
  1388  011E                     	;# 
  1389  011E                     	;# 
  1390  011E                     	;# 
  1391  011F                     	;# 
  1392  011F                     	;# 
  1393  011F                     	;# 
  1394  011F                     	;# 
  1395  011F                     	;# 
  1396  018C                     	;# 
  1397  018D                     	;# 
  1398  018E                     	;# 
  1399  018F                     	;# 
  1400  0190                     	;# 
  1401  0191                     	;# 
  1402  0192                     	;# 
  1403  0196                     	;# 
  1404  0197                     	;# 
  1405  0198                     	;# 
  1406  0199                     	;# 
  1407  019A                     	;# 
  1408  019B                     	;# 
  1409  019C                     	;# 
  1410  020C                     	;# 
  1411  020C                     	;# 
  1412  020D                     	;# 
  1413  020E                     	;# 
  1414  020F                     	;# 
  1415  020F                     	;# 
  1416  0210                     	;# 
  1417  0210                     	;# 
  1418  0211                     	;# 
  1419  0211                     	;# 
  1420  0212                     	;# 
  1421  0212                     	;# 
  1422  0213                     	;# 
  1423  0214                     	;# 
  1424  0215                     	;# 
  1425  0215                     	;# 
  1426  0216                     	;# 
  1427  0216                     	;# 
  1428  0217                     	;# 
  1429  0217                     	;# 
  1430  0218                     	;# 
  1431  0218                     	;# 
  1432  0219                     	;# 
  1433  021A                     	;# 
  1434  021B                     	;# 
  1435  021B                     	;# 
  1436  021C                     	;# 
  1437  021C                     	;# 
  1438  021D                     	;# 
  1439  021D                     	;# 
  1440  021E                     	;# 
  1441  021F                     	;# 
  1442  028C                     	;# 
  1443  028C                     	;# 
  1444  028D                     	;# 
  1445  028D                     	;# 
  1446  028E                     	;# 
  1447  028F                     	;# 
  1448  0290                     	;# 
  1449  0290                     	;# 
  1450  0291                     	;# 
  1451  0292                     	;# 
  1452  0292                     	;# 
  1453  0293                     	;# 
  1454  0293                     	;# 
  1455  0294                     	;# 
  1456  0295                     	;# 
  1457  0296                     	;# 
  1458  0296                     	;# 
  1459  0297                     	;# 
  1460  0298                     	;# 
  1461  0298                     	;# 
  1462  0299                     	;# 
  1463  0299                     	;# 
  1464  029A                     	;# 
  1465  029B                     	;# 
  1466  029C                     	;# 
  1467  029C                     	;# 
  1468  029D                     	;# 
  1469  030C                     	;# 
  1470  030C                     	;# 
  1471  030D                     	;# 
  1472  030E                     	;# 
  1473  030F                     	;# 
  1474  0310                     	;# 
  1475  0310                     	;# 
  1476  0311                     	;# 
  1477  0312                     	;# 
  1478  0313                     	;# 
  1479  0314                     	;# 
  1480  0314                     	;# 
  1481  0315                     	;# 
  1482  0316                     	;# 
  1483  0317                     	;# 
  1484  0318                     	;# 
  1485  0318                     	;# 
  1486  0319                     	;# 
  1487  031A                     	;# 
  1488  031B                     	;# 
  1489  031C                     	;# 
  1490  031C                     	;# 
  1491  031D                     	;# 
  1492  031E                     	;# 
  1493  031F                     	;# 
  1494  038C                     	;# 
  1495  038D                     	;# 
  1496  038E                     	;# 
  1497  0390                     	;# 
  1498  0391                     	;# 
  1499  0392                     	;# 
  1500  040C                     	;# 
  1501  040D                     	;# 
  1502  040E                     	;# 
  1503  040F                     	;# 
  1504  0410                     	;# 
  1505  0411                     	;# 
  1506  0416                     	;# 
  1507  0416                     	;# 
  1508  0417                     	;# 
  1509  0418                     	;# 
  1510  0418                     	;# 
  1511  0419                     	;# 
  1512  041A                     	;# 
  1513  041A                     	;# 
  1514  041B                     	;# 
  1515  041C                     	;# 
  1516  041C                     	;# 
  1517  041D                     	;# 
  1518  041E                     	;# 
  1519  041F                     	;# 
  1520  048C                     	;# 
  1521  048C                     	;# 
  1522  048D                     	;# 
  1523  048E                     	;# 
  1524  048F                     	;# 
  1525  048F                     	;# 
  1526  0490                     	;# 
  1527  0491                     	;# 
  1528  0492                     	;# 
  1529  0492                     	;# 
  1530  0493                     	;# 
  1531  0494                     	;# 
  1532  0495                     	;# 
  1533  0495                     	;# 
  1534  0496                     	;# 
  1535  0497                     	;# 
  1536  0498                     	;# 
  1537  0499                     	;# 
  1538  049A                     	;# 
  1539  049B                     	;# 
  1540  049C                     	;# 
  1541  049D                     	;# 
  1542  050C                     	;# 
  1543  050C                     	;# 
  1544  050D                     	;# 
  1545  050E                     	;# 
  1546  050F                     	;# 
  1547  050F                     	;# 
  1548  0510                     	;# 
  1549  0511                     	;# 
  1550  0512                     	;# 
  1551  0512                     	;# 
  1552  0513                     	;# 
  1553  0514                     	;# 
  1554  0515                     	;# 
  1555  0515                     	;# 
  1556  0516                     	;# 
  1557  0517                     	;# 
  1558  0518                     	;# 
  1559  0519                     	;# 
  1560  051A                     	;# 
  1561  051B                     	;# 
  1562  051C                     	;# 
  1563  051D                     	;# 
  1564  058C                     	;# 
  1565  058C                     	;# 
  1566  058D                     	;# 
  1567  058E                     	;# 
  1568  058F                     	;# 
  1569  058F                     	;# 
  1570  0590                     	;# 
  1571  0591                     	;# 
  1572  0592                     	;# 
  1573  0593                     	;# 
  1574  060C                     	;# 
  1575  060D                     	;# 
  1576  060E                     	;# 
  1577  060F                     	;# 
  1578  0610                     	;# 
  1579  0611                     	;# 
  1580  0612                     	;# 
  1581  0613                     	;# 
  1582  0614                     	;# 
  1583  0616                     	;# 
  1584  0617                     	;# 
  1585  0618                     	;# 
  1586  0619                     	;# 
  1587  061A                     	;# 
  1588  061B                     	;# 
  1589  061C                     	;# 
  1590  061D                     	;# 
  1591  061E                     	;# 
  1592  068C                     	;# 
  1593  068D                     	;# 
  1594  068E                     	;# 
  1595  068F                     	;# 
  1596  0690                     	;# 
  1597  0691                     	;# 
  1598  0692                     	;# 
  1599  0693                     	;# 
  1600  0694                     	;# 
  1601  070C                     	;# 
  1602  070D                     	;# 
  1603  070E                     	;# 
  1604  070F                     	;# 
  1605  0710                     	;# 
  1606  0711                     	;# 
  1607  0712                     	;# 
  1608  0713                     	;# 
  1609  0714                     	;# 
  1610  0716                     	;# 
  1611  0717                     	;# 
  1612  0718                     	;# 
  1613  0719                     	;# 
  1614  071A                     	;# 
  1615  071B                     	;# 
  1616  071C                     	;# 
  1617  071D                     	;# 
  1618  071E                     	;# 
  1619  0796                     	;# 
  1620  0797                     	;# 
  1621  0798                     	;# 
  1622  0799                     	;# 
  1623  079A                     	;# 
  1624  079B                     	;# 
  1625  080C                     	;# 
  1626  080D                     	;# 
  1627  080E                     	;# 
  1628  080F                     	;# 
  1629  0810                     	;# 
  1630  0811                     	;# 
  1631  0812                     	;# 
  1632  0813                     	;# 
  1633  0814                     	;# 
  1634  081A                     	;# 
  1635  081B                     	;# 
  1636  081C                     	;# 
  1637  081D                     	;# 
  1638  081E                     	;# 
  1639  081F                     	;# 
  1640  088C                     	;# 
  1641  088D                     	;# 
  1642  088E                     	;# 
  1643  088F                     	;# 
  1644  0890                     	;# 
  1645  0891                     	;# 
  1646  0892                     	;# 
  1647  0893                     	;# 
  1648  0895                     	;# 
  1649  0896                     	;# 
  1650  0897                     	;# 
  1651  0898                     	;# 
  1652  0899                     	;# 
  1653  089A                     	;# 
  1654  089B                     	;# 
  1655  090C                     	;# 
  1656  090E                     	;# 
  1657  090F                     	;# 
  1658  091F                     	;# 
  1659  091F                     	;# 
  1660  098F                     	;# 
  1661  098F                     	;# 
  1662  0990                     	;# 
  1663  0991                     	;# 
  1664  0992                     	;# 
  1665  0993                     	;# 
  1666  0994                     	;# 
  1667  0995                     	;# 
  1668  0996                     	;# 
  1669  0997                     	;# 
  1670  0E0F                     	;# 
  1671  0E10                     	;# 
  1672  0E11                     	;# 
  1673  0E12                     	;# 
  1674  0E13                     	;# 
  1675  0E14                     	;# 
  1676  0E15                     	;# 
  1677  0E16                     	;# 
  1678  0E17                     	;# 
  1679  0E18                     	;# 
  1680  0E19                     	;# 
  1681  0E1A                     	;# 
  1682  0E1B                     	;# 
  1683  0E1C                     	;# 
  1684  0E1D                     	;# 
  1685  0E1E                     	;# 
  1686  0E1F                     	;# 
  1687  0E20                     	;# 
  1688  0E21                     	;# 
  1689  0E22                     	;# 
  1690  0E23                     	;# 
  1691  0E24                     	;# 
  1692  0E25                     	;# 
  1693  0E26                     	;# 
  1694  0E27                     	;# 
  1695  0E28                     	;# 
  1696  0E29                     	;# 
  1697  0E2A                     	;# 
  1698  0E2B                     	;# 
  1699  0E2C                     	;# 
  1700  0E2D                     	;# 
  1701  0E2E                     	;# 
  1702  0E2F                     	;# 
  1703  0E30                     	;# 
  1704  0E31                     	;# 
  1705  0E32                     	;# 
  1706  0E33                     	;# 
  1707  0E34                     	;# 
  1708  0E35                     	;# 
  1709  0E36                     	;# 
  1710  0E37                     	;# 
  1711  0E8F                     	;# 
  1712  0E90                     	;# 
  1713  0E91                     	;# 
  1714  0E92                     	;# 
  1715  0E93                     	;# 
  1716  0E94                     	;# 
  1717  0E95                     	;# 
  1718  0E96                     	;# 
  1719  0E97                     	;# 
  1720  0E9C                     	;# 
  1721  0E9D                     	;# 
  1722  0E9E                     	;# 
  1723  0EA1                     	;# 
  1724  0EA2                     	;# 
  1725  0EA3                     	;# 
  1726  0EA4                     	;# 
  1727  0EA5                     	;# 
  1728  0EA9                     	;# 
  1729  0EAA                     	;# 
  1730  0EAB                     	;# 
  1731  0EAC                     	;# 
  1732  0EB1                     	;# 
  1733  0EB2                     	;# 
  1734  0EB3                     	;# 
  1735  0EB8                     	;# 
  1736  0EB9                     	;# 
  1737  0EBA                     	;# 
  1738  0EBB                     	;# 
  1739  0EBC                     	;# 
  1740  0EBD                     	;# 
  1741  0EBE                     	;# 
  1742  0EC3                     	;# 
  1743  0EC5                     	;# 
  1744  0EC6                     	;# 
  1745  0EC7                     	;# 
  1746  0EC8                     	;# 
  1747  0EC9                     	;# 
  1748  0ECA                     	;# 
  1749  0ECB                     	;# 
  1750  0ECC                     	;# 
  1751  0F10                     	;# 
  1752  0F11                     	;# 
  1753  0F12                     	;# 
  1754  0F13                     	;# 
  1755  0F14                     	;# 
  1756  0F15                     	;# 
  1757  0F16                     	;# 
  1758  0F17                     	;# 
  1759  0F18                     	;# 
  1760  0F19                     	;# 
  1761  0F1A                     	;# 
  1762  0F1B                     	;# 
  1763  0F1C                     	;# 
  1764  0F1D                     	;# 
  1765  0F1E                     	;# 
  1766  0F1F                     	;# 
  1767  0F20                     	;# 
  1768  0F21                     	;# 
  1769  0F22                     	;# 
  1770  0F23                     	;# 
  1771  0F24                     	;# 
  1772  0F25                     	;# 
  1773  0F26                     	;# 
  1774  0F27                     	;# 
  1775  0F28                     	;# 
  1776  0F29                     	;# 
  1777  0F2A                     	;# 
  1778  0F2B                     	;# 
  1779  0F2C                     	;# 
  1780  0F2D                     	;# 
  1781  0F2E                     	;# 
  1782  0F2F                     	;# 
  1783  0F30                     	;# 
  1784  0F31                     	;# 
  1785  0F32                     	;# 
  1786  0F38                     	;# 
  1787  0F39                     	;# 
  1788  0F3A                     	;# 
  1789  0F3B                     	;# 
  1790  0F3C                     	;# 
  1791  0F3D                     	;# 
  1792  0F3E                     	;# 
  1793  0F3F                     	;# 
  1794  0F40                     	;# 
  1795  0F41                     	;# 
  1796  0F43                     	;# 
  1797  0F44                     	;# 
  1798  0F45                     	;# 
  1799  0F46                     	;# 
  1800  0F47                     	;# 
  1801  0F48                     	;# 
  1802  0F49                     	;# 
  1803  0F4A                     	;# 
  1804  0F4B                     	;# 
  1805  0F4C                     	;# 
  1806  0F4E                     	;# 
  1807  0F4F                     	;# 
  1808  0F50                     	;# 
  1809  0F51                     	;# 
  1810  0F52                     	;# 
  1811  0F53                     	;# 
  1812  0F54                     	;# 
  1813  0F55                     	;# 
  1814  0F56                     	;# 
  1815  0F57                     	;# 
  1816  0F59                     	;# 
  1817  0F5A                     	;# 
  1818  0F5B                     	;# 
  1819  0F5C                     	;# 
  1820  0F5D                     	;# 
  1821  0F61                     	;# 
  1822  0F62                     	;# 
  1823  0F64                     	;# 
  1824  0F65                     	;# 
  1825  0F66                     	;# 
  1826  0F67                     	;# 
  1827  0F68                     	;# 
  1828  0F69                     	;# 
  1829  0F6A                     	;# 
  1830  0F6B                     	;# 
  1831  0F6C                     	;# 
  1832  0F6D                     	;# 
  1833  0FE4                     	;# 
  1834  0FE5                     	;# 
  1835  0FE6                     	;# 
  1836  0FE7                     	;# 
  1837  0FE8                     	;# 
  1838  0FE9                     	;# 
  1839  0FEA                     	;# 
  1840  0FEB                     	;# 
  1841  0FED                     	;# 
  1842  0FEE                     	;# 
  1843  0FEF                     	;# 
  1844  0000                     	;# 
  1845  0001                     	;# 
  1846  0002                     	;# 
  1847  0003                     	;# 
  1848  0004                     	;# 
  1849  0005                     	;# 
  1850  0006                     	;# 
  1851  0007                     	;# 
  1852  0008                     	;# 
  1853  0009                     	;# 
  1854  000A                     	;# 
  1855  000B                     	;# 
  1856  000C                     	;# 
  1857  000D                     	;# 
  1858  000E                     	;# 
  1859  000F                     	;# 
  1860  0010                     	;# 
  1861  0011                     	;# 
  1862  0012                     	;# 
  1863  0013                     	;# 
  1864  0014                     	;# 
  1865  0015                     	;# 
  1866  0016                     	;# 
  1867  0017                     	;# 
  1868  0018                     	;# 
  1869  0019                     	;# 
  1870  001A                     	;# 
  1871  001C                     	;# 
  1872  001C                     	;# 
  1873  001D                     	;# 
  1874  001D                     	;# 
  1875  001E                     	;# 
  1876  001F                     	;# 
  1877  008C                     	;# 
  1878  008C                     	;# 
  1879  008D                     	;# 
  1880  008E                     	;# 
  1881  008E                     	;# 
  1882  008F                     	;# 
  1883  0090                     	;# 
  1884  0090                     	;# 
  1885  0091                     	;# 
  1886  0093                     	;# 
  1887  0094                     	;# 
  1888  0095                     	;# 
  1889  0096                     	;# 
  1890  0097                     	;# 
  1891  0098                     	;# 
  1892  0099                     	;# 
  1893  009A                     	;# 
  1894  009B                     	;# 
  1895  009C                     	;# 
  1896  009D                     	;# 
  1897  009E                     	;# 
  1898  010C                     	;# 
  1899  010D                     	;# 
  1900  010E                     	;# 
  1901  010E                     	;# 
  1902  010F                     	;# 
  1903  0110                     	;# 
  1904  0110                     	;# 
  1905  0111                     	;# 
  1906  0112                     	;# 
  1907  0112                     	;# 
  1908  0113                     	;# 
  1909  0114                     	;# 
  1910  0114                     	;# 
  1911  0115                     	;# 
  1912  0116                     	;# 
  1913  0116                     	;# 
  1914  0117                     	;# 
  1915  0119                     	;# 
  1916  0119                     	;# 
  1917  0119                     	;# 
  1918  011A                     	;# 
  1919  011A                     	;# 
  1920  011A                     	;# 
  1921  011B                     	;# 
  1922  011B                     	;# 
  1923  011B                     	;# 
  1924  011B                     	;# 
  1925  011B                     	;# 
  1926  011C                     	;# 
  1927  011C                     	;# 
  1928  011C                     	;# 
  1929  011D                     	;# 
  1930  011D                     	;# 
  1931  011D                     	;# 
  1932  011E                     	;# 
  1933  011E                     	;# 
  1934  011E                     	;# 
  1935  011F                     	;# 
  1936  011F                     	;# 
  1937  011F                     	;# 
  1938  011F                     	;# 
  1939  011F                     	;# 
  1940  018C                     	;# 
  1941  018D                     	;# 
  1942  018E                     	;# 
  1943  018F                     	;# 
  1944  0190                     	;# 
  1945  0191                     	;# 
  1946  0192                     	;# 
  1947  0196                     	;# 
  1948  0197                     	;# 
  1949  0198                     	;# 
  1950  0199                     	;# 
  1951  019A                     	;# 
  1952  019B                     	;# 
  1953  019C                     	;# 
  1954  020C                     	;# 
  1955  020C                     	;# 
  1956  020D                     	;# 
  1957  020E                     	;# 
  1958  020F                     	;# 
  1959  020F                     	;# 
  1960  0210                     	;# 
  1961  0210                     	;# 
  1962  0211                     	;# 
  1963  0211                     	;# 
  1964  0212                     	;# 
  1965  0212                     	;# 
  1966  0213                     	;# 
  1967  0214                     	;# 
  1968  0215                     	;# 
  1969  0215                     	;# 
  1970  0216                     	;# 
  1971  0216                     	;# 
  1972  0217                     	;# 
  1973  0217                     	;# 
  1974  0218                     	;# 
  1975  0218                     	;# 
  1976  0219                     	;# 
  1977  021A                     	;# 
  1978  021B                     	;# 
  1979  021B                     	;# 
  1980  021C                     	;# 
  1981  021C                     	;# 
  1982  021D                     	;# 
  1983  021D                     	;# 
  1984  021E                     	;# 
  1985  021F                     	;# 
  1986  028C                     	;# 
  1987  028C                     	;# 
  1988  028D                     	;# 
  1989  028D                     	;# 
  1990  028E                     	;# 
  1991  028F                     	;# 
  1992  0290                     	;# 
  1993  0290                     	;# 
  1994  0291                     	;# 
  1995  0292                     	;# 
  1996  0292                     	;# 
  1997  0293                     	;# 
  1998  0293                     	;# 
  1999  0294                     	;# 
  2000  0295                     	;# 
  2001  0296                     	;# 
  2002  0296                     	;# 
  2003  0297                     	;# 
  2004  0298                     	;# 
  2005  0298                     	;# 
  2006  0299                     	;# 
  2007  0299                     	;# 
  2008  029A                     	;# 
  2009  029B                     	;# 
  2010  029C                     	;# 
  2011  029C                     	;# 
  2012  029D                     	;# 
  2013  030C                     	;# 
  2014  030C                     	;# 
  2015  030D                     	;# 
  2016  030E                     	;# 
  2017  030F                     	;# 
  2018  0310                     	;# 
  2019  0310                     	;# 
  2020  0311                     	;# 
  2021  0312                     	;# 
  2022  0313                     	;# 
  2023  0314                     	;# 
  2024  0314                     	;# 
  2025  0315                     	;# 
  2026  0316                     	;# 
  2027  0317                     	;# 
  2028  0318                     	;# 
  2029  0318                     	;# 
  2030  0319                     	;# 
  2031  031A                     	;# 
  2032  031B                     	;# 
  2033  031C                     	;# 
  2034  031C                     	;# 
  2035  031D                     	;# 
  2036  031E                     	;# 
  2037  031F                     	;# 
  2038  038C                     	;# 
  2039  038D                     	;# 
  2040  038E                     	;# 
  2041  0390                     	;# 
  2042  0391                     	;# 
  2043  0392                     	;# 
  2044  040C                     	;# 
  2045  040D                     	;# 
  2046  040E                     	;# 
  2047  040F                     	;# 
  2048  0410                     	;# 
  2049  0411                     	;# 
  2050  0416                     	;# 
  2051  0416                     	;# 
  2052  0417                     	;# 
  2053  0418                     	;# 
  2054  0418                     	;# 
  2055  0419                     	;# 
  2056  041A                     	;# 
  2057  041A                     	;# 
  2058  041B                     	;# 
  2059  041C                     	;# 
  2060  041C                     	;# 
  2061  041D                     	;# 
  2062  041E                     	;# 
  2063  041F                     	;# 
  2064  048C                     	;# 
  2065  048C                     	;# 
  2066  048D                     	;# 
  2067  048E                     	;# 
  2068  048F                     	;# 
  2069  048F                     	;# 
  2070  0490                     	;# 
  2071  0491                     	;# 
  2072  0492                     	;# 
  2073  0492                     	;# 
  2074  0493                     	;# 
  2075  0494                     	;# 
  2076  0495                     	;# 
  2077  0495                     	;# 
  2078  0496                     	;# 
  2079  0497                     	;# 
  2080  0498                     	;# 
  2081  0499                     	;# 
  2082  049A                     	;# 
  2083  049B                     	;# 
  2084  049C                     	;# 
  2085  049D                     	;# 
  2086  050C                     	;# 
  2087  050C                     	;# 
  2088  050D                     	;# 
  2089  050E                     	;# 
  2090  050F                     	;# 
  2091  050F                     	;# 
  2092  0510                     	;# 
  2093  0511                     	;# 
  2094  0512                     	;# 
  2095  0512                     	;# 
  2096  0513                     	;# 
  2097  0514                     	;# 
  2098  0515                     	;# 
  2099  0515                     	;# 
  2100  0516                     	;# 
  2101  0517                     	;# 
  2102  0518                     	;# 
  2103  0519                     	;# 
  2104  051A                     	;# 
  2105  051B                     	;# 
  2106  051C                     	;# 
  2107  051D                     	;# 
  2108  058C                     	;# 
  2109  058C                     	;# 
  2110  058D                     	;# 
  2111  058E                     	;# 
  2112  058F                     	;# 
  2113  058F                     	;# 
  2114  0590                     	;# 
  2115  0591                     	;# 
  2116  0592                     	;# 
  2117  0593                     	;# 
  2118  060C                     	;# 
  2119  060D                     	;# 
  2120  060E                     	;# 
  2121  060F                     	;# 
  2122  0610                     	;# 
  2123  0611                     	;# 
  2124  0612                     	;# 
  2125  0613                     	;# 
  2126  0614                     	;# 
  2127  0616                     	;# 
  2128  0617                     	;# 
  2129  0618                     	;# 
  2130  0619                     	;# 
  2131  061A                     	;# 
  2132  061B                     	;# 
  2133  061C                     	;# 
  2134  061D                     	;# 
  2135  061E                     	;# 
  2136  068C                     	;# 
  2137  068D                     	;# 
  2138  068E                     	;# 
  2139  068F                     	;# 
  2140  0690                     	;# 
  2141  0691                     	;# 
  2142  0692                     	;# 
  2143  0693                     	;# 
  2144  0694                     	;# 
  2145  070C                     	;# 
  2146  070D                     	;# 
  2147  070E                     	;# 
  2148  070F                     	;# 
  2149  0710                     	;# 
  2150  0711                     	;# 
  2151  0712                     	;# 
  2152  0713                     	;# 
  2153  0714                     	;# 
  2154  0716                     	;# 
  2155  0717                     	;# 
  2156  0718                     	;# 
  2157  0719                     	;# 
  2158  071A                     	;# 
  2159  071B                     	;# 
  2160  071C                     	;# 
  2161  071D                     	;# 
  2162  071E                     	;# 
  2163  0796                     	;# 
  2164  0797                     	;# 
  2165  0798                     	;# 
  2166  0799                     	;# 
  2167  079A                     	;# 
  2168  079B                     	;# 
  2169  080C                     	;# 
  2170  080D                     	;# 
  2171  080E                     	;# 
  2172  080F                     	;# 
  2173  0810                     	;# 
  2174  0811                     	;# 
  2175  0812                     	;# 
  2176  0813                     	;# 
  2177  0814                     	;# 
  2178  081A                     	;# 
  2179  081B                     	;# 
  2180  081C                     	;# 
  2181  081D                     	;# 
  2182  081E                     	;# 
  2183  081F                     	;# 
  2184  088C                     	;# 
  2185  088D                     	;# 
  2186  088E                     	;# 
  2187  088F                     	;# 
  2188  0890                     	;# 
  2189  0891                     	;# 
  2190  0892                     	;# 
  2191  0893                     	;# 
  2192  0895                     	;# 
  2193  0896                     	;# 
  2194  0897                     	;# 
  2195  0898                     	;# 
  2196  0899                     	;# 
  2197  089A                     	;# 
  2198  089B                     	;# 
  2199  090C                     	;# 
  2200  090E                     	;# 
  2201  090F                     	;# 
  2202  091F                     	;# 
  2203  091F                     	;# 
  2204  098F                     	;# 
  2205  098F                     	;# 
  2206  0990                     	;# 
  2207  0991                     	;# 
  2208  0992                     	;# 
  2209  0993                     	;# 
  2210  0994                     	;# 
  2211  0995                     	;# 
  2212  0996                     	;# 
  2213  0997                     	;# 
  2214  0E0F                     	;# 
  2215  0E10                     	;# 
  2216  0E11                     	;# 
  2217  0E12                     	;# 
  2218  0E13                     	;# 
  2219  0E14                     	;# 
  2220  0E15                     	;# 
  2221  0E16                     	;# 
  2222  0E17                     	;# 
  2223  0E18                     	;# 
  2224  0E19                     	;# 
  2225  0E1A                     	;# 
  2226  0E1B                     	;# 
  2227  0E1C                     	;# 
  2228  0E1D                     	;# 
  2229  0E1E                     	;# 
  2230  0E1F                     	;# 
  2231  0E20                     	;# 
  2232  0E21                     	;# 
  2233  0E22                     	;# 
  2234  0E23                     	;# 
  2235  0E24                     	;# 
  2236  0E25                     	;# 
  2237  0E26                     	;# 
  2238  0E27                     	;# 
  2239  0E28                     	;# 
  2240  0E29                     	;# 
  2241  0E2A                     	;# 
  2242  0E2B                     	;# 
  2243  0E2C                     	;# 
  2244  0E2D                     	;# 
  2245  0E2E                     	;# 
  2246  0E2F                     	;# 
  2247  0E30                     	;# 
  2248  0E31                     	;# 
  2249  0E32                     	;# 
  2250  0E33                     	;# 
  2251  0E34                     	;# 
  2252  0E35                     	;# 
  2253  0E36                     	;# 
  2254  0E37                     	;# 
  2255  0E8F                     	;# 
  2256  0E90                     	;# 
  2257  0E91                     	;# 
  2258  0E92                     	;# 
  2259  0E93                     	;# 
  2260  0E94                     	;# 
  2261  0E95                     	;# 
  2262  0E96                     	;# 
  2263  0E97                     	;# 
  2264  0E9C                     	;# 
  2265  0E9D                     	;# 
  2266  0E9E                     	;# 
  2267  0EA1                     	;# 
  2268  0EA2                     	;# 
  2269  0EA3                     	;# 
  2270  0EA4                     	;# 
  2271  0EA5                     	;# 
  2272  0EA9                     	;# 
  2273  0EAA                     	;# 
  2274  0EAB                     	;# 
  2275  0EAC                     	;# 
  2276  0EB1                     	;# 
  2277  0EB2                     	;# 
  2278  0EB3                     	;# 
  2279  0EB8                     	;# 
  2280  0EB9                     	;# 
  2281  0EBA                     	;# 
  2282  0EBB                     	;# 
  2283  0EBC                     	;# 
  2284  0EBD                     	;# 
  2285  0EBE                     	;# 
  2286  0EC3                     	;# 
  2287  0EC5                     	;# 
  2288  0EC6                     	;# 
  2289  0EC7                     	;# 
  2290  0EC8                     	;# 
  2291  0EC9                     	;# 
  2292  0ECA                     	;# 
  2293  0ECB                     	;# 
  2294  0ECC                     	;# 
  2295  0F10                     	;# 
  2296  0F11                     	;# 
  2297  0F12                     	;# 
  2298  0F13                     	;# 
  2299  0F14                     	;# 
  2300  0F15                     	;# 
  2301  0F16                     	;# 
  2302  0F17                     	;# 
  2303  0F18                     	;# 
  2304  0F19                     	;# 
  2305  0F1A                     	;# 
  2306  0F1B                     	;# 
  2307  0F1C                     	;# 
  2308  0F1D                     	;# 
  2309  0F1E                     	;# 
  2310  0F1F                     	;# 
  2311  0F20                     	;# 
  2312  0F21                     	;# 
  2313  0F22                     	;# 
  2314  0F23                     	;# 
  2315  0F24                     	;# 
  2316  0F25                     	;# 
  2317  0F26                     	;# 
  2318  0F27                     	;# 
  2319  0F28                     	;# 
  2320  0F29                     	;# 
  2321  0F2A                     	;# 
  2322  0F2B                     	;# 
  2323  0F2C                     	;# 
  2324  0F2D                     	;# 
  2325  0F2E                     	;# 
  2326  0F2F                     	;# 
  2327  0F30                     	;# 
  2328  0F31                     	;# 
  2329  0F32                     	;# 
  2330  0F38                     	;# 
  2331  0F39                     	;# 
  2332  0F3A                     	;# 
  2333  0F3B                     	;# 
  2334  0F3C                     	;# 
  2335  0F3D                     	;# 
  2336  0F3E                     	;# 
  2337  0F3F                     	;# 
  2338  0F40                     	;# 
  2339  0F41                     	;# 
  2340  0F43                     	;# 
  2341  0F44                     	;# 
  2342  0F45                     	;# 
  2343  0F46                     	;# 
  2344  0F47                     	;# 
  2345  0F48                     	;# 
  2346  0F49                     	;# 
  2347  0F4A                     	;# 
  2348  0F4B                     	;# 
  2349  0F4C                     	;# 
  2350  0F4E                     	;# 
  2351  0F4F                     	;# 
  2352  0F50                     	;# 
  2353  0F51                     	;# 
  2354  0F52                     	;# 
  2355  0F53                     	;# 
  2356  0F54                     	;# 
  2357  0F55                     	;# 
  2358  0F56                     	;# 
  2359  0F57                     	;# 
  2360  0F59                     	;# 
  2361  0F5A                     	;# 
  2362  0F5B                     	;# 
  2363  0F5C                     	;# 
  2364  0F5D                     	;# 
  2365  0F61                     	;# 
  2366  0F62                     	;# 
  2367  0F64                     	;# 
  2368  0F65                     	;# 
  2369  0F66                     	;# 
  2370  0F67                     	;# 
  2371  0F68                     	;# 
  2372  0F69                     	;# 
  2373  0F6A                     	;# 
  2374  0F6B                     	;# 
  2375  0F6C                     	;# 
  2376  0F6D                     	;# 
  2377  0FE4                     	;# 
  2378  0FE5                     	;# 
  2379  0FE6                     	;# 
  2380  0FE7                     	;# 
  2381  0FE8                     	;# 
  2382  0FE9                     	;# 
  2383  0FEA                     	;# 
  2384  0FEB                     	;# 
  2385  0FED                     	;# 
  2386  0FEE                     	;# 
  2387  0FEF                     	;# 
  2388  0000                     	;# 
  2389  0001                     	;# 
  2390  0002                     	;# 
  2391  0003                     	;# 
  2392  0004                     	;# 
  2393  0005                     	;# 
  2394  0006                     	;# 
  2395  0007                     	;# 
  2396  0008                     	;# 
  2397  0009                     	;# 
  2398  000A                     	;# 
  2399  000B                     	;# 
  2400  000C                     	;# 
  2401  000D                     	;# 
  2402  000E                     	;# 
  2403  000F                     	;# 
  2404  0010                     	;# 
  2405  0011                     	;# 
  2406  0012                     	;# 
  2407  0013                     	;# 
  2408  0014                     	;# 
  2409  0015                     	;# 
  2410  0016                     	;# 
  2411  0017                     	;# 
  2412  0018                     	;# 
  2413  0019                     	;# 
  2414  001A                     	;# 
  2415  001C                     	;# 
  2416  001C                     	;# 
  2417  001D                     	;# 
  2418  001D                     	;# 
  2419  001E                     	;# 
  2420  001F                     	;# 
  2421  008C                     	;# 
  2422  008C                     	;# 
  2423  008D                     	;# 
  2424  008E                     	;# 
  2425  008E                     	;# 
  2426  008F                     	;# 
  2427  0090                     	;# 
  2428  0090                     	;# 
  2429  0091                     	;# 
  2430  0093                     	;# 
  2431  0094                     	;# 
  2432  0095                     	;# 
  2433  0096                     	;# 
  2434  0097                     	;# 
  2435  0098                     	;# 
  2436  0099                     	;# 
  2437  009A                     	;# 
  2438  009B                     	;# 
  2439  009C                     	;# 
  2440  009D                     	;# 
  2441  009E                     	;# 
  2442  010C                     	;# 
  2443  010D                     	;# 
  2444  010E                     	;# 
  2445  010E                     	;# 
  2446  010F                     	;# 
  2447  0110                     	;# 
  2448  0110                     	;# 
  2449  0111                     	;# 
  2450  0112                     	;# 
  2451  0112                     	;# 
  2452  0113                     	;# 
  2453  0114                     	;# 
  2454  0114                     	;# 
  2455  0115                     	;# 
  2456  0116                     	;# 
  2457  0116                     	;# 
  2458  0117                     	;# 
  2459  0119                     	;# 
  2460  0119                     	;# 
  2461  0119                     	;# 
  2462  011A                     	;# 
  2463  011A                     	;# 
  2464  011A                     	;# 
  2465  011B                     	;# 
  2466  011B                     	;# 
  2467  011B                     	;# 
  2468  011B                     	;# 
  2469  011B                     	;# 
  2470  011C                     	;# 
  2471  011C                     	;# 
  2472  011C                     	;# 
  2473  011D                     	;# 
  2474  011D                     	;# 
  2475  011D                     	;# 
  2476  011E                     	;# 
  2477  011E                     	;# 
  2478  011E                     	;# 
  2479  011F                     	;# 
  2480  011F                     	;# 
  2481  011F                     	;# 
  2482  011F                     	;# 
  2483  011F                     	;# 
  2484  018C                     	;# 
  2485  018D                     	;# 
  2486  018E                     	;# 
  2487  018F                     	;# 
  2488  0190                     	;# 
  2489  0191                     	;# 
  2490  0192                     	;# 
  2491  0196                     	;# 
  2492  0197                     	;# 
  2493  0198                     	;# 
  2494  0199                     	;# 
  2495  019A                     	;# 
  2496  019B                     	;# 
  2497  019C                     	;# 
  2498  020C                     	;# 
  2499  020C                     	;# 
  2500  020D                     	;# 
  2501  020E                     	;# 
  2502  020F                     	;# 
  2503  020F                     	;# 
  2504  0210                     	;# 
  2505  0210                     	;# 
  2506  0211                     	;# 
  2507  0211                     	;# 
  2508  0212                     	;# 
  2509  0212                     	;# 
  2510  0213                     	;# 
  2511  0214                     	;# 
  2512  0215                     	;# 
  2513  0215                     	;# 
  2514  0216                     	;# 
  2515  0216                     	;# 
  2516  0217                     	;# 
  2517  0217                     	;# 
  2518  0218                     	;# 
  2519  0218                     	;# 
  2520  0219                     	;# 
  2521  021A                     	;# 
  2522  021B                     	;# 
  2523  021B                     	;# 
  2524  021C                     	;# 
  2525  021C                     	;# 
  2526  021D                     	;# 
  2527  021D                     	;# 
  2528  021E                     	;# 
  2529  021F                     	;# 
  2530  028C                     	;# 
  2531  028C                     	;# 
  2532  028D                     	;# 
  2533  028D                     	;# 
  2534  028E                     	;# 
  2535  028F                     	;# 
  2536  0290                     	;# 
  2537  0290                     	;# 
  2538  0291                     	;# 
  2539  0292                     	;# 
  2540  0292                     	;# 
  2541  0293                     	;# 
  2542  0293                     	;# 
  2543  0294                     	;# 
  2544  0295                     	;# 
  2545  0296                     	;# 
  2546  0296                     	;# 
  2547  0297                     	;# 
  2548  0298                     	;# 
  2549  0298                     	;# 
  2550  0299                     	;# 
  2551  0299                     	;# 
  2552  029A                     	;# 
  2553  029B                     	;# 
  2554  029C                     	;# 
  2555  029C                     	;# 
  2556  029D                     	;# 
  2557  030C                     	;# 
  2558  030C                     	;# 
  2559  030D                     	;# 
  2560  030E                     	;# 
  2561  030F                     	;# 
  2562  0310                     	;# 
  2563  0310                     	;# 
  2564  0311                     	;# 
  2565  0312                     	;# 
  2566  0313                     	;# 
  2567  0314                     	;# 
  2568  0314                     	;# 
  2569  0315                     	;# 
  2570  0316                     	;# 
  2571  0317                     	;# 
  2572  0318                     	;# 
  2573  0318                     	;# 
  2574  0319                     	;# 
  2575  031A                     	;# 
  2576  031B                     	;# 
  2577  031C                     	;# 
  2578  031C                     	;# 
  2579  031D                     	;# 
  2580  031E                     	;# 
  2581  031F                     	;# 
  2582  038C                     	;# 
  2583  038D                     	;# 
  2584  038E                     	;# 
  2585  0390                     	;# 
  2586  0391                     	;# 
  2587  0392                     	;# 
  2588  040C                     	;# 
  2589  040D                     	;# 
  2590  040E                     	;# 
  2591  040F                     	;# 
  2592  0410                     	;# 
  2593  0411                     	;# 
  2594  0416                     	;# 
  2595  0416                     	;# 
  2596  0417                     	;# 
  2597  0418                     	;# 
  2598  0418                     	;# 
  2599  0419                     	;# 
  2600  041A                     	;# 
  2601  041A                     	;# 
  2602  041B                     	;# 
  2603  041C                     	;# 
  2604  041C                     	;# 
  2605  041D                     	;# 
  2606  041E                     	;# 
  2607  041F                     	;# 
  2608  048C                     	;# 
  2609  048C                     	;# 
  2610  048D                     	;# 
  2611  048E                     	;# 
  2612  048F                     	;# 
  2613  048F                     	;# 
  2614  0490                     	;# 
  2615  0491                     	;# 
  2616  0492                     	;# 
  2617  0492                     	;# 
  2618  0493                     	;# 
  2619  0494                     	;# 
  2620  0495                     	;# 
  2621  0495                     	;# 
  2622  0496                     	;# 
  2623  0497                     	;# 
  2624  0498                     	;# 
  2625  0499                     	;# 
  2626  049A                     	;# 
  2627  049B                     	;# 
  2628  049C                     	;# 
  2629  049D                     	;# 
  2630  050C                     	;# 
  2631  050C                     	;# 
  2632  050D                     	;# 
  2633  050E                     	;# 
  2634  050F                     	;# 
  2635  050F                     	;# 
  2636  0510                     	;# 
  2637  0511                     	;# 
  2638  0512                     	;# 
  2639  0512                     	;# 
  2640  0513                     	;# 
  2641  0514                     	;# 
  2642  0515                     	;# 
  2643  0515                     	;# 
  2644  0516                     	;# 
  2645  0517                     	;# 
  2646  0518                     	;# 
  2647  0519                     	;# 
  2648  051A                     	;# 
  2649  051B                     	;# 
  2650  051C                     	;# 
  2651  051D                     	;# 
  2652  058C                     	;# 
  2653  058C                     	;# 
  2654  058D                     	;# 
  2655  058E                     	;# 
  2656  058F                     	;# 
  2657  058F                     	;# 
  2658  0590                     	;# 
  2659  0591                     	;# 
  2660  0592                     	;# 
  2661  0593                     	;# 
  2662  060C                     	;# 
  2663  060D                     	;# 
  2664  060E                     	;# 
  2665  060F                     	;# 
  2666  0610                     	;# 
  2667  0611                     	;# 
  2668  0612                     	;# 
  2669  0613                     	;# 
  2670  0614                     	;# 
  2671  0616                     	;# 
  2672  0617                     	;# 
  2673  0618                     	;# 
  2674  0619                     	;# 
  2675  061A                     	;# 
  2676  061B                     	;# 
  2677  061C                     	;# 
  2678  061D                     	;# 
  2679  061E                     	;# 
  2680  068C                     	;# 
  2681  068D                     	;# 
  2682  068E                     	;# 
  2683  068F                     	;# 
  2684  0690                     	;# 
  2685  0691                     	;# 
  2686  0692                     	;# 
  2687  0693                     	;# 
  2688  0694                     	;# 
  2689  070C                     	;# 
  2690  070D                     	;# 
  2691  070E                     	;# 
  2692  070F                     	;# 
  2693  0710                     	;# 
  2694  0711                     	;# 
  2695  0712                     	;# 
  2696  0713                     	;# 
  2697  0714                     	;# 
  2698  0716                     	;# 
  2699  0717                     	;# 
  2700  0718                     	;# 
  2701  0719                     	;# 
  2702  071A                     	;# 
  2703  071B                     	;# 
  2704  071C                     	;# 
  2705  071D                     	;# 
  2706  071E                     	;# 
  2707  0796                     	;# 
  2708  0797                     	;# 
  2709  0798                     	;# 
  2710  0799                     	;# 
  2711  079A                     	;# 
  2712  079B                     	;# 
  2713  080C                     	;# 
  2714  080D                     	;# 
  2715  080E                     	;# 
  2716  080F                     	;# 
  2717  0810                     	;# 
  2718  0811                     	;# 
  2719  0812                     	;# 
  2720  0813                     	;# 
  2721  0814                     	;# 
  2722  081A                     	;# 
  2723  081B                     	;# 
  2724  081C                     	;# 
  2725  081D                     	;# 
  2726  081E                     	;# 
  2727  081F                     	;# 
  2728  088C                     	;# 
  2729  088D                     	;# 
  2730  088E                     	;# 
  2731  088F                     	;# 
  2732  0890                     	;# 
  2733  0891                     	;# 
  2734  0892                     	;# 
  2735  0893                     	;# 
  2736  0895                     	;# 
  2737  0896                     	;# 
  2738  0897                     	;# 
  2739  0898                     	;# 
  2740  0899                     	;# 
  2741  089A                     	;# 
  2742  089B                     	;# 
  2743  090C                     	;# 
  2744  090E                     	;# 
  2745  090F                     	;# 
  2746  091F                     	;# 
  2747  091F                     	;# 
  2748  098F                     	;# 
  2749  098F                     	;# 
  2750  0990                     	;# 
  2751  0991                     	;# 
  2752  0992                     	;# 
  2753  0993                     	;# 
  2754  0994                     	;# 
  2755  0995                     	;# 
  2756  0996                     	;# 
  2757  0997                     	;# 
  2758  0E0F                     	;# 
  2759  0E10                     	;# 
  2760  0E11                     	;# 
  2761  0E12                     	;# 
  2762  0E13                     	;# 
  2763  0E14                     	;# 
  2764  0E15                     	;# 
  2765  0E16                     	;# 
  2766  0E17                     	;# 
  2767  0E18                     	;# 
  2768  0E19                     	;# 
  2769  0E1A                     	;# 
  2770  0E1B                     	;# 
  2771  0E1C                     	;# 
  2772  0E1D                     	;# 
  2773  0E1E                     	;# 
  2774  0E1F                     	;# 
  2775  0E20                     	;# 
  2776  0E21                     	;# 
  2777  0E22                     	;# 
  2778  0E23                     	;# 
  2779  0E24                     	;# 
  2780  0E25                     	;# 
  2781  0E26                     	;# 
  2782  0E27                     	;# 
  2783  0E28                     	;# 
  2784  0E29                     	;# 
  2785  0E2A                     	;# 
  2786  0E2B                     	;# 
  2787  0E2C                     	;# 
  2788  0E2D                     	;# 
  2789  0E2E                     	;# 
  2790  0E2F                     	;# 
  2791  0E30                     	;# 
  2792  0E31                     	;# 
  2793  0E32                     	;# 
  2794  0E33                     	;# 
  2795  0E34                     	;# 
  2796  0E35                     	;# 
  2797  0E36                     	;# 
  2798  0E37                     	;# 
  2799  0E8F                     	;# 
  2800  0E90                     	;# 
  2801  0E91                     	;# 
  2802  0E92                     	;# 
  2803  0E93                     	;# 
  2804  0E94                     	;# 
  2805  0E95                     	;# 
  2806  0E96                     	;# 
  2807  0E97                     	;# 
  2808  0E9C                     	;# 
  2809  0E9D                     	;# 
  2810  0E9E                     	;# 
  2811  0EA1                     	;# 
  2812  0EA2                     	;# 
  2813  0EA3                     	;# 
  2814  0EA4                     	;# 
  2815  0EA5                     	;# 
  2816  0EA9                     	;# 
  2817  0EAA                     	;# 
  2818  0EAB                     	;# 
  2819  0EAC                     	;# 
  2820  0EB1                     	;# 
  2821  0EB2                     	;# 
  2822  0EB3                     	;# 
  2823  0EB8                     	;# 
  2824  0EB9                     	;# 
  2825  0EBA                     	;# 
  2826  0EBB                     	;# 
  2827  0EBC                     	;# 
  2828  0EBD                     	;# 
  2829  0EBE                     	;# 
  2830  0EC3                     	;# 
  2831  0EC5                     	;# 
  2832  0EC6                     	;# 
  2833  0EC7                     	;# 
  2834  0EC8                     	;# 
  2835  0EC9                     	;# 
  2836  0ECA                     	;# 
  2837  0ECB                     	;# 
  2838  0ECC                     	;# 
  2839  0F10                     	;# 
  2840  0F11                     	;# 
  2841  0F12                     	;# 
  2842  0F13                     	;# 
  2843  0F14                     	;# 
  2844  0F15                     	;# 
  2845  0F16                     	;# 
  2846  0F17                     	;# 
  2847  0F18                     	;# 
  2848  0F19                     	;# 
  2849  0F1A                     	;# 
  2850  0F1B                     	;# 
  2851  0F1C                     	;# 
  2852  0F1D                     	;# 
  2853  0F1E                     	;# 
  2854  0F1F                     	;# 
  2855  0F20                     	;# 
  2856  0F21                     	;# 
  2857  0F22                     	;# 
  2858  0F23                     	;# 
  2859  0F24                     	;# 
  2860  0F25                     	;# 
  2861  0F26                     	;# 
  2862  0F27                     	;# 
  2863  0F28                     	;# 
  2864  0F29                     	;# 
  2865  0F2A                     	;# 
  2866  0F2B                     	;# 
  2867  0F2C                     	;# 
  2868  0F2D                     	;# 
  2869  0F2E                     	;# 
  2870  0F2F                     	;# 
  2871  0F30                     	;# 
  2872  0F31                     	;# 
  2873  0F32                     	;# 
  2874  0F38                     	;# 
  2875  0F39                     	;# 
  2876  0F3A                     	;# 
  2877  0F3B                     	;# 
  2878  0F3C                     	;# 
  2879  0F3D                     	;# 
  2880  0F3E                     	;# 
  2881  0F3F                     	;# 
  2882  0F40                     	;# 
  2883  0F41                     	;# 
  2884  0F43                     	;# 
  2885  0F44                     	;# 
  2886  0F45                     	;# 
  2887  0F46                     	;# 
  2888  0F47                     	;# 
  2889  0F48                     	;# 
  2890  0F49                     	;# 
  2891  0F4A                     	;# 
  2892  0F4B                     	;# 
  2893  0F4C                     	;# 
  2894  0F4E                     	;# 
  2895  0F4F                     	;# 
  2896  0F50                     	;# 
  2897  0F51                     	;# 
  2898  0F52                     	;# 
  2899  0F53                     	;# 
  2900  0F54                     	;# 
  2901  0F55                     	;# 
  2902  0F56                     	;# 
  2903  0F57                     	;# 
  2904  0F59                     	;# 
  2905  0F5A                     	;# 
  2906  0F5B                     	;# 
  2907  0F5C                     	;# 
  2908  0F5D                     	;# 
  2909  0F61                     	;# 
  2910  0F62                     	;# 
  2911  0F64                     	;# 
  2912  0F65                     	;# 
  2913  0F66                     	;# 
  2914  0F67                     	;# 
  2915  0F68                     	;# 
  2916  0F69                     	;# 
  2917  0F6A                     	;# 
  2918  0F6B                     	;# 
  2919  0F6C                     	;# 
  2920  0F6D                     	;# 
  2921  0FE4                     	;# 
  2922  0FE5                     	;# 
  2923  0FE6                     	;# 
  2924  0FE7                     	;# 
  2925  0FE8                     	;# 
  2926  0FE9                     	;# 
  2927  0FEA                     	;# 
  2928  0FEB                     	;# 
  2929  0FED                     	;# 
  2930  0FEE                     	;# 
  2931  0FEF                     	;# 
  2932  0000                     	;# 
  2933  0001                     	;# 
  2934  0002                     	;# 
  2935  0003                     	;# 
  2936  0004                     	;# 
  2937  0005                     	;# 
  2938  0006                     	;# 
  2939  0007                     	;# 
  2940  0008                     	;# 
  2941  0009                     	;# 
  2942  000A                     	;# 
  2943  000B                     	;# 
  2944  000C                     	;# 
  2945  000D                     	;# 
  2946  000E                     	;# 
  2947  000F                     	;# 
  2948  0010                     	;# 
  2949  0011                     	;# 
  2950  0012                     	;# 
  2951  0013                     	;# 
  2952  0014                     	;# 
  2953  0015                     	;# 
  2954  0016                     	;# 
  2955  0017                     	;# 
  2956  0018                     	;# 
  2957  0019                     	;# 
  2958  001A                     	;# 
  2959  001C                     	;# 
  2960  001C                     	;# 
  2961  001D                     	;# 
  2962  001D                     	;# 
  2963  001E                     	;# 
  2964  001F                     	;# 
  2965  008C                     	;# 
  2966  008C                     	;# 
  2967  008D                     	;# 
  2968  008E                     	;# 
  2969  008E                     	;# 
  2970  008F                     	;# 
  2971  0090                     	;# 
  2972  0090                     	;# 
  2973  0091                     	;# 
  2974  0093                     	;# 
  2975  0094                     	;# 
  2976  0095                     	;# 
  2977  0096                     	;# 
  2978  0097                     	;# 
  2979  0098                     	;# 
  2980  0099                     	;# 
  2981  009A                     	;# 
  2982  009B                     	;# 
  2983  009C                     	;# 
  2984  009D                     	;# 
  2985  009E                     	;# 
  2986  010C                     	;# 
  2987  010D                     	;# 
  2988  010E                     	;# 
  2989  010E                     	;# 
  2990  010F                     	;# 
  2991  0110                     	;# 
  2992  0110                     	;# 
  2993  0111                     	;# 
  2994  0112                     	;# 
  2995  0112                     	;# 
  2996  0113                     	;# 
  2997  0114                     	;# 
  2998  0114                     	;# 
  2999  0115                     	;# 
  3000  0116                     	;# 
  3001  0116                     	;# 
  3002  0117                     	;# 
  3003  0119                     	;# 
  3004  0119                     	;# 
  3005  0119                     	;# 
  3006  011A                     	;# 
  3007  011A                     	;# 
  3008  011A                     	;# 
  3009  011B                     	;# 
  3010  011B                     	;# 
  3011  011B                     	;# 
  3012  011B                     	;# 
  3013  011B                     	;# 
  3014  011C                     	;# 
  3015  011C                     	;# 
  3016  011C                     	;# 
  3017  011D                     	;# 
  3018  011D                     	;# 
  3019  011D                     	;# 
  3020  011E                     	;# 
  3021  011E                     	;# 
  3022  011E                     	;# 
  3023  011F                     	;# 
  3024  011F                     	;# 
  3025  011F                     	;# 
  3026  011F                     	;# 
  3027  011F                     	;# 
  3028  018C                     	;# 
  3029  018D                     	;# 
  3030  018E                     	;# 
  3031  018F                     	;# 
  3032  0190                     	;# 
  3033  0191                     	;# 
  3034  0192                     	;# 
  3035  0196                     	;# 
  3036  0197                     	;# 
  3037  0198                     	;# 
  3038  0199                     	;# 
  3039  019A                     	;# 
  3040  019B                     	;# 
  3041  019C                     	;# 
  3042  020C                     	;# 
  3043  020C                     	;# 
  3044  020D                     	;# 
  3045  020E                     	;# 
  3046  020F                     	;# 
  3047  020F                     	;# 
  3048  0210                     	;# 
  3049  0210                     	;# 
  3050  0211                     	;# 
  3051  0211                     	;# 
  3052  0212                     	;# 
  3053  0212                     	;# 
  3054  0213                     	;# 
  3055  0214                     	;# 
  3056  0215                     	;# 
  3057  0215                     	;# 
  3058  0216                     	;# 
  3059  0216                     	;# 
  3060  0217                     	;# 
  3061  0217                     	;# 
  3062  0218                     	;# 
  3063  0218                     	;# 
  3064  0219                     	;# 
  3065  021A                     	;# 
  3066  021B                     	;# 
  3067  021B                     	;# 
  3068  021C                     	;# 
  3069  021C                     	;# 
  3070  021D                     	;# 
  3071  021D                     	;# 
  3072  021E                     	;# 
  3073  021F                     	;# 
  3074  028C                     	;# 
  3075  028C                     	;# 
  3076  028D                     	;# 
  3077  028D                     	;# 
  3078  028E                     	;# 
  3079  028F                     	;# 
  3080  0290                     	;# 
  3081  0290                     	;# 
  3082  0291                     	;# 
  3083  0292                     	;# 
  3084  0292                     	;# 
  3085  0293                     	;# 
  3086  0293                     	;# 
  3087  0294                     	;# 
  3088  0295                     	;# 
  3089  0296                     	;# 
  3090  0296                     	;# 
  3091  0297                     	;# 
  3092  0298                     	;# 
  3093  0298                     	;# 
  3094  0299                     	;# 
  3095  0299                     	;# 
  3096  029A                     	;# 
  3097  029B                     	;# 
  3098  029C                     	;# 
  3099  029C                     	;# 
  3100  029D                     	;# 
  3101  030C                     	;# 
  3102  030C                     	;# 
  3103  030D                     	;# 
  3104  030E                     	;# 
  3105  030F                     	;# 
  3106  0310                     	;# 
  3107  0310                     	;# 
  3108  0311                     	;# 
  3109  0312                     	;# 
  3110  0313                     	;# 
  3111  0314                     	;# 
  3112  0314                     	;# 
  3113  0315                     	;# 
  3114  0316                     	;# 
  3115  0317                     	;# 
  3116  0318                     	;# 
  3117  0318                     	;# 
  3118  0319                     	;# 
  3119  031A                     	;# 
  3120  031B                     	;# 
  3121  031C                     	;# 
  3122  031C                     	;# 
  3123  031D                     	;# 
  3124  031E                     	;# 
  3125  031F                     	;# 
  3126  038C                     	;# 
  3127  038D                     	;# 
  3128  038E                     	;# 
  3129  0390                     	;# 
  3130  0391                     	;# 
  3131  0392                     	;# 
  3132  040C                     	;# 
  3133  040D                     	;# 
  3134  040E                     	;# 
  3135  040F                     	;# 
  3136  0410                     	;# 
  3137  0411                     	;# 
  3138  0416                     	;# 
  3139  0416                     	;# 
  3140  0417                     	;# 
  3141  0418                     	;# 
  3142  0418                     	;# 
  3143  0419                     	;# 
  3144  041A                     	;# 
  3145  041A                     	;# 
  3146  041B                     	;# 
  3147  041C                     	;# 
  3148  041C                     	;# 
  3149  041D                     	;# 
  3150  041E                     	;# 
  3151  041F                     	;# 
  3152  048C                     	;# 
  3153  048C                     	;# 
  3154  048D                     	;# 
  3155  048E                     	;# 
  3156  048F                     	;# 
  3157  048F                     	;# 
  3158  0490                     	;# 
  3159  0491                     	;# 
  3160  0492                     	;# 
  3161  0492                     	;# 
  3162  0493                     	;# 
  3163  0494                     	;# 
  3164  0495                     	;# 
  3165  0495                     	;# 
  3166  0496                     	;# 
  3167  0497                     	;# 
  3168  0498                     	;# 
  3169  0499                     	;# 
  3170  049A                     	;# 
  3171  049B                     	;# 
  3172  049C                     	;# 
  3173  049D                     	;# 
  3174  050C                     	;# 
  3175  050C                     	;# 
  3176  050D                     	;# 
  3177  050E                     	;# 
  3178  050F                     	;# 
  3179  050F                     	;# 
  3180  0510                     	;# 
  3181  0511                     	;# 
  3182  0512                     	;# 
  3183  0512                     	;# 
  3184  0513                     	;# 
  3185  0514                     	;# 
  3186  0515                     	;# 
  3187  0515                     	;# 
  3188  0516                     	;# 
  3189  0517                     	;# 
  3190  0518                     	;# 
  3191  0519                     	;# 
  3192  051A                     	;# 
  3193  051B                     	;# 
  3194  051C                     	;# 
  3195  051D                     	;# 
  3196  058C                     	;# 
  3197  058C                     	;# 
  3198  058D                     	;# 
  3199  058E                     	;# 
  3200  058F                     	;# 
  3201  058F                     	;# 
  3202  0590                     	;# 
  3203  0591                     	;# 
  3204  0592                     	;# 
  3205  0593                     	;# 
  3206  060C                     	;# 
  3207  060D                     	;# 
  3208  060E                     	;# 
  3209  060F                     	;# 
  3210  0610                     	;# 
  3211  0611                     	;# 
  3212  0612                     	;# 
  3213  0613                     	;# 
  3214  0614                     	;# 
  3215  0616                     	;# 
  3216  0617                     	;# 
  3217  0618                     	;# 
  3218  0619                     	;# 
  3219  061A                     	;# 
  3220  061B                     	;# 
  3221  061C                     	;# 
  3222  061D                     	;# 
  3223  061E                     	;# 
  3224  068C                     	;# 
  3225  068D                     	;# 
  3226  068E                     	;# 
  3227  068F                     	;# 
  3228  0690                     	;# 
  3229  0691                     	;# 
  3230  0692                     	;# 
  3231  0693                     	;# 
  3232  0694                     	;# 
  3233  070C                     	;# 
  3234  070D                     	;# 
  3235  070E                     	;# 
  3236  070F                     	;# 
  3237  0710                     	;# 
  3238  0711                     	;# 
  3239  0712                     	;# 
  3240  0713                     	;# 
  3241  0714                     	;# 
  3242  0716                     	;# 
  3243  0717                     	;# 
  3244  0718                     	;# 
  3245  0719                     	;# 
  3246  071A                     	;# 
  3247  071B                     	;# 
  3248  071C                     	;# 
  3249  071D                     	;# 
  3250  071E                     	;# 
  3251  0796                     	;# 
  3252  0797                     	;# 
  3253  0798                     	;# 
  3254  0799                     	;# 
  3255  079A                     	;# 
  3256  079B                     	;# 
  3257  080C                     	;# 
  3258  080D                     	;# 
  3259  080E                     	;# 
  3260  080F                     	;# 
  3261  0810                     	;# 
  3262  0811                     	;# 
  3263  0812                     	;# 
  3264  0813                     	;# 
  3265  0814                     	;# 
  3266  081A                     	;# 
  3267  081B                     	;# 
  3268  081C                     	;# 
  3269  081D                     	;# 
  3270  081E                     	;# 
  3271  081F                     	;# 
  3272  088C                     	;# 
  3273  088D                     	;# 
  3274  088E                     	;# 
  3275  088F                     	;# 
  3276  0890                     	;# 
  3277  0891                     	;# 
  3278  0892                     	;# 
  3279  0893                     	;# 
  3280  0895                     	;# 
  3281  0896                     	;# 
  3282  0897                     	;# 
  3283  0898                     	;# 
  3284  0899                     	;# 
  3285  089A                     	;# 
  3286  089B                     	;# 
  3287  090C                     	;# 
  3288  090E                     	;# 
  3289  090F                     	;# 
  3290  091F                     	;# 
  3291  091F                     	;# 
  3292  098F                     	;# 
  3293  098F                     	;# 
  3294  0990                     	;# 
  3295  0991                     	;# 
  3296  0992                     	;# 
  3297  0993                     	;# 
  3298  0994                     	;# 
  3299  0995                     	;# 
  3300  0996                     	;# 
  3301  0997                     	;# 
  3302  0E0F                     	;# 
  3303  0E10                     	;# 
  3304  0E11                     	;# 
  3305  0E12                     	;# 
  3306  0E13                     	;# 
  3307  0E14                     	;# 
  3308  0E15                     	;# 
  3309  0E16                     	;# 
  3310  0E17                     	;# 
  3311  0E18                     	;# 
  3312  0E19                     	;# 
  3313  0E1A                     	;# 
  3314  0E1B                     	;# 
  3315  0E1C                     	;# 
  3316  0E1D                     	;# 
  3317  0E1E                     	;# 
  3318  0E1F                     	;# 
  3319  0E20                     	;# 
  3320  0E21                     	;# 
  3321  0E22                     	;# 
  3322  0E23                     	;# 
  3323  0E24                     	;# 
  3324  0E25                     	;# 
  3325  0E26                     	;# 
  3326  0E27                     	;# 
  3327  0E28                     	;# 
  3328  0E29                     	;# 
  3329  0E2A                     	;# 
  3330  0E2B                     	;# 
  3331  0E2C                     	;# 
  3332  0E2D                     	;# 
  3333  0E2E                     	;# 
  3334  0E2F                     	;# 
  3335  0E30                     	;# 
  3336  0E31                     	;# 
  3337  0E32                     	;# 
  3338  0E33                     	;# 
  3339  0E34                     	;# 
  3340  0E35                     	;# 
  3341  0E36                     	;# 
  3342  0E37                     	;# 
  3343  0E8F                     	;# 
  3344  0E90                     	;# 
  3345  0E91                     	;# 
  3346  0E92                     	;# 
  3347  0E93                     	;# 
  3348  0E94                     	;# 
  3349  0E95                     	;# 
  3350  0E96                     	;# 
  3351  0E97                     	;# 
  3352  0E9C                     	;# 
  3353  0E9D                     	;# 
  3354  0E9E                     	;# 
  3355  0EA1                     	;# 
  3356  0EA2                     	;# 
  3357  0EA3                     	;# 
  3358  0EA4                     	;# 
  3359  0EA5                     	;# 
  3360  0EA9                     	;# 
  3361  0EAA                     	;# 
  3362  0EAB                     	;# 
  3363  0EAC                     	;# 
  3364  0EB1                     	;# 
  3365  0EB2                     	;# 
  3366  0EB3                     	;# 
  3367  0EB8                     	;# 
  3368  0EB9                     	;# 
  3369  0EBA                     	;# 
  3370  0EBB                     	;# 
  3371  0EBC                     	;# 
  3372  0EBD                     	;# 
  3373  0EBE                     	;# 
  3374  0EC3                     	;# 
  3375  0EC5                     	;# 
  3376  0EC6                     	;# 
  3377  0EC7                     	;# 
  3378  0EC8                     	;# 
  3379  0EC9                     	;# 
  3380  0ECA                     	;# 
  3381  0ECB                     	;# 
  3382  0ECC                     	;# 
  3383  0F10                     	;# 
  3384  0F11                     	;# 
  3385  0F12                     	;# 
  3386  0F13                     	;# 
  3387  0F14                     	;# 
  3388  0F15                     	;# 
  3389  0F16                     	;# 
  3390  0F17                     	;# 
  3391  0F18                     	;# 
  3392  0F19                     	;# 
  3393  0F1A                     	;# 
  3394  0F1B                     	;# 
  3395  0F1C                     	;# 
  3396  0F1D                     	;# 
  3397  0F1E                     	;# 
  3398  0F1F                     	;# 
  3399  0F20                     	;# 
  3400  0F21                     	;# 
  3401  0F22                     	;# 
  3402  0F23                     	;# 
  3403  0F24                     	;# 
  3404  0F25                     	;# 
  3405  0F26                     	;# 
  3406  0F27                     	;# 
  3407  0F28                     	;# 
  3408  0F29                     	;# 
  3409  0F2A                     	;# 
  3410  0F2B                     	;# 
  3411  0F2C                     	;# 
  3412  0F2D                     	;# 
  3413  0F2E                     	;# 
  3414  0F2F                     	;# 
  3415  0F30                     	;# 
  3416  0F31                     	;# 
  3417  0F32                     	;# 
  3418  0F38                     	;# 
  3419  0F39                     	;# 
  3420  0F3A                     	;# 
  3421  0F3B                     	;# 
  3422  0F3C                     	;# 
  3423  0F3D                     	;# 
  3424  0F3E                     	;# 
  3425  0F3F                     	;# 
  3426  0F40                     	;# 
  3427  0F41                     	;# 
  3428  0F43                     	;# 
  3429  0F44                     	;# 
  3430  0F45                     	;# 
  3431  0F46                     	;# 
  3432  0F47                     	;# 
  3433  0F48                     	;# 
  3434  0F49                     	;# 
  3435  0F4A                     	;# 
  3436  0F4B                     	;# 
  3437  0F4C                     	;# 
  3438  0F4E                     	;# 
  3439  0F4F                     	;# 
  3440  0F50                     	;# 
  3441  0F51                     	;# 
  3442  0F52                     	;# 
  3443  0F53                     	;# 
  3444  0F54                     	;# 
  3445  0F55                     	;# 
  3446  0F56                     	;# 
  3447  0F57                     	;# 
  3448  0F59                     	;# 
  3449  0F5A                     	;# 
  3450  0F5B                     	;# 
  3451  0F5C                     	;# 
  3452  0F5D                     	;# 
  3453  0F61                     	;# 
  3454  0F62                     	;# 
  3455  0F64                     	;# 
  3456  0F65                     	;# 
  3457  0F66                     	;# 
  3458  0F67                     	;# 
  3459  0F68                     	;# 
  3460  0F69                     	;# 
  3461  0F6A                     	;# 
  3462  0F6B                     	;# 
  3463  0F6C                     	;# 
  3464  0F6D                     	;# 
  3465  0FE4                     	;# 
  3466  0FE5                     	;# 
  3467  0FE6                     	;# 
  3468  0FE7                     	;# 
  3469  0FE8                     	;# 
  3470  0FE9                     	;# 
  3471  0FEA                     	;# 
  3472  0FEB                     	;# 
  3473  0FED                     	;# 
  3474  0FEE                     	;# 
  3475  0FEF                     	;# 
  3476  0000                     	;# 
  3477  0001                     	;# 
  3478  0002                     	;# 
  3479  0003                     	;# 
  3480  0004                     	;# 
  3481  0005                     	;# 
  3482  0006                     	;# 
  3483  0007                     	;# 
  3484  0008                     	;# 
  3485  0009                     	;# 
  3486  000A                     	;# 
  3487  000B                     	;# 
  3488  000C                     	;# 
  3489  000D                     	;# 
  3490  000E                     	;# 
  3491  000F                     	;# 
  3492  0010                     	;# 
  3493  0011                     	;# 
  3494  0012                     	;# 
  3495  0013                     	;# 
  3496  0014                     	;# 
  3497  0015                     	;# 
  3498  0016                     	;# 
  3499  0017                     	;# 
  3500  0018                     	;# 
  3501  0019                     	;# 
  3502  001A                     	;# 
  3503  001C                     	;# 
  3504  001C                     	;# 
  3505  001D                     	;# 
  3506  001D                     	;# 
  3507  001E                     	;# 
  3508  001F                     	;# 
  3509  008C                     	;# 
  3510  008C                     	;# 
  3511  008D                     	;# 
  3512  008E                     	;# 
  3513  008E                     	;# 
  3514  008F                     	;# 
  3515  0090                     	;# 
  3516  0090                     	;# 
  3517  0091                     	;# 
  3518  0093                     	;# 
  3519  0094                     	;# 
  3520  0095                     	;# 
  3521  0096                     	;# 
  3522  0097                     	;# 
  3523  0098                     	;# 
  3524  0099                     	;# 
  3525  009A                     	;# 
  3526  009B                     	;# 
  3527  009C                     	;# 
  3528  009D                     	;# 
  3529  009E                     	;# 
  3530  010C                     	;# 
  3531  010D                     	;# 
  3532  010E                     	;# 
  3533  010E                     	;# 
  3534  010F                     	;# 
  3535  0110                     	;# 
  3536  0110                     	;# 
  3537  0111                     	;# 
  3538  0112                     	;# 
  3539  0112                     	;# 
  3540  0113                     	;# 
  3541  0114                     	;# 
  3542  0114                     	;# 
  3543  0115                     	;# 
  3544  0116                     	;# 
  3545  0116                     	;# 
  3546  0117                     	;# 
  3547  0119                     	;# 
  3548  0119                     	;# 
  3549  0119                     	;# 
  3550  011A                     	;# 
  3551  011A                     	;# 
  3552  011A                     	;# 
  3553  011B                     	;# 
  3554  011B                     	;# 
  3555  011B                     	;# 
  3556  011B                     	;# 
  3557  011B                     	;# 
  3558  011C                     	;# 
  3559  011C                     	;# 
  3560  011C                     	;# 
  3561  011D                     	;# 
  3562  011D                     	;# 
  3563  011D                     	;# 
  3564  011E                     	;# 
  3565  011E                     	;# 
  3566  011E                     	;# 
  3567  011F                     	;# 
  3568  011F                     	;# 
  3569  011F                     	;# 
  3570  011F                     	;# 
  3571  011F                     	;# 
  3572  018C                     	;# 
  3573  018D                     	;# 
  3574  018E                     	;# 
  3575  018F                     	;# 
  3576  0190                     	;# 
  3577  0191                     	;# 
  3578  0192                     	;# 
  3579  0196                     	;# 
  3580  0197                     	;# 
  3581  0198                     	;# 
  3582  0199                     	;# 
  3583  019A                     	;# 
  3584  019B                     	;# 
  3585  019C                     	;# 
  3586  020C                     	;# 
  3587  020C                     	;# 
  3588  020D                     	;# 
  3589  020E                     	;# 
  3590  020F                     	;# 
  3591  020F                     	;# 
  3592  0210                     	;# 
  3593  0210                     	;# 
  3594  0211                     	;# 
  3595  0211                     	;# 
  3596  0212                     	;# 
  3597  0212                     	;# 
  3598  0213                     	;# 
  3599  0214                     	;# 
  3600  0215                     	;# 
  3601  0215                     	;# 
  3602  0216                     	;# 
  3603  0216                     	;# 
  3604  0217                     	;# 
  3605  0217                     	;# 
  3606  0218                     	;# 
  3607  0218                     	;# 
  3608  0219                     	;# 
  3609  021A                     	;# 
  3610  021B                     	;# 
  3611  021B                     	;# 
  3612  021C                     	;# 
  3613  021C                     	;# 
  3614  021D                     	;# 
  3615  021D                     	;# 
  3616  021E                     	;# 
  3617  021F                     	;# 
  3618  028C                     	;# 
  3619  028C                     	;# 
  3620  028D                     	;# 
  3621  028D                     	;# 
  3622  028E                     	;# 
  3623  028F                     	;# 
  3624  0290                     	;# 
  3625  0290                     	;# 
  3626  0291                     	;# 
  3627  0292                     	;# 
  3628  0292                     	;# 
  3629  0293                     	;# 
  3630  0293                     	;# 
  3631  0294                     	;# 
  3632  0295                     	;# 
  3633  0296                     	;# 
  3634  0296                     	;# 
  3635  0297                     	;# 
  3636  0298                     	;# 
  3637  0298                     	;# 
  3638  0299                     	;# 
  3639  0299                     	;# 
  3640  029A                     	;# 
  3641  029B                     	;# 
  3642  029C                     	;# 
  3643  029C                     	;# 
  3644  029D                     	;# 
  3645  030C                     	;# 
  3646  030C                     	;# 
  3647  030D                     	;# 
  3648  030E                     	;# 
  3649  030F                     	;# 
  3650  0310                     	;# 
  3651  0310                     	;# 
  3652  0311                     	;# 
  3653  0312                     	;# 
  3654  0313                     	;# 
  3655  0314                     	;# 
  3656  0314                     	;# 
  3657  0315                     	;# 
  3658  0316                     	;# 
  3659  0317                     	;# 
  3660  0318                     	;# 
  3661  0318                     	;# 
  3662  0319                     	;# 
  3663  031A                     	;# 
  3664  031B                     	;# 
  3665  031C                     	;# 
  3666  031C                     	;# 
  3667  031D                     	;# 
  3668  031E                     	;# 
  3669  031F                     	;# 
  3670  038C                     	;# 
  3671  038D                     	;# 
  3672  038E                     	;# 
  3673  0390                     	;# 
  3674  0391                     	;# 
  3675  0392                     	;# 
  3676  040C                     	;# 
  3677  040D                     	;# 
  3678  040E                     	;# 
  3679  040F                     	;# 
  3680  0410                     	;# 
  3681  0411                     	;# 
  3682  0416                     	;# 
  3683  0416                     	;# 
  3684  0417                     	;# 
  3685  0418                     	;# 
  3686  0418                     	;# 
  3687  0419                     	;# 
  3688  041A                     	;# 
  3689  041A                     	;# 
  3690  041B                     	;# 
  3691  041C                     	;# 
  3692  041C                     	;# 
  3693  041D                     	;# 
  3694  041E                     	;# 
  3695  041F                     	;# 
  3696  048C                     	;# 
  3697  048C                     	;# 
  3698  048D                     	;# 
  3699  048E                     	;# 
  3700  048F                     	;# 
  3701  048F                     	;# 
  3702  0490                     	;# 
  3703  0491                     	;# 
  3704  0492                     	;# 
  3705  0492                     	;# 
  3706  0493                     	;# 
  3707  0494                     	;# 
  3708  0495                     	;# 
  3709  0495                     	;# 
  3710  0496                     	;# 
  3711  0497                     	;# 
  3712  0498                     	;# 
  3713  0499                     	;# 
  3714  049A                     	;# 
  3715  049B                     	;# 
  3716  049C                     	;# 
  3717  049D                     	;# 
  3718  050C                     	;# 
  3719  050C                     	;# 
  3720  050D                     	;# 
  3721  050E                     	;# 
  3722  050F                     	;# 
  3723  050F                     	;# 
  3724  0510                     	;# 
  3725  0511                     	;# 
  3726  0512                     	;# 
  3727  0512                     	;# 
  3728  0513                     	;# 
  3729  0514                     	;# 
  3730  0515                     	;# 
  3731  0515                     	;# 
  3732  0516                     	;# 
  3733  0517                     	;# 
  3734  0518                     	;# 
  3735  0519                     	;# 
  3736  051A                     	;# 
  3737  051B                     	;# 
  3738  051C                     	;# 
  3739  051D                     	;# 
  3740  058C                     	;# 
  3741  058C                     	;# 
  3742  058D                     	;# 
  3743  058E                     	;# 
  3744  058F                     	;# 
  3745  058F                     	;# 
  3746  0590                     	;# 
  3747  0591                     	;# 
  3748  0592                     	;# 
  3749  0593                     	;# 
  3750  060C                     	;# 
  3751  060D                     	;# 
  3752  060E                     	;# 
  3753  060F                     	;# 
  3754  0610                     	;# 
  3755  0611                     	;# 
  3756  0612                     	;# 
  3757  0613                     	;# 
  3758  0614                     	;# 
  3759  0616                     	;# 
  3760  0617                     	;# 
  3761  0618                     	;# 
  3762  0619                     	;# 
  3763  061A                     	;# 
  3764  061B                     	;# 
  3765  061C                     	;# 
  3766  061D                     	;# 
  3767  061E                     	;# 
  3768  068C                     	;# 
  3769  068D                     	;# 
  3770  068E                     	;# 
  3771  068F                     	;# 
  3772  0690                     	;# 
  3773  0691                     	;# 
  3774  0692                     	;# 
  3775  0693                     	;# 
  3776  0694                     	;# 
  3777  070C                     	;# 
  3778  070D                     	;# 
  3779  070E                     	;# 
  3780  070F                     	;# 
  3781  0710                     	;# 
  3782  0711                     	;# 
  3783  0712                     	;# 
  3784  0713                     	;# 
  3785  0714                     	;# 
  3786  0716                     	;# 
  3787  0717                     	;# 
  3788  0718                     	;# 
  3789  0719                     	;# 
  3790  071A                     	;# 
  3791  071B                     	;# 
  3792  071C                     	;# 
  3793  071D                     	;# 
  3794  071E                     	;# 
  3795  0796                     	;# 
  3796  0797                     	;# 
  3797  0798                     	;# 
  3798  0799                     	;# 
  3799  079A                     	;# 
  3800  079B                     	;# 
  3801  080C                     	;# 
  3802  080D                     	;# 
  3803  080E                     	;# 
  3804  080F                     	;# 
  3805  0810                     	;# 
  3806  0811                     	;# 
  3807  0812                     	;# 
  3808  0813                     	;# 
  3809  0814                     	;# 
  3810  081A                     	;# 
  3811  081B                     	;# 
  3812  081C                     	;# 
  3813  081D                     	;# 
  3814  081E                     	;# 
  3815  081F                     	;# 
  3816  088C                     	;# 
  3817  088D                     	;# 
  3818  088E                     	;# 
  3819  088F                     	;# 
  3820  0890                     	;# 
  3821  0891                     	;# 
  3822  0892                     	;# 
  3823  0893                     	;# 
  3824  0895                     	;# 
  3825  0896                     	;# 
  3826  0897                     	;# 
  3827  0898                     	;# 
  3828  0899                     	;# 
  3829  089A                     	;# 
  3830  089B                     	;# 
  3831  090C                     	;# 
  3832  090E                     	;# 
  3833  090F                     	;# 
  3834  091F                     	;# 
  3835  091F                     	;# 
  3836  098F                     	;# 
  3837  098F                     	;# 
  3838  0990                     	;# 
  3839  0991                     	;# 
  3840  0992                     	;# 
  3841  0993                     	;# 
  3842  0994                     	;# 
  3843  0995                     	;# 
  3844  0996                     	;# 
  3845  0997                     	;# 
  3846  0E0F                     	;# 
  3847  0E10                     	;# 
  3848  0E11                     	;# 
  3849  0E12                     	;# 
  3850  0E13                     	;# 
  3851  0E14                     	;# 
  3852  0E15                     	;# 
  3853  0E16                     	;# 
  3854  0E17                     	;# 
  3855  0E18                     	;# 
  3856  0E19                     	;# 
  3857  0E1A                     	;# 
  3858  0E1B                     	;# 
  3859  0E1C                     	;# 
  3860  0E1D                     	;# 
  3861  0E1E                     	;# 
  3862  0E1F                     	;# 
  3863  0E20                     	;# 
  3864  0E21                     	;# 
  3865  0E22                     	;# 
  3866  0E23                     	;# 
  3867  0E24                     	;# 
  3868  0E25                     	;# 
  3869  0E26                     	;# 
  3870  0E27                     	;# 
  3871  0E28                     	;# 
  3872  0E29                     	;# 
  3873  0E2A                     	;# 
  3874  0E2B                     	;# 
  3875  0E2C                     	;# 
  3876  0E2D                     	;# 
  3877  0E2E                     	;# 
  3878  0E2F                     	;# 
  3879  0E30                     	;# 
  3880  0E31                     	;# 
  3881  0E32                     	;# 
  3882  0E33                     	;# 
  3883  0E34                     	;# 
  3884  0E35                     	;# 
  3885  0E36                     	;# 
  3886  0E37                     	;# 
  3887  0E8F                     	;# 
  3888  0E90                     	;# 
  3889  0E91                     	;# 
  3890  0E92                     	;# 
  3891  0E93                     	;# 
  3892  0E94                     	;# 
  3893  0E95                     	;# 
  3894  0E96                     	;# 
  3895  0E97                     	;# 
  3896  0E9C                     	;# 
  3897  0E9D                     	;# 
  3898  0E9E                     	;# 
  3899  0EA1                     	;# 
  3900  0EA2                     	;# 
  3901  0EA3                     	;# 
  3902  0EA4                     	;# 
  3903  0EA5                     	;# 
  3904  0EA9                     	;# 
  3905  0EAA                     	;# 
  3906  0EAB                     	;# 
  3907  0EAC                     	;# 
  3908  0EB1                     	;# 
  3909  0EB2                     	;# 
  3910  0EB3                     	;# 
  3911  0EB8                     	;# 
  3912  0EB9                     	;# 
  3913  0EBA                     	;# 
  3914  0EBB                     	;# 
  3915  0EBC                     	;# 
  3916  0EBD                     	;# 
  3917  0EBE                     	;# 
  3918  0EC3                     	;# 
  3919  0EC5                     	;# 
  3920  0EC6                     	;# 
  3921  0EC7                     	;# 
  3922  0EC8                     	;# 
  3923  0EC9                     	;# 
  3924  0ECA                     	;# 
  3925  0ECB                     	;# 
  3926  0ECC                     	;# 
  3927  0F10                     	;# 
  3928  0F11                     	;# 
  3929  0F12                     	;# 
  3930  0F13                     	;# 
  3931  0F14                     	;# 
  3932  0F15                     	;# 
  3933  0F16                     	;# 
  3934  0F17                     	;# 
  3935  0F18                     	;# 
  3936  0F19                     	;# 
  3937  0F1A                     	;# 
  3938  0F1B                     	;# 
  3939  0F1C                     	;# 
  3940  0F1D                     	;# 
  3941  0F1E                     	;# 
  3942  0F1F                     	;# 
  3943  0F20                     	;# 
  3944  0F21                     	;# 
  3945  0F22                     	;# 
  3946  0F23                     	;# 
  3947  0F24                     	;# 
  3948  0F25                     	;# 
  3949  0F26                     	;# 
  3950  0F27                     	;# 
  3951  0F28                     	;# 
  3952  0F29                     	;# 
  3953  0F2A                     	;# 
  3954  0F2B                     	;# 
  3955  0F2C                     	;# 
  3956  0F2D                     	;# 
  3957  0F2E                     	;# 
  3958  0F2F                     	;# 
  3959  0F30                     	;# 
  3960  0F31                     	;# 
  3961  0F32                     	;# 
  3962  0F38                     	;# 
  3963  0F39                     	;# 
  3964  0F3A                     	;# 
  3965  0F3B                     	;# 
  3966  0F3C                     	;# 
  3967  0F3D                     	;# 
  3968  0F3E                     	;# 
  3969  0F3F                     	;# 
  3970  0F40                     	;# 
  3971  0F41                     	;# 
  3972  0F43                     	;# 
  3973  0F44                     	;# 
  3974  0F45                     	;# 
  3975  0F46                     	;# 
  3976  0F47                     	;# 
  3977  0F48                     	;# 
  3978  0F49                     	;# 
  3979  0F4A                     	;# 
  3980  0F4B                     	;# 
  3981  0F4C                     	;# 
  3982  0F4E                     	;# 
  3983  0F4F                     	;# 
  3984  0F50                     	;# 
  3985  0F51                     	;# 
  3986  0F52                     	;# 
  3987  0F53                     	;# 
  3988  0F54                     	;# 
  3989  0F55                     	;# 
  3990  0F56                     	;# 
  3991  0F57                     	;# 
  3992  0F59                     	;# 
  3993  0F5A                     	;# 
  3994  0F5B                     	;# 
  3995  0F5C                     	;# 
  3996  0F5D                     	;# 
  3997  0F61                     	;# 
  3998  0F62                     	;# 
  3999  0F64                     	;# 
  4000  0F65                     	;# 
  4001  0F66                     	;# 
  4002  0F67                     	;# 
  4003  0F68                     	;# 
  4004  0F69                     	;# 
  4005  0F6A                     	;# 
  4006  0F6B                     	;# 
  4007  0F6C                     	;# 
  4008  0F6D                     	;# 
  4009  0FE4                     	;# 
  4010  0FE5                     	;# 
  4011  0FE6                     	;# 
  4012  0FE7                     	;# 
  4013  0FE8                     	;# 
  4014  0FE9                     	;# 
  4015  0FEA                     	;# 
  4016  0FEB                     	;# 
  4017  0FED                     	;# 
  4018  0FEE                     	;# 
  4019  0FEF                     	;# 
  4020  0000                     	;# 
  4021  0001                     	;# 
  4022  0002                     	;# 
  4023  0003                     	;# 
  4024  0004                     	;# 
  4025  0005                     	;# 
  4026  0006                     	;# 
  4027  0007                     	;# 
  4028  0008                     	;# 
  4029  0009                     	;# 
  4030  000A                     	;# 
  4031  000B                     	;# 
  4032  000C                     	;# 
  4033  000D                     	;# 
  4034  000E                     	;# 
  4035  000F                     	;# 
  4036  0010                     	;# 
  4037  0011                     	;# 
  4038  0012                     	;# 
  4039  0013                     	;# 
  4040  0014                     	;# 
  4041  0015                     	;# 
  4042  0016                     	;# 
  4043  0017                     	;# 
  4044  0018                     	;# 
  4045  0019                     	;# 
  4046  001A                     	;# 
  4047  001C                     	;# 
  4048  001C                     	;# 
  4049  001D                     	;# 
  4050  001D                     	;# 
  4051  001E                     	;# 
  4052  001F                     	;# 
  4053  008C                     	;# 
  4054  008C                     	;# 
  4055  008D                     	;# 
  4056  008E                     	;# 
  4057  008E                     	;# 
  4058  008F                     	;# 
  4059  0090                     	;# 
  4060  0090                     	;# 
  4061  0091                     	;# 
  4062  0093                     	;# 
  4063  0094                     	;# 
  4064  0095                     	;# 
  4065  0096                     	;# 
  4066  0097                     	;# 
  4067  0098                     	;# 
  4068  0099                     	;# 
  4069  009A                     	;# 
  4070  009B                     	;# 
  4071  009C                     	;# 
  4072  009D                     	;# 
  4073  009E                     	;# 
  4074  010C                     	;# 
  4075  010D                     	;# 
  4076  010E                     	;# 
  4077  010E                     	;# 
  4078  010F                     	;# 
  4079  0110                     	;# 
  4080  0110                     	;# 
  4081  0111                     	;# 
  4082  0112                     	;# 
  4083  0112                     	;# 
  4084  0113                     	;# 
  4085  0114                     	;# 
  4086  0114                     	;# 
  4087  0115                     	;# 
  4088  0116                     	;# 
  4089  0116                     	;# 
  4090  0117                     	;# 
  4091  0119                     	;# 
  4092  0119                     	;# 
  4093  0119                     	;# 
  4094  011A                     	;# 
  4095  011A                     	;# 
  4096  011A                     	;# 
  4097  011B                     	;# 
  4098  011B                     	;# 
  4099  011B                     	;# 
  4100  011B                     	;# 
  4101  011B                     	;# 
  4102  011C                     	;# 
  4103  011C                     	;# 
  4104  011C                     	;# 
  4105  011D                     	;# 
  4106  011D                     	;# 
  4107  011D                     	;# 
  4108  011E                     	;# 
  4109  011E                     	;# 
  4110  011E                     	;# 
  4111  011F                     	;# 
  4112  011F                     	;# 
  4113  011F                     	;# 
  4114  011F                     	;# 
  4115  011F                     	;# 
  4116  018C                     	;# 
  4117  018D                     	;# 
  4118  018E                     	;# 
  4119  018F                     	;# 
  4120  0190                     	;# 
  4121  0191                     	;# 
  4122  0192                     	;# 
  4123  0196                     	;# 
  4124  0197                     	;# 
  4125  0198                     	;# 
  4126  0199                     	;# 
  4127  019A                     	;# 
  4128  019B                     	;# 
  4129  019C                     	;# 
  4130  020C                     	;# 
  4131  020C                     	;# 
  4132  020D                     	;# 
  4133  020E                     	;# 
  4134  020F                     	;# 
  4135  020F                     	;# 
  4136  0210                     	;# 
  4137  0210                     	;# 
  4138  0211                     	;# 
  4139  0211                     	;# 
  4140  0212                     	;# 
  4141  0212                     	;# 
  4142  0213                     	;# 
  4143  0214                     	;# 
  4144  0215                     	;# 
  4145  0215                     	;# 
  4146  0216                     	;# 
  4147  0216                     	;# 
  4148  0217                     	;# 
  4149  0217                     	;# 
  4150  0218                     	;# 
  4151  0218                     	;# 
  4152  0219                     	;# 
  4153  021A                     	;# 
  4154  021B                     	;# 
  4155  021B                     	;# 
  4156  021C                     	;# 
  4157  021C                     	;# 
  4158  021D                     	;# 
  4159  021D                     	;# 
  4160  021E                     	;# 
  4161  021F                     	;# 
  4162  028C                     	;# 
  4163  028C                     	;# 
  4164  028D                     	;# 
  4165  028D                     	;# 
  4166  028E                     	;# 
  4167  028F                     	;# 
  4168  0290                     	;# 
  4169  0290                     	;# 
  4170  0291                     	;# 
  4171  0292                     	;# 
  4172  0292                     	;# 
  4173  0293                     	;# 
  4174  0293                     	;# 
  4175  0294                     	;# 
  4176  0295                     	;# 
  4177  0296                     	;# 
  4178  0296                     	;# 
  4179  0297                     	;# 
  4180  0298                     	;# 
  4181  0298                     	;# 
  4182  0299                     	;# 
  4183  0299                     	;# 
  4184  029A                     	;# 
  4185  029B                     	;# 
  4186  029C                     	;# 
  4187  029C                     	;# 
  4188  029D                     	;# 
  4189  030C                     	;# 
  4190  030C                     	;# 
  4191  030D                     	;# 
  4192  030E                     	;# 
  4193  030F                     	;# 
  4194  0310                     	;# 
  4195  0310                     	;# 
  4196  0311                     	;# 
  4197  0312                     	;# 
  4198  0313                     	;# 
  4199  0314                     	;# 
  4200  0314                     	;# 
  4201  0315                     	;# 
  4202  0316                     	;# 
  4203  0317                     	;# 
  4204  0318                     	;# 
  4205  0318                     	;# 
  4206  0319                     	;# 
  4207  031A                     	;# 
  4208  031B                     	;# 
  4209  031C                     	;# 
  4210  031C                     	;# 
  4211  031D                     	;# 
  4212  031E                     	;# 
  4213  031F                     	;# 
  4214  038C                     	;# 
  4215  038D                     	;# 
  4216  038E                     	;# 
  4217  0390                     	;# 
  4218  0391                     	;# 
  4219  0392                     	;# 
  4220  040C                     	;# 
  4221  040D                     	;# 
  4222  040E                     	;# 
  4223  040F                     	;# 
  4224  0410                     	;# 
  4225  0411                     	;# 
  4226  0416                     	;# 
  4227  0416                     	;# 
  4228  0417                     	;# 
  4229  0418                     	;# 
  4230  0418                     	;# 
  4231  0419                     	;# 
  4232  041A                     	;# 
  4233  041A                     	;# 
  4234  041B                     	;# 
  4235  041C                     	;# 
  4236  041C                     	;# 
  4237  041D                     	;# 
  4238  041E                     	;# 
  4239  041F                     	;# 
  4240  048C                     	;# 
  4241  048C                     	;# 
  4242  048D                     	;# 
  4243  048E                     	;# 
  4244  048F                     	;# 
  4245  048F                     	;# 
  4246  0490                     	;# 
  4247  0491                     	;# 
  4248  0492                     	;# 
  4249  0492                     	;# 
  4250  0493                     	;# 
  4251  0494                     	;# 
  4252  0495                     	;# 
  4253  0495                     	;# 
  4254  0496                     	;# 
  4255  0497                     	;# 
  4256  0498                     	;# 
  4257  0499                     	;# 
  4258  049A                     	;# 
  4259  049B                     	;# 
  4260  049C                     	;# 
  4261  049D                     	;# 
  4262  050C                     	;# 
  4263  050C                     	;# 
  4264  050D                     	;# 
  4265  050E                     	;# 
  4266  050F                     	;# 
  4267  050F                     	;# 
  4268  0510                     	;# 
  4269  0511                     	;# 
  4270  0512                     	;# 
  4271  0512                     	;# 
  4272  0513                     	;# 
  4273  0514                     	;# 
  4274  0515                     	;# 
  4275  0515                     	;# 
  4276  0516                     	;# 
  4277  0517                     	;# 
  4278  0518                     	;# 
  4279  0519                     	;# 
  4280  051A                     	;# 
  4281  051B                     	;# 
  4282  051C                     	;# 
  4283  051D                     	;# 
  4284  058C                     	;# 
  4285  058C                     	;# 
  4286  058D                     	;# 
  4287  058E                     	;# 
  4288  058F                     	;# 
  4289  058F                     	;# 
  4290  0590                     	;# 
  4291  0591                     	;# 
  4292  0592                     	;# 
  4293  0593                     	;# 
  4294  060C                     	;# 
  4295  060D                     	;# 
  4296  060E                     	;# 
  4297  060F                     	;# 
  4298  0610                     	;# 
  4299  0611                     	;# 
  4300  0612                     	;# 
  4301  0613                     	;# 
  4302  0614                     	;# 
  4303  0616                     	;# 
  4304  0617                     	;# 
  4305  0618                     	;# 
  4306  0619                     	;# 
  4307  061A                     	;# 
  4308  061B                     	;# 
  4309  061C                     	;# 
  4310  061D                     	;# 
  4311  061E                     	;# 
  4312  068C                     	;# 
  4313  068D                     	;# 
  4314  068E                     	;# 
  4315  068F                     	;# 
  4316  0690                     	;# 
  4317  0691                     	;# 
  4318  0692                     	;# 
  4319  0693                     	;# 
  4320  0694                     	;# 
  4321  070C                     	;# 
  4322  070D                     	;# 
  4323  070E                     	;# 
  4324  070F                     	;# 
  4325  0710                     	;# 
  4326  0711                     	;# 
  4327  0712                     	;# 
  4328  0713                     	;# 
  4329  0714                     	;# 
  4330  0716                     	;# 
  4331  0717                     	;# 
  4332  0718                     	;# 
  4333  0719                     	;# 
  4334  071A                     	;# 
  4335  071B                     	;# 
  4336  071C                     	;# 
  4337  071D                     	;# 
  4338  071E                     	;# 
  4339  0796                     	;# 
  4340  0797                     	;# 
  4341  0798                     	;# 
  4342  0799                     	;# 
  4343  079A                     	;# 
  4344  079B                     	;# 
  4345  080C                     	;# 
  4346  080D                     	;# 
  4347  080E                     	;# 
  4348  080F                     	;# 
  4349  0810                     	;# 
  4350  0811                     	;# 
  4351  0812                     	;# 
  4352  0813                     	;# 
  4353  0814                     	;# 
  4354  081A                     	;# 
  4355  081B                     	;# 
  4356  081C                     	;# 
  4357  081D                     	;# 
  4358  081E                     	;# 
  4359  081F                     	;# 
  4360  088C                     	;# 
  4361  088D                     	;# 
  4362  088E                     	;# 
  4363  088F                     	;# 
  4364  0890                     	;# 
  4365  0891                     	;# 
  4366  0892                     	;# 
  4367  0893                     	;# 
  4368  0895                     	;# 
  4369  0896                     	;# 
  4370  0897                     	;# 
  4371  0898                     	;# 
  4372  0899                     	;# 
  4373  089A                     	;# 
  4374  089B                     	;# 
  4375  090C                     	;# 
  4376  090E                     	;# 
  4377  090F                     	;# 
  4378  091F                     	;# 
  4379  091F                     	;# 
  4380  098F                     	;# 
  4381  098F                     	;# 
  4382  0990                     	;# 
  4383  0991                     	;# 
  4384  0992                     	;# 
  4385  0993                     	;# 
  4386  0994                     	;# 
  4387  0995                     	;# 
  4388  0996                     	;# 
  4389  0997                     	;# 
  4390  0E0F                     	;# 
  4391  0E10                     	;# 
  4392  0E11                     	;# 
  4393  0E12                     	;# 
  4394  0E13                     	;# 
  4395  0E14                     	;# 
  4396  0E15                     	;# 
  4397  0E16                     	;# 
  4398  0E17                     	;# 
  4399  0E18                     	;# 
  4400  0E19                     	;# 
  4401  0E1A                     	;# 
  4402  0E1B                     	;# 
  4403  0E1C                     	;# 
  4404  0E1D                     	;# 
  4405  0E1E                     	;# 
  4406  0E1F                     	;# 
  4407  0E20                     	;# 
  4408  0E21                     	;# 
  4409  0E22                     	;# 
  4410  0E23                     	;# 
  4411  0E24                     	;# 
  4412  0E25                     	;# 
  4413  0E26                     	;# 
  4414  0E27                     	;# 
  4415  0E28                     	;# 
  4416  0E29                     	;# 
  4417  0E2A                     	;# 
  4418  0E2B                     	;# 
  4419  0E2C                     	;# 
  4420  0E2D                     	;# 
  4421  0E2E                     	;# 
  4422  0E2F                     	;# 
  4423  0E30                     	;# 
  4424  0E31                     	;# 
  4425  0E32                     	;# 
  4426  0E33                     	;# 
  4427  0E34                     	;# 
  4428  0E35                     	;# 
  4429  0E36                     	;# 
  4430  0E37                     	;# 
  4431  0E8F                     	;# 
  4432  0E90                     	;# 
  4433  0E91                     	;# 
  4434  0E92                     	;# 
  4435  0E93                     	;# 
  4436  0E94                     	;# 
  4437  0E95                     	;# 
  4438  0E96                     	;# 
  4439  0E97                     	;# 
  4440  0E9C                     	;# 
  4441  0E9D                     	;# 
  4442  0E9E                     	;# 
  4443  0EA1                     	;# 
  4444  0EA2                     	;# 
  4445  0EA3                     	;# 
  4446  0EA4                     	;# 
  4447  0EA5                     	;# 
  4448  0EA9                     	;# 
  4449  0EAA                     	;# 
  4450  0EAB                     	;# 
  4451  0EAC                     	;# 
  4452  0EB1                     	;# 
  4453  0EB2                     	;# 
  4454  0EB3                     	;# 
  4455  0EB8                     	;# 
  4456  0EB9                     	;# 
  4457  0EBA                     	;# 
  4458  0EBB                     	;# 
  4459  0EBC                     	;# 
  4460  0EBD                     	;# 
  4461  0EBE                     	;# 
  4462  0EC3                     	;# 
  4463  0EC5                     	;# 
  4464  0EC6                     	;# 
  4465  0EC7                     	;# 
  4466  0EC8                     	;# 
  4467  0EC9                     	;# 
  4468  0ECA                     	;# 
  4469  0ECB                     	;# 
  4470  0ECC                     	;# 
  4471  0F10                     	;# 
  4472  0F11                     	;# 
  4473  0F12                     	;# 
  4474  0F13                     	;# 
  4475  0F14                     	;# 
  4476  0F15                     	;# 
  4477  0F16                     	;# 
  4478  0F17                     	;# 
  4479  0F18                     	;# 
  4480  0F19                     	;# 
  4481  0F1A                     	;# 
  4482  0F1B                     	;# 
  4483  0F1C                     	;# 
  4484  0F1D                     	;# 
  4485  0F1E                     	;# 
  4486  0F1F                     	;# 
  4487  0F20                     	;# 
  4488  0F21                     	;# 
  4489  0F22                     	;# 
  4490  0F23                     	;# 
  4491  0F24                     	;# 
  4492  0F25                     	;# 
  4493  0F26                     	;# 
  4494  0F27                     	;# 
  4495  0F28                     	;# 
  4496  0F29                     	;# 
  4497  0F2A                     	;# 
  4498  0F2B                     	;# 
  4499  0F2C                     	;# 
  4500  0F2D                     	;# 
  4501  0F2E                     	;# 
  4502  0F2F                     	;# 
  4503  0F30                     	;# 
  4504  0F31                     	;# 
  4505  0F32                     	;# 
  4506  0F38                     	;# 
  4507  0F39                     	;# 
  4508  0F3A                     	;# 
  4509  0F3B                     	;# 
  4510  0F3C                     	;# 
  4511  0F3D                     	;# 
  4512  0F3E                     	;# 
  4513  0F3F                     	;# 
  4514  0F40                     	;# 
  4515  0F41                     	;# 
  4516  0F43                     	;# 
  4517  0F44                     	;# 
  4518  0F45                     	;# 
  4519  0F46                     	;# 
  4520  0F47                     	;# 
  4521  0F48                     	;# 
  4522  0F49                     	;# 
  4523  0F4A                     	;# 
  4524  0F4B                     	;# 
  4525  0F4C                     	;# 
  4526  0F4E                     	;# 
  4527  0F4F                     	;# 
  4528  0F50                     	;# 
  4529  0F51                     	;# 
  4530  0F52                     	;# 
  4531  0F53                     	;# 
  4532  0F54                     	;# 
  4533  0F55                     	;# 
  4534  0F56                     	;# 
  4535  0F57                     	;# 
  4536  0F59                     	;# 
  4537  0F5A                     	;# 
  4538  0F5B                     	;# 
  4539  0F5C                     	;# 
  4540  0F5D                     	;# 
  4541  0F61                     	;# 
  4542  0F62                     	;# 
  4543  0F64                     	;# 
  4544  0F65                     	;# 
  4545  0F66                     	;# 
  4546  0F67                     	;# 
  4547  0F68                     	;# 
  4548  0F69                     	;# 
  4549  0F6A                     	;# 
  4550  0F6B                     	;# 
  4551  0F6C                     	;# 
  4552  0F6D                     	;# 
  4553  0FE4                     	;# 
  4554  0FE5                     	;# 
  4555  0FE6                     	;# 
  4556  0FE7                     	;# 
  4557  0FE8                     	;# 
  4558  0FE9                     	;# 
  4559  0FEA                     	;# 
  4560  0FEB                     	;# 
  4561  0FED                     	;# 
  4562  0FEE                     	;# 
  4563  0FEF                     	;# 
  4564  0000                     	;# 
  4565  0001                     	;# 
  4566  0002                     	;# 
  4567  0003                     	;# 
  4568  0004                     	;# 
  4569  0005                     	;# 
  4570  0006                     	;# 
  4571  0007                     	;# 
  4572  0008                     	;# 
  4573  0009                     	;# 
  4574  000A                     	;# 
  4575  000B                     	;# 
  4576  000C                     	;# 
  4577  000D                     	;# 
  4578  000E                     	;# 
  4579  000F                     	;# 
  4580  0010                     	;# 
  4581  0011                     	;# 
  4582  0012                     	;# 
  4583  0013                     	;# 
  4584  0014                     	;# 
  4585  0015                     	;# 
  4586  0016                     	;# 
  4587  0017                     	;# 
  4588  0018                     	;# 
  4589  0019                     	;# 
  4590  001A                     	;# 
  4591  001C                     	;# 
  4592  001C                     	;# 
  4593  001D                     	;# 
  4594  001D                     	;# 
  4595  001E                     	;# 
  4596  001F                     	;# 
  4597  008C                     	;# 
  4598  008C                     	;# 
  4599  008D                     	;# 
  4600  008E                     	;# 
  4601  008E                     	;# 
  4602  008F                     	;# 
  4603  0090                     	;# 
  4604  0090                     	;# 
  4605  0091                     	;# 
  4606  0093                     	;# 
  4607  0094                     	;# 
  4608  0095                     	;# 
  4609  0096                     	;# 
  4610  0097                     	;# 
  4611  0098                     	;# 
  4612  0099                     	;# 
  4613  009A                     	;# 
  4614  009B                     	;# 
  4615  009C                     	;# 
  4616  009D                     	;# 
  4617  009E                     	;# 
  4618  010C                     	;# 
  4619  010D                     	;# 
  4620  010E                     	;# 
  4621  010E                     	;# 
  4622  010F                     	;# 
  4623  0110                     	;# 
  4624  0110                     	;# 
  4625  0111                     	;# 
  4626  0112                     	;# 
  4627  0112                     	;# 
  4628  0113                     	;# 
  4629  0114                     	;# 
  4630  0114                     	;# 
  4631  0115                     	;# 
  4632  0116                     	;# 
  4633  0116                     	;# 
  4634  0117                     	;# 
  4635  0119                     	;# 
  4636  0119                     	;# 
  4637  0119                     	;# 
  4638  011A                     	;# 
  4639  011A                     	;# 
  4640  011A                     	;# 
  4641  011B                     	;# 
  4642  011B                     	;# 
  4643  011B                     	;# 
  4644  011B                     	;# 
  4645  011B                     	;# 
  4646  011C                     	;# 
  4647  011C                     	;# 
  4648  011C                     	;# 
  4649  011D                     	;# 
  4650  011D                     	;# 
  4651  011D                     	;# 
  4652  011E                     	;# 
  4653  011E                     	;# 
  4654  011E                     	;# 
  4655  011F                     	;# 
  4656  011F                     	;# 
  4657  011F                     	;# 
  4658  011F                     	;# 
  4659  011F                     	;# 
  4660  018C                     	;# 
  4661  018D                     	;# 
  4662  018E                     	;# 
  4663  018F                     	;# 
  4664  0190                     	;# 
  4665  0191                     	;# 
  4666  0192                     	;# 
  4667  0196                     	;# 
  4668  0197                     	;# 
  4669  0198                     	;# 
  4670  0199                     	;# 
  4671  019A                     	;# 
  4672  019B                     	;# 
  4673  019C                     	;# 
  4674  020C                     	;# 
  4675  020C                     	;# 
  4676  020D                     	;# 
  4677  020E                     	;# 
  4678  020F                     	;# 
  4679  020F                     	;# 
  4680  0210                     	;# 
  4681  0210                     	;# 
  4682  0211                     	;# 
  4683  0211                     	;# 
  4684  0212                     	;# 
  4685  0212                     	;# 
  4686  0213                     	;# 
  4687  0214                     	;# 
  4688  0215                     	;# 
  4689  0215                     	;# 
  4690  0216                     	;# 
  4691  0216                     	;# 
  4692  0217                     	;# 
  4693  0217                     	;# 
  4694  0218                     	;# 
  4695  0218                     	;# 
  4696  0219                     	;# 
  4697  021A                     	;# 
  4698  021B                     	;# 
  4699  021B                     	;# 
  4700  021C                     	;# 
  4701  021C                     	;# 
  4702  021D                     	;# 
  4703  021D                     	;# 
  4704  021E                     	;# 
  4705  021F                     	;# 
  4706  028C                     	;# 
  4707  028C                     	;# 
  4708  028D                     	;# 
  4709  028D                     	;# 
  4710  028E                     	;# 
  4711  028F                     	;# 
  4712  0290                     	;# 
  4713  0290                     	;# 
  4714  0291                     	;# 
  4715  0292                     	;# 
  4716  0292                     	;# 
  4717  0293                     	;# 
  4718  0293                     	;# 
  4719  0294                     	;# 
  4720  0295                     	;# 
  4721  0296                     	;# 
  4722  0296                     	;# 
  4723  0297                     	;# 
  4724  0298                     	;# 
  4725  0298                     	;# 
  4726  0299                     	;# 
  4727  0299                     	;# 
  4728  029A                     	;# 
  4729  029B                     	;# 
  4730  029C                     	;# 
  4731  029C                     	;# 
  4732  029D                     	;# 
  4733  030C                     	;# 
  4734  030C                     	;# 
  4735  030D                     	;# 
  4736  030E                     	;# 
  4737  030F                     	;# 
  4738  0310                     	;# 
  4739  0310                     	;# 
  4740  0311                     	;# 
  4741  0312                     	;# 
  4742  0313                     	;# 
  4743  0314                     	;# 
  4744  0314                     	;# 
  4745  0315                     	;# 
  4746  0316                     	;# 
  4747  0317                     	;# 
  4748  0318                     	;# 
  4749  0318                     	;# 
  4750  0319                     	;# 
  4751  031A                     	;# 
  4752  031B                     	;# 
  4753  031C                     	;# 
  4754  031C                     	;# 
  4755  031D                     	;# 
  4756  031E                     	;# 
  4757  031F                     	;# 
  4758  038C                     	;# 
  4759  038D                     	;# 
  4760  038E                     	;# 
  4761  0390                     	;# 
  4762  0391                     	;# 
  4763  0392                     	;# 
  4764  040C                     	;# 
  4765  040D                     	;# 
  4766  040E                     	;# 
  4767  040F                     	;# 
  4768  0410                     	;# 
  4769  0411                     	;# 
  4770  0416                     	;# 
  4771  0416                     	;# 
  4772  0417                     	;# 
  4773  0418                     	;# 
  4774  0418                     	;# 
  4775  0419                     	;# 
  4776  041A                     	;# 
  4777  041A                     	;# 
  4778  041B                     	;# 
  4779  041C                     	;# 
  4780  041C                     	;# 
  4781  041D                     	;# 
  4782  041E                     	;# 
  4783  041F                     	;# 
  4784  048C                     	;# 
  4785  048C                     	;# 
  4786  048D                     	;# 
  4787  048E                     	;# 
  4788  048F                     	;# 
  4789  048F                     	;# 
  4790  0490                     	;# 
  4791  0491                     	;# 
  4792  0492                     	;# 
  4793  0492                     	;# 
  4794  0493                     	;# 
  4795  0494                     	;# 
  4796  0495                     	;# 
  4797  0495                     	;# 
  4798  0496                     	;# 
  4799  0497                     	;# 
  4800  0498                     	;# 
  4801  0499                     	;# 
  4802  049A                     	;# 
  4803  049B                     	;# 
  4804  049C                     	;# 
  4805  049D                     	;# 
  4806  050C                     	;# 
  4807  050C                     	;# 
  4808  050D                     	;# 
  4809  050E                     	;# 
  4810  050F                     	;# 
  4811  050F                     	;# 
  4812  0510                     	;# 
  4813  0511                     	;# 
  4814  0512                     	;# 
  4815  0512                     	;# 
  4816  0513                     	;# 
  4817  0514                     	;# 
  4818  0515                     	;# 
  4819  0515                     	;# 
  4820  0516                     	;# 
  4821  0517                     	;# 
  4822  0518                     	;# 
  4823  0519                     	;# 
  4824  051A                     	;# 
  4825  051B                     	;# 
  4826  051C                     	;# 
  4827  051D                     	;# 
  4828  058C                     	;# 
  4829  058C                     	;# 
  4830  058D                     	;# 
  4831  058E                     	;# 
  4832  058F                     	;# 
  4833  058F                     	;# 
  4834  0590                     	;# 
  4835  0591                     	;# 
  4836  0592                     	;# 
  4837  0593                     	;# 
  4838  060C                     	;# 
  4839  060D                     	;# 
  4840  060E                     	;# 
  4841  060F                     	;# 
  4842  0610                     	;# 
  4843  0611                     	;# 
  4844  0612                     	;# 
  4845  0613                     	;# 
  4846  0614                     	;# 
  4847  0616                     	;# 
  4848  0617                     	;# 
  4849  0618                     	;# 
  4850  0619                     	;# 
  4851  061A                     	;# 
  4852  061B                     	;# 
  4853  061C                     	;# 
  4854  061D                     	;# 
  4855  061E                     	;# 
  4856  068C                     	;# 
  4857  068D                     	;# 
  4858  068E                     	;# 
  4859  068F                     	;# 
  4860  0690                     	;# 
  4861  0691                     	;# 
  4862  0692                     	;# 
  4863  0693                     	;# 
  4864  0694                     	;# 
  4865  070C                     	;# 
  4866  070D                     	;# 
  4867  070E                     	;# 
  4868  070F                     	;# 
  4869  0710                     	;# 
  4870  0711                     	;# 
  4871  0712                     	;# 
  4872  0713                     	;# 
  4873  0714                     	;# 
  4874  0716                     	;# 
  4875  0717                     	;# 
  4876  0718                     	;# 
  4877  0719                     	;# 
  4878  071A                     	;# 
  4879  071B                     	;# 
  4880  071C                     	;# 
  4881  071D                     	;# 
  4882  071E                     	;# 
  4883  0796                     	;# 
  4884  0797                     	;# 
  4885  0798                     	;# 
  4886  0799                     	;# 
  4887  079A                     	;# 
  4888  079B                     	;# 
  4889  080C                     	;# 
  4890  080D                     	;# 
  4891  080E                     	;# 
  4892  080F                     	;# 
  4893  0810                     	;# 
  4894  0811                     	;# 
  4895  0812                     	;# 
  4896  0813                     	;# 
  4897  0814                     	;# 
  4898  081A                     	;# 
  4899  081B                     	;# 
  4900  081C                     	;# 
  4901  081D                     	;# 
  4902  081E                     	;# 
  4903  081F                     	;# 
  4904  088C                     	;# 
  4905  088D                     	;# 
  4906  088E                     	;# 
  4907  088F                     	;# 
  4908  0890                     	;# 
  4909  0891                     	;# 
  4910  0892                     	;# 
  4911  0893                     	;# 
  4912  0895                     	;# 
  4913  0896                     	;# 
  4914  0897                     	;# 
  4915  0898                     	;# 
  4916  0899                     	;# 
  4917  089A                     	;# 
  4918  089B                     	;# 
  4919  090C                     	;# 
  4920  090E                     	;# 
  4921  090F                     	;# 
  4922  091F                     	;# 
  4923  091F                     	;# 
  4924  098F                     	;# 
  4925  098F                     	;# 
  4926  0990                     	;# 
  4927  0991                     	;# 
  4928  0992                     	;# 
  4929  0993                     	;# 
  4930  0994                     	;# 
  4931  0995                     	;# 
  4932  0996                     	;# 
  4933  0997                     	;# 
  4934  0E0F                     	;# 
  4935  0E10                     	;# 
  4936  0E11                     	;# 
  4937  0E12                     	;# 
  4938  0E13                     	;# 
  4939  0E14                     	;# 
  4940  0E15                     	;# 
  4941  0E16                     	;# 
  4942  0E17                     	;# 
  4943  0E18                     	;# 
  4944  0E19                     	;# 
  4945  0E1A                     	;# 
  4946  0E1B                     	;# 
  4947  0E1C                     	;# 
  4948  0E1D                     	;# 
  4949  0E1E                     	;# 
  4950  0E1F                     	;# 
  4951  0E20                     	;# 
  4952  0E21                     	;# 
  4953  0E22                     	;# 
  4954  0E23                     	;# 
  4955  0E24                     	;# 
  4956  0E25                     	;# 
  4957  0E26                     	;# 
  4958  0E27                     	;# 
  4959  0E28                     	;# 
  4960  0E29                     	;# 
  4961  0E2A                     	;# 
  4962  0E2B                     	;# 
  4963  0E2C                     	;# 
  4964  0E2D                     	;# 
  4965  0E2E                     	;# 
  4966  0E2F                     	;# 
  4967  0E30                     	;# 
  4968  0E31                     	;# 
  4969  0E32                     	;# 
  4970  0E33                     	;# 
  4971  0E34                     	;# 
  4972  0E35                     	;# 
  4973  0E36                     	;# 
  4974  0E37                     	;# 
  4975  0E8F                     	;# 
  4976  0E90                     	;# 
  4977  0E91                     	;# 
  4978  0E92                     	;# 
  4979  0E93                     	;# 
  4980  0E94                     	;# 
  4981  0E95                     	;# 
  4982  0E96                     	;# 
  4983  0E97                     	;# 
  4984  0E9C                     	;# 
  4985  0E9D                     	;# 
  4986  0E9E                     	;# 
  4987  0EA1                     	;# 
  4988  0EA2                     	;# 
  4989  0EA3                     	;# 
  4990  0EA4                     	;# 
  4991  0EA5                     	;# 
  4992  0EA9                     	;# 
  4993  0EAA                     	;# 
  4994  0EAB                     	;# 
  4995  0EAC                     	;# 
  4996  0EB1                     	;# 
  4997  0EB2                     	;# 
  4998  0EB3                     	;# 
  4999  0EB8                     	;# 
  5000  0EB9                     	;# 
  5001  0EBA                     	;# 
  5002  0EBB                     	;# 
  5003  0EBC                     	;# 
  5004  0EBD                     	;# 
  5005  0EBE                     	;# 
  5006  0EC3                     	;# 
  5007  0EC5                     	;# 
  5008  0EC6                     	;# 
  5009  0EC7                     	;# 
  5010  0EC8                     	;# 
  5011  0EC9                     	;# 
  5012  0ECA                     	;# 
  5013  0ECB                     	;# 
  5014  0ECC                     	;# 
  5015  0F10                     	;# 
  5016  0F11                     	;# 
  5017  0F12                     	;# 
  5018  0F13                     	;# 
  5019  0F14                     	;# 
  5020  0F15                     	;# 
  5021  0F16                     	;# 
  5022  0F17                     	;# 
  5023  0F18                     	;# 
  5024  0F19                     	;# 
  5025  0F1A                     	;# 
  5026  0F1B                     	;# 
  5027  0F1C                     	;# 
  5028  0F1D                     	;# 
  5029  0F1E                     	;# 
  5030  0F1F                     	;# 
  5031  0F20                     	;# 
  5032  0F21                     	;# 
  5033  0F22                     	;# 
  5034  0F23                     	;# 
  5035  0F24                     	;# 
  5036  0F25                     	;# 
  5037  0F26                     	;# 
  5038  0F27                     	;# 
  5039  0F28                     	;# 
  5040  0F29                     	;# 
  5041  0F2A                     	;# 
  5042  0F2B                     	;# 
  5043  0F2C                     	;# 
  5044  0F2D                     	;# 
  5045  0F2E                     	;# 
  5046  0F2F                     	;# 
  5047  0F30                     	;# 
  5048  0F31                     	;# 
  5049  0F32                     	;# 
  5050  0F38                     	;# 
  5051  0F39                     	;# 
  5052  0F3A                     	;# 
  5053  0F3B                     	;# 
  5054  0F3C                     	;# 
  5055  0F3D                     	;# 
  5056  0F3E                     	;# 
  5057  0F3F                     	;# 
  5058  0F40                     	;# 
  5059  0F41                     	;# 
  5060  0F43                     	;# 
  5061  0F44                     	;# 
  5062  0F45                     	;# 
  5063  0F46                     	;# 
  5064  0F47                     	;# 
  5065  0F48                     	;# 
  5066  0F49                     	;# 
  5067  0F4A                     	;# 
  5068  0F4B                     	;# 
  5069  0F4C                     	;# 
  5070  0F4E                     	;# 
  5071  0F4F                     	;# 
  5072  0F50                     	;# 
  5073  0F51                     	;# 
  5074  0F52                     	;# 
  5075  0F53                     	;# 
  5076  0F54                     	;# 
  5077  0F55                     	;# 
  5078  0F56                     	;# 
  5079  0F57                     	;# 
  5080  0F59                     	;# 
  5081  0F5A                     	;# 
  5082  0F5B                     	;# 
  5083  0F5C                     	;# 
  5084  0F5D                     	;# 
  5085  0F61                     	;# 
  5086  0F62                     	;# 
  5087  0F64                     	;# 
  5088  0F65                     	;# 
  5089  0F66                     	;# 
  5090  0F67                     	;# 
  5091  0F68                     	;# 
  5092  0F69                     	;# 
  5093  0F6A                     	;# 
  5094  0F6B                     	;# 
  5095  0F6C                     	;# 
  5096  0F6D                     	;# 
  5097  0FE4                     	;# 
  5098  0FE5                     	;# 
  5099  0FE6                     	;# 
  5100  0FE7                     	;# 
  5101  0FE8                     	;# 
  5102  0FE9                     	;# 
  5103  0FEA                     	;# 
  5104  0FEB                     	;# 
  5105  0FED                     	;# 
  5106  0FEE                     	;# 
  5107  0FEF                     	;_displayArray
  5108                           
  5109                           	psect	idataBANK1
  5110  1021                     __pidataBANK1:	
  5111                           
  5112                           ;initializer for main@F15397
  5113  1021  3441               	retlw	65
  5114  1022  346C               	retlw	108
  5115  1023  3461               	retlw	97
  5116  1024  3472               	retlw	114
  5117  1025  346D               	retlw	109
  5118  1026  3420               	retlw	32
  5119  1027  3443               	retlw	67
  5120  1028  346C               	retlw	108
  5121  1029  346F               	retlw	111
  5122  102A  3463               	retlw	99
  5123  102B  346B               	retlw	107
  5124  102C  3400               	retlw	0
  5125                           
  5126                           	psect	idataBIGRAM
  5127  026E                     __pidataBIGRAM:	
  5128                           
  5129                           ;initializer for _displayArray
  5130  026E  343F               	retlw	63
  5131  026F  3440               	retlw	64
  5132  0270  3438               	retlw	56
  5133  0271  3440               	retlw	64
  5134  0272  343F               	retlw	63
  5135  0273  3438               	retlw	56
  5136  0274  3454               	retlw	84
  5137  0275  3454               	retlw	84
  5138  0276  3454               	retlw	84
  5139  0277  3418               	retlw	24
  5140  0278  3400               	retlw	0
  5141  0279  3441               	retlw	65
  5142  027A  347F               	retlw	127
  5143  027B  3440               	retlw	64
  5144  027C  3400               	retlw	0
  5145  027D  3438               	retlw	56
  5146  027E  3444               	retlw	68
  5147  027F  3444               	retlw	68
  5148  0280  3444               	retlw	68
  5149  0281  3428               	retlw	40
  5150  0282  3438               	retlw	56
  5151  0283  3444               	retlw	68
  5152  0284  3444               	retlw	68
  5153  0285  3444               	retlw	68
  5154  0286  3438               	retlw	56
  5155  0287  347C               	retlw	124
  5156  0288  3404               	retlw	4
  5157  0289  3478               	retlw	120
  5158  028A  3404               	retlw	4
  5159  028B  3478               	retlw	120
  5160  028C  3438               	retlw	56
  5161  028D  3454               	retlw	84
  5162  028E  3454               	retlw	84
  5163  028F  3454               	retlw	84
  5164  0290  3418               	retlw	24
  5165  0291  3400               	retlw	0
  5166  0292  3400               	retlw	0
  5167  0293  3400               	retlw	0
  5168  0294  3400               	retlw	0
  5169  0295  3400               	retlw	0
  5170  0296  3400               	retlw	0
  5171  0297  3400               	retlw	0
  5172  0298  3400               	retlw	0
  5173  0299  3400               	retlw	0
  5174  029A  3400               	retlw	0
  5175  029B  347F               	retlw	127
  5176  029C  3441               	retlw	65
  5177  029D  3441               	retlw	65
  5178  029E  3441               	retlw	65
  5179  029F  343E               	retlw	62
  5180  02A0  3400               	retlw	0
  5181  02A1  3444               	retlw	68
  5182  02A2  347D               	retlw	125
  5183  02A3  3440               	retlw	64
  5184  02A4  3400               	retlw	0
  5185  02A5  3400               	retlw	0
  5186  02A6  3408               	retlw	8
  5187  02A7  347E               	retlw	126
  5188  02A8  3409               	retlw	9
  5189  02A9  3402               	retlw	2
  5190  02AA  3400               	retlw	0
  5191  02AB  3408               	retlw	8
  5192  02AC  347E               	retlw	126
  5193  02AD  3409               	retlw	9
  5194  02AE  3402               	retlw	2
  5195  02AF  343C               	retlw	60
  5196  02B0  3440               	retlw	64
  5197  02B1  3440               	retlw	64
  5198  02B2  3420               	retlw	32
  5199  02B3  347C               	retlw	124
  5200  02B4  3448               	retlw	72
  5201  02B5  3454               	retlw	84
  5202  02B6  3454               	retlw	84
  5203  02B7  3454               	retlw	84
  5204  02B8  3424               	retlw	36
  5205  02B9  3438               	retlw	56
  5206  02BA  3454               	retlw	84
  5207  02BB  3454               	retlw	84
  5208  02BC  3454               	retlw	84
  5209  02BD  3418               	retlw	24
  5210  02BE  347C               	retlw	124
  5211  02BF  3408               	retlw	8
  5212  02C0  3404               	retlw	4
  5213  02C1  3404               	retlw	4
  5214  02C2  3408               	retlw	8
  5215  02C3  3400               	retlw	0
  5216  02C4  3400               	retlw	0
  5217  02C5  3400               	retlw	0
  5218  02C6  3400               	retlw	0
  5219  02C7  3400               	retlw	0
  5220  02C8  3400               	retlw	0
  5221  02C9  3400               	retlw	0
  5222  02CA  3400               	retlw	0
  5223  02CB  3400               	retlw	0
  5224  02CC  3400               	retlw	0
  5225  02CD  3400               	retlw	0
  5226  02CE  3400               	retlw	0
  5227  02CF  3400               	retlw	0
  5228  02D0  3400               	retlw	0
  5229  02D1  3400               	retlw	0
  5230  02D2  3400               	retlw	0
  5231  02D3  3400               	retlw	0
  5232  02D4  3400               	retlw	0
  5233  02D5  3400               	retlw	0
  5234  02D6  3400               	retlw	0
  5235  02D7  3400               	retlw	0
  5236  02D8  3400               	retlw	0
  5237  02D9  3400               	retlw	0
  5238  02DA  3400               	retlw	0
  5239  02DB  3400               	retlw	0
  5240  02DC  3400               	retlw	0
  5241  02DD  3400               	retlw	0
  5242  02DE  3400               	retlw	0
  5243  02DF  3400               	retlw	0
  5244  02E0  3400               	retlw	0
  5245  02E1  3400               	retlw	0
  5246  02E2  3400               	retlw	0
  5247  02E3  3400               	retlw	0
  5248  02E4  3400               	retlw	0
  5249  02E5  3400               	retlw	0
  5250  02E6  3400               	retlw	0
  5251  02E7  3400               	retlw	0
  5252  02E8  3400               	retlw	0
  5253  02E9  3400               	retlw	0
  5254  02EA  3400               	retlw	0
  5255  02EB  3400               	retlw	0
  5256  02EC  3400               	retlw	0
  5257  02ED  3400               	retlw	0
  5258  02EE  3400               	retlw	0
  5259  02EF  3400               	retlw	0
  5260  02F0  3400               	retlw	0
  5261  02F1  3400               	retlw	0
  5262  02F2  3400               	retlw	0
  5263  02F3  3400               	retlw	0
  5264  02F4  3400               	retlw	0
  5265  02F5  3400               	retlw	0
  5266  02F6  3400               	retlw	0
  5267  02F7  3400               	retlw	0
  5268  02F8  3400               	retlw	0
  5269  02F9  3400               	retlw	0
  5270  02FA  3400               	retlw	0
  5271  02FB  3400               	retlw	0
  5272  02FC  3400               	retlw	0
  5273  02FD  3400               	retlw	0
  5274  02FE  3400               	retlw	0
  5275  02FF  3400               	retlw	0
  5276  0300  3400               	retlw	0
  5277  0301  3400               	retlw	0
  5278  0302  3400               	retlw	0
  5279  0303  3400               	retlw	0
  5280  0304  3400               	retlw	0
  5281  0305  3400               	retlw	0
  5282  0306  3400               	retlw	0
  5283  0307  3400               	retlw	0
  5284  0308  3400               	retlw	0
  5285  0309  3400               	retlw	0
  5286  030A  3400               	retlw	0
  5287  030B  3400               	retlw	0
  5288  030C  3400               	retlw	0
  5289  030D  3400               	retlw	0
  5290  030E  3400               	retlw	0
  5291  030F  3400               	retlw	0
  5292  0310  3400               	retlw	0
  5293  0311  3400               	retlw	0
  5294  0312  3400               	retlw	0
  5295  0313  3400               	retlw	0
  5296  0314  3400               	retlw	0
  5297  0315  3400               	retlw	0
  5298  0316  3400               	retlw	0
  5299  0317  3400               	retlw	0
  5300  0318  3400               	retlw	0
  5301  0319  3400               	retlw	0
  5302  031A  3400               	retlw	0
  5303  031B  3400               	retlw	0
  5304  031C  3400               	retlw	0
  5305  031D  3400               	retlw	0
  5306  031E  3400               	retlw	0
  5307  031F  3400               	retlw	0
  5308  0320  3400               	retlw	0
  5309  0321  3400               	retlw	0
  5310  0322  3400               	retlw	0
  5311  0323  3400               	retlw	0
  5312  0324  3400               	retlw	0
  5313  0325  3400               	retlw	0
  5314  0326  3400               	retlw	0
  5315  0327  3400               	retlw	0
  5316  0328  3400               	retlw	0
  5317  0329  3400               	retlw	0
  5318  032A  3400               	retlw	0
  5319  032B  3400               	retlw	0
  5320  032C  3400               	retlw	0
  5321  032D  3400               	retlw	0
  5322  032E  3400               	retlw	0
  5323  032F  3400               	retlw	0
  5324  0330  3400               	retlw	0
  5325  0331  3400               	retlw	0
  5326  0332  3400               	retlw	0
  5327  0333  3400               	retlw	0
  5328  0334  3400               	retlw	0
  5329  0335  3400               	retlw	0
  5330  0336  3400               	retlw	0
  5331  0337  3400               	retlw	0
  5332  0338  3400               	retlw	0
  5333  0339  3400               	retlw	0
  5334  033A  3400               	retlw	0
  5335  033B  3400               	retlw	0
  5336  033C  3400               	retlw	0
  5337  033D  3400               	retlw	0
  5338  033E  3400               	retlw	0
  5339  033F  3400               	retlw	0
  5340  0340  3400               	retlw	0
  5341  0341  3400               	retlw	0
  5342  0342  3400               	retlw	0
  5343  0343  3400               	retlw	0
  5344  0344  3400               	retlw	0
  5345  0345  3400               	retlw	0
  5346  0346  3400               	retlw	0
  5347  0347  3400               	retlw	0
  5348  0348  3400               	retlw	0
  5349  0349  3400               	retlw	0
  5350  034A  3400               	retlw	0
  5351  034B  3400               	retlw	0
  5352  034C  3400               	retlw	0
  5353  034D  3400               	retlw	0
  5354  034E  3400               	retlw	0
  5355  034F  3400               	retlw	0
  5356  0350  3400               	retlw	0
  5357  0351  3400               	retlw	0
  5358  0352  3400               	retlw	0
  5359  0353  3400               	retlw	0
  5360  0354  3400               	retlw	0
  5361  0355  3400               	retlw	0
  5362  0356  3400               	retlw	0
  5363  0357  3400               	retlw	0
  5364  0358  3400               	retlw	0
  5365  0359  3400               	retlw	0
  5366  035A  3400               	retlw	0
  5367  035B  3400               	retlw	0
  5368  035C  3400               	retlw	0
  5369  035D  3400               	retlw	0
  5370  035E  3400               	retlw	0
  5371  035F  3400               	retlw	0
  5372  0360  3400               	retlw	0
  5373  0361  3400               	retlw	0
  5374  0362  3400               	retlw	0
  5375  0363  3400               	retlw	0
  5376  0364  3400               	retlw	0
  5377  0365  3400               	retlw	0
  5378  0366  3400               	retlw	0
  5379  0367  3400               	retlw	0
  5380  0368  3400               	retlw	0
  5381  0369  3400               	retlw	0
  5382  036A  3400               	retlw	0
  5383  036B  3400               	retlw	0
  5384  036C  3400               	retlw	0
  5385  036D  3400               	retlw	0
  5386  036E  3400               	retlw	0
  5387  036F  3400               	retlw	0
  5388  0370  3400               	retlw	0
  5389  0371  3400               	retlw	0
  5390  0372  3400               	retlw	0
  5391  0373  3400               	retlw	0
  5392  0374  3400               	retlw	0
  5393  0375  3400               	retlw	0
  5394  0376  3400               	retlw	0
  5395  0377  3400               	retlw	0
  5396  0378  3400               	retlw	0
  5397  0379  3400               	retlw	0
  5398  037A  3400               	retlw	0
  5399  037B  3400               	retlw	0
  5400  037C  3400               	retlw	0
  5401  037D  3400               	retlw	0
  5402  037E  3400               	retlw	0
  5403  037F  3400               	retlw	0
  5404  0380  3400               	retlw	0
  5405  0381  3400               	retlw	0
  5406  0382  3400               	retlw	0
  5407  0383  3400               	retlw	0
  5408  0384  3400               	retlw	0
  5409  0385  3400               	retlw	0
  5410  0386  3400               	retlw	0
  5411  0387  3400               	retlw	0
  5412  0388  3400               	retlw	0
  5413  0389  3400               	retlw	0
  5414  038A  3400               	retlw	0
  5415  038B  3400               	retlw	0
  5416  038C  3400               	retlw	0
  5417  038D  3400               	retlw	0
  5418  038E  3400               	retlw	0
  5419  038F  3400               	retlw	0
  5420  0390  3400               	retlw	0
  5421  0391  3400               	retlw	0
  5422  0392  3400               	retlw	0
  5423  0393  3400               	retlw	0
  5424  0394  3400               	retlw	0
  5425  0395  3400               	retlw	0
  5426  0396  3400               	retlw	0
  5427  0397  3400               	retlw	0
  5428  0398  3400               	retlw	0
  5429  0399  3400               	retlw	0
  5430  039A  3400               	retlw	0
  5431  039B  3400               	retlw	0
  5432  039C  3400               	retlw	0
  5433  039D  3400               	retlw	0
  5434  039E  3400               	retlw	0
  5435  039F  3400               	retlw	0
  5436  03A0  3400               	retlw	0
  5437  03A1  3400               	retlw	0
  5438  03A2  3400               	retlw	0
  5439  03A3  3400               	retlw	0
  5440  03A4  3400               	retlw	0
  5441  03A5  3400               	retlw	0
  5442  03A6  3400               	retlw	0
  5443  03A7  3400               	retlw	0
  5444  03A8  3400               	retlw	0
  5445  03A9  3400               	retlw	0
  5446  03AA  3400               	retlw	0
  5447  03AB  3400               	retlw	0
  5448  03AC  3400               	retlw	0
  5449  03AD  3400               	retlw	0
  5450  03AE  3400               	retlw	0
  5451  03AF  3400               	retlw	0
  5452  03B0  3400               	retlw	0
  5453  03B1  3400               	retlw	0
  5454  03B2  3400               	retlw	0
  5455  03B3  3400               	retlw	0
  5456  03B4  3400               	retlw	0
  5457  03B5  3400               	retlw	0
  5458  03B6  3400               	retlw	0
  5459  03B7  3400               	retlw	0
  5460  03B8  3400               	retlw	0
  5461  03B9  3400               	retlw	0
  5462  03BA  3400               	retlw	0
  5463  03BB  3400               	retlw	0
  5464  03BC  3400               	retlw	0
  5465  03BD  3400               	retlw	0
  5466  03BE  3400               	retlw	0
  5467  03BF  3400               	retlw	0
  5468  03C0  3400               	retlw	0
  5469  03C1  3400               	retlw	0
  5470  03C2  3400               	retlw	0
  5471  03C3  3400               	retlw	0
  5472  03C4  3400               	retlw	0
  5473  03C5  3400               	retlw	0
  5474  03C6  3400               	retlw	0
  5475  03C7  3400               	retlw	0
  5476  03C8  3400               	retlw	0
  5477  03C9  3400               	retlw	0
  5478  03CA  3400               	retlw	0
  5479  03CB  3400               	retlw	0
  5480  03CC  3400               	retlw	0
  5481  03CD  3400               	retlw	0
  5482  03CE  3400               	retlw	0
  5483  03CF  3400               	retlw	0
  5484  03D0  3400               	retlw	0
  5485  03D1  3400               	retlw	0
  5486  03D2  3400               	retlw	0
  5487  03D3  3400               	retlw	0
  5488  03D4  3400               	retlw	0
  5489  03D5  3400               	retlw	0
  5490  03D6  3400               	retlw	0
  5491  03D7  3400               	retlw	0
  5492  03D8  3400               	retlw	0
  5493  03D9  3400               	retlw	0
  5494  03DA  3400               	retlw	0
  5495  03DB  3400               	retlw	0
  5496  03DC  3400               	retlw	0
  5497  03DD  3400               	retlw	0
  5498  03DE  3400               	retlw	0
  5499  03DF  3400               	retlw	0
  5500  03E0  3400               	retlw	0
  5501  03E1  3400               	retlw	0
  5502  03E2  3400               	retlw	0
  5503  03E3  3400               	retlw	0
  5504  03E4  3400               	retlw	0
  5505  03E5  3400               	retlw	0
  5506  03E6  3400               	retlw	0
  5507  03E7  3400               	retlw	0
  5508  03E8  3400               	retlw	0
  5509  03E9  3400               	retlw	0
  5510  03EA  3400               	retlw	0
  5511  03EB  3400               	retlw	0
  5512  03EC  3400               	retlw	0
  5513  03ED  3400               	retlw	0
  5514  03EE  3400               	retlw	0
  5515  03EF  3400               	retlw	0
  5516  03F0  3400               	retlw	0
  5517  03F1  3400               	retlw	0
  5518  03F2  3400               	retlw	0
  5519  03F3  3400               	retlw	0
  5520  03F4  3400               	retlw	0
  5521  03F5  3400               	retlw	0
  5522  03F6  3400               	retlw	0
  5523  03F7  3400               	retlw	0
  5524  03F8  3400               	retlw	0
  5525  03F9  3400               	retlw	0
  5526  03FA  3400               	retlw	0
  5527  03FB  3400               	retlw	0
  5528  03FC  3400               	retlw	0
  5529  03FD  3400               	retlw	0
  5530  03FE  3400               	retlw	0
  5531  03FF  3400               	retlw	0
  5532  0400  3400               	retlw	0
  5533  0401  3400               	retlw	0
  5534  0402  3400               	retlw	0
  5535  0403  3400               	retlw	0
  5536  0404  3400               	retlw	0
  5537  0405  3400               	retlw	0
  5538  0406  3400               	retlw	0
  5539  0407  3400               	retlw	0
  5540  0408  3400               	retlw	0
  5541  0409  3400               	retlw	0
  5542  040A  3400               	retlw	0
  5543  040B  3400               	retlw	0
  5544  040C  3400               	retlw	0
  5545  040D  3400               	retlw	0
  5546  040E  3400               	retlw	0
  5547  040F  3400               	retlw	0
  5548  0410  3400               	retlw	0
  5549  0411  3400               	retlw	0
  5550  0412  3400               	retlw	0
  5551  0413  3400               	retlw	0
  5552  0414  3400               	retlw	0
  5553  0415  3400               	retlw	0
  5554  0416  3400               	retlw	0
  5555  0417  3400               	retlw	0
  5556  0418  3400               	retlw	0
  5557  0419  3400               	retlw	0
  5558  041A  3400               	retlw	0
  5559  041B  3400               	retlw	0
  5560  041C  3400               	retlw	0
  5561  041D  3400               	retlw	0
  5562  041E  3400               	retlw	0
  5563  041F  3400               	retlw	0
  5564  0420  3400               	retlw	0
  5565  0421  3400               	retlw	0
  5566  0422  3400               	retlw	0
  5567  0423  3400               	retlw	0
  5568  0424  3400               	retlw	0
  5569  0425  3400               	retlw	0
  5570  0426  3400               	retlw	0
  5571  0427  3400               	retlw	0
  5572  0428  3400               	retlw	0
  5573  0429  3400               	retlw	0
  5574  042A  3400               	retlw	0
  5575  042B  3400               	retlw	0
  5576  042C  3400               	retlw	0
  5577  042D  3400               	retlw	0
  5578  042E  3400               	retlw	0
  5579  042F  3400               	retlw	0
  5580  0430  3400               	retlw	0
  5581  0431  3400               	retlw	0
  5582  0432  3400               	retlw	0
  5583  0433  3400               	retlw	0
  5584  0434  3400               	retlw	0
  5585  0435  3400               	retlw	0
  5586  0436  3400               	retlw	0
  5587  0437  3400               	retlw	0
  5588  0438  3400               	retlw	0
  5589  0439  3400               	retlw	0
  5590  043A  3400               	retlw	0
  5591  043B  3400               	retlw	0
  5592  043C  3400               	retlw	0
  5593  043D  3400               	retlw	0
  5594  043E  3400               	retlw	0
  5595  043F  3400               	retlw	0
  5596  0440  3400               	retlw	0
  5597  0441  3400               	retlw	0
  5598  0442  3400               	retlw	0
  5599  0443  3400               	retlw	0
  5600  0444  3400               	retlw	0
  5601  0445  3400               	retlw	0
  5602  0446  3400               	retlw	0
  5603  0447  3400               	retlw	0
  5604  0448  3400               	retlw	0
  5605                           
  5606                           	psect	stringtext1
  5607  0449                     __pstringtext1:	
  5608  0449                     _lookup:	
  5609  0449  3400               	retlw	0
  5610  044A  3400               	retlw	0
  5611  044B  3400               	retlw	0
  5612  044C  3400               	retlw	0
  5613  044D  3400               	retlw	0
  5614  044E  3400               	retlw	0
  5615  044F  3400               	retlw	0
  5616  0450  345F               	retlw	95
  5617  0451  3400               	retlw	0
  5618  0452  3400               	retlw	0
  5619  0453  3400               	retlw	0
  5620  0454  3407               	retlw	7
  5621  0455  3400               	retlw	0
  5622  0456  3407               	retlw	7
  5623  0457  3400               	retlw	0
  5624  0458  3414               	retlw	20
  5625  0459  347F               	retlw	127
  5626  045A  3414               	retlw	20
  5627  045B  347F               	retlw	127
  5628  045C  3414               	retlw	20
  5629  045D  3424               	retlw	36
  5630  045E  342A               	retlw	42
  5631  045F  347F               	retlw	127
  5632  0460  342A               	retlw	42
  5633  0461  3412               	retlw	18
  5634  0462  3423               	retlw	35
  5635  0463  3413               	retlw	19
  5636  0464  3408               	retlw	8
  5637  0465  3464               	retlw	100
  5638  0466  3462               	retlw	98
  5639  0467  3436               	retlw	54
  5640  0468  3449               	retlw	73
  5641  0469  3456               	retlw	86
  5642  046A  3420               	retlw	32
  5643  046B  3450               	retlw	80
  5644  046C  3400               	retlw	0
  5645  046D  3408               	retlw	8
  5646  046E  3407               	retlw	7
  5647  046F  3403               	retlw	3
  5648  0470  3400               	retlw	0
  5649  0471  3400               	retlw	0
  5650  0472  341C               	retlw	28
  5651  0473  3422               	retlw	34
  5652  0474  3441               	retlw	65
  5653  0475  3400               	retlw	0
  5654  0476  3400               	retlw	0
  5655  0477  3441               	retlw	65
  5656  0478  3422               	retlw	34
  5657  0479  341C               	retlw	28
  5658  047A  3400               	retlw	0
  5659  047B  342A               	retlw	42
  5660  047C  341C               	retlw	28
  5661  047D  347F               	retlw	127
  5662  047E  341C               	retlw	28
  5663  047F  342A               	retlw	42
  5664  0480  3408               	retlw	8
  5665  0481  3408               	retlw	8
  5666  0482  343E               	retlw	62
  5667  0483  3408               	retlw	8
  5668  0484  3408               	retlw	8
  5669  0485  3400               	retlw	0
  5670  0486  3400               	retlw	0
  5671  0487  3470               	retlw	112
  5672  0488  3430               	retlw	48
  5673  0489  3400               	retlw	0
  5674  048A  3408               	retlw	8
  5675  048B  3408               	retlw	8
  5676  048C  3408               	retlw	8
  5677  048D  3408               	retlw	8
  5678  048E  3408               	retlw	8
  5679  048F  3400               	retlw	0
  5680  0490  3400               	retlw	0
  5681  0491  3460               	retlw	96
  5682  0492  3460               	retlw	96
  5683  0493  3400               	retlw	0
  5684  0494  3420               	retlw	32
  5685  0495  3410               	retlw	16
  5686  0496  3408               	retlw	8
  5687  0497  3404               	retlw	4
  5688  0498  3402               	retlw	2
  5689  0499  343E               	retlw	62
  5690  049A  3451               	retlw	81
  5691  049B  3449               	retlw	73
  5692  049C  3445               	retlw	69
  5693  049D  343E               	retlw	62
  5694  049E  3400               	retlw	0
  5695  049F  3442               	retlw	66
  5696  04A0  347F               	retlw	127
  5697  04A1  3440               	retlw	64
  5698  04A2  3400               	retlw	0
  5699  04A3  3472               	retlw	114
  5700  04A4  3449               	retlw	73
  5701  04A5  3449               	retlw	73
  5702  04A6  3449               	retlw	73
  5703  04A7  3446               	retlw	70
  5704  04A8  3421               	retlw	33
  5705  04A9  3441               	retlw	65
  5706  04AA  3449               	retlw	73
  5707  04AB  344D               	retlw	77
  5708  04AC  3433               	retlw	51
  5709  04AD  3418               	retlw	24
  5710  04AE  3414               	retlw	20
  5711  04AF  3412               	retlw	18
  5712  04B0  347F               	retlw	127
  5713  04B1  3410               	retlw	16
  5714  04B2  3427               	retlw	39
  5715  04B3  3445               	retlw	69
  5716  04B4  3445               	retlw	69
  5717  04B5  3445               	retlw	69
  5718  04B6  3439               	retlw	57
  5719  04B7  343C               	retlw	60
  5720  04B8  344A               	retlw	74
  5721  04B9  3449               	retlw	73
  5722  04BA  3449               	retlw	73
  5723  04BB  3431               	retlw	49
  5724  04BC  3441               	retlw	65
  5725  04BD  3421               	retlw	33
  5726  04BE  3411               	retlw	17
  5727  04BF  3409               	retlw	9
  5728  04C0  3407               	retlw	7
  5729  04C1  3436               	retlw	54
  5730  04C2  3449               	retlw	73
  5731  04C3  3449               	retlw	73
  5732  04C4  3449               	retlw	73
  5733  04C5  3436               	retlw	54
  5734  04C6  3446               	retlw	70
  5735  04C7  3449               	retlw	73
  5736  04C8  3449               	retlw	73
  5737  04C9  3429               	retlw	41
  5738  04CA  341E               	retlw	30
  5739  04CB  3400               	retlw	0
  5740  04CC  3400               	retlw	0
  5741  04CD  3414               	retlw	20
  5742  04CE  3400               	retlw	0
  5743  04CF  3400               	retlw	0
  5744  04D0  3400               	retlw	0
  5745  04D1  3440               	retlw	64
  5746  04D2  3434               	retlw	52
  5747  04D3  3400               	retlw	0
  5748  04D4  3400               	retlw	0
  5749  04D5  3400               	retlw	0
  5750  04D6  3408               	retlw	8
  5751  04D7  3414               	retlw	20
  5752  04D8  3422               	retlw	34
  5753  04D9  3441               	retlw	65
  5754  04DA  3414               	retlw	20
  5755  04DB  3414               	retlw	20
  5756  04DC  3414               	retlw	20
  5757  04DD  3414               	retlw	20
  5758  04DE  3414               	retlw	20
  5759  04DF  3400               	retlw	0
  5760  04E0  3441               	retlw	65
  5761  04E1  3422               	retlw	34
  5762  04E2  3414               	retlw	20
  5763  04E3  3408               	retlw	8
  5764  04E4  3402               	retlw	2
  5765  04E5  3401               	retlw	1
  5766  04E6  3459               	retlw	89
  5767  04E7  3409               	retlw	9
  5768  04E8  3406               	retlw	6
  5769  04E9  343E               	retlw	62
  5770  04EA  3441               	retlw	65
  5771  04EB  345D               	retlw	93
  5772  04EC  3459               	retlw	89
  5773  04ED  344E               	retlw	78
  5774  04EE  347C               	retlw	124
  5775  04EF  3412               	retlw	18
  5776  04F0  3411               	retlw	17
  5777  04F1  3412               	retlw	18
  5778  04F2  347C               	retlw	124
  5779  04F3  347F               	retlw	127
  5780  04F4  3449               	retlw	73
  5781  04F5  3449               	retlw	73
  5782  04F6  3449               	retlw	73
  5783  04F7  3436               	retlw	54
  5784  04F8  343E               	retlw	62
  5785  04F9  3441               	retlw	65
  5786  04FA  3441               	retlw	65
  5787  04FB  3441               	retlw	65
  5788  04FC  3422               	retlw	34
  5789  04FD  347F               	retlw	127
  5790  04FE  3441               	retlw	65
  5791  04FF  3441               	retlw	65
  5792  0500  3441               	retlw	65
  5793  0501  343E               	retlw	62
  5794  0502  347F               	retlw	127
  5795  0503  3449               	retlw	73
  5796  0504  3449               	retlw	73
  5797  0505  3449               	retlw	73
  5798  0506  3441               	retlw	65
  5799  0507  347F               	retlw	127
  5800  0508  3409               	retlw	9
  5801  0509  3409               	retlw	9
  5802  050A  3409               	retlw	9
  5803  050B  3401               	retlw	1
  5804  050C  343E               	retlw	62
  5805  050D  3441               	retlw	65
  5806  050E  3441               	retlw	65
  5807  050F  3451               	retlw	81
  5808  0510  3473               	retlw	115
  5809  0511  347F               	retlw	127
  5810  0512  3408               	retlw	8
  5811  0513  3408               	retlw	8
  5812  0514  3408               	retlw	8
  5813  0515  347F               	retlw	127
  5814  0516  3400               	retlw	0
  5815  0517  3441               	retlw	65
  5816  0518  347F               	retlw	127
  5817  0519  3441               	retlw	65
  5818  051A  3400               	retlw	0
  5819  051B  3420               	retlw	32
  5820  051C  3440               	retlw	64
  5821  051D  3441               	retlw	65
  5822  051E  343F               	retlw	63
  5823  051F  3401               	retlw	1
  5824  0520  347F               	retlw	127
  5825  0521  3408               	retlw	8
  5826  0522  3414               	retlw	20
  5827  0523  3422               	retlw	34
  5828  0524  3441               	retlw	65
  5829  0525  347F               	retlw	127
  5830  0526  3440               	retlw	64
  5831  0527  3440               	retlw	64
  5832  0528  3440               	retlw	64
  5833  0529  3440               	retlw	64
  5834  052A  347F               	retlw	127
  5835  052B  3402               	retlw	2
  5836  052C  341C               	retlw	28
  5837  052D  3402               	retlw	2
  5838  052E  347F               	retlw	127
  5839  052F  347F               	retlw	127
  5840  0530  3404               	retlw	4
  5841  0531  3408               	retlw	8
  5842  0532  3410               	retlw	16
  5843  0533  347F               	retlw	127
  5844  0534  343E               	retlw	62
  5845  0535  3441               	retlw	65
  5846  0536  3441               	retlw	65
  5847  0537  3441               	retlw	65
  5848  0538  343E               	retlw	62
  5849  0539  347F               	retlw	127
  5850  053A  3409               	retlw	9
  5851  053B  3409               	retlw	9
  5852  053C  3409               	retlw	9
  5853  053D  3406               	retlw	6
  5854  053E  343E               	retlw	62
  5855  053F  3441               	retlw	65
  5856  0540  3451               	retlw	81
  5857  0541  3421               	retlw	33
  5858  0542  345E               	retlw	94
  5859  0543  347F               	retlw	127
  5860  0544  3409               	retlw	9
  5861  0545  3419               	retlw	25
  5862  0546  3429               	retlw	41
  5863  0547  3446               	retlw	70
  5864  0548  3426               	retlw	38
  5865  0549  3449               	retlw	73
  5866  054A  3449               	retlw	73
  5867  054B  3449               	retlw	73
  5868  054C  3432               	retlw	50
  5869  054D  3403               	retlw	3
  5870  054E  3401               	retlw	1
  5871  054F  347F               	retlw	127
  5872  0550  3401               	retlw	1
  5873  0551  3403               	retlw	3
  5874  0552  343F               	retlw	63
  5875  0553  3440               	retlw	64
  5876  0554  3440               	retlw	64
  5877  0555  3440               	retlw	64
  5878  0556  343F               	retlw	63
  5879  0557  341F               	retlw	31
  5880  0558  3420               	retlw	32
  5881  0559  3440               	retlw	64
  5882  055A  3420               	retlw	32
  5883  055B  341F               	retlw	31
  5884  055C  343F               	retlw	63
  5885  055D  3440               	retlw	64
  5886  055E  3438               	retlw	56
  5887  055F  3440               	retlw	64
  5888  0560  343F               	retlw	63
  5889  0561  3463               	retlw	99
  5890  0562  3414               	retlw	20
  5891  0563  3408               	retlw	8
  5892  0564  3414               	retlw	20
  5893  0565  3463               	retlw	99
  5894  0566  3403               	retlw	3
  5895  0567  3404               	retlw	4
  5896  0568  3478               	retlw	120
  5897  0569  3404               	retlw	4
  5898  056A  3403               	retlw	3
  5899  056B  3461               	retlw	97
  5900  056C  3459               	retlw	89
  5901  056D  3449               	retlw	73
  5902  056E  344D               	retlw	77
  5903  056F  3443               	retlw	67
  5904  0570  3400               	retlw	0
  5905  0571  347F               	retlw	127
  5906  0572  3441               	retlw	65
  5907  0573  3441               	retlw	65
  5908  0574  3441               	retlw	65
  5909  0575  3402               	retlw	2
  5910  0576  3404               	retlw	4
  5911  0577  3408               	retlw	8
  5912  0578  3410               	retlw	16
  5913  0579  3420               	retlw	32
  5914  057A  3400               	retlw	0
  5915  057B  3441               	retlw	65
  5916  057C  3441               	retlw	65
  5917  057D  3441               	retlw	65
  5918  057E  347F               	retlw	127
  5919  057F  3404               	retlw	4
  5920  0580  3402               	retlw	2
  5921  0581  3401               	retlw	1
  5922  0582  3402               	retlw	2
  5923  0583  3404               	retlw	4
  5924  0584  3440               	retlw	64
  5925  0585  3440               	retlw	64
  5926  0586  3440               	retlw	64
  5927  0587  3440               	retlw	64
  5928  0588  3440               	retlw	64
  5929  0589  3400               	retlw	0
  5930  058A  3403               	retlw	3
  5931  058B  3407               	retlw	7
  5932  058C  3408               	retlw	8
  5933  058D  3400               	retlw	0
  5934  058E  3420               	retlw	32
  5935  058F  3454               	retlw	84
  5936  0590  3454               	retlw	84
  5937  0591  3438               	retlw	56
  5938  0592  3440               	retlw	64
  5939  0593  347F               	retlw	127
  5940  0594  3428               	retlw	40
  5941  0595  3444               	retlw	68
  5942  0596  3444               	retlw	68
  5943  0597  3438               	retlw	56
  5944  0598  3438               	retlw	56
  5945  0599  3444               	retlw	68
  5946  059A  3444               	retlw	68
  5947  059B  3444               	retlw	68
  5948  059C  3428               	retlw	40
  5949  059D  3438               	retlw	56
  5950  059E  3444               	retlw	68
  5951  059F  3444               	retlw	68
  5952  05A0  3428               	retlw	40
  5953  05A1  347F               	retlw	127
  5954  05A2  3438               	retlw	56
  5955  05A3  3454               	retlw	84
  5956  05A4  3454               	retlw	84
  5957  05A5  3454               	retlw	84
  5958  05A6  3418               	retlw	24
  5959  05A7  3400               	retlw	0
  5960  05A8  3408               	retlw	8
  5961  05A9  347E               	retlw	126
  5962  05AA  3409               	retlw	9
  5963  05AB  3402               	retlw	2
  5964  05AC  340C               	retlw	12
  5965  05AD  3452               	retlw	82
  5966  05AE  3452               	retlw	82
  5967  05AF  344A               	retlw	74
  5968  05B0  343C               	retlw	60
  5969  05B1  347F               	retlw	127
  5970  05B2  3408               	retlw	8
  5971  05B3  3404               	retlw	4
  5972  05B4  3404               	retlw	4
  5973  05B5  3478               	retlw	120
  5974  05B6  3400               	retlw	0
  5975  05B7  3444               	retlw	68
  5976  05B8  347D               	retlw	125
  5977  05B9  3440               	retlw	64
  5978  05BA  3400               	retlw	0
  5979  05BB  3420               	retlw	32
  5980  05BC  3440               	retlw	64
  5981  05BD  3440               	retlw	64
  5982  05BE  343D               	retlw	61
  5983  05BF  3400               	retlw	0
  5984  05C0  347F               	retlw	127
  5985  05C1  3410               	retlw	16
  5986  05C2  3428               	retlw	40
  5987  05C3  3444               	retlw	68
  5988  05C4  3400               	retlw	0
  5989  05C5  3400               	retlw	0
  5990  05C6  3441               	retlw	65
  5991  05C7  347F               	retlw	127
  5992  05C8  3440               	retlw	64
  5993  05C9  3400               	retlw	0
  5994  05CA  347C               	retlw	124
  5995  05CB  3404               	retlw	4
  5996  05CC  3478               	retlw	120
  5997  05CD  3404               	retlw	4
  5998  05CE  3478               	retlw	120
  5999  05CF  347C               	retlw	124
  6000  05D0  3408               	retlw	8
  6001  05D1  3404               	retlw	4
  6002  05D2  3404               	retlw	4
  6003  05D3  3478               	retlw	120
  6004  05D4  3438               	retlw	56
  6005  05D5  3444               	retlw	68
  6006  05D6  3444               	retlw	68
  6007  05D7  3444               	retlw	68
  6008  05D8  3438               	retlw	56
  6009  05D9  347C               	retlw	124
  6010  05DA  3418               	retlw	24
  6011  05DB  3424               	retlw	36
  6012  05DC  3424               	retlw	36
  6013  05DD  3418               	retlw	24
  6014  05DE  3418               	retlw	24
  6015  05DF  3424               	retlw	36
  6016  05E0  3424               	retlw	36
  6017  05E1  3418               	retlw	24
  6018  05E2  347C               	retlw	124
  6019  05E3  347C               	retlw	124
  6020  05E4  3408               	retlw	8
  6021  05E5  3404               	retlw	4
  6022  05E6  3404               	retlw	4
  6023  05E7  3408               	retlw	8
  6024  05E8  3448               	retlw	72
  6025  05E9  3454               	retlw	84
  6026  05EA  3454               	retlw	84
  6027  05EB  3454               	retlw	84
  6028  05EC  3424               	retlw	36
  6029  05ED  3404               	retlw	4
  6030  05EE  3404               	retlw	4
  6031  05EF  343F               	retlw	63
  6032  05F0  3444               	retlw	68
  6033  05F1  3424               	retlw	36
  6034  05F2  343C               	retlw	60
  6035  05F3  3440               	retlw	64
  6036  05F4  3440               	retlw	64
  6037  05F5  3420               	retlw	32
  6038  05F6  347C               	retlw	124
  6039  05F7  341C               	retlw	28
  6040  05F8  3420               	retlw	32
  6041  05F9  3440               	retlw	64
  6042  05FA  3420               	retlw	32
  6043  05FB  341C               	retlw	28
  6044  05FC  343C               	retlw	60
  6045  05FD  3440               	retlw	64
  6046  05FE  3430               	retlw	48
  6047  05FF  3440               	retlw	64
  6048  0600  343C               	retlw	60
  6049  0601  3444               	retlw	68
  6050  0602  3428               	retlw	40
  6051  0603  3410               	retlw	16
  6052  0604  3428               	retlw	40
  6053  0605  3444               	retlw	68
  6054  0606  344C               	retlw	76
  6055  0607  3450               	retlw	80
  6056  0608  3450               	retlw	80
  6057  0609  3450               	retlw	80
  6058  060A  343C               	retlw	60
  6059  060B  3444               	retlw	68
  6060  060C  3464               	retlw	100
  6061  060D  3454               	retlw	84
  6062  060E  344C               	retlw	76
  6063  060F  3444               	retlw	68
  6064  0610  3400               	retlw	0
  6065  0611  3408               	retlw	8
  6066  0612  3436               	retlw	54
  6067  0613  3441               	retlw	65
  6068  0614  3400               	retlw	0
  6069  0615  3400               	retlw	0
  6070  0616  3400               	retlw	0
  6071  0617  3477               	retlw	119
  6072  0618  3400               	retlw	0
  6073  0619  3400               	retlw	0
  6074  061A  3400               	retlw	0
  6075  061B  3441               	retlw	65
  6076  061C  3436               	retlw	54
  6077  061D  3408               	retlw	8
  6078  061E  3400               	retlw	0
  6079  061F  3402               	retlw	2
  6080  0620  3401               	retlw	1
  6081  0621  3402               	retlw	2
  6082  0622  3404               	retlw	4
  6083  0623  3402               	retlw	2
  6084  0624                     __end_of_lookup:	
  6085                           
  6086                           	psect	stringtext2
  6087  1800                     __pstringtext2:	
  6088  1800                     _fsmStateTable:	
  6089  1800  3400               	retlw	low _do_I2C_IDLE
  6090  1801  3410               	retlw	high _do_I2C_IDLE
  6091  1802  34F4               	retlw	low _do_I2C_SEND_ADR_READ
  6092  1803  341F               	retlw	high _do_I2C_SEND_ADR_READ
  6093  1804  34BB               	retlw	low _do_I2C_SEND_ADR_WRITE
  6094  1805  341F               	retlw	high _do_I2C_SEND_ADR_WRITE
  6095  1806  345E               	retlw	low _do_I2C_TX
  6096  1807  3417               	retlw	high _do_I2C_TX
  6097  1808  34EC               	retlw	low _do_I2C_RX
  6098  1809  3415               	retlw	high _do_I2C_RX
  6099  180A  3487               	retlw	low _do_I2C_RCEN
  6100  180B  341F               	retlw	high _do_I2C_RCEN
  6101  180C  348F               	retlw	low _do_I2C_TX_EMPTY
  6102  180D  3413               	retlw	high _do_I2C_TX_EMPTY
  6103  180E  3429               	retlw	low _do_I2C_SEND_RESTART_READ
  6104  180F  341F               	retlw	high _do_I2C_SEND_RESTART_READ
  6105  1810  3431               	retlw	low _do_I2C_SEND_RESTART_WRITE
  6106  1811  341F               	retlw	high _do_I2C_SEND_RESTART_WRITE
  6107  1812  3439               	retlw	low _do_I2C_SEND_RESTART
  6108  1813  341F               	retlw	high _do_I2C_SEND_RESTART
  6109  1814  3441               	retlw	low _do_I2C_SEND_STOP
  6110  1815  341F               	retlw	high _do_I2C_SEND_STOP
  6111  1816  3449               	retlw	low _do_I2C_DO_ACK
  6112  1817  341F               	retlw	high _do_I2C_DO_ACK
  6113  1818  3451               	retlw	low _do_I2C_DO_NACK_STOP
  6114  1819  341F               	retlw	high _do_I2C_DO_NACK_STOP
  6115  181A  3459               	retlw	low _do_I2C_DO_NACK_RESTART
  6116  181B  341F               	retlw	high _do_I2C_DO_NACK_RESTART
  6117  181C  34B0               	retlw	low _do_I2C_RESET
  6118  181D  341F               	retlw	high _do_I2C_RESET
  6119  181E  340B               	retlw	low _do_I2C_DO_ADDRESS_NACK
  6120  181F  3413               	retlw	high _do_I2C_DO_ADDRESS_NACK
  6121  1820                     __end_of_fsmStateTable:	
  6122                           
  6123                           	psect	stringtext3
  6124  1855                     __pstringtext3:	
  6125  1855                     _moninit:	
  6126  1855  341F               	retlw	31
  6127  1856  341C               	retlw	28
  6128  1857  341F               	retlw	31
  6129  1858  341E               	retlw	30
  6130  1859  341F               	retlw	31
  6131  185A  341E               	retlw	30
  6132  185B  341F               	retlw	31
  6133  185C  341F               	retlw	31
  6134  185D  341E               	retlw	30
  6135  185E  341F               	retlw	31
  6136  185F  341E               	retlw	30
  6137  1860  341F               	retlw	31
  6138  1861                     __end_of_moninit:	
  6139                           
  6140                           	psect	stringtext4
  6141  1861                     __pstringtext4:	
  6142  1861                     _dpowers:	
  6143  1861  3401               	retlw	1
  6144  1862  3400               	retlw	0
  6145  1863  340A               	retlw	10
  6146  1864  3400               	retlw	0
  6147  1865  3464               	retlw	100
  6148  1866  3400               	retlw	0
  6149  1867  34E8               	retlw	232
  6150  1868  3403               	retlw	3
  6151  1869  3410               	retlw	16
  6152  186A  3427               	retlw	39
  6153  186B                     __end_of_dpowers:	
  6154                           
  6155                           	psect	stringtext5
  6156  006E                     __pstringtext5:	
  6157  006E                     _emptyArray:	
  6158  006E  3400               	retlw	0
  6159  006F  3400               	retlw	0
  6160  0070  3400               	retlw	0
  6161  0071  3400               	retlw	0
  6162  0072  3400               	retlw	0
  6163  0073  3400               	retlw	0
  6164  0074  3400               	retlw	0
  6165  0075  3400               	retlw	0
  6166  0076  3400               	retlw	0
  6167  0077  3400               	retlw	0
  6168  0078  3400               	retlw	0
  6169  0079  3400               	retlw	0
  6170  007A  3400               	retlw	0
  6171  007B  3400               	retlw	0
  6172  007C  3400               	retlw	0
  6173  007D  3400               	retlw	0
  6174  007E  3400               	retlw	0
  6175  007F  3400               	retlw	0
  6176  0080  3400               	retlw	0
  6177  0081  3400               	retlw	0
  6178  0082  3400               	retlw	0
  6179  0083  3400               	retlw	0
  6180  0084  3400               	retlw	0
  6181  0085  3400               	retlw	0
  6182  0086  3400               	retlw	0
  6183  0087  3400               	retlw	0
  6184  0088  3400               	retlw	0
  6185  0089  3400               	retlw	0
  6186  008A  3400               	retlw	0
  6187  008B  3400               	retlw	0
  6188  008C  3400               	retlw	0
  6189  008D  3400               	retlw	0
  6190  008E  3400               	retlw	0
  6191  008F  3400               	retlw	0
  6192  0090  3400               	retlw	0
  6193  0091  3400               	retlw	0
  6194  0092  3400               	retlw	0
  6195  0093  3400               	retlw	0
  6196  0094  3400               	retlw	0
  6197  0095  3400               	retlw	0
  6198  0096  3400               	retlw	0
  6199  0097  3400               	retlw	0
  6200  0098  3400               	retlw	0
  6201  0099  3400               	retlw	0
  6202  009A  3400               	retlw	0
  6203  009B  3400               	retlw	0
  6204  009C  3400               	retlw	0
  6205  009D  3400               	retlw	0
  6206  009E  3400               	retlw	0
  6207  009F  3400               	retlw	0
  6208  00A0  3400               	retlw	0
  6209  00A1  3400               	retlw	0
  6210  00A2  3400               	retlw	0
  6211  00A3  3400               	retlw	0
  6212  00A4  3400               	retlw	0
  6213  00A5  3400               	retlw	0
  6214  00A6  3400               	retlw	0
  6215  00A7  3400               	retlw	0
  6216  00A8  3400               	retlw	0
  6217  00A9  3400               	retlw	0
  6218  00AA  3400               	retlw	0
  6219  00AB  3400               	retlw	0
  6220  00AC  3400               	retlw	0
  6221  00AD  3400               	retlw	0
  6222  00AE  3400               	retlw	0
  6223  00AF  3400               	retlw	0
  6224  00B0  3400               	retlw	0
  6225  00B1  3400               	retlw	0
  6226  00B2  3400               	retlw	0
  6227  00B3  3400               	retlw	0
  6228  00B4  3400               	retlw	0
  6229  00B5  3400               	retlw	0
  6230  00B6  3400               	retlw	0
  6231  00B7  3400               	retlw	0
  6232  00B8  3400               	retlw	0
  6233  00B9  3400               	retlw	0
  6234  00BA  3400               	retlw	0
  6235  00BB  3400               	retlw	0
  6236  00BC  3400               	retlw	0
  6237  00BD  3400               	retlw	0
  6238  00BE  3400               	retlw	0
  6239  00BF  3400               	retlw	0
  6240  00C0  3400               	retlw	0
  6241  00C1  3400               	retlw	0
  6242  00C2  3400               	retlw	0
  6243  00C3  3400               	retlw	0
  6244  00C4  3400               	retlw	0
  6245  00C5  3400               	retlw	0
  6246  00C6  3400               	retlw	0
  6247  00C7  3400               	retlw	0
  6248  00C8  3400               	retlw	0
  6249  00C9  3400               	retlw	0
  6250  00CA  3400               	retlw	0
  6251  00CB  3400               	retlw	0
  6252  00CC  3400               	retlw	0
  6253  00CD  3400               	retlw	0
  6254  00CE  3400               	retlw	0
  6255  00CF  3400               	retlw	0
  6256  00D0  3400               	retlw	0
  6257  00D1  3400               	retlw	0
  6258  00D2  3400               	retlw	0
  6259  00D3  3400               	retlw	0
  6260  00D4  3400               	retlw	0
  6261  00D5  3400               	retlw	0
  6262  00D6  3400               	retlw	0
  6263  00D7  3400               	retlw	0
  6264  00D8  3400               	retlw	0
  6265  00D9  3400               	retlw	0
  6266  00DA  3400               	retlw	0
  6267  00DB  3400               	retlw	0
  6268  00DC  3400               	retlw	0
  6269  00DD  3400               	retlw	0
  6270  00DE  3400               	retlw	0
  6271  00DF  3400               	retlw	0
  6272  00E0  3400               	retlw	0
  6273  00E1  3400               	retlw	0
  6274  00E2  3400               	retlw	0
  6275  00E3  3400               	retlw	0
  6276  00E4  3400               	retlw	0
  6277  00E5  3400               	retlw	0
  6278  00E6  3400               	retlw	0
  6279  00E7  3400               	retlw	0
  6280  00E8  3400               	retlw	0
  6281  00E9  3400               	retlw	0
  6282  00EA  3400               	retlw	0
  6283  00EB  3400               	retlw	0
  6284  00EC  3400               	retlw	0
  6285  00ED  3400               	retlw	0
  6286  00EE  3400               	retlw	0
  6287  00EF  3400               	retlw	0
  6288  00F0  3400               	retlw	0
  6289  00F1  3400               	retlw	0
  6290  00F2  3400               	retlw	0
  6291  00F3  3400               	retlw	0
  6292  00F4  3400               	retlw	0
  6293  00F5  3400               	retlw	0
  6294  00F6  3400               	retlw	0
  6295  00F7  3400               	retlw	0
  6296  00F8  3400               	retlw	0
  6297  00F9  3400               	retlw	0
  6298  00FA  3400               	retlw	0
  6299  00FB  3400               	retlw	0
  6300  00FC  3400               	retlw	0
  6301  00FD  3400               	retlw	0
  6302  00FE  3400               	retlw	0
  6303  00FF  3400               	retlw	0
  6304  0100  3400               	retlw	0
  6305  0101  3400               	retlw	0
  6306  0102  3400               	retlw	0
  6307  0103  3400               	retlw	0
  6308  0104  3400               	retlw	0
  6309  0105  3400               	retlw	0
  6310  0106  3400               	retlw	0
  6311  0107  3400               	retlw	0
  6312  0108  3400               	retlw	0
  6313  0109  3400               	retlw	0
  6314  010A  3400               	retlw	0
  6315  010B  3400               	retlw	0
  6316  010C  3400               	retlw	0
  6317  010D  3400               	retlw	0
  6318  010E  3400               	retlw	0
  6319  010F  3400               	retlw	0
  6320  0110  3400               	retlw	0
  6321  0111  3400               	retlw	0
  6322  0112  3400               	retlw	0
  6323  0113  3400               	retlw	0
  6324  0114  3400               	retlw	0
  6325  0115  3400               	retlw	0
  6326  0116  3400               	retlw	0
  6327  0117  3400               	retlw	0
  6328  0118  3400               	retlw	0
  6329  0119  3400               	retlw	0
  6330  011A  3400               	retlw	0
  6331  011B  3400               	retlw	0
  6332  011C  3400               	retlw	0
  6333  011D  3400               	retlw	0
  6334  011E  3400               	retlw	0
  6335  011F  3400               	retlw	0
  6336  0120  3400               	retlw	0
  6337  0121  3400               	retlw	0
  6338  0122  3400               	retlw	0
  6339  0123  3400               	retlw	0
  6340  0124  3400               	retlw	0
  6341  0125  3400               	retlw	0
  6342  0126  3400               	retlw	0
  6343  0127  3400               	retlw	0
  6344  0128  3400               	retlw	0
  6345  0129  3400               	retlw	0
  6346  012A  3400               	retlw	0
  6347  012B  3400               	retlw	0
  6348  012C  3400               	retlw	0
  6349  012D  3400               	retlw	0
  6350  012E  3400               	retlw	0
  6351  012F  3400               	retlw	0
  6352  0130  3400               	retlw	0
  6353  0131  3400               	retlw	0
  6354  0132  3400               	retlw	0
  6355  0133  3400               	retlw	0
  6356  0134  3400               	retlw	0
  6357  0135  3400               	retlw	0
  6358  0136  3400               	retlw	0
  6359  0137  3400               	retlw	0
  6360  0138  3400               	retlw	0
  6361  0139  3400               	retlw	0
  6362  013A  3400               	retlw	0
  6363  013B  3400               	retlw	0
  6364  013C  3400               	retlw	0
  6365  013D  3400               	retlw	0
  6366  013E  3400               	retlw	0
  6367  013F  3400               	retlw	0
  6368  0140  3400               	retlw	0
  6369  0141  3400               	retlw	0
  6370  0142  3400               	retlw	0
  6371  0143  3400               	retlw	0
  6372  0144  3400               	retlw	0
  6373  0145  3400               	retlw	0
  6374  0146  3400               	retlw	0
  6375  0147  3400               	retlw	0
  6376  0148  3400               	retlw	0
  6377  0149  3400               	retlw	0
  6378  014A  3400               	retlw	0
  6379  014B  3400               	retlw	0
  6380  014C  3400               	retlw	0
  6381  014D  3400               	retlw	0
  6382  014E  3400               	retlw	0
  6383  014F  3400               	retlw	0
  6384  0150  3400               	retlw	0
  6385  0151  3400               	retlw	0
  6386  0152  3400               	retlw	0
  6387  0153  3400               	retlw	0
  6388  0154  3400               	retlw	0
  6389  0155  3400               	retlw	0
  6390  0156  3400               	retlw	0
  6391  0157  3400               	retlw	0
  6392  0158  3400               	retlw	0
  6393  0159  3400               	retlw	0
  6394  015A  3400               	retlw	0
  6395  015B  3400               	retlw	0
  6396  015C  3400               	retlw	0
  6397  015D  3400               	retlw	0
  6398  015E  3400               	retlw	0
  6399  015F  3400               	retlw	0
  6400  0160  3400               	retlw	0
  6401  0161  3400               	retlw	0
  6402  0162  3400               	retlw	0
  6403  0163  3400               	retlw	0
  6404  0164  3400               	retlw	0
  6405  0165  3400               	retlw	0
  6406  0166  3400               	retlw	0
  6407  0167  3400               	retlw	0
  6408  0168  3400               	retlw	0
  6409  0169  3400               	retlw	0
  6410  016A  3400               	retlw	0
  6411  016B  3400               	retlw	0
  6412  016C  3400               	retlw	0
  6413  016D  3400               	retlw	0
  6414  016E  3400               	retlw	0
  6415  016F  3400               	retlw	0
  6416  0170  3400               	retlw	0
  6417  0171  3400               	retlw	0
  6418  0172  3400               	retlw	0
  6419  0173  3400               	retlw	0
  6420  0174  3400               	retlw	0
  6421  0175  3400               	retlw	0
  6422  0176  3400               	retlw	0
  6423  0177  3400               	retlw	0
  6424  0178  3400               	retlw	0
  6425  0179  3400               	retlw	0
  6426  017A  3400               	retlw	0
  6427  017B  3400               	retlw	0
  6428  017C  3400               	retlw	0
  6429  017D  3400               	retlw	0
  6430  017E  3400               	retlw	0
  6431  017F  3400               	retlw	0
  6432  0180  3400               	retlw	0
  6433  0181  3400               	retlw	0
  6434  0182  3400               	retlw	0
  6435  0183  3400               	retlw	0
  6436  0184  3400               	retlw	0
  6437  0185  3400               	retlw	0
  6438  0186  3400               	retlw	0
  6439  0187  3400               	retlw	0
  6440  0188  3400               	retlw	0
  6441  0189  3400               	retlw	0
  6442  018A  3400               	retlw	0
  6443  018B  3400               	retlw	0
  6444  018C  3400               	retlw	0
  6445  018D  3400               	retlw	0
  6446  018E  3400               	retlw	0
  6447  018F  3400               	retlw	0
  6448  0190  3400               	retlw	0
  6449  0191  3400               	retlw	0
  6450  0192  3400               	retlw	0
  6451  0193  3400               	retlw	0
  6452  0194  3400               	retlw	0
  6453  0195  3400               	retlw	0
  6454  0196  3400               	retlw	0
  6455  0197  3400               	retlw	0
  6456  0198  3400               	retlw	0
  6457  0199  3400               	retlw	0
  6458  019A  3400               	retlw	0
  6459  019B  3400               	retlw	0
  6460  019C  3400               	retlw	0
  6461  019D  3400               	retlw	0
  6462  019E  3400               	retlw	0
  6463  019F  3400               	retlw	0
  6464  01A0  3400               	retlw	0
  6465  01A1  3400               	retlw	0
  6466  01A2  3400               	retlw	0
  6467  01A3  3400               	retlw	0
  6468  01A4  3400               	retlw	0
  6469  01A5  3400               	retlw	0
  6470  01A6  3400               	retlw	0
  6471  01A7  3400               	retlw	0
  6472  01A8  3400               	retlw	0
  6473  01A9  3400               	retlw	0
  6474  01AA  3400               	retlw	0
  6475  01AB  3400               	retlw	0
  6476  01AC  3400               	retlw	0
  6477  01AD  3400               	retlw	0
  6478  01AE  3400               	retlw	0
  6479  01AF  3400               	retlw	0
  6480  01B0  3400               	retlw	0
  6481  01B1  3400               	retlw	0
  6482  01B2  3400               	retlw	0
  6483  01B3  3400               	retlw	0
  6484  01B4  3400               	retlw	0
  6485  01B5  3400               	retlw	0
  6486  01B6  3400               	retlw	0
  6487  01B7  3400               	retlw	0
  6488  01B8  3400               	retlw	0
  6489  01B9  3400               	retlw	0
  6490  01BA  3400               	retlw	0
  6491  01BB  3400               	retlw	0
  6492  01BC  3400               	retlw	0
  6493  01BD  3400               	retlw	0
  6494  01BE  3400               	retlw	0
  6495  01BF  3400               	retlw	0
  6496  01C0  3400               	retlw	0
  6497  01C1  3400               	retlw	0
  6498  01C2  3400               	retlw	0
  6499  01C3  3400               	retlw	0
  6500  01C4  3400               	retlw	0
  6501  01C5  3400               	retlw	0
  6502  01C6  3400               	retlw	0
  6503  01C7  3400               	retlw	0
  6504  01C8  3400               	retlw	0
  6505  01C9  3400               	retlw	0
  6506  01CA  3400               	retlw	0
  6507  01CB  3400               	retlw	0
  6508  01CC  3400               	retlw	0
  6509  01CD  3400               	retlw	0
  6510  01CE  3400               	retlw	0
  6511  01CF  3400               	retlw	0
  6512  01D0  3400               	retlw	0
  6513  01D1  3400               	retlw	0
  6514  01D2  3400               	retlw	0
  6515  01D3  3400               	retlw	0
  6516  01D4  3400               	retlw	0
  6517  01D5  3400               	retlw	0
  6518  01D6  3400               	retlw	0
  6519  01D7  3400               	retlw	0
  6520  01D8  3400               	retlw	0
  6521  01D9  3400               	retlw	0
  6522  01DA  3400               	retlw	0
  6523  01DB  3400               	retlw	0
  6524  01DC  3400               	retlw	0
  6525  01DD  3400               	retlw	0
  6526  01DE  3400               	retlw	0
  6527  01DF  3400               	retlw	0
  6528  01E0  3400               	retlw	0
  6529  01E1  3400               	retlw	0
  6530  01E2  3400               	retlw	0
  6531  01E3  3400               	retlw	0
  6532  01E4  3400               	retlw	0
  6533  01E5  3400               	retlw	0
  6534  01E6  3400               	retlw	0
  6535  01E7  3400               	retlw	0
  6536  01E8  3400               	retlw	0
  6537  01E9  3400               	retlw	0
  6538  01EA  3400               	retlw	0
  6539  01EB  3400               	retlw	0
  6540  01EC  3400               	retlw	0
  6541  01ED  3400               	retlw	0
  6542  01EE  3400               	retlw	0
  6543  01EF  3400               	retlw	0
  6544  01F0  3400               	retlw	0
  6545  01F1  3400               	retlw	0
  6546  01F2  3400               	retlw	0
  6547  01F3  3400               	retlw	0
  6548  01F4  3400               	retlw	0
  6549  01F5  3400               	retlw	0
  6550  01F6  3400               	retlw	0
  6551  01F7  3400               	retlw	0
  6552  01F8  3400               	retlw	0
  6553  01F9  3400               	retlw	0
  6554  01FA  3400               	retlw	0
  6555  01FB  3400               	retlw	0
  6556  01FC  3400               	retlw	0
  6557  01FD  3400               	retlw	0
  6558  01FE  3400               	retlw	0
  6559  01FF  3400               	retlw	0
  6560  0200  3400               	retlw	0
  6561  0201  3400               	retlw	0
  6562  0202  3400               	retlw	0
  6563  0203  3400               	retlw	0
  6564  0204  3400               	retlw	0
  6565  0205  3400               	retlw	0
  6566  0206  3400               	retlw	0
  6567  0207  3400               	retlw	0
  6568  0208  3400               	retlw	0
  6569  0209  3400               	retlw	0
  6570  020A  3400               	retlw	0
  6571  020B  3400               	retlw	0
  6572  020C  3400               	retlw	0
  6573  020D  3400               	retlw	0
  6574  020E  3400               	retlw	0
  6575  020F  3400               	retlw	0
  6576  0210  3400               	retlw	0
  6577  0211  3400               	retlw	0
  6578  0212  3400               	retlw	0
  6579  0213  3400               	retlw	0
  6580  0214  3400               	retlw	0
  6581  0215  3400               	retlw	0
  6582  0216  3400               	retlw	0
  6583  0217  3400               	retlw	0
  6584  0218  3400               	retlw	0
  6585  0219  3400               	retlw	0
  6586  021A  3400               	retlw	0
  6587  021B  3400               	retlw	0
  6588  021C  3400               	retlw	0
  6589  021D  3400               	retlw	0
  6590  021E  3400               	retlw	0
  6591  021F  3400               	retlw	0
  6592  0220  3400               	retlw	0
  6593  0221  3400               	retlw	0
  6594  0222  3400               	retlw	0
  6595  0223  3400               	retlw	0
  6596  0224  3400               	retlw	0
  6597  0225  3400               	retlw	0
  6598  0226  3400               	retlw	0
  6599  0227  3400               	retlw	0
  6600  0228  3400               	retlw	0
  6601  0229  3400               	retlw	0
  6602  022A  3400               	retlw	0
  6603  022B  3400               	retlw	0
  6604  022C  3400               	retlw	0
  6605  022D  3400               	retlw	0
  6606  022E  3400               	retlw	0
  6607  022F  3400               	retlw	0
  6608  0230  3400               	retlw	0
  6609  0231  3400               	retlw	0
  6610  0232  3400               	retlw	0
  6611  0233  3400               	retlw	0
  6612  0234  3400               	retlw	0
  6613  0235  3400               	retlw	0
  6614  0236  3400               	retlw	0
  6615  0237  3400               	retlw	0
  6616  0238  3400               	retlw	0
  6617  0239  3400               	retlw	0
  6618  023A  3400               	retlw	0
  6619  023B  3400               	retlw	0
  6620  023C  3400               	retlw	0
  6621  023D  3400               	retlw	0
  6622  023E  3400               	retlw	0
  6623  023F  3400               	retlw	0
  6624  0240  3400               	retlw	0
  6625  0241  3400               	retlw	0
  6626  0242  3400               	retlw	0
  6627  0243  3400               	retlw	0
  6628  0244  3400               	retlw	0
  6629  0245  3400               	retlw	0
  6630  0246  3400               	retlw	0
  6631  0247  3400               	retlw	0
  6632  0248  3400               	retlw	0
  6633  0249                     __end_of_emptyArray:	
  6634  0019                     _LATDbits	set	25
  6635  0018                     _LATCbits	set	24
  6636  0016                     _LATAbits	set	22
  6637  000B                     _INTCONbits	set	11
  6638  0014                     _TRISD	set	20
  6639  0013                     _TRISC	set	19
  6640  0012                     _TRISB	set	18
  6641  0011                     _TRISA	set	17
  6642  0015                     _TRISE	set	21
  6643  0018                     _LATC	set	24
  6644  0017                     _LATB	set	23
  6645  0016                     _LATA	set	22
  6646  0019                     _LATD	set	25
  6647  001A                     _LATE	set	26
  6648  0003                     _STATUS	set	3
  6649  0199                     _SSP2STATbits	set	409
  6650  0196                     _SSP2BUF	set	406
  6651  019A                     _SSP2CON1bits	set	410
  6652  0197                     _SSP2ADD	set	407
  6653  019A                     _SSP2CON1	set	410
  6654  0199                     _SSP2STAT	set	409
  6655  018F                     _SSP1STATbits	set	399
  6656  018E                     _SSP1MSK	set	398
  6657  018C                     _SSP1BUF	set	396
  6658  0191                     _SSP1CON2bits	set	401
  6659  018D                     _SSP1ADD	set	397
  6660  0191                     _SSP1CON2	set	401
  6661  0190                     _SSP1CON1	set	400
  6662  018F                     _SSP1STAT	set	399
  6663  0190                     _SSP1CON1bits	set	400
  6664  070F                     _PIR3bits	set	1807
  6665  0719                     _PIE3bits	set	1817
  6666  079B                     _PMD5	set	1947
  6667  079A                     _PMD4	set	1946
  6668  0799                     _PMD3	set	1945
  6669  0798                     _PMD2	set	1944
  6670  0797                     _PMD1	set	1943
  6671  0796                     _PMD0	set	1942
  6672  0892                     _OSCTUNE	set	2194
  6673  0893                     _OSCFRQ	set	2195
  6674  0891                     _OSCEN	set	2193
  6675  088F                     _OSCCON3	set	2191
  6676  088D                     _OSCCON1	set	2189
  6677  0EC9                     _SSP2DATPPSbits	set	3785
  6678  0EC8                     _SSP2CLKPPSbits	set	3784
  6679  0EC6                     _SSP1DATPPSbits	set	3782
  6680  0EC5                     _SSP1CLKPPSbits	set	3781
  6681  0F1B                     _RB3PPS	set	3867
  6682  0F24                     _RC4PPS	set	3876
  6683  0F23                     _RC3PPS	set	3875
  6684  0F19                     _RB1PPS	set	3865
  6685  0F5B                     _ODCOND	set	3931
  6686  0F50                     _ODCONC	set	3920
  6687  0F45                     _ODCONB	set	3909
  6688  0F3A                     _ODCONA	set	3898
  6689  0F66                     _ODCONE	set	3942
  6690  0F4F                     _WPUC	set	3919
  6691  0F39                     _WPUA	set	3897
  6692  0F44                     _WPUB	set	3908
  6693  0F65                     _WPUE	set	3941
  6694  0F5A                     _WPUD	set	3930
  6695  0F38                     _ANSELA	set	3896
  6696  0F64                     _ANSELE	set	3940
  6697  0F43                     _ANSELB	set	3907
  6698  0F4E                     _ANSELC	set	3918
  6699  0F59                     _ANSELD	set	3929
  6700  0249                     STR_3:	
  6701  0249  344A               	retlw	74	;'J'
  6702  024A  3461               	retlw	97	;'a'
  6703  024B  346E               	retlw	110	;'n'
  6704  024C  3446               	retlw	70	;'F'
  6705  024D  3465               	retlw	101	;'e'
  6706  024E  3462               	retlw	98	;'b'
  6707  024F  344D               	retlw	77	;'M'
  6708  0250  3461               	retlw	97	;'a'
  6709  0251  3472               	retlw	114	;'r'
  6710  0252  3441               	retlw	65	;'A'
  6711  0253  3470               	retlw	112	;'p'
  6712  0254  3472               	retlw	114	;'r'
  6713  0255  344D               	retlw	77	;'M'
  6714  0256  3461               	retlw	97	;'a'
  6715  0257  3479               	retlw	121	;'y'
  6716  0258  344A               	retlw	74	;'J'
  6717  0259  3475               	retlw	117	;'u'
  6718  025A  346E               	retlw	110	;'n'
  6719  025B  344A               	retlw	74	;'J'
  6720  025C  3475               	retlw	117	;'u'
  6721  025D  346C               	retlw	108	;'l'
  6722  025E  3441               	retlw	65	;'A'
  6723  025F  3475               	retlw	117	;'u'
  6724  0260  3467               	retlw	103	;'g'
  6725  0261  3453               	retlw	83	;'S'
  6726  0262  3465               	retlw	101	;'e'
  6727  0263  3470               	retlw	112	;'p'
  6728  0264  344F               	retlw	79	;'O'
  6729  0265  3463               	retlw	99	;'c'
  6730  0266  3474               	retlw	116	;'t'
  6731  0267  344E               	retlw	78	;'N'
  6732  0268  346F               	retlw	111	;'o'
  6733  0269  3476               	retlw	118	;'v'
  6734  026A  3444               	retlw	68	;'D'
  6735  026B  3465               	retlw	101	;'e'
  6736  026C  3463               	retlw	99	;'c'
  6737  026D  3400               	retlw	0
  6738                           
  6739                           	psect	stringtext6
  6740  1820                     __pstringtext6:	
  6741  1820                     STR_1:	
  6742  1820  3425               	retlw	37	;'%'
  6743  1821  3430               	retlw	48	;'0'
  6744  1822  3434               	retlw	52	;'4'
  6745  1823  3464               	retlw	100	;'d'
  6746  1824  342D               	retlw	45	;'-'
  6747  1825  3425               	retlw	37	;'%'
  6748  1826  3430               	retlw	48	;'0'
  6749  1827  3432               	retlw	50	;'2'
  6750  1828  3464               	retlw	100	;'d'
  6751  1829  342D               	retlw	45	;'-'
  6752  182A  3425               	retlw	37	;'%'
  6753  182B  3430               	retlw	48	;'0'
  6754  182C  3432               	retlw	50	;'2'
  6755  182D  3464               	retlw	100	;'d'
  6756  182E  3420               	retlw	32	;' '
  6757  182F  3425               	retlw	37	;'%'
  6758  1830  3430               	retlw	48	;'0'
  6759  1831  3432               	retlw	50	;'2'
  6760  1832  3464               	retlw	100	;'d'
  6761  1833  343A               	retlw	58	;':'
  6762  1834  3425               	retlw	37	;'%'
  6763  1835  3430               	retlw	48	;'0'
  6764  1836  3432               	retlw	50	;'2'
  6765  1837  3464               	retlw	100	;'d'
  6766  1838  343A               	retlw	58	;':'
  6767  1839  3425               	retlw	37	;'%'
  6768  183A  3430               	retlw	48	;'0'
  6769  183B  3432               	retlw	50	;'2'
  6770  183C  3464               	retlw	100	;'d'
  6771  183D  340A               	retlw	10
  6772  183E  3400               	retlw	0
  6773                           
  6774                           	psect	stringtext7
  6775  183F                     __pstringtext7:	
  6776  183F                     STR_2:	
  6777  183F  3453               	retlw	83	;'S'
  6778  1840  3475               	retlw	117	;'u'
  6779  1841  346E               	retlw	110	;'n'
  6780  1842  344D               	retlw	77	;'M'
  6781  1843  346F               	retlw	111	;'o'
  6782  1844  346E               	retlw	110	;'n'
  6783  1845  3454               	retlw	84	;'T'
  6784  1846  3475               	retlw	117	;'u'
  6785  1847  3465               	retlw	101	;'e'
  6786  1848  3457               	retlw	87	;'W'
  6787  1849  3465               	retlw	101	;'e'
  6788  184A  3464               	retlw	100	;'d'
  6789  184B  3454               	retlw	84	;'T'
  6790  184C  3468               	retlw	104	;'h'
  6791  184D  3475               	retlw	117	;'u'
  6792  184E  3446               	retlw	70	;'F'
  6793  184F  3472               	retlw	114	;'r'
  6794  1850  3469               	retlw	105	;'i'
  6795  1851  3453               	retlw	83	;'S'
  6796  1852  3461               	retlw	97	;'a'
  6797  1853  3474               	retlw	116	;'t'
  6798  1854  3400               	retlw	0
  6799                           
  6800                           	psect	stringtext8
  6801  0000                     __pstringtext8:	
  6802                           
  6803                           ; #config settings
  6804  0000                     
  6805                           	psect	cinit
  6806  0024                     start_initialization:	
  6807  0024                     __initialization:		;BIGRAM
  6808                           
  6809                           ; Initialize objects allocated to BIGRAM
  6810  0024  306E               	movlw	low __pidataBIGRAM
  6811  0025  0084               	movwf	4
  6812  0026  3082               	movlw	(high __pidataBIGRAM)| (0+128)
  6813  0027  0085               	movwf	5
  6814  0028  30B1               	movlw	low (0+8625)
  6815  0029  0086               	movwf	6
  6816  002A  3021               	movlw	high (0+8625)
  6817  002B  0087               	movwf	7
  6818  002C  3001               	movlw	1
  6819  002D  00FF               	movwf	btemp+1
  6820  002E  30DB               	movlw	219
  6821  002F  3190  2015  3180   	fcall	init_ram
  6822                           
  6823                           ; Initialize objects allocated to BANK1
  6824  0032  3021               	movlw	low __pidataBANK1
  6825  0033  0084               	movwf	4
  6826  0034  3090               	movlw	(high __pidataBANK1)| (0+128)
  6827  0035  0085               	movwf	5
  6828  0036  30E4               	movlw	low __pdataBANK1
  6829  0037  0086               	movwf	6
  6830  0038  3000               	movlw	high __pdataBANK1
  6831  0039  0087               	movwf	7
  6832  003A  3000               	movlw	0
  6833  003B  00FF               	movwf	btemp+1
  6834  003C  300C               	movlw	12
  6835  003D  3190  2015  3180   	fcall	init_ram
  6836                           
  6837                           ; Clear objects allocated to BIGRAM
  6838  0040  308C               	movlw	low (0+9100)
  6839  0041  0084               	movwf	4
  6840  0042  3023               	movlw	high (0+9100)
  6841  0043  0085               	movwf	5
  6842  0044  3064               	movlw	100
  6843  0045  00FE               	movwf	btemp
  6844  0046  3000               	movlw	0
  6845  0047  00FF               	movwf	btemp+1
  6846  0048  3190  2009  3180   	fcall	clear_ram0
  6847                           
  6848                           ; Clear objects allocated to COMMON
  6849  004B  01FA               	clrf	__pbssCOMMON& (0+127)
  6850  004C  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  6851  004D  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  6852  004E  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  6853                           
  6854                           ; Clear objects allocated to BANK0
  6855  004F  01EA               	clrf	__pbssBANK0& (0+127)
  6856  0050  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  6857  0051  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  6858  0052  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  6859  0053  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  6860  0054  01EF               	clrf	(__pbssBANK0+5)& (0+127)
  6861                           
  6862                           ; Clear objects allocated to BANK1
  6863  0055  30C7               	movlw	low __pbssBANK1
  6864  0056  0084               	movwf	4
  6865  0057  3000               	movlw	high __pbssBANK1
  6866  0058  0085               	movwf	5
  6867  0059  301D               	movlw	29
  6868  005A  00FE               	movwf	btemp
  6869  005B  3000               	movlw	0
  6870  005C  00FF               	movwf	btemp+1
  6871  005D  3190  2009  3180   	fcall	clear_ram0
  6872                           
  6873                           ; Clear objects allocated to BANK2
  6874  0060  3020               	movlw	low __pbssBANK2
  6875  0061  0084               	movwf	4
  6876  0062  3001               	movlw	high __pbssBANK2
  6877  0063  0085               	movwf	5
  6878  0064  303B               	movlw	59
  6879  0065  00FE               	movwf	btemp
  6880  0066  3000               	movlw	0
  6881  0067  00FF               	movwf	btemp+1
  6882  0068  3190  2009         	fcall	clear_ram0
  6883  006A                     end_of_initialization:	
  6884                           ;End of C runtime variable initialization code
  6885                           
  6886  006A                     __end_of__initialization:	
  6887  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6888  006B  0020               	movlb	0
  6889  006C  318C  2C96         	ljmp	_main	;jump to C main() function
  6890                           
  6891                           	psect	bssCOMMON
  6892  007A                     __pbssCOMMON:	
  6893  007A                     _i2c1_driver_i2cISR:	
  6894  007A                     	ds	2
  6895  007C                     _i2c1_driver_busCollisionISR:	
  6896  007C                     	ds	2
  6897                           
  6898                           	psect	bssBANK0
  6899  006A                     __pbssBANK0:	
  6900  006A                     _timezone:	
  6901  006A                     	ds	4
  6902  006E                     _time_zone:	
  6903  006E                     	ds	2
  6904                           
  6905                           	psect	bssBANK1
  6906  00C7                     __pbssBANK1:	
  6907  00C7                     _i2c_status:	
  6908  00C7                     	ds	29
  6909                           
  6910                           	psect	dataBANK1
  6911  00E4                     __pdataBANK1:	
  6912  00E4                     main@F15397:	
  6913  00E4                     	ds	12
  6914                           
  6915                           	psect	bssBANK2
  6916  0120                     __pbssBANK2:	
  6917  0120                     _dateTime:	
  6918  0120                     	ds	14
  6919  012E                     asctime@buf:	
  6920  012E                     	ds	27
  6921  0149                     gmtime@tim:	
  6922  0149                     	ds	18
  6923                           
  6924                           	psect	inittext
  6925  1015                     init_ram:	
  6926  1015  00FE               	movwf	126
  6927  1016                     initloop:	
  6928  1016  0012               	moviw fsr0++
  6929  1017  001E               	movwi fsr1++
  6930  1018  3001               	movlw	1
  6931  1019  02FE               	subwf	126,f
  6932  101A  3000               	movlw	0
  6933  101B  3BFF               	subwfb	127,f
  6934  101C  087F               	movf	127,w
  6935  101D  047E               	iorwf	126,w
  6936  101E  1903               	btfsc	3,2
  6937  101F  3400               	retlw	0
  6938  1020  2816               	goto	initloop
  6939                           
  6940                           	psect	clrtext
  6941  1009                     clear_ram0:	
  6942                           ;	Called with FSR0 containing the base address, and
  6943                           ;	btemp/btemp+1 has the size to clear
  6944                           
  6945  1009  0064               	clrwdt	;clear the watchdog before getting into this loop
  6946  100A                     clrloop0:	
  6947  100A  0180               	clrf	0	;clear RAM location pointed to by FSR
  6948  100B  3101               	addfsr 0,1
  6949  100C  3001               	movlw	1
  6950  100D  02FE               	subwf	126,f
  6951  100E  3000               	movlw	0
  6952  100F  3BFF               	subwfb	127,f
  6953  1010  087F               	movf	127,w
  6954  1011  047E               	iorwf	126,w
  6955  1012  1903               	btfsc	3,2
  6956  1013  3400               	retlw	0	;all done for this memory range, return
  6957  1014  280A               	goto	clrloop0	;have we reached the end yet?
  6958                           
  6959                           	psect	cstackBANK1
  6960  00A0                     __pcstackBANK1:	
  6961  00A0                     rtc6_GetTime@tm_t:	
  6962                           
  6963                           ; 18 bytes @ 0x0
  6964  00A0                     	ds	18
  6965  00B2                     main@timeStr:	
  6966  00B2                     main@welcomeMsg:	
  6967                           ; 0 bytes @ 0x12
  6968                           
  6969                           
  6970                           ; 12 bytes @ 0x12
  6971  00B2                     	ds	12
  6972  00BE                     main@setTime:	
  6973                           
  6974                           ; 4 bytes @ 0x1E
  6975  00BE                     	ds	4
  6976  00C2                     main@tm_t:	
  6977                           
  6978                           ; 1 bytes @ 0x22
  6979  00C2                     	ds	1
  6980  00C3                     main@getTime:	
  6981                           
  6982                           ; 4 bytes @ 0x23
  6983  00C3                     	ds	4
  6984                           
  6985                           	psect	cstackCOMMON
  6986  0070                     __pcstackCOMMON:	
  6987  0070                     ?_isdigit:	
  6988  0070                     ?_mssp1_IRQisEnabled:	
  6989                           ; 1 bit 
  6990                           
  6991  0070                     ?_i2c1_driver_open:	
  6992                           ; 1 bit 
  6993                           
  6994  0070                     ?_i2c1_driver_isNACK:	
  6995                           ; 1 bit 
  6996                           
  6997  0070                     ?i1_i2c1_driver_isNACK:	
  6998                           ; 1 bit 
  6999                           
  7000  0070                     ?_i2c_busCollisionISR:	
  7001                           ; 1 bit 
  7002                           
  7003  0070                     ??_i2c_busCollisionISR:	
  7004                           ; 1 bytes @ 0x0
  7005                           
  7006  0070                     ?_i2c_ISR:	
  7007                           ; 1 bytes @ 0x0
  7008                           
  7009  0070                     ?_i2c_poller:	
  7010                           ; 1 bytes @ 0x0
  7011                           
  7012  0070                     ?_localtime:	
  7013                           ; 1 bytes @ 0x0
  7014                           
  7015  0070                     ?_PMD_Initialize:	
  7016                           ; 1 bytes @ 0x0
  7017                           
  7018  0070                     ?_OSCILLATOR_Initialize:	
  7019                           ; 1 bytes @ 0x0
  7020                           
  7021  0070                     ?_SPI2_Initialize:	
  7022                           ; 1 bytes @ 0x0
  7023                           
  7024  0070                     ?_OLED_Initialize:	
  7025                           ; 1 bytes @ 0x0
  7026                           
  7027  0070                     ?_OLED_Clear:	
  7028                           ; 1 bytes @ 0x0
  7029                           
  7030  0070                     ?_gmtime:	
  7031                           ; 1 bytes @ 0x0
  7032                           
  7033  0070                     ?_mssp1_disableIRQ:	
  7034                           ; 1 bytes @ 0x0
  7035                           
  7036  0070                     ?_mssp1_clearIRQ:	
  7037                           ; 1 bytes @ 0x0
  7038                           
  7039  0070                     ?_mssp1_setIRQ:	
  7040                           ; 1 bytes @ 0x0
  7041                           
  7042  0070                     ?_mssp1_waitForEvent:	
  7043                           ; 1 bytes @ 0x0
  7044                           
  7045  0070                     ?_i2c1_driver_resetBus:	
  7046                           ; 1 bytes @ 0x0
  7047                           
  7048  0070                     ?_i2c1_driver_start:	
  7049                           ; 1 bytes @ 0x0
  7050                           
  7051  0070                     ?_i2c1_driver_restart:	
  7052                           ; 1 bytes @ 0x0
  7053                           
  7054  0070                     ?_i2c1_driver_stop:	
  7055                           ; 1 bytes @ 0x0
  7056                           
  7057  0070                     ?_i2c1_driver_startRX:	
  7058                           ; 1 bytes @ 0x0
  7059                           
  7060  0070                     ?_i2c1_driver_getRXData:	
  7061                           ; 1 bytes @ 0x0
  7062                           
  7063  0070                     ?_i2c1_driver_TXData:	
  7064                           ; 1 bytes @ 0x0
  7065                           
  7066  0070                     ?_i2c1_driver_sendACK:	
  7067                           ; 1 bytes @ 0x0
  7068                           
  7069  0070                     ?_i2c1_driver_sendNACK:	
  7070                           ; 1 bytes @ 0x0
  7071                           
  7072  0070                     ?_i2c1_driver_clearBusCollision:	
  7073                           ; 1 bytes @ 0x0
  7074                           
  7075  0070                     ??_i2c1_driver_clearBusCollision:	
  7076                           ; 1 bytes @ 0x0
  7077                           
  7078  0070                     ?_i2c_open:	
  7079                           ; 1 bytes @ 0x0
  7080                           
  7081  0070                     ?_i2c_close:	
  7082                           ; 1 bytes @ 0x0
  7083                           
  7084  0070                     ?_i2c_masterOperation:	
  7085                           ; 1 bytes @ 0x0
  7086                           
  7087  0070                     ?_i2c_masterWrite:	
  7088                           ; 1 bytes @ 0x0
  7089                           
  7090  0070                     ?_do_I2C_RESET:	
  7091                           ; 1 bytes @ 0x0
  7092                           
  7093  0070                     ?_do_I2C_IDLE:	
  7094                           ; 1 bytes @ 0x0
  7095                           
  7096  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7097                           ; 1 bytes @ 0x0
  7098                           
  7099  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7100                           ; 1 bytes @ 0x0
  7101                           
  7102  0070                     ?_do_I2C_SEND_RESTART:	
  7103                           ; 1 bytes @ 0x0
  7104                           
  7105  0070                     ?_do_I2C_SEND_STOP:	
  7106                           ; 1 bytes @ 0x0
  7107                           
  7108  0070                     ?_do_I2C_SEND_ADR_READ:	
  7109                           ; 1 bytes @ 0x0
  7110                           
  7111  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7112                           ; 1 bytes @ 0x0
  7113                           
  7114  0070                     ?_do_I2C_RCEN:	
  7115                           ; 1 bytes @ 0x0
  7116                           
  7117  0070                     ?_do_I2C_DO_ACK:	
  7118                           ; 1 bytes @ 0x0
  7119                           
  7120  0070                     ?_do_I2C_DO_NACK_STOP:	
  7121                           ; 1 bytes @ 0x0
  7122                           
  7123  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7124                           ; 1 bytes @ 0x0
  7125                           
  7126  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7127                           ; 1 bytes @ 0x0
  7128                           
  7129  0070                     ?_do_I2C_TX:	
  7130                           ; 1 bytes @ 0x0
  7131                           
  7132  0070                     ?_do_I2C_RX:	
  7133                           ; 1 bytes @ 0x0
  7134                           
  7135  0070                     ?_do_I2C_TX_EMPTY:	
  7136                           ; 1 bytes @ 0x0
  7137                           
  7138  0070                     ?_rtcc_read:	
  7139                           ; 1 bytes @ 0x0
  7140                           
  7141  0070                     ?_rtc6_Initialize:	
  7142                           ; 1 bytes @ 0x0
  7143                           
  7144  0070                     ?_PIN_MANAGER_Initialize:	
  7145                           ; 1 bytes @ 0x0
  7146                           
  7147  0070                     ?_INTERRUPT_InterruptManager:	
  7148                           ; 1 bytes @ 0x0
  7149                           
  7150  0070                     ?_SYSTEM_Initialize:	
  7151                           ; 1 bytes @ 0x0
  7152                           
  7153  0070                     ?_main:	
  7154                           ; 1 bytes @ 0x0
  7155                           
  7156  0070                     ?_SPI2_Exchange8bit:	
  7157                           ; 1 bytes @ 0x0
  7158                           
  7159  0070                     ?_OLED_Command:	
  7160                           ; 1 bytes @ 0x0
  7161                           
  7162  0070                     ?_OLED_Data:	
  7163                           ; 1 bytes @ 0x0
  7164                           
  7165  0070                     ?_OLED_SetRow:	
  7166                           ; 1 bytes @ 0x0
  7167                           
  7168  0070                     ?_OLED_SetColumn:	
  7169                           ; 1 bytes @ 0x0
  7170                           
  7171  0070                     ?i1_mssp1_clearIRQ:	
  7172                           ; 1 bytes @ 0x0
  7173                           
  7174  0070                     ??i1_mssp1_clearIRQ:	
  7175                           ; 1 bytes @ 0x0
  7176                           
  7177  0070                     ?i1_mssp1_setIRQ:	
  7178                           ; 1 bytes @ 0x0
  7179                           
  7180  0070                     ??i1_mssp1_setIRQ:	
  7181                           ; 1 bytes @ 0x0
  7182                           
  7183  0070                     ?i1_i2c1_driver_resetBus:	
  7184                           ; 1 bytes @ 0x0
  7185                           
  7186  0070                     ??i1_i2c1_driver_resetBus:	
  7187                           ; 1 bytes @ 0x0
  7188                           
  7189  0070                     ?i1_i2c1_driver_restart:	
  7190                           ; 1 bytes @ 0x0
  7191                           
  7192  0070                     ??i1_i2c1_driver_restart:	
  7193                           ; 1 bytes @ 0x0
  7194                           
  7195  0070                     ?i1_i2c1_driver_stop:	
  7196                           ; 1 bytes @ 0x0
  7197                           
  7198  0070                     ??i1_i2c1_driver_stop:	
  7199                           ; 1 bytes @ 0x0
  7200                           
  7201  0070                     ??i1_i2c1_driver_isNACK:	
  7202                           ; 1 bytes @ 0x0
  7203                           
  7204  0070                     ?i1_i2c1_driver_startRX:	
  7205                           ; 1 bytes @ 0x0
  7206                           
  7207  0070                     ??i1_i2c1_driver_startRX:	
  7208                           ; 1 bytes @ 0x0
  7209                           
  7210  0070                     ?i1_i2c1_driver_getRXData:	
  7211                           ; 1 bytes @ 0x0
  7212                           
  7213  0070                     ??i1_i2c1_driver_getRXData:	
  7214                           ; 1 bytes @ 0x0
  7215                           
  7216  0070                     ?i1_i2c1_driver_TXData:	
  7217                           ; 1 bytes @ 0x0
  7218                           
  7219  0070                     ??i1_i2c1_driver_TXData:	
  7220                           ; 1 bytes @ 0x0
  7221                           
  7222  0070                     ?i1_i2c1_driver_sendACK:	
  7223                           ; 1 bytes @ 0x0
  7224                           
  7225  0070                     ??i1_i2c1_driver_sendACK:	
  7226                           ; 1 bytes @ 0x0
  7227                           
  7228  0070                     ?i1_i2c1_driver_sendNACK:	
  7229                           ; 1 bytes @ 0x0
  7230                           
  7231  0070                     ??i1_i2c1_driver_sendNACK:	
  7232                           ; 1 bytes @ 0x0
  7233                           
  7234  0070                     ?i1_i2c_setBuffer:	
  7235                           ; 1 bytes @ 0x0
  7236                           
  7237  0070                     ?i1_do_I2C_RESET:	
  7238                           ; 1 bytes @ 0x0
  7239                           
  7240  0070                     ??i1_do_I2C_RESET:	
  7241                           ; 1 bytes @ 0x0
  7242                           
  7243  0070                     ?i1_do_I2C_IDLE:	
  7244                           ; 1 bytes @ 0x0
  7245                           
  7246  0070                     ??i1_do_I2C_IDLE:	
  7247                           ; 1 bytes @ 0x0
  7248                           
  7249  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7250                           ; 1 bytes @ 0x0
  7251                           
  7252  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7253                           ; 1 bytes @ 0x0
  7254                           
  7255  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7256                           ; 1 bytes @ 0x0
  7257                           
  7258  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7259                           ; 1 bytes @ 0x0
  7260                           
  7261  0070                     ?i1_do_I2C_SEND_RESTART:	
  7262                           ; 1 bytes @ 0x0
  7263                           
  7264  0070                     ??i1_do_I2C_SEND_RESTART:	
  7265                           ; 1 bytes @ 0x0
  7266                           
  7267  0070                     ?i1_do_I2C_SEND_STOP:	
  7268                           ; 1 bytes @ 0x0
  7269                           
  7270  0070                     ??i1_do_I2C_SEND_STOP:	
  7271                           ; 1 bytes @ 0x0
  7272                           
  7273  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7274                           ; 1 bytes @ 0x0
  7275                           
  7276  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7277                           ; 1 bytes @ 0x0
  7278                           
  7279  0070                     ?i1_do_I2C_RCEN:	
  7280                           ; 1 bytes @ 0x0
  7281                           
  7282  0070                     ??i1_do_I2C_RCEN:	
  7283                           ; 1 bytes @ 0x0
  7284                           
  7285  0070                     ?i1_do_I2C_DO_ACK:	
  7286                           ; 1 bytes @ 0x0
  7287                           
  7288  0070                     ??i1_do_I2C_DO_ACK:	
  7289                           ; 1 bytes @ 0x0
  7290                           
  7291  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7295                           ; 1 bytes @ 0x0
  7296                           
  7297  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7298                           ; 1 bytes @ 0x0
  7299                           
  7300  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7301                           ; 1 bytes @ 0x0
  7302                           
  7303  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7304                           ; 1 bytes @ 0x0
  7305                           
  7306  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7307                           ; 1 bytes @ 0x0
  7308                           
  7309  0070                     ?i1_do_I2C_TX:	
  7310                           ; 1 bytes @ 0x0
  7311                           
  7312  0070                     ?i1_do_I2C_RX:	
  7313                           ; 1 bytes @ 0x0
  7314                           
  7315  0070                     ??i1_do_I2C_RX:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318  0070                     ?i1_do_I2C_TX_EMPTY:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321  0070                     ??i1_do_I2C_TX_EMPTY:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324  0070                     ?i1_i2c_ISR:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327  0070                     ?i1_setCallBack:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330  0070                     i1i2c1_driver_TXData@d:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333  0070                     i1i2c_setBuffer@bufferSize:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336  0070                     i1setCallBack@cb:	
  7337                           ; 2 bytes @ 0x0
  7338                           
  7339                           
  7340                           ; 2 bytes @ 0x0
  7341  0070                     	ds	1
  7342  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7343  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7344                           ; 1 bytes @ 0x1
  7345                           
  7346  0071                     ??i1_do_I2C_TX:	
  7347                           ; 1 bytes @ 0x1
  7348                           
  7349                           
  7350                           ; 1 bytes @ 0x1
  7351  0071                     	ds	1
  7352  0072                     ??i1_i2c_setBuffer:	
  7353  0072                     i1setCallBack@p:	
  7354                           ; 1 bytes @ 0x2
  7355                           
  7356  0072                     i1_do_I2C_TX$723:	
  7357                           ; 1 bytes @ 0x2
  7358                           
  7359                           
  7360                           ; 2 bytes @ 0x2
  7361  0072                     	ds	1
  7362  0073                     ??i1_setCallBack:	
  7363  0073                     i1i2c_setBuffer@buffer:	
  7364                           ; 1 bytes @ 0x3
  7365                           
  7366                           
  7367                           ; 1 bytes @ 0x3
  7368  0073                     	ds	1
  7369  0074                     ??i1_i2c_ISR:	
  7370  0074                     i1setCallBack@idx:	
  7371                           ; 1 bytes @ 0x4
  7372                           
  7373                           
  7374                           ; 1 bytes @ 0x4
  7375  0074                     	ds	1
  7376  0075                     ?i1_i2c_setDataCompleteCallback:	
  7377  0075                     i1i2c_setDataCompleteCallback@cb:	
  7378                           ; 1 bytes @ 0x5
  7379                           
  7380                           
  7381                           ; 2 bytes @ 0x5
  7382  0075                     	ds	2
  7383  0077                     ??_INTERRUPT_InterruptManager:	
  7384  0077                     i1i2c_setDataCompleteCallback@p:	
  7385                           ; 1 bytes @ 0x7
  7386                           
  7387                           
  7388                           ; 1 bytes @ 0x7
  7389  0077                     	ds	1
  7390  0078                     ??i1_i2c_setDataCompleteCallback:	
  7391                           
  7392                           ; 1 bytes @ 0x8
  7393  0078                     	ds	1
  7394  0079                     ?i1_returnStop:	
  7395  0079                     ?i1_returnReset:	
  7396                           ; 1 bytes @ 0x9
  7397                           
  7398  0079                     ?i1_i2c_restartWrite:	
  7399                           ; 1 bytes @ 0x9
  7400                           
  7401  0079                     ?i1_wr1RegCompleteHandler:	
  7402                           ; 1 bytes @ 0x9
  7403                           
  7404  0079                     ?i1_rd1RegCompleteHandler:	
  7405                           ; 1 bytes @ 0x9
  7406                           
  7407  0079                     ?i1_rd2RegCompleteHandler:	
  7408                           ; 1 bytes @ 0x9
  7409                           
  7410  0079                     ?i1_wr2RegCompleteHandler:	
  7411                           ; 1 bytes @ 0x9
  7412                           
  7413  0079                     ?i1_rdBlkRegCompleteHandler:	
  7414                           ; 1 bytes @ 0x9
  7415                           
  7416  0079                     i1returnStop@p:	
  7417                           ; 1 bytes @ 0x9
  7418                           
  7419  0079                     i1returnReset@p:	
  7420                           ; 1 bytes @ 0x9
  7421                           
  7422  0079                     i1i2c_restartWrite@p:	
  7423                           ; 1 bytes @ 0x9
  7424                           
  7425  0079                     i1wr1RegCompleteHandler@p:	
  7426                           ; 1 bytes @ 0x9
  7427                           
  7428  0079                     i1rd1RegCompleteHandler@p:	
  7429                           ; 1 bytes @ 0x9
  7430                           
  7431  0079                     i1rd2RegCompleteHandler@p:	
  7432                           ; 1 bytes @ 0x9
  7433                           
  7434  0079                     i1wr2RegCompleteHandler@p:	
  7435                           ; 1 bytes @ 0x9
  7436                           
  7437  0079                     i1rdBlkRegCompleteHandler@p:	
  7438                           ; 1 bytes @ 0x9
  7439                           
  7440                           
  7441                           ; 1 bytes @ 0x9
  7442  0079                     	ds	1
  7443  007A                     ??i1_returnStop:	
  7444  007A                     ??i1_returnReset:	
  7445                           ; 1 bytes @ 0xA
  7446                           
  7447  007A                     ??i1_i2c_restartWrite:	
  7448                           ; 1 bytes @ 0xA
  7449                           
  7450  007A                     ??i1_wr1RegCompleteHandler:	
  7451                           ; 1 bytes @ 0xA
  7452                           
  7453  007A                     ??i1_rd1RegCompleteHandler:	
  7454                           ; 1 bytes @ 0xA
  7455                           
  7456  007A                     ??i1_rd2RegCompleteHandler:	
  7457                           ; 1 bytes @ 0xA
  7458                           
  7459  007A                     ??i1_wr2RegCompleteHandler:	
  7460                           ; 1 bytes @ 0xA
  7461                           
  7462  007A                     ??i1_rdBlkRegCompleteHandler:	
  7463                           ; 1 bytes @ 0xA
  7464                           
  7465                           
  7466                           	psect	cstackBANK0
  7467  0020                     __pcstackBANK0:	
  7468                           ; 1 bytes @ 0xA
  7469                           
  7470  0020                     ?_setCallBack:	
  7471  0020                     ??_PMD_Initialize:	
  7472                           ; 1 bytes @ 0x0
  7473                           
  7474  0020                     ??_OSCILLATOR_Initialize:	
  7475                           ; 1 bytes @ 0x0
  7476                           
  7477  0020                     ??_SPI2_Initialize:	
  7478                           ; 1 bytes @ 0x0
  7479                           
  7480  0020                     ??_isdigit:	
  7481                           ; 1 bytes @ 0x0
  7482                           
  7483  0020                     ??_mssp1_IRQisEnabled:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486  0020                     ??_mssp1_disableIRQ:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489  0020                     ??_mssp1_clearIRQ:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492  0020                     ??_mssp1_setIRQ:	
  7493                           ; 1 bytes @ 0x0
  7494                           
  7495  0020                     ??_mssp1_waitForEvent:	
  7496                           ; 1 bytes @ 0x0
  7497                           
  7498  0020                     ??_i2c1_driver_open:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501  0020                     ??_i2c1_driver_resetBus:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504  0020                     ??_i2c1_driver_start:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507  0020                     ??_i2c1_driver_restart:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510  0020                     ??_i2c1_driver_stop:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513  0020                     ??_i2c1_driver_isNACK:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516  0020                     ??_i2c1_driver_startRX:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519  0020                     ??_i2c1_driver_getRXData:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522  0020                     ??_i2c1_driver_TXData:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525  0020                     ??_i2c1_driver_sendACK:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528  0020                     ??_i2c1_driver_sendNACK:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531  0020                     ?_i2c1_driver_setBusCollisionISR:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534  0020                     ?_i2c1_driver_setI2cISR:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537  0020                     ??_i2c_close:	
  7538                           ; 1 bytes @ 0x0
  7539                           
  7540  0020                     ?_i2c_setBuffer:	
  7541                           ; 1 bytes @ 0x0
  7542                           
  7543  0020                     ??_do_I2C_RESET:	
  7544                           ; 1 bytes @ 0x0
  7545                           
  7546  0020                     ??_do_I2C_IDLE:	
  7547                           ; 1 bytes @ 0x0
  7548                           
  7549  0020                     ??_do_I2C_SEND_RESTART_READ:	
  7550                           ; 1 bytes @ 0x0
  7551                           
  7552  0020                     ??_do_I2C_SEND_RESTART_WRITE:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555  0020                     ??_do_I2C_SEND_RESTART:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558  0020                     ??_do_I2C_SEND_STOP:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561  0020                     ??_do_I2C_RCEN:	
  7562                           ; 1 bytes @ 0x0
  7563                           
  7564  0020                     ??_do_I2C_DO_ACK:	
  7565                           ; 1 bytes @ 0x0
  7566                           
  7567  0020                     ??_do_I2C_DO_NACK_STOP:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570  0020                     ??_do_I2C_DO_NACK_RESTART:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573  0020                     ??_do_I2C_DO_ADDRESS_NACK:	
  7574                           ; 1 bytes @ 0x0
  7575                           
  7576  0020                     ??_do_I2C_RX:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579  0020                     ??_do_I2C_TX_EMPTY:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582  0020                     ??_PIN_MANAGER_Initialize:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585  0020                     ??_SPI2_Exchange8bit:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  0020                     ?___bmul:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  0020                     ?_memset:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  0020                     ?_strlen:	
  7595                           ; 2 bytes @ 0x0
  7596                           
  7597  0020                     ?___wmul:	
  7598                           ; 2 bytes @ 0x0
  7599                           
  7600  0020                     ?___awdiv:	
  7601                           ; 2 bytes @ 0x0
  7602                           
  7603  0020                     ?___awmod:	
  7604                           ; 2 bytes @ 0x0
  7605                           
  7606  0020                     ?___lmul:	
  7607                           ; 2 bytes @ 0x0
  7608                           
  7609  0020                     ?___aldiv:	
  7610                           ; 4 bytes @ 0x0
  7611                           
  7612  0020                     ?___almod:	
  7613                           ; 4 bytes @ 0x0
  7614                           
  7615  0020                     mssp1_waitForEvent@timeout:	
  7616                           ; 4 bytes @ 0x0
  7617                           
  7618  0020                     i2c1_driver_TXData@d:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  0020                     SPI2_Exchange8bit@data:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624  0020                     ___bmul@multiplicand:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627  0020                     _isdigit$2028:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630  0020                     i2c1_driver_setBusCollisionISR@f:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633  0020                     i2c1_driver_setI2cISR@f:	
  7634                           ; 2 bytes @ 0x0
  7635                           
  7636  0020                     i2c_setBuffer@bufferSize:	
  7637                           ; 2 bytes @ 0x0
  7638                           
  7639  0020                     setCallBack@cb:	
  7640                           ; 2 bytes @ 0x0
  7641                           
  7642  0020                     ___wmul@multiplier:	
  7643                           ; 2 bytes @ 0x0
  7644                           
  7645  0020                     ___awdiv@divisor:	
  7646                           ; 2 bytes @ 0x0
  7647                           
  7648  0020                     ___awmod@divisor:	
  7649                           ; 2 bytes @ 0x0
  7650                           
  7651  0020                     memset@p1:	
  7652                           ; 2 bytes @ 0x0
  7653                           
  7654  0020                     strlen@s:	
  7655                           ; 2 bytes @ 0x0
  7656                           
  7657  0020                     ___lmul@multiplier:	
  7658                           ; 2 bytes @ 0x0
  7659                           
  7660  0020                     ___aldiv@divisor:	
  7661                           ; 4 bytes @ 0x0
  7662                           
  7663  0020                     ___almod@divisor:	
  7664                           ; 4 bytes @ 0x0
  7665                           
  7666                           
  7667                           ; 4 bytes @ 0x0
  7668  0020                     	ds	1
  7669  0021                     ??_do_I2C_SEND_ADR_READ:	
  7670  0021                     ??_do_I2C_SEND_ADR_WRITE:	
  7671                           ; 1 bytes @ 0x1
  7672                           
  7673  0021                     ??_do_I2C_TX:	
  7674                           ; 1 bytes @ 0x1
  7675                           
  7676  0021                     ??_OLED_Command:	
  7677                           ; 1 bytes @ 0x1
  7678                           
  7679  0021                     ??_OLED_Data:	
  7680                           ; 1 bytes @ 0x1
  7681                           
  7682  0021                     ??___bmul:	
  7683                           ; 1 bytes @ 0x1
  7684                           
  7685  0021                     i2c_close@ret:	
  7686                           ; 1 bytes @ 0x1
  7687                           
  7688  0021                     OLED_Command@temp:	
  7689                           ; 1 bytes @ 0x1
  7690                           
  7691  0021                     OLED_Data@temp:	
  7692                           ; 1 bytes @ 0x1
  7693                           
  7694  0021                     isdigit@c:	
  7695                           ; 1 bytes @ 0x1
  7696                           
  7697                           
  7698                           ; 1 bytes @ 0x1
  7699  0021                     	ds	1
  7700  0022                     ??_OLED_Initialize:	
  7701  0022                     ??_strlen:	
  7702                           ; 1 bytes @ 0x2
  7703                           
  7704  0022                     ??_i2c1_driver_setBusCollisionISR:	
  7705                           ; 1 bytes @ 0x2
  7706                           
  7707  0022                     ??_i2c1_driver_setI2cISR:	
  7708                           ; 1 bytes @ 0x2
  7709                           
  7710  0022                     ??_i2c_open:	
  7711                           ; 1 bytes @ 0x2
  7712                           
  7713  0022                     ??_i2c_setBuffer:	
  7714                           ; 1 bytes @ 0x2
  7715                           
  7716  0022                     ??_OLED_SetRow:	
  7717                           ; 1 bytes @ 0x2
  7718                           
  7719  0022                     ??_OLED_SetColumn:	
  7720                           ; 1 bytes @ 0x2
  7721                           
  7722  0022                     setCallBack@p:	
  7723                           ; 1 bytes @ 0x2
  7724                           
  7725  0022                     ___bmul@product:	
  7726                           ; 1 bytes @ 0x2
  7727                           
  7728  0022                     _do_I2C_TX$723:	
  7729                           ; 1 bytes @ 0x2
  7730                           
  7731  0022                     ___wmul@multiplicand:	
  7732                           ; 2 bytes @ 0x2
  7733                           
  7734  0022                     ___awdiv@dividend:	
  7735                           ; 2 bytes @ 0x2
  7736                           
  7737  0022                     ___awmod@dividend:	
  7738                           ; 2 bytes @ 0x2
  7739                           
  7740  0022                     memset@c:	
  7741                           ; 2 bytes @ 0x2
  7742                           
  7743                           
  7744                           ; 2 bytes @ 0x2
  7745  0022                     	ds	1
  7746  0023                     ??_setCallBack:	
  7747  0023                     i2c_open@address:	
  7748                           ; 1 bytes @ 0x3
  7749                           
  7750  0023                     i2c_setBuffer@buffer:	
  7751                           ; 1 bytes @ 0x3
  7752                           
  7753  0023                     OLED_SetRow@address:	
  7754                           ; 1 bytes @ 0x3
  7755                           
  7756  0023                     OLED_SetColumn@address:	
  7757                           ; 1 bytes @ 0x3
  7758                           
  7759  0023                     ___bmul@multiplier:	
  7760                           ; 1 bytes @ 0x3
  7761                           
  7762                           
  7763                           ; 1 bytes @ 0x3
  7764  0023                     	ds	1
  7765  0024                     ??_i2c_ISR:	
  7766  0024                     ?_OLED_PutPicture:	
  7767                           ; 1 bytes @ 0x4
  7768                           
  7769  0024                     ??___wmul:	
  7770                           ; 1 bytes @ 0x4
  7771                           
  7772  0024                     ??___awdiv:	
  7773                           ; 1 bytes @ 0x4
  7774                           
  7775  0024                     ??___awmod:	
  7776                           ; 1 bytes @ 0x4
  7777                           
  7778  0024                     i2c_open@ret:	
  7779                           ; 1 bytes @ 0x4
  7780                           
  7781  0024                     setCallBack@idx:	
  7782                           ; 1 bytes @ 0x4
  7783                           
  7784  0024                     OLED_PutPicture@pic:	
  7785                           ; 1 bytes @ 0x4
  7786                           
  7787  0024                     ___wmul@product:	
  7788                           ; 2 bytes @ 0x4
  7789                           
  7790  0024                     memset@n:	
  7791                           ; 2 bytes @ 0x4
  7792                           
  7793  0024                     strlen@cp:	
  7794                           ; 2 bytes @ 0x4
  7795                           
  7796  0024                     ___lmul@multiplicand:	
  7797                           ; 2 bytes @ 0x4
  7798                           
  7799  0024                     ___aldiv@dividend:	
  7800                           ; 4 bytes @ 0x4
  7801                           
  7802  0024                     ___almod@dividend:	
  7803                           ; 4 bytes @ 0x4
  7804                           
  7805                           
  7806                           ; 4 bytes @ 0x4
  7807  0024                     	ds	1
  7808  0025                     ?_i2c_setDataCompleteCallback:	
  7809  0025                     ?_i2c_setAddressNACKCallback:	
  7810                           ; 1 bytes @ 0x5
  7811                           
  7812  0025                     ___awdiv@counter:	
  7813                           ; 1 bytes @ 0x5
  7814                           
  7815  0025                     ___awmod@counter:	
  7816                           ; 1 bytes @ 0x5
  7817                           
  7818  0025                     i2c_setDataCompleteCallback@cb:	
  7819                           ; 1 bytes @ 0x5
  7820                           
  7821  0025                     i2c_setAddressNACKCallback@cb:	
  7822                           ; 2 bytes @ 0x5
  7823                           
  7824                           
  7825                           ; 2 bytes @ 0x5
  7826  0025                     	ds	1
  7827  0026                     ??_memset:	
  7828  0026                     ?_Modify_Data:	
  7829                           ; 1 bytes @ 0x6
  7830                           
  7831  0026                     ??_OLED_PutPicture:	
  7832                           ; 1 bytes @ 0x6
  7833                           
  7834  0026                     ?___lwdiv:	
  7835                           ; 1 bytes @ 0x6
  7836                           
  7837  0026                     ___awdiv@sign:	
  7838                           ; 2 bytes @ 0x6
  7839                           
  7840  0026                     ___awmod@sign:	
  7841                           ; 1 bytes @ 0x6
  7842                           
  7843  0026                     OLED_PutPicture@j:	
  7844                           ; 1 bytes @ 0x6
  7845                           
  7846  0026                     Modify_Data@c:	
  7847                           ; 2 bytes @ 0x6
  7848                           
  7849  0026                     ___lwdiv@divisor:	
  7850                           ; 2 bytes @ 0x6
  7851                           
  7852  0026                     memset@p:	
  7853                           ; 2 bytes @ 0x6
  7854                           
  7855                           
  7856                           ; 2 bytes @ 0x6
  7857  0026                     	ds	1
  7858  0027                     ??_i2c_poller:	
  7859  0027                     ??_i2c_masterOperation:	
  7860                           ; 1 bytes @ 0x7
  7861                           
  7862  0027                     i2c_setDataCompleteCallback@p:	
  7863                           ; 1 bytes @ 0x7
  7864                           
  7865  0027                     i2c_setAddressNACKCallback@p:	
  7866                           ; 1 bytes @ 0x7
  7867                           
  7868  0027                     ___awdiv@quotient:	
  7869                           ; 1 bytes @ 0x7
  7870                           
  7871                           
  7872                           ; 2 bytes @ 0x7
  7873  0027                     	ds	1
  7874  0028                     ??_i2c_setDataCompleteCallback:	
  7875  0028                     ??_i2c_setAddressNACKCallback:	
  7876                           ; 1 bytes @ 0x8
  7877                           
  7878  0028                     ??___lmul:	
  7879                           ; 1 bytes @ 0x8
  7880                           
  7881  0028                     ??___aldiv:	
  7882                           ; 1 bytes @ 0x8
  7883                           
  7884  0028                     ??___almod:	
  7885                           ; 1 bytes @ 0x8
  7886                           
  7887  0028                     i2c_masterOperation@read:	
  7888                           ; 1 bytes @ 0x8
  7889                           
  7890  0028                     OLED_PutPicture@i:	
  7891                           ; 1 bytes @ 0x8
  7892                           
  7893  0028                     Modify_Data@offset:	
  7894                           ; 2 bytes @ 0x8
  7895                           
  7896  0028                     ___lwdiv@dividend:	
  7897                           ; 2 bytes @ 0x8
  7898                           
  7899  0028                     ___lmul@product:	
  7900                           ; 2 bytes @ 0x8
  7901                           
  7902                           
  7903                           ; 4 bytes @ 0x8
  7904  0028                     	ds	1
  7905  0029                     ?_returnStop:	
  7906  0029                     ?_returnReset:	
  7907                           ; 1 bytes @ 0x9
  7908                           
  7909  0029                     ?_i2c_restartWrite:	
  7910                           ; 1 bytes @ 0x9
  7911                           
  7912  0029                     ?_wr1RegCompleteHandler:	
  7913                           ; 1 bytes @ 0x9
  7914                           
  7915  0029                     ?_rd1RegCompleteHandler:	
  7916                           ; 1 bytes @ 0x9
  7917                           
  7918  0029                     ?_rd2RegCompleteHandler:	
  7919                           ; 1 bytes @ 0x9
  7920                           
  7921  0029                     ?_wr2RegCompleteHandler:	
  7922                           ; 1 bytes @ 0x9
  7923                           
  7924  0029                     ?_rdBlkRegCompleteHandler:	
  7925                           ; 1 bytes @ 0x9
  7926                           
  7927  0029                     i2c_masterOperation@ret:	
  7928                           ; 1 bytes @ 0x9
  7929                           
  7930  0029                     returnStop@p:	
  7931                           ; 1 bytes @ 0x9
  7932                           
  7933  0029                     returnReset@p:	
  7934                           ; 1 bytes @ 0x9
  7935                           
  7936  0029                     i2c_restartWrite@p:	
  7937                           ; 1 bytes @ 0x9
  7938                           
  7939  0029                     wr1RegCompleteHandler@p:	
  7940                           ; 1 bytes @ 0x9
  7941                           
  7942  0029                     rd1RegCompleteHandler@p:	
  7943                           ; 1 bytes @ 0x9
  7944                           
  7945  0029                     rd2RegCompleteHandler@p:	
  7946                           ; 1 bytes @ 0x9
  7947                           
  7948  0029                     wr2RegCompleteHandler@p:	
  7949                           ; 1 bytes @ 0x9
  7950                           
  7951  0029                     rdBlkRegCompleteHandler@p:	
  7952                           ; 1 bytes @ 0x9
  7953                           
  7954  0029                     ___aldiv@counter:	
  7955                           ; 1 bytes @ 0x9
  7956                           
  7957  0029                     ___almod@counter:	
  7958                           ; 1 bytes @ 0x9
  7959                           
  7960                           
  7961                           ; 1 bytes @ 0x9
  7962  0029                     	ds	1
  7963  002A                     ??_returnStop:	
  7964  002A                     ??_returnReset:	
  7965                           ; 1 bytes @ 0xA
  7966                           
  7967  002A                     ?_i2c_read1ByteRegister:	
  7968                           ; 1 bytes @ 0xA
  7969                           
  7970  002A                     ?_i2c_write1ByteRegister:	
  7971                           ; 1 bytes @ 0xA
  7972                           
  7973  002A                     ??_OLED_Clear:	
  7974                           ; 1 bytes @ 0xA
  7975                           
  7976  002A                     ??_i2c_masterWrite:	
  7977                           ; 1 bytes @ 0xA
  7978                           
  7979  002A                     ??_i2c_restartWrite:	
  7980                           ; 1 bytes @ 0xA
  7981                           
  7982  002A                     ??_wr1RegCompleteHandler:	
  7983                           ; 1 bytes @ 0xA
  7984                           
  7985  002A                     ??_rd1RegCompleteHandler:	
  7986                           ; 1 bytes @ 0xA
  7987                           
  7988  002A                     ??_rd2RegCompleteHandler:	
  7989                           ; 1 bytes @ 0xA
  7990                           
  7991  002A                     ??_wr2RegCompleteHandler:	
  7992                           ; 1 bytes @ 0xA
  7993                           
  7994  002A                     ??_rdBlkRegCompleteHandler:	
  7995                           ; 1 bytes @ 0xA
  7996                           
  7997  002A                     ??___lwdiv:	
  7998                           ; 1 bytes @ 0xA
  7999                           
  8000  002A                     i2c_write1ByteRegister@reg:	
  8001                           ; 1 bytes @ 0xA
  8002                           
  8003  002A                     i2c_read1ByteRegister@reg:	
  8004                           ; 1 bytes @ 0xA
  8005                           
  8006  002A                     ___aldiv@sign:	
  8007                           ; 1 bytes @ 0xA
  8008                           
  8009  002A                     ___almod@sign:	
  8010                           ; 1 bytes @ 0xA
  8011                           
  8012  002A                     Modify_Data@limit:	
  8013                           ; 1 bytes @ 0xA
  8014                           
  8015                           
  8016                           ; 2 bytes @ 0xA
  8017  002A                     	ds	1
  8018  002B                     ??_i2c_read1ByteRegister:	
  8019  002B                     i2c_write1ByteRegister@data:	
  8020                           ; 1 bytes @ 0xB
  8021                           
  8022  002B                     ___lwdiv@quotient:	
  8023                           ; 1 bytes @ 0xB
  8024                           
  8025  002B                     ___aldiv@quotient:	
  8026                           ; 2 bytes @ 0xB
  8027                           
  8028                           
  8029                           ; 4 bytes @ 0xB
  8030  002B                     	ds	1
  8031  002C                     ??_i2c_write1ByteRegister:	
  8032  002C                     ??_Modify_Data:	
  8033                           ; 1 bytes @ 0xC
  8034                           
  8035  002C                     i2c_read1ByteRegister@address:	
  8036                           ; 1 bytes @ 0xC
  8037                           
  8038  002C                     OLED_Clear@j:	
  8039                           ; 1 bytes @ 0xC
  8040                           
  8041                           
  8042                           ; 1 bytes @ 0xC
  8043  002C                     	ds	1
  8044  002D                     i2c_write1ByteRegister@address:	
  8045  002D                     i2c_read1ByteRegister@e:	
  8046                           ; 1 bytes @ 0xD
  8047                           
  8048  002D                     ___lwdiv@counter:	
  8049                           ; 1 bytes @ 0xD
  8050                           
  8051  002D                     OLED_Clear@j_1658:	
  8052                           ; 1 bytes @ 0xD
  8053                           
  8054                           
  8055                           ; 2 bytes @ 0xD
  8056  002D                     	ds	1
  8057  002E                     ?_rtcc_write:	
  8058  002E                     ?___lwmod:	
  8059                           ; 1 bytes @ 0xE
  8060                           
  8061  002E                     ?_months_to_days:	
  8062                           ; 2 bytes @ 0xE
  8063                           
  8064  002E                     ?_years_to_days:	
  8065                           ; 2 bytes @ 0xE
  8066                           
  8067  002E                     rtcc_write@data:	
  8068                           ; 4 bytes @ 0xE
  8069                           
  8070  002E                     i2c_read1ByteRegister@x:	
  8071                           ; 1 bytes @ 0xE
  8072                           
  8073  002E                     ___lwmod@divisor:	
  8074                           ; 2 bytes @ 0xE
  8075                           
  8076  002E                     months_to_days@month:	
  8077                           ; 2 bytes @ 0xE
  8078                           
  8079  002E                     years_to_days@yr:	
  8080                           ; 2 bytes @ 0xE
  8081                           
  8082                           
  8083                           ; 2 bytes @ 0xE
  8084  002E                     	ds	1
  8085  002F                     ??_rtcc_write:	
  8086  002F                     OLED_Clear@i:	
  8087                           ; 1 bytes @ 0xF
  8088                           
  8089                           
  8090                           ; 1 bytes @ 0xF
  8091  002F                     	ds	1
  8092  0030                     ??_months_to_days:	
  8093  0030                     i2c_read1ByteRegister@d2:	
  8094                           ; 1 bytes @ 0x10
  8095                           
  8096  0030                     ___lwmod@dividend:	
  8097                           ; 1 bytes @ 0x10
  8098                           
  8099                           
  8100                           ; 2 bytes @ 0x10
  8101  0030                     	ds	1
  8102  0031                     ??_rtcc_read:	
  8103  0031                     rtcc_write@addr:	
  8104                           ; 1 bytes @ 0x11
  8105                           
  8106                           
  8107                           ; 1 bytes @ 0x11
  8108  0031                     	ds	1
  8109  0032                     ??___lwmod:	
  8110  0032                     ??_years_to_days:	
  8111                           ; 1 bytes @ 0x12
  8112                           
  8113  0032                     rtcc_read@addr:	
  8114                           ; 1 bytes @ 0x12
  8115                           
  8116                           
  8117                           ; 1 bytes @ 0x12
  8118  0032                     	ds	1
  8119  0033                     ??_rtc6_Initialize:	
  8120  0033                     ?_rtc6_SetComponent:	
  8121                           ; 1 bytes @ 0x13
  8122                           
  8123  0033                     ?_rtc6_GetComponent:	
  8124                           ; 1 bytes @ 0x13
  8125                           
  8126  0033                     rtc6_SetComponent@mask:	
  8127                           ; 1 bytes @ 0x13
  8128                           
  8129  0033                     rtc6_GetComponent@mask:	
  8130                           ; 1 bytes @ 0x13
  8131                           
  8132  0033                     ___lwmod@counter:	
  8133                           ; 1 bytes @ 0x13
  8134                           
  8135                           
  8136                           ; 1 bytes @ 0x13
  8137  0033                     	ds	1
  8138  0034                     ??_rtc6_GetComponent:	
  8139  0034                     ?_sprintf:	
  8140                           ; 1 bytes @ 0x14
  8141                           
  8142  0034                     ?_dylen:	
  8143                           ; 2 bytes @ 0x14
  8144                           
  8145  0034                     ?_isleap:	
  8146                           ; 2 bytes @ 0x14
  8147                           
  8148  0034                     rtc6_SetComponent@time:	
  8149                           ; 2 bytes @ 0x14
  8150                           
  8151  0034                     sprintf@sp:	
  8152                           ; 1 bytes @ 0x14
  8153                           
  8154  0034                     dylen@yr:	
  8155                           ; 2 bytes @ 0x14
  8156                           
  8157  0034                     isleap@yr:	
  8158                           ; 2 bytes @ 0x14
  8159                           
  8160                           
  8161                           ; 2 bytes @ 0x14
  8162  0034                     	ds	1
  8163  0035                     ??_rtc6_SetComponent:	
  8164  0035                     rtc6_Initialize@reg:	
  8165                           ; 1 bytes @ 0x15
  8166                           
  8167  0035                     Modify_Data@right:	
  8168                           ; 1 bytes @ 0x15
  8169                           
  8170                           
  8171                           ; 2 bytes @ 0x15
  8172  0035                     	ds	1
  8173  0036                     ??_SYSTEM_Initialize:	
  8174  0036                     ??_dylen:	
  8175                           ; 1 bytes @ 0x16
  8176                           
  8177  0036                     ??_isleap:	
  8178                           ; 1 bytes @ 0x16
  8179                           
  8180  0036                     sprintf@f:	
  8181                           ; 1 bytes @ 0x16
  8182                           
  8183                           
  8184                           ; 2 bytes @ 0x16
  8185  0036                     	ds	1
  8186  0037                     rtc6_GetComponent@location:	
  8187  0037                     Modify_Data@p:	
  8188                           ; 1 bytes @ 0x17
  8189                           
  8190                           
  8191                           ; 2 bytes @ 0x17
  8192  0037                     	ds	1
  8193  0038                     ??_gmtime:	
  8194  0038                     rtc6_GetComponent@working:	
  8195                           ; 1 bytes @ 0x18
  8196                           
  8197  0038                     _isleap$2096:	
  8198                           ; 1 bytes @ 0x18
  8199                           
  8200                           
  8201                           ; 1 bytes @ 0x18
  8202  0038                     	ds	1
  8203  0039                     Modify_Data@j:	
  8204                           
  8205                           ; 2 bytes @ 0x19
  8206  0039                     	ds	1
  8207  003A                     gmtime@tp:	
  8208                           
  8209                           ; 1 bytes @ 0x1A
  8210  003A                     	ds	1
  8211  003B                     rtc6_SetComponent@inMemory:	
  8212  003B                     gmtime@tc:	
  8213                           ; 1 bytes @ 0x1B
  8214                           
  8215                           
  8216                           ; 4 bytes @ 0x1B
  8217  003B                     	ds	1
  8218  003C                     rtc6_SetComponent@location:	
  8219                           
  8220                           ; 1 bytes @ 0x1C
  8221  003C                     	ds	3
  8222  003F                     ??_localtime:	
  8223                           
  8224                           ; 1 bytes @ 0x1F
  8225  003F                     	ds	1
  8226  0040                     ?_ymd_to_scalar:	
  8227  0040                     ymd_to_scalar@yr:	
  8228                           ; 4 bytes @ 0x20
  8229                           
  8230                           
  8231                           ; 2 bytes @ 0x20
  8232  0040                     	ds	2
  8233  0042                     ymd_to_scalar@mo:	
  8234                           
  8235                           ; 2 bytes @ 0x22
  8236  0042                     	ds	2
  8237  0044                     ??_sprintf:	
  8238  0044                     ymd_to_scalar@day:	
  8239                           ; 1 bytes @ 0x24
  8240                           
  8241                           
  8242                           ; 2 bytes @ 0x24
  8243  0044                     	ds	2
  8244  0046                     ??_ymd_to_scalar:	
  8245                           
  8246                           ; 1 bytes @ 0x26
  8247  0046                     	ds	1
  8248  0047                     localtime@t:	
  8249                           
  8250                           ; 4 bytes @ 0x27
  8251  0047                     	ds	1
  8252  0048                     sprintf@ap:	
  8253                           
  8254                           ; 1 bytes @ 0x28
  8255  0048                     	ds	1
  8256  0049                     sprintf@cp:	
  8257                           
  8258                           ; 1 bytes @ 0x29
  8259  0049                     	ds	1
  8260  004A                     sprintf@prec:	
  8261  004A                     _ymd_to_scalar$2108:	
  8262                           ; 1 bytes @ 0x2A
  8263                           
  8264                           
  8265                           ; 2 bytes @ 0x2A
  8266  004A                     	ds	1
  8267  004B                     localtime@tp:	
  8268  004B                     sprintf@len:	
  8269                           ; 1 bytes @ 0x2B
  8270                           
  8271                           
  8272                           ; 2 bytes @ 0x2B
  8273  004B                     	ds	1
  8274  004C                     ?_rtc6_SetTime:	
  8275  004C                     rtc6_SetTime@t:	
  8276                           ; 1 bytes @ 0x2C
  8277                           
  8278  004C                     ymd_to_scalar@scalar:	
  8279                           ; 4 bytes @ 0x2C
  8280                           
  8281                           
  8282                           ; 4 bytes @ 0x2C
  8283  004C                     	ds	1
  8284  004D                     sprintf@val:	
  8285                           
  8286                           ; 2 bytes @ 0x2D
  8287  004D                     	ds	2
  8288  004F                     sprintf@flag:	
  8289                           
  8290                           ; 1 bytes @ 0x2F
  8291  004F                     	ds	1
  8292  0050                     ??_rtc6_SetTime:	
  8293  0050                     ?_mktime:	
  8294                           ; 1 bytes @ 0x30
  8295                           
  8296  0050                     sprintf@width:	
  8297                           ; 4 bytes @ 0x30
  8298                           
  8299                           
  8300                           ; 2 bytes @ 0x30
  8301  0050                     	ds	2
  8302  0052                     sprintf@c:	
  8303  0052                     _rtc6_SetTime$2612:	
  8304                           ; 1 bytes @ 0x32
  8305                           
  8306                           
  8307                           ; 1 bytes @ 0x32
  8308  0052                     	ds	1
  8309  0053                     ?_Write_String:	
  8310  0053                     rtc6_SetTime@tm_t:	
  8311                           ; 1 bytes @ 0x33
  8312                           
  8313  0053                     Write_String@message:	
  8314                           ; 1 bytes @ 0x33
  8315                           
  8316                           
  8317                           ; 2 bytes @ 0x33
  8318  0053                     	ds	1
  8319  0054                     ??_mktime:	
  8320                           
  8321                           ; 1 bytes @ 0x34
  8322  0054                     	ds	1
  8323  0055                     ??_Write_String:	
  8324  0055                     Write_String@len:	
  8325                           ; 1 bytes @ 0x35
  8326                           
  8327                           
  8328                           ; 2 bytes @ 0x35
  8329  0055                     	ds	5
  8330  005A                     mktime@tt:	
  8331                           
  8332                           ; 4 bytes @ 0x3A
  8333  005A                     	ds	4
  8334  005E                     mktime@timeptr:	
  8335                           
  8336                           ; 1 bytes @ 0x3E
  8337  005E                     	ds	1
  8338  005F                     ?_rtc6_GetTime:	
  8339                           
  8340                           ; 4 bytes @ 0x3F
  8341  005F                     	ds	4
  8342  0063                     ??_rtc6_GetTime:	
  8343                           
  8344                           ; 1 bytes @ 0x43
  8345  0063                     	ds	3
  8346  0066                     ??_main:	
  8347                           
  8348                           ; 1 bytes @ 0x46
  8349  0066                     	ds	4
  8350                           
  8351                           	psect	maintext
  8352  0C96                     __pmaintext:	
  8353 ;;
  8354 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8355 ;;
  8356 ;; *************** function _main *****************
  8357 ;; Defined at:
  8358 ;;		line 5 in file "main.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;		None
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;  timeStr         0   18[BANK1 ] unsigned char [0]
  8363 ;;  buffer         80    0        unsigned char [80]
  8364 ;;  welcomeMsg     12   18[BANK1 ] unsigned char [12]
  8365 ;;  getTime         4   35[BANK1 ] volatile long 
  8366 ;;  setTime         4   30[BANK1 ] volatile long 
  8367 ;;  tm_t            1   34[BANK1 ] PTR struct tm
  8368 ;;		 -> gmtime@tim(18), 
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  1    wreg      void 
  8371 ;; Registers used:
  8372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8373 ;; Tracked objects:
  8374 ;;		On entry : B1F/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8379 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  8380 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0
  8382 ;;Total ram usage:       25 bytes
  8383 ;; Hardware stack levels required when called:   18
  8384 ;; This function calls:
  8385 ;;		_OLED_Clear
  8386 ;;		_OLED_Initialize
  8387 ;;		_SYSTEM_Initialize
  8388 ;;		_Write_String
  8389 ;;		_localtime
  8390 ;;		_memset
  8391 ;;		_rtc6_GetTime
  8392 ;;		_rtc6_SetTime
  8393 ;;		_sprintf
  8394 ;; This function is called by:
  8395 ;;		Startup code after reset
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           
  8400                           ;psect for function _main
  8401  0C96                     _main:	
  8402                           
  8403                           ;main.c: 8: SYSTEM_Initialize();
  8404                           
  8405                           ;incstack = 0
  8406 ;; hardware stack exceeded
  8407                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8408  0C96  3190  2055  318C   	fcall	_SYSTEM_Initialize
  8409                           
  8410                           ;main.c: 9: OLED_Initialize();
  8411  0C99  318A  2292  318C   	fcall	_OLED_Initialize
  8412                           
  8413                           ;main.c: 25: char welcomeMsg[] = "Alarm Clock";
  8414  0C9C  30E4               	movlw	low main@F15397
  8415  0C9D  0086               	movwf	6
  8416  0C9E  3000               	movlw	high main@F15397
  8417  0C9F  0087               	movwf	7
  8418  0CA0  30B2               	movlw	low main@welcomeMsg
  8419  0CA1  0084               	movwf	4
  8420  0CA2  3000               	movlw	high main@welcomeMsg
  8421  0CA3  0085               	movwf	5
  8422  0CA4  300C               	movlw	12
  8423  0CA5  0020               	movlb	0	; select bank0
  8424  0CA6  00E6               	movwf	??_main
  8425  0CA7                     u5510:	
  8426  0CA7  0016               	moviw fsr1++
  8427  0CA8  001A               	movwi fsr0++
  8428  0CA9  0BE6               	decfsz	??_main,f
  8429  0CAA  2CA7               	goto	u5510
  8430                           
  8431                           ;main.c: 26: OLED_Clear();
  8432  0CAB  3188  2091  318C   	fcall	_OLED_Clear
  8433                           
  8434                           ;main.c: 27: Write_String(welcomeMsg);
  8435  0CAE  30B2               	movlw	low main@welcomeMsg
  8436  0CAF  0020               	movlb	0	; select bank0
  8437  0CB0  00D3               	movwf	Write_String@message
  8438  0CB1  3000               	movlw	high main@welcomeMsg
  8439  0CB2  00D4               	movwf	Write_String@message+1
  8440  0CB3  3193  23BD  318C   	fcall	_Write_String
  8441                           
  8442                           ;main.c: 28: _delay((unsigned long)((5000)*(1000000/4000.0)));
  8443  0CB6  3007               	movlw	7
  8444  0CB7  0020               	movlb	0	; select bank0
  8445  0CB8  00E7               	movwf	??_main+1
  8446  0CB9  3058               	movlw	88
  8447  0CBA  00E6               	movwf	??_main
  8448  0CBB  3059               	movlw	89
  8449  0CBC                     u5527:	
  8450  0CBC  0B89               	decfsz	9,f
  8451  0CBD  2CBC               	goto	u5527
  8452  0CBE  0BE6               	decfsz	??_main,f
  8453  0CBF  2CBC               	goto	u5527
  8454  0CC0  0BE7               	decfsz	??_main+1,f
  8455  0CC1  2CBC               	goto	u5527
  8456  0CC2  3200               	nop2
  8457                           
  8458                           ;main.c: 29: volatile time_t getTime, setTime;
  8459                           ;main.c: 31: struct tm *tm_t;
  8460                           ;main.c: 33: char buffer[80];
  8461                           ;main.c: 35: memset(tm_t, 0, sizeof (tm_t));
  8462  0CC3  0021               	movlb	1	; select bank1
  8463  0CC4  0842               	movf	main@tm_t^(0+128),w
  8464  0CC5  0020               	movlb	0	; select bank0
  8465  0CC6  00A0               	movwf	memset@p1
  8466  0CC7  3001               	movlw	1
  8467  0CC8  00A1               	movwf	memset@p1+1
  8468  0CC9  3000               	movlw	0
  8469  0CCA  00A2               	movwf	memset@c
  8470  0CCB  00A3               	movwf	memset@c+1
  8471  0CCC  3001               	movlw	1
  8472  0CCD  00A4               	movwf	memset@n
  8473  0CCE  3000               	movlw	0
  8474  0CCF  00A5               	movwf	memset@n+1
  8475  0CD0  3191  2161  318C   	fcall	_memset
  8476                           
  8477                           ;main.c: 38: setTime = 1503870020;
  8478  0CD3  3059               	movlw	89
  8479  0CD4  0021               	movlb	1	; select bank1
  8480  0CD5  00C1               	movwf	(main@setTime+3)^(0+128)	;volatile
  8481  0CD6  30A3               	movlw	163
  8482  0CD7  00C0               	movwf	(main@setTime+2)^(0+128)	;volatile
  8483  0CD8  303C               	movlw	60
  8484  0CD9  00BF               	movwf	(main@setTime+1)^(0+128)	;volatile
  8485  0CDA  3044               	movlw	68
  8486  0CDB  00BE               	movwf	main@setTime^(0+128)	;volatile
  8487                           
  8488                           ;main.c: 39: getTime = 0;
  8489  0CDC  3000               	movlw	0
  8490  0CDD  00C6               	movwf	(main@getTime+3)^(0+128)	;volatile
  8491  0CDE  3000               	movlw	0
  8492  0CDF  00C5               	movwf	(main@getTime+2)^(0+128)	;volatile
  8493  0CE0  3000               	movlw	0
  8494  0CE1  00C4               	movwf	(main@getTime+1)^(0+128)	;volatile
  8495  0CE2  3000               	movlw	0
  8496  0CE3  00C3               	movwf	main@getTime^(0+128)	;volatile
  8497                           
  8498                           ;main.c: 40: OLED_Clear();
  8499  0CE4  3188  2091  318C   	fcall	_OLED_Clear
  8500                           
  8501                           ;main.c: 43: rtc6_SetTime(setTime);
  8502                           
  8503                           ;main.c: 41: while (1) {
  8504  0CE7  0021               	movlb	1	; select bank1
  8505  0CE8  0841               	movf	(main@setTime+3)^(0+128),w	;volatile
  8506  0CE9  0020               	movlb	0	; select bank0
  8507  0CEA  00CF               	movwf	rtc6_SetTime@t+3
  8508  0CEB  0021               	movlb	1	; select bank1
  8509  0CEC  0840               	movf	(main@setTime+2)^(0+128),w	;volatile
  8510  0CED  0020               	movlb	0	; select bank0
  8511  0CEE  00CE               	movwf	rtc6_SetTime@t+2
  8512  0CEF  0021               	movlb	1	; select bank1
  8513  0CF0  083F               	movf	(main@setTime+1)^(0+128),w	;volatile
  8514  0CF1  0020               	movlb	0	; select bank0
  8515  0CF2  00CD               	movwf	rtc6_SetTime@t+1
  8516  0CF3  0021               	movlb	1	; select bank1
  8517  0CF4  083E               	movf	main@setTime^(0+128),w	;volatile
  8518  0CF5  0020               	movlb	0	; select bank0
  8519  0CF6  00CC               	movwf	rtc6_SetTime@t
  8520  0CF7  318B  230C  318C   	fcall	_rtc6_SetTime
  8521                           
  8522                           ;main.c: 44: _delay((unsigned long)((20)*(1000000/4000.0)));
  8523  0CFA  3007               	movlw	7
  8524  0CFB  0020               	movlb	0	; select bank0
  8525  0CFC  00E6               	movwf	??_main
  8526  0CFD  307D               	movlw	125
  8527  0CFE                     u5537:	
  8528  0CFE  0B89               	decfsz	9,f
  8529  0CFF  2CFE               	goto	u5537
  8530  0D00  0BE6               	decfsz	??_main,f
  8531  0D01  2CFE               	goto	u5537
  8532  0D02                     l7232:	
  8533                           ;main.c: 45: char timeStr[];
  8534                           ;main.c: 46: while (1) {
  8535                           
  8536                           
  8537                           ;main.c: 48: getTime = rtc6_GetTime();
  8538  0D02  318C  240E  318C   	fcall	_rtc6_GetTime
  8539  0D05  0020               	movlb	0	; select bank0
  8540  0D06  0862               	movf	?_rtc6_GetTime+3,w
  8541  0D07  0021               	movlb	1	; select bank1
  8542  0D08  00C6               	movwf	(main@getTime+3)^(0+128)	;volatile
  8543  0D09  0020               	movlb	0	; select bank0
  8544  0D0A  0861               	movf	?_rtc6_GetTime+2,w
  8545  0D0B  0021               	movlb	1	; select bank1
  8546  0D0C  00C5               	movwf	(main@getTime+2)^(0+128)	;volatile
  8547  0D0D  0020               	movlb	0	; select bank0
  8548  0D0E  0860               	movf	?_rtc6_GetTime+1,w
  8549  0D0F  0021               	movlb	1	; select bank1
  8550  0D10  00C4               	movwf	(main@getTime+1)^(0+128)	;volatile
  8551  0D11  0020               	movlb	0	; select bank0
  8552  0D12  085F               	movf	?_rtc6_GetTime,w
  8553  0D13  0021               	movlb	1	; select bank1
  8554  0D14  00C3               	movwf	main@getTime^(0+128)	;volatile
  8555                           
  8556                           ;main.c: 49: tm_t = localtime(&getTime);
  8557  0D15  30C3               	movlw	(low (main@getTime| 0))& (0+255)
  8558  0D16  3195  25A7  318C   	fcall	_localtime
  8559  0D19  0020               	movlb	0	; select bank0
  8560  0D1A  00E6               	movwf	??_main
  8561  0D1B  0866               	movf	??_main,w
  8562  0D1C  0021               	movlb	1	; select bank1
  8563  0D1D  00C2               	movwf	main@tm_t^(0+128)
  8564                           
  8565                           ;main.c: 50: sprintf(timeStr, "%04d-%02d-%02d %02d:%02d:%02d\n", tm_t->tm_year+1900, tm_
      +                          t->tm_mon+1, tm_t->tm_mday, tm_t->tm_hour, tm_t->tm_min, tm_t->tm_sec);
  8566  0D1E  30B2               	movlw	low main@timeStr
  8567  0D1F  0020               	movlb	0	; select bank0
  8568  0D20  00B4               	movwf	sprintf@sp
  8569  0D21  3000               	movlw	high main@timeStr
  8570  0D22  00B5               	movwf	sprintf@sp+1
  8571  0D23  3020               	movlw	low (STR_1| (0+32768))
  8572  0D24  00B6               	movwf	sprintf@f
  8573  0D25  3098               	movlw	high (STR_1| (0+32768))
  8574  0D26  00B7               	movwf	sprintf@f+1
  8575  0D27  0021               	movlb	1	; select bank1
  8576  0D28  0842               	movf	main@tm_t^(0+128),w
  8577  0D29  3E0A               	addlw	10
  8578  0D2A  0086               	movwf	6
  8579  0D2B  3001               	movlw	1	; select bank2/3
  8580  0D2C  0087               	movwf	7
  8581  0D2D  3F40               	moviw [0]fsr1
  8582  0D2E  0020               	movlb	0	; select bank0
  8583  0D2F  00E6               	movwf	??_main
  8584  0D30  3F41               	moviw [1]fsr1
  8585  0D31  00E7               	movwf	??_main+1
  8586  0D32  0866               	movf	??_main,w
  8587  0D33  3E6C               	addlw	108
  8588  0D34  00B8               	movwf	?_sprintf+4
  8589  0D35  3007               	movlw	7
  8590  0D36  3D67               	addwfc	??_main+1,w
  8591  0D37  00B9               	movwf	?_sprintf+5
  8592  0D38  0021               	movlb	1	; select bank1
  8593  0D39  0842               	movf	main@tm_t^(0+128),w
  8594  0D3A  3E08               	addlw	8
  8595  0D3B  0086               	movwf	6
  8596  0D3C  3001               	movlw	1	; select bank2/3
  8597  0D3D  0087               	movwf	7
  8598  0D3E  3F40               	moviw [0]fsr1
  8599  0D3F  0020               	movlb	0	; select bank0
  8600  0D40  00E8               	movwf	??_main+2
  8601  0D41  3F41               	moviw [1]fsr1
  8602  0D42  00E9               	movwf	??_main+3
  8603  0D43  0868               	movf	??_main+2,w
  8604  0D44  3E01               	addlw	1
  8605  0D45  00BA               	movwf	?_sprintf+6
  8606  0D46  3000               	movlw	0
  8607  0D47  3D69               	addwfc	??_main+3,w
  8608  0D48  00BB               	movwf	?_sprintf+7
  8609  0D49  0021               	movlb	1	; select bank1
  8610  0D4A  0842               	movf	main@tm_t^(0+128),w
  8611  0D4B  3E06               	addlw	6
  8612  0D4C  0086               	movwf	6
  8613  0D4D  3001               	movlw	1	; select bank2/3
  8614  0D4E  0087               	movwf	7
  8615  0D4F  3F40               	moviw [0]fsr1
  8616  0D50  0020               	movlb	0	; select bank0
  8617  0D51  00BC               	movwf	?_sprintf+8
  8618  0D52  3F41               	moviw [1]fsr1
  8619  0D53  00BD               	movwf	?_sprintf+9
  8620  0D54  0021               	movlb	1	; select bank1
  8621  0D55  0842               	movf	main@tm_t^(0+128),w
  8622  0D56  3E04               	addlw	4
  8623  0D57  0086               	movwf	6
  8624  0D58  3001               	movlw	1	; select bank2/3
  8625  0D59  0087               	movwf	7
  8626  0D5A  3F40               	moviw [0]fsr1
  8627  0D5B  0020               	movlb	0	; select bank0
  8628  0D5C  00BE               	movwf	?_sprintf+10
  8629  0D5D  3F41               	moviw [1]fsr1
  8630  0D5E  00BF               	movwf	?_sprintf+11
  8631  0D5F  0021               	movlb	1	; select bank1
  8632  0D60  0842               	movf	main@tm_t^(0+128),w
  8633  0D61  3E02               	addlw	2
  8634  0D62  0086               	movwf	6
  8635  0D63  3001               	movlw	1	; select bank2/3
  8636  0D64  0087               	movwf	7
  8637  0D65  3F40               	moviw [0]fsr1
  8638  0D66  0020               	movlb	0	; select bank0
  8639  0D67  00C0               	movwf	?_sprintf+12
  8640  0D68  3F41               	moviw [1]fsr1
  8641  0D69  00C1               	movwf	?_sprintf+13
  8642  0D6A  0021               	movlb	1	; select bank1
  8643  0D6B  0842               	movf	main@tm_t^(0+128),w
  8644  0D6C  0086               	movwf	6
  8645  0D6D  3001               	movlw	1	; select bank2/3
  8646  0D6E  0087               	movwf	7
  8647  0D6F  3F40               	moviw [0]fsr1
  8648  0D70  0020               	movlb	0	; select bank0
  8649  0D71  00C2               	movwf	?_sprintf+14
  8650  0D72  3F41               	moviw [1]fsr1
  8651  0D73  00C3               	movwf	?_sprintf+15
  8652  0D74  3186  2624  318C   	fcall	_sprintf
  8653                           
  8654                           ;main.c: 51: Write_String(timeStr);
  8655  0D77  30B2               	movlw	low main@timeStr
  8656  0D78  0020               	movlb	0	; select bank0
  8657  0D79  00D3               	movwf	Write_String@message
  8658  0D7A  3000               	movlw	high main@timeStr
  8659  0D7B  00D4               	movwf	Write_String@message+1
  8660  0D7C  3193  23BD  318C   	fcall	_Write_String
  8661                           
  8662                           ;main.c: 52: _delay((unsigned long)((1000)*(1000000/4000.0)));
  8663  0D7F  3002               	movlw	2
  8664  0D80  0020               	movlb	0	; select bank0
  8665  0D81  00E7               	movwf	??_main+1
  8666  0D82  3045               	movlw	69
  8667  0D83  00E6               	movwf	??_main
  8668  0D84  30A9               	movlw	169
  8669  0D85                     u5547:	
  8670  0D85  0B89               	decfsz	9,f
  8671  0D86  2D85               	goto	u5547
  8672  0D87  0BE6               	decfsz	??_main,f
  8673  0D88  2D85               	goto	u5547
  8674  0D89  0BE7               	decfsz	??_main+1,f
  8675  0D8A  2D85               	goto	u5547
  8676  0D8B  3200               	nop2
  8677  0D8C  2D02               	goto	l7232
  8678  0D8D                     __end_of_main:	
  8679                           
  8680                           	psect	text1
  8681  0B0C                     __ptext1:	
  8682 ;; *************** function _rtc6_SetTime *****************
  8683 ;; Defined at:
  8684 ;;		line 145 in file "mcc_generated_files/RTC6.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  t               4   44[BANK0 ] long 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;  tm_t            1   51[BANK0 ] PTR struct tm
  8689 ;;		 -> gmtime@tim(18), 
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8699 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;Total ram usage:        8 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:   17
  8706 ;; This function calls:
  8707 ;;		___awmod
  8708 ;;		_localtime
  8709 ;;		_memset
  8710 ;;		_rtc6_SetComponent
  8711 ;; This function is called by:
  8712 ;;		_main
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           
  8717                           ;psect for function _rtc6_SetTime
  8718  0B0C                     _rtc6_SetTime:	
  8719                           
  8720                           ;RTC6.c: 147: struct tm *tm_t;
  8721                           ;RTC6.c: 148: memset(tm_t, 0, sizeof (tm_t));
  8722                           
  8723                           ;incstack = 0
  8724 ;; hardware stack exceeded
  8725                           ; Regs used in _rtc6_SetTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8726  0B0C  0020               	movlb	0	; select bank0
  8727  0B0D  0853               	movf	rtc6_SetTime@tm_t,w
  8728  0B0E  00A0               	movwf	memset@p1
  8729  0B0F  3001               	movlw	1
  8730  0B10  00A1               	movwf	memset@p1+1
  8731  0B11  3000               	movlw	0
  8732  0B12  00A2               	movwf	memset@c
  8733  0B13  00A3               	movwf	memset@c+1
  8734  0B14  3001               	movlw	1
  8735  0B15  00A4               	movwf	memset@n
  8736  0B16  3000               	movlw	0
  8737  0B17  00A5               	movwf	memset@n+1
  8738  0B18  3191  2161  318B   	fcall	_memset
  8739                           
  8740                           ;RTC6.c: 150: tm_t = localtime(&t);
  8741  0B1B  304C               	movlw	(low (rtc6_SetTime@t| 0))& (0+255)
  8742  0B1C  3195  25A7  318B   	fcall	_localtime
  8743  0B1F  0020               	movlb	0	; select bank0
  8744  0B20  00D0               	movwf	??_rtc6_SetTime
  8745  0B21  0850               	movf	??_rtc6_SetTime,w
  8746  0B22  00D3               	movwf	rtc6_SetTime@tm_t
  8747                           
  8748                           ;RTC6.c: 151: rtc6_SetComponent(0x06, 0x00, tm_t->tm_year % 100);
  8749  0B23  3064               	movlw	100
  8750  0B24  00A0               	movwf	___awmod@divisor
  8751  0B25  3000               	movlw	0
  8752  0B26  00A1               	movwf	___awmod@divisor+1
  8753  0B27  0853               	movf	rtc6_SetTime@tm_t,w
  8754  0B28  3E0A               	addlw	10
  8755  0B29  0086               	movwf	6
  8756  0B2A  3001               	movlw	1	; select bank2/3
  8757  0B2B  0087               	movwf	7
  8758  0B2C  3F40               	moviw [0]fsr1
  8759  0B2D  00A2               	movwf	___awmod@dividend
  8760  0B2E  3F41               	moviw [1]fsr1
  8761  0B2F  00A3               	movwf	___awmod@dividend+1
  8762  0B30  3196  2632  318B   	fcall	___awmod
  8763  0B33  0020               	movlb	0	; select bank0
  8764  0B34  0820               	movf	?___awmod,w
  8765  0B35  00D0               	movwf	??_rtc6_SetTime
  8766  0B36  0850               	movf	??_rtc6_SetTime,w
  8767  0B37  00D2               	movwf	_rtc6_SetTime$2612
  8768                           
  8769                           ;RTC6.c: 151: rtc6_SetComponent(0x06, 0x00, tm_t->tm_year % 100);
  8770  0B38  01B3               	clrf	rtc6_SetComponent@mask
  8771  0B39  0852               	movf	_rtc6_SetTime$2612,w
  8772  0B3A  00D0               	movwf	??_rtc6_SetTime
  8773  0B3B  0850               	movf	??_rtc6_SetTime,w
  8774  0B3C  00B4               	movwf	rtc6_SetComponent@time
  8775  0B3D  3006               	movlw	6
  8776  0B3E  3188  2001  318B   	fcall	_rtc6_SetComponent
  8777                           
  8778                           ;RTC6.c: 152: rtc6_SetComponent(0x05, 0xD0, tm_t->tm_mon + 1);
  8779  0B41  30D0               	movlw	208
  8780  0B42  0020               	movlb	0	; select bank0
  8781  0B43  00D0               	movwf	??_rtc6_SetTime
  8782  0B44  0850               	movf	??_rtc6_SetTime,w
  8783  0B45  00B3               	movwf	rtc6_SetComponent@mask
  8784  0B46  0853               	movf	rtc6_SetTime@tm_t,w
  8785  0B47  3E08               	addlw	8
  8786  0B48  0086               	movwf	6
  8787  0B49  3001               	movlw	1	; select bank2/3
  8788  0B4A  0087               	movwf	7
  8789  0B4B  0801               	movf	1,w
  8790  0B4C  3E01               	addlw	1
  8791  0B4D  00D1               	movwf	??_rtc6_SetTime+1
  8792  0B4E  0851               	movf	??_rtc6_SetTime+1,w
  8793  0B4F  00B4               	movwf	rtc6_SetComponent@time
  8794  0B50  3005               	movlw	5
  8795  0B51  3188  2001  318B   	fcall	_rtc6_SetComponent
  8796                           
  8797                           ;RTC6.c: 153: rtc6_SetComponent(0x04, 0x00, tm_t->tm_mday);
  8798  0B54  0020               	movlb	0	; select bank0
  8799  0B55  01B3               	clrf	rtc6_SetComponent@mask
  8800  0B56  0853               	movf	rtc6_SetTime@tm_t,w
  8801  0B57  0086               	movwf	6
  8802  0B58  3001               	movlw	1	; select bank2/3
  8803  0B59  0087               	movwf	7
  8804  0B5A  3001               	movlw	1	; select bank2/3
  8805  0B5B  3F46               	moviw [6]fsr1
  8806  0B5C  00B4               	movwf	rtc6_SetComponent@time
  8807  0B5D  3004               	movlw	4
  8808  0B5E  3188  2001  318B   	fcall	_rtc6_SetComponent
  8809                           
  8810                           ;RTC6.c: 154: rtc6_SetComponent(0x01, 0x00, tm_t->tm_min);
  8811  0B61  0020               	movlb	0	; select bank0
  8812  0B62  01B3               	clrf	rtc6_SetComponent@mask
  8813  0B63  0853               	movf	rtc6_SetTime@tm_t,w
  8814  0B64  0086               	movwf	6
  8815  0B65  3001               	movlw	1	; select bank2/3
  8816  0B66  0087               	movwf	7
  8817  0B67  3001               	movlw	1	; select bank2/3
  8818  0B68  3F42               	moviw [2]fsr1
  8819  0B69  00B4               	movwf	rtc6_SetComponent@time
  8820  0B6A  3001               	movlw	1
  8821  0B6B  3188  2001  318B   	fcall	_rtc6_SetComponent
  8822                           
  8823                           ;RTC6.c: 155: rtc6_SetComponent(0x00, 0x80, tm_t->tm_sec);
  8824  0B6E  3080               	movlw	128
  8825  0B6F  0020               	movlb	0	; select bank0
  8826  0B70  00D0               	movwf	??_rtc6_SetTime
  8827  0B71  0850               	movf	??_rtc6_SetTime,w
  8828  0B72  00B3               	movwf	rtc6_SetComponent@mask
  8829  0B73  0853               	movf	rtc6_SetTime@tm_t,w
  8830  0B74  0086               	movwf	6
  8831  0B75  3001               	movlw	1	; select bank2/3
  8832  0B76  0087               	movwf	7
  8833  0B77  0801               	movf	1,w
  8834  0B78  00D1               	movwf	??_rtc6_SetTime+1
  8835  0B79  0851               	movf	??_rtc6_SetTime+1,w
  8836  0B7A  00B4               	movwf	rtc6_SetComponent@time
  8837  0B7B  3000               	movlw	0
  8838  0B7C  3188  2001  318B   	fcall	_rtc6_SetComponent
  8839                           
  8840                           ;RTC6.c: 156: rtc6_SetComponent(0x02, 0x00, tm_t->tm_hour);
  8841  0B7F  0020               	movlb	0	; select bank0
  8842  0B80  01B3               	clrf	rtc6_SetComponent@mask
  8843  0B81  0853               	movf	rtc6_SetTime@tm_t,w
  8844  0B82  0086               	movwf	6
  8845  0B83  3001               	movlw	1	; select bank2/3
  8846  0B84  0087               	movwf	7
  8847  0B85  3001               	movlw	1	; select bank2/3
  8848  0B86  3F44               	moviw [4]fsr1
  8849  0B87  00B4               	movwf	rtc6_SetComponent@time
  8850  0B88  3002               	movlw	2
  8851  0B89  3188  2001         	fcall	_rtc6_SetComponent
  8852  0B8B  0008               	return
  8853  0B8C                     __end_of_rtc6_SetTime:	
  8854                           
  8855                           	psect	text2
  8856  0801                     __ptext2:	
  8857 ;; *************** function _rtc6_SetComponent *****************
  8858 ;; Defined at:
  8859 ;;		line 140 in file "mcc_generated_files/RTC6.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  location        1    wreg     unsigned char 
  8862 ;;  mask            1   19[BANK0 ] unsigned char 
  8863 ;;  time            1   20[BANK0 ] unsigned char 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;  location        1   28[BANK0 ] unsigned char 
  8866 ;;  inMemory        1   27[BANK0 ] unsigned char 
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  1    wreg      void 
  8869 ;; Registers used:
  8870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8880 ;;Total ram usage:       10 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; Hardware stack levels required when called:   16
  8883 ;; This function calls:
  8884 ;;		___awdiv
  8885 ;;		___awmod
  8886 ;;		_rtcc_read
  8887 ;;		_rtcc_write
  8888 ;; This function is called by:
  8889 ;;		_rtc6_SetTime
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           
  8894                           ;psect for function _rtc6_SetComponent
  8895  0801                     _rtc6_SetComponent:	
  8896                           
  8897                           ;incstack = 0
  8898 ;; hardware stack exceeded
  8899                           ; Regs used in _rtc6_SetComponent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8900                           ;rtc6_SetComponent@location stored from wreg
  8901  0801  0020               	movlb	0	; select bank0
  8902  0802  00BC               	movwf	rtc6_SetComponent@location
  8903                           
  8904                           ;RTC6.c: 141: uint8_t inMemory = rtcc_read(location) & mask;
  8905  0803  083C               	movf	rtc6_SetComponent@location,w
  8906  0804  319F  279B  3188   	fcall	_rtcc_read
  8907  0807  0020               	movlb	0	; select bank0
  8908  0808  0533               	andwf	rtc6_SetComponent@mask,w
  8909  0809  00B5               	movwf	??_rtc6_SetComponent
  8910  080A  0835               	movf	??_rtc6_SetComponent,w
  8911  080B  00BB               	movwf	rtc6_SetComponent@inMemory
  8912                           
  8913                           ;RTC6.c: 142: rtcc_write(location, inMemory | (time % 10) | ((time / 10) << 4));
  8914  080C  300A               	movlw	10
  8915  080D  00A0               	movwf	___awdiv@divisor
  8916  080E  3000               	movlw	0
  8917  080F  00A1               	movwf	___awdiv@divisor+1
  8918  0810  0834               	movf	rtc6_SetComponent@time,w
  8919  0811  00B5               	movwf	??_rtc6_SetComponent
  8920  0812  01B6               	clrf	??_rtc6_SetComponent+1
  8921  0813  0835               	movf	??_rtc6_SetComponent,w
  8922  0814  00A2               	movwf	___awdiv@dividend
  8923  0815  0836               	movf	??_rtc6_SetComponent+1,w
  8924  0816  00A3               	movwf	___awdiv@dividend+1
  8925  0817  3197  27AE  3188   	fcall	___awdiv
  8926  081A  0020               	movlb	0	; select bank0
  8927  081B  0820               	movf	?___awdiv,w
  8928  081C  00B7               	movwf	??_rtc6_SetComponent+2
  8929  081D  3004               	movlw	4
  8930  081E                     u5215:	
  8931  081E  35B7               	lslf	??_rtc6_SetComponent+2,f
  8932  081F  0B89               	decfsz	9,f
  8933  0820  281E               	goto	u5215
  8934  0821  300A               	movlw	10
  8935  0822  00A0               	movwf	___awmod@divisor
  8936  0823  3000               	movlw	0
  8937  0824  00A1               	movwf	___awmod@divisor+1
  8938  0825  0834               	movf	rtc6_SetComponent@time,w
  8939  0826  00B8               	movwf	??_rtc6_SetComponent+3
  8940  0827  01B9               	clrf	??_rtc6_SetComponent+4
  8941  0828  0838               	movf	??_rtc6_SetComponent+3,w
  8942  0829  00A2               	movwf	___awmod@dividend
  8943  082A  0839               	movf	??_rtc6_SetComponent+4,w
  8944  082B  00A3               	movwf	___awmod@dividend+1
  8945  082C  3196  2632  3188   	fcall	___awmod
  8946  082F  0020               	movlb	0	; select bank0
  8947  0830  0820               	movf	?___awmod,w
  8948  0831  0437               	iorwf	??_rtc6_SetComponent+2,w
  8949  0832  043B               	iorwf	rtc6_SetComponent@inMemory,w
  8950  0833  00BA               	movwf	??_rtc6_SetComponent+5
  8951  0834  083A               	movf	??_rtc6_SetComponent+5,w
  8952  0835  00AE               	movwf	rtcc_write@data
  8953  0836  083C               	movf	rtc6_SetComponent@location,w
  8954  0837  3190  20B3         	fcall	_rtcc_write
  8955  0839  0008               	return
  8956  083A                     __end_of_rtc6_SetComponent:	
  8957                           
  8958                           	psect	text3
  8959  17AE                     __ptext3:	
  8960 ;; *************** function ___awdiv *****************
  8961 ;; Defined at:
  8962 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;  divisor         2    0[BANK0 ] int 
  8965 ;;  dividend        2    2[BANK0 ] int 
  8966 ;; Auto vars:     Size  Location     Type
  8967 ;;  quotient        2    7[BANK0 ] int 
  8968 ;;  sign            1    6[BANK0 ] unsigned char 
  8969 ;;  counter         1    5[BANK0 ] unsigned char 
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  2    0[BANK0 ] int 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2, status,0
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8979 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8980 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8982 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8983 ;;Total ram usage:        9 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; Hardware stack levels required when called:    6
  8986 ;; This function calls:
  8987 ;;		Nothing
  8988 ;; This function is called by:
  8989 ;;		_rtc6_SetComponent
  8990 ;;		_asctime
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           
  8995                           ;psect for function ___awdiv
  8996  17AE                     ___awdiv:	
  8997                           
  8998                           ;incstack = 0
  8999                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9000  17AE  0020               	movlb	0	; select bank0
  9001  17AF  01A6               	clrf	___awdiv@sign
  9002  17B0  1FA1               	btfss	___awdiv@divisor+1,7
  9003  17B1  2FB9               	goto	l4062
  9004  17B2  09A0               	comf	___awdiv@divisor,f
  9005  17B3  09A1               	comf	___awdiv@divisor+1,f
  9006  17B4  0AA0               	incf	___awdiv@divisor,f
  9007  17B5  1903               	skipnz
  9008  17B6  0AA1               	incf	___awdiv@divisor+1,f
  9009  17B7  01A6               	clrf	___awdiv@sign
  9010  17B8  0AA6               	incf	___awdiv@sign,f
  9011  17B9                     l4062:	
  9012  17B9  1FA3               	btfss	___awdiv@dividend+1,7
  9013  17BA  2FC4               	goto	l4068
  9014  17BB  09A2               	comf	___awdiv@dividend,f
  9015  17BC  09A3               	comf	___awdiv@dividend+1,f
  9016  17BD  0AA2               	incf	___awdiv@dividend,f
  9017  17BE  1903               	skipnz
  9018  17BF  0AA3               	incf	___awdiv@dividend+1,f
  9019  17C0  3001               	movlw	1
  9020  17C1  00A4               	movwf	??___awdiv
  9021  17C2  0824               	movf	??___awdiv,w
  9022  17C3  06A6               	xorwf	___awdiv@sign,f
  9023  17C4                     l4068:	
  9024  17C4  01A7               	clrf	___awdiv@quotient
  9025  17C5  01A8               	clrf	___awdiv@quotient+1
  9026  17C6  0820               	movf	___awdiv@divisor,w
  9027  17C7  0421               	iorwf	___awdiv@divisor+1,w
  9028  17C8  1903               	btfsc	3,2
  9029  17C9  2FF3               	goto	l4090
  9030  17CA  01A5               	clrf	___awdiv@counter
  9031  17CB  0AA5               	incf	___awdiv@counter,f
  9032  17CC                     l4078:	
  9033  17CC  1BA1               	btfsc	___awdiv@divisor+1,7
  9034  17CD  2FD8               	goto	l4080
  9035  17CE  3001               	movlw	1
  9036  17CF                     u2685:	
  9037  17CF  35A0               	lslf	___awdiv@divisor,f
  9038  17D0  0DA1               	rlf	___awdiv@divisor+1,f
  9039  17D1  0B89               	decfsz	9,f
  9040  17D2  2FCF               	goto	u2685
  9041  17D3  3001               	movlw	1
  9042  17D4  00A4               	movwf	??___awdiv
  9043  17D5  0824               	movf	??___awdiv,w
  9044  17D6  07A5               	addwf	___awdiv@counter,f
  9045  17D7  2FCC               	goto	l4078
  9046  17D8                     l4080:	
  9047  17D8  3001               	movlw	1
  9048  17D9                     u2705:	
  9049  17D9  35A7               	lslf	___awdiv@quotient,f
  9050  17DA  0DA8               	rlf	___awdiv@quotient+1,f
  9051  17DB  0B89               	decfsz	9,f
  9052  17DC  2FD9               	goto	u2705
  9053  17DD  0821               	movf	___awdiv@divisor+1,w
  9054  17DE  0223               	subwf	___awdiv@dividend+1,w
  9055  17DF  1D03               	skipz
  9056  17E0  2FE3               	goto	u2715
  9057  17E1  0820               	movf	___awdiv@divisor,w
  9058  17E2  0222               	subwf	___awdiv@dividend,w
  9059  17E3                     u2715:	
  9060  17E3  1C03               	skipc
  9061  17E4  2FEA               	goto	l4086
  9062  17E5  0820               	movf	___awdiv@divisor,w
  9063  17E6  02A2               	subwf	___awdiv@dividend,f
  9064  17E7  0821               	movf	___awdiv@divisor+1,w
  9065  17E8  3BA3               	subwfb	___awdiv@dividend+1,f
  9066  17E9  1427               	bsf	___awdiv@quotient,0
  9067  17EA                     l4086:	
  9068  17EA  3001               	movlw	1
  9069  17EB                     u2725:	
  9070  17EB  36A1               	lsrf	___awdiv@divisor+1,f
  9071  17EC  0CA0               	rrf	___awdiv@divisor,f
  9072  17ED  0B89               	decfsz	9,f
  9073  17EE  2FEB               	goto	u2725
  9074  17EF  3001               	movlw	1
  9075  17F0  02A5               	subwf	___awdiv@counter,f
  9076  17F1  1D03               	btfss	3,2
  9077  17F2  2FD8               	goto	l4080
  9078  17F3                     l4090:	
  9079  17F3  0826               	movf	___awdiv@sign,w
  9080  17F4  1903               	btfsc	3,2
  9081  17F5  2FFB               	goto	l4094
  9082  17F6  09A7               	comf	___awdiv@quotient,f
  9083  17F7  09A8               	comf	___awdiv@quotient+1,f
  9084  17F8  0AA7               	incf	___awdiv@quotient,f
  9085  17F9  1903               	skipnz
  9086  17FA  0AA8               	incf	___awdiv@quotient+1,f
  9087  17FB                     l4094:	
  9088  17FB  0828               	movf	___awdiv@quotient+1,w
  9089  17FC  00A1               	movwf	?___awdiv+1
  9090  17FD  0827               	movf	___awdiv@quotient,w
  9091  17FE  00A0               	movwf	?___awdiv
  9092  17FF  0008               	return
  9093  1800                     __end_of___awdiv:	
  9094                           
  9095                           	psect	text4
  9096  15A7                     __ptext4:	
  9097 ;; *************** function _localtime *****************
  9098 ;; Defined at:
  9099 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  tp              1    wreg     PTR const long 
  9102 ;;		 -> main@getTime(4), rtc6_SetTime@t(4), 
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;  tp              1   43[BANK0 ] PTR const long 
  9105 ;;		 -> main@getTime(4), rtc6_SetTime@t(4), 
  9106 ;;  t               4   39[BANK0 ] long 
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  1    wreg      PTR struct tm
  9109 ;; Registers used:
  9110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;Total ram usage:       13 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; Hardware stack levels required when called:    9
  9123 ;; This function calls:
  9124 ;;		___lmul
  9125 ;;		_gmtime
  9126 ;; This function is called by:
  9127 ;;		_rtc6_SetTime
  9128 ;;		_main
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           
  9133                           ;psect for function _localtime
  9134  15A7                     _localtime:	
  9135                           
  9136                           ;incstack = 0
  9137                           ; Regs used in _localtime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9138                           ;localtime@tp stored from wreg
  9139  15A7  0020               	movlb	0	; select bank0
  9140  15A8  00CB               	movwf	localtime@tp
  9141  15A9  084B               	movf	localtime@tp,w
  9142  15AA  0086               	movwf	6
  9143  15AB  0187               	clrf	7
  9144  15AC  3F40               	moviw [0]fsr1
  9145  15AD  00BF               	movwf	??_localtime
  9146  15AE  3F41               	moviw [1]fsr1
  9147  15AF  00C0               	movwf	??_localtime+1
  9148  15B0  3F42               	moviw [2]fsr1
  9149  15B1  00C1               	movwf	??_localtime+2
  9150  15B2  3F43               	moviw [3]fsr1
  9151  15B3  00C2               	movwf	??_localtime+3
  9152  15B4  086E               	movf	_time_zone,w
  9153  15B5  00A0               	movwf	___lmul@multiplier
  9154  15B6  086F               	movf	_time_zone+1,w
  9155  15B7  00A1               	movwf	___lmul@multiplier+1
  9156  15B8  0D89               	rlf	9,f
  9157  15B9  3B89               	subwfb	9,f
  9158  15BA  0989               	comf	9,f
  9159  15BB  00A2               	movwf	___lmul@multiplier+2
  9160  15BC  00A3               	movwf	___lmul@multiplier+3
  9161  15BD  3000               	movlw	0
  9162  15BE  00A7               	movwf	___lmul@multiplicand+3
  9163  15BF  3000               	movlw	0
  9164  15C0  00A6               	movwf	___lmul@multiplicand+2
  9165  15C1  3000               	movlw	0
  9166  15C2  00A5               	movwf	___lmul@multiplicand+1
  9167  15C3  303C               	movlw	60
  9168  15C4  00A4               	movwf	___lmul@multiplicand
  9169  15C5  3193  23EC  3195   	fcall	___lmul
  9170  15C8  0020               	movlb	0	; select bank0
  9171  15C9  0920               	comf	?___lmul,w
  9172  15CA  00C3               	movwf	??_localtime+4
  9173  15CB  0921               	comf	?___lmul+1,w
  9174  15CC  00C4               	movwf	??_localtime+5
  9175  15CD  0922               	comf	?___lmul+2,w
  9176  15CE  00C5               	movwf	??_localtime+6
  9177  15CF  0923               	comf	?___lmul+3,w
  9178  15D0  00C6               	movwf	??_localtime+7
  9179  15D1  0AC3               	incf	??_localtime+4,f
  9180  15D2  1903               	skipnz
  9181  15D3  0AC4               	incf	??_localtime+5,f
  9182  15D4  1903               	skipnz
  9183  15D5  0AC5               	incf	??_localtime+6,f
  9184  15D6  1903               	skipnz
  9185  15D7  0AC6               	incf	??_localtime+7,f
  9186  15D8  0843               	movf	??_localtime+4,w
  9187  15D9  07BF               	addwf	??_localtime,f
  9188  15DA  0844               	movf	??_localtime+5,w
  9189  15DB  3DC0               	addwfc	??_localtime+1,f
  9190  15DC  0845               	movf	??_localtime+6,w
  9191  15DD  3DC1               	addwfc	??_localtime+2,f
  9192  15DE  0846               	movf	??_localtime+7,w
  9193  15DF  3DC2               	addwfc	??_localtime+3,f
  9194  15E0  0842               	movf	??_localtime+3,w
  9195  15E1  00CA               	movwf	localtime@t+3
  9196  15E2  0841               	movf	??_localtime+2,w
  9197  15E3  00C9               	movwf	localtime@t+2
  9198  15E4  0840               	movf	??_localtime+1,w
  9199  15E5  00C8               	movwf	localtime@t+1
  9200  15E6  083F               	movf	??_localtime,w
  9201  15E7  00C7               	movwf	localtime@t
  9202  15E8  3047               	movlw	(low (localtime@t| 0))& (0+255)
  9203  15E9  318E  26AE         	fcall	_gmtime
  9204  15EB  0008               	return
  9205  15EC                     __end_of_localtime:	
  9206                           
  9207                           	psect	text5
  9208  0EAE                     __ptext5:	
  9209 ;; *************** function _gmtime *****************
  9210 ;; Defined at:
  9211 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  tp              1    wreg     PTR const long 
  9214 ;;		 -> localtime@t(4), 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  tp              1   26[BANK0 ] PTR const long 
  9217 ;;		 -> localtime@t(4), 
  9218 ;;  tc              4   27[BANK0 ] struct .
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  1    wreg      PTR struct tm
  9221 ;; Registers used:
  9222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;Total ram usage:        7 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; Hardware stack levels required when called:    8
  9235 ;; This function calls:
  9236 ;;		___aldiv
  9237 ;;		___almod
  9238 ;;		___awmod
  9239 ;;		_dylen
  9240 ;; This function is called by:
  9241 ;;		_localtime
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           
  9246                           ;psect for function _gmtime
  9247  0EAE                     _gmtime:	
  9248                           
  9249                           ;incstack = 0
  9250                           ; Regs used in _gmtime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9251                           ;gmtime@tp stored from wreg
  9252  0EAE  0020               	movlb	0	; select bank0
  9253  0EAF  00BA               	movwf	gmtime@tp
  9254  0EB0  083A               	movf	gmtime@tp,w
  9255  0EB1  0086               	movwf	6
  9256  0EB2  0187               	clrf	7
  9257  0EB3  3F40               	moviw [0]fsr1
  9258  0EB4  00BB               	movwf	gmtime@tc
  9259  0EB5  3F41               	moviw [1]fsr1
  9260  0EB6  00BC               	movwf	gmtime@tc+1
  9261  0EB7  3F42               	moviw [2]fsr1
  9262  0EB8  00BD               	movwf	gmtime@tc+2
  9263  0EB9  3F43               	moviw [3]fsr1
  9264  0EBA  00BE               	movwf	gmtime@tc+3
  9265  0EBB  3000               	movlw	0
  9266  0EBC  00A3               	movwf	___almod@divisor+3
  9267  0EBD  3000               	movlw	0
  9268  0EBE  00A2               	movwf	___almod@divisor+2
  9269  0EBF  3000               	movlw	0
  9270  0EC0  00A1               	movwf	___almod@divisor+1
  9271  0EC1  303C               	movlw	60
  9272  0EC2  00A0               	movwf	___almod@divisor
  9273  0EC3  083E               	movf	gmtime@tc+3,w
  9274  0EC4  00A7               	movwf	___almod@dividend+3
  9275  0EC5  083D               	movf	gmtime@tc+2,w
  9276  0EC6  00A6               	movwf	___almod@dividend+2
  9277  0EC7  083C               	movf	gmtime@tc+1,w
  9278  0EC8  00A5               	movwf	___almod@dividend+1
  9279  0EC9  083B               	movf	gmtime@tc,w
  9280  0ECA  00A4               	movwf	___almod@dividend
  9281  0ECB  3189  2143  318E   	fcall	___almod
  9282  0ECE  0020               	movlb	0	; select bank0
  9283  0ECF  0821               	movf	?___almod+1,w
  9284  0ED0  0022               	movlb	2	; select bank2
  9285  0ED1  00CA               	movwf	(gmtime@tim+1)^(0+256)
  9286  0ED2  0020               	movlb	0	; select bank0
  9287  0ED3  0820               	movf	?___almod,w
  9288  0ED4  0022               	movlb	2	; select bank2
  9289  0ED5  00C9               	movwf	gmtime@tim^(0+256)
  9290  0ED6  3000               	movlw	0
  9291  0ED7  0020               	movlb	0	; select bank0
  9292  0ED8  00A3               	movwf	___aldiv@divisor+3
  9293  0ED9  3000               	movlw	0
  9294  0EDA  00A2               	movwf	___aldiv@divisor+2
  9295  0EDB  3000               	movlw	0
  9296  0EDC  00A1               	movwf	___aldiv@divisor+1
  9297  0EDD  303C               	movlw	60
  9298  0EDE  00A0               	movwf	___aldiv@divisor
  9299  0EDF  083E               	movf	gmtime@tc+3,w
  9300  0EE0  00A7               	movwf	___aldiv@dividend+3
  9301  0EE1  083D               	movf	gmtime@tc+2,w
  9302  0EE2  00A6               	movwf	___aldiv@dividend+2
  9303  0EE3  083C               	movf	gmtime@tc+1,w
  9304  0EE4  00A5               	movwf	___aldiv@dividend+1
  9305  0EE5  083B               	movf	gmtime@tc,w
  9306  0EE6  00A4               	movwf	___aldiv@dividend
  9307  0EE7  318B  238C  318E   	fcall	___aldiv
  9308  0EEA  0020               	movlb	0	; select bank0
  9309  0EEB  0823               	movf	?___aldiv+3,w
  9310  0EEC  00BE               	movwf	gmtime@tc+3
  9311  0EED  0822               	movf	?___aldiv+2,w
  9312  0EEE  00BD               	movwf	gmtime@tc+2
  9313  0EEF  0821               	movf	?___aldiv+1,w
  9314  0EF0  00BC               	movwf	gmtime@tc+1
  9315  0EF1  0820               	movf	?___aldiv,w
  9316  0EF2  00BB               	movwf	gmtime@tc
  9317  0EF3  3000               	movlw	0
  9318  0EF4  00A3               	movwf	___almod@divisor+3
  9319  0EF5  3000               	movlw	0
  9320  0EF6  00A2               	movwf	___almod@divisor+2
  9321  0EF7  3000               	movlw	0
  9322  0EF8  00A1               	movwf	___almod@divisor+1
  9323  0EF9  303C               	movlw	60
  9324  0EFA  00A0               	movwf	___almod@divisor
  9325  0EFB  083E               	movf	gmtime@tc+3,w
  9326  0EFC  00A7               	movwf	___almod@dividend+3
  9327  0EFD  083D               	movf	gmtime@tc+2,w
  9328  0EFE  00A6               	movwf	___almod@dividend+2
  9329  0EFF  083C               	movf	gmtime@tc+1,w
  9330  0F00  00A5               	movwf	___almod@dividend+1
  9331  0F01  083B               	movf	gmtime@tc,w
  9332  0F02  00A4               	movwf	___almod@dividend
  9333  0F03  3189  2143  318E   	fcall	___almod
  9334  0F06  0020               	movlb	0	; select bank0
  9335  0F07  0821               	movf	?___almod+1,w
  9336  0F08  0022               	movlb	2	; select bank2
  9337  0F09  00CC               	movwf	((gmtime@tim+1)^(0+256)+2)
  9338  0F0A  0020               	movlb	0	; select bank0
  9339  0F0B  0820               	movf	?___almod,w
  9340  0F0C  0022               	movlb	2	; select bank2
  9341  0F0D  00CB               	movwf	(gmtime@tim^(0+256)+2)
  9342  0F0E  3000               	movlw	0
  9343  0F0F  0020               	movlb	0	; select bank0
  9344  0F10  00A3               	movwf	___aldiv@divisor+3
  9345  0F11  3000               	movlw	0
  9346  0F12  00A2               	movwf	___aldiv@divisor+2
  9347  0F13  3000               	movlw	0
  9348  0F14  00A1               	movwf	___aldiv@divisor+1
  9349  0F15  303C               	movlw	60
  9350  0F16  00A0               	movwf	___aldiv@divisor
  9351  0F17  083E               	movf	gmtime@tc+3,w
  9352  0F18  00A7               	movwf	___aldiv@dividend+3
  9353  0F19  083D               	movf	gmtime@tc+2,w
  9354  0F1A  00A6               	movwf	___aldiv@dividend+2
  9355  0F1B  083C               	movf	gmtime@tc+1,w
  9356  0F1C  00A5               	movwf	___aldiv@dividend+1
  9357  0F1D  083B               	movf	gmtime@tc,w
  9358  0F1E  00A4               	movwf	___aldiv@dividend
  9359  0F1F  318B  238C  318E   	fcall	___aldiv
  9360  0F22  0020               	movlb	0	; select bank0
  9361  0F23  0823               	movf	?___aldiv+3,w
  9362  0F24  00BE               	movwf	gmtime@tc+3
  9363  0F25  0822               	movf	?___aldiv+2,w
  9364  0F26  00BD               	movwf	gmtime@tc+2
  9365  0F27  0821               	movf	?___aldiv+1,w
  9366  0F28  00BC               	movwf	gmtime@tc+1
  9367  0F29  0820               	movf	?___aldiv,w
  9368  0F2A  00BB               	movwf	gmtime@tc
  9369  0F2B  3000               	movlw	0
  9370  0F2C  00A3               	movwf	___almod@divisor+3
  9371  0F2D  3000               	movlw	0
  9372  0F2E  00A2               	movwf	___almod@divisor+2
  9373  0F2F  3000               	movlw	0
  9374  0F30  00A1               	movwf	___almod@divisor+1
  9375  0F31  3018               	movlw	24
  9376  0F32  00A0               	movwf	___almod@divisor
  9377  0F33  083E               	movf	gmtime@tc+3,w
  9378  0F34  00A7               	movwf	___almod@dividend+3
  9379  0F35  083D               	movf	gmtime@tc+2,w
  9380  0F36  00A6               	movwf	___almod@dividend+2
  9381  0F37  083C               	movf	gmtime@tc+1,w
  9382  0F38  00A5               	movwf	___almod@dividend+1
  9383  0F39  083B               	movf	gmtime@tc,w
  9384  0F3A  00A4               	movwf	___almod@dividend
  9385  0F3B  3189  2143  318E   	fcall	___almod
  9386  0F3E  0020               	movlb	0	; select bank0
  9387  0F3F  0821               	movf	?___almod+1,w
  9388  0F40  0022               	movlb	2	; select bank2
  9389  0F41  00CE               	movwf	((gmtime@tim+1)^(0+256)+4)
  9390  0F42  0020               	movlb	0	; select bank0
  9391  0F43  0820               	movf	?___almod,w
  9392  0F44  0022               	movlb	2	; select bank2
  9393  0F45  00CD               	movwf	(gmtime@tim^(0+256)+4)
  9394  0F46  3000               	movlw	0
  9395  0F47  0020               	movlb	0	; select bank0
  9396  0F48  00A3               	movwf	___aldiv@divisor+3
  9397  0F49  3000               	movlw	0
  9398  0F4A  00A2               	movwf	___aldiv@divisor+2
  9399  0F4B  3000               	movlw	0
  9400  0F4C  00A1               	movwf	___aldiv@divisor+1
  9401  0F4D  3018               	movlw	24
  9402  0F4E  00A0               	movwf	___aldiv@divisor
  9403  0F4F  083E               	movf	gmtime@tc+3,w
  9404  0F50  00A7               	movwf	___aldiv@dividend+3
  9405  0F51  083D               	movf	gmtime@tc+2,w
  9406  0F52  00A6               	movwf	___aldiv@dividend+2
  9407  0F53  083C               	movf	gmtime@tc+1,w
  9408  0F54  00A5               	movwf	___aldiv@dividend+1
  9409  0F55  083B               	movf	gmtime@tc,w
  9410  0F56  00A4               	movwf	___aldiv@dividend
  9411  0F57  318B  238C  318E   	fcall	___aldiv
  9412  0F5A  0020               	movlb	0	; select bank0
  9413  0F5B  0821               	movf	?___aldiv+1,w
  9414  0F5C  0022               	movlb	2	; select bank2
  9415  0F5D  00D0               	movwf	((gmtime@tim+1)^(0+256)+6)
  9416  0F5E  0020               	movlb	0	; select bank0
  9417  0F5F  0820               	movf	?___aldiv,w
  9418  0F60  0022               	movlb	2	; select bank2
  9419  0F61  00CF               	movwf	(gmtime@tim^(0+256)+6)
  9420  0F62  3007               	movlw	7
  9421  0F63  0020               	movlb	0	; select bank0
  9422  0F64  00A0               	movwf	___awmod@divisor
  9423  0F65  3000               	movlw	0
  9424  0F66  00A1               	movwf	___awmod@divisor+1
  9425  0F67  0022               	movlb	2	; select bank2
  9426  0F68  084F               	movf	(gmtime@tim^(0+256)+6),w
  9427  0F69  3E04               	addlw	4
  9428  0F6A  0020               	movlb	0	; select bank0
  9429  0F6B  00A2               	movwf	___awmod@dividend
  9430  0F6C  3000               	movlw	0
  9431  0F6D  0022               	movlb	2	; select bank2
  9432  0F6E  3D50               	addwfc	((gmtime@tim+1)^(0+256)+6),w
  9433  0F6F  0020               	movlb	0	; select bank0
  9434  0F70  00A3               	movwf	___awmod@dividend+1
  9435  0F71  3196  2632  318E   	fcall	___awmod
  9436  0F74  0020               	movlb	0	; select bank0
  9437  0F75  0821               	movf	?___awmod+1,w
  9438  0F76  0022               	movlb	2	; select bank2
  9439  0F77  00D6               	movwf	((gmtime@tim+1)^(0+256)+12)
  9440  0F78  0020               	movlb	0	; select bank0
  9441  0F79  0820               	movf	?___awmod,w
  9442  0F7A  0022               	movlb	2	; select bank2
  9443  0F7B  00D5               	movwf	(gmtime@tim^(0+256)+12)
  9444  0F7C  3046               	movlw	70
  9445  0F7D  00D3               	movwf	(gmtime@tim^(0+256)+10)
  9446  0F7E  3000               	movlw	0
  9447  0F7F  00D4               	movwf	(gmtime@tim^(0+256)+11)
  9448  0F80                     l4120:	
  9449  0F80  0854               	movf	((gmtime@tim+1)^(0+256)+10),w
  9450  0F81  0020               	movlb	0	; select bank0
  9451  0F82  00B5               	movwf	dylen@yr+1
  9452  0F83  0022               	movlb	2	; select bank2
  9453  0F84  0853               	movf	(gmtime@tim^(0+256)+10),w
  9454  0F85  0020               	movlb	0	; select bank0
  9455  0F86  00B4               	movwf	dylen@yr
  9456  0F87  3194  24B7  318E   	fcall	_dylen
  9457  0F8A  0022               	movlb	2	; select bank2
  9458  0F8B  0850               	movf	((gmtime@tim+1)^(0+256)+6),w
  9459  0F8C  3A80               	xorlw	128
  9460  0F8D  0020               	movlb	0	; select bank0
  9461  0F8E  00B8               	movwf	??_gmtime
  9462  0F8F  0835               	movf	?_dylen+1,w
  9463  0F90  3A80               	xorlw	128
  9464  0F91  0238               	subwf	??_gmtime,w
  9465  0F92  1D03               	skipz
  9466  0F93  2F97               	goto	u2755
  9467  0F94  0834               	movf	?_dylen,w
  9468  0F95  0022               	movlb	2	; select bank2
  9469  0F96  024F               	subwf	(gmtime@tim^(0+256)+6),w
  9470  0F97                     u2755:	
  9471  0F97  1C03               	btfss	3,0
  9472  0F98  2FB1               	goto	l4122
  9473  0F99  0022               	movlb	2	; select bank2
  9474  0F9A  0854               	movf	((gmtime@tim+1)^(0+256)+10),w
  9475  0F9B  0020               	movlb	0	; select bank0
  9476  0F9C  00B5               	movwf	dylen@yr+1
  9477  0F9D  0022               	movlb	2	; select bank2
  9478  0F9E  0853               	movf	(gmtime@tim^(0+256)+10),w
  9479  0F9F  0020               	movlb	0	; select bank0
  9480  0FA0  00B4               	movwf	dylen@yr
  9481  0FA1  3194  24B7  318E   	fcall	_dylen
  9482  0FA4  0020               	movlb	0	; select bank0
  9483  0FA5  0834               	movf	?_dylen,w
  9484  0FA6  0022               	movlb	2	; select bank2
  9485  0FA7  02CF               	subwf	(gmtime@tim^(0+256)+6),f
  9486  0FA8  0020               	movlb	0	; select bank0
  9487  0FA9  0835               	movf	?_dylen+1,w
  9488  0FAA  0022               	movlb	2	; select bank2
  9489  0FAB  3BD0               	subwfb	((gmtime@tim+1)^(0+256)+6),f
  9490  0FAC  3001               	movlw	1
  9491  0FAD  07D3               	addwf	(gmtime@tim^(0+256)+10),f
  9492  0FAE  3000               	movlw	0
  9493  0FAF  3DD4               	addwfc	((gmtime@tim+1)^(0+256)+10),f
  9494  0FB0  2F80               	goto	l4120
  9495  0FB1                     l4122:	
  9496  0FB1  0022               	movlb	2	; select bank2
  9497  0FB2  0854               	movf	((gmtime@tim+1)^(0+256)+10),w
  9498  0FB3  0020               	movlb	0	; select bank0
  9499  0FB4  00B5               	movwf	dylen@yr+1
  9500  0FB5  0022               	movlb	2	; select bank2
  9501  0FB6  0853               	movf	(gmtime@tim^(0+256)+10),w
  9502  0FB7  0020               	movlb	0	; select bank0
  9503  0FB8  00B4               	movwf	dylen@yr
  9504  0FB9  3194  24B7  318E   	fcall	_dylen
  9505  0FBC  0020               	movlb	0	; select bank0
  9506  0FBD  0834               	movf	?_dylen,w
  9507  0FBE  3902               	andlw	2
  9508  0FBF  00B8               	movwf	??_gmtime
  9509  0FC0  0838               	movf	??_gmtime,w
  9510  0FC1  00BB               	movwf	gmtime@tc
  9511  0FC2  0022               	movlb	2	; select bank2
  9512  0FC3  0850               	movf	((gmtime@tim+1)^(0+256)+6),w
  9513  0FC4  00D8               	movwf	((gmtime@tim+1)^(0+256)+14)
  9514  0FC5  084F               	movf	(gmtime@tim^(0+256)+6),w
  9515  0FC6  00D7               	movwf	(gmtime@tim^(0+256)+14)
  9516  0FC7  01D1               	clrf	(gmtime@tim^(0+256)+8)
  9517  0FC8  01D2               	clrf	((gmtime@tim+1)^(0+256)+8)
  9518  0FC9                     l4130:	
  9519  0FC9  0022               	movlb	2	; select bank2
  9520  0FCA  0852               	movf	((gmtime@tim+1)^(0+256)+8),w
  9521  0FCB  0085               	movwf	5
  9522  0FCC  0851               	movf	(gmtime@tim^(0+256)+8),w
  9523  0FCD  0084               	movwf	4
  9524  0FCE  3055               	movlw	low (_moninit| (0+32768))
  9525  0FCF  0784               	addwf	4,f
  9526  0FD0  3098               	movlw	high (_moninit| (0+32768))
  9527  0FD1  3D85               	addwfc	5,f
  9528  0FD2  0800               	movf	0,w	;code access
  9529  0FD3  0020               	movlb	0	; select bank0
  9530  0FD4  043B               	iorwf	gmtime@tc,w
  9531  0FD5  00B8               	movwf	??_gmtime
  9532  0FD6  0838               	movf	??_gmtime,w
  9533  0FD7  00BC               	movwf	gmtime@tc+1
  9534  0FD8  0022               	movlb	2	; select bank2
  9535  0FD9  0850               	movf	((gmtime@tim+1)^(0+256)+6),w
  9536  0FDA  3A80               	xorlw	128
  9537  0FDB  0020               	movlb	0	; select bank0
  9538  0FDC  00B9               	movwf	??_gmtime+1
  9539  0FDD  3080               	movlw	128
  9540  0FDE  0239               	subwf	??_gmtime+1,w
  9541  0FDF  1D03               	skipz
  9542  0FE0  2FE4               	goto	u2765
  9543  0FE1  083C               	movf	gmtime@tc+1,w
  9544  0FE2  0022               	movlb	2	; select bank2
  9545  0FE3  024F               	subwf	(gmtime@tim^(0+256)+6),w
  9546  0FE4                     u2765:	
  9547  0FE4  1C03               	btfss	3,0
  9548  0FE5  2FF9               	goto	l4132
  9549  0FE6  0020               	movlb	0	; select bank0
  9550  0FE7  083C               	movf	gmtime@tc+1,w
  9551  0FE8  00B8               	movwf	??_gmtime
  9552  0FE9  01B9               	clrf	??_gmtime+1
  9553  0FEA  0838               	movf	??_gmtime,w
  9554  0FEB  0022               	movlb	2	; select bank2
  9555  0FEC  02CF               	subwf	(gmtime@tim^(0+256)+6),f
  9556  0FED  0020               	movlb	0	; select bank0
  9557  0FEE  0839               	movf	??_gmtime+1,w
  9558  0FEF  0022               	movlb	2	; select bank2
  9559  0FF0  3BD0               	subwfb	((gmtime@tim+1)^(0+256)+6),f
  9560  0FF1  3001               	movlw	1
  9561  0FF2  07D1               	addwf	(gmtime@tim^(0+256)+8),f
  9562  0FF3  3000               	movlw	0
  9563  0FF4  3DD2               	addwfc	((gmtime@tim+1)^(0+256)+8),f
  9564  0FF5  1003               	clrc
  9565  0FF6  0020               	movlb	0	; select bank0
  9566  0FF7  0CBB               	rrf	gmtime@tc,f
  9567  0FF8  2FC9               	goto	l4130
  9568  0FF9                     l4132:	
  9569  0FF9  3001               	movlw	1
  9570  0FFA  0022               	movlb	2	; select bank2
  9571  0FFB  07CF               	addwf	(gmtime@tim^(0+256)+6),f
  9572  0FFC  3000               	movlw	0
  9573  0FFD  3DD0               	addwfc	((gmtime@tim+1)^(0+256)+6),f
  9574  0FFE  3049               	movlw	(low (gmtime@tim| (0+256)))& (0+255)
  9575  0FFF  0008               	return
  9576  1000                     __end_of_gmtime:	
  9577                           
  9578                           	psect	text6
  9579  14B7                     __ptext6:	
  9580 ;; *************** function _dylen *****************
  9581 ;; Defined at:
  9582 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  yr              2   20[BANK0 ] unsigned int 
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;		None
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  2   20[BANK0 ] int 
  9589 ;; Registers used:
  9590 ;;		wreg, status,2, status,0, pclath, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9596 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;Total ram usage:        4 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:    7
  9603 ;; This function calls:
  9604 ;;		___lwmod
  9605 ;; This function is called by:
  9606 ;;		_gmtime
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           
  9611                           ;psect for function _dylen
  9612  14B7                     _dylen:	
  9613                           
  9614                           ;incstack = 0
  9615                           ; Regs used in _dylen: [wreg+status,2+status,0+pclath+cstack]
  9616  14B7  3003               	movlw	3
  9617  14B8  0020               	movlb	0	; select bank0
  9618  14B9  0534               	andwf	dylen@yr,w
  9619  14BA  00B6               	movwf	??_dylen
  9620  14BB  3000               	movlw	0
  9621  14BC  0535               	andwf	dylen@yr+1,w
  9622  14BD  00B7               	movwf	??_dylen+1
  9623  14BE  0836               	movf	??_dylen,w
  9624  14BF  0437               	iorwf	??_dylen+1,w
  9625  14C0  1D03               	btfss	3,2
  9626  14C1  2CE4               	goto	l3960
  9627  14C2  3064               	movlw	100
  9628  14C3  00AE               	movwf	___lwmod@divisor
  9629  14C4  3000               	movlw	0
  9630  14C5  00AF               	movwf	___lwmod@divisor+1
  9631  14C6  0835               	movf	dylen@yr+1,w
  9632  14C7  00B1               	movwf	___lwmod@dividend+1
  9633  14C8  0834               	movf	dylen@yr,w
  9634  14C9  00B0               	movwf	___lwmod@dividend
  9635  14CA  3193  2362  3194   	fcall	___lwmod
  9636  14CD  0020               	movlb	0	; select bank0
  9637  14CE  082E               	movf	?___lwmod,w
  9638  14CF  042F               	iorwf	?___lwmod+1,w
  9639  14D0  1D03               	btfss	3,2
  9640  14D1  2CE9               	goto	l3964
  9641  14D2  3090               	movlw	144
  9642  14D3  00AE               	movwf	___lwmod@divisor
  9643  14D4  3001               	movlw	1
  9644  14D5  00AF               	movwf	___lwmod@divisor+1
  9645  14D6  0834               	movf	dylen@yr,w
  9646  14D7  3E2C               	addlw	44
  9647  14D8  00B0               	movwf	___lwmod@dividend
  9648  14D9  3001               	movlw	1
  9649  14DA  3D35               	addwfc	dylen@yr+1,w
  9650  14DB  00B1               	movwf	___lwmod@dividend+1
  9651  14DC  3193  2362  3194   	fcall	___lwmod
  9652  14DF  0020               	movlb	0	; select bank0
  9653  14E0  082E               	movf	?___lwmod,w
  9654  14E1  042F               	iorwf	?___lwmod+1,w
  9655  14E2  1903               	btfsc	3,2
  9656  14E3  2CE9               	goto	l3964
  9657  14E4                     l3960:	
  9658  14E4  306D               	movlw	109
  9659  14E5  00B4               	movwf	?_dylen
  9660  14E6  3001               	movlw	1
  9661  14E7  00B5               	movwf	?_dylen+1
  9662  14E8  0008               	return
  9663  14E9                     l3964:	
  9664  14E9  306E               	movlw	110
  9665  14EA  00B4               	movwf	?_dylen
  9666  14EB  3001               	movlw	1
  9667  14EC  00B5               	movwf	?_dylen+1
  9668  14ED  0008               	return
  9669  14EE                     __end_of_dylen:	
  9670                           
  9671                           	psect	text7
  9672  1632                     __ptext7:	
  9673 ;; *************** function ___awmod *****************
  9674 ;; Defined at:
  9675 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  divisor         2    0[BANK0 ] int 
  9678 ;;  dividend        2    2[BANK0 ] int 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;  sign            1    6[BANK0 ] unsigned char 
  9681 ;;  counter         1    5[BANK0 ] unsigned char 
  9682 ;; Return value:  Size  Location     Type
  9683 ;;                  2    0[BANK0 ] int 
  9684 ;; Registers used:
  9685 ;;		wreg, status,2, status,0
  9686 ;; Tracked objects:
  9687 ;;		On entry : 0/0
  9688 ;;		On exit  : 0/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9691 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;Total ram usage:        7 bytes
  9696 ;; Hardware stack levels used:    1
  9697 ;; Hardware stack levels required when called:    6
  9698 ;; This function calls:
  9699 ;;		Nothing
  9700 ;; This function is called by:
  9701 ;;		_rtc6_SetComponent
  9702 ;;		_rtc6_SetTime
  9703 ;;		_gmtime
  9704 ;;		_asctime
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           
  9709                           ;psect for function ___awmod
  9710  1632                     ___awmod:	
  9711                           
  9712                           ;incstack = 0
  9713                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9714  1632  0020               	movlb	0	; select bank0
  9715  1633  01A6               	clrf	___awmod@sign
  9716  1634  1FA3               	btfss	___awmod@dividend+1,7
  9717  1635  2E3D               	goto	l3924
  9718  1636  09A2               	comf	___awmod@dividend,f
  9719  1637  09A3               	comf	___awmod@dividend+1,f
  9720  1638  0AA2               	incf	___awmod@dividend,f
  9721  1639  1903               	skipnz
  9722  163A  0AA3               	incf	___awmod@dividend+1,f
  9723  163B  01A6               	clrf	___awmod@sign
  9724  163C  0AA6               	incf	___awmod@sign,f
  9725  163D                     l3924:	
  9726  163D  1FA1               	btfss	___awmod@divisor+1,7
  9727  163E  2E44               	goto	l3928
  9728  163F  09A0               	comf	___awmod@divisor,f
  9729  1640  09A1               	comf	___awmod@divisor+1,f
  9730  1641  0AA0               	incf	___awmod@divisor,f
  9731  1642  1903               	skipnz
  9732  1643  0AA1               	incf	___awmod@divisor+1,f
  9733  1644                     l3928:	
  9734  1644  0820               	movf	___awmod@divisor,w
  9735  1645  0421               	iorwf	___awmod@divisor+1,w
  9736  1646  1903               	btfsc	3,2
  9737  1647  2E6B               	goto	l3946
  9738  1648  01A5               	clrf	___awmod@counter
  9739  1649  0AA5               	incf	___awmod@counter,f
  9740  164A                     l3936:	
  9741  164A  1BA1               	btfsc	___awmod@divisor+1,7
  9742  164B  2E56               	goto	l3938
  9743  164C  3001               	movlw	1
  9744  164D                     u2475:	
  9745  164D  35A0               	lslf	___awmod@divisor,f
  9746  164E  0DA1               	rlf	___awmod@divisor+1,f
  9747  164F  0B89               	decfsz	9,f
  9748  1650  2E4D               	goto	u2475
  9749  1651  3001               	movlw	1
  9750  1652  00A4               	movwf	??___awmod
  9751  1653  0824               	movf	??___awmod,w
  9752  1654  07A5               	addwf	___awmod@counter,f
  9753  1655  2E4A               	goto	l3936
  9754  1656                     l3938:	
  9755  1656  0821               	movf	___awmod@divisor+1,w
  9756  1657  0223               	subwf	___awmod@dividend+1,w
  9757  1658  1D03               	skipz
  9758  1659  2E5C               	goto	u2495
  9759  165A  0820               	movf	___awmod@divisor,w
  9760  165B  0222               	subwf	___awmod@dividend,w
  9761  165C                     u2495:	
  9762  165C  1C03               	skipc
  9763  165D  2E62               	goto	l3942
  9764  165E  0820               	movf	___awmod@divisor,w
  9765  165F  02A2               	subwf	___awmod@dividend,f
  9766  1660  0821               	movf	___awmod@divisor+1,w
  9767  1661  3BA3               	subwfb	___awmod@dividend+1,f
  9768  1662                     l3942:	
  9769  1662  3001               	movlw	1
  9770  1663                     u2505:	
  9771  1663  36A1               	lsrf	___awmod@divisor+1,f
  9772  1664  0CA0               	rrf	___awmod@divisor,f
  9773  1665  0B89               	decfsz	9,f
  9774  1666  2E63               	goto	u2505
  9775  1667  3001               	movlw	1
  9776  1668  02A5               	subwf	___awmod@counter,f
  9777  1669  1D03               	btfss	3,2
  9778  166A  2E56               	goto	l3938
  9779  166B                     l3946:	
  9780  166B  0826               	movf	___awmod@sign,w
  9781  166C  1903               	btfsc	3,2
  9782  166D  2E73               	goto	l3950
  9783  166E  09A2               	comf	___awmod@dividend,f
  9784  166F  09A3               	comf	___awmod@dividend+1,f
  9785  1670  0AA2               	incf	___awmod@dividend,f
  9786  1671  1903               	skipnz
  9787  1672  0AA3               	incf	___awmod@dividend+1,f
  9788  1673                     l3950:	
  9789  1673  0823               	movf	___awmod@dividend+1,w
  9790  1674  00A1               	movwf	?___awmod+1
  9791  1675  0822               	movf	___awmod@dividend,w
  9792  1676  00A0               	movwf	?___awmod
  9793  1677  0008               	return
  9794  1678                     __end_of___awmod:	
  9795                           
  9796                           	psect	text8
  9797  0943                     __ptext8:	
  9798 ;; *************** function ___almod *****************
  9799 ;; Defined at:
  9800 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  divisor         4    0[BANK0 ] long 
  9803 ;;  dividend        4    4[BANK0 ] long 
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;  sign            1   10[BANK0 ] unsigned char 
  9806 ;;  counter         1    9[BANK0 ] unsigned char 
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  4    0[BANK0 ] long 
  9809 ;; Registers used:
  9810 ;;		wreg, status,2, status,0
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/0
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9816 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;Total ram usage:       11 bytes
  9821 ;; Hardware stack levels used:    1
  9822 ;; Hardware stack levels required when called:    6
  9823 ;; This function calls:
  9824 ;;		Nothing
  9825 ;; This function is called by:
  9826 ;;		_gmtime
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           
  9831                           ;psect for function ___almod
  9832  0943                     ___almod:	
  9833                           
  9834                           ;incstack = 0
  9835                           ; Regs used in ___almod: [wreg+status,2+status,0]
  9836  0943  0020               	movlb	0	; select bank0
  9837  0944  01AA               	clrf	___almod@sign
  9838  0945  1FA7               	btfss	___almod@dividend+3,7
  9839  0946  2954               	goto	l1048
  9840  0947  09A4               	comf	___almod@dividend,f
  9841  0948  09A5               	comf	___almod@dividend+1,f
  9842  0949  09A6               	comf	___almod@dividend+2,f
  9843  094A  09A7               	comf	___almod@dividend+3,f
  9844  094B  0AA4               	incf	___almod@dividend,f
  9845  094C  1903               	skipnz
  9846  094D  0AA5               	incf	___almod@dividend+1,f
  9847  094E  1903               	skipnz
  9848  094F  0AA6               	incf	___almod@dividend+2,f
  9849  0950  1903               	skipnz
  9850  0951  0AA7               	incf	___almod@dividend+3,f
  9851  0952  01AA               	clrf	___almod@sign
  9852  0953  0AAA               	incf	___almod@sign,f
  9853  0954                     l1048:	
  9854  0954  1FA3               	btfss	___almod@divisor+3,7
  9855  0955  2961               	goto	l3892
  9856  0956  09A0               	comf	___almod@divisor,f
  9857  0957  09A1               	comf	___almod@divisor+1,f
  9858  0958  09A2               	comf	___almod@divisor+2,f
  9859  0959  09A3               	comf	___almod@divisor+3,f
  9860  095A  0AA0               	incf	___almod@divisor,f
  9861  095B  1903               	skipnz
  9862  095C  0AA1               	incf	___almod@divisor+1,f
  9863  095D  1903               	skipnz
  9864  095E  0AA2               	incf	___almod@divisor+2,f
  9865  095F  1903               	skipnz
  9866  0960  0AA3               	incf	___almod@divisor+3,f
  9867  0961                     l3892:	
  9868  0961  0823               	movf	___almod@divisor+3,w
  9869  0962  0422               	iorwf	___almod@divisor+2,w
  9870  0963  0421               	iorwf	___almod@divisor+1,w
  9871  0964  0420               	iorwf	___almod@divisor,w
  9872  0965  1903               	skipnz
  9873  0966  299A               	goto	l3908
  9874  0967  01A9               	clrf	___almod@counter
  9875  0968  0AA9               	incf	___almod@counter,f
  9876  0969                     l3898:	
  9877  0969  1BA3               	btfsc	___almod@divisor+3,7
  9878  096A  2977               	goto	l3900
  9879  096B  3001               	movlw	1
  9880  096C                     u2385:	
  9881  096C  35A0               	lslf	___almod@divisor,f
  9882  096D  0DA1               	rlf	___almod@divisor+1,f
  9883  096E  0DA2               	rlf	___almod@divisor+2,f
  9884  096F  0DA3               	rlf	___almod@divisor+3,f
  9885  0970  0B89               	decfsz	9,f
  9886  0971  296C               	goto	u2385
  9887  0972  3001               	movlw	1
  9888  0973  00A8               	movwf	??___almod
  9889  0974  0828               	movf	??___almod,w
  9890  0975  07A9               	addwf	___almod@counter,f
  9891  0976  2969               	goto	l3898
  9892  0977                     l3900:	
  9893  0977  0823               	movf	___almod@divisor+3,w
  9894  0978  0227               	subwf	___almod@dividend+3,w
  9895  0979  1D03               	skipz
  9896  097A  2985               	goto	u2405
  9897  097B  0822               	movf	___almod@divisor+2,w
  9898  097C  0226               	subwf	___almod@dividend+2,w
  9899  097D  1D03               	skipz
  9900  097E  2985               	goto	u2405
  9901  097F  0821               	movf	___almod@divisor+1,w
  9902  0980  0225               	subwf	___almod@dividend+1,w
  9903  0981  1D03               	skipz
  9904  0982  2985               	goto	u2405
  9905  0983  0820               	movf	___almod@divisor,w
  9906  0984  0224               	subwf	___almod@dividend,w
  9907  0985                     u2405:	
  9908  0985  1C03               	skipc
  9909  0986  298F               	goto	l3904
  9910  0987  0820               	movf	___almod@divisor,w
  9911  0988  02A4               	subwf	___almod@dividend,f
  9912  0989  0821               	movf	___almod@divisor+1,w
  9913  098A  3BA5               	subwfb	___almod@dividend+1,f
  9914  098B  0822               	movf	___almod@divisor+2,w
  9915  098C  3BA6               	subwfb	___almod@dividend+2,f
  9916  098D  0823               	movf	___almod@divisor+3,w
  9917  098E  3BA7               	subwfb	___almod@dividend+3,f
  9918  098F                     l3904:	
  9919  098F  3001               	movlw	1
  9920  0990                     u2415:	
  9921  0990  36A3               	lsrf	___almod@divisor+3,f
  9922  0991  0CA2               	rrf	___almod@divisor+2,f
  9923  0992  0CA1               	rrf	___almod@divisor+1,f
  9924  0993  0CA0               	rrf	___almod@divisor,f
  9925  0994  0B89               	decfsz	9,f
  9926  0995  2990               	goto	u2415
  9927  0996  3001               	movlw	1
  9928  0997  02A9               	subwf	___almod@counter,f
  9929  0998  1D03               	btfss	3,2
  9930  0999  2977               	goto	l3900
  9931  099A                     l3908:	
  9932  099A  082A               	movf	___almod@sign,w
  9933  099B  1903               	btfsc	3,2
  9934  099C  29A8               	goto	l3912
  9935  099D  09A4               	comf	___almod@dividend,f
  9936  099E  09A5               	comf	___almod@dividend+1,f
  9937  099F  09A6               	comf	___almod@dividend+2,f
  9938  09A0  09A7               	comf	___almod@dividend+3,f
  9939  09A1  0AA4               	incf	___almod@dividend,f
  9940  09A2  1903               	skipnz
  9941  09A3  0AA5               	incf	___almod@dividend+1,f
  9942  09A4  1903               	skipnz
  9943  09A5  0AA6               	incf	___almod@dividend+2,f
  9944  09A6  1903               	skipnz
  9945  09A7  0AA7               	incf	___almod@dividend+3,f
  9946  09A8                     l3912:	
  9947  09A8  0827               	movf	___almod@dividend+3,w
  9948  09A9  00A3               	movwf	?___almod+3
  9949  09AA  0826               	movf	___almod@dividend+2,w
  9950  09AB  00A2               	movwf	?___almod+2
  9951  09AC  0825               	movf	___almod@dividend+1,w
  9952  09AD  00A1               	movwf	?___almod+1
  9953  09AE  0824               	movf	___almod@dividend,w
  9954  09AF  00A0               	movwf	?___almod
  9955  09B0  0008               	return
  9956  09B1                     __end_of___almod:	
  9957                           
  9958                           	psect	text9
  9959  0B8C                     __ptext9:	
  9960 ;; *************** function ___aldiv *****************
  9961 ;; Defined at:
  9962 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  divisor         4    0[BANK0 ] long 
  9965 ;;  dividend        4    4[BANK0 ] long 
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;  quotient        4   11[BANK0 ] long 
  9968 ;;  sign            1   10[BANK0 ] unsigned char 
  9969 ;;  counter         1    9[BANK0 ] unsigned char 
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  4    0[BANK0 ] long 
  9972 ;; Registers used:
  9973 ;;		wreg, status,2, status,0
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9979 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9982 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9983 ;;Total ram usage:       15 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    6
  9986 ;; This function calls:
  9987 ;;		Nothing
  9988 ;; This function is called by:
  9989 ;;		_gmtime
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           
  9994                           ;psect for function ___aldiv
  9995  0B8C                     ___aldiv:	
  9996                           
  9997                           ;incstack = 0
  9998                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9999  0B8C  0020               	movlb	0	; select bank0
 10000  0B8D  01AA               	clrf	___aldiv@sign
 10001  0B8E  1FA3               	btfss	___aldiv@divisor+3,7
 10002  0B8F  2B9D               	goto	l1035
 10003  0B90  09A0               	comf	___aldiv@divisor,f
 10004  0B91  09A1               	comf	___aldiv@divisor+1,f
 10005  0B92  09A2               	comf	___aldiv@divisor+2,f
 10006  0B93  09A3               	comf	___aldiv@divisor+3,f
 10007  0B94  0AA0               	incf	___aldiv@divisor,f
 10008  0B95  1903               	skipnz
 10009  0B96  0AA1               	incf	___aldiv@divisor+1,f
 10010  0B97  1903               	skipnz
 10011  0B98  0AA2               	incf	___aldiv@divisor+2,f
 10012  0B99  1903               	skipnz
 10013  0B9A  0AA3               	incf	___aldiv@divisor+3,f
 10014  0B9B  01AA               	clrf	___aldiv@sign
 10015  0B9C  0AAA               	incf	___aldiv@sign,f
 10016  0B9D                     l1035:	
 10017  0B9D  1FA7               	btfss	___aldiv@dividend+3,7
 10018  0B9E  2BAE               	goto	l3854
 10019  0B9F  09A4               	comf	___aldiv@dividend,f
 10020  0BA0  09A5               	comf	___aldiv@dividend+1,f
 10021  0BA1  09A6               	comf	___aldiv@dividend+2,f
 10022  0BA2  09A7               	comf	___aldiv@dividend+3,f
 10023  0BA3  0AA4               	incf	___aldiv@dividend,f
 10024  0BA4  1903               	skipnz
 10025  0BA5  0AA5               	incf	___aldiv@dividend+1,f
 10026  0BA6  1903               	skipnz
 10027  0BA7  0AA6               	incf	___aldiv@dividend+2,f
 10028  0BA8  1903               	skipnz
 10029  0BA9  0AA7               	incf	___aldiv@dividend+3,f
 10030  0BAA  3001               	movlw	1
 10031  0BAB  00A8               	movwf	??___aldiv
 10032  0BAC  0828               	movf	??___aldiv,w
 10033  0BAD  06AA               	xorwf	___aldiv@sign,f
 10034  0BAE                     l3854:	
 10035  0BAE  3000               	movlw	0
 10036  0BAF  00AE               	movwf	___aldiv@quotient+3
 10037  0BB0  3000               	movlw	0
 10038  0BB1  00AD               	movwf	___aldiv@quotient+2
 10039  0BB2  3000               	movlw	0
 10040  0BB3  00AC               	movwf	___aldiv@quotient+1
 10041  0BB4  3000               	movlw	0
 10042  0BB5  00AB               	movwf	___aldiv@quotient
 10043  0BB6  0823               	movf	___aldiv@divisor+3,w
 10044  0BB7  0422               	iorwf	___aldiv@divisor+2,w
 10045  0BB8  0421               	iorwf	___aldiv@divisor+1,w
 10046  0BB9  0420               	iorwf	___aldiv@divisor,w
 10047  0BBA  1903               	skipnz
 10048  0BBB  2BF7               	goto	l3876
 10049  0BBC  01A9               	clrf	___aldiv@counter
 10050  0BBD  0AA9               	incf	___aldiv@counter,f
 10051  0BBE                     l3862:	
 10052  0BBE  1BA3               	btfsc	___aldiv@divisor+3,7
 10053  0BBF  2BCC               	goto	l3864
 10054  0BC0  3001               	movlw	1
 10055  0BC1                     u2285:	
 10056  0BC1  35A0               	lslf	___aldiv@divisor,f
 10057  0BC2  0DA1               	rlf	___aldiv@divisor+1,f
 10058  0BC3  0DA2               	rlf	___aldiv@divisor+2,f
 10059  0BC4  0DA3               	rlf	___aldiv@divisor+3,f
 10060  0BC5  0B89               	decfsz	9,f
 10061  0BC6  2BC1               	goto	u2285
 10062  0BC7  3001               	movlw	1
 10063  0BC8  00A8               	movwf	??___aldiv
 10064  0BC9  0828               	movf	??___aldiv,w
 10065  0BCA  07A9               	addwf	___aldiv@counter,f
 10066  0BCB  2BBE               	goto	l3862
 10067  0BCC                     l3864:	
 10068  0BCC  3001               	movlw	1
 10069  0BCD                     u2305:	
 10070  0BCD  35AB               	lslf	___aldiv@quotient,f
 10071  0BCE  0DAC               	rlf	___aldiv@quotient+1,f
 10072  0BCF  0DAD               	rlf	___aldiv@quotient+2,f
 10073  0BD0  0DAE               	rlf	___aldiv@quotient+3,f
 10074  0BD1  0B89               	decfsz	9,f
 10075  0BD2  2BCD               	goto	u2305
 10076  0BD3  0823               	movf	___aldiv@divisor+3,w
 10077  0BD4  0227               	subwf	___aldiv@dividend+3,w
 10078  0BD5  1D03               	skipz
 10079  0BD6  2BE1               	goto	u2315
 10080  0BD7  0822               	movf	___aldiv@divisor+2,w
 10081  0BD8  0226               	subwf	___aldiv@dividend+2,w
 10082  0BD9  1D03               	skipz
 10083  0BDA  2BE1               	goto	u2315
 10084  0BDB  0821               	movf	___aldiv@divisor+1,w
 10085  0BDC  0225               	subwf	___aldiv@dividend+1,w
 10086  0BDD  1D03               	skipz
 10087  0BDE  2BE1               	goto	u2315
 10088  0BDF  0820               	movf	___aldiv@divisor,w
 10089  0BE0  0224               	subwf	___aldiv@dividend,w
 10090  0BE1                     u2315:	
 10091  0BE1  1C03               	skipc
 10092  0BE2  2BEC               	goto	l3872
 10093  0BE3  0820               	movf	___aldiv@divisor,w
 10094  0BE4  02A4               	subwf	___aldiv@dividend,f
 10095  0BE5  0821               	movf	___aldiv@divisor+1,w
 10096  0BE6  3BA5               	subwfb	___aldiv@dividend+1,f
 10097  0BE7  0822               	movf	___aldiv@divisor+2,w
 10098  0BE8  3BA6               	subwfb	___aldiv@dividend+2,f
 10099  0BE9  0823               	movf	___aldiv@divisor+3,w
 10100  0BEA  3BA7               	subwfb	___aldiv@dividend+3,f
 10101  0BEB  142B               	bsf	___aldiv@quotient,0
 10102  0BEC                     l3872:	
 10103  0BEC  3001               	movlw	1
 10104  0BED                     u2325:	
 10105  0BED  36A3               	lsrf	___aldiv@divisor+3,f
 10106  0BEE  0CA2               	rrf	___aldiv@divisor+2,f
 10107  0BEF  0CA1               	rrf	___aldiv@divisor+1,f
 10108  0BF0  0CA0               	rrf	___aldiv@divisor,f
 10109  0BF1  0B89               	decfsz	9,f
 10110  0BF2  2BED               	goto	u2325
 10111  0BF3  3001               	movlw	1
 10112  0BF4  02A9               	subwf	___aldiv@counter,f
 10113  0BF5  1D03               	btfss	3,2
 10114  0BF6  2BCC               	goto	l3864
 10115  0BF7                     l3876:	
 10116  0BF7  082A               	movf	___aldiv@sign,w
 10117  0BF8  1903               	btfsc	3,2
 10118  0BF9  2C05               	goto	l3880
 10119  0BFA  09AB               	comf	___aldiv@quotient,f
 10120  0BFB  09AC               	comf	___aldiv@quotient+1,f
 10121  0BFC  09AD               	comf	___aldiv@quotient+2,f
 10122  0BFD  09AE               	comf	___aldiv@quotient+3,f
 10123  0BFE  0AAB               	incf	___aldiv@quotient,f
 10124  0BFF  1903               	skipnz
 10125  0C00  0AAC               	incf	___aldiv@quotient+1,f
 10126  0C01  1903               	skipnz
 10127  0C02  0AAD               	incf	___aldiv@quotient+2,f
 10128  0C03  1903               	skipnz
 10129  0C04  0AAE               	incf	___aldiv@quotient+3,f
 10130  0C05                     l3880:	
 10131  0C05  082E               	movf	___aldiv@quotient+3,w
 10132  0C06  00A3               	movwf	?___aldiv+3
 10133  0C07  082D               	movf	___aldiv@quotient+2,w
 10134  0C08  00A2               	movwf	?___aldiv+2
 10135  0C09  082C               	movf	___aldiv@quotient+1,w
 10136  0C0A  00A1               	movwf	?___aldiv+1
 10137  0C0B  082B               	movf	___aldiv@quotient,w
 10138  0C0C  00A0               	movwf	?___aldiv
 10139  0C0D  0008               	return
 10140  0C0E                     __end_of___aldiv:	
 10141                           
 10142                           	psect	text10
 10143  0C0E                     __ptext10:	
 10144 ;; *************** function _rtc6_GetTime *****************
 10145 ;; Defined at:
 10146 ;;		line 164 in file "mcc_generated_files/RTC6.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;		None
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;  tm_t           18    0[BANK1 ] struct tm
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  4   63[BANK0 ] long 
 10153 ;; Registers used:
 10154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10160 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10161 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10163 ;;      Totals:         0       7      18       0       0       0       0       0       0       0       0       0       
      +0       0
 10164 ;;Total ram usage:       25 bytes
 10165 ;; Hardware stack levels used:    1
 10166 ;; Hardware stack levels required when called:   17
 10167 ;; This function calls:
 10168 ;;		_memset
 10169 ;;		_mktime
 10170 ;;		_rtc6_GetComponent
 10171 ;; This function is called by:
 10172 ;;		_main
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           
 10177                           ;psect for function _rtc6_GetTime
 10178  0C0E                     _rtc6_GetTime:	
 10179                           
 10180                           ;RTC6.c: 165: struct tm tm_t;
 10181                           ;RTC6.c: 166: memset(&tm_t, 0, sizeof (tm_t));
 10182                           
 10183                           ;incstack = 0
 10184 ;; hardware stack exceeded
 10185                           ; Regs used in _rtc6_GetTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10186  0C0E  30A0               	movlw	low rtc6_GetTime@tm_t
 10187  0C0F  0020               	movlb	0	; select bank0
 10188  0C10  00A0               	movwf	memset@p1
 10189  0C11  3000               	movlw	high rtc6_GetTime@tm_t
 10190  0C12  00A1               	movwf	memset@p1+1
 10191  0C13  3000               	movlw	0
 10192  0C14  00A2               	movwf	memset@c
 10193  0C15  00A3               	movwf	memset@c+1
 10194  0C16  3012               	movlw	18
 10195  0C17  00A4               	movwf	memset@n
 10196  0C18  3000               	movlw	0
 10197  0C19  00A5               	movwf	memset@n+1
 10198  0C1A  3191  2161  318C   	fcall	_memset
 10199                           
 10200                           ;RTC6.c: 168: tm_t.tm_year = rtc6_GetComponent(0x06, 0xFF) + 100;
 10201  0C1D  30FF               	movlw	255
 10202  0C1E  0020               	movlb	0	; select bank0
 10203  0C1F  00E3               	movwf	??_rtc6_GetTime
 10204  0C20  0863               	movf	??_rtc6_GetTime,w
 10205  0C21  00B3               	movwf	rtc6_GetComponent@mask
 10206  0C22  3006               	movlw	6
 10207  0C23  3192  220C  318C   	fcall	_rtc6_GetComponent
 10208  0C26  3E64               	addlw	100
 10209  0C27  0021               	movlb	1	; select bank1
 10210  0C28  00AA               	movwf	(rtc6_GetTime@tm_t^(0+128)+10)
 10211  0C29  3000               	movlw	0
 10212  0C2A  1803               	skipnc
 10213  0C2B  3001               	movlw	1
 10214  0C2C  00AB               	movwf	(rtc6_GetTime@tm_t^(0+128)+11)
 10215                           
 10216                           ;RTC6.c: 169: tm_t.tm_mon = rtc6_GetComponent(0x05, 0x1F) - 1;
 10217  0C2D  301F               	movlw	31
 10218  0C2E  0020               	movlb	0	; select bank0
 10219  0C2F  00E3               	movwf	??_rtc6_GetTime
 10220  0C30  0863               	movf	??_rtc6_GetTime,w
 10221  0C31  00B3               	movwf	rtc6_GetComponent@mask
 10222  0C32  3005               	movlw	5
 10223  0C33  3192  220C  318C   	fcall	_rtc6_GetComponent
 10224  0C36  3EFF               	addlw	255
 10225  0C37  0021               	movlb	1	; select bank1
 10226  0C38  00A8               	movwf	(rtc6_GetTime@tm_t^(0+128)+8)
 10227  0C39  30FF               	movlw	255
 10228  0C3A  1803               	skipnc
 10229  0C3B  3000               	movlw	0
 10230  0C3C  00A9               	movwf	(rtc6_GetTime@tm_t^(0+128)+9)
 10231                           
 10232                           ;RTC6.c: 170: tm_t.tm_mday = rtc6_GetComponent(0x04, 0x3F);
 10233  0C3D  303F               	movlw	63
 10234  0C3E  0020               	movlb	0	; select bank0
 10235  0C3F  00E3               	movwf	??_rtc6_GetTime
 10236  0C40  0863               	movf	??_rtc6_GetTime,w
 10237  0C41  00B3               	movwf	rtc6_GetComponent@mask
 10238  0C42  3004               	movlw	4
 10239  0C43  3192  220C  318C   	fcall	_rtc6_GetComponent
 10240  0C46  0020               	movlb	0	; select bank0
 10241  0C47  00E4               	movwf	??_rtc6_GetTime+1
 10242  0C48  01E5               	clrf	??_rtc6_GetTime+2
 10243  0C49  0864               	movf	??_rtc6_GetTime+1,w
 10244  0C4A  0021               	movlb	1	; select bank1
 10245  0C4B  00A6               	movwf	(rtc6_GetTime@tm_t^(0+128)+6)
 10246  0C4C  0020               	movlb	0	; select bank0
 10247  0C4D  0865               	movf	??_rtc6_GetTime+2,w
 10248  0C4E  0021               	movlb	1	; select bank1
 10249  0C4F  00A7               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+6)
 10250                           
 10251                           ;RTC6.c: 171: tm_t.tm_hour = rtc6_GetComponent(0x02, 0x3F);
 10252  0C50  303F               	movlw	63
 10253  0C51  0020               	movlb	0	; select bank0
 10254  0C52  00E3               	movwf	??_rtc6_GetTime
 10255  0C53  0863               	movf	??_rtc6_GetTime,w
 10256  0C54  00B3               	movwf	rtc6_GetComponent@mask
 10257  0C55  3002               	movlw	2
 10258  0C56  3192  220C  318C   	fcall	_rtc6_GetComponent
 10259  0C59  0020               	movlb	0	; select bank0
 10260  0C5A  00E4               	movwf	??_rtc6_GetTime+1
 10261  0C5B  01E5               	clrf	??_rtc6_GetTime+2
 10262  0C5C  0864               	movf	??_rtc6_GetTime+1,w
 10263  0C5D  0021               	movlb	1	; select bank1
 10264  0C5E  00A4               	movwf	(rtc6_GetTime@tm_t^(0+128)+4)
 10265  0C5F  0020               	movlb	0	; select bank0
 10266  0C60  0865               	movf	??_rtc6_GetTime+2,w
 10267  0C61  0021               	movlb	1	; select bank1
 10268  0C62  00A5               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+4)
 10269                           
 10270                           ;RTC6.c: 172: tm_t.tm_min = rtc6_GetComponent(0x01, 0x7F);
 10271  0C63  307F               	movlw	127
 10272  0C64  0020               	movlb	0	; select bank0
 10273  0C65  00E3               	movwf	??_rtc6_GetTime
 10274  0C66  0863               	movf	??_rtc6_GetTime,w
 10275  0C67  00B3               	movwf	rtc6_GetComponent@mask
 10276  0C68  3001               	movlw	1
 10277  0C69  3192  220C  318C   	fcall	_rtc6_GetComponent
 10278  0C6C  0020               	movlb	0	; select bank0
 10279  0C6D  00E4               	movwf	??_rtc6_GetTime+1
 10280  0C6E  01E5               	clrf	??_rtc6_GetTime+2
 10281  0C6F  0864               	movf	??_rtc6_GetTime+1,w
 10282  0C70  0021               	movlb	1	; select bank1
 10283  0C71  00A2               	movwf	(rtc6_GetTime@tm_t^(0+128)+2)
 10284  0C72  0020               	movlb	0	; select bank0
 10285  0C73  0865               	movf	??_rtc6_GetTime+2,w
 10286  0C74  0021               	movlb	1	; select bank1
 10287  0C75  00A3               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+2)
 10288                           
 10289                           ;RTC6.c: 173: tm_t.tm_sec = rtc6_GetComponent(0x00, 0x7F);
 10290  0C76  307F               	movlw	127
 10291  0C77  0020               	movlb	0	; select bank0
 10292  0C78  00E3               	movwf	??_rtc6_GetTime
 10293  0C79  0863               	movf	??_rtc6_GetTime,w
 10294  0C7A  00B3               	movwf	rtc6_GetComponent@mask
 10295  0C7B  3000               	movlw	0
 10296  0C7C  3192  220C  318C   	fcall	_rtc6_GetComponent
 10297  0C7F  0020               	movlb	0	; select bank0
 10298  0C80  00E4               	movwf	??_rtc6_GetTime+1
 10299  0C81  01E5               	clrf	??_rtc6_GetTime+2
 10300  0C82  0864               	movf	??_rtc6_GetTime+1,w
 10301  0C83  0021               	movlb	1	; select bank1
 10302  0C84  00A0               	movwf	rtc6_GetTime@tm_t^(0+128)
 10303  0C85  0020               	movlb	0	; select bank0
 10304  0C86  0865               	movf	??_rtc6_GetTime+2,w
 10305  0C87  0021               	movlb	1	; select bank1
 10306  0C88  00A1               	movwf	(rtc6_GetTime@tm_t+1)^(0+128)
 10307                           
 10308                           ;RTC6.c: 175: return mktime(&tm_t);
 10309  0C89  30A0               	movlw	(low (rtc6_GetTime@tm_t| 0))& (0+255)
 10310  0C8A  318D  258D         	fcall	_mktime
 10311  0C8C  0020               	movlb	0	; select bank0
 10312  0C8D  0853               	movf	?_mktime+3,w
 10313  0C8E  00E2               	movwf	?_rtc6_GetTime+3
 10314  0C8F  0852               	movf	?_mktime+2,w
 10315  0C90  00E1               	movwf	?_rtc6_GetTime+2
 10316  0C91  0851               	movf	?_mktime+1,w
 10317  0C92  00E0               	movwf	?_rtc6_GetTime+1
 10318  0C93  0850               	movf	?_mktime,w
 10319  0C94  00DF               	movwf	?_rtc6_GetTime
 10320  0C95  0008               	return
 10321  0C96                     __end_of_rtc6_GetTime:	
 10322                           
 10323                           	psect	text11
 10324  120C                     __ptext11:	
 10325 ;; *************** function _rtc6_GetComponent *****************
 10326 ;; Defined at:
 10327 ;;		line 159 in file "mcc_generated_files/RTC6.c"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;  location        1    wreg     unsigned char 
 10330 ;;  mask            1   19[BANK0 ] unsigned char 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;  location        1   23[BANK0 ] unsigned char 
 10333 ;;  working         1   24[BANK0 ] unsigned char 
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  1    wreg      unsigned char 
 10336 ;; Registers used:
 10337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10343 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10347 ;;Total ram usage:        6 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; Hardware stack levels required when called:   16
 10350 ;; This function calls:
 10351 ;;		___bmul
 10352 ;;		_rtcc_read
 10353 ;; This function is called by:
 10354 ;;		_rtc6_GetTime
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           
 10359                           ;psect for function _rtc6_GetComponent
 10360  120C                     _rtc6_GetComponent:	
 10361                           
 10362                           ;incstack = 0
 10363 ;; hardware stack exceeded
 10364                           ; Regs used in _rtc6_GetComponent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10365                           ;rtc6_GetComponent@location stored from wreg
 10366  120C  0020               	movlb	0	; select bank0
 10367  120D  00B7               	movwf	rtc6_GetComponent@location
 10368                           
 10369                           ;RTC6.c: 160: uint8_t working = rtcc_read(location) & mask;
 10370  120E  0837               	movf	rtc6_GetComponent@location,w
 10371  120F  319F  279B  3192   	fcall	_rtcc_read
 10372  1212  0020               	movlb	0	; select bank0
 10373  1213  0533               	andwf	rtc6_GetComponent@mask,w
 10374  1214  00B4               	movwf	??_rtc6_GetComponent
 10375  1215  0834               	movf	??_rtc6_GetComponent,w
 10376  1216  00B8               	movwf	rtc6_GetComponent@working
 10377                           
 10378                           ;RTC6.c: 161: return (working & 0x0F) + (((working & (mask & 0xF0)) >> 4) * 10);
 10379  1217  300F               	movlw	15
 10380  1218  0538               	andwf	rtc6_GetComponent@working,w
 10381  1219  00B4               	movwf	??_rtc6_GetComponent
 10382  121A  300A               	movlw	10
 10383  121B  00B5               	movwf	??_rtc6_GetComponent+1
 10384  121C  0835               	movf	??_rtc6_GetComponent+1,w
 10385  121D  00A0               	movwf	___bmul@multiplicand
 10386  121E  0833               	movf	rtc6_GetComponent@mask,w
 10387  121F  0538               	andwf	rtc6_GetComponent@working,w
 10388  1220  00B6               	movwf	??_rtc6_GetComponent+2
 10389  1221  3004               	movlw	4
 10390  1222                     u5225:	
 10391  1222  36B6               	lsrf	??_rtc6_GetComponent+2,f
 10392  1223  0B89               	decfsz	9,f
 10393  1224  2A22               	goto	u5225
 10394  1225  0836               	movf	??_rtc6_GetComponent+2,w
 10395  1226  390F               	andlw	15
 10396  1227  3187  27EE         	fcall	___bmul
 10397  1229  0020               	movlb	0	; select bank0
 10398  122A  0734               	addwf	??_rtc6_GetComponent,w
 10399  122B  0008               	return
 10400  122C                     __end_of_rtc6_GetComponent:	
 10401                           
 10402                           	psect	text12
 10403  07EE                     __ptext12:	
 10404 ;; *************** function ___bmul *****************
 10405 ;; Defined at:
 10406 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;  multiplier      1    wreg     unsigned char 
 10409 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;  multiplier      1    3[BANK0 ] unsigned char 
 10412 ;;  product         1    2[BANK0 ] unsigned char 
 10413 ;; Return value:  Size  Location     Type
 10414 ;;                  1    wreg      unsigned char 
 10415 ;; Registers used:
 10416 ;;		wreg, status,2, status,0
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10422 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10426 ;;Total ram usage:        4 bytes
 10427 ;; Hardware stack levels used:    1
 10428 ;; Hardware stack levels required when called:    6
 10429 ;; This function calls:
 10430 ;;		Nothing
 10431 ;; This function is called by:
 10432 ;;		_rtc6_GetComponent
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           
 10436                           
 10437                           ;psect for function ___bmul
 10438  07EE                     ___bmul:	
 10439                           
 10440                           ;incstack = 0
 10441                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 10442                           ;___bmul@multiplier stored from wreg
 10443  07EE  0020               	movlb	0	; select bank0
 10444  07EF  00A3               	movwf	___bmul@multiplier
 10445  07F0  01A2               	clrf	___bmul@product
 10446  07F1                     l4042:	
 10447  07F1  1C23               	btfss	___bmul@multiplier,0
 10448  07F2  2FF7               	goto	l4046
 10449  07F3  0820               	movf	___bmul@multiplicand,w
 10450  07F4  00A1               	movwf	??___bmul
 10451  07F5  0821               	movf	??___bmul,w
 10452  07F6  07A2               	addwf	___bmul@product,f
 10453  07F7                     l4046:	
 10454  07F7  1003               	clrc
 10455  07F8  0DA0               	rlf	___bmul@multiplicand,f
 10456  07F9  1003               	clrc
 10457  07FA  0CA3               	rrf	___bmul@multiplier,f
 10458  07FB  0823               	movf	___bmul@multiplier,w
 10459  07FC  1D03               	btfss	3,2
 10460  07FD  2FF1               	goto	l4042
 10461  07FE  0822               	movf	___bmul@product,w
 10462  07FF  0008               	return
 10463  0800                     __end_of___bmul:	
 10464                           
 10465                           	psect	text13
 10466  0D8D                     __ptext13:	
 10467 ;; *************** function _mktime *****************
 10468 ;; Defined at:
 10469 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  timeptr         1    wreg     PTR struct tm
 10472 ;;		 -> rtc6_GetTime@tm_t(18), 
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;  timeptr         1   62[BANK0 ] PTR struct tm
 10475 ;;		 -> rtc6_GetTime@tm_t(18), 
 10476 ;;  tt              4   58[BANK0 ] long 
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  4   48[BANK0 ] long 
 10479 ;; Registers used:
 10480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10486 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10490 ;;Total ram usage:       15 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:    9
 10493 ;; This function calls:
 10494 ;;		___lmul
 10495 ;;		_ymd_to_scalar
 10496 ;; This function is called by:
 10497 ;;		_rtc6_GetTime
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           
 10502                           ;psect for function _mktime
 10503  0D8D                     _mktime:	
 10504                           
 10505                           ;incstack = 0
 10506                           ; Regs used in _mktime: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10507                           ;mktime@timeptr stored from wreg
 10508  0D8D  0020               	movlb	0	; select bank0
 10509  0D8E  00DE               	movwf	mktime@timeptr
 10510  0D8F  085E               	movf	mktime@timeptr,w
 10511  0D90  3E0A               	addlw	10
 10512  0D91  0086               	movwf	6
 10513  0D92  0187               	clrf	7
 10514  0D93  3F40               	moviw [0]fsr1
 10515  0D94  00D4               	movwf	??_mktime
 10516  0D95  3F41               	moviw [1]fsr1
 10517  0D96  00D5               	movwf	??_mktime+1
 10518  0D97  0855               	movf	??_mktime+1,w
 10519  0D98  3A80               	xorlw	128
 10520  0D99  00D6               	movwf	??_mktime+2
 10521  0D9A  3080               	movlw	128
 10522  0D9B  0256               	subwf	??_mktime+2,w
 10523  0D9C  1D03               	skipz
 10524  0D9D  2DA0               	goto	u2835
 10525  0D9E  3046               	movlw	70
 10526  0D9F  0254               	subwf	??_mktime,w
 10527  0DA0                     u2835:	
 10528  0DA0  1C03               	skipc
 10529  0DA1  2DB6               	goto	l4300
 10530  0DA2  0020               	movlb	0	; select bank0
 10531  0DA3  085E               	movf	mktime@timeptr,w
 10532  0DA4  3E0A               	addlw	10
 10533  0DA5  0086               	movwf	6
 10534  0DA6  0187               	clrf	7
 10535  0DA7  3F40               	moviw [0]fsr1
 10536  0DA8  00D4               	movwf	??_mktime
 10537  0DA9  3F41               	moviw [1]fsr1
 10538  0DAA  00D5               	movwf	??_mktime+1
 10539  0DAB  0855               	movf	??_mktime+1,w
 10540  0DAC  3A80               	xorlw	128
 10541  0DAD  00D6               	movwf	??_mktime+2
 10542  0DAE  3080               	movlw	128
 10543  0DAF  0256               	subwf	??_mktime+2,w
 10544  0DB0  1D03               	skipz
 10545  0DB1  2DB4               	goto	u2845
 10546  0DB2  308B               	movlw	139
 10547  0DB3  0254               	subwf	??_mktime,w
 10548  0DB4                     u2845:	
 10549  0DB4  1C03               	skipc
 10550  0DB5  2DBF               	goto	l4302
 10551  0DB6                     l4300:	
 10552  0DB6  30FF               	movlw	255
 10553  0DB7  0020               	movlb	0	; select bank0
 10554  0DB8  00DD               	movwf	mktime@tt+3
 10555  0DB9  30FF               	movlw	255
 10556  0DBA  00DC               	movwf	mktime@tt+2
 10557  0DBB  30FF               	movlw	255
 10558  0DBC  00DB               	movwf	mktime@tt+1
 10559  0DBD  30FF               	movlw	255
 10560  0DBE  2EA4               	goto	L1
 10561  0DBF                     l4302:	
 10562  0DBF  0020               	movlb	0	; select bank0
 10563  0DC0  085E               	movf	mktime@timeptr,w
 10564  0DC1  3E0A               	addlw	10
 10565  0DC2  0086               	movwf	6
 10566  0DC3  0187               	clrf	7
 10567  0DC4  3F40               	moviw [0]fsr1
 10568  0DC5  00D4               	movwf	??_mktime
 10569  0DC6  3F41               	moviw [1]fsr1
 10570  0DC7  00D5               	movwf	??_mktime+1
 10571  0DC8  0854               	movf	??_mktime,w
 10572  0DC9  3E6C               	addlw	108
 10573  0DCA  00C0               	movwf	ymd_to_scalar@yr
 10574  0DCB  3007               	movlw	7
 10575  0DCC  3D55               	addwfc	??_mktime+1,w
 10576  0DCD  00C1               	movwf	ymd_to_scalar@yr+1
 10577  0DCE  085E               	movf	mktime@timeptr,w
 10578  0DCF  3E08               	addlw	8
 10579  0DD0  0086               	movwf	6
 10580  0DD1  0187               	clrf	7
 10581  0DD2  3F40               	moviw [0]fsr1
 10582  0DD3  00D6               	movwf	??_mktime+2
 10583  0DD4  3F41               	moviw [1]fsr1
 10584  0DD5  00D7               	movwf	??_mktime+3
 10585  0DD6  0856               	movf	??_mktime+2,w
 10586  0DD7  3E01               	addlw	1
 10587  0DD8  00C2               	movwf	ymd_to_scalar@mo
 10588  0DD9  3000               	movlw	0
 10589  0DDA  3D57               	addwfc	??_mktime+3,w
 10590  0DDB  00C3               	movwf	ymd_to_scalar@mo+1
 10591  0DDC  085E               	movf	mktime@timeptr,w
 10592  0DDD  3E06               	addlw	6
 10593  0DDE  0086               	movwf	6
 10594  0DDF  0187               	clrf	7
 10595  0DE0  3F40               	moviw [0]fsr1
 10596  0DE1  00C4               	movwf	ymd_to_scalar@day
 10597  0DE2  3F41               	moviw [1]fsr1
 10598  0DE3  00C5               	movwf	ymd_to_scalar@day+1
 10599  0DE4  3188  203A  318D   	fcall	_ymd_to_scalar
 10600  0DE7  0020               	movlb	0	; select bank0
 10601  0DE8  0843               	movf	?_ymd_to_scalar+3,w
 10602  0DE9  00DD               	movwf	mktime@tt+3
 10603  0DEA  0842               	movf	?_ymd_to_scalar+2,w
 10604  0DEB  00DC               	movwf	mktime@tt+2
 10605  0DEC  0841               	movf	?_ymd_to_scalar+1,w
 10606  0DED  00DB               	movwf	mktime@tt+1
 10607  0DEE  0840               	movf	?_ymd_to_scalar,w
 10608  0DEF  00DA               	movwf	mktime@tt
 10609  0DF0  30B2               	movlw	178
 10610  0DF1  00C0               	movwf	ymd_to_scalar@yr
 10611  0DF2  3007               	movlw	7
 10612  0DF3  00C1               	movwf	ymd_to_scalar@yr+1
 10613  0DF4  3001               	movlw	1
 10614  0DF5  00C2               	movwf	ymd_to_scalar@mo
 10615  0DF6  3000               	movlw	0
 10616  0DF7  00C3               	movwf	ymd_to_scalar@mo+1
 10617  0DF8  3001               	movlw	1
 10618  0DF9  00C4               	movwf	ymd_to_scalar@day
 10619  0DFA  3000               	movlw	0
 10620  0DFB  00C5               	movwf	ymd_to_scalar@day+1
 10621  0DFC  3188  203A  318D   	fcall	_ymd_to_scalar
 10622  0DFF  0020               	movlb	0	; select bank0
 10623  0E00  0840               	movf	?_ymd_to_scalar,w
 10624  0E01  02DA               	subwf	mktime@tt,f
 10625  0E02  0841               	movf	?_ymd_to_scalar+1,w
 10626  0E03  3BDB               	subwfb	mktime@tt+1,f
 10627  0E04  0842               	movf	?_ymd_to_scalar+2,w
 10628  0E05  3BDC               	subwfb	mktime@tt+2,f
 10629  0E06  0843               	movf	?_ymd_to_scalar+3,w
 10630  0E07  3BDD               	subwfb	mktime@tt+3,f
 10631  0E08  085E               	movf	mktime@timeptr,w
 10632  0E09  3E04               	addlw	4
 10633  0E0A  0086               	movwf	6
 10634  0E0B  0187               	clrf	7
 10635  0E0C  3F40               	moviw [0]fsr1
 10636  0E0D  00D4               	movwf	??_mktime
 10637  0E0E  3F41               	moviw [1]fsr1
 10638  0E0F  00D5               	movwf	??_mktime+1
 10639  0E10  0854               	movf	??_mktime,w
 10640  0E11  00D6               	movwf	??_mktime+2
 10641  0E12  0855               	movf	??_mktime+1,w
 10642  0E13  00D7               	movwf	??_mktime+3
 10643  0E14  3000               	movlw	0
 10644  0E15  1BD7               	btfsc	??_mktime+3,7
 10645  0E16  30FF               	movlw	255
 10646  0E17  00D8               	movwf	??_mktime+4
 10647  0E18  00D9               	movwf	??_mktime+5
 10648  0E19  085D               	movf	mktime@tt+3,w
 10649  0E1A  00A3               	movwf	___lmul@multiplier+3
 10650  0E1B  085C               	movf	mktime@tt+2,w
 10651  0E1C  00A2               	movwf	___lmul@multiplier+2
 10652  0E1D  085B               	movf	mktime@tt+1,w
 10653  0E1E  00A1               	movwf	___lmul@multiplier+1
 10654  0E1F  085A               	movf	mktime@tt,w
 10655  0E20  00A0               	movwf	___lmul@multiplier
 10656  0E21  3000               	movlw	0
 10657  0E22  00A7               	movwf	___lmul@multiplicand+3
 10658  0E23  3000               	movlw	0
 10659  0E24  00A6               	movwf	___lmul@multiplicand+2
 10660  0E25  3000               	movlw	0
 10661  0E26  00A5               	movwf	___lmul@multiplicand+1
 10662  0E27  3018               	movlw	24
 10663  0E28  00A4               	movwf	___lmul@multiplicand
 10664  0E29  3193  23EC  318D   	fcall	___lmul
 10665  0E2C  0020               	movlb	0	; select bank0
 10666  0E2D  0820               	movf	?___lmul,w
 10667  0E2E  07D6               	addwf	??_mktime+2,f
 10668  0E2F  0821               	movf	?___lmul+1,w
 10669  0E30  3DD7               	addwfc	??_mktime+3,f
 10670  0E31  0822               	movf	?___lmul+2,w
 10671  0E32  3DD8               	addwfc	??_mktime+4,f
 10672  0E33  0823               	movf	?___lmul+3,w
 10673  0E34  3DD9               	addwfc	??_mktime+5,f
 10674  0E35  0859               	movf	??_mktime+5,w
 10675  0E36  00DD               	movwf	mktime@tt+3
 10676  0E37  0858               	movf	??_mktime+4,w
 10677  0E38  00DC               	movwf	mktime@tt+2
 10678  0E39  0857               	movf	??_mktime+3,w
 10679  0E3A  00DB               	movwf	mktime@tt+1
 10680  0E3B  0856               	movf	??_mktime+2,w
 10681  0E3C  00DA               	movwf	mktime@tt
 10682  0E3D  085E               	movf	mktime@timeptr,w
 10683  0E3E  3E02               	addlw	2
 10684  0E3F  0086               	movwf	6
 10685  0E40  0187               	clrf	7
 10686  0E41  3F40               	moviw [0]fsr1
 10687  0E42  00D4               	movwf	??_mktime
 10688  0E43  3F41               	moviw [1]fsr1
 10689  0E44  00D5               	movwf	??_mktime+1
 10690  0E45  0854               	movf	??_mktime,w
 10691  0E46  00D6               	movwf	??_mktime+2
 10692  0E47  0855               	movf	??_mktime+1,w
 10693  0E48  00D7               	movwf	??_mktime+3
 10694  0E49  3000               	movlw	0
 10695  0E4A  1BD7               	btfsc	??_mktime+3,7
 10696  0E4B  30FF               	movlw	255
 10697  0E4C  00D8               	movwf	??_mktime+4
 10698  0E4D  00D9               	movwf	??_mktime+5
 10699  0E4E  085D               	movf	mktime@tt+3,w
 10700  0E4F  00A3               	movwf	___lmul@multiplier+3
 10701  0E50  085C               	movf	mktime@tt+2,w
 10702  0E51  00A2               	movwf	___lmul@multiplier+2
 10703  0E52  085B               	movf	mktime@tt+1,w
 10704  0E53  00A1               	movwf	___lmul@multiplier+1
 10705  0E54  085A               	movf	mktime@tt,w
 10706  0E55  00A0               	movwf	___lmul@multiplier
 10707  0E56  3000               	movlw	0
 10708  0E57  00A7               	movwf	___lmul@multiplicand+3
 10709  0E58  3000               	movlw	0
 10710  0E59  00A6               	movwf	___lmul@multiplicand+2
 10711  0E5A  3000               	movlw	0
 10712  0E5B  00A5               	movwf	___lmul@multiplicand+1
 10713  0E5C  303C               	movlw	60
 10714  0E5D  00A4               	movwf	___lmul@multiplicand
 10715  0E5E  3193  23EC  318D   	fcall	___lmul
 10716  0E61  0020               	movlb	0	; select bank0
 10717  0E62  0820               	movf	?___lmul,w
 10718  0E63  07D6               	addwf	??_mktime+2,f
 10719  0E64  0821               	movf	?___lmul+1,w
 10720  0E65  3DD7               	addwfc	??_mktime+3,f
 10721  0E66  0822               	movf	?___lmul+2,w
 10722  0E67  3DD8               	addwfc	??_mktime+4,f
 10723  0E68  0823               	movf	?___lmul+3,w
 10724  0E69  3DD9               	addwfc	??_mktime+5,f
 10725  0E6A  0859               	movf	??_mktime+5,w
 10726  0E6B  00DD               	movwf	mktime@tt+3
 10727  0E6C  0858               	movf	??_mktime+4,w
 10728  0E6D  00DC               	movwf	mktime@tt+2
 10729  0E6E  0857               	movf	??_mktime+3,w
 10730  0E6F  00DB               	movwf	mktime@tt+1
 10731  0E70  0856               	movf	??_mktime+2,w
 10732  0E71  00DA               	movwf	mktime@tt
 10733  0E72  085E               	movf	mktime@timeptr,w
 10734  0E73  0086               	movwf	6
 10735  0E74  0187               	clrf	7
 10736  0E75  3F40               	moviw [0]fsr1
 10737  0E76  00D4               	movwf	??_mktime
 10738  0E77  3F41               	moviw [1]fsr1
 10739  0E78  00D5               	movwf	??_mktime+1
 10740  0E79  0854               	movf	??_mktime,w
 10741  0E7A  00D6               	movwf	??_mktime+2
 10742  0E7B  0855               	movf	??_mktime+1,w
 10743  0E7C  00D7               	movwf	??_mktime+3
 10744  0E7D  3000               	movlw	0
 10745  0E7E  1BD7               	btfsc	??_mktime+3,7
 10746  0E7F  30FF               	movlw	255
 10747  0E80  00D8               	movwf	??_mktime+4
 10748  0E81  00D9               	movwf	??_mktime+5
 10749  0E82  085D               	movf	mktime@tt+3,w
 10750  0E83  00A3               	movwf	___lmul@multiplier+3
 10751  0E84  085C               	movf	mktime@tt+2,w
 10752  0E85  00A2               	movwf	___lmul@multiplier+2
 10753  0E86  085B               	movf	mktime@tt+1,w
 10754  0E87  00A1               	movwf	___lmul@multiplier+1
 10755  0E88  085A               	movf	mktime@tt,w
 10756  0E89  00A0               	movwf	___lmul@multiplier
 10757  0E8A  3000               	movlw	0
 10758  0E8B  00A7               	movwf	___lmul@multiplicand+3
 10759  0E8C  3000               	movlw	0
 10760  0E8D  00A6               	movwf	___lmul@multiplicand+2
 10761  0E8E  3000               	movlw	0
 10762  0E8F  00A5               	movwf	___lmul@multiplicand+1
 10763  0E90  303C               	movlw	60
 10764  0E91  00A4               	movwf	___lmul@multiplicand
 10765  0E92  3193  23EC         	fcall	___lmul
 10766  0E94  0020               	movlb	0	; select bank0
 10767  0E95  0820               	movf	?___lmul,w
 10768  0E96  07D6               	addwf	??_mktime+2,f
 10769  0E97  0821               	movf	?___lmul+1,w
 10770  0E98  3DD7               	addwfc	??_mktime+3,f
 10771  0E99  0822               	movf	?___lmul+2,w
 10772  0E9A  3DD8               	addwfc	??_mktime+4,f
 10773  0E9B  0823               	movf	?___lmul+3,w
 10774  0E9C  3DD9               	addwfc	??_mktime+5,f
 10775  0E9D  0859               	movf	??_mktime+5,w
 10776  0E9E  00DD               	movwf	mktime@tt+3
 10777  0E9F  0858               	movf	??_mktime+4,w
 10778  0EA0  00DC               	movwf	mktime@tt+2
 10779  0EA1  0857               	movf	??_mktime+3,w
 10780  0EA2  00DB               	movwf	mktime@tt+1
 10781  0EA3  0856               	movf	??_mktime+2,w
 10782  0EA4                     L1:	
 10783  0EA4  00DA               	movwf	mktime@tt
 10784  0EA5  085D               	movf	mktime@tt+3,w
 10785  0EA6  00D3               	movwf	?_mktime+3
 10786  0EA7  085C               	movf	mktime@tt+2,w
 10787  0EA8  00D2               	movwf	?_mktime+2
 10788  0EA9  085B               	movf	mktime@tt+1,w
 10789  0EAA  00D1               	movwf	?_mktime+1
 10790  0EAB  085A               	movf	mktime@tt,w
 10791  0EAC  00D0               	movwf	?_mktime
 10792  0EAD  0008               	return
 10793  0EAE                     __end_of_mktime:	
 10794                           
 10795                           	psect	text14
 10796  083A                     __ptext14:	
 10797 ;; *************** function _ymd_to_scalar *****************
 10798 ;; Defined at:
 10799 ;;		line 40 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;  yr              2   32[BANK0 ] unsigned int 
 10802 ;;  mo              2   34[BANK0 ] unsigned int 
 10803 ;;  day             2   36[BANK0 ] unsigned int 
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;  scalar          4   44[BANK0 ] long 
 10806 ;; Return value:  Size  Location     Type
 10807 ;;                  4   32[BANK0 ] long 
 10808 ;; Registers used:
 10809 ;;		wreg, status,2, status,0, pclath, cstack
 10810 ;; Tracked objects:
 10811 ;;		On entry : 0/0
 10812 ;;		On exit  : 0/0
 10813 ;;		Unchanged: 0/0
 10814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10815 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;Total ram usage:       16 bytes
 10820 ;; Hardware stack levels used:    1
 10821 ;; Hardware stack levels required when called:    8
 10822 ;; This function calls:
 10823 ;;		_isleap
 10824 ;;		_months_to_days
 10825 ;;		_years_to_days
 10826 ;; This function is called by:
 10827 ;;		_mktime
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831                           
 10832                           ;psect for function _ymd_to_scalar
 10833  083A                     _ymd_to_scalar:	
 10834                           
 10835                           ;incstack = 0
 10836                           ; Regs used in _ymd_to_scalar: [wreg+status,2+status,0+pclath+cstack]
 10837  083A  0020               	movlb	0	; select bank0
 10838  083B  0843               	movf	ymd_to_scalar@mo+1,w
 10839  083C  00AF               	movwf	months_to_days@month+1
 10840  083D  0842               	movf	ymd_to_scalar@mo,w
 10841  083E  00AE               	movwf	months_to_days@month
 10842  083F  3191  21ED  3188   	fcall	_months_to_days
 10843  0842  0020               	movlb	0	; select bank0
 10844  0843  0844               	movf	ymd_to_scalar@day,w
 10845  0844  072E               	addwf	?_months_to_days,w
 10846  0845  00CC               	movwf	ymd_to_scalar@scalar
 10847  0846  0845               	movf	ymd_to_scalar@day+1,w
 10848  0847  3D2F               	addwfc	?_months_to_days+1,w
 10849  0848  00CD               	movwf	ymd_to_scalar@scalar+1
 10850  0849  01CE               	clrf	ymd_to_scalar@scalar+2
 10851  084A  01CF               	clrf	ymd_to_scalar@scalar+3
 10852  084B  3000               	movlw	0
 10853  084C  0243               	subwf	ymd_to_scalar@mo+1,w
 10854  084D  3003               	movlw	3
 10855  084E  1903               	skipnz
 10856  084F  0242               	subwf	ymd_to_scalar@mo,w
 10857  0850  1C03               	skipc
 10858  0851  2875               	goto	l1390
 10859  0852  0841               	movf	ymd_to_scalar@yr+1,w
 10860  0853  00B5               	movwf	isleap@yr+1
 10861  0854  0840               	movf	ymd_to_scalar@yr,w
 10862  0855  00B4               	movwf	isleap@yr
 10863  0856  3194  244E  3188   	fcall	_isleap
 10864  0859  0020               	movlb	0	; select bank0
 10865  085A  0834               	movf	?_isleap,w
 10866  085B  0435               	iorwf	?_isleap+1,w
 10867  085C  1D03               	btfss	3,2
 10868  085D  2860               	goto	l4144
 10869  085E  3002               	movlw	2
 10870  085F  2861               	goto	L2
 10871  0860                     l4144:	
 10872  0860  3001               	movlw	1
 10873  0861                     L2:	
 10874  0861  00CA               	movwf	_ymd_to_scalar$2108
 10875  0862  3000               	movlw	0
 10876  0863  00CB               	movwf	_ymd_to_scalar$2108+1
 10877  0864  084A               	movf	_ymd_to_scalar$2108,w
 10878  0865  00C6               	movwf	??_ymd_to_scalar
 10879  0866  084B               	movf	_ymd_to_scalar$2108+1,w
 10880  0867  00C7               	movwf	??_ymd_to_scalar+1
 10881  0868  3000               	movlw	0
 10882  0869  1BC7               	btfsc	??_ymd_to_scalar+1,7
 10883  086A  30FF               	movlw	255
 10884  086B  00C8               	movwf	??_ymd_to_scalar+2
 10885  086C  00C9               	movwf	??_ymd_to_scalar+3
 10886  086D  0846               	movf	??_ymd_to_scalar,w
 10887  086E  02CC               	subwf	ymd_to_scalar@scalar,f
 10888  086F  0847               	movf	??_ymd_to_scalar+1,w
 10889  0870  3BCD               	subwfb	ymd_to_scalar@scalar+1,f
 10890  0871  0848               	movf	??_ymd_to_scalar+2,w
 10891  0872  3BCE               	subwfb	ymd_to_scalar@scalar+2,f
 10892  0873  0849               	movf	??_ymd_to_scalar+3,w
 10893  0874  3BCF               	subwfb	ymd_to_scalar@scalar+3,f
 10894  0875                     l1390:	
 10895  0875  3001               	movlw	1
 10896  0876  02C0               	subwf	ymd_to_scalar@yr,f
 10897  0877  3000               	movlw	0
 10898  0878  3BC1               	subwfb	ymd_to_scalar@yr+1,f
 10899  0879  0841               	movf	ymd_to_scalar@yr+1,w
 10900  087A  00AF               	movwf	years_to_days@yr+1
 10901  087B  0840               	movf	ymd_to_scalar@yr,w
 10902  087C  00AE               	movwf	years_to_days@yr
 10903  087D  3189  21B1         	fcall	_years_to_days
 10904  087F  0020               	movlb	0	; select bank0
 10905  0880  082E               	movf	?_years_to_days,w
 10906  0881  07CC               	addwf	ymd_to_scalar@scalar,f
 10907  0882  082F               	movf	?_years_to_days+1,w
 10908  0883  3DCD               	addwfc	ymd_to_scalar@scalar+1,f
 10909  0884  0830               	movf	?_years_to_days+2,w
 10910  0885  3DCE               	addwfc	ymd_to_scalar@scalar+2,f
 10911  0886  0831               	movf	?_years_to_days+3,w
 10912  0887  3DCF               	addwfc	ymd_to_scalar@scalar+3,f
 10913  0888  084F               	movf	ymd_to_scalar@scalar+3,w
 10914  0889  00C3               	movwf	?_ymd_to_scalar+3
 10915  088A  084E               	movf	ymd_to_scalar@scalar+2,w
 10916  088B  00C2               	movwf	?_ymd_to_scalar+2
 10917  088C  084D               	movf	ymd_to_scalar@scalar+1,w
 10918  088D  00C1               	movwf	?_ymd_to_scalar+1
 10919  088E  084C               	movf	ymd_to_scalar@scalar,w
 10920  088F  00C0               	movwf	?_ymd_to_scalar
 10921  0890  0008               	return
 10922  0891                     __end_of_ymd_to_scalar:	
 10923                           
 10924                           	psect	text15
 10925  09B1                     __ptext15:	
 10926 ;; *************** function _years_to_days *****************
 10927 ;; Defined at:
 10928 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;  yr              2   14[BANK0 ] unsigned int 
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  4   14[BANK0 ] long 
 10935 ;; Registers used:
 10936 ;;		wreg, status,2, status,0, pclath, cstack
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;Total ram usage:       18 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; Hardware stack levels required when called:    7
 10949 ;; This function calls:
 10950 ;;		___lmul
 10951 ;;		___lwdiv
 10952 ;; This function is called by:
 10953 ;;		_ymd_to_scalar
 10954 ;; This function uses a non-reentrant model
 10955 ;;
 10956                           
 10957                           
 10958                           ;psect for function _years_to_days
 10959  09B1                     _years_to_days:	
 10960                           
 10961                           ;incstack = 0
 10962                           ; Regs used in _years_to_days: [wreg+status,2+status,0+pclath+cstack]
 10963  09B1  3064               	movlw	100
 10964  09B2  0020               	movlb	0	; select bank0
 10965  09B3  00A6               	movwf	___lwdiv@divisor
 10966  09B4  3000               	movlw	0
 10967  09B5  00A7               	movwf	___lwdiv@divisor+1
 10968  09B6  082F               	movf	years_to_days@yr+1,w
 10969  09B7  00A9               	movwf	___lwdiv@dividend+1
 10970  09B8  082E               	movf	years_to_days@yr,w
 10971  09B9  00A8               	movwf	___lwdiv@dividend
 10972  09BA  3194  2482  3189   	fcall	___lwdiv
 10973  09BD  0020               	movlb	0	; select bank0
 10974  09BE  0826               	movf	?___lwdiv,w
 10975  09BF  00B2               	movwf	??_years_to_days
 10976  09C0  0827               	movf	?___lwdiv+1,w
 10977  09C1  00B3               	movwf	??_years_to_days+1
 10978  09C2  01B4               	clrf	??_years_to_days+2
 10979  09C3  01B5               	clrf	??_years_to_days+3
 10980  09C4  09B2               	comf	??_years_to_days,f
 10981  09C5  09B3               	comf	??_years_to_days+1,f
 10982  09C6  09B4               	comf	??_years_to_days+2,f
 10983  09C7  09B5               	comf	??_years_to_days+3,f
 10984  09C8  0AB2               	incf	??_years_to_days,f
 10985  09C9  1903               	skipnz
 10986  09CA  0AB3               	incf	??_years_to_days+1,f
 10987  09CB  1903               	skipnz
 10988  09CC  0AB4               	incf	??_years_to_days+2,f
 10989  09CD  1903               	skipnz
 10990  09CE  0AB5               	incf	??_years_to_days+3,f
 10991  09CF  3090               	movlw	144
 10992  09D0  00A6               	movwf	___lwdiv@divisor
 10993  09D1  3001               	movlw	1
 10994  09D2  00A7               	movwf	___lwdiv@divisor+1
 10995  09D3  082F               	movf	years_to_days@yr+1,w
 10996  09D4  00A9               	movwf	___lwdiv@dividend+1
 10997  09D5  082E               	movf	years_to_days@yr,w
 10998  09D6  00A8               	movwf	___lwdiv@dividend
 10999  09D7  3194  2482  3189   	fcall	___lwdiv
 11000  09DA  0020               	movlb	0	; select bank0
 11001  09DB  0826               	movf	?___lwdiv,w
 11002  09DC  00B6               	movwf	??_years_to_days+4
 11003  09DD  0827               	movf	?___lwdiv+1,w
 11004  09DE  00B7               	movwf	??_years_to_days+5
 11005  09DF  01B8               	clrf	??_years_to_days+6
 11006  09E0  01B9               	clrf	??_years_to_days+7
 11007  09E1  082F               	movf	years_to_days@yr+1,w
 11008  09E2  00BB               	movwf	??_years_to_days+9
 11009  09E3  082E               	movf	years_to_days@yr,w
 11010  09E4  00BA               	movwf	??_years_to_days+8
 11011  09E5  36BB               	lsrf	??_years_to_days+9,f
 11012  09E6  0CBA               	rrf	??_years_to_days+8,f
 11013  09E7  36BB               	lsrf	??_years_to_days+9,f
 11014  09E8  0CBA               	rrf	??_years_to_days+8,f
 11015  09E9  083A               	movf	??_years_to_days+8,w
 11016  09EA  00BC               	movwf	??_years_to_days+10
 11017  09EB  083B               	movf	??_years_to_days+9,w
 11018  09EC  00BD               	movwf	??_years_to_days+11
 11019  09ED  01BE               	clrf	??_years_to_days+12
 11020  09EE  01BF               	clrf	??_years_to_days+13
 11021  09EF  082E               	movf	years_to_days@yr,w
 11022  09F0  00A0               	movwf	___lmul@multiplier
 11023  09F1  082F               	movf	years_to_days@yr+1,w
 11024  09F2  00A1               	movwf	___lmul@multiplier+1
 11025  09F3  01A2               	clrf	___lmul@multiplier+2
 11026  09F4  01A3               	clrf	___lmul@multiplier+3
 11027  09F5  3000               	movlw	0
 11028  09F6  00A7               	movwf	___lmul@multiplicand+3
 11029  09F7  3000               	movlw	0
 11030  09F8  00A6               	movwf	___lmul@multiplicand+2
 11031  09F9  3001               	movlw	1
 11032  09FA  00A5               	movwf	___lmul@multiplicand+1
 11033  09FB  306D               	movlw	109
 11034  09FC  00A4               	movwf	___lmul@multiplicand
 11035  09FD  3193  23EC         	fcall	___lmul
 11036  09FF  0020               	movlb	0	; select bank0
 11037  0A00  0820               	movf	?___lmul,w
 11038  0A01  07BC               	addwf	??_years_to_days+10,f
 11039  0A02  0821               	movf	?___lmul+1,w
 11040  0A03  3DBD               	addwfc	??_years_to_days+11,f
 11041  0A04  0822               	movf	?___lmul+2,w
 11042  0A05  3DBE               	addwfc	??_years_to_days+12,f
 11043  0A06  0823               	movf	?___lmul+3,w
 11044  0A07  3DBF               	addwfc	??_years_to_days+13,f
 11045  0A08  083C               	movf	??_years_to_days+10,w
 11046  0A09  07B6               	addwf	??_years_to_days+4,f
 11047  0A0A  083D               	movf	??_years_to_days+11,w
 11048  0A0B  3DB7               	addwfc	??_years_to_days+5,f
 11049  0A0C  083E               	movf	??_years_to_days+12,w
 11050  0A0D  3DB8               	addwfc	??_years_to_days+6,f
 11051  0A0E  083F               	movf	??_years_to_days+13,w
 11052  0A0F  3DB9               	addwfc	??_years_to_days+7,f
 11053  0A10  0836               	movf	??_years_to_days+4,w
 11054  0A11  07B2               	addwf	??_years_to_days,f
 11055  0A12  0837               	movf	??_years_to_days+5,w
 11056  0A13  3DB3               	addwfc	??_years_to_days+1,f
 11057  0A14  0838               	movf	??_years_to_days+6,w
 11058  0A15  3DB4               	addwfc	??_years_to_days+2,f
 11059  0A16  0839               	movf	??_years_to_days+7,w
 11060  0A17  3DB5               	addwfc	??_years_to_days+3,f
 11061  0A18  0835               	movf	??_years_to_days+3,w
 11062  0A19  00B1               	movwf	?_years_to_days+3
 11063  0A1A  0834               	movf	??_years_to_days+2,w
 11064  0A1B  00B0               	movwf	?_years_to_days+2
 11065  0A1C  0833               	movf	??_years_to_days+1,w
 11066  0A1D  00AF               	movwf	?_years_to_days+1
 11067  0A1E  0832               	movf	??_years_to_days,w
 11068  0A1F  00AE               	movwf	?_years_to_days
 11069  0A20  0008               	return
 11070  0A21                     __end_of_years_to_days:	
 11071                           
 11072                           	psect	text16
 11073  13EC                     __ptext16:	
 11074 ;; *************** function ___lmul *****************
 11075 ;; Defined at:
 11076 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 11077 ;; Parameters:    Size  Location     Type
 11078 ;;  multiplier      4    0[BANK0 ] unsigned long 
 11079 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;  product         4    8[BANK0 ] unsigned long 
 11082 ;; Return value:  Size  Location     Type
 11083 ;;                  4    0[BANK0 ] unsigned long 
 11084 ;; Registers used:
 11085 ;;		wreg, status,2, status,0
 11086 ;; Tracked objects:
 11087 ;;		On entry : 0/0
 11088 ;;		On exit  : 0/0
 11089 ;;		Unchanged: 0/0
 11090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11091 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;Total ram usage:       12 bytes
 11096 ;; Hardware stack levels used:    1
 11097 ;; Hardware stack levels required when called:    6
 11098 ;; This function calls:
 11099 ;;		Nothing
 11100 ;; This function is called by:
 11101 ;;		_years_to_days
 11102 ;;		_mktime
 11103 ;;		_localtime
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           
 11108                           ;psect for function ___lmul
 11109  13EC                     ___lmul:	
 11110                           
 11111                           ;incstack = 0
 11112                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11113  13EC  3000               	movlw	0
 11114  13ED  0020               	movlb	0	; select bank0
 11115  13EE  00AB               	movwf	___lmul@product+3
 11116  13EF  3000               	movlw	0
 11117  13F0  00AA               	movwf	___lmul@product+2
 11118  13F1  3000               	movlw	0
 11119  13F2  00A9               	movwf	___lmul@product+1
 11120  13F3  3000               	movlw	0
 11121  13F4  00A8               	movwf	___lmul@product
 11122  13F5                     l3728:	
 11123  13F5  1C20               	btfss	___lmul@multiplier,0
 11124  13F6  2BFF               	goto	l3732
 11125  13F7  0824               	movf	___lmul@multiplicand,w
 11126  13F8  07A8               	addwf	___lmul@product,f
 11127  13F9  0825               	movf	___lmul@multiplicand+1,w
 11128  13FA  3DA9               	addwfc	___lmul@product+1,f
 11129  13FB  0826               	movf	___lmul@multiplicand+2,w
 11130  13FC  3DAA               	addwfc	___lmul@product+2,f
 11131  13FD  0827               	movf	___lmul@multiplicand+3,w
 11132  13FE  3DAB               	addwfc	___lmul@product+3,f
 11133  13FF                     l3732:	
 11134  13FF  3001               	movlw	1
 11135  1400                     u2015:	
 11136  1400  35A4               	lslf	___lmul@multiplicand,f
 11137  1401  0DA5               	rlf	___lmul@multiplicand+1,f
 11138  1402  0DA6               	rlf	___lmul@multiplicand+2,f
 11139  1403  0DA7               	rlf	___lmul@multiplicand+3,f
 11140  1404  0B89               	decfsz	9,f
 11141  1405  2C00               	goto	u2015
 11142  1406  3001               	movlw	1
 11143  1407                     u2025:	
 11144  1407  36A3               	lsrf	___lmul@multiplier+3,f
 11145  1408  0CA2               	rrf	___lmul@multiplier+2,f
 11146  1409  0CA1               	rrf	___lmul@multiplier+1,f
 11147  140A  0CA0               	rrf	___lmul@multiplier,f
 11148  140B  0B89               	decfsz	9,f
 11149  140C  2C07               	goto	u2025
 11150  140D  0823               	movf	___lmul@multiplier+3,w
 11151  140E  0422               	iorwf	___lmul@multiplier+2,w
 11152  140F  0421               	iorwf	___lmul@multiplier+1,w
 11153  1410  0420               	iorwf	___lmul@multiplier,w
 11154  1411  1D03               	skipz
 11155  1412  2BF5               	goto	l3728
 11156  1413  082B               	movf	___lmul@product+3,w
 11157  1414  00A3               	movwf	?___lmul+3
 11158  1415  082A               	movf	___lmul@product+2,w
 11159  1416  00A2               	movwf	?___lmul+2
 11160  1417  0829               	movf	___lmul@product+1,w
 11161  1418  00A1               	movwf	?___lmul+1
 11162  1419  0828               	movf	___lmul@product,w
 11163  141A  00A0               	movwf	?___lmul
 11164  141B  0008               	return
 11165  141C                     __end_of___lmul:	
 11166                           
 11167                           	psect	text17
 11168  11ED                     __ptext17:	
 11169 ;; *************** function _months_to_days *****************
 11170 ;; Defined at:
 11171 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;  month           2   14[BANK0 ] unsigned int 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;		None
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  2   14[BANK0 ] unsigned int 
 11178 ;; Registers used:
 11179 ;;		wreg, status,2, status,0, pclath, cstack
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11188 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11189 ;;Total ram usage:        2 bytes
 11190 ;; Hardware stack levels used:    1
 11191 ;; Hardware stack levels required when called:    7
 11192 ;; This function calls:
 11193 ;;		___lwdiv
 11194 ;;		___wmul
 11195 ;; This function is called by:
 11196 ;;		_ymd_to_scalar
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           
 11201                           ;psect for function _months_to_days
 11202  11ED                     _months_to_days:	
 11203                           
 11204                           ;incstack = 0
 11205                           ; Regs used in _months_to_days: [wreg+status,2+status,0+pclath+cstack]
 11206  11ED  3064               	movlw	100
 11207  11EE  0020               	movlb	0	; select bank0
 11208  11EF  00A6               	movwf	___lwdiv@divisor
 11209  11F0  3000               	movlw	0
 11210  11F1  00A7               	movwf	___lwdiv@divisor+1
 11211  11F2  082F               	movf	months_to_days@month+1,w
 11212  11F3  00A1               	movwf	___wmul@multiplier+1
 11213  11F4  082E               	movf	months_to_days@month,w
 11214  11F5  00A0               	movwf	___wmul@multiplier
 11215  11F6  30F1               	movlw	241
 11216  11F7  00A2               	movwf	___wmul@multiplicand
 11217  11F8  300B               	movlw	11
 11218  11F9  00A3               	movwf	___wmul@multiplicand+1
 11219  11FA  3191  2195  3191   	fcall	___wmul
 11220  11FD  0020               	movlb	0	; select bank0
 11221  11FE  0820               	movf	?___wmul,w
 11222  11FF  3E41               	addlw	65
 11223  1200  00A8               	movwf	___lwdiv@dividend
 11224  1201  30F4               	movlw	244
 11225  1202  3D21               	addwfc	?___wmul+1,w
 11226  1203  00A9               	movwf	___lwdiv@dividend+1
 11227  1204  3194  2482         	fcall	___lwdiv
 11228  1206  0020               	movlb	0	; select bank0
 11229  1207  0827               	movf	?___lwdiv+1,w
 11230  1208  00AF               	movwf	?_months_to_days+1
 11231  1209  0826               	movf	?___lwdiv,w
 11232  120A  00AE               	movwf	?_months_to_days
 11233  120B  0008               	return
 11234  120C                     __end_of_months_to_days:	
 11235                           
 11236                           	psect	text18
 11237  144E                     __ptext18:	
 11238 ;; *************** function _isleap *****************
 11239 ;; Defined at:
 11240 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 11241 ;; Parameters:    Size  Location     Type
 11242 ;;  yr              2   20[BANK0 ] unsigned int 
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;		None
 11245 ;; Return value:  Size  Location     Type
 11246 ;;                  2   20[BANK0 ] int 
 11247 ;; Registers used:
 11248 ;;		wreg, status,2, status,0, pclath, cstack
 11249 ;; Tracked objects:
 11250 ;;		On entry : 0/0
 11251 ;;		On exit  : 0/0
 11252 ;;		Unchanged: 0/0
 11253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11254 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11257 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;Total ram usage:        5 bytes
 11259 ;; Hardware stack levels used:    1
 11260 ;; Hardware stack levels required when called:    7
 11261 ;; This function calls:
 11262 ;;		___lwmod
 11263 ;; This function is called by:
 11264 ;;		_ymd_to_scalar
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           
 11269                           ;psect for function _isleap
 11270  144E                     _isleap:	
 11271                           
 11272                           ;incstack = 0
 11273                           ; Regs used in _isleap: [wreg+status,2+status,0+pclath+cstack]
 11274  144E  0020               	movlb	0	; select bank0
 11275  144F  01B8               	clrf	_isleap$2096
 11276  1450  0AB8               	incf	_isleap$2096,f
 11277  1451  3090               	movlw	144
 11278  1452  00AE               	movwf	___lwmod@divisor
 11279  1453  3001               	movlw	1
 11280  1454  00AF               	movwf	___lwmod@divisor+1
 11281  1455  0835               	movf	isleap@yr+1,w
 11282  1456  00B1               	movwf	___lwmod@dividend+1
 11283  1457  0834               	movf	isleap@yr,w
 11284  1458  00B0               	movwf	___lwmod@dividend
 11285  1459  3193  2362  3194   	fcall	___lwmod
 11286  145C  0020               	movlb	0	; select bank0
 11287  145D  082E               	movf	?___lwmod,w
 11288  145E  042F               	iorwf	?___lwmod+1,w
 11289  145F  1903               	btfsc	3,2
 11290  1460  2C7A               	goto	l3978
 11291  1461  3003               	movlw	3
 11292  1462  0534               	andwf	isleap@yr,w
 11293  1463  00B6               	movwf	??_isleap
 11294  1464  3000               	movlw	0
 11295  1465  0535               	andwf	isleap@yr+1,w
 11296  1466  00B7               	movwf	??_isleap+1
 11297  1467  0836               	movf	??_isleap,w
 11298  1468  0437               	iorwf	??_isleap+1,w
 11299  1469  1D03               	btfss	3,2
 11300  146A  2C79               	goto	l3976
 11301  146B  3064               	movlw	100
 11302  146C  00AE               	movwf	___lwmod@divisor
 11303  146D  3000               	movlw	0
 11304  146E  00AF               	movwf	___lwmod@divisor+1
 11305  146F  0835               	movf	isleap@yr+1,w
 11306  1470  00B1               	movwf	___lwmod@dividend+1
 11307  1471  0834               	movf	isleap@yr,w
 11308  1472  00B0               	movwf	___lwmod@dividend
 11309  1473  3193  2362         	fcall	___lwmod
 11310  1475  0020               	movlb	0	; select bank0
 11311  1476  082E               	movf	?___lwmod,w
 11312  1477  042F               	iorwf	?___lwmod+1,w
 11313  1478  1903               	btfsc	3,2
 11314  1479                     l3976:	
 11315  1479  01B8               	clrf	_isleap$2096
 11316  147A                     l3978:	
 11317  147A  0838               	movf	_isleap$2096,w
 11318  147B  00B6               	movwf	??_isleap
 11319  147C  01B7               	clrf	??_isleap+1
 11320  147D  0836               	movf	??_isleap,w
 11321  147E  00B4               	movwf	?_isleap
 11322  147F  0837               	movf	??_isleap+1,w
 11323  1480  00B5               	movwf	?_isleap+1
 11324  1481  0008               	return
 11325  1482                     __end_of_isleap:	
 11326                           
 11327                           	psect	text19
 11328  1161                     __ptext19:	
 11329 ;; *************** function _memset *****************
 11330 ;; Defined at:
 11331 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;  p1              2    0[BANK0 ] PTR void 
 11334 ;;		 -> gmtime@tim(18), rtc6_GetTime@tm_t(18), 
 11335 ;;  c               2    2[BANK0 ] int 
 11336 ;;  n               2    4[BANK0 ] unsigned int 
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;  p               2    6[BANK0 ] PTR unsigned char 
 11339 ;;		 -> gmtime@tim(18), rtc6_GetTime@tm_t(18), 
 11340 ;; Return value:  Size  Location     Type
 11341 ;;                  2    0[BANK0 ] PTR void 
 11342 ;; Registers used:
 11343 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11344 ;; Tracked objects:
 11345 ;;		On entry : 0/0
 11346 ;;		On exit  : 0/0
 11347 ;;		Unchanged: 0/0
 11348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11349 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11352 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11353 ;;Total ram usage:        8 bytes
 11354 ;; Hardware stack levels used:    1
 11355 ;; Hardware stack levels required when called:    6
 11356 ;; This function calls:
 11357 ;;		Nothing
 11358 ;; This function is called by:
 11359 ;;		_rtc6_SetTime
 11360 ;;		_rtc6_GetTime
 11361 ;;		_main
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365                           
 11366                           ;psect for function _memset
 11367  1161                     _memset:	
 11368                           
 11369                           ;incstack = 0
 11370                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11371  1161  0020               	movlb	0	; select bank0
 11372  1162  0821               	movf	memset@p1+1,w
 11373  1163  00A7               	movwf	memset@p+1
 11374  1164  0820               	movf	memset@p1,w
 11375  1165  00A6               	movwf	memset@p
 11376  1166                     l4282:	
 11377  1166  3001               	movlw	1
 11378  1167  02A4               	subwf	memset@n,f
 11379  1168  3000               	movlw	0
 11380  1169  3BA5               	subwfb	memset@n+1,f
 11381  116A  0A24               	incf	memset@n,w
 11382  116B  1903               	btfsc	3,2
 11383  116C  0A25               	incf	memset@n+1,w
 11384  116D  1903               	btfsc	3,2
 11385  116E  0008               	return
 11386  116F  0826               	movf	memset@p,w
 11387  1170  0086               	movwf	6
 11388  1171  0827               	movf	memset@p+1,w
 11389  1172  0087               	movwf	7
 11390  1173  0822               	movf	memset@c,w
 11391  1174  0081               	movwf	1
 11392  1175  3001               	movlw	1
 11393  1176  07A6               	addwf	memset@p,f
 11394  1177  3000               	movlw	0
 11395  1178  3DA7               	addwfc	memset@p+1,f
 11396  1179  2966               	goto	l4282
 11397  117A                     __end_of_memset:	
 11398                           ;	Return value of _memset is never used
 11399                           
 11400                           
 11401                           	psect	text20
 11402  13BD                     __ptext20:	
 11403 ;; *************** function _Write_String *****************
 11404 ;; Defined at:
 11405 ;;		line 108 in file "oled.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;  message         2   51[BANK0 ] PTR unsigned char 
 11408 ;;		 -> main@timeStr(0), main@welcomeMsg(12), 
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;  len             2   53[BANK0 ] unsigned int 
 11411 ;; Return value:  Size  Location     Type
 11412 ;;                  1    wreg      void 
 11413 ;; Registers used:
 11414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11415 ;; Tracked objects:
 11416 ;;		On entry : 0/0
 11417 ;;		On exit  : 0/0
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11423 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11424 ;;Total ram usage:        4 bytes
 11425 ;; Hardware stack levels used:    1
 11426 ;; Hardware stack levels required when called:   10
 11427 ;; This function calls:
 11428 ;;		_Modify_Data
 11429 ;;		_OLED_PutPicture
 11430 ;;		_sprintf
 11431 ;;		_strlen
 11432 ;; This function is called by:
 11433 ;;		_main
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437                           
 11438                           ;psect for function _Write_String
 11439  13BD                     _Write_String:	
 11440                           
 11441                           ;oled.c: 109: size_t len = strlen(message);
 11442                           
 11443                           ;incstack = 0
 11444                           ; Regs used in _Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11445  13BD  0020               	movlb	0	; select bank0
 11446  13BE  0854               	movf	Write_String@message+1,w
 11447  13BF  00A1               	movwf	strlen@s+1
 11448  13C0  0853               	movf	Write_String@message,w
 11449  13C1  00A0               	movwf	strlen@s
 11450  13C2  3191  21CE  3193   	fcall	_strlen
 11451  13C5  0020               	movlb	0	; select bank0
 11452  13C6  0821               	movf	?_strlen+1,w
 11453  13C7  00D6               	movwf	Write_String@len+1
 11454  13C8  0820               	movf	?_strlen,w
 11455  13C9  00D5               	movwf	Write_String@len
 11456                           
 11457                           ;oled.c: 110: sprintf(CharacterArray, message);
 11458  13CA  308C               	movlw	140
 11459  13CB  00B4               	movwf	sprintf@sp
 11460  13CC  3023               	movlw	35
 11461  13CD  00B5               	movwf	sprintf@sp+1
 11462  13CE  0854               	movf	Write_String@message+1,w
 11463  13CF  00B7               	movwf	sprintf@f+1
 11464  13D0  0853               	movf	Write_String@message,w
 11465  13D1  00B6               	movwf	sprintf@f
 11466  13D2  3186  2624  3193   	fcall	_sprintf
 11467                           
 11468                           ;oled.c: 111: Modify_Data(CharacterArray, 0, len);
 11469  13D5  308C               	movlw	140
 11470  13D6  0020               	movlb	0	; select bank0
 11471  13D7  00A6               	movwf	Modify_Data@c
 11472  13D8  3023               	movlw	35
 11473  13D9  00A7               	movwf	Modify_Data@c+1
 11474  13DA  3000               	movlw	0
 11475  13DB  00A8               	movwf	Modify_Data@offset
 11476  13DC  00A9               	movwf	Modify_Data@offset+1
 11477  13DD  0856               	movf	Write_String@len+1,w
 11478  13DE  00AB               	movwf	Modify_Data@limit+1
 11479  13DF  0855               	movf	Write_String@len,w
 11480  13E0  00AA               	movwf	Modify_Data@limit
 11481  13E1  318A  2221  3193   	fcall	_Modify_Data
 11482                           
 11483                           ;oled.c: 112: OLED_PutPicture(displayArray);
 11484  13E4  30B1               	movlw	177
 11485  13E5  0020               	movlb	0	; select bank0
 11486  13E6  00A4               	movwf	OLED_PutPicture@pic
 11487  13E7  3021               	movlw	33
 11488  13E8  00A5               	movwf	OLED_PutPicture@pic+1
 11489  13E9  3194  24EE         	fcall	_OLED_PutPicture
 11490  13EB  0008               	return
 11491  13EC                     __end_of_Write_String:	
 11492                           
 11493                           	psect	text21
 11494  11CE                     __ptext21:	
 11495 ;; *************** function _strlen *****************
 11496 ;; Defined at:
 11497 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 11500 ;;		 -> main@timeStr(0), main@welcomeMsg(12), 
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 11503 ;;		 -> main@timeStr(0), main@welcomeMsg(12), 
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  2    0[BANK0 ] unsigned int 
 11506 ;; Registers used:
 11507 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11517 ;;Total ram usage:        6 bytes
 11518 ;; Hardware stack levels used:    1
 11519 ;; Hardware stack levels required when called:    6
 11520 ;; This function calls:
 11521 ;;		Nothing
 11522 ;; This function is called by:
 11523 ;;		_Write_String
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           
 11528                           ;psect for function _strlen
 11529  11CE                     _strlen:	
 11530                           
 11531                           ;incstack = 0
 11532                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 11533  11CE  0020               	movlb	0	; select bank0
 11534  11CF  0821               	movf	strlen@s+1,w
 11535  11D0  00A5               	movwf	strlen@cp+1
 11536  11D1  0820               	movf	strlen@s,w
 11537  11D2  00A4               	movwf	strlen@cp
 11538  11D3                     l4556:	
 11539  11D3  0824               	movf	strlen@cp,w
 11540  11D4  0086               	movwf	6
 11541  11D5  0825               	movf	strlen@cp+1,w
 11542  11D6  0087               	movwf	7
 11543  11D7  0801               	movf	1,w
 11544  11D8  1903               	btfsc	3,2
 11545  11D9  29DF               	goto	l4558
 11546  11DA  3001               	movlw	1
 11547  11DB  07A4               	addwf	strlen@cp,f
 11548  11DC  3000               	movlw	0
 11549  11DD  3DA5               	addwfc	strlen@cp+1,f
 11550  11DE  29D3               	goto	l4556
 11551  11DF                     l4558:	
 11552  11DF  0920               	comf	strlen@s,w
 11553  11E0  00A2               	movwf	??_strlen
 11554  11E1  0921               	comf	strlen@s+1,w
 11555  11E2  00A3               	movwf	??_strlen+1
 11556  11E3  0AA2               	incf	??_strlen,f
 11557  11E4  1903               	skipnz
 11558  11E5  0AA3               	incf	??_strlen+1,f
 11559  11E6  0824               	movf	strlen@cp,w
 11560  11E7  0722               	addwf	??_strlen,w
 11561  11E8  00A0               	movwf	?_strlen
 11562  11E9  0825               	movf	strlen@cp+1,w
 11563  11EA  3D23               	addwfc	??_strlen+1,w
 11564  11EB  00A1               	movwf	?_strlen+1
 11565  11EC  0008               	return
 11566  11ED                     __end_of_strlen:	
 11567                           
 11568                           	psect	text22
 11569  0624                     __ptext22:	
 11570 ;; *************** function _sprintf *****************
 11571 ;; Defined at:
 11572 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11573 ;; Parameters:    Size  Location     Type
 11574 ;;  sp              2   20[BANK0 ] PTR unsigned char 
 11575 ;;		 -> CharacterArray(100), main@timeStr(0), 
 11576 ;;  f               2   22[BANK0 ] PTR const unsigned char 
 11577 ;;		 -> STR_1(31), main@timeStr(0), main@welcomeMsg(12), 
 11578 ;; Auto vars:     Size  Location     Type
 11579 ;;  tmpval          4    0        struct .
 11580 ;;  width           2   48[BANK0 ] int 
 11581 ;;  val             2   45[BANK0 ] unsigned int 
 11582 ;;  len             2   43[BANK0 ] unsigned int 
 11583 ;;  c               1   50[BANK0 ] char 
 11584 ;;  flag            1   47[BANK0 ] unsigned char 
 11585 ;;  prec            1   42[BANK0 ] char 
 11586 ;;  cp              1   41[BANK0 ] PTR const unsigned char 
 11587 ;;		 -> sprintf@c(1), 
 11588 ;;  ap              1   40[BANK0 ] PTR void [1]
 11589 ;;		 -> ?_sprintf(2), 
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  2   20[BANK0 ] int 
 11592 ;; Registers used:
 11593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11599 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;Total ram usage:       31 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    7
 11606 ;; This function calls:
 11607 ;;		___lwdiv
 11608 ;;		___lwmod
 11609 ;;		___wmul
 11610 ;;		_isdigit
 11611 ;; This function is called by:
 11612 ;;		_main
 11613 ;;		_Write_String
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           
 11617                           
 11618                           ;psect for function _sprintf
 11619  0624                     _sprintf:	
 11620                           
 11621                           ;doprnt.c: 494: va_list ap;
 11622                           ;doprnt.c: 499: signed char c;
 11623                           ;doprnt.c: 501: int width;
 11624                           ;doprnt.c: 506: signed char prec;
 11625                           ;doprnt.c: 508: unsigned char flag;
 11626                           ;doprnt.c: 523: union {
 11627                           ;doprnt.c: 524: unsigned long vd;
 11628                           ;doprnt.c: 525: double integ;
 11629                           ;doprnt.c: 526: } tmpval;
 11630                           ;doprnt.c: 528: unsigned int val;
 11631                           ;doprnt.c: 529: unsigned len;
 11632                           ;doprnt.c: 530: const char * cp;
 11633                           ;doprnt.c: 533: *ap = __va_start();
 11634                           
 11635                           ;incstack = 0
 11636                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11637  0624  3038               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
 11638  0625  0020               	movlb	0	; select bank0
 11639  0626  00C4               	movwf	??_sprintf
 11640  0627  0844               	movf	??_sprintf,w
 11641  0628  00C8               	movwf	sprintf@ap
 11642  0629                     l4522:	
 11643                           ;doprnt.c: 536: while(c = *f++) {
 11644                           
 11645  0629  0837               	movf	sprintf@f+1,w
 11646  062A  00C5               	movwf	??_sprintf+1
 11647  062B  0836               	movf	sprintf@f,w
 11648  062C  00C4               	movwf	??_sprintf
 11649  062D  0AB6               	incf	sprintf@f,f
 11650  062E  1903               	skipnz
 11651  062F  0AB7               	incf	sprintf@f+1,f
 11652  0630  0844               	movf	??_sprintf,w
 11653  0631  0084               	movwf	4
 11654  0632  0845               	movf	??_sprintf+1,w
 11655  0633  0085               	movwf	5
 11656  0634  0800               	movf	0,w	;code access
 11657  0635  00C6               	movwf	??_sprintf+2
 11658  0636  0846               	movf	??_sprintf+2,w
 11659  0637  00D2               	movwf	sprintf@c
 11660  0638  0852               	movf	sprintf@c,w
 11661  0639  1903               	btfsc	3,2
 11662  063A  2FE7               	goto	l4524
 11663                           
 11664                           ;doprnt.c: 538: if(c != '%')
 11665  063B  3025               	movlw	37
 11666  063C  0652               	xorwf	sprintf@c,w
 11667  063D  1903               	btfsc	3,2
 11668  063E  2E4A               	goto	l4404
 11669                           
 11670                           ;doprnt.c: 540: {
 11671                           ;doprnt.c: 541: ((*sp++ = (c)));
 11672  063F  0834               	movf	sprintf@sp,w
 11673  0640  0086               	movwf	6
 11674  0641  0835               	movf	sprintf@sp+1,w
 11675  0642  0087               	movwf	7
 11676  0643  0852               	movf	sprintf@c,w
 11677  0644  0081               	movwf	1
 11678  0645  3001               	movlw	1
 11679  0646  07B4               	addwf	sprintf@sp,f
 11680  0647  3000               	movlw	0
 11681  0648  3DB5               	addwfc	sprintf@sp+1,f
 11682                           
 11683                           ;doprnt.c: 542: continue;
 11684  0649  2E29               	goto	l4522
 11685  064A                     l4404:	
 11686                           
 11687                           ;doprnt.c: 543: }
 11688                           ;doprnt.c: 546: width = 0;
 11689  064A  01D0               	clrf	sprintf@width
 11690  064B  01D1               	clrf	sprintf@width+1
 11691                           
 11692                           ;doprnt.c: 548: flag = 0;
 11693  064C  01CF               	clrf	sprintf@flag
 11694                           
 11695                           ;doprnt.c: 551: switch(*f) {
 11696                           
 11697                           ;doprnt.c: 550: for(;;) {
 11698  064D  2E53               	goto	l4410
 11699  064E                     l854:	
 11700                           ;doprnt.c: 579: case '0':
 11701                           
 11702                           
 11703                           ;doprnt.c: 580: flag |= 0x04;
 11704  064E  154F               	bsf	sprintf@flag,2
 11705                           
 11706                           ;doprnt.c: 581: f++;
 11707  064F  3001               	movlw	1
 11708  0650  07B6               	addwf	sprintf@f,f
 11709  0651  3000               	movlw	0
 11710  0652  3DB7               	addwfc	sprintf@f+1,f
 11711  0653                     l4410:	
 11712                           ;doprnt.c: 584: }
 11713                           
 11714                           ;doprnt.c: 582: continue;
 11715                           
 11716  0653  0836               	movf	sprintf@f,w
 11717  0654  0084               	movwf	4
 11718  0655  0837               	movf	sprintf@f+1,w
 11719  0656  0085               	movwf	5
 11720  0657  0800               	movf	0,w	;code access
 11721                           
 11722                           ; Switch size 1, requested type "space"
 11723                           ; Number of cases is 1, Range of values is 48 to 48
 11724                           ; switch strategies available:
 11725                           ; Name         Instructions Cycles
 11726                           ; simple_byte            4     3 (average)
 11727                           ; direct_byte           11     9 (fixed)
 11728                           ; jumptable            263     9 (fixed)
 11729                           ;	Chosen strategy is simple_byte
 11730  0658  3A30               	xorlw	48	; case 48
 11731  0659  1903               	skipnz
 11732  065A  2E4E               	goto	l854
 11733  065B  2E5C               	goto	l4412
 11734  065C                     l4412:	
 11735                           ;doprnt.c: 586: }
 11736                           
 11737                           ;doprnt.c: 585: break;
 11738                           
 11739                           
 11740                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11741  065C  0836               	movf	sprintf@f,w
 11742  065D  0084               	movwf	4
 11743  065E  0837               	movf	sprintf@f+1,w
 11744  065F  0085               	movwf	5
 11745  0660  0800               	movf	0,w	;code access
 11746  0661  3190  2064  3186   	fcall	_isdigit
 11747  0664  1C03               	btfss	3,0
 11748  0665  2EE3               	goto	l4448
 11749                           
 11750                           ;doprnt.c: 598: width = 0;
 11751  0666  0020               	movlb	0	; select bank0
 11752  0667  01D0               	clrf	sprintf@width
 11753  0668  01D1               	clrf	sprintf@width+1
 11754  0669                     l4416:	
 11755                           ;doprnt.c: 599: do {
 11756                           
 11757                           
 11758                           ;doprnt.c: 600: width *= 10;
 11759  0669  300A               	movlw	10
 11760  066A  0020               	movlb	0	; select bank0
 11761  066B  00A0               	movwf	___wmul@multiplier
 11762  066C  3000               	movlw	0
 11763  066D  00A1               	movwf	___wmul@multiplier+1
 11764  066E  0851               	movf	sprintf@width+1,w
 11765  066F  00A3               	movwf	___wmul@multiplicand+1
 11766  0670  0850               	movf	sprintf@width,w
 11767  0671  00A2               	movwf	___wmul@multiplicand
 11768  0672  3191  2195  3186   	fcall	___wmul
 11769  0675  0020               	movlb	0	; select bank0
 11770  0676  0821               	movf	?___wmul+1,w
 11771  0677  00D1               	movwf	sprintf@width+1
 11772  0678  0820               	movf	?___wmul,w
 11773  0679  00D0               	movwf	sprintf@width
 11774                           
 11775                           ;doprnt.c: 601: width += *f++ - '0';
 11776  067A  0836               	movf	sprintf@f,w
 11777  067B  0084               	movwf	4
 11778  067C  0837               	movf	sprintf@f+1,w
 11779  067D  0085               	movwf	5
 11780  067E  0800               	movf	0,w	;code access
 11781  067F  3ED0               	addlw	208
 11782  0680  00C4               	movwf	??_sprintf
 11783  0681  30FF               	movlw	255
 11784  0682  1803               	skipnc
 11785  0683  3000               	movlw	0
 11786  0684  00C5               	movwf	??_sprintf+1
 11787  0685  0844               	movf	??_sprintf,w
 11788  0686  07D0               	addwf	sprintf@width,f
 11789  0687  0845               	movf	??_sprintf+1,w
 11790  0688  3DD1               	addwfc	sprintf@width+1,f
 11791  0689  3001               	movlw	1
 11792  068A  07B6               	addwf	sprintf@f,f
 11793  068B  3000               	movlw	0
 11794  068C  3DB7               	addwfc	sprintf@f+1,f
 11795                           
 11796                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11797  068D  0836               	movf	sprintf@f,w
 11798  068E  0084               	movwf	4
 11799  068F  0837               	movf	sprintf@f+1,w
 11800  0690  0085               	movwf	5
 11801  0691  0800               	movf	0,w	;code access
 11802  0692  3190  2064  3186   	fcall	_isdigit
 11803  0695  1C03               	btfss	3,0
 11804  0696  2EE3               	goto	l4448
 11805  0697  2E69               	goto	l4416
 11806  0698                     l4424:	
 11807                           ;doprnt.c: 750: dostring:
 11808                           
 11809                           ;doprnt.c: 698: case 'i':
 11810                           ;doprnt.c: 699: break;
 11811                           
 11812                           ;doprnt.c: 697: case 'd':
 11813                           
 11814                           ;doprnt.c: 638: goto alldone;
 11815                           
 11816                           ;doprnt.c: 637: case 0:
 11817                           
 11818                           ;doprnt.c: 608: }
 11819                           ;doprnt.c: 635: switch(c = *f++) {
 11820                           
 11821                           
 11822                           ;doprnt.c: 757: if(width > len)
 11823  0698  0020               	movlb	0	; select bank0
 11824  0699  0851               	movf	sprintf@width+1,w
 11825  069A  024C               	subwf	sprintf@len+1,w
 11826  069B  1D03               	skipz
 11827  069C  2E9F               	goto	u2885
 11828  069D  0850               	movf	sprintf@width,w
 11829  069E  024B               	subwf	sprintf@len,w
 11830  069F                     u2885:	
 11831  069F  1803               	skipnc
 11832  06A0  2EA6               	goto	l4428
 11833                           
 11834                           ;doprnt.c: 758: width -= len;
 11835  06A1  084B               	movf	sprintf@len,w
 11836  06A2  02D0               	subwf	sprintf@width,f
 11837  06A3  084C               	movf	sprintf@len+1,w
 11838  06A4  3BD1               	subwfb	sprintf@width+1,f
 11839  06A5  2EA8               	goto	l4434
 11840  06A6                     l4428:	
 11841                           
 11842                           ;doprnt.c: 759: else
 11843                           ;doprnt.c: 760: width = 0;
 11844  06A6  01D0               	clrf	sprintf@width
 11845  06A7  01D1               	clrf	sprintf@width+1
 11846  06A8                     l4434:	
 11847                           ;doprnt.c: 764: while(width--)
 11848                           
 11849  06A8  30FF               	movlw	255
 11850  06A9  07D0               	addwf	sprintf@width,f
 11851  06AA  30FF               	movlw	255
 11852  06AB  3DD1               	addwfc	sprintf@width+1,f
 11853  06AC  0A50               	incf	sprintf@width,w
 11854  06AD  1903               	btfsc	3,2
 11855  06AE  0A51               	incf	sprintf@width+1,w
 11856  06AF  1903               	btfsc	3,2
 11857  06B0  2ECF               	goto	l4442
 11858                           
 11859                           ;doprnt.c: 765: ((*sp++ = (' ')));
 11860  06B1  0834               	movf	sprintf@sp,w
 11861  06B2  0086               	movwf	6
 11862  06B3  0835               	movf	sprintf@sp+1,w
 11863  06B4  0087               	movwf	7
 11864  06B5  3020               	movlw	32
 11865  06B6  0081               	movwf	1
 11866  06B7  3001               	movlw	1
 11867  06B8  07B4               	addwf	sprintf@sp,f
 11868  06B9  3000               	movlw	0
 11869  06BA  3DB5               	addwfc	sprintf@sp+1,f
 11870  06BB  2EA8               	goto	l4434
 11871  06BC                     l4436:	
 11872                           ;doprnt.c: 767: while(len--)
 11873                           
 11874                           
 11875                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 11876  06BC  0849               	movf	sprintf@cp,w
 11877  06BD  0086               	movwf	6
 11878  06BE  0187               	clrf	7
 11879  06BF  0801               	movf	1,w
 11880  06C0  00C4               	movwf	??_sprintf
 11881  06C1  0834               	movf	sprintf@sp,w
 11882  06C2  0086               	movwf	6
 11883  06C3  0835               	movf	sprintf@sp+1,w
 11884  06C4  0087               	movwf	7
 11885  06C5  0844               	movf	??_sprintf,w
 11886  06C6  0081               	movwf	1
 11887  06C7  3001               	movlw	1
 11888  06C8  00C4               	movwf	??_sprintf
 11889  06C9  0844               	movf	??_sprintf,w
 11890  06CA  07C9               	addwf	sprintf@cp,f
 11891  06CB  3001               	movlw	1
 11892  06CC  07B4               	addwf	sprintf@sp,f
 11893  06CD  3000               	movlw	0
 11894  06CE  3DB5               	addwfc	sprintf@sp+1,f
 11895  06CF                     l4442:	
 11896  06CF  3001               	movlw	1
 11897  06D0  02CB               	subwf	sprintf@len,f
 11898  06D1  3000               	movlw	0
 11899  06D2  3BCC               	subwfb	sprintf@len+1,f
 11900  06D3  0A4B               	incf	sprintf@len,w
 11901  06D4  1D03               	skipz
 11902  06D5  2EBC               	goto	l4436
 11903  06D6  0A4C               	incf	sprintf@len+1,w
 11904  06D7  1903               	btfsc	3,2
 11905  06D8  2E29               	goto	l4522
 11906  06D9  2EBC               	goto	l4436
 11907  06DA                     l4444:	
 11908                           ;doprnt.c: 802: default:
 11909                           
 11910                           ;doprnt.c: 774: continue;
 11911                           
 11912                           
 11913                           ;doprnt.c: 805: cp = (char *)&c;
 11914  06DA  3052               	movlw	(low (sprintf@c| 0))& (0+255)
 11915  06DB  00C4               	movwf	??_sprintf
 11916  06DC  0844               	movf	??_sprintf,w
 11917  06DD  00C9               	movwf	sprintf@cp
 11918                           
 11919                           ;doprnt.c: 806: len = 1;
 11920  06DE  3001               	movlw	1
 11921  06DF  00CB               	movwf	sprintf@len
 11922  06E0  3000               	movlw	0
 11923  06E1  00CC               	movwf	sprintf@len+1
 11924                           
 11925                           ;doprnt.c: 807: goto dostring;
 11926  06E2  2E98               	goto	l4424
 11927  06E3                     l4448:	
 11928                           ;doprnt.c: 822: }
 11929                           
 11930  06E3  0020               	movlb	0	; select bank0
 11931  06E4  0837               	movf	sprintf@f+1,w
 11932  06E5  00C5               	movwf	??_sprintf+1
 11933  06E6  0836               	movf	sprintf@f,w
 11934  06E7  00C4               	movwf	??_sprintf
 11935  06E8  0AB6               	incf	sprintf@f,f
 11936  06E9  1903               	skipnz
 11937  06EA  0AB7               	incf	sprintf@f+1,f
 11938  06EB  0844               	movf	??_sprintf,w
 11939  06EC  0084               	movwf	4
 11940  06ED  0845               	movf	??_sprintf+1,w
 11941  06EE  0085               	movwf	5
 11942  06EF  0800               	movf	0,w	;code access
 11943  06F0  00D2               	movwf	sprintf@c
 11944                           
 11945                           ; Switch size 1, requested type "space"
 11946                           ; Number of cases is 3, Range of values is 0 to 105
 11947                           ; switch strategies available:
 11948                           ; Name         Instructions Cycles
 11949                           ; simple_byte           10     6 (average)
 11950                           ; direct_byte          218     6 (fixed)
 11951                           ; jumptable            260     6 (fixed)
 11952                           ;	Chosen strategy is simple_byte
 11953  06F1  3A00               	xorlw	0	; case 0
 11954  06F2  1903               	skipnz
 11955  06F3  2FE7               	goto	l4524
 11956  06F4  3A64               	xorlw	100	; case 100
 11957  06F5  1903               	skipnz
 11958  06F6  2EFB               	goto	l4450
 11959  06F7  3A0D               	xorlw	13	; case 105
 11960  06F8  1903               	skipnz
 11961  06F9  2EFB               	goto	l4450
 11962  06FA  2EDA               	goto	l4444
 11963  06FB                     l4450:	
 11964                           
 11965                           ;doprnt.c: 1253: {
 11966                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 11967  06FB  0020               	movlb	0	; select bank0
 11968  06FC  0848               	movf	sprintf@ap,w
 11969  06FD  0086               	movwf	6
 11970  06FE  0187               	clrf	7
 11971  06FF  3F40               	moviw [0]fsr1
 11972  0700  00CD               	movwf	sprintf@val
 11973  0701  3F41               	moviw [1]fsr1
 11974  0702  00CE               	movwf	sprintf@val+1
 11975  0703  3002               	movlw	2
 11976  0704  00C4               	movwf	??_sprintf
 11977  0705  0844               	movf	??_sprintf,w
 11978  0706  07C8               	addwf	sprintf@ap,f
 11979                           
 11980                           ;doprnt.c: 1261: if((int)val < 0) {
 11981  0707  1FCE               	btfss	sprintf@val+1,7
 11982  0708  2F12               	goto	l4460
 11983                           
 11984                           ;doprnt.c: 1262: flag |= 0x03;
 11985  0709  3003               	movlw	3
 11986  070A  00C4               	movwf	??_sprintf
 11987  070B  0844               	movf	??_sprintf,w
 11988  070C  04CF               	iorwf	sprintf@flag,f
 11989                           
 11990                           ;doprnt.c: 1263: val = -val;
 11991  070D  09CD               	comf	sprintf@val,f
 11992  070E  09CE               	comf	sprintf@val+1,f
 11993  070F  0ACD               	incf	sprintf@val,f
 11994  0710  1903               	skipnz
 11995  0711  0ACE               	incf	sprintf@val+1,f
 11996  0712                     l4460:	
 11997                           
 11998                           ;doprnt.c: 1264: }
 11999                           ;doprnt.c: 1266: }
 12000                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12001  0712  01D2               	clrf	sprintf@c
 12002  0713  0AD2               	incf	sprintf@c,f
 12003  0714  3005               	movlw	5
 12004  0715  0652               	xorwf	sprintf@c,w
 12005  0716  1903               	btfsc	3,2
 12006  0717  2F37               	goto	l4472
 12007  0718                     l4466:	
 12008                           
 12009                           ;doprnt.c: 1306: if(val < dpowers[c])
 12010  0718  0852               	movf	sprintf@c,w
 12011  0719  00C4               	movwf	??_sprintf
 12012  071A  01C5               	clrf	??_sprintf+1
 12013  071B  35C4               	lslf	??_sprintf,f
 12014  071C  0DC5               	rlf	??_sprintf+1,f
 12015  071D  3061               	movlw	low (_dpowers| (0+32768))
 12016  071E  0744               	addwf	??_sprintf,w
 12017  071F  0084               	movwf	4
 12018  0720  3098               	movlw	high (_dpowers| (0+32768))
 12019  0721  3D45               	addwfc	??_sprintf+1,w
 12020  0722  0085               	movwf	5
 12021  0723  3F00               	moviw [0]fsr0
 12022  0724  00C6               	movwf	??_sprintf+2
 12023  0725  3F01               	moviw [1]fsr0
 12024  0726  00C7               	movwf	??_sprintf+3
 12025  0727  0847               	movf	??_sprintf+3,w
 12026  0728  024E               	subwf	sprintf@val+1,w
 12027  0729  1D03               	skipz
 12028  072A  2F2D               	goto	u2935
 12029  072B  0846               	movf	??_sprintf+2,w
 12030  072C  024D               	subwf	sprintf@val,w
 12031  072D                     u2935:	
 12032  072D  1C03               	btfss	3,0
 12033  072E  2F37               	goto	l4472
 12034                           
 12035                           ;doprnt.c: 1307: break;
 12036  072F  3001               	movlw	1
 12037  0730  00C4               	movwf	??_sprintf
 12038  0731  0844               	movf	??_sprintf,w
 12039  0732  07D2               	addwf	sprintf@c,f
 12040  0733  3005               	movlw	5
 12041  0734  0652               	xorwf	sprintf@c,w
 12042  0735  1D03               	btfss	3,2
 12043  0736  2F18               	goto	l4466
 12044  0737                     l4472:	
 12045                           
 12046                           ;doprnt.c: 1345: if(width && flag & 0x03)
 12047  0737  0850               	movf	sprintf@width,w
 12048  0738  0451               	iorwf	sprintf@width+1,w
 12049  0739  1903               	btfsc	3,2
 12050  073A  2F43               	goto	l881
 12051  073B  084F               	movf	sprintf@flag,w
 12052  073C  3903               	andlw	3
 12053  073D  1903               	btfsc	3,2
 12054  073E  2F43               	goto	l881
 12055                           
 12056                           ;doprnt.c: 1346: width--;
 12057  073F  30FF               	movlw	255
 12058  0740  07D0               	addwf	sprintf@width,f
 12059  0741  30FF               	movlw	255
 12060  0742  3DD1               	addwfc	sprintf@width+1,f
 12061  0743                     l881:	
 12062                           
 12063                           ;doprnt.c: 1381: if(width > c)
 12064  0743  0852               	movf	sprintf@c,w
 12065  0744  00C4               	movwf	??_sprintf
 12066  0745  01C5               	clrf	??_sprintf+1
 12067  0746  1BC4               	btfsc	??_sprintf,7
 12068  0747  03C5               	decf	??_sprintf+1,f
 12069  0748  0845               	movf	??_sprintf+1,w
 12070  0749  3A80               	xorlw	128
 12071  074A  00C6               	movwf	??_sprintf+2
 12072  074B  0851               	movf	sprintf@width+1,w
 12073  074C  3A80               	xorlw	128
 12074  074D  0246               	subwf	??_sprintf+2,w
 12075  074E  1D03               	skipz
 12076  074F  2F52               	goto	u2975
 12077  0750  0850               	movf	sprintf@width,w
 12078  0751  0244               	subwf	??_sprintf,w
 12079  0752                     u2975:	
 12080  0752  1803               	skipnc
 12081  0753  2F5F               	goto	l4480
 12082                           
 12083                           ;doprnt.c: 1382: width -= c;
 12084  0754  0020               	movlb	0	; select bank0
 12085  0755  0852               	movf	sprintf@c,w
 12086  0756  00C4               	movwf	??_sprintf
 12087  0757  01C5               	clrf	??_sprintf+1
 12088  0758  1BC4               	btfsc	??_sprintf,7
 12089  0759  03C5               	decf	??_sprintf+1,f
 12090  075A  0844               	movf	??_sprintf,w
 12091  075B  02D0               	subwf	sprintf@width,f
 12092  075C  0845               	movf	??_sprintf+1,w
 12093  075D  3BD1               	subwfb	sprintf@width+1,f
 12094  075E  2F62               	goto	l4482
 12095  075F                     l4480:	
 12096                           
 12097                           ;doprnt.c: 1383: else
 12098                           ;doprnt.c: 1384: width = 0;
 12099  075F  0020               	movlb	0	; select bank0
 12100  0760  01D0               	clrf	sprintf@width
 12101  0761  01D1               	clrf	sprintf@width+1
 12102  0762                     l4482:	
 12103                           
 12104                           ;doprnt.c: 1387: if(flag & 0x04) {
 12105  0762  1D4F               	btfss	sprintf@flag,2
 12106  0763  2F85               	goto	l4498
 12107                           
 12108                           ;doprnt.c: 1392: if(flag & 0x03)
 12109  0764  084F               	movf	sprintf@flag,w
 12110  0765  3903               	andlw	3
 12111  0766  1903               	btfsc	3,2
 12112  0767  2F72               	goto	l4490
 12113                           
 12114                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 12115  0768  0834               	movf	sprintf@sp,w
 12116  0769  0086               	movwf	6
 12117  076A  0835               	movf	sprintf@sp+1,w
 12118  076B  0087               	movwf	7
 12119  076C  302D               	movlw	45
 12120  076D  0081               	movwf	1
 12121  076E  3001               	movlw	1
 12122  076F  07B4               	addwf	sprintf@sp,f
 12123  0770  3000               	movlw	0
 12124  0771  3DB5               	addwfc	sprintf@sp+1,f
 12125  0772                     l4490:	
 12126                           
 12127                           ;doprnt.c: 1415: if(width)
 12128  0772  0850               	movf	sprintf@width,w
 12129  0773  0451               	iorwf	sprintf@width+1,w
 12130  0774  1903               	btfsc	3,2
 12131  0775  2FA9               	goto	l4512
 12132                           
 12133                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 12134                           
 12135                           ;doprnt.c: 1416: do
 12136  0776  0834               	movf	sprintf@sp,w
 12137  0777  0086               	movwf	6
 12138  0778  0835               	movf	sprintf@sp+1,w
 12139  0779  0087               	movwf	7
 12140  077A  3030               	movlw	48
 12141  077B  0081               	movwf	1
 12142  077C  3001               	movlw	1
 12143  077D  07B4               	addwf	sprintf@sp,f
 12144  077E  3000               	movlw	0
 12145  077F  3DB5               	addwfc	sprintf@sp+1,f
 12146                           
 12147                           ;doprnt.c: 1418: while(--width);
 12148  0780  30FF               	movlw	255
 12149  0781  07D0               	addwf	sprintf@width,f
 12150  0782  30FF               	movlw	255
 12151  0783  3DD1               	addwfc	sprintf@width+1,f
 12152  0784  2F72               	goto	l4490
 12153  0785                     l4498:	
 12154                           ;doprnt.c: 1420: } else
 12155                           
 12156                           
 12157                           ;doprnt.c: 1422: {
 12158                           ;doprnt.c: 1424: if(width
 12159                           ;doprnt.c: 1428: )
 12160  0785  0850               	movf	sprintf@width,w
 12161  0786  0451               	iorwf	sprintf@width+1,w
 12162  0787  1903               	btfsc	3,2
 12163  0788  2F9B               	goto	l4506
 12164  0789                     l4500:	
 12165                           ;doprnt.c: 1429: do
 12166                           
 12167                           
 12168                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 12169  0789  0834               	movf	sprintf@sp,w
 12170  078A  0086               	movwf	6
 12171  078B  0835               	movf	sprintf@sp+1,w
 12172  078C  0087               	movwf	7
 12173  078D  3020               	movlw	32
 12174  078E  0081               	movwf	1
 12175  078F  3001               	movlw	1
 12176  0790  07B4               	addwf	sprintf@sp,f
 12177  0791  3000               	movlw	0
 12178  0792  3DB5               	addwfc	sprintf@sp+1,f
 12179                           
 12180                           ;doprnt.c: 1431: while(--width);
 12181  0793  30FF               	movlw	255
 12182  0794  07D0               	addwf	sprintf@width,f
 12183  0795  30FF               	movlw	255
 12184  0796  3DD1               	addwfc	sprintf@width+1,f
 12185  0797  0850               	movf	sprintf@width,w
 12186  0798  0451               	iorwf	sprintf@width+1,w
 12187  0799  1D03               	btfss	3,2
 12188  079A  2F89               	goto	l4500
 12189  079B                     l4506:	
 12190                           
 12191                           ;doprnt.c: 1438: if(flag & 0x03)
 12192  079B  084F               	movf	sprintf@flag,w
 12193  079C  3903               	andlw	3
 12194  079D  1903               	btfsc	3,2
 12195  079E  2FA9               	goto	l4512
 12196                           
 12197                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 12198  079F  0834               	movf	sprintf@sp,w
 12199  07A0  0086               	movwf	6
 12200  07A1  0835               	movf	sprintf@sp+1,w
 12201  07A2  0087               	movwf	7
 12202  07A3  302D               	movlw	45
 12203  07A4  0081               	movwf	1
 12204  07A5  3001               	movlw	1
 12205  07A6  07B4               	addwf	sprintf@sp,f
 12206  07A7  3000               	movlw	0
 12207  07A8  3DB5               	addwfc	sprintf@sp+1,f
 12208  07A9                     l4512:	
 12209                           
 12210                           ;doprnt.c: 1469: }
 12211                           ;doprnt.c: 1472: prec = c;
 12212  07A9  0852               	movf	sprintf@c,w
 12213  07AA  00C4               	movwf	??_sprintf
 12214  07AB  0844               	movf	??_sprintf,w
 12215  07AC  00CA               	movwf	sprintf@prec
 12216  07AD                     l4520:	
 12217                           ;doprnt.c: 1474: while(prec--) {
 12218                           
 12219  07AD  30FF               	movlw	255
 12220  07AE  00C4               	movwf	??_sprintf
 12221  07AF  0844               	movf	??_sprintf,w
 12222  07B0  07CA               	addwf	sprintf@prec,f
 12223  07B1  0A4A               	incf	sprintf@prec,w
 12224  07B2  1903               	btfsc	3,2
 12225  07B3  2E29               	goto	l4522
 12226                           
 12227                           ;doprnt.c: 1478: {
 12228                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 12229  07B4  300A               	movlw	10
 12230  07B5  00AE               	movwf	___lwmod@divisor
 12231  07B6  3000               	movlw	0
 12232  07B7  00AF               	movwf	___lwmod@divisor+1
 12233  07B8  084A               	movf	sprintf@prec,w
 12234  07B9  00C4               	movwf	??_sprintf
 12235  07BA  01C5               	clrf	??_sprintf+1
 12236  07BB  35C4               	lslf	??_sprintf,f
 12237  07BC  0DC5               	rlf	??_sprintf+1,f
 12238  07BD  3061               	movlw	low (_dpowers| (0+32768))
 12239  07BE  0744               	addwf	??_sprintf,w
 12240  07BF  0084               	movwf	4
 12241  07C0  3098               	movlw	high (_dpowers| (0+32768))
 12242  07C1  3D45               	addwfc	??_sprintf+1,w
 12243  07C2  0085               	movwf	5
 12244  07C3  3F00               	moviw [0]fsr0
 12245  07C4  00A6               	movwf	___lwdiv@divisor
 12246  07C5  3F01               	moviw [1]fsr0
 12247  07C6  00A7               	movwf	___lwdiv@divisor+1
 12248  07C7  084E               	movf	sprintf@val+1,w
 12249  07C8  00A9               	movwf	___lwdiv@dividend+1
 12250  07C9  084D               	movf	sprintf@val,w
 12251  07CA  00A8               	movwf	___lwdiv@dividend
 12252  07CB  3194  2482  3186   	fcall	___lwdiv
 12253  07CE  0020               	movlb	0	; select bank0
 12254  07CF  0827               	movf	?___lwdiv+1,w
 12255  07D0  00B1               	movwf	___lwmod@dividend+1
 12256  07D1  0826               	movf	?___lwdiv,w
 12257  07D2  00B0               	movwf	___lwmod@dividend
 12258  07D3  3193  2362  3186   	fcall	___lwmod
 12259  07D6  0020               	movlb	0	; select bank0
 12260  07D7  082E               	movf	?___lwmod,w
 12261  07D8  3E30               	addlw	48
 12262  07D9  00C6               	movwf	??_sprintf+2
 12263  07DA  0846               	movf	??_sprintf+2,w
 12264  07DB  00D2               	movwf	sprintf@c
 12265                           
 12266                           ;doprnt.c: 1523: }
 12267                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12268  07DC  0834               	movf	sprintf@sp,w
 12269  07DD  0086               	movwf	6
 12270  07DE  0835               	movf	sprintf@sp+1,w
 12271  07DF  0087               	movwf	7
 12272  07E0  0852               	movf	sprintf@c,w
 12273  07E1  0081               	movwf	1
 12274  07E2  3001               	movlw	1
 12275  07E3  07B4               	addwf	sprintf@sp,f
 12276  07E4  3000               	movlw	0
 12277  07E5  3DB5               	addwfc	sprintf@sp+1,f
 12278  07E6  2FAD               	goto	l4520
 12279  07E7                     l4524:	
 12280                           ;doprnt.c: 1525: }
 12281                           ;doprnt.c: 1533: }
 12282                           ;doprnt.c: 1535: alldone:
 12283                           
 12284                           
 12285                           ;doprnt.c: 1538: *sp = 0;
 12286  07E7  0020               	movlb	0	; select bank0
 12287  07E8  0834               	movf	sprintf@sp,w
 12288  07E9  0086               	movwf	6
 12289  07EA  0835               	movf	sprintf@sp+1,w
 12290  07EB  0087               	movwf	7
 12291  07EC  0181               	clrf	1
 12292  07ED  0008               	return
 12293  07EE                     __end_of_sprintf:	
 12294                           ;doprnt.c: 1540: return 0;
 12295                           ;	Return value of _sprintf is never used
 12296                           
 12297                           
 12298                           	psect	text23
 12299  1064                     __ptext23:	
 12300 ;; *************** function _isdigit *****************
 12301 ;; Defined at:
 12302 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;  c               1    wreg     unsigned char 
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;  c               1    1[BANK0 ] unsigned char 
 12307 ;; Return value:  Size  Location     Type
 12308 ;;		None               void
 12309 ;; Registers used:
 12310 ;;		wreg, status,2, status,0
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12320 ;;Total ram usage:        2 bytes
 12321 ;; Hardware stack levels used:    1
 12322 ;; Hardware stack levels required when called:    6
 12323 ;; This function calls:
 12324 ;;		Nothing
 12325 ;; This function is called by:
 12326 ;;		_sprintf
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           
 12331                           ;psect for function _isdigit
 12332  1064                     _isdigit:	
 12333                           
 12334                           ;incstack = 0
 12335                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 12336                           ;isdigit@c stored from wreg
 12337  1064  0020               	movlb	0	; select bank0
 12338  1065  00A1               	movwf	isdigit@c
 12339  1066  01A0               	clrf	_isdigit$2028
 12340  1067  303A               	movlw	58
 12341  1068  0221               	subwf	isdigit@c,w
 12342  1069  1803               	skipnc
 12343  106A  2871               	goto	l4036
 12344  106B  3030               	movlw	48
 12345  106C  0221               	subwf	isdigit@c,w
 12346  106D  1C03               	skipc
 12347  106E  2871               	goto	l4036
 12348  106F  01A0               	clrf	_isdigit$2028
 12349  1070  0AA0               	incf	_isdigit$2028,f
 12350  1071                     l4036:	
 12351  1071  0C20               	rrf	_isdigit$2028,w
 12352  1072  0008               	return
 12353  1073                     __end_of_isdigit:	
 12354                           
 12355                           	psect	text24
 12356  1362                     __ptext24:	
 12357 ;; *************** function ___lwmod *****************
 12358 ;; Defined at:
 12359 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;  divisor         2   14[BANK0 ] unsigned int 
 12362 ;;  dividend        2   16[BANK0 ] unsigned int 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;  counter         1   19[BANK0 ] unsigned char 
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  2   14[BANK0 ] unsigned int 
 12367 ;; Registers used:
 12368 ;;		wreg, status,2, status,0
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12374 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;Total ram usage:        6 bytes
 12379 ;; Hardware stack levels used:    1
 12380 ;; Hardware stack levels required when called:    6
 12381 ;; This function calls:
 12382 ;;		Nothing
 12383 ;; This function is called by:
 12384 ;;		_sprintf
 12385 ;;		_dylen
 12386 ;;		_isleap
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           
 12391                           ;psect for function ___lwmod
 12392  1362                     ___lwmod:	
 12393                           
 12394                           ;incstack = 0
 12395                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12396  1362  0020               	movlb	0	; select bank0
 12397  1363  082E               	movf	___lwmod@divisor,w
 12398  1364  042F               	iorwf	___lwmod@divisor+1,w
 12399  1365  1903               	btfsc	3,2
 12400  1366  2B8A               	goto	l3784
 12401  1367  01B3               	clrf	___lwmod@counter
 12402  1368  0AB3               	incf	___lwmod@counter,f
 12403  1369                     l3774:	
 12404  1369  1BAF               	btfsc	___lwmod@divisor+1,7
 12405  136A  2B75               	goto	l3776
 12406  136B  3001               	movlw	1
 12407  136C                     u2125:	
 12408  136C  35AE               	lslf	___lwmod@divisor,f
 12409  136D  0DAF               	rlf	___lwmod@divisor+1,f
 12410  136E  0B89               	decfsz	9,f
 12411  136F  2B6C               	goto	u2125
 12412  1370  3001               	movlw	1
 12413  1371  00B2               	movwf	??___lwmod
 12414  1372  0832               	movf	??___lwmod,w
 12415  1373  07B3               	addwf	___lwmod@counter,f
 12416  1374  2B69               	goto	l3774
 12417  1375                     l3776:	
 12418  1375  082F               	movf	___lwmod@divisor+1,w
 12419  1376  0231               	subwf	___lwmod@dividend+1,w
 12420  1377  1D03               	skipz
 12421  1378  2B7B               	goto	u2145
 12422  1379  082E               	movf	___lwmod@divisor,w
 12423  137A  0230               	subwf	___lwmod@dividend,w
 12424  137B                     u2145:	
 12425  137B  1C03               	skipc
 12426  137C  2B81               	goto	l3780
 12427  137D  082E               	movf	___lwmod@divisor,w
 12428  137E  02B0               	subwf	___lwmod@dividend,f
 12429  137F  082F               	movf	___lwmod@divisor+1,w
 12430  1380  3BB1               	subwfb	___lwmod@dividend+1,f
 12431  1381                     l3780:	
 12432  1381  3001               	movlw	1
 12433  1382                     u2155:	
 12434  1382  36AF               	lsrf	___lwmod@divisor+1,f
 12435  1383  0CAE               	rrf	___lwmod@divisor,f
 12436  1384  0B89               	decfsz	9,f
 12437  1385  2B82               	goto	u2155
 12438  1386  3001               	movlw	1
 12439  1387  02B3               	subwf	___lwmod@counter,f
 12440  1388  1D03               	btfss	3,2
 12441  1389  2B75               	goto	l3776
 12442  138A                     l3784:	
 12443  138A  0831               	movf	___lwmod@dividend+1,w
 12444  138B  00AF               	movwf	?___lwmod+1
 12445  138C  0830               	movf	___lwmod@dividend,w
 12446  138D  00AE               	movwf	?___lwmod
 12447  138E  0008               	return
 12448  138F                     __end_of___lwmod:	
 12449                           
 12450                           	psect	text25
 12451  1482                     __ptext25:	
 12452 ;; *************** function ___lwdiv *****************
 12453 ;; Defined at:
 12454 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 12455 ;; Parameters:    Size  Location     Type
 12456 ;;  divisor         2    6[BANK0 ] unsigned int 
 12457 ;;  dividend        2    8[BANK0 ] unsigned int 
 12458 ;; Auto vars:     Size  Location     Type
 12459 ;;  quotient        2   11[BANK0 ] unsigned int 
 12460 ;;  counter         1   13[BANK0 ] unsigned char 
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  2    6[BANK0 ] unsigned int 
 12463 ;; Registers used:
 12464 ;;		wreg, status,2, status,0
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12470 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;Total ram usage:        8 bytes
 12475 ;; Hardware stack levels used:    1
 12476 ;; Hardware stack levels required when called:    6
 12477 ;; This function calls:
 12478 ;;		Nothing
 12479 ;; This function is called by:
 12480 ;;		_sprintf
 12481 ;;		_months_to_days
 12482 ;;		_years_to_days
 12483 ;; This function uses a non-reentrant model
 12484 ;;
 12485                           
 12486                           
 12487                           ;psect for function ___lwdiv
 12488  1482                     ___lwdiv:	
 12489                           
 12490                           ;incstack = 0
 12491                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12492  1482  0020               	movlb	0	; select bank0
 12493  1483  01AB               	clrf	___lwdiv@quotient
 12494  1484  01AC               	clrf	___lwdiv@quotient+1
 12495  1485  0826               	movf	___lwdiv@divisor,w
 12496  1486  0427               	iorwf	___lwdiv@divisor+1,w
 12497  1487  1903               	btfsc	3,2
 12498  1488  2CB2               	goto	l3762
 12499  1489  01AD               	clrf	___lwdiv@counter
 12500  148A  0AAD               	incf	___lwdiv@counter,f
 12501  148B                     l3750:	
 12502  148B  1BA7               	btfsc	___lwdiv@divisor+1,7
 12503  148C  2C97               	goto	l3752
 12504  148D  3001               	movlw	1
 12505  148E                     u2055:	
 12506  148E  35A6               	lslf	___lwdiv@divisor,f
 12507  148F  0DA7               	rlf	___lwdiv@divisor+1,f
 12508  1490  0B89               	decfsz	9,f
 12509  1491  2C8E               	goto	u2055
 12510  1492  3001               	movlw	1
 12511  1493  00AA               	movwf	??___lwdiv
 12512  1494  082A               	movf	??___lwdiv,w
 12513  1495  07AD               	addwf	___lwdiv@counter,f
 12514  1496  2C8B               	goto	l3750
 12515  1497                     l3752:	
 12516  1497  3001               	movlw	1
 12517  1498                     u2075:	
 12518  1498  35AB               	lslf	___lwdiv@quotient,f
 12519  1499  0DAC               	rlf	___lwdiv@quotient+1,f
 12520  149A  0B89               	decfsz	9,f
 12521  149B  2C98               	goto	u2075
 12522  149C  0827               	movf	___lwdiv@divisor+1,w
 12523  149D  0229               	subwf	___lwdiv@dividend+1,w
 12524  149E  1D03               	skipz
 12525  149F  2CA2               	goto	u2085
 12526  14A0  0826               	movf	___lwdiv@divisor,w
 12527  14A1  0228               	subwf	___lwdiv@dividend,w
 12528  14A2                     u2085:	
 12529  14A2  1C03               	skipc
 12530  14A3  2CA9               	goto	l3758
 12531  14A4  0826               	movf	___lwdiv@divisor,w
 12532  14A5  02A8               	subwf	___lwdiv@dividend,f
 12533  14A6  0827               	movf	___lwdiv@divisor+1,w
 12534  14A7  3BA9               	subwfb	___lwdiv@dividend+1,f
 12535  14A8  142B               	bsf	___lwdiv@quotient,0
 12536  14A9                     l3758:	
 12537  14A9  3001               	movlw	1
 12538  14AA                     u2095:	
 12539  14AA  36A7               	lsrf	___lwdiv@divisor+1,f
 12540  14AB  0CA6               	rrf	___lwdiv@divisor,f
 12541  14AC  0B89               	decfsz	9,f
 12542  14AD  2CAA               	goto	u2095
 12543  14AE  3001               	movlw	1
 12544  14AF  02AD               	subwf	___lwdiv@counter,f
 12545  14B0  1D03               	btfss	3,2
 12546  14B1  2C97               	goto	l3752
 12547  14B2                     l3762:	
 12548  14B2  082C               	movf	___lwdiv@quotient+1,w
 12549  14B3  00A7               	movwf	?___lwdiv+1
 12550  14B4  082B               	movf	___lwdiv@quotient,w
 12551  14B5  00A6               	movwf	?___lwdiv
 12552  14B6  0008               	return
 12553  14B7                     __end_of___lwdiv:	
 12554                           
 12555                           	psect	text26
 12556  0A21                     __ptext26:	
 12557 ;; *************** function _Modify_Data *****************
 12558 ;; Defined at:
 12559 ;;		line 115 in file "oled.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;  c               2    6[BANK0 ] PTR unsigned char 
 12562 ;;		 -> CharacterArray(100), 
 12563 ;;  offset          2    8[BANK0 ] unsigned int 
 12564 ;;  limit           2   10[BANK0 ] unsigned int 
 12565 ;; Auto vars:     Size  Location     Type
 12566 ;;  right           2   21[BANK0 ] int 
 12567 ;;  p               2   23[BANK0 ] int 
 12568 ;;  j               2   25[BANK0 ] unsigned int 
 12569 ;; Return value:  Size  Location     Type
 12570 ;;                  1    wreg      void 
 12571 ;; Registers used:
 12572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12573 ;; Tracked objects:
 12574 ;;		On entry : 0/0
 12575 ;;		On exit  : 0/0
 12576 ;;		Unchanged: 0/0
 12577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12578 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12579 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12580 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12581 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12582 ;;Total ram usage:       21 bytes
 12583 ;; Hardware stack levels used:    1
 12584 ;; Hardware stack levels required when called:    7
 12585 ;; This function calls:
 12586 ;;		___wmul
 12587 ;; This function is called by:
 12588 ;;		_Write_String
 12589 ;; This function uses a non-reentrant model
 12590 ;;
 12591                           
 12592                           
 12593                           ;psect for function _Modify_Data
 12594  0A21                     _Modify_Data:	
 12595                           
 12596                           ;oled.c: 119: unsigned int j;
 12597                           ;oled.c: 120: for(int p=0;p<=limit;p++)
 12598                           
 12599                           ;incstack = 0
 12600                           ; Regs used in _Modify_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12601  0A21  0020               	movlb	0	; select bank0
 12602  0A22  01B7               	clrf	Modify_Data@p
 12603  0A23  01B8               	clrf	Modify_Data@p+1
 12604  0A24                     l833:	
 12605  0A24  0838               	movf	Modify_Data@p+1,w
 12606  0A25  022B               	subwf	Modify_Data@limit+1,w
 12607  0A26  1D03               	skipz
 12608  0A27  2A2A               	goto	u3145
 12609  0A28  0837               	movf	Modify_Data@p,w
 12610  0A29  022A               	subwf	Modify_Data@limit,w
 12611  0A2A                     u3145:	
 12612  0A2A  1C03               	btfss	3,0
 12613  0A2B  0008               	return
 12614                           
 12615                           ;oled.c: 121: {
 12616                           ;oled.c: 122: for(j=0;j<5;j++)
 12617  0A2C  01B9               	clrf	Modify_Data@j
 12618  0A2D  01BA               	clrf	Modify_Data@j+1
 12619  0A2E  3000               	movlw	0
 12620  0A2F  023A               	subwf	Modify_Data@j+1,w
 12621  0A30  3005               	movlw	5
 12622  0A31  1903               	skipnz
 12623  0A32  0239               	subwf	Modify_Data@j,w
 12624  0A33  1803               	btfsc	3,0
 12625  0A34  2A8D               	goto	l4578
 12626  0A35                     l4570:	
 12627                           
 12628                           ;oled.c: 123: {
 12629                           ;oled.c: 124: int right;
 12630                           ;oled.c: 125: right=(j+((int)(c[p])-0x20)*5);
 12631  0A35  0837               	movf	Modify_Data@p,w
 12632  0A36  0726               	addwf	Modify_Data@c,w
 12633  0A37  0086               	movwf	6
 12634  0A38  0838               	movf	Modify_Data@p+1,w
 12635  0A39  3D27               	addwfc	Modify_Data@c+1,w
 12636  0A3A  0087               	movwf	7
 12637  0A3B  0801               	movf	1,w
 12638  0A3C  3EE0               	addlw	224
 12639  0A3D  00A0               	movwf	___wmul@multiplier
 12640  0A3E  30FF               	movlw	255
 12641  0A3F  1803               	skipnc
 12642  0A40  3000               	movlw	0
 12643  0A41  00A1               	movwf	___wmul@multiplier+1
 12644  0A42  3005               	movlw	5
 12645  0A43  00A2               	movwf	___wmul@multiplicand
 12646  0A44  3000               	movlw	0
 12647  0A45  00A3               	movwf	___wmul@multiplicand+1
 12648  0A46  3191  2195  318A   	fcall	___wmul
 12649  0A49  0020               	movlb	0	; select bank0
 12650  0A4A  0839               	movf	Modify_Data@j,w
 12651  0A4B  0720               	addwf	?___wmul,w
 12652  0A4C  00B5               	movwf	Modify_Data@right
 12653  0A4D  083A               	movf	Modify_Data@j+1,w
 12654  0A4E  3D21               	addwfc	?___wmul+1,w
 12655  0A4F  00B6               	movwf	Modify_Data@right+1
 12656                           
 12657                           ;oled.c: 126: displayArray[offset+j+(p*5)]=lookup[right];
 12658  0A50  0836               	movf	Modify_Data@right+1,w
 12659  0A51  0085               	movwf	5
 12660  0A52  0835               	movf	Modify_Data@right,w
 12661  0A53  0084               	movwf	4
 12662  0A54  3049               	movlw	low (_lookup| (0+32768))
 12663  0A55  0784               	addwf	4,f
 12664  0A56  3084               	movlw	high (_lookup| (0+32768))
 12665  0A57  3D85               	addwfc	5,f
 12666  0A58  0800               	movf	0,w	;code access
 12667  0A59  00AC               	movwf	??_Modify_Data
 12668  0A5A  0838               	movf	Modify_Data@p+1,w
 12669  0A5B  00A1               	movwf	___wmul@multiplier+1
 12670  0A5C  0837               	movf	Modify_Data@p,w
 12671  0A5D  00A0               	movwf	___wmul@multiplier
 12672  0A5E  3005               	movlw	5
 12673  0A5F  00A2               	movwf	___wmul@multiplicand
 12674  0A60  3000               	movlw	0
 12675  0A61  00A3               	movwf	___wmul@multiplicand+1
 12676  0A62  3191  2195  318A   	fcall	___wmul
 12677  0A65  0020               	movlb	0	; select bank0
 12678  0A66  0828               	movf	Modify_Data@offset,w
 12679  0A67  0720               	addwf	?___wmul,w
 12680  0A68  00AD               	movwf	??_Modify_Data+1
 12681  0A69  0829               	movf	Modify_Data@offset+1,w
 12682  0A6A  3D21               	addwfc	?___wmul+1,w
 12683  0A6B  00AE               	movwf	??_Modify_Data+2
 12684  0A6C  0839               	movf	Modify_Data@j,w
 12685  0A6D  072D               	addwf	??_Modify_Data+1,w
 12686  0A6E  00AF               	movwf	??_Modify_Data+3
 12687  0A6F  083A               	movf	Modify_Data@j+1,w
 12688  0A70  3D2E               	addwfc	??_Modify_Data+2,w
 12689  0A71  00B0               	movwf	??_Modify_Data+4
 12690  0A72  30B1               	movlw	177
 12691  0A73  00B1               	movwf	??_Modify_Data+5
 12692  0A74  3021               	movlw	33
 12693  0A75  00B2               	movwf	??_Modify_Data+6
 12694  0A76  082F               	movf	??_Modify_Data+3,w
 12695  0A77  0731               	addwf	??_Modify_Data+5,w
 12696  0A78  00B3               	movwf	??_Modify_Data+7
 12697  0A79  0830               	movf	??_Modify_Data+4,w
 12698  0A7A  3D32               	addwfc	??_Modify_Data+6,w
 12699  0A7B  00B4               	movwf	??_Modify_Data+8
 12700  0A7C  0833               	movf	??_Modify_Data+7,w
 12701  0A7D  0086               	movwf	6
 12702  0A7E  0834               	movf	??_Modify_Data+8,w
 12703  0A7F  0087               	movwf	7
 12704  0A80  082C               	movf	??_Modify_Data,w
 12705  0A81  0081               	movwf	1
 12706  0A82  3001               	movlw	1
 12707  0A83  07B9               	addwf	Modify_Data@j,f
 12708  0A84  3000               	movlw	0
 12709  0A85  3DBA               	addwfc	Modify_Data@j+1,f
 12710  0A86  3000               	movlw	0
 12711  0A87  023A               	subwf	Modify_Data@j+1,w
 12712  0A88  3005               	movlw	5
 12713  0A89  1903               	skipnz
 12714  0A8A  0239               	subwf	Modify_Data@j,w
 12715  0A8B  1C03               	skipc
 12716  0A8C  2A35               	goto	l4570
 12717  0A8D                     l4578:	
 12718  0A8D  3001               	movlw	1
 12719  0A8E  07B7               	addwf	Modify_Data@p,f
 12720  0A8F  3000               	movlw	0
 12721  0A90  3DB8               	addwfc	Modify_Data@p+1,f
 12722  0A91  2A24               	goto	l833
 12723  0A92                     __end_of_Modify_Data:	
 12724                           
 12725                           	psect	text27
 12726  1195                     __ptext27:	
 12727 ;; *************** function ___wmul *****************
 12728 ;; Defined at:
 12729 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12732 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;  product         2    4[BANK0 ] unsigned int 
 12735 ;; Return value:  Size  Location     Type
 12736 ;;                  2    0[BANK0 ] unsigned int 
 12737 ;; Registers used:
 12738 ;;		wreg, status,2, status,0
 12739 ;; Tracked objects:
 12740 ;;		On entry : 0/0
 12741 ;;		On exit  : 0/0
 12742 ;;		Unchanged: 0/0
 12743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12744 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12745 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;Total ram usage:        6 bytes
 12749 ;; Hardware stack levels used:    1
 12750 ;; Hardware stack levels required when called:    6
 12751 ;; This function calls:
 12752 ;;		Nothing
 12753 ;; This function is called by:
 12754 ;;		_Modify_Data
 12755 ;;		_sprintf
 12756 ;;		_months_to_days
 12757 ;;		_asctime
 12758 ;; This function uses a non-reentrant model
 12759 ;;
 12760                           
 12761                           
 12762                           ;psect for function ___wmul
 12763  1195                     ___wmul:	
 12764                           
 12765                           ;incstack = 0
 12766                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12767  1195  0020               	movlb	0	; select bank0
 12768  1196  01A4               	clrf	___wmul@product
 12769  1197  01A5               	clrf	___wmul@product+1
 12770  1198                     l3714:	
 12771  1198  1C20               	btfss	___wmul@multiplier,0
 12772  1199  299E               	goto	l980
 12773  119A  0822               	movf	___wmul@multiplicand,w
 12774  119B  07A4               	addwf	___wmul@product,f
 12775  119C  0823               	movf	___wmul@multiplicand+1,w
 12776  119D  3DA5               	addwfc	___wmul@product+1,f
 12777  119E                     l980:	
 12778  119E  3001               	movlw	1
 12779  119F                     u1975:	
 12780  119F  35A2               	lslf	___wmul@multiplicand,f
 12781  11A0  0DA3               	rlf	___wmul@multiplicand+1,f
 12782  11A1  0B89               	decfsz	9,f
 12783  11A2  299F               	goto	u1975
 12784  11A3  3001               	movlw	1
 12785  11A4                     u1985:	
 12786  11A4  36A1               	lsrf	___wmul@multiplier+1,f
 12787  11A5  0CA0               	rrf	___wmul@multiplier,f
 12788  11A6  0B89               	decfsz	9,f
 12789  11A7  29A4               	goto	u1985
 12790  11A8  0820               	movf	___wmul@multiplier,w
 12791  11A9  0421               	iorwf	___wmul@multiplier+1,w
 12792  11AA  1D03               	btfss	3,2
 12793  11AB  2998               	goto	l3714
 12794  11AC  0825               	movf	___wmul@product+1,w
 12795  11AD  00A1               	movwf	?___wmul+1
 12796  11AE  0824               	movf	___wmul@product,w
 12797  11AF  00A0               	movwf	?___wmul
 12798  11B0  0008               	return
 12799  11B1                     __end_of___wmul:	
 12800                           
 12801                           	psect	text28
 12802  1055                     __ptext28:	
 12803 ;; *************** function _SYSTEM_Initialize *****************
 12804 ;; Defined at:
 12805 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;		None
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;		None
 12810 ;; Return value:  Size  Location     Type
 12811 ;;                  1    wreg      void 
 12812 ;; Registers used:
 12813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12823 ;;Total ram usage:        0 bytes
 12824 ;; Hardware stack levels used:    1
 12825 ;; Hardware stack levels required when called:   17
 12826 ;; This function calls:
 12827 ;;		_OSCILLATOR_Initialize
 12828 ;;		_PIN_MANAGER_Initialize
 12829 ;;		_PMD_Initialize
 12830 ;;		_SPI2_Initialize
 12831 ;;		_rtc6_Initialize
 12832 ;; This function is called by:
 12833 ;;		_main
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           
 12838                           ;psect for function _SYSTEM_Initialize
 12839  1055                     _SYSTEM_Initialize:	
 12840                           
 12841                           ;mcc.c: 52: PMD_Initialize();
 12842                           
 12843                           ;incstack = 0
 12844 ;; hardware stack exceeded
 12845                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12846  1055  319F  2721  3190   	fcall	_PMD_Initialize
 12847                           
 12848                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 12849  1058  3195  2565  3190   	fcall	_PIN_MANAGER_Initialize
 12850                           
 12851                           ;mcc.c: 54: OSCILLATOR_Initialize();
 12852  105B  319F  2761  3190   	fcall	_OSCILLATOR_Initialize
 12853                           
 12854                           ;mcc.c: 55: SPI2_Initialize();
 12855  105E  319E  26D2  3190   	fcall	_SPI2_Initialize
 12856                           
 12857                           ;mcc.c: 56: rtc6_Initialize();
 12858  1061  3188  20EA         	fcall	_rtc6_Initialize
 12859  1063  0008               	return
 12860  1064                     __end_of_SYSTEM_Initialize:	
 12861                           
 12862                           	psect	text29
 12863  08EA                     __ptext29:	
 12864 ;; *************** function _rtc6_Initialize *****************
 12865 ;; Defined at:
 12866 ;;		line 111 in file "mcc_generated_files/RTC6.c"
 12867 ;; Parameters:    Size  Location     Type
 12868 ;;		None
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;  reg             1   21[BANK0 ] unsigned char 
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  1    wreg      void 
 12873 ;; Registers used:
 12874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12881 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12882 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12883 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12884 ;;Total ram usage:        3 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:   16
 12887 ;; This function calls:
 12888 ;;		_rtcc_read
 12889 ;;		_rtcc_write
 12890 ;; This function is called by:
 12891 ;;		_SYSTEM_Initialize
 12892 ;; This function uses a non-reentrant model
 12893 ;;
 12894                           
 12895                           
 12896                           ;psect for function _rtc6_Initialize
 12897  08EA                     _rtc6_Initialize:	
 12898                           
 12899                           ;RTC6.c: 112: uint8_t reg = 0;
 12900                           
 12901                           ;incstack = 0
 12902 ;; hardware stack exceeded
 12903                           ; Regs used in _rtc6_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12904  08EA  0020               	movlb	0	; select bank0
 12905  08EB  01B5               	clrf	rtc6_Initialize@reg
 12906                           
 12907                           ;RTC6.c: 114: dateTime.day = (rtcc_read(0x03) & 0x07);
 12908  08EC  3003               	movlw	3
 12909  08ED  319F  279B  3188   	fcall	_rtcc_read
 12910  08F0  3907               	andlw	7
 12911  08F1  0020               	movlb	0	; select bank0
 12912  08F2  00B3               	movwf	??_rtc6_Initialize
 12913  08F3  01B4               	clrf	??_rtc6_Initialize+1
 12914  08F4  0833               	movf	??_rtc6_Initialize,w
 12915  08F5  0022               	movlb	2	; select bank2
 12916  08F6  00AC               	movwf	(_dateTime^(0+256)+12)
 12917  08F7  0020               	movlb	0	; select bank0
 12918  08F8  0834               	movf	??_rtc6_Initialize+1,w
 12919  08F9  0022               	movlb	2	; select bank2
 12920  08FA  00AD               	movwf	((_dateTime+1)^(0+256)+12)
 12921                           
 12922                           ;RTC6.c: 115: rtcc_write(0x03, (dateTime.day | 0x08));
 12923  08FB  082C               	movf	(_dateTime^(0+256)+12),w
 12924  08FC  3808               	iorlw	8
 12925  08FD  0020               	movlb	0	; select bank0
 12926  08FE  00B3               	movwf	??_rtc6_Initialize
 12927  08FF  0833               	movf	??_rtc6_Initialize,w
 12928  0900  00AE               	movwf	rtcc_write@data
 12929  0901  3003               	movlw	3
 12930  0902  3190  20B3  3188   	fcall	_rtcc_write
 12931                           
 12932                           ;RTC6.c: 116: dateTime.sec = rtcc_read(0x00);
 12933  0905  3000               	movlw	0
 12934  0906  319F  279B  3188   	fcall	_rtcc_read
 12935  0909  0020               	movlb	0	; select bank0
 12936  090A  00B3               	movwf	??_rtc6_Initialize
 12937  090B  01B4               	clrf	??_rtc6_Initialize+1
 12938  090C  0833               	movf	??_rtc6_Initialize,w
 12939  090D  0022               	movlb	2	; select bank2
 12940  090E  00A0               	movwf	_dateTime^(0+256)
 12941  090F  0020               	movlb	0	; select bank0
 12942  0910  0834               	movf	??_rtc6_Initialize+1,w
 12943  0911  0022               	movlb	2	; select bank2
 12944  0912  00A1               	movwf	(_dateTime+1)^(0+256)
 12945                           
 12946                           ;RTC6.c: 120: rtcc_write(0x07, 0x00 + 0x40 + 0x00);
 12947  0913  3040               	movlw	64
 12948  0914  0020               	movlb	0	; select bank0
 12949  0915  00B3               	movwf	??_rtc6_Initialize
 12950  0916  0833               	movf	??_rtc6_Initialize,w
 12951  0917  00AE               	movwf	rtcc_write@data
 12952  0918  3007               	movlw	7
 12953  0919  3190  20B3  3188   	fcall	_rtcc_write
 12954                           
 12955                           ;RTC6.c: 123: rtcc_write(0x00, dateTime.sec | 0x80);
 12956  091C  0022               	movlb	2	; select bank2
 12957  091D  0820               	movf	_dateTime^(0+256),w
 12958  091E  3880               	iorlw	128
 12959  091F  0020               	movlb	0	; select bank0
 12960  0920  00B3               	movwf	??_rtc6_Initialize
 12961  0921  0833               	movf	??_rtc6_Initialize,w
 12962  0922  00AE               	movwf	rtcc_write@data
 12963  0923  3000               	movlw	0
 12964  0924  3190  20B3  3188   	fcall	_rtcc_write
 12965  0927                     l6948:	
 12966                           ;RTC6.c: 124: while (!reg) {
 12967                           
 12968  0927  0020               	movlb	0	; select bank0
 12969  0928  0835               	movf	rtc6_Initialize@reg,w
 12970  0929  1D03               	btfss	3,2
 12971  092A  2938               	goto	l6950
 12972                           
 12973                           ;RTC6.c: 125: reg = rtcc_read(0x03);
 12974  092B  3003               	movlw	3
 12975  092C  319F  279B  3188   	fcall	_rtcc_read
 12976  092F  0020               	movlb	0	; select bank0
 12977  0930  00B3               	movwf	??_rtc6_Initialize
 12978  0931  0833               	movf	??_rtc6_Initialize,w
 12979  0932  00B5               	movwf	rtc6_Initialize@reg
 12980                           
 12981                           ;RTC6.c: 126: reg &= 0x20;
 12982  0933  3020               	movlw	32
 12983  0934  00B3               	movwf	??_rtc6_Initialize
 12984  0935  0833               	movf	??_rtc6_Initialize,w
 12985  0936  05B5               	andwf	rtc6_Initialize@reg,f
 12986  0937  2927               	goto	l6948
 12987  0938                     l6950:	
 12988                           
 12989                           ;RTC6.c: 127: }
 12990                           ;RTC6.c: 130: rtcc_write(0x03, dateTime.day | (0x08 & 0xEF));
 12991  0938  0022               	movlb	2	; select bank2
 12992  0939  082C               	movf	(_dateTime^(0+256)+12),w
 12993  093A  3808               	iorlw	8
 12994  093B  0020               	movlb	0	; select bank0
 12995  093C  00B3               	movwf	??_rtc6_Initialize
 12996  093D  0833               	movf	??_rtc6_Initialize,w
 12997  093E  00AE               	movwf	rtcc_write@data
 12998  093F  3003               	movlw	3
 12999  0940  3190  20B3         	fcall	_rtcc_write
 13000  0942  0008               	return
 13001  0943                     __end_of_rtc6_Initialize:	
 13002                           
 13003                           	psect	text30
 13004  10B3                     __ptext30:	
 13005 ;; *************** function _rtcc_write *****************
 13006 ;; Defined at:
 13007 ;;		line 106 in file "mcc_generated_files/RTC6.c"
 13008 ;; Parameters:    Size  Location     Type
 13009 ;;  addr            1    wreg     unsigned char 
 13010 ;;  data            1   14[BANK0 ] unsigned char 
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;  addr            1   17[BANK0 ] unsigned char 
 13013 ;; Return value:  Size  Location     Type
 13014 ;;                  1    wreg      void 
 13015 ;; Registers used:
 13016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13017 ;; Tracked objects:
 13018 ;;		On entry : 0/0
 13019 ;;		On exit  : 0/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13022 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13024 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13025 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13026 ;;Total ram usage:        4 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; Hardware stack levels required when called:   15
 13029 ;; This function calls:
 13030 ;;		_i2c_write1ByteRegister
 13031 ;; This function is called by:
 13032 ;;		_rtc6_Initialize
 13033 ;;		_rtc6_SetComponent
 13034 ;;		_rtc6_EnableAlarms
 13035 ;;		_rtc6_SetAlarm0
 13036 ;;		_rtc6_ClearAlarm0
 13037 ;;		_rtc6_SetAlarm1
 13038 ;;		_rtc6_ClearAlarm1
 13039 ;; This function uses a non-reentrant model
 13040 ;;
 13041                           
 13042                           
 13043                           ;psect for function _rtcc_write
 13044  10B3                     _rtcc_write:	
 13045                           
 13046                           ;incstack = 0
 13047 ;; hardware stack exceeded
 13048                           ; Regs used in _rtcc_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13049                           ;rtcc_write@addr stored from wreg
 13050  10B3  0020               	movlb	0	; select bank0
 13051  10B4  00B1               	movwf	rtcc_write@addr
 13052                           
 13053                           ;RTC6.c: 107: i2c_write1ByteRegister(0x6F, addr, data);
 13054  10B5  0831               	movf	rtcc_write@addr,w
 13055  10B6  00AF               	movwf	??_rtcc_write
 13056  10B7  082F               	movf	??_rtcc_write,w
 13057  10B8  00AA               	movwf	i2c_write1ByteRegister@reg
 13058  10B9  082E               	movf	rtcc_write@data,w
 13059  10BA  00B0               	movwf	??_rtcc_write+1
 13060  10BB  0830               	movf	??_rtcc_write+1,w
 13061  10BC  00AB               	movwf	i2c_write1ByteRegister@data
 13062  10BD  306F               	movlw	111
 13063  10BE  3194  241C  3190   	fcall	_i2c_write1ByteRegister
 13064                           
 13065                           ;RTC6.c: 108: _delay((unsigned long)((5)*(1000000/4000.0)));
 13066  10C1  30FA               	movlw	250
 13067  10C2                     u5557:	
 13068  10C2  3200               	nop2
 13069  10C3  0B89               	decfsz	9,f
 13070  10C4  28C2               	goto	u5557
 13071  10C5  0008               	return
 13072  10C6                     __end_of_rtcc_write:	
 13073                           
 13074                           	psect	text31
 13075  141C                     __ptext31:	
 13076 ;; *************** function _i2c_write1ByteRegister *****************
 13077 ;; Defined at:
 13078 ;;		line 38 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;  address         1    wreg     unsigned char 
 13081 ;;  reg             1   10[BANK0 ] unsigned char 
 13082 ;;  data            1   11[BANK0 ] unsigned char 
 13083 ;; Auto vars:     Size  Location     Type
 13084 ;;  address         1   13[BANK0 ] unsigned char 
 13085 ;; Return value:  Size  Location     Type
 13086 ;;                  1    wreg      void 
 13087 ;; Registers used:
 13088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13089 ;; Tracked objects:
 13090 ;;		On entry : 0/0
 13091 ;;		On exit  : 0/0
 13092 ;;		Unchanged: 0/0
 13093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13094 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13097 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13098 ;;Total ram usage:        4 bytes
 13099 ;; Hardware stack levels used:    1
 13100 ;; Hardware stack levels required when called:   14
 13101 ;; This function calls:
 13102 ;;		_i2c_close
 13103 ;;		_i2c_masterWrite
 13104 ;;		_i2c_open
 13105 ;;		_i2c_setAddressNACKCallback
 13106 ;;		_i2c_setBuffer
 13107 ;;		_i2c_setDataCompleteCallback
 13108 ;; This function is called by:
 13109 ;;		_rtcc_write
 13110 ;;		_rtc6_EEPRWriteLatchEnable
 13111 ;;		_rtc6_EEPRWriteLatchDisable
 13112 ;;		_rtc6_WriteByteEEPROM
 13113 ;; This function uses a non-reentrant model
 13114 ;;
 13115                           
 13116                           
 13117                           ;psect for function _i2c_write1ByteRegister
 13118  141C                     _i2c_write1ByteRegister:	
 13119                           
 13120                           ;incstack = 0
 13121 ;; hardware stack exceeded
 13122                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13123                           ;i2c_write1ByteRegister@address stored from wreg
 13124  141C  0020               	movlb	0	; select bank0
 13125  141D  00AD               	movwf	i2c_write1ByteRegister@address
 13126  141E                     l6912:	
 13127                           ;i2c_simple_master.c: 40: while(!i2c_open(address));
 13128                           
 13129  141E  0020               	movlb	0	; select bank0
 13130  141F  082D               	movf	i2c_write1ByteRegister@address,w
 13131  1420  3196  26C2  3194   	fcall	_i2c_open
 13132  1423  3A00               	xorlw	0
 13133  1424  1903               	skipnz
 13134  1425  2C1E               	goto	l6912
 13135                           
 13136                           ;i2c_simple_master.c: 41: i2c_setDataCompleteCallback(wr1RegCompleteHandler,&data);
 13137  1426  30F1               	movlw	low _wr1RegCompleteHandler
 13138  1427  0020               	movlb	0	; select bank0
 13139  1428  00A5               	movwf	i2c_setDataCompleteCallback@cb
 13140  1429  3010               	movlw	high _wr1RegCompleteHandler
 13141  142A  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 13142  142B  302B               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 13143  142C  00AC               	movwf	??_i2c_write1ByteRegister
 13144  142D  082C               	movf	??_i2c_write1ByteRegister,w
 13145  142E  00A7               	movwf	i2c_setDataCompleteCallback@p
 13146  142F  3190  202D  3194   	fcall	_i2c_setDataCompleteCallback
 13147                           
 13148                           ;i2c_simple_master.c: 42: i2c_setBuffer(&reg,1);
 13149  1432  3001               	movlw	1
 13150  1433  0020               	movlb	0	; select bank0
 13151  1434  00A0               	movwf	i2c_setBuffer@bufferSize
 13152  1435  3000               	movlw	0
 13153  1436  00A1               	movwf	i2c_setBuffer@bufferSize+1
 13154  1437  302A               	movlw	(low (i2c_write1ByteRegister@reg| 0))& (0+255)
 13155  1438  3190  20C6  3194   	fcall	_i2c_setBuffer
 13156                           
 13157                           ;i2c_simple_master.c: 43: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 13158  143B  30E4               	movlw	low _i2c_restartWrite
 13159  143C  0020               	movlb	0	; select bank0
 13160  143D  00A5               	movwf	i2c_setAddressNACKCallback@cb
 13161  143E  301E               	movlw	high _i2c_restartWrite
 13162  143F  00A6               	movwf	i2c_setAddressNACKCallback@cb+1
 13163  1440  01A7               	clrf	i2c_setAddressNACKCallback@p
 13164  1441  3190  203A  3194   	fcall	_i2c_setAddressNACKCallback
 13165                           
 13166                           ;i2c_simple_master.c: 44: i2c_masterWrite();
 13167  1444  319E  26BE  3194   	fcall	_i2c_masterWrite
 13168  1447                     l6922:	
 13169                           ;i2c_simple_master.c: 45: while(I2C_BUSY == i2c_close());
 13170                           
 13171  1447  3191  217A  3194   	fcall	_i2c_close
 13172  144A  3A01               	xorlw	1
 13173  144B  1D03               	btfss	3,2
 13174  144C  0008               	return
 13175  144D  2C47               	goto	l6922
 13176  144E                     __end_of_i2c_write1ByteRegister:	
 13177                           
 13178                           	psect	text32
 13179  1F9B                     __ptext32:	
 13180 ;; *************** function _rtcc_read *****************
 13181 ;; Defined at:
 13182 ;;		line 102 in file "mcc_generated_files/RTC6.c"
 13183 ;; Parameters:    Size  Location     Type
 13184 ;;  addr            1    wreg     unsigned char 
 13185 ;; Auto vars:     Size  Location     Type
 13186 ;;  addr            1   18[BANK0 ] unsigned char 
 13187 ;; Return value:  Size  Location     Type
 13188 ;;                  1    wreg      unsigned char 
 13189 ;; Registers used:
 13190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13191 ;; Tracked objects:
 13192 ;;		On entry : 0/0
 13193 ;;		On exit  : 0/0
 13194 ;;		Unchanged: 0/0
 13195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13198 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13199 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13200 ;;Total ram usage:        2 bytes
 13201 ;; Hardware stack levels used:    1
 13202 ;; Hardware stack levels required when called:   15
 13203 ;; This function calls:
 13204 ;;		_i2c_read1ByteRegister
 13205 ;; This function is called by:
 13206 ;;		_rtc6_Initialize
 13207 ;;		_rtc6_SetComponent
 13208 ;;		_rtc6_GetComponent
 13209 ;;		_rtc6_EnableAlarms
 13210 ;;		_rtc6_ClearAlarm0
 13211 ;;		_rtc6_ClearAlarm1
 13212 ;; This function uses a non-reentrant model
 13213 ;;
 13214                           
 13215                           
 13216                           ;psect for function _rtcc_read
 13217  1F9B                     _rtcc_read:	
 13218                           
 13219                           ;incstack = 0
 13220 ;; hardware stack exceeded
 13221                           ; Regs used in _rtcc_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13222                           ;rtcc_read@addr stored from wreg
 13223  1F9B  0020               	movlb	0	; select bank0
 13224  1F9C  00B2               	movwf	rtcc_read@addr
 13225                           
 13226                           ;RTC6.c: 103: return i2c_read1ByteRegister(0x6F, addr);
 13227  1F9D  0832               	movf	rtcc_read@addr,w
 13228  1F9E  00B1               	movwf	??_rtcc_read
 13229  1F9F  0831               	movf	??_rtcc_read,w
 13230  1FA0  00AA               	movwf	i2c_read1ByteRegister@reg
 13231  1FA1  306F               	movlw	111
 13232  1FA2  3197  2710         	fcall	_i2c_read1ByteRegister
 13233  1FA4  0008               	return
 13234  1FA5                     __end_of_rtcc_read:	
 13235                           
 13236                           	psect	text33
 13237  1710                     __ptext33:	
 13238 ;; *************** function _i2c_read1ByteRegister *****************
 13239 ;; Defined at:
 13240 ;;		line 65 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 13241 ;; Parameters:    Size  Location     Type
 13242 ;;  address         1    wreg     unsigned char 
 13243 ;;  reg             1   10[BANK0 ] unsigned char 
 13244 ;; Auto vars:     Size  Location     Type
 13245 ;;  address         1   12[BANK0 ] unsigned char 
 13246 ;;  x               2   14[BANK0 ] int 
 13247 ;;  d2              1   16[BANK0 ] unsigned char 
 13248 ;;  e               1   13[BANK0 ] enum E92
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  1    wreg      unsigned char 
 13251 ;; Registers used:
 13252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13258 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13259 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13261 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13262 ;;Total ram usage:        7 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:   14
 13265 ;; This function calls:
 13266 ;;		_i2c_close
 13267 ;;		_i2c_masterWrite
 13268 ;;		_i2c_open
 13269 ;;		_i2c_setAddressNACKCallback
 13270 ;;		_i2c_setBuffer
 13271 ;;		_i2c_setDataCompleteCallback
 13272 ;; This function is called by:
 13273 ;;		_rtcc_read
 13274 ;;		_rtc6_EEPRReadStatusRegister
 13275 ;;		_rtc6_ReadByteEEPROM
 13276 ;; This function uses a non-reentrant model
 13277 ;;
 13278                           
 13279                           
 13280                           ;psect for function _i2c_read1ByteRegister
 13281  1710                     _i2c_read1ByteRegister:	
 13282                           
 13283                           ;incstack = 0
 13284 ;; hardware stack exceeded
 13285                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13286                           ;i2c_read1ByteRegister@address stored from wreg
 13287  1710  0020               	movlb	0	; select bank0
 13288  1711  00AC               	movwf	i2c_read1ByteRegister@address
 13289                           
 13290                           ;i2c_simple_master.c: 67: uint8_t d2=42;
 13291  1712  302A               	movlw	42
 13292  1713  00AB               	movwf	??_i2c_read1ByteRegister
 13293  1714  082B               	movf	??_i2c_read1ByteRegister,w
 13294  1715  00B0               	movwf	i2c_read1ByteRegister@d2
 13295                           
 13296                           ;i2c_simple_master.c: 68: i2c_error_t e;
 13297                           ;i2c_simple_master.c: 69: int x;
 13298                           ;i2c_simple_master.c: 71: for(x = 2; x != 0; x--)
 13299  1716  3002               	movlw	2
 13300  1717  00AE               	movwf	i2c_read1ByteRegister@x
 13301  1718  3000               	movlw	0
 13302  1719  00AF               	movwf	i2c_read1ByteRegister@x+1
 13303  171A  082E               	movf	i2c_read1ByteRegister@x,w
 13304  171B  042F               	iorwf	i2c_read1ByteRegister@x+1,w
 13305  171C  1903               	btfsc	3,2
 13306  171D  2F5C               	goto	l6906
 13307  171E                     l6886:	
 13308                           ;i2c_simple_master.c: 72: {
 13309                           ;i2c_simple_master.c: 73: while(!i2c_open(address));
 13310                           
 13311  171E  0020               	movlb	0	; select bank0
 13312  171F  082C               	movf	i2c_read1ByteRegister@address,w
 13313  1720  3196  26C2  3197   	fcall	_i2c_open
 13314  1723  3A00               	xorlw	0
 13315  1724  1903               	skipnz
 13316  1725  2F1E               	goto	l6886
 13317                           
 13318                           ;i2c_simple_master.c: 74: i2c_setDataCompleteCallback(rd1RegCompleteHandler,&d2);
 13319  1726  3007               	movlw	low _rd1RegCompleteHandler
 13320  1727  0020               	movlb	0	; select bank0
 13321  1728  00A5               	movwf	i2c_setDataCompleteCallback@cb
 13322  1729  3011               	movlw	high _rd1RegCompleteHandler
 13323  172A  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 13324  172B  3030               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 13325  172C  00AB               	movwf	??_i2c_read1ByteRegister
 13326  172D  082B               	movf	??_i2c_read1ByteRegister,w
 13327  172E  00A7               	movwf	i2c_setDataCompleteCallback@p
 13328  172F  3190  202D  3197   	fcall	_i2c_setDataCompleteCallback
 13329                           
 13330                           ;i2c_simple_master.c: 75: i2c_setBuffer(&reg,1);
 13331  1732  3001               	movlw	1
 13332  1733  0020               	movlb	0	; select bank0
 13333  1734  00A0               	movwf	i2c_setBuffer@bufferSize
 13334  1735  3000               	movlw	0
 13335  1736  00A1               	movwf	i2c_setBuffer@bufferSize+1
 13336  1737  302A               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 13337  1738  3190  20C6  3197   	fcall	_i2c_setBuffer
 13338                           
 13339                           ;i2c_simple_master.c: 76: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 13340  173B  30E4               	movlw	low _i2c_restartWrite
 13341  173C  0020               	movlb	0	; select bank0
 13342  173D  00A5               	movwf	i2c_setAddressNACKCallback@cb
 13343  173E  301E               	movlw	high _i2c_restartWrite
 13344  173F  00A6               	movwf	i2c_setAddressNACKCallback@cb+1
 13345  1740  01A7               	clrf	i2c_setAddressNACKCallback@p
 13346  1741  3190  203A  3197   	fcall	_i2c_setAddressNACKCallback
 13347                           
 13348                           ;i2c_simple_master.c: 77: i2c_masterWrite();
 13349  1744  319E  26BE  3197   	fcall	_i2c_masterWrite
 13350  1747                     l6896:	
 13351                           ;i2c_simple_master.c: 78: while(I2C_BUSY == (e = i2c_close()));
 13352                           
 13353  1747  3191  217A  3197   	fcall	_i2c_close
 13354  174A  0020               	movlb	0	; select bank0
 13355  174B  00AB               	movwf	??_i2c_read1ByteRegister
 13356  174C  082B               	movf	??_i2c_read1ByteRegister,w
 13357  174D  00AD               	movwf	i2c_read1ByteRegister@e
 13358  174E  032D               	decf	i2c_read1ByteRegister@e,w
 13359  174F  1903               	btfsc	3,2
 13360  1750  2F47               	goto	l6896
 13361                           
 13362                           ;i2c_simple_master.c: 79: if(e==I2C_NOERR) break;
 13363  1751  082D               	movf	i2c_read1ByteRegister@e,w
 13364  1752  1903               	btfsc	3,2
 13365  1753  2F5C               	goto	l6906
 13366  1754  30FF               	movlw	255
 13367  1755  07AE               	addwf	i2c_read1ByteRegister@x,f
 13368  1756  30FF               	movlw	255
 13369  1757  3DAF               	addwfc	i2c_read1ByteRegister@x+1,f
 13370  1758  082E               	movf	i2c_read1ByteRegister@x,w
 13371  1759  042F               	iorwf	i2c_read1ByteRegister@x+1,w
 13372  175A  1D03               	btfss	3,2
 13373  175B  2F1E               	goto	l6886
 13374  175C                     l6906:	
 13375                           
 13376                           ;i2c_simple_master.c: 80: }
 13377                           ;i2c_simple_master.c: 83: return d2;
 13378  175C  0830               	movf	i2c_read1ByteRegister@d2,w
 13379  175D  0008               	return
 13380  175E                     __end_of_i2c_read1ByteRegister:	
 13381                           
 13382                           	psect	text34
 13383  103A                     __ptext34:	
 13384 ;; *************** function _i2c_setAddressNACKCallback *****************
 13385 ;; Defined at:
 13386 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
 13387 ;; Parameters:    Size  Location     Type
 13388 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 13389 ;;		 -> i2c_restartWrite(1), 
 13390 ;;  p               1    7[BANK0 ] PTR void 
 13391 ;;		 -> NULL(0), 
 13392 ;; Auto vars:     Size  Location     Type
 13393 ;;		None
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  1    wreg      void 
 13396 ;; Registers used:
 13397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 0/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13403 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13405 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13406 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13407 ;;Total ram usage:        4 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:    7
 13410 ;; This function calls:
 13411 ;;		_setCallBack
 13412 ;; This function is called by:
 13413 ;;		_i2c_write1ByteRegister
 13414 ;;		_i2c_read1ByteRegister
 13415 ;;		_i2c_writeNBytes
 13416 ;;		_i2c_read2ByteRegister
 13417 ;;		_i2c_write2ByteRegister
 13418 ;;		_i2c_readDataBlock
 13419 ;; This function uses a non-reentrant model
 13420 ;;
 13421                           
 13422                           
 13423                           ;psect for function _i2c_setAddressNACKCallback
 13424  103A                     _i2c_setAddressNACKCallback:	
 13425                           
 13426                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
 13427                           
 13428                           ;incstack = 0
 13429                           ; Regs used in _i2c_setAddressNACKCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 13430  103A  0020               	movlb	0	; select bank0
 13431  103B  0826               	movf	i2c_setAddressNACKCallback@cb+1,w
 13432  103C  00A1               	movwf	setCallBack@cb+1
 13433  103D  0825               	movf	i2c_setAddressNACKCallback@cb,w
 13434  103E  00A0               	movwf	setCallBack@cb
 13435  103F  0827               	movf	i2c_setAddressNACKCallback@p,w
 13436  1040  00A8               	movwf	??_i2c_setAddressNACKCallback
 13437  1041  0828               	movf	??_i2c_setAddressNACKCallback,w
 13438  1042  00A2               	movwf	setCallBack@p
 13439  1043  3002               	movlw	2
 13440  1044  3192  2297         	fcall	_setCallBack
 13441  1046  0008               	return
 13442  1047                     __end_of_i2c_setAddressNACKCallback:	
 13443                           
 13444                           	psect	text35
 13445  16C2                     __ptext35:	
 13446 ;; *************** function _i2c_open *****************
 13447 ;; Defined at:
 13448 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;  address         1    wreg     unsigned char 
 13451 ;; Auto vars:     Size  Location     Type
 13452 ;;  address         1    3[BANK0 ] unsigned char 
 13453 ;;  ret             1    4[BANK0 ] enum E15138
 13454 ;; Return value:  Size  Location     Type
 13455 ;;                  1    wreg      enum E15138
 13456 ;; Registers used:
 13457 ;;		wreg, status,2, status,0, pclath, cstack
 13458 ;; Tracked objects:
 13459 ;;		On entry : 0/0
 13460 ;;		On exit  : 0/0
 13461 ;;		Unchanged: 0/0
 13462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13464 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13467 ;;Total ram usage:        3 bytes
 13468 ;; Hardware stack levels used:    1
 13469 ;; Hardware stack levels required when called:    7
 13470 ;; This function calls:
 13471 ;;		_i2c1_driver_open
 13472 ;;		_i2c1_driver_setBusCollisionISR
 13473 ;;		_i2c1_driver_setI2cISR
 13474 ;;		_mssp1_clearIRQ
 13475 ;; This function is called by:
 13476 ;;		_i2c_write1ByteRegister
 13477 ;;		_i2c_read1ByteRegister
 13478 ;;		_i2c_writeNBytes
 13479 ;;		_i2c_read2ByteRegister
 13480 ;;		_i2c_write2ByteRegister
 13481 ;;		_i2c_readDataBlock
 13482 ;;		_i2c_readNBytes
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           
 13487                           ;psect for function _i2c_open
 13488  16C2                     _i2c_open:	
 13489                           
 13490                           ;incstack = 0
 13491                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 13492                           ;i2c_open@address stored from wreg
 13493  16C2  0020               	movlb	0	; select bank0
 13494  16C3  00A3               	movwf	i2c_open@address
 13495                           
 13496                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 13497  16C4  01A4               	clrf	i2c_open@ret
 13498  16C5  0AA4               	incf	i2c_open@ret,f
 13499                           
 13500                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 13501  16C6  0021               	movlb	1	; select bank1
 13502  16C7  18C7               	btfsc	_i2c_status^(0+128),1
 13503  16C8  2F0D               	goto	l217
 13504                           
 13505                           ;i2c_master.c: 121: {
 13506                           ;i2c_master.c: 122: i2c_status.address = address;
 13507  16C9  0020               	movlb	0	; select bank0
 13508  16CA  0823               	movf	i2c_open@address,w
 13509  16CB  00A2               	movwf	??_i2c_open
 13510  16CC  0822               	movf	??_i2c_open,w
 13511  16CD  0021               	movlb	1	; select bank1
 13512  16CE  00C8               	movwf	(_i2c_status^(0+128)+1)
 13513                           
 13514                           ;i2c_master.c: 123: i2c_status.busy = 0;
 13515  16CF  1047               	bcf	_i2c_status^(0+128),0
 13516                           
 13517                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 13518  16D0  14C7               	bsf	_i2c_status^(0+128),1
 13519                           
 13520                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 13521  16D1  11C7               	bcf	_i2c_status^(0+128),3
 13522                           
 13523                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 13524  16D2  300E               	movlw	14
 13525  16D3  0020               	movlb	0	; select bank0
 13526  16D4  00A2               	movwf	??_i2c_open
 13527  16D5  0822               	movf	??_i2c_open,w
 13528  16D6  0021               	movlb	1	; select bank1
 13529  16D7  00D0               	movwf	(_i2c_status^(0+128)+9)
 13530                           
 13531                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 13532  16D8  30F4               	movlw	244
 13533  16D9  00CE               	movwf	(_i2c_status^(0+128)+7)
 13534  16DA  3001               	movlw	1
 13535  16DB  00CF               	movwf	(_i2c_status^(0+128)+8)
 13536                           
 13537                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 13538  16DC  1547               	bsf	_i2c_status^(0+128),2
 13539                           
 13540                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 13541  16DD  30D8               	movlw	low _returnStop
 13542  16DE  00D2               	movwf	(low ((_i2c_status| 0+11)))^(0+128)
 13543  16DF  301E               	movlw	high _returnStop
 13544  16E0  00D3               	movwf	((low ((_i2c_status| 0+11)))^(0+128)+1)
 13545                           
 13546                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 13547  16E1  01DE               	clrf	(low ((_i2c_status| 0+23)))^(0+128)
 13548                           
 13549                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 13550  16E2  30D8               	movlw	low _returnStop
 13551  16E3  00D4               	movwf	(low ((_i2c_status| 0+13)))^(0+128)
 13552  16E4  301E               	movlw	high _returnStop
 13553  16E5  00D5               	movwf	((low ((_i2c_status| 0+13)))^(0+128)+1)
 13554                           
 13555                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 13556  16E6  01DF               	clrf	(low ((_i2c_status| 0+24)))^(0+128)
 13557                           
 13558                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 13559  16E7  30D8               	movlw	low _returnStop
 13560  16E8  00D6               	movwf	(low ((_i2c_status| 0+15)))^(0+128)
 13561  16E9  301E               	movlw	high _returnStop
 13562  16EA  00D7               	movwf	((low ((_i2c_status| 0+15)))^(0+128)+1)
 13563                           
 13564                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 13565  16EB  01E0               	clrf	(low ((_i2c_status| 0+25)))^(0+128)
 13566                           
 13567                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 13568  16EC  30D8               	movlw	low _returnStop
 13569  16ED  00D8               	movwf	(low ((_i2c_status| 0+17)))^(0+128)
 13570  16EE  301E               	movlw	high _returnStop
 13571  16EF  00D9               	movwf	((low ((_i2c_status| 0+17)))^(0+128)+1)
 13572                           
 13573                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 13574  16F0  01E1               	clrf	(low ((_i2c_status| 0+26)))^(0+128)
 13575                           
 13576                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 13577  16F1  30DE               	movlw	low _returnReset
 13578  16F2  00DA               	movwf	(low ((_i2c_status| 0+19)))^(0+128)
 13579  16F3  301E               	movlw	high _returnReset
 13580  16F4  00DB               	movwf	((low ((_i2c_status| 0+19)))^(0+128)+1)
 13581                           
 13582                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 13583  16F5  01E2               	clrf	(low ((_i2c_status| 0+27)))^(0+128)
 13584                           
 13585                           ;i2c_master.c: 142: i2c1_driver_open();
 13586  16F6  319F  2791  3196   	fcall	_i2c1_driver_open
 13587                           
 13588                           ;i2c_master.c: 143: mssp1_clearIRQ();
 13589  16F9  319E  267A  3196   	fcall	_mssp1_clearIRQ
 13590                           
 13591                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 13592  16FC  3065               	movlw	low _i2c_busCollisionISR
 13593  16FD  0020               	movlb	0	; select bank0
 13594  16FE  00A0               	movwf	i2c1_driver_setBusCollisionISR@f
 13595  16FF  301E               	movlw	high _i2c_busCollisionISR
 13596  1700  00A1               	movwf	i2c1_driver_setBusCollisionISR@f+1
 13597  1701  319E  26F0  3196   	fcall	_i2c1_driver_setBusCollisionISR
 13598                           
 13599                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 13600  1704  3035               	movlw	low _i2c_ISR
 13601  1705  0020               	movlb	0	; select bank0
 13602  1706  00A0               	movwf	i2c1_driver_setI2cISR@f
 13603  1707  3013               	movlw	high _i2c_ISR
 13604  1708  00A1               	movwf	i2c1_driver_setI2cISR@f+1
 13605  1709  319E  26F6         	fcall	_i2c1_driver_setI2cISR
 13606                           
 13607                           ;i2c_master.c: 151: ret = I2C_NOERR;
 13608  170B  0020               	movlb	0	; select bank0
 13609  170C  01A4               	clrf	i2c_open@ret
 13610  170D                     l217:	
 13611                           
 13612                           ;i2c_master.c: 152: }
 13613                           ;i2c_master.c: 153: return ret;
 13614  170D  0020               	movlb	0	; select bank0
 13615  170E  0824               	movf	i2c_open@ret,w
 13616  170F  0008               	return
 13617  1710                     __end_of_i2c_open:	
 13618                           
 13619                           	psect	text36
 13620  1EF6                     __ptext36:	
 13621 ;; *************** function _i2c1_driver_setI2cISR *****************
 13622 ;; Defined at:
 13623 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 13624 ;; Parameters:    Size  Location     Type
 13625 ;;  f               2    0[BANK0 ] PTR void 
 13626 ;;		 -> i2c_ISR(1), 
 13627 ;; Auto vars:     Size  Location     Type
 13628 ;;		None
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  1    wreg      void 
 13631 ;; Registers used:
 13632 ;;		wreg
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13641 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13642 ;;Total ram usage:        2 bytes
 13643 ;; Hardware stack levels used:    1
 13644 ;; Hardware stack levels required when called:    6
 13645 ;; This function calls:
 13646 ;;		Nothing
 13647 ;; This function is called by:
 13648 ;;		_i2c_open
 13649 ;; This function uses a non-reentrant model
 13650 ;;
 13651                           
 13652                           
 13653                           ;psect for function _i2c1_driver_setI2cISR
 13654  1EF6                     _i2c1_driver_setI2cISR:	
 13655                           
 13656                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 13657                           
 13658                           ;incstack = 0
 13659                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 13660  1EF6  0020               	movlb	0	; select bank0
 13661  1EF7  0821               	movf	i2c1_driver_setI2cISR@f+1,w
 13662  1EF8  00FB               	movwf	_i2c1_driver_i2cISR+1
 13663  1EF9  0820               	movf	i2c1_driver_setI2cISR@f,w
 13664  1EFA  00FA               	movwf	_i2c1_driver_i2cISR
 13665  1EFB  0008               	return
 13666  1EFC                     __end_of_i2c1_driver_setI2cISR:	
 13667                           
 13668                           	psect	text37
 13669  1EF0                     __ptext37:	
 13670 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 13671 ;; Defined at:
 13672 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 13673 ;; Parameters:    Size  Location     Type
 13674 ;;  f               2    0[BANK0 ] PTR void 
 13675 ;;		 -> i2c_busCollisionISR(1), 
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;		None
 13678 ;; Return value:  Size  Location     Type
 13679 ;;                  1    wreg      void 
 13680 ;; Registers used:
 13681 ;;		wreg
 13682 ;; Tracked objects:
 13683 ;;		On entry : 0/0
 13684 ;;		On exit  : 0/0
 13685 ;;		Unchanged: 0/0
 13686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13691 ;;Total ram usage:        2 bytes
 13692 ;; Hardware stack levels used:    1
 13693 ;; Hardware stack levels required when called:    6
 13694 ;; This function calls:
 13695 ;;		Nothing
 13696 ;; This function is called by:
 13697 ;;		_i2c_open
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           
 13702                           ;psect for function _i2c1_driver_setBusCollisionISR
 13703  1EF0                     _i2c1_driver_setBusCollisionISR:	
 13704                           
 13705                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 13706                           
 13707                           ;incstack = 0
 13708                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 13709  1EF0  0020               	movlb	0	; select bank0
 13710  1EF1  0821               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 13711  1EF2  00FD               	movwf	_i2c1_driver_busCollisionISR+1
 13712  1EF3  0820               	movf	i2c1_driver_setBusCollisionISR@f,w
 13713  1EF4  00FC               	movwf	_i2c1_driver_busCollisionISR
 13714  1EF5  0008               	return
 13715  1EF6                     __end_of_i2c1_driver_setBusCollisionISR:	
 13716                           
 13717                           	psect	text38
 13718  1F91                     __ptext38:	
 13719 ;; *************** function _i2c1_driver_open *****************
 13720 ;; Defined at:
 13721 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;		None
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;		None
 13726 ;; Return value:  Size  Location     Type
 13727 ;;		None               void
 13728 ;; Registers used:
 13729 ;;		wreg, status,2
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13739 ;;Total ram usage:        0 bytes
 13740 ;; Hardware stack levels used:    1
 13741 ;; Hardware stack levels required when called:    6
 13742 ;; This function calls:
 13743 ;;		Nothing
 13744 ;; This function is called by:
 13745 ;;		_i2c_open
 13746 ;; This function uses a non-reentrant model
 13747 ;;
 13748                           
 13749                           
 13750                           ;psect for function _i2c1_driver_open
 13751  1F91                     _i2c1_driver_open:	
 13752                           
 13753                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 13754                           
 13755                           ;incstack = 0
 13756                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 13757  1F91  0023               	movlb	3	; select bank3
 13758  1F92  1A90               	btfsc	16,5	;volatile
 13759  1F93  0008               	return
 13760                           
 13761                           ;i2c1_driver.c: 86: {
 13762                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 13763  1F94  018F               	clrf	15	;volatile
 13764                           
 13765                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 13766  1F95  3028               	movlw	40
 13767  1F96  0090               	movwf	16	;volatile
 13768                           
 13769                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 13770  1F97  0191               	clrf	17	;volatile
 13771                           
 13772                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 13773  1F98  3003               	movlw	3
 13774  1F99  008D               	movwf	13	;volatile
 13775                           
 13776                           ;i2c1_driver.c: 93: else
 13777                           ;i2c1_driver.c: 94: return 0;
 13778                           ;	Return value of _i2c1_driver_open is never used
 13779                           
 13780                           ;i2c1_driver.c: 92: }
 13781                           
 13782                           ;i2c1_driver.c: 91: return 1;
 13783                           ;	Return value of _i2c1_driver_open is never used
 13784  1F9A  0008               	return
 13785  1F9B                     __end_of_i2c1_driver_open:	
 13786                           
 13787                           	psect	text39
 13788  1EBE                     __ptext39:	
 13789 ;; *************** function _i2c_masterWrite *****************
 13790 ;; Defined at:
 13791 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
 13792 ;; Parameters:    Size  Location     Type
 13793 ;;		None
 13794 ;; Auto vars:     Size  Location     Type
 13795 ;;		None
 13796 ;; Return value:  Size  Location     Type
 13797 ;;                  1    wreg      enum E15138
 13798 ;; Registers used:
 13799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13800 ;; Tracked objects:
 13801 ;;		On entry : 0/0
 13802 ;;		On exit  : 0/0
 13803 ;;		Unchanged: 0/0
 13804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13809 ;;Total ram usage:        0 bytes
 13810 ;; Hardware stack levels used:    1
 13811 ;; Hardware stack levels required when called:   13
 13812 ;; This function calls:
 13813 ;;		_i2c_masterOperation
 13814 ;; This function is called by:
 13815 ;;		_i2c_write1ByteRegister
 13816 ;;		_i2c_read1ByteRegister
 13817 ;;		_i2c_writeNBytes
 13818 ;;		_i2c_read2ByteRegister
 13819 ;;		_i2c_write2ByteRegister
 13820 ;;		_i2c_readDataBlock
 13821 ;; This function uses a non-reentrant model
 13822 ;;
 13823                           
 13824                           
 13825                           ;psect for function _i2c_masterWrite
 13826  1EBE                     _i2c_masterWrite:	
 13827                           
 13828                           ;i2c_master.c: 224: return i2c_masterOperation(0);
 13829                           ;	Return value of _i2c_masterWrite is never used
 13830                           
 13831                           ;incstack = 0
 13832 ;; hardware stack exceeded
 13833                           ; Regs used in _i2c_masterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13834  1EBE  3000               	movlw	0
 13835  1EBF  3192  2273         	fcall	_i2c_masterOperation
 13836  1EC1  0008               	return
 13837  1EC2                     __end_of_i2c_masterWrite:	
 13838                           
 13839                           	psect	text40
 13840  1273                     __ptext40:	
 13841 ;; *************** function _i2c_masterOperation *****************
 13842 ;; Defined at:
 13843 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 13844 ;; Parameters:    Size  Location     Type
 13845 ;;  read            1    wreg     unsigned char 
 13846 ;; Auto vars:     Size  Location     Type
 13847 ;;  read            1    8[BANK0 ] unsigned char 
 13848 ;;  ret             1    9[BANK0 ] enum E15138
 13849 ;; Return value:  Size  Location     Type
 13850 ;;                  1    wreg      enum E15138
 13851 ;; Registers used:
 13852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13853 ;; Tracked objects:
 13854 ;;		On entry : 0/0
 13855 ;;		On exit  : 0/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13862 ;;Total ram usage:        3 bytes
 13863 ;; Hardware stack levels used:    1
 13864 ;; Hardware stack levels required when called:   12
 13865 ;; This function calls:
 13866 ;;		_i2c1_driver_start
 13867 ;;		_i2c_poller
 13868 ;;		_mssp1_IRQisEnabled
 13869 ;; This function is called by:
 13870 ;;		_i2c_masterWrite
 13871 ;;		_i2c_masterRead
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           
 13876                           ;psect for function _i2c_masterOperation
 13877  1273                     _i2c_masterOperation:	
 13878                           
 13879                           ;incstack = 0
 13880 ;; hardware stack exceeded
 13881                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13882                           ;i2c_masterOperation@read stored from wreg
 13883  1273  0020               	movlb	0	; select bank0
 13884  1274  00A8               	movwf	i2c_masterOperation@read
 13885                           
 13886                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 13887  1275  01A9               	clrf	i2c_masterOperation@ret
 13888  1276  0AA9               	incf	i2c_masterOperation@ret,f
 13889                           
 13890                           ;i2c_master.c: 196: if(!i2c_status.busy)
 13891  1277  0021               	movlb	1	; select bank1
 13892  1278  1847               	btfsc	_i2c_status^(0+128),0
 13893  1279  2A94               	goto	l6836
 13894                           
 13895                           ;i2c_master.c: 197: {
 13896                           ;i2c_master.c: 198: i2c_status.busy = 1;
 13897  127A  1447               	bsf	_i2c_status^(0+128),0
 13898                           
 13899                           ;i2c_master.c: 199: ret = I2C_NOERR;
 13900  127B  0020               	movlb	0	; select bank0
 13901  127C  01A9               	clrf	i2c_masterOperation@ret
 13902                           
 13903                           ;i2c_master.c: 201: if(read)
 13904  127D  0828               	movf	i2c_masterOperation@read,w
 13905  127E  1903               	btfsc	3,2
 13906  127F  2A84               	goto	l6830
 13907                           
 13908                           ;i2c_master.c: 202: {
 13909                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 13910  1280  0021               	movlb	1	; select bank1
 13911  1281  01D0               	clrf	(_i2c_status^(0+128)+9)
 13912  1282  0AD0               	incf	(_i2c_status^(0+128)+9),f
 13913                           
 13914                           ;i2c_master.c: 204: }
 13915  1283  2A8A               	goto	l6832
 13916  1284                     l6830:	
 13917                           
 13918                           ;i2c_master.c: 205: else
 13919                           ;i2c_master.c: 206: {
 13920                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 13921  1284  3002               	movlw	2
 13922  1285  0020               	movlb	0	; select bank0
 13923  1286  00A7               	movwf	??_i2c_masterOperation
 13924  1287  0827               	movf	??_i2c_masterOperation,w
 13925  1288  0021               	movlb	1	; select bank1
 13926  1289  00D0               	movwf	(_i2c_status^(0+128)+9)
 13927  128A                     l6832:	
 13928                           
 13929                           ;i2c_master.c: 208: }
 13930                           ;i2c_master.c: 209: i2c1_driver_start();
 13931  128A  319E  2680  3192   	fcall	_i2c1_driver_start
 13932                           
 13933                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 13934  128D  319F  270A  3192   	fcall	_mssp1_IRQisEnabled
 13935  1290  1803               	btfsc	3,0
 13936  1291  2A94               	goto	l6836
 13937                           
 13938                           ;i2c_master.c: 212: i2c_poller();
 13939  1292  319F  27D1         	fcall	_i2c_poller
 13940  1294                     l6836:	
 13941                           
 13942                           ;i2c_master.c: 213: }
 13943                           ;i2c_master.c: 214: return ret;
 13944  1294  0020               	movlb	0	; select bank0
 13945  1295  0829               	movf	i2c_masterOperation@ret,w
 13946  1296  0008               	return
 13947  1297                     __end_of_i2c_masterOperation:	
 13948                           
 13949                           	psect	text41
 13950  1F0A                     __ptext41:	
 13951 ;; *************** function _mssp1_IRQisEnabled *****************
 13952 ;; Defined at:
 13953 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 13954 ;; Parameters:    Size  Location     Type
 13955 ;;		None
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;		None
 13958 ;; Return value:  Size  Location     Type
 13959 ;;		None               void
 13960 ;; Registers used:
 13961 ;;		wreg, status,2, status,0
 13962 ;; Tracked objects:
 13963 ;;		On entry : 0/0
 13964 ;;		On exit  : 0/0
 13965 ;;		Unchanged: 0/0
 13966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13969 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13970 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13971 ;;Total ram usage:        1 bytes
 13972 ;; Hardware stack levels used:    1
 13973 ;; Hardware stack levels required when called:    6
 13974 ;; This function calls:
 13975 ;;		Nothing
 13976 ;; This function is called by:
 13977 ;;		_i2c_masterOperation
 13978 ;; This function uses a non-reentrant model
 13979 ;;
 13980                           
 13981                           
 13982                           ;psect for function _mssp1_IRQisEnabled
 13983  1F0A                     _mssp1_IRQisEnabled:	
 13984                           
 13985                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
 13986                           
 13987                           ;incstack = 0
 13988                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 13989  1F0A  002E               	movlb	14	; select bank14
 13990  1F0B  0819               	movf	25,w	;volatile
 13991  1F0C  3901               	andlw	1
 13992  1F0D  0020               	movlb	0	; select bank0
 13993  1F0E  00A0               	movwf	??_mssp1_IRQisEnabled
 13994  1F0F  0C20               	rrf	??_mssp1_IRQisEnabled,w
 13995  1F10  0008               	return
 13996  1F11                     __end_of_mssp1_IRQisEnabled:	
 13997                           
 13998                           	psect	text42
 13999  1FD1                     __ptext42:	
 14000 ;; *************** function _i2c_poller *****************
 14001 ;; Defined at:
 14002 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 14003 ;; Parameters:    Size  Location     Type
 14004 ;;		None
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;		None
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  1    wreg      void 
 14009 ;; Registers used:
 14010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14011 ;; Tracked objects:
 14012 ;;		On entry : 0/0
 14013 ;;		On exit  : 0/0
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14020 ;;Total ram usage:        0 bytes
 14021 ;; Hardware stack levels used:    1
 14022 ;; Hardware stack levels required when called:   11
 14023 ;; This function calls:
 14024 ;;		_i2c_ISR
 14025 ;;		_mssp1_waitForEvent
 14026 ;; This function is called by:
 14027 ;;		_i2c_masterOperation
 14028 ;; This function uses a non-reentrant model
 14029 ;;
 14030                           
 14031                           
 14032                           ;psect for function _i2c_poller
 14033  1FD1                     _i2c_poller:	
 14034  1FD1                     l6818:	
 14035                           ;i2c_master.c: 232: while(i2c_status.busy)
 14036                           
 14037                           ;incstack = 0
 14038 ;; hardware stack exceeded
 14039                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14040                           
 14041  1FD1  0021               	movlb	1	; select bank1
 14042  1FD2  1C47               	btfss	_i2c_status^(0+128),0
 14043  1FD3  0008               	return
 14044                           
 14045                           ;i2c_master.c: 233: {
 14046                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 14047  1FD4  3000               	movlw	0
 14048  1FD5  319F  27C6  319F   	fcall	_mssp1_waitForEvent
 14049                           
 14050                           ;i2c_master.c: 235: i2c_ISR();
 14051  1FD8  3193  2335  319F   	fcall	_i2c_ISR
 14052  1FDB  2FD1               	goto	l6818
 14053  1FDC                     __end_of_i2c_poller:	
 14054                           
 14055                           	psect	text43
 14056  1FC6                     __ptext43:	
 14057 ;; *************** function _mssp1_waitForEvent *****************
 14058 ;; Defined at:
 14059 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;  timeout         1    wreg     PTR unsigned int 
 14062 ;;		 -> NULL(0), 
 14063 ;; Auto vars:     Size  Location     Type
 14064 ;;  timeout         1    0[BANK0 ] PTR unsigned int 
 14065 ;;		 -> NULL(0), 
 14066 ;; Return value:  Size  Location     Type
 14067 ;;                  1    wreg      void 
 14068 ;; Registers used:
 14069 ;;		wreg
 14070 ;; Tracked objects:
 14071 ;;		On entry : 0/0
 14072 ;;		On exit  : 0/0
 14073 ;;		Unchanged: 0/0
 14074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;Total ram usage:        1 bytes
 14080 ;; Hardware stack levels used:    1
 14081 ;; Hardware stack levels required when called:    6
 14082 ;; This function calls:
 14083 ;;		Nothing
 14084 ;; This function is called by:
 14085 ;;		_i2c_poller
 14086 ;; This function uses a non-reentrant model
 14087 ;;
 14088                           
 14089                           
 14090                           ;psect for function _mssp1_waitForEvent
 14091  1FC6                     _mssp1_waitForEvent:	
 14092                           
 14093                           ;i2c1_driver.c: 73: if(PIR3bits.SSP1IF == 0)
 14094                           
 14095                           ;incstack = 0
 14096                           ; Regs used in _mssp1_waitForEvent: [wreg]
 14097  1FC6  002E               	movlb	14	; select bank14
 14098  1FC7  180F               	btfsc	15,0	;volatile
 14099  1FC8  0008               	return
 14100  1FC9                     l53:	
 14101                           ;i2c1_driver.c: 74: {
 14102                           ;i2c1_driver.c: 75: while(1)
 14103                           
 14104                           
 14105                           ;i2c1_driver.c: 76: {
 14106                           ;i2c1_driver.c: 77: if(PIR3bits.SSP1IF) break;
 14107  1FC9  002E               	movlb	14	; select bank14
 14108  1FCA  180F               	btfsc	15,0	;volatile
 14109  1FCB  0008               	return
 14110                           
 14111                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 14112  1FCC  3008               	movlw	8
 14113  1FCD                     u5567:	
 14114  1FCD  0B89               	decfsz	9,f
 14115  1FCE  2FCD               	goto	u5567
 14116  1FCF  0000               	nop
 14117  1FD0  2FC9               	goto	l53
 14118  1FD1                     __end_of_mssp1_waitForEvent:	
 14119                           
 14120                           	psect	text44
 14121  1335                     __ptext44:	
 14122 ;; *************** function _i2c_ISR *****************
 14123 ;; Defined at:
 14124 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;		None
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  1    wreg      void 
 14131 ;; Registers used:
 14132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14133 ;; Tracked objects:
 14134 ;;		On entry : 0/0
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14140 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14141 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14142 ;;Total ram usage:        3 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; Hardware stack levels required when called:   10
 14145 ;; This function calls:
 14146 ;;		_do_I2C_DO_ACK
 14147 ;;		_do_I2C_DO_ADDRESS_NACK
 14148 ;;		_do_I2C_DO_NACK_RESTART
 14149 ;;		_do_I2C_DO_NACK_STOP
 14150 ;;		_do_I2C_IDLE
 14151 ;;		_do_I2C_RCEN
 14152 ;;		_do_I2C_RESET
 14153 ;;		_do_I2C_RX
 14154 ;;		_do_I2C_SEND_ADR_READ
 14155 ;;		_do_I2C_SEND_ADR_WRITE
 14156 ;;		_do_I2C_SEND_RESTART
 14157 ;;		_do_I2C_SEND_RESTART_READ
 14158 ;;		_do_I2C_SEND_RESTART_WRITE
 14159 ;;		_do_I2C_SEND_STOP
 14160 ;;		_do_I2C_TX
 14161 ;;		_do_I2C_TX_EMPTY
 14162 ;;		_i2c1_driver_isNACK
 14163 ;;		_mssp1_clearIRQ
 14164 ;; This function is called by:
 14165 ;;		_i2c_open
 14166 ;;		_i2c_poller
 14167 ;;		_INTERRUPT_InterruptManager
 14168 ;; This function uses a non-reentrant model
 14169 ;;
 14170                           
 14171                           
 14172                           ;psect for function _i2c_ISR
 14173  1335                     _i2c_ISR:	
 14174                           
 14175                           ;Skip over the trampoline to the duplicate function for level 1
 14176  1335  1C7E               	btfss	126,0
 14177  1336  2B39               	goto	l6802
 14178  1337  3192  2ABC         	ljmp	i1l7094
 14179  1339                     _i2c_ISR$intlevel0:	
 14180  1339                     l6802:	
 14181                           ;incstack = 0
 14182 ;; hardware stack exceeded
 14183                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14184                           
 14185                           
 14186                           ;i2c_master.c: 421: mssp1_clearIRQ();
 14187  1339  319E  267A  3193   	fcall	_mssp1_clearIRQ
 14188                           
 14189                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 14190  133C  0021               	movlb	1	; select bank1
 14191  133D  1DC7               	btfss	_i2c_status^(0+128),3
 14192  133E  2B4A               	goto	l6810
 14193  133F  319F  276A  3193   	fcall	_i2c1_driver_isNACK
 14194  1342  1C03               	btfss	3,0
 14195  1343  2B4A               	goto	l6810
 14196                           
 14197                           ;i2c_master.c: 428: {
 14198                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 14199  1344  300F               	movlw	15
 14200  1345  0020               	movlb	0	; select bank0
 14201  1346  00A4               	movwf	??_i2c_ISR
 14202  1347  0824               	movf	??_i2c_ISR,w
 14203  1348  0021               	movlb	1	; select bank1
 14204  1349  00D0               	movwf	(_i2c_status^(0+128)+9)
 14205  134A                     l6810:	
 14206                           
 14207                           ;i2c_master.c: 430: }
 14208                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 14209  134A  0021               	movlb	1	; select bank1
 14210  134B  0850               	movf	(_i2c_status^(0+128)+9),w
 14211  134C  0020               	movlb	0	; select bank0
 14212  134D  00A4               	movwf	??_i2c_ISR
 14213  134E  01A5               	clrf	??_i2c_ISR+1
 14214  134F  35A4               	lslf	??_i2c_ISR,f
 14215  1350  0DA5               	rlf	??_i2c_ISR+1,f
 14216  1351  3000               	movlw	low (_fsmStateTable| (0+32768))
 14217  1352  0724               	addwf	??_i2c_ISR,w
 14218  1353  0084               	movwf	4
 14219  1354  3098               	movlw	high (_fsmStateTable| (0+32768))
 14220  1355  3D25               	addwfc	??_i2c_ISR+1,w
 14221  1356  0085               	movwf	5
 14222  1357  3F01               	moviw [1]fsr0
 14223  1358  008A               	movwf	10
 14224  1359  3F00               	moviw [0]fsr0
 14225  135A  000A               	callw
 14226  135B  3193               	pagesel	$
 14227  135C  0020               	movlb	0	; select bank0
 14228  135D  00A6               	movwf	??_i2c_ISR+2
 14229  135E  0826               	movf	??_i2c_ISR+2,w
 14230  135F  0021               	movlb	1	; select bank1
 14231  1360  00D0               	movwf	(_i2c_status^(0+128)+9)
 14232  1361  0008               	return
 14233  1362                     __end_of_i2c_ISR:	
 14234                           
 14235                           	psect	text45
 14236  15EC                     __ptext45:	
 14237 ;; *************** function _do_I2C_RX *****************
 14238 ;; Defined at:
 14239 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 14240 ;; Parameters:    Size  Location     Type
 14241 ;;		None
 14242 ;; Auto vars:     Size  Location     Type
 14243 ;;		None
 14244 ;; Return value:  Size  Location     Type
 14245 ;;                  1    wreg      enum E15307
 14246 ;; Registers used:
 14247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14248 ;; Tracked objects:
 14249 ;;		On entry : 0/0
 14250 ;;		On exit  : 0/0
 14251 ;;		Unchanged: 0/0
 14252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14255 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14257 ;;Total ram usage:        1 bytes
 14258 ;; Hardware stack levels used:    1
 14259 ;; Hardware stack levels required when called:    9
 14260 ;; This function calls:
 14261 ;;		Absolute function
 14262 ;;		_do_I2C_DO_NACK_RESTART
 14263 ;;		_do_I2C_DO_NACK_STOP
 14264 ;;		_i2c1_driver_getRXData
 14265 ;;		_i2c1_driver_sendACK
 14266 ;;		_i2c_restartWrite
 14267 ;;		_rd1RegCompleteHandler
 14268 ;;		_rd2RegCompleteHandler
 14269 ;;		_rdBlkRegCompleteHandler
 14270 ;;		_returnReset
 14271 ;;		_returnStop
 14272 ;;		_wr1RegCompleteHandler
 14273 ;;		_wr2RegCompleteHandler
 14274 ;; This function is called by:
 14275 ;;		_i2c_ISR
 14276 ;;		i1_i2c_ISR
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           
 14281                           ;psect for function _do_I2C_RX
 14282  15EC                     _do_I2C_RX:	
 14283                           
 14284                           ;Skip over the trampoline to the duplicate function for level 1
 14285  15EC  1C7E               	btfss	126,0
 14286  15ED  2DF0               	goto	l6756
 14287  15EE  3195  2D27         	ljmp	i1l7006
 14288  15F0                     _do_I2C_RX$intlevel0:	
 14289  15F0                     l6756:	
 14290                           ;incstack = 0
 14291 ;; hardware stack exceeded
 14292                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14293                           
 14294                           
 14295                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 14296  15F0  319E  268C  3195   	fcall	_i2c1_driver_getRXData
 14297  15F3  0020               	movlb	0	; select bank0
 14298  15F4  00A0               	movwf	??_do_I2C_RX
 14299  15F5  0021               	movlb	1	; select bank1
 14300  15F6  0849               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 14301  15F7  0086               	movwf	6
 14302  15F8  0187               	clrf	7
 14303  15F9  0020               	movlb	0	; select bank0
 14304  15FA  0820               	movf	??_do_I2C_RX,w
 14305  15FB  0081               	movwf	1
 14306  15FC  3001               	movlw	1
 14307  15FD  00A0               	movwf	??_do_I2C_RX
 14308  15FE  0820               	movf	??_do_I2C_RX,w
 14309  15FF  0021               	movlb	1	; select bank1
 14310  1600  07C9               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 14311                           
 14312                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 14313  1601  3001               	movlw	1
 14314  1602  02CA               	subwf	(_i2c_status^(0+128)+3),f
 14315  1603  3000               	movlw	0
 14316  1604  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14317  1605  084A               	movf	(_i2c_status^(0+128)+3),w
 14318  1606  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14319  1607  1903               	btfsc	3,2
 14320  1608  2E0D               	goto	l314
 14321                           
 14322                           ;i2c_master.c: 361: {
 14323                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 14324  1609  319E  26B6         	fcall	_i2c1_driver_sendACK
 14325                           
 14326                           ;i2c_master.c: 363: return I2C_RCEN;
 14327  160B  3005               	movlw	5
 14328                           
 14329                           ;i2c_master.c: 364: }
 14330  160C  0008               	return
 14331  160D                     l314:	
 14332                           
 14333                           ;i2c_master.c: 365: else
 14334                           ;i2c_master.c: 366: {
 14335                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 14336  160D  1547               	bsf	_i2c_status^(0+128),2
 14337                           
 14338                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 14339  160E  2E15               	goto	l6780
 14340  160F                     l6770:	
 14341                           ;i2c_master.c: 369: {
 14342                           ;i2c_master.c: 370: case i2c_restart_write:
 14343                           
 14344                           
 14345                           ;i2c_master.c: 371: case i2c_restart_read:
 14346                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 14347  160F  319F  2759         	fcall	_do_I2C_DO_NACK_RESTART
 14348  1611  0008               	return
 14349  1612                     l6774:	
 14350                           ;i2c_master.c: 374: case i2c_continue:
 14351                           
 14352                           ;i2c_master.c: 373: default:
 14353                           
 14354                           
 14355                           ;i2c_master.c: 375: case i2c_stop:
 14356                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 14357  1612  319F  2751         	fcall	_do_I2C_DO_NACK_STOP
 14358                           
 14359                           ;i2c_master.c: 377: }
 14360  1614  0008               	return
 14361  1615                     l6780:	
 14362  1615  0021               	movlb	1	; select bank1
 14363  1616  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 14364  1617  0020               	movlb	0	; select bank0
 14365  1618  00A0               	movwf	??_do_I2C_RX
 14366  1619  0820               	movf	??_do_I2C_RX,w
 14367  161A  00A9               	movwf	returnStop@p
 14368  161B  300B               	movlw	11
 14369  161C  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 14370  161D  0086               	movwf	6
 14371  161E  0187               	clrf	7
 14372  161F  3F41               	moviw [1]fsr1
 14373  1620  008A               	movwf	10
 14374  1621  3F40               	moviw [0]fsr1
 14375  1622  000A               	callw
 14376  1623  3195               	pagesel	$
 14377                           
 14378                           ; Switch size 1, requested type "space"
 14379                           ; Number of cases is 4, Range of values is 1 to 4
 14380                           ; switch strategies available:
 14381                           ; Name         Instructions Cycles
 14382                           ; simple_byte           13     7 (average)
 14383                           ; direct_byte           17     9 (fixed)
 14384                           ; jumptable            263     9 (fixed)
 14385                           ;	Chosen strategy is simple_byte
 14386  1624  3A01               	xorlw	1	; case 1
 14387  1625  1903               	skipnz
 14388  1626  2E12               	goto	l6774
 14389  1627  3A03               	xorlw	3	; case 2
 14390  1628  1903               	skipnz
 14391  1629  2E0F               	goto	l6770
 14392  162A  3A01               	xorlw	1	; case 3
 14393  162B  1903               	skipnz
 14394  162C  2E0F               	goto	l6770
 14395  162D  3A07               	xorlw	7	; case 4
 14396  162E  1903               	skipnz
 14397  162F  2E12               	goto	l6774
 14398  1630  2E12               	goto	l6774
 14399  1631  0008               	return
 14400  1632                     __end_of_do_I2C_RX:	
 14401                           
 14402                           	psect	text46
 14403  175E                     __ptext46:	
 14404 ;; *************** function _do_I2C_TX *****************
 14405 ;; Defined at:
 14406 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 14407 ;; Parameters:    Size  Location     Type
 14408 ;;		None
 14409 ;; Auto vars:     Size  Location     Type
 14410 ;;		None
 14411 ;; Return value:  Size  Location     Type
 14412 ;;                  1    wreg      enum E15307
 14413 ;; Registers used:
 14414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14415 ;; Tracked objects:
 14416 ;;		On entry : 0/0
 14417 ;;		On exit  : 0/0
 14418 ;;		Unchanged: 0/0
 14419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14422 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14423 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14424 ;;Total ram usage:        3 bytes
 14425 ;; Hardware stack levels used:    1
 14426 ;; Hardware stack levels required when called:    9
 14427 ;; This function calls:
 14428 ;;		Absolute function
 14429 ;;		_do_I2C_SEND_RESTART_READ
 14430 ;;		_do_I2C_SEND_RESTART_WRITE
 14431 ;;		_do_I2C_SEND_STOP
 14432 ;;		_i2c1_driver_TXData
 14433 ;;		_i2c1_driver_isNACK
 14434 ;;		_i2c_restartWrite
 14435 ;;		_rd1RegCompleteHandler
 14436 ;;		_rd2RegCompleteHandler
 14437 ;;		_rdBlkRegCompleteHandler
 14438 ;;		_returnReset
 14439 ;;		_returnStop
 14440 ;;		_wr1RegCompleteHandler
 14441 ;;		_wr2RegCompleteHandler
 14442 ;; This function is called by:
 14443 ;;		_i2c_ISR
 14444 ;;		i1_i2c_ISR
 14445 ;; This function uses a non-reentrant model
 14446 ;;
 14447                           
 14448                           
 14449                           ;psect for function _do_I2C_TX
 14450  175E                     _do_I2C_TX:	
 14451                           
 14452                           ;Skip over the trampoline to the duplicate function for level 1
 14453  175E  1C7E               	btfss	126,0
 14454  175F  2F62               	goto	l6726
 14455  1760  3196  2E78         	ljmp	i1l6976
 14456  1762                     _do_I2C_TX$intlevel0:	
 14457  1762                     l6726:	
 14458                           ;incstack = 0
 14459 ;; hardware stack exceeded
 14460                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14461                           
 14462                           
 14463                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 14464  1762  319F  276A  3197   	fcall	_i2c1_driver_isNACK
 14465  1765  1803               	btfsc	3,0
 14466  1766  2F71               	goto	l6744
 14467  1767  2F8E               	goto	l298
 14468  1768                     l6730:	
 14469                           ;i2c_master.c: 338: {
 14470                           ;i2c_master.c: 339: case i2c_restart_read:
 14471                           
 14472                           ;i2c_master.c: 336: {
 14473                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 14474                           
 14475                           
 14476                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 14477  1768  319F  2729         	fcall	_do_I2C_SEND_RESTART_READ
 14478  176A  0008               	return
 14479  176B                     l6734:	
 14480                           ;i2c_master.c: 341: case i2c_restart_write:
 14481                           
 14482                           
 14483                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 14484  176B  319F  2731         	fcall	_do_I2C_SEND_RESTART_WRITE
 14485  176D  0008               	return
 14486  176E                     l6738:	
 14487                           ;i2c_master.c: 344: case i2c_continue:
 14488                           
 14489                           ;i2c_master.c: 343: default:
 14490                           
 14491                           
 14492                           ;i2c_master.c: 345: case i2c_stop:
 14493                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 14494  176E  319F  2741         	fcall	_do_I2C_SEND_STOP
 14495                           
 14496                           ;i2c_master.c: 347: }
 14497  1770  0008               	return
 14498  1771                     l6744:	
 14499  1771  0021               	movlb	1	; select bank1
 14500  1772  0861               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 14501  1773  0020               	movlb	0	; select bank0
 14502  1774  00A1               	movwf	??_do_I2C_TX
 14503  1775  0821               	movf	??_do_I2C_TX,w
 14504  1776  00A9               	movwf	returnStop@p
 14505  1777  3011               	movlw	17
 14506  1778  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 14507  1779  0086               	movwf	6
 14508  177A  0187               	clrf	7
 14509  177B  3F41               	moviw [1]fsr1
 14510  177C  008A               	movwf	10
 14511  177D  3F40               	moviw [0]fsr1
 14512  177E  000A               	callw
 14513  177F  3197               	pagesel	$
 14514                           
 14515                           ; Switch size 1, requested type "space"
 14516                           ; Number of cases is 4, Range of values is 1 to 4
 14517                           ; switch strategies available:
 14518                           ; Name         Instructions Cycles
 14519                           ; simple_byte           13     7 (average)
 14520                           ; direct_byte           17     9 (fixed)
 14521                           ; jumptable            263     9 (fixed)
 14522                           ;	Chosen strategy is simple_byte
 14523  1780  3A01               	xorlw	1	; case 1
 14524  1781  1903               	skipnz
 14525  1782  2F6E               	goto	l6738
 14526  1783  3A03               	xorlw	3	; case 2
 14527  1784  1903               	skipnz
 14528  1785  2F68               	goto	l6730
 14529  1786  3A01               	xorlw	1	; case 3
 14530  1787  1903               	skipnz
 14531  1788  2F6B               	goto	l6734
 14532  1789  3A07               	xorlw	7	; case 4
 14533  178A  1903               	skipnz
 14534  178B  2F6E               	goto	l6738
 14535  178C  2F6E               	goto	l6738
 14536                           
 14537                           ;i2c_master.c: 348: }
 14538  178D  0008               	return
 14539  178E                     l298:	
 14540                           
 14541                           ;i2c_master.c: 349: else
 14542                           ;i2c_master.c: 350: {
 14543                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 14544  178E  0021               	movlb	1	; select bank1
 14545  178F  11C7               	bcf	_i2c_status^(0+128),3
 14546                           
 14547                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 14548  1790  3002               	movlw	2
 14549  1791  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 14550  1792  0086               	movwf	6
 14551  1793  0187               	clrf	7
 14552  1794  3F40               	moviw [0]fsr1
 14553  1795  0084               	movwf	4
 14554  1796  0185               	clrf	5
 14555  1797  0A81               	incf	1,f
 14556  1798  0800               	movf	0,w
 14557  1799  319E  26EA  3197   	fcall	_i2c1_driver_TXData
 14558                           
 14559                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 14560  179C  3001               	movlw	1
 14561  179D  0021               	movlb	1	; select bank1
 14562  179E  02CA               	subwf	(_i2c_status^(0+128)+3),f
 14563  179F  3000               	movlw	0
 14564  17A0  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14565  17A1  084A               	movf	(_i2c_status^(0+128)+3),w
 14566  17A2  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14567  17A3  1D03               	btfss	3,2
 14568  17A4  2FA7               	goto	l6752
 14569  17A5  3006               	movlw	6
 14570  17A6  2FA8               	goto	L4
 14571  17A7                     l6752:	
 14572  17A7  3003               	movlw	3
 14573  17A8                     L4:	
 14574  17A8  0020               	movlb	0	; select bank0
 14575  17A9  00A2               	movwf	_do_I2C_TX$723
 14576  17AA  3000               	movlw	0
 14577  17AB  00A3               	movwf	_do_I2C_TX$723+1
 14578  17AC  0822               	movf	_do_I2C_TX$723,w
 14579  17AD  0008               	return
 14580  17AE                     __end_of_do_I2C_TX:	
 14581                           
 14582                           	psect	text47
 14583  130B                     __ptext47:	
 14584 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 14585 ;; Defined at:
 14586 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 14587 ;; Parameters:    Size  Location     Type
 14588 ;;		None
 14589 ;; Auto vars:     Size  Location     Type
 14590 ;;		None
 14591 ;; Return value:  Size  Location     Type
 14592 ;;                  1    wreg      enum E15307
 14593 ;; Registers used:
 14594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14603 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14604 ;;Total ram usage:        1 bytes
 14605 ;; Hardware stack levels used:    1
 14606 ;; Hardware stack levels required when called:    9
 14607 ;; This function calls:
 14608 ;;		Absolute function
 14609 ;;		_do_I2C_SEND_RESTART
 14610 ;;		_do_I2C_SEND_STOP
 14611 ;;		_i2c_restartWrite
 14612 ;;		_rd1RegCompleteHandler
 14613 ;;		_rd2RegCompleteHandler
 14614 ;;		_rdBlkRegCompleteHandler
 14615 ;;		_returnReset
 14616 ;;		_returnStop
 14617 ;;		_wr1RegCompleteHandler
 14618 ;;		_wr2RegCompleteHandler
 14619 ;; This function is called by:
 14620 ;;		_i2c_ISR
 14621 ;;		i1_i2c_ISR
 14622 ;; This function uses a non-reentrant model
 14623 ;;
 14624                           
 14625                           
 14626                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 14627  130B                     _do_I2C_DO_ADDRESS_NACK:	
 14628                           
 14629                           ;Skip over the trampoline to the duplicate function for level 1
 14630  130B  1C7E               	btfss	126,0
 14631  130C  2B0F               	goto	l6710
 14632  130D  3192  2A2C         	ljmp	i1l6960
 14633  130F                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 14634  130F                     l6710:	
 14635                           ;incstack = 0
 14636 ;; hardware stack exceeded
 14637                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14638                           
 14639                           
 14640                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 14641  130F  0021               	movlb	1	; select bank1
 14642  1310  11C7               	bcf	_i2c_status^(0+128),3
 14643                           
 14644                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 14645  1311  3002               	movlw	2
 14646  1312  0020               	movlb	0	; select bank0
 14647  1313  00A0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14648  1314  0820               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14649  1315  0021               	movlb	1	; select bank1
 14650  1316  00D1               	movwf	(_i2c_status^(0+128)+10)
 14651                           
 14652                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 14653  1317  2B1E               	goto	l6724
 14654  1318                     l6714:	
 14655                           ;i2c_master.c: 324: {
 14656                           ;i2c_master.c: 325: case i2c_restart_read:
 14657                           
 14658                           
 14659                           ;i2c_master.c: 326: case i2c_restart_write:
 14660                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 14661  1318  319F  2739         	fcall	_do_I2C_SEND_RESTART
 14662  131A  0008               	return
 14663  131B                     l6718:	
 14664                           ;i2c_master.c: 328: default:
 14665                           
 14666                           
 14667                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 14668  131B  319F  2741         	fcall	_do_I2C_SEND_STOP
 14669                           
 14670                           ;i2c_master.c: 330: }
 14671  131D  0008               	return
 14672  131E                     l6724:	
 14673  131E  0021               	movlb	1	; select bank1
 14674  131F  0860               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 14675  1320  0020               	movlb	0	; select bank0
 14676  1321  00A0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14677  1322  0820               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14678  1323  00A9               	movwf	returnStop@p
 14679  1324  300F               	movlw	15
 14680  1325  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 14681  1326  0086               	movwf	6
 14682  1327  0187               	clrf	7
 14683  1328  3F41               	moviw [1]fsr1
 14684  1329  008A               	movwf	10
 14685  132A  3F40               	moviw [0]fsr1
 14686  132B  000A               	callw
 14687  132C  3193               	pagesel	$
 14688                           
 14689                           ; Switch size 1, requested type "space"
 14690                           ; Number of cases is 2, Range of values is 2 to 3
 14691                           ; switch strategies available:
 14692                           ; Name         Instructions Cycles
 14693                           ; simple_byte            7     4 (average)
 14694                           ; direct_byte           13     9 (fixed)
 14695                           ; jumptable            263     9 (fixed)
 14696                           ;	Chosen strategy is simple_byte
 14697  132D  3A02               	xorlw	2	; case 2
 14698  132E  1903               	skipnz
 14699  132F  2B18               	goto	l6714
 14700  1330  3A01               	xorlw	1	; case 3
 14701  1331  1903               	skipnz
 14702  1332  2B18               	goto	l6714
 14703  1333  2B1B               	goto	l6718
 14704  1334  0008               	return
 14705  1335                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 14706                           
 14707                           	psect	text48
 14708  1F59                     __ptext48:	
 14709 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 14710 ;; Defined at:
 14711 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 14712 ;; Parameters:    Size  Location     Type
 14713 ;;		None
 14714 ;; Auto vars:     Size  Location     Type
 14715 ;;		None
 14716 ;; Return value:  Size  Location     Type
 14717 ;;                  1    wreg      enum E15307
 14718 ;; Registers used:
 14719 ;;		wreg, status,2, status,0, pclath, cstack
 14720 ;; Tracked objects:
 14721 ;;		On entry : 0/0
 14722 ;;		On exit  : 0/0
 14723 ;;		Unchanged: 0/0
 14724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14729 ;;Total ram usage:        0 bytes
 14730 ;; Hardware stack levels used:    1
 14731 ;; Hardware stack levels required when called:    7
 14732 ;; This function calls:
 14733 ;;		_i2c1_driver_sendNACK
 14734 ;; This function is called by:
 14735 ;;		_do_I2C_RX
 14736 ;;		_i2c_ISR
 14737 ;;		i1_i2c_ISR
 14738 ;; This function uses a non-reentrant model
 14739 ;;
 14740                           
 14741                           
 14742                           ;psect for function _do_I2C_DO_NACK_RESTART
 14743  1F59                     _do_I2C_DO_NACK_RESTART:	
 14744                           
 14745                           ;Skip over the trampoline to the duplicate function for level 1
 14746  1F59  1C7E               	btfss	126,0
 14747  1F5A  2F5D               	goto	l3384
 14748  1F5B  319E  2EB2         	ljmp	i1l4198
 14749  1F5D                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 14750  1F5D                     l3384:	
 14751                           ;incstack = 0
 14752 ;; hardware stack exceeded
 14753                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14754                           
 14755                           
 14756                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 14757  1F5D  319E  26BA         	fcall	_i2c1_driver_sendNACK
 14758                           
 14759                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 14760  1F5F  3009               	movlw	9
 14761  1F60  0008               	return
 14762  1F61                     __end_of_do_I2C_DO_NACK_RESTART:	
 14763                           
 14764                           	psect	text49
 14765  1F51                     __ptext49:	
 14766 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 14767 ;; Defined at:
 14768 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 14769 ;; Parameters:    Size  Location     Type
 14770 ;;		None
 14771 ;; Auto vars:     Size  Location     Type
 14772 ;;		None
 14773 ;; Return value:  Size  Location     Type
 14774 ;;                  1    wreg      enum E15307
 14775 ;; Registers used:
 14776 ;;		wreg, status,2, status,0, pclath, cstack
 14777 ;; Tracked objects:
 14778 ;;		On entry : 0/0
 14779 ;;		On exit  : 0/0
 14780 ;;		Unchanged: 0/0
 14781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14786 ;;Total ram usage:        0 bytes
 14787 ;; Hardware stack levels used:    1
 14788 ;; Hardware stack levels required when called:    7
 14789 ;; This function calls:
 14790 ;;		_i2c1_driver_sendNACK
 14791 ;; This function is called by:
 14792 ;;		_do_I2C_RX
 14793 ;;		_i2c_ISR
 14794 ;;		i1_i2c_ISR
 14795 ;; This function uses a non-reentrant model
 14796 ;;
 14797                           
 14798                           
 14799                           ;psect for function _do_I2C_DO_NACK_STOP
 14800  1F51                     _do_I2C_DO_NACK_STOP:	
 14801                           
 14802                           ;Skip over the trampoline to the duplicate function for level 1
 14803  1F51  1C7E               	btfss	126,0
 14804  1F52  2F55               	goto	l3378
 14805  1F53  319E  2EAE         	ljmp	i1l4192
 14806  1F55                     _do_I2C_DO_NACK_STOP$intlevel0:	
 14807  1F55                     l3378:	
 14808                           ;incstack = 0
 14809 ;; hardware stack exceeded
 14810                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 14811                           
 14812                           
 14813                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 14814  1F55  319E  26BA         	fcall	_i2c1_driver_sendNACK
 14815                           
 14816                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 14817  1F57  300A               	movlw	10
 14818  1F58  0008               	return
 14819  1F59                     __end_of_do_I2C_DO_NACK_STOP:	
 14820                           
 14821                           	psect	text50
 14822  1F49                     __ptext50:	
 14823 ;; *************** function _do_I2C_DO_ACK *****************
 14824 ;; Defined at:
 14825 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;		None
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;		None
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  1    wreg      enum E15307
 14832 ;; Registers used:
 14833 ;;		wreg, status,2, status,0, pclath, cstack
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/0
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14843 ;;Total ram usage:        0 bytes
 14844 ;; Hardware stack levels used:    1
 14845 ;; Hardware stack levels required when called:    7
 14846 ;; This function calls:
 14847 ;;		_i2c1_driver_sendACK
 14848 ;; This function is called by:
 14849 ;;		_i2c_ISR
 14850 ;;		i1_i2c_ISR
 14851 ;; This function uses a non-reentrant model
 14852 ;;
 14853                           
 14854                           
 14855                           ;psect for function _do_I2C_DO_ACK
 14856  1F49                     _do_I2C_DO_ACK:	
 14857                           
 14858                           ;Skip over the trampoline to the duplicate function for level 1
 14859  1F49  1C7E               	btfss	126,0
 14860  1F4A  2F4D               	goto	l3484
 14861  1F4B  319E  2EAA         	ljmp	i1l4624
 14862  1F4D                     _do_I2C_DO_ACK$intlevel0:	
 14863  1F4D                     l3484:	
 14864                           ;incstack = 0
 14865                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 14866                           
 14867                           
 14868                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 14869  1F4D  319E  26B6         	fcall	_i2c1_driver_sendACK
 14870                           
 14871                           ;i2c_master.c: 302: return I2C_RCEN;
 14872  1F4F  3005               	movlw	5
 14873  1F50  0008               	return
 14874  1F51                     __end_of_do_I2C_DO_ACK:	
 14875                           
 14876                           	psect	text51
 14877  1F87                     __ptext51:	
 14878 ;; *************** function _do_I2C_RCEN *****************
 14879 ;; Defined at:
 14880 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 14881 ;; Parameters:    Size  Location     Type
 14882 ;;		None
 14883 ;; Auto vars:     Size  Location     Type
 14884 ;;		None
 14885 ;; Return value:  Size  Location     Type
 14886 ;;                  1    wreg      enum E15307
 14887 ;; Registers used:
 14888 ;;		wreg, status,2, status,0, pclath, cstack
 14889 ;; Tracked objects:
 14890 ;;		On entry : 0/0
 14891 ;;		On exit  : 0/0
 14892 ;;		Unchanged: 0/0
 14893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14898 ;;Total ram usage:        0 bytes
 14899 ;; Hardware stack levels used:    1
 14900 ;; Hardware stack levels required when called:    7
 14901 ;; This function calls:
 14902 ;;		_i2c1_driver_startRX
 14903 ;; This function is called by:
 14904 ;;		_i2c_ISR
 14905 ;;		i1_i2c_ISR
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           
 14909                           
 14910                           ;psect for function _do_I2C_RCEN
 14911  1F87                     _do_I2C_RCEN:	
 14912                           
 14913                           ;Skip over the trampoline to the duplicate function for level 1
 14914  1F87  1C7E               	btfss	126,0
 14915  1F88  2F8B               	goto	l3476
 14916  1F89  319E  2ECC         	ljmp	i1l4616
 14917  1F8B                     _do_I2C_RCEN$intlevel0:	
 14918  1F8B                     l3476:	
 14919                           ;incstack = 0
 14920                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 14921                           
 14922                           
 14923                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 14924  1F8B  0021               	movlb	1	; select bank1
 14925  1F8C  11C7               	bcf	_i2c_status^(0+128),3
 14926                           
 14927                           ;i2c_master.c: 295: i2c1_driver_startRX();
 14928  1F8D  319E  2689         	fcall	_i2c1_driver_startRX
 14929                           
 14930                           ;i2c_master.c: 296: return I2C_RX;
 14931  1F8F  3004               	movlw	4
 14932  1F90  0008               	return
 14933  1F91                     __end_of_do_I2C_RCEN:	
 14934                           
 14935                           	psect	text52
 14936  1FBB                     __ptext52:	
 14937 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 14938 ;; Defined at:
 14939 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 14940 ;; Parameters:    Size  Location     Type
 14941 ;;		None
 14942 ;; Auto vars:     Size  Location     Type
 14943 ;;		None
 14944 ;; Return value:  Size  Location     Type
 14945 ;;                  1    wreg      enum E15307
 14946 ;; Registers used:
 14947 ;;		wreg, status,2, status,0, pclath, cstack
 14948 ;; Tracked objects:
 14949 ;;		On entry : 0/0
 14950 ;;		On exit  : 0/0
 14951 ;;		Unchanged: 0/0
 14952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14957 ;;Total ram usage:        0 bytes
 14958 ;; Hardware stack levels used:    1
 14959 ;; Hardware stack levels required when called:    7
 14960 ;; This function calls:
 14961 ;;		_i2c1_driver_TXData
 14962 ;; This function is called by:
 14963 ;;		_i2c_ISR
 14964 ;;		i1_i2c_ISR
 14965 ;; This function uses a non-reentrant model
 14966 ;;
 14967                           
 14968                           
 14969                           ;psect for function _do_I2C_SEND_ADR_WRITE
 14970  1FBB                     _do_I2C_SEND_ADR_WRITE:	
 14971                           
 14972                           ;Skip over the trampoline to the duplicate function for level 1
 14973  1FBB  1C7E               	btfss	126,0
 14974  1FBC  2FBF               	goto	l3468
 14975  1FBD  319F  2F03         	ljmp	i1l4608
 14976  1FBF                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 14977  1FBF                     l3468:	
 14978                           ;incstack = 0
 14979                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14980                           
 14981                           
 14982                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 14983  1FBF  0021               	movlb	1	; select bank1
 14984  1FC0  15C7               	bsf	_i2c_status^(0+128),3
 14985                           
 14986                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 14987  1FC1  3548               	lslf	(_i2c_status^(0+128)+1),w
 14988  1FC2  319E  26EA         	fcall	_i2c1_driver_TXData
 14989                           
 14990                           ;i2c_master.c: 289: return I2C_TX;
 14991  1FC4  3003               	movlw	3
 14992  1FC5  0008               	return
 14993  1FC6                     __end_of_do_I2C_SEND_ADR_WRITE:	
 14994                           
 14995                           	psect	text53
 14996  1FF4                     __ptext53:	
 14997 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 14998 ;; Defined at:
 14999 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 15000 ;; Parameters:    Size  Location     Type
 15001 ;;		None
 15002 ;; Auto vars:     Size  Location     Type
 15003 ;;		None
 15004 ;; Return value:  Size  Location     Type
 15005 ;;                  1    wreg      enum E15307
 15006 ;; Registers used:
 15007 ;;		wreg, status,2, status,0, pclath, cstack
 15008 ;; Tracked objects:
 15009 ;;		On entry : 0/0
 15010 ;;		On exit  : 0/0
 15011 ;;		Unchanged: 0/0
 15012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15017 ;;Total ram usage:        0 bytes
 15018 ;; Hardware stack levels used:    1
 15019 ;; Hardware stack levels required when called:    7
 15020 ;; This function calls:
 15021 ;;		_i2c1_driver_TXData
 15022 ;; This function is called by:
 15023 ;;		_i2c_ISR
 15024 ;;		i1_i2c_ISR
 15025 ;; This function uses a non-reentrant model
 15026 ;;
 15027                           
 15028                           
 15029                           ;psect for function _do_I2C_SEND_ADR_READ
 15030  1FF4                     _do_I2C_SEND_ADR_READ:	
 15031                           
 15032                           ;Skip over the trampoline to the duplicate function for level 1
 15033  1FF4  1C7E               	btfss	126,0
 15034  1FF5  2FF8               	goto	l3460
 15035  1FF6  319F  2F19         	ljmp	i1l4600
 15036  1FF8                     _do_I2C_SEND_ADR_READ$intlevel0:	
 15037  1FF8                     l3460:	
 15038                           ;incstack = 0
 15039                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 15040                           
 15041                           
 15042                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 15043  1FF8  0021               	movlb	1	; select bank1
 15044  1FF9  15C7               	bsf	_i2c_status^(0+128),3
 15045                           
 15046                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 15047  1FFA  1403               	setc
 15048  1FFB  0D48               	rlf	(_i2c_status^(0+128)+1),w
 15049  1FFC  319E  26EA         	fcall	_i2c1_driver_TXData
 15050                           
 15051                           ;i2c_master.c: 282: return I2C_RCEN;
 15052  1FFE  3005               	movlw	5
 15053  1FFF  0008               	return
 15054  2000                     __end_of_do_I2C_SEND_ADR_READ:	
 15055                           
 15056                           	psect	text54
 15057  1F41                     __ptext54:	
 15058 ;; *************** function _do_I2C_SEND_STOP *****************
 15059 ;; Defined at:
 15060 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 15061 ;; Parameters:    Size  Location     Type
 15062 ;;		None
 15063 ;; Auto vars:     Size  Location     Type
 15064 ;;		None
 15065 ;; Return value:  Size  Location     Type
 15066 ;;                  1    wreg      enum E15307
 15067 ;; Registers used:
 15068 ;;		wreg, status,2, status,0, pclath, cstack
 15069 ;; Tracked objects:
 15070 ;;		On entry : 0/0
 15071 ;;		On exit  : 0/0
 15072 ;;		Unchanged: 0/0
 15073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15078 ;;Total ram usage:        0 bytes
 15079 ;; Hardware stack levels used:    1
 15080 ;; Hardware stack levels required when called:    7
 15081 ;; This function calls:
 15082 ;;		_i2c1_driver_stop
 15083 ;; This function is called by:
 15084 ;;		_do_I2C_DO_ADDRESS_NACK
 15085 ;;		_do_I2C_TX
 15086 ;;		_do_I2C_TX_EMPTY
 15087 ;;		_i2c_ISR
 15088 ;;		i1_i2c_ISR
 15089 ;; This function uses a non-reentrant model
 15090 ;;
 15091                           
 15092                           
 15093                           ;psect for function _do_I2C_SEND_STOP
 15094  1F41                     _do_I2C_SEND_STOP:	
 15095                           
 15096                           ;Skip over the trampoline to the duplicate function for level 1
 15097  1F41  1C7E               	btfss	126,0
 15098  1F42  2F45               	goto	l3372
 15099  1F43  319E  2EA6         	ljmp	i1l4186
 15100  1F45                     _do_I2C_SEND_STOP$intlevel0:	
 15101  1F45                     l3372:	
 15102                           ;incstack = 0
 15103 ;; hardware stack exceeded
 15104                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 15105                           
 15106                           
 15107                           ;i2c_master.c: 274: i2c1_driver_stop();
 15108  1F45  319E  2686         	fcall	_i2c1_driver_stop
 15109                           
 15110                           ;i2c_master.c: 275: return I2C_IDLE;
 15111  1F47  3000               	movlw	0
 15112  1F48  0008               	return
 15113  1F49                     __end_of_do_I2C_SEND_STOP:	
 15114                           
 15115                           	psect	text55
 15116  1F39                     __ptext55:	
 15117 ;; *************** function _do_I2C_SEND_RESTART *****************
 15118 ;; Defined at:
 15119 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 15120 ;; Parameters:    Size  Location     Type
 15121 ;;		None
 15122 ;; Auto vars:     Size  Location     Type
 15123 ;;		None
 15124 ;; Return value:  Size  Location     Type
 15125 ;;                  1    wreg      enum E15307
 15126 ;; Registers used:
 15127 ;;		wreg, status,2, status,0, pclath, cstack
 15128 ;; Tracked objects:
 15129 ;;		On entry : 0/0
 15130 ;;		On exit  : 0/0
 15131 ;;		Unchanged: 0/0
 15132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15137 ;;Total ram usage:        0 bytes
 15138 ;; Hardware stack levels used:    1
 15139 ;; Hardware stack levels required when called:    7
 15140 ;; This function calls:
 15141 ;;		_i2c1_driver_restart
 15142 ;; This function is called by:
 15143 ;;		_do_I2C_DO_ADDRESS_NACK
 15144 ;;		_do_I2C_TX_EMPTY
 15145 ;;		_i2c_ISR
 15146 ;;		i1_i2c_ISR
 15147 ;; This function uses a non-reentrant model
 15148 ;;
 15149                           
 15150                           
 15151                           ;psect for function _do_I2C_SEND_RESTART
 15152  1F39                     _do_I2C_SEND_RESTART:	
 15153                           
 15154                           ;Skip over the trampoline to the duplicate function for level 1
 15155  1F39  1C7E               	btfss	126,0
 15156  1F3A  2F3D               	goto	l3366
 15157  1F3B  319E  2EA2         	ljmp	i1l4180
 15158  1F3D                     _do_I2C_SEND_RESTART$intlevel0:	
 15159  1F3D                     l3366:	
 15160                           ;incstack = 0
 15161 ;; hardware stack exceeded
 15162                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15163                           
 15164                           
 15165                           ;i2c_master.c: 268: i2c1_driver_restart();
 15166  1F3D  319E  2683         	fcall	_i2c1_driver_restart
 15167                           
 15168                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 15169  1F3F  3001               	movlw	1
 15170  1F40  0008               	return
 15171  1F41                     __end_of_do_I2C_SEND_RESTART:	
 15172                           
 15173                           	psect	text56
 15174  1F31                     __ptext56:	
 15175 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 15176 ;; Defined at:
 15177 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 15178 ;; Parameters:    Size  Location     Type
 15179 ;;		None
 15180 ;; Auto vars:     Size  Location     Type
 15181 ;;		None
 15182 ;; Return value:  Size  Location     Type
 15183 ;;                  1    wreg      enum E15307
 15184 ;; Registers used:
 15185 ;;		wreg, status,2, status,0, pclath, cstack
 15186 ;; Tracked objects:
 15187 ;;		On entry : 0/0
 15188 ;;		On exit  : 0/0
 15189 ;;		Unchanged: 0/0
 15190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15195 ;;Total ram usage:        0 bytes
 15196 ;; Hardware stack levels used:    1
 15197 ;; Hardware stack levels required when called:    7
 15198 ;; This function calls:
 15199 ;;		_i2c1_driver_restart
 15200 ;; This function is called by:
 15201 ;;		_do_I2C_TX
 15202 ;;		_i2c_ISR
 15203 ;;		i1_i2c_ISR
 15204 ;; This function uses a non-reentrant model
 15205 ;;
 15206                           
 15207                           
 15208                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 15209  1F31                     _do_I2C_SEND_RESTART_WRITE:	
 15210                           
 15211                           ;Skip over the trampoline to the duplicate function for level 1
 15212  1F31  1C7E               	btfss	126,0
 15213  1F32  2F35               	goto	l3360
 15214  1F33  319E  2E9E         	ljmp	i1l4174
 15215  1F35                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 15216  1F35                     l3360:	
 15217                           ;incstack = 0
 15218 ;; hardware stack exceeded
 15219                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15220                           
 15221                           
 15222                           ;i2c_master.c: 262: i2c1_driver_restart();
 15223  1F35  319E  2683         	fcall	_i2c1_driver_restart
 15224                           
 15225                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 15226  1F37  3002               	movlw	2
 15227  1F38  0008               	return
 15228  1F39                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 15229                           
 15230                           	psect	text57
 15231  1F29                     __ptext57:	
 15232 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 15233 ;; Defined at:
 15234 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 15235 ;; Parameters:    Size  Location     Type
 15236 ;;		None
 15237 ;; Auto vars:     Size  Location     Type
 15238 ;;		None
 15239 ;; Return value:  Size  Location     Type
 15240 ;;                  1    wreg      enum E15307
 15241 ;; Registers used:
 15242 ;;		wreg, status,2, status,0, pclath, cstack
 15243 ;; Tracked objects:
 15244 ;;		On entry : 0/0
 15245 ;;		On exit  : 0/0
 15246 ;;		Unchanged: 0/0
 15247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15252 ;;Total ram usage:        0 bytes
 15253 ;; Hardware stack levels used:    1
 15254 ;; Hardware stack levels required when called:    7
 15255 ;; This function calls:
 15256 ;;		_i2c1_driver_restart
 15257 ;; This function is called by:
 15258 ;;		_do_I2C_TX
 15259 ;;		_i2c_ISR
 15260 ;;		i1_i2c_ISR
 15261 ;; This function uses a non-reentrant model
 15262 ;;
 15263                           
 15264                           
 15265                           ;psect for function _do_I2C_SEND_RESTART_READ
 15266  1F29                     _do_I2C_SEND_RESTART_READ:	
 15267                           
 15268                           ;Skip over the trampoline to the duplicate function for level 1
 15269  1F29  1C7E               	btfss	126,0
 15270  1F2A  2F2D               	goto	l3354
 15271  1F2B  319E  2E9A         	ljmp	i1l4168
 15272  1F2D                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 15273  1F2D                     l3354:	
 15274                           ;incstack = 0
 15275 ;; hardware stack exceeded
 15276                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 15277                           
 15278                           
 15279                           ;i2c_master.c: 256: i2c1_driver_restart();
 15280  1F2D  319E  2683         	fcall	_i2c1_driver_restart
 15281                           
 15282                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 15283  1F2F  3001               	movlw	1
 15284  1F30  0008               	return
 15285  1F31                     __end_of_do_I2C_SEND_RESTART_READ:	
 15286                           
 15287                           	psect	text58
 15288  1000                     __ptext58:	
 15289 ;; *************** function _do_I2C_IDLE *****************
 15290 ;; Defined at:
 15291 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 15292 ;; Parameters:    Size  Location     Type
 15293 ;;		None
 15294 ;; Auto vars:     Size  Location     Type
 15295 ;;		None
 15296 ;; Return value:  Size  Location     Type
 15297 ;;                  1    wreg      enum E15307
 15298 ;; Registers used:
 15299 ;;		wreg, status,2
 15300 ;; Tracked objects:
 15301 ;;		On entry : 0/0
 15302 ;;		On exit  : 0/0
 15303 ;;		Unchanged: 0/0
 15304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15309 ;;Total ram usage:        0 bytes
 15310 ;; Hardware stack levels used:    1
 15311 ;; Hardware stack levels required when called:    6
 15312 ;; This function calls:
 15313 ;;		Nothing
 15314 ;; This function is called by:
 15315 ;;		_i2c_ISR
 15316 ;;		i1_i2c_ISR
 15317 ;; This function uses a non-reentrant model
 15318 ;;
 15319                           
 15320                           
 15321                           ;psect for function _do_I2C_IDLE
 15322  1000                     _do_I2C_IDLE:	
 15323                           
 15324                           ;Skip over the trampoline to the duplicate function for level 1
 15325  1000  1C7E               	btfss	126,0
 15326  1001  2804               	goto	l3452
 15327  1002  319E  2EC7         	ljmp	i1l4592
 15328  1004                     _do_I2C_IDLE$intlevel0:	
 15329  1004                     l3452:	
 15330                           ;incstack = 0
 15331                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 15332                           
 15333                           
 15334                           ;i2c_master.c: 249: i2c_status.busy = 0;
 15335  1004  0021               	movlb	1	; select bank1
 15336  1005  1047               	bcf	_i2c_status^(0+128),0
 15337                           
 15338                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 15339  1006  01D1               	clrf	(_i2c_status^(0+128)+10)
 15340                           
 15341                           ;i2c_master.c: 251: return I2C_RESET;
 15342  1007  300E               	movlw	14
 15343  1008  0008               	return
 15344  1009                     __end_of_do_I2C_IDLE:	
 15345                           
 15346                           	psect	text59
 15347  1FB0                     __ptext59:	
 15348 ;; *************** function _do_I2C_RESET *****************
 15349 ;; Defined at:
 15350 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 15351 ;; Parameters:    Size  Location     Type
 15352 ;;		None
 15353 ;; Auto vars:     Size  Location     Type
 15354 ;;		None
 15355 ;; Return value:  Size  Location     Type
 15356 ;;                  1    wreg      enum E15307
 15357 ;; Registers used:
 15358 ;;		wreg, status,2, status,0, pclath, cstack
 15359 ;; Tracked objects:
 15360 ;;		On entry : 0/0
 15361 ;;		On exit  : 0/0
 15362 ;;		Unchanged: 0/0
 15363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;Total ram usage:        0 bytes
 15369 ;; Hardware stack levels used:    1
 15370 ;; Hardware stack levels required when called:    7
 15371 ;; This function calls:
 15372 ;;		_i2c1_driver_resetBus
 15373 ;; This function is called by:
 15374 ;;		_i2c_ISR
 15375 ;;		i1_i2c_ISR
 15376 ;; This function uses a non-reentrant model
 15377 ;;
 15378                           
 15379                           
 15380                           ;psect for function _do_I2C_RESET
 15381  1FB0                     _do_I2C_RESET:	
 15382                           
 15383                           ;Skip over the trampoline to the duplicate function for level 1
 15384  1FB0  1C7E               	btfss	126,0
 15385  1FB1  2FB4               	goto	l3442
 15386  1FB2  319E  2EFC         	ljmp	i1l4582
 15387  1FB4                     _do_I2C_RESET$intlevel0:	
 15388  1FB4                     l3442:	
 15389                           ;incstack = 0
 15390                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 15391                           
 15392                           
 15393                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 15394  1FB4  3188  2000         	fcall	_i2c1_driver_resetBus
 15395                           
 15396                           ;i2c_master.c: 242: i2c_status.busy = 0;
 15397  1FB6  0021               	movlb	1	; select bank1
 15398  1FB7  1047               	bcf	_i2c_status^(0+128),0
 15399                           
 15400                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 15401  1FB8  01D1               	clrf	(_i2c_status^(0+128)+10)
 15402                           
 15403                           ;i2c_master.c: 244: return I2C_RESET;
 15404  1FB9  300E               	movlw	14
 15405  1FBA  0008               	return
 15406  1FBB                     __end_of_do_I2C_RESET:	
 15407                           
 15408                           	psect	text60
 15409  138F                     __ptext60:	
 15410 ;; *************** function _do_I2C_TX_EMPTY *****************
 15411 ;; Defined at:
 15412 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;		None
 15415 ;; Auto vars:     Size  Location     Type
 15416 ;;		None
 15417 ;; Return value:  Size  Location     Type
 15418 ;;                  1    wreg      enum E15307
 15419 ;; Registers used:
 15420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15421 ;; Tracked objects:
 15422 ;;		On entry : 0/0
 15423 ;;		On exit  : 0/0
 15424 ;;		Unchanged: 0/0
 15425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15428 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15429 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15430 ;;Total ram usage:        1 bytes
 15431 ;; Hardware stack levels used:    1
 15432 ;; Hardware stack levels required when called:    9
 15433 ;; This function calls:
 15434 ;;		Absolute function
 15435 ;;		_do_I2C_SEND_RESTART
 15436 ;;		_do_I2C_SEND_STOP
 15437 ;;		_i2c_restartWrite
 15438 ;;		_mssp1_setIRQ
 15439 ;;		_rd1RegCompleteHandler
 15440 ;;		_rd2RegCompleteHandler
 15441 ;;		_rdBlkRegCompleteHandler
 15442 ;;		_returnReset
 15443 ;;		_returnStop
 15444 ;;		_wr1RegCompleteHandler
 15445 ;;		_wr2RegCompleteHandler
 15446 ;; This function is called by:
 15447 ;;		_i2c_ISR
 15448 ;;		i1_i2c_ISR
 15449 ;; This function uses a non-reentrant model
 15450 ;;
 15451                           
 15452                           
 15453                           ;psect for function _do_I2C_TX_EMPTY
 15454  138F                     _do_I2C_TX_EMPTY:	
 15455                           
 15456                           ;Skip over the trampoline to the duplicate function for level 1
 15457  138F  1C7E               	btfss	126,0
 15458  1390  2B93               	goto	l6782
 15459  1391  3192  2AE2         	ljmp	i1l7032
 15460  1393                     _do_I2C_TX_EMPTY$intlevel0:	
 15461  1393                     l6782:	
 15462                           ;incstack = 0
 15463 ;; hardware stack exceeded
 15464                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15465                           
 15466                           
 15467                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 15468  1393  0021               	movlb	1	; select bank1
 15469  1394  1547               	bsf	_i2c_status^(0+128),2
 15470                           
 15471                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 15472  1395  2BA0               	goto	l6800
 15473  1396                     l6784:	
 15474                           ;i2c_master.c: 386: {
 15475                           ;i2c_master.c: 387: case i2c_restart_read:
 15476                           
 15477                           
 15478                           ;i2c_master.c: 388: case i2c_restart_write:
 15479                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 15480  1396  319F  2739         	fcall	_do_I2C_SEND_RESTART
 15481  1398  0008               	return
 15482  1399                     l6788:	
 15483                           ;i2c_master.c: 390: case i2c_continue:
 15484                           
 15485                           
 15486                           ;i2c_master.c: 391: mssp1_setIRQ();
 15487  1399  319E  268F         	fcall	_mssp1_setIRQ
 15488                           
 15489                           ;i2c_master.c: 392: return I2C_TX;
 15490  139B  3003               	movlw	3
 15491  139C  0008               	return
 15492  139D                     l6794:	
 15493                           ;i2c_master.c: 394: case i2c_stop:
 15494                           
 15495                           ;i2c_master.c: 393: default:
 15496                           
 15497                           
 15498                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 15499  139D  319F  2741         	fcall	_do_I2C_SEND_STOP
 15500                           
 15501                           ;i2c_master.c: 396: }
 15502  139F  0008               	return
 15503  13A0                     l6800:	
 15504  13A0  0021               	movlb	1	; select bank1
 15505  13A1  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15506  13A2  0020               	movlb	0	; select bank0
 15507  13A3  00A0               	movwf	??_do_I2C_TX_EMPTY
 15508  13A4  0820               	movf	??_do_I2C_TX_EMPTY,w
 15509  13A5  00A9               	movwf	returnStop@p
 15510  13A6  300B               	movlw	11
 15511  13A7  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 15512  13A8  0086               	movwf	6
 15513  13A9  0187               	clrf	7
 15514  13AA  3F41               	moviw [1]fsr1
 15515  13AB  008A               	movwf	10
 15516  13AC  3F40               	moviw [0]fsr1
 15517  13AD  000A               	callw
 15518  13AE  3193               	pagesel	$
 15519                           
 15520                           ; Switch size 1, requested type "space"
 15521                           ; Number of cases is 4, Range of values is 1 to 4
 15522                           ; switch strategies available:
 15523                           ; Name         Instructions Cycles
 15524                           ; simple_byte           13     7 (average)
 15525                           ; direct_byte           17     9 (fixed)
 15526                           ; jumptable            263     9 (fixed)
 15527                           ;	Chosen strategy is simple_byte
 15528  13AF  3A01               	xorlw	1	; case 1
 15529  13B0  1903               	skipnz
 15530  13B1  2B9D               	goto	l6794
 15531  13B2  3A03               	xorlw	3	; case 2
 15532  13B3  1903               	skipnz
 15533  13B4  2B96               	goto	l6784
 15534  13B5  3A01               	xorlw	1	; case 3
 15535  13B6  1903               	skipnz
 15536  13B7  2B96               	goto	l6784
 15537  13B8  3A07               	xorlw	7	; case 4
 15538  13B9  1903               	skipnz
 15539  13BA  2B99               	goto	l6788
 15540  13BB  2B9D               	goto	l6794
 15541  13BC  0008               	return
 15542  13BD                     __end_of_do_I2C_TX_EMPTY:	
 15543                           
 15544                           	psect	text61
 15545  1E8F                     __ptext61:	
 15546 ;; *************** function _mssp1_setIRQ *****************
 15547 ;; Defined at:
 15548 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 15549 ;; Parameters:    Size  Location     Type
 15550 ;;		None
 15551 ;; Auto vars:     Size  Location     Type
 15552 ;;		None
 15553 ;; Return value:  Size  Location     Type
 15554 ;;                  1    wreg      void 
 15555 ;; Registers used:
 15556 ;;		None
 15557 ;; Tracked objects:
 15558 ;;		On entry : 0/0
 15559 ;;		On exit  : 0/0
 15560 ;;		Unchanged: 0/0
 15561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15566 ;;Total ram usage:        0 bytes
 15567 ;; Hardware stack levels used:    1
 15568 ;; Hardware stack levels required when called:    6
 15569 ;; This function calls:
 15570 ;;		Nothing
 15571 ;; This function is called by:
 15572 ;;		_do_I2C_TX_EMPTY
 15573 ;; This function uses a non-reentrant model
 15574 ;;
 15575                           
 15576                           
 15577                           ;psect for function _mssp1_setIRQ
 15578  1E8F                     _mssp1_setIRQ:	
 15579                           
 15580                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 15581                           
 15582                           ;incstack = 0
 15583                           ; Regs used in _mssp1_setIRQ: []
 15584  1E8F  002E               	movlb	14	; select bank14
 15585  1E90  140F               	bsf	15,0	;volatile
 15586  1E91  0008               	return
 15587  1E92                     __end_of_mssp1_setIRQ:	
 15588                           
 15589                           	psect	text62
 15590  1F6A                     __ptext62:	
 15591 ;; *************** function _i2c1_driver_isNACK *****************
 15592 ;; Defined at:
 15593 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 15594 ;; Parameters:    Size  Location     Type
 15595 ;;		None
 15596 ;; Auto vars:     Size  Location     Type
 15597 ;;		None
 15598 ;; Return value:  Size  Location     Type
 15599 ;;		None               void
 15600 ;; Registers used:
 15601 ;;		wreg, status,2, status,0
 15602 ;; Tracked objects:
 15603 ;;		On entry : 0/0
 15604 ;;		On exit  : 0/0
 15605 ;;		Unchanged: 0/0
 15606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15609 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15611 ;;Total ram usage:        1 bytes
 15612 ;; Hardware stack levels used:    1
 15613 ;; Hardware stack levels required when called:    6
 15614 ;; This function calls:
 15615 ;;		Nothing
 15616 ;; This function is called by:
 15617 ;;		_do_I2C_TX
 15618 ;;		_i2c_ISR
 15619 ;; This function uses a non-reentrant model
 15620 ;;
 15621                           
 15622                           
 15623                           ;psect for function _i2c1_driver_isNACK
 15624  1F6A                     _i2c1_driver_isNACK:	
 15625                           
 15626                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT;
 15627                           
 15628                           ;incstack = 0
 15629                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 15630  1F6A  0023               	movlb	3	; select bank3
 15631  1F6B  0E11               	swapf	17,w	;volatile
 15632  1F6C  0C89               	rrf	9,f
 15633  1F6D  0C89               	rrf	9,f
 15634  1F6E  3901               	andlw	1
 15635  1F6F  0020               	movlb	0	; select bank0
 15636  1F70  00A0               	movwf	??_i2c1_driver_isNACK
 15637  1F71  0C20               	rrf	??_i2c1_driver_isNACK,w
 15638  1F72  0008               	return
 15639  1F73                     __end_of_i2c1_driver_isNACK:	
 15640                           
 15641                           	psect	text63
 15642  1EEA                     __ptext63:	
 15643 ;; *************** function _i2c1_driver_TXData *****************
 15644 ;; Defined at:
 15645 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 15646 ;; Parameters:    Size  Location     Type
 15647 ;;  d               1    wreg     unsigned char 
 15648 ;; Auto vars:     Size  Location     Type
 15649 ;;  d               1    0[BANK0 ] unsigned char 
 15650 ;; Return value:  Size  Location     Type
 15651 ;;                  1    wreg      void 
 15652 ;; Registers used:
 15653 ;;		wreg
 15654 ;; Tracked objects:
 15655 ;;		On entry : 0/0
 15656 ;;		On exit  : 0/0
 15657 ;;		Unchanged: 0/0
 15658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15663 ;;Total ram usage:        1 bytes
 15664 ;; Hardware stack levels used:    1
 15665 ;; Hardware stack levels required when called:    6
 15666 ;; This function calls:
 15667 ;;		Nothing
 15668 ;; This function is called by:
 15669 ;;		_do_I2C_SEND_ADR_READ
 15670 ;;		_do_I2C_SEND_ADR_WRITE
 15671 ;;		_do_I2C_TX
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675                           
 15676                           ;psect for function _i2c1_driver_TXData
 15677  1EEA                     _i2c1_driver_TXData:	
 15678                           
 15679                           ;incstack = 0
 15680                           ; Regs used in _i2c1_driver_TXData: [wreg]
 15681                           ;i2c1_driver_TXData@d stored from wreg
 15682  1EEA  0020               	movlb	0	; select bank0
 15683  1EEB  00A0               	movwf	i2c1_driver_TXData@d
 15684                           
 15685                           ;i2c1_driver.c: 188: SSP1BUF = d;
 15686  1EEC  0820               	movf	i2c1_driver_TXData@d,w
 15687  1EED  0023               	movlb	3	; select bank3
 15688  1EEE  008C               	movwf	12	;volatile
 15689  1EEF  0008               	return
 15690  1EF0                     __end_of_i2c1_driver_TXData:	
 15691                           
 15692                           	psect	text64
 15693  1E8C                     __ptext64:	
 15694 ;; *************** function _i2c1_driver_getRXData *****************
 15695 ;; Defined at:
 15696 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 15697 ;; Parameters:    Size  Location     Type
 15698 ;;		None
 15699 ;; Auto vars:     Size  Location     Type
 15700 ;;		None
 15701 ;; Return value:  Size  Location     Type
 15702 ;;                  1    wreg      unsigned char 
 15703 ;; Registers used:
 15704 ;;		wreg
 15705 ;; Tracked objects:
 15706 ;;		On entry : 0/0
 15707 ;;		On exit  : 0/0
 15708 ;;		Unchanged: 0/0
 15709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15714 ;;Total ram usage:        0 bytes
 15715 ;; Hardware stack levels used:    1
 15716 ;; Hardware stack levels required when called:    6
 15717 ;; This function calls:
 15718 ;;		Nothing
 15719 ;; This function is called by:
 15720 ;;		_do_I2C_RX
 15721 ;; This function uses a non-reentrant model
 15722 ;;
 15723                           
 15724                           
 15725                           ;psect for function _i2c1_driver_getRXData
 15726  1E8C                     _i2c1_driver_getRXData:	
 15727                           
 15728                           ;i2c1_driver.c: 173: return SSP1BUF;
 15729                           
 15730                           ;incstack = 0
 15731                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 15732  1E8C  0023               	movlb	3	; select bank3
 15733  1E8D  080C               	movf	12,w	;volatile
 15734  1E8E  0008               	return
 15735  1E8F                     __end_of_i2c1_driver_getRXData:	
 15736                           
 15737                           	psect	text65
 15738  1EBA                     __ptext65:	
 15739 ;; *************** function _i2c1_driver_sendNACK *****************
 15740 ;; Defined at:
 15741 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;		None
 15744 ;; Auto vars:     Size  Location     Type
 15745 ;;		None
 15746 ;; Return value:  Size  Location     Type
 15747 ;;                  1    wreg      void 
 15748 ;; Registers used:
 15749 ;;		None
 15750 ;; Tracked objects:
 15751 ;;		On entry : 0/0
 15752 ;;		On exit  : 0/0
 15753 ;;		Unchanged: 0/0
 15754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15759 ;;Total ram usage:        0 bytes
 15760 ;; Hardware stack levels used:    1
 15761 ;; Hardware stack levels required when called:    6
 15762 ;; This function calls:
 15763 ;;		Nothing
 15764 ;; This function is called by:
 15765 ;;		_do_I2C_DO_NACK_STOP
 15766 ;;		_do_I2C_DO_NACK_RESTART
 15767 ;; This function uses a non-reentrant model
 15768 ;;
 15769                           
 15770                           
 15771                           ;psect for function _i2c1_driver_sendNACK
 15772  1EBA                     _i2c1_driver_sendNACK:	
 15773                           
 15774                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 15775                           
 15776                           ;incstack = 0
 15777 ;; hardware stack exceeded
 15778                           ; Regs used in _i2c1_driver_sendNACK: []
 15779  1EBA  0023               	movlb	3	; select bank3
 15780  1EBB  1691               	bsf	17,5	;volatile
 15781                           
 15782                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 15783  1EBC  1611               	bsf	17,4	;volatile
 15784  1EBD  0008               	return
 15785  1EBE                     __end_of_i2c1_driver_sendNACK:	
 15786                           
 15787                           	psect	text66
 15788  0800                     __ptext66:	
 15789 ;; *************** function _i2c1_driver_resetBus *****************
 15790 ;; Defined at:
 15791 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 15792 ;; Parameters:    Size  Location     Type
 15793 ;;		None
 15794 ;; Auto vars:     Size  Location     Type
 15795 ;;		None
 15796 ;; Return value:  Size  Location     Type
 15797 ;;                  1    wreg      void 
 15798 ;; Registers used:
 15799 ;;		None
 15800 ;; Tracked objects:
 15801 ;;		On entry : 0/0
 15802 ;;		On exit  : 0/0
 15803 ;;		Unchanged: 0/0
 15804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15809 ;;Total ram usage:        0 bytes
 15810 ;; Hardware stack levels used:    1
 15811 ;; Hardware stack levels required when called:    6
 15812 ;; This function calls:
 15813 ;;		Nothing
 15814 ;; This function is called by:
 15815 ;;		_do_I2C_RESET
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           
 15820                           ;psect for function _i2c1_driver_resetBus
 15821  0800                     _i2c1_driver_resetBus:	
 15822                           
 15823                           ;incstack = 0
 15824                           ; Regs used in _i2c1_driver_resetBus: []
 15825  0800  0008               	return
 15826  0801                     __end_of_i2c1_driver_resetBus:	
 15827                           
 15828                           	psect	text67
 15829  1E89                     __ptext67:	
 15830 ;; *************** function _i2c1_driver_startRX *****************
 15831 ;; Defined at:
 15832 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 15833 ;; Parameters:    Size  Location     Type
 15834 ;;		None
 15835 ;; Auto vars:     Size  Location     Type
 15836 ;;		None
 15837 ;; Return value:  Size  Location     Type
 15838 ;;                  1    wreg      void 
 15839 ;; Registers used:
 15840 ;;		None
 15841 ;; Tracked objects:
 15842 ;;		On entry : 0/0
 15843 ;;		On exit  : 0/0
 15844 ;;		Unchanged: 0/0
 15845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15850 ;;Total ram usage:        0 bytes
 15851 ;; Hardware stack levels used:    1
 15852 ;; Hardware stack levels required when called:    6
 15853 ;; This function calls:
 15854 ;;		Nothing
 15855 ;; This function is called by:
 15856 ;;		_do_I2C_RCEN
 15857 ;; This function uses a non-reentrant model
 15858 ;;
 15859                           
 15860                           
 15861                           ;psect for function _i2c1_driver_startRX
 15862  1E89                     _i2c1_driver_startRX:	
 15863                           
 15864                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 15865                           
 15866                           ;incstack = 0
 15867                           ; Regs used in _i2c1_driver_startRX: []
 15868  1E89  0023               	movlb	3	; select bank3
 15869  1E8A  1591               	bsf	17,3	;volatile
 15870  1E8B  0008               	return
 15871  1E8C                     __end_of_i2c1_driver_startRX:	
 15872                           
 15873                           	psect	text68
 15874  11B1                     __ptext68:	
 15875 ;; *************** function _rdBlkRegCompleteHandler *****************
 15876 ;; Defined at:
 15877 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15878 ;; Parameters:    Size  Location     Type
 15879 ;;  p               1    9[BANK0 ] PTR void 
 15880 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15881 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15882 ;; Auto vars:     Size  Location     Type
 15883 ;;		None
 15884 ;; Return value:  Size  Location     Type
 15885 ;;                  1    wreg      enum E97
 15886 ;; Registers used:
 15887 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15888 ;; Tracked objects:
 15889 ;;		On entry : 0/0
 15890 ;;		On exit  : 0/0
 15891 ;;		Unchanged: 0/0
 15892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15893 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15896 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15897 ;;Total ram usage:        1 bytes
 15898 ;; Hardware stack levels used:    1
 15899 ;; Hardware stack levels required when called:    8
 15900 ;; This function calls:
 15901 ;;		_i2c_setBuffer
 15902 ;;		_i2c_setDataCompleteCallback
 15903 ;; This function is called by:
 15904 ;;		_i2c_readDataBlock
 15905 ;;		_do_I2C_DO_ADDRESS_NACK
 15906 ;;		_do_I2C_TX
 15907 ;;		_do_I2C_RX
 15908 ;;		_do_I2C_TX_EMPTY
 15909 ;;		i1_do_I2C_DO_ADDRESS_NACK
 15910 ;;		i1_do_I2C_TX
 15911 ;;		i1_do_I2C_RX
 15912 ;;		i1_do_I2C_TX_EMPTY
 15913 ;; This function uses a non-reentrant model
 15914 ;;
 15915                           
 15916                           
 15917                           ;psect for function _rdBlkRegCompleteHandler
 15918  11B1                     _rdBlkRegCompleteHandler:	
 15919                           
 15920                           ;Skip over the trampoline to the duplicate function for level 1
 15921  11B1  1C7E               	btfss	126,0
 15922  11B2  29B5               	goto	l3434
 15923  11B3  3191  2933         	ljmp	i1l4248
 15924  11B5                     _rdBlkRegCompleteHandler$intlevel0:	
 15925  11B5                     l3434:	
 15926                           ;incstack = 0
 15927 ;; hardware stack exceeded
 15928                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15929                           
 15930                           
 15931                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 15932  11B5  0020               	movlb	0	; select bank0
 15933  11B6  0829               	movf	rdBlkRegCompleteHandler@p,w
 15934  11B7  0086               	movwf	6
 15935  11B8  0187               	clrf	7
 15936  11B9  3F40               	moviw [0]fsr1
 15937  11BA  00A0               	movwf	i2c_setBuffer@bufferSize
 15938  11BB  3F41               	moviw [1]fsr1
 15939  11BC  00A1               	movwf	i2c_setBuffer@bufferSize+1
 15940  11BD  0829               	movf	rdBlkRegCompleteHandler@p,w
 15941  11BE  3E02               	addlw	2
 15942  11BF  0086               	movwf	6
 15943  11C0  0187               	clrf	7
 15944  11C1  0801               	movf	1,w
 15945  11C2  3190  20C6  3191   	fcall	_i2c_setBuffer
 15946                           
 15947                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 15948  11C5  3000               	movlw	0
 15949  11C6  0020               	movlb	0	; select bank0
 15950  11C7  00A5               	movwf	i2c_setDataCompleteCallback@cb
 15951  11C8  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 15952  11C9  01A7               	clrf	i2c_setDataCompleteCallback@p
 15953  11CA  3190  202D         	fcall	_i2c_setDataCompleteCallback
 15954                           
 15955                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 15956  11CC  3002               	movlw	2
 15957  11CD  0008               	return
 15958  11CE                     __end_of_rdBlkRegCompleteHandler:	
 15959                           
 15960                           	psect	text69
 15961  111D                     __ptext69:	
 15962 ;; *************** function _rd2RegCompleteHandler *****************
 15963 ;; Defined at:
 15964 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15965 ;; Parameters:    Size  Location     Type
 15966 ;;  p               1    9[BANK0 ] PTR void 
 15967 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15968 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15969 ;; Auto vars:     Size  Location     Type
 15970 ;;		None
 15971 ;; Return value:  Size  Location     Type
 15972 ;;                  1    wreg      enum E97
 15973 ;; Registers used:
 15974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15975 ;; Tracked objects:
 15976 ;;		On entry : 0/0
 15977 ;;		On exit  : 0/0
 15978 ;;		Unchanged: 0/0
 15979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15980 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15983 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15984 ;;Total ram usage:        1 bytes
 15985 ;; Hardware stack levels used:    1
 15986 ;; Hardware stack levels required when called:    8
 15987 ;; This function calls:
 15988 ;;		_i2c_setBuffer
 15989 ;;		_i2c_setDataCompleteCallback
 15990 ;; This function is called by:
 15991 ;;		_i2c_read2ByteRegister
 15992 ;;		_do_I2C_DO_ADDRESS_NACK
 15993 ;;		_do_I2C_TX
 15994 ;;		_do_I2C_RX
 15995 ;;		_do_I2C_TX_EMPTY
 15996 ;;		i1_do_I2C_DO_ADDRESS_NACK
 15997 ;;		i1_do_I2C_TX
 15998 ;;		i1_do_I2C_RX
 15999 ;;		i1_do_I2C_TX_EMPTY
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           
 16004                           ;psect for function _rd2RegCompleteHandler
 16005  111D                     _rd2RegCompleteHandler:	
 16006                           
 16007                           ;Skip over the trampoline to the duplicate function for level 1
 16008  111D  1C7E               	btfss	126,0
 16009  111E  2921               	goto	l3418
 16010  111F  3190  28A3         	ljmp	i1l4232
 16011  1121                     _rd2RegCompleteHandler$intlevel0:	
 16012  1121                     l3418:	
 16013                           ;incstack = 0
 16014 ;; hardware stack exceeded
 16015                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16016                           
 16017                           
 16018                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 16019  1121  3002               	movlw	2
 16020  1122  0020               	movlb	0	; select bank0
 16021  1123  00A0               	movwf	i2c_setBuffer@bufferSize
 16022  1124  3000               	movlw	0
 16023  1125  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16024  1126  0829               	movf	rd2RegCompleteHandler@p,w
 16025  1127  3190  20C6  3191   	fcall	_i2c_setBuffer
 16026                           
 16027                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 16028  112A  3000               	movlw	0
 16029  112B  0020               	movlb	0	; select bank0
 16030  112C  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16031  112D  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16032  112E  01A7               	clrf	i2c_setDataCompleteCallback@p
 16033  112F  3190  202D         	fcall	_i2c_setDataCompleteCallback
 16034                           
 16035                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 16036  1131  3002               	movlw	2
 16037  1132  0008               	return
 16038  1133                     __end_of_rd2RegCompleteHandler:	
 16039                           
 16040                           	psect	text70
 16041  1107                     __ptext70:	
 16042 ;; *************** function _rd1RegCompleteHandler *****************
 16043 ;; Defined at:
 16044 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16045 ;; Parameters:    Size  Location     Type
 16046 ;;  p               1    9[BANK0 ] PTR void 
 16047 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16048 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16049 ;; Auto vars:     Size  Location     Type
 16050 ;;		None
 16051 ;; Return value:  Size  Location     Type
 16052 ;;                  1    wreg      enum E97
 16053 ;; Registers used:
 16054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16055 ;; Tracked objects:
 16056 ;;		On entry : 0/0
 16057 ;;		On exit  : 0/0
 16058 ;;		Unchanged: 0/0
 16059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16060 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16064 ;;Total ram usage:        1 bytes
 16065 ;; Hardware stack levels used:    1
 16066 ;; Hardware stack levels required when called:    8
 16067 ;; This function calls:
 16068 ;;		_i2c_setBuffer
 16069 ;;		_i2c_setDataCompleteCallback
 16070 ;; This function is called by:
 16071 ;;		_i2c_read1ByteRegister
 16072 ;;		_do_I2C_DO_ADDRESS_NACK
 16073 ;;		_do_I2C_TX
 16074 ;;		_do_I2C_RX
 16075 ;;		_do_I2C_TX_EMPTY
 16076 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16077 ;;		i1_do_I2C_TX
 16078 ;;		i1_do_I2C_RX
 16079 ;;		i1_do_I2C_TX_EMPTY
 16080 ;; This function uses a non-reentrant model
 16081 ;;
 16082                           
 16083                           
 16084                           ;psect for function _rd1RegCompleteHandler
 16085  1107                     _rd1RegCompleteHandler:	
 16086                           
 16087                           ;Skip over the trampoline to the duplicate function for level 1
 16088  1107  1C7E               	btfss	126,0
 16089  1108  290B               	goto	l3410
 16090  1109  3190  2893         	ljmp	i1l4224
 16091  110B                     _rd1RegCompleteHandler$intlevel0:	
 16092  110B                     l3410:	
 16093                           ;incstack = 0
 16094 ;; hardware stack exceeded
 16095                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16096                           
 16097                           
 16098                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 16099  110B  3001               	movlw	1
 16100  110C  0020               	movlb	0	; select bank0
 16101  110D  00A0               	movwf	i2c_setBuffer@bufferSize
 16102  110E  3000               	movlw	0
 16103  110F  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16104  1110  0829               	movf	rd1RegCompleteHandler@p,w
 16105  1111  3190  20C6  3191   	fcall	_i2c_setBuffer
 16106                           
 16107                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 16108  1114  3000               	movlw	0
 16109  1115  0020               	movlb	0	; select bank0
 16110  1116  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16111  1117  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16112  1118  01A7               	clrf	i2c_setDataCompleteCallback@p
 16113  1119  3190  202D         	fcall	_i2c_setDataCompleteCallback
 16114                           
 16115                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 16116  111B  3002               	movlw	2
 16117  111C  0008               	return
 16118  111D                     __end_of_rd1RegCompleteHandler:	
 16119                           
 16120                           	psect	text71
 16121  10F1                     __ptext71:	
 16122 ;; *************** function _wr1RegCompleteHandler *****************
 16123 ;; Defined at:
 16124 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16125 ;; Parameters:    Size  Location     Type
 16126 ;;  p               1    9[BANK0 ] PTR void 
 16127 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16128 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16129 ;; Auto vars:     Size  Location     Type
 16130 ;;		None
 16131 ;; Return value:  Size  Location     Type
 16132 ;;                  1    wreg      enum E97
 16133 ;; Registers used:
 16134 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16135 ;; Tracked objects:
 16136 ;;		On entry : 0/0
 16137 ;;		On exit  : 0/0
 16138 ;;		Unchanged: 0/0
 16139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16140 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16143 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16144 ;;Total ram usage:        1 bytes
 16145 ;; Hardware stack levels used:    1
 16146 ;; Hardware stack levels required when called:    8
 16147 ;; This function calls:
 16148 ;;		_i2c_setBuffer
 16149 ;;		_i2c_setDataCompleteCallback
 16150 ;; This function is called by:
 16151 ;;		_i2c_write1ByteRegister
 16152 ;;		_do_I2C_DO_ADDRESS_NACK
 16153 ;;		_do_I2C_TX
 16154 ;;		_do_I2C_RX
 16155 ;;		_do_I2C_TX_EMPTY
 16156 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16157 ;;		i1_do_I2C_TX
 16158 ;;		i1_do_I2C_RX
 16159 ;;		i1_do_I2C_TX_EMPTY
 16160 ;; This function uses a non-reentrant model
 16161 ;;
 16162                           
 16163                           
 16164                           ;psect for function _wr1RegCompleteHandler
 16165  10F1                     _wr1RegCompleteHandler:	
 16166                           
 16167                           ;Skip over the trampoline to the duplicate function for level 1
 16168  10F1  1C7E               	btfss	126,0
 16169  10F2  28F5               	goto	l3402
 16170  10F3  3190  2883         	ljmp	i1l4216
 16171  10F5                     _wr1RegCompleteHandler$intlevel0:	
 16172  10F5                     l3402:	
 16173                           ;incstack = 0
 16174 ;; hardware stack exceeded
 16175                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16176                           
 16177                           
 16178                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 16179  10F5  3001               	movlw	1
 16180  10F6  0020               	movlb	0	; select bank0
 16181  10F7  00A0               	movwf	i2c_setBuffer@bufferSize
 16182  10F8  3000               	movlw	0
 16183  10F9  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16184  10FA  0829               	movf	wr1RegCompleteHandler@p,w
 16185  10FB  3190  20C6  3190   	fcall	_i2c_setBuffer
 16186                           
 16187                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 16188  10FE  3000               	movlw	0
 16189  10FF  0020               	movlb	0	; select bank0
 16190  1100  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16191  1101  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16192  1102  01A7               	clrf	i2c_setDataCompleteCallback@p
 16193  1103  3190  202D         	fcall	_i2c_setDataCompleteCallback
 16194                           
 16195                           ;i2c_simple_master.c: 35: return i2c_continue;
 16196  1105  3004               	movlw	4
 16197  1106  0008               	return
 16198  1107                     __end_of_wr1RegCompleteHandler:	
 16199                           
 16200                           	psect	text72
 16201  1EE4                     __ptext72:	
 16202 ;; *************** function _i2c_restartWrite *****************
 16203 ;; Defined at:
 16204 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 16205 ;; Parameters:    Size  Location     Type
 16206 ;;  p               1    9[BANK0 ] PTR void 
 16207 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16208 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16209 ;; Auto vars:     Size  Location     Type
 16210 ;;		None
 16211 ;; Return value:  Size  Location     Type
 16212 ;;                  1    wreg      enum E96
 16213 ;; Registers used:
 16214 ;;		wreg
 16215 ;; Tracked objects:
 16216 ;;		On entry : 0/0
 16217 ;;		On exit  : 0/0
 16218 ;;		Unchanged: 0/0
 16219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16220 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16223 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16224 ;;Total ram usage:        1 bytes
 16225 ;; Hardware stack levels used:    1
 16226 ;; Hardware stack levels required when called:    6
 16227 ;; This function calls:
 16228 ;;		Nothing
 16229 ;; This function is called by:
 16230 ;;		_i2c_write1ByteRegister
 16231 ;;		_i2c_read1ByteRegister
 16232 ;;		_i2c_writeNBytes
 16233 ;;		_i2c_read2ByteRegister
 16234 ;;		_i2c_write2ByteRegister
 16235 ;;		_i2c_readDataBlock
 16236 ;;		_do_I2C_DO_ADDRESS_NACK
 16237 ;;		_do_I2C_TX
 16238 ;;		_do_I2C_RX
 16239 ;;		_do_I2C_TX_EMPTY
 16240 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16241 ;;		i1_do_I2C_TX
 16242 ;;		i1_do_I2C_RX
 16243 ;;		i1_do_I2C_TX_EMPTY
 16244 ;; This function uses a non-reentrant model
 16245 ;;
 16246                           
 16247                           
 16248                           ;psect for function _i2c_restartWrite
 16249  1EE4                     _i2c_restartWrite:	
 16250                           
 16251                           ;Skip over the trampoline to the duplicate function for level 1
 16252  1EE4  1C7E               	btfss	126,0
 16253  1EE5  2EE8               	goto	l3398
 16254  1EE6  3180  2802         	ljmp	i1l4212
 16255  1EE8                     _i2c_restartWrite$intlevel0:	
 16256  1EE8                     l3398:	
 16257                           ;incstack = 0
 16258                           ; Regs used in _i2c_restartWrite: [wreg]
 16259                           
 16260                           
 16261                           ;i2c_types.c: 37: return i2c_restart_write;
 16262  1EE8  3003               	movlw	3
 16263  1EE9  0008               	return
 16264  1EEA                     __end_of_i2c_restartWrite:	
 16265                           
 16266                           	psect	text73
 16267  1EDE                     __ptext73:	
 16268 ;; *************** function _returnReset *****************
 16269 ;; Defined at:
 16270 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 16271 ;; Parameters:    Size  Location     Type
 16272 ;;  p               1    9[BANK0 ] PTR void 
 16273 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16274 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16275 ;; Auto vars:     Size  Location     Type
 16276 ;;		None
 16277 ;; Return value:  Size  Location     Type
 16278 ;;                  1    wreg      enum E15143
 16279 ;; Registers used:
 16280 ;;		wreg
 16281 ;; Tracked objects:
 16282 ;;		On entry : 0/0
 16283 ;;		On exit  : 0/0
 16284 ;;		Unchanged: 0/0
 16285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16286 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16289 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16290 ;;Total ram usage:        1 bytes
 16291 ;; Hardware stack levels used:    1
 16292 ;; Hardware stack levels required when called:    6
 16293 ;; This function calls:
 16294 ;;		Nothing
 16295 ;; This function is called by:
 16296 ;;		_i2c_open
 16297 ;;		_do_I2C_DO_ADDRESS_NACK
 16298 ;;		_do_I2C_TX
 16299 ;;		_do_I2C_RX
 16300 ;;		_do_I2C_TX_EMPTY
 16301 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16302 ;;		i1_do_I2C_TX
 16303 ;;		i1_do_I2C_RX
 16304 ;;		i1_do_I2C_TX_EMPTY
 16305 ;; This function uses a non-reentrant model
 16306 ;;
 16307                           
 16308                           
 16309                           ;psect for function _returnReset
 16310  1EDE                     _returnReset:	
 16311                           
 16312                           ;Skip over the trampoline to the duplicate function for level 1
 16313  1EDE  1C7E               	btfss	126,0
 16314  1EDF  2EE2               	goto	l3394
 16315  1EE0  319E  2E60         	ljmp	i1l4208
 16316  1EE2                     _returnReset$intlevel0:	
 16317  1EE2                     l3394:	
 16318                           ;incstack = 0
 16319                           ; Regs used in _returnReset: [wreg]
 16320                           
 16321                           
 16322                           ;i2c_master.c: 450: return i2c_reset_link;
 16323  1EE2  3005               	movlw	5
 16324  1EE3  0008               	return
 16325  1EE4                     __end_of_returnReset:	
 16326                           
 16327                           	psect	text74
 16328  1ED8                     __ptext74:	
 16329 ;; *************** function _returnStop *****************
 16330 ;; Defined at:
 16331 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 16332 ;; Parameters:    Size  Location     Type
 16333 ;;  p               1    9[BANK0 ] PTR void 
 16334 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16335 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16336 ;; Auto vars:     Size  Location     Type
 16337 ;;		None
 16338 ;; Return value:  Size  Location     Type
 16339 ;;                  1    wreg      enum E15143
 16340 ;; Registers used:
 16341 ;;		wreg
 16342 ;; Tracked objects:
 16343 ;;		On entry : 0/0
 16344 ;;		On exit  : 0/0
 16345 ;;		Unchanged: 0/0
 16346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16347 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16350 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16351 ;;Total ram usage:        1 bytes
 16352 ;; Hardware stack levels used:    1
 16353 ;; Hardware stack levels required when called:    6
 16354 ;; This function calls:
 16355 ;;		Nothing
 16356 ;; This function is called by:
 16357 ;;		_i2c_open
 16358 ;;		_setCallBack
 16359 ;;		_do_I2C_DO_ADDRESS_NACK
 16360 ;;		_do_I2C_TX
 16361 ;;		_do_I2C_RX
 16362 ;;		_do_I2C_TX_EMPTY
 16363 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16364 ;;		i1_do_I2C_TX
 16365 ;;		i1_do_I2C_RX
 16366 ;;		i1_do_I2C_TX_EMPTY
 16367 ;; This function uses a non-reentrant model
 16368 ;;
 16369                           
 16370                           
 16371                           ;psect for function _returnStop
 16372  1ED8                     _returnStop:	
 16373                           
 16374                           ;Skip over the trampoline to the duplicate function for level 1
 16375  1ED8  1C7E               	btfss	126,0
 16376  1ED9  2EDC               	goto	l3390
 16377  1EDA  319E  2E5E         	ljmp	i1l4204
 16378  1EDC                     _returnStop$intlevel0:	
 16379  1EDC                     l3390:	
 16380                           ;incstack = 0
 16381                           ; Regs used in _returnStop: [wreg]
 16382                           
 16383                           
 16384                           ;i2c_master.c: 445: return i2c_stop;
 16385  1EDC  3001               	movlw	1
 16386  1EDD  0008               	return
 16387  1EDE                     __end_of_returnStop:	
 16388                           
 16389                           	psect	text75
 16390  10DB                     __ptext75:	
 16391 ;; *************** function _wr2RegCompleteHandler *****************
 16392 ;; Defined at:
 16393 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16394 ;; Parameters:    Size  Location     Type
 16395 ;;  p               1    9[BANK0 ] PTR void 
 16396 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16397 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16398 ;; Auto vars:     Size  Location     Type
 16399 ;;		None
 16400 ;; Return value:  Size  Location     Type
 16401 ;;                  1    wreg      enum E97
 16402 ;; Registers used:
 16403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16404 ;; Tracked objects:
 16405 ;;		On entry : 0/0
 16406 ;;		On exit  : 0/0
 16407 ;;		Unchanged: 0/0
 16408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16409 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16412 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16413 ;;Total ram usage:        1 bytes
 16414 ;; Hardware stack levels used:    1
 16415 ;; Hardware stack levels required when called:    8
 16416 ;; This function calls:
 16417 ;;		_i2c_setBuffer
 16418 ;;		_i2c_setDataCompleteCallback
 16419 ;; This function is called by:
 16420 ;;		_i2c_write2ByteRegister
 16421 ;;		_do_I2C_DO_ADDRESS_NACK
 16422 ;;		_do_I2C_TX
 16423 ;;		_do_I2C_RX
 16424 ;;		_do_I2C_TX_EMPTY
 16425 ;;		i1_do_I2C_DO_ADDRESS_NACK
 16426 ;;		i1_do_I2C_TX
 16427 ;;		i1_do_I2C_RX
 16428 ;;		i1_do_I2C_TX_EMPTY
 16429 ;; This function uses a non-reentrant model
 16430 ;;
 16431                           
 16432                           
 16433                           ;psect for function _wr2RegCompleteHandler
 16434  10DB                     _wr2RegCompleteHandler:	
 16435                           
 16436                           ;Skip over the trampoline to the duplicate function for level 1
 16437  10DB  1C7E               	btfss	126,0
 16438  10DC  28DF               	goto	l3426
 16439  10DD  3190  2873         	ljmp	i1l4240
 16440  10DF                     _wr2RegCompleteHandler$intlevel0:	
 16441  10DF                     l3426:	
 16442                           ;incstack = 0
 16443 ;; hardware stack exceeded
 16444                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16445                           
 16446                           
 16447                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 16448  10DF  3002               	movlw	2
 16449  10E0  0020               	movlb	0	; select bank0
 16450  10E1  00A0               	movwf	i2c_setBuffer@bufferSize
 16451  10E2  3000               	movlw	0
 16452  10E3  00A1               	movwf	i2c_setBuffer@bufferSize+1
 16453  10E4  0829               	movf	wr2RegCompleteHandler@p,w
 16454  10E5  3190  20C6  3190   	fcall	_i2c_setBuffer
 16455                           
 16456                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 16457  10E8  3000               	movlw	0
 16458  10E9  0020               	movlb	0	; select bank0
 16459  10EA  00A5               	movwf	i2c_setDataCompleteCallback@cb
 16460  10EB  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 16461  10EC  01A7               	clrf	i2c_setDataCompleteCallback@p
 16462  10ED  3190  202D         	fcall	_i2c_setDataCompleteCallback
 16463                           
 16464                           ;i2c_simple_master.c: 114: return i2c_continue;
 16465  10EF  3004               	movlw	4
 16466  10F0  0008               	return
 16467  10F1                     __end_of_wr2RegCompleteHandler:	
 16468                           
 16469                           	psect	text76
 16470  102D                     __ptext76:	
 16471 ;; *************** function _i2c_setDataCompleteCallback *****************
 16472 ;; Defined at:
 16473 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 16474 ;; Parameters:    Size  Location     Type
 16475 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 16476 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16477 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 16478 ;;  p               1    7[BANK0 ] PTR void 
 16479 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16480 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16481 ;; Auto vars:     Size  Location     Type
 16482 ;;		None
 16483 ;; Return value:  Size  Location     Type
 16484 ;;                  1    wreg      void 
 16485 ;; Registers used:
 16486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16487 ;; Tracked objects:
 16488 ;;		On entry : 0/0
 16489 ;;		On exit  : 0/0
 16490 ;;		Unchanged: 0/0
 16491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16492 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16495 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16496 ;;Total ram usage:        4 bytes
 16497 ;; Hardware stack levels used:    1
 16498 ;; Hardware stack levels required when called:    7
 16499 ;; This function calls:
 16500 ;;		_setCallBack
 16501 ;; This function is called by:
 16502 ;;		_wr1RegCompleteHandler
 16503 ;;		_i2c_write1ByteRegister
 16504 ;;		_rd1RegCompleteHandler
 16505 ;;		_i2c_read1ByteRegister
 16506 ;;		_rd2RegCompleteHandler
 16507 ;;		_wr2RegCompleteHandler
 16508 ;;		_rdBlkRegCompleteHandler
 16509 ;;		_i2c_read2ByteRegister
 16510 ;;		_i2c_write2ByteRegister
 16511 ;;		_i2c_readDataBlock
 16512 ;; This function uses a non-reentrant model
 16513 ;;
 16514                           
 16515                           
 16516                           ;psect for function _i2c_setDataCompleteCallback
 16517  102D                     _i2c_setDataCompleteCallback:	
 16518                           
 16519                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 16520                           
 16521                           ;incstack = 0
 16522                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16523  102D  0020               	movlb	0	; select bank0
 16524  102E  0826               	movf	i2c_setDataCompleteCallback@cb+1,w
 16525  102F  00A1               	movwf	setCallBack@cb+1
 16526  1030  0825               	movf	i2c_setDataCompleteCallback@cb,w
 16527  1031  00A0               	movwf	setCallBack@cb
 16528  1032  0827               	movf	i2c_setDataCompleteCallback@p,w
 16529  1033  00A8               	movwf	??_i2c_setDataCompleteCallback
 16530  1034  0828               	movf	??_i2c_setDataCompleteCallback,w
 16531  1035  00A2               	movwf	setCallBack@p
 16532  1036  3000               	movlw	0
 16533  1037  3192  2297         	fcall	_setCallBack
 16534  1039  0008               	return
 16535  103A                     __end_of_i2c_setDataCompleteCallback:	
 16536                           
 16537                           	psect	text77
 16538  1297                     __ptext77:	
 16539 ;; *************** function _setCallBack *****************
 16540 ;; Defined at:
 16541 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 16542 ;; Parameters:    Size  Location     Type
 16543 ;;  idx             1    wreg     enum E15325
 16544 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 16545 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16546 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 16547 ;;  p               1    2[BANK0 ] PTR void 
 16548 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16549 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16550 ;; Auto vars:     Size  Location     Type
 16551 ;;  idx             1    4[BANK0 ] enum E15325
 16552 ;; Return value:  Size  Location     Type
 16553 ;;                  1    wreg      void 
 16554 ;; Registers used:
 16555 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16556 ;; Tracked objects:
 16557 ;;		On entry : 0/0
 16558 ;;		On exit  : 0/0
 16559 ;;		Unchanged: 0/0
 16560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16561 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16563 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16564 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16565 ;;Total ram usage:        5 bytes
 16566 ;; Hardware stack levels used:    1
 16567 ;; Hardware stack levels required when called:    6
 16568 ;; This function calls:
 16569 ;;		Nothing
 16570 ;; This function is called by:
 16571 ;;		_i2c_setDataCompleteCallback
 16572 ;;		_i2c_setAddressNACKCallback
 16573 ;;		_i2c_setWriteCollisionCallback
 16574 ;;		_i2c_setDataNACKCallback
 16575 ;;		_i2c_setTimeOutCallback
 16576 ;; This function uses a non-reentrant model
 16577 ;;
 16578                           
 16579                           
 16580                           ;psect for function _setCallBack
 16581  1297                     _setCallBack:	
 16582                           
 16583                           ;incstack = 0
 16584                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 16585                           ;setCallBack@idx stored from wreg
 16586  1297  0020               	movlb	0	; select bank0
 16587  1298  00A4               	movwf	setCallBack@idx
 16588                           
 16589                           ;i2c_master.c: 455: if(cb)
 16590  1299  0820               	movf	setCallBack@cb,w
 16591  129A  0421               	iorwf	setCallBack@cb+1,w
 16592  129B  1903               	btfsc	3,2
 16593  129C  2AAE               	goto	l3322
 16594                           
 16595                           ;i2c_master.c: 456: {
 16596                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 16597  129D  3524               	lslf	setCallBack@idx,w
 16598  129E  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16599  129F  0086               	movwf	6
 16600  12A0  0187               	clrf	7
 16601  12A1  0820               	movf	setCallBack@cb,w
 16602  12A2  3FC0               	movwi [0]fsr1
 16603  12A3  0821               	movf	setCallBack@cb+1,w
 16604  12A4  3FC1               	movwi [1]fsr1
 16605                           
 16606                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 16607  12A5  0822               	movf	setCallBack@p,w
 16608  12A6  00A3               	movwf	??_setCallBack
 16609  12A7  0824               	movf	setCallBack@idx,w
 16610  12A8  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16611  12A9  0086               	movwf	6
 16612  12AA  0187               	clrf	7
 16613  12AB  0823               	movf	??_setCallBack,w
 16614  12AC  0081               	movwf	1
 16615                           
 16616                           ;i2c_master.c: 459: }
 16617  12AD  0008               	return
 16618  12AE                     l3322:	
 16619                           
 16620                           ;i2c_master.c: 460: else
 16621                           ;i2c_master.c: 461: {
 16622                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 16623  12AE  3524               	lslf	setCallBack@idx,w
 16624  12AF  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16625  12B0  0086               	movwf	6
 16626  12B1  0187               	clrf	7
 16627  12B2  30D8               	movlw	low _returnStop
 16628  12B3  3FC0               	movwi [0]fsr1
 16629  12B4  301E               	movlw	high _returnStop
 16630  12B5  3FC1               	movwi [1]fsr1
 16631                           
 16632                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 16633  12B6  0824               	movf	setCallBack@idx,w
 16634  12B7  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16635  12B8  0086               	movwf	6
 16636  12B9  0187               	clrf	7
 16637  12BA  0181               	clrf	1
 16638  12BB  0008               	return
 16639  12BC                     __end_of_setCallBack:	
 16640                           
 16641                           	psect	text78
 16642  10C6                     __ptext78:	
 16643 ;; *************** function _i2c_setBuffer *****************
 16644 ;; Defined at:
 16645 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 16646 ;; Parameters:    Size  Location     Type
 16647 ;;  buffer          1    wreg     PTR void 
 16648 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16649 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16650 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16651 ;;  bufferSize      2    0[BANK0 ] unsigned int 
 16652 ;; Auto vars:     Size  Location     Type
 16653 ;;  buffer          1    3[BANK0 ] PTR void 
 16654 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16655 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16656 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16657 ;; Return value:  Size  Location     Type
 16658 ;;                  1    wreg      void 
 16659 ;; Registers used:
 16660 ;;		wreg
 16661 ;; Tracked objects:
 16662 ;;		On entry : 0/0
 16663 ;;		On exit  : 0/0
 16664 ;;		Unchanged: 0/0
 16665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16666 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16669 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16670 ;;Total ram usage:        4 bytes
 16671 ;; Hardware stack levels used:    1
 16672 ;; Hardware stack levels required when called:    6
 16673 ;; This function calls:
 16674 ;;		Nothing
 16675 ;; This function is called by:
 16676 ;;		_wr1RegCompleteHandler
 16677 ;;		_i2c_write1ByteRegister
 16678 ;;		_rd1RegCompleteHandler
 16679 ;;		_i2c_read1ByteRegister
 16680 ;;		_rd2RegCompleteHandler
 16681 ;;		_wr2RegCompleteHandler
 16682 ;;		_rdBlkRegCompleteHandler
 16683 ;;		_i2c_writeNBytes
 16684 ;;		_i2c_read2ByteRegister
 16685 ;;		_i2c_write2ByteRegister
 16686 ;;		_i2c_readDataBlock
 16687 ;;		_i2c_readNBytes
 16688 ;; This function uses a non-reentrant model
 16689 ;;
 16690                           
 16691                           
 16692                           ;psect for function _i2c_setBuffer
 16693  10C6                     _i2c_setBuffer:	
 16694                           
 16695                           ;incstack = 0
 16696                           ; Regs used in _i2c_setBuffer: [wreg]
 16697                           ;i2c_setBuffer@buffer stored from wreg
 16698  10C6  0020               	movlb	0	; select bank0
 16699  10C7  00A3               	movwf	i2c_setBuffer@buffer
 16700                           
 16701                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 16702  10C8  0021               	movlb	1	; select bank1
 16703  10C9  1D47               	btfss	_i2c_status^(0+128),2
 16704  10CA  0008               	return
 16705                           
 16706                           ;i2c_master.c: 187: {
 16707                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 16708  10CB  0020               	movlb	0	; select bank0
 16709  10CC  0823               	movf	i2c_setBuffer@buffer,w
 16710  10CD  00A2               	movwf	??_i2c_setBuffer
 16711  10CE  0822               	movf	??_i2c_setBuffer,w
 16712  10CF  0021               	movlb	1	; select bank1
 16713  10D0  00C9               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 16714                           
 16715                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 16716  10D1  0020               	movlb	0	; select bank0
 16717  10D2  0821               	movf	i2c_setBuffer@bufferSize+1,w
 16718  10D3  0021               	movlb	1	; select bank1
 16719  10D4  00CB               	movwf	((_i2c_status+1)^(0+128)+3)
 16720  10D5  0020               	movlb	0	; select bank0
 16721  10D6  0820               	movf	i2c_setBuffer@bufferSize,w
 16722  10D7  0021               	movlb	1	; select bank1
 16723  10D8  00CA               	movwf	(_i2c_status^(0+128)+3)
 16724                           
 16725                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 16726  10D9  1147               	bcf	_i2c_status^(0+128),2
 16727  10DA  0008               	return
 16728  10DB                     __end_of_i2c_setBuffer:	
 16729                           
 16730                           	psect	text79
 16731  1E86                     __ptext79:	
 16732 ;; *************** function _i2c1_driver_stop *****************
 16733 ;; Defined at:
 16734 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 16735 ;; Parameters:    Size  Location     Type
 16736 ;;		None
 16737 ;; Auto vars:     Size  Location     Type
 16738 ;;		None
 16739 ;; Return value:  Size  Location     Type
 16740 ;;                  1    wreg      void 
 16741 ;; Registers used:
 16742 ;;		None
 16743 ;; Tracked objects:
 16744 ;;		On entry : 0/0
 16745 ;;		On exit  : 0/0
 16746 ;;		Unchanged: 0/0
 16747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16752 ;;Total ram usage:        0 bytes
 16753 ;; Hardware stack levels used:    1
 16754 ;; Hardware stack levels required when called:    6
 16755 ;; This function calls:
 16756 ;;		Nothing
 16757 ;; This function is called by:
 16758 ;;		_do_I2C_SEND_STOP
 16759 ;; This function uses a non-reentrant model
 16760 ;;
 16761                           
 16762                           
 16763                           ;psect for function _i2c1_driver_stop
 16764  1E86                     _i2c1_driver_stop:	
 16765                           
 16766                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 16767                           
 16768                           ;incstack = 0
 16769 ;; hardware stack exceeded
 16770                           ; Regs used in _i2c1_driver_stop: []
 16771  1E86  0023               	movlb	3	; select bank3
 16772  1E87  1511               	bsf	17,2	;volatile
 16773  1E88  0008               	return
 16774  1E89                     __end_of_i2c1_driver_stop:	
 16775                           
 16776                           	psect	text80
 16777  1E83                     __ptext80:	
 16778 ;; *************** function _i2c1_driver_restart *****************
 16779 ;; Defined at:
 16780 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 16781 ;; Parameters:    Size  Location     Type
 16782 ;;		None
 16783 ;; Auto vars:     Size  Location     Type
 16784 ;;		None
 16785 ;; Return value:  Size  Location     Type
 16786 ;;                  1    wreg      void 
 16787 ;; Registers used:
 16788 ;;		None
 16789 ;; Tracked objects:
 16790 ;;		On entry : 0/0
 16791 ;;		On exit  : 0/0
 16792 ;;		Unchanged: 0/0
 16793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16798 ;;Total ram usage:        0 bytes
 16799 ;; Hardware stack levels used:    1
 16800 ;; Hardware stack levels required when called:    6
 16801 ;; This function calls:
 16802 ;;		Nothing
 16803 ;; This function is called by:
 16804 ;;		_do_I2C_SEND_RESTART_READ
 16805 ;;		_do_I2C_SEND_RESTART_WRITE
 16806 ;;		_do_I2C_SEND_RESTART
 16807 ;; This function uses a non-reentrant model
 16808 ;;
 16809                           
 16810                           
 16811                           ;psect for function _i2c1_driver_restart
 16812  1E83                     _i2c1_driver_restart:	
 16813                           
 16814                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 16815                           
 16816                           ;incstack = 0
 16817 ;; hardware stack exceeded
 16818                           ; Regs used in _i2c1_driver_restart: []
 16819  1E83  0023               	movlb	3	; select bank3
 16820  1E84  1491               	bsf	17,1	;volatile
 16821  1E85  0008               	return
 16822  1E86                     __end_of_i2c1_driver_restart:	
 16823                           
 16824                           	psect	text81
 16825  1EB6                     __ptext81:	
 16826 ;; *************** function _i2c1_driver_sendACK *****************
 16827 ;; Defined at:
 16828 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 16829 ;; Parameters:    Size  Location     Type
 16830 ;;		None
 16831 ;; Auto vars:     Size  Location     Type
 16832 ;;		None
 16833 ;; Return value:  Size  Location     Type
 16834 ;;                  1    wreg      void 
 16835 ;; Registers used:
 16836 ;;		None
 16837 ;; Tracked objects:
 16838 ;;		On entry : 0/0
 16839 ;;		On exit  : 0/0
 16840 ;;		Unchanged: 0/0
 16841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16846 ;;Total ram usage:        0 bytes
 16847 ;; Hardware stack levels used:    1
 16848 ;; Hardware stack levels required when called:    6
 16849 ;; This function calls:
 16850 ;;		Nothing
 16851 ;; This function is called by:
 16852 ;;		_do_I2C_DO_ACK
 16853 ;;		_do_I2C_RX
 16854 ;; This function uses a non-reentrant model
 16855 ;;
 16856                           
 16857                           
 16858                           ;psect for function _i2c1_driver_sendACK
 16859  1EB6                     _i2c1_driver_sendACK:	
 16860                           
 16861                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 16862                           
 16863                           ;incstack = 0
 16864                           ; Regs used in _i2c1_driver_sendACK: []
 16865  1EB6  0023               	movlb	3	; select bank3
 16866  1EB7  1291               	bcf	17,5	;volatile
 16867                           
 16868                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 16869  1EB8  1611               	bsf	17,4	;volatile
 16870  1EB9  0008               	return
 16871  1EBA                     __end_of_i2c1_driver_sendACK:	
 16872                           
 16873                           	psect	text82
 16874  1E80                     __ptext82:	
 16875 ;; *************** function _i2c1_driver_start *****************
 16876 ;; Defined at:
 16877 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 16878 ;; Parameters:    Size  Location     Type
 16879 ;;		None
 16880 ;; Auto vars:     Size  Location     Type
 16881 ;;		None
 16882 ;; Return value:  Size  Location     Type
 16883 ;;                  1    wreg      void 
 16884 ;; Registers used:
 16885 ;;		None
 16886 ;; Tracked objects:
 16887 ;;		On entry : 0/0
 16888 ;;		On exit  : 0/0
 16889 ;;		Unchanged: 0/0
 16890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16895 ;;Total ram usage:        0 bytes
 16896 ;; Hardware stack levels used:    1
 16897 ;; Hardware stack levels required when called:    6
 16898 ;; This function calls:
 16899 ;;		Nothing
 16900 ;; This function is called by:
 16901 ;;		_i2c_masterOperation
 16902 ;; This function uses a non-reentrant model
 16903 ;;
 16904                           
 16905                           
 16906                           ;psect for function _i2c1_driver_start
 16907  1E80                     _i2c1_driver_start:	
 16908                           
 16909                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 16910                           
 16911                           ;incstack = 0
 16912                           ; Regs used in _i2c1_driver_start: []
 16913  1E80  0023               	movlb	3	; select bank3
 16914  1E81  1411               	bsf	17,0	;volatile
 16915  1E82  0008               	return
 16916  1E83                     __end_of_i2c1_driver_start:	
 16917                           
 16918                           	psect	text83
 16919  117A                     __ptext83:	
 16920 ;; *************** function _i2c_close *****************
 16921 ;; Defined at:
 16922 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
 16923 ;; Parameters:    Size  Location     Type
 16924 ;;		None
 16925 ;; Auto vars:     Size  Location     Type
 16926 ;;  ret             1    1[BANK0 ] enum E15138
 16927 ;; Return value:  Size  Location     Type
 16928 ;;                  1    wreg      enum E15138
 16929 ;; Registers used:
 16930 ;;		wreg, status,2, status,0, pclath, cstack
 16931 ;; Tracked objects:
 16932 ;;		On entry : 0/0
 16933 ;;		On exit  : 0/0
 16934 ;;		Unchanged: 0/0
 16935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16939 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16940 ;;Total ram usage:        2 bytes
 16941 ;; Hardware stack levels used:    1
 16942 ;; Hardware stack levels required when called:    7
 16943 ;; This function calls:
 16944 ;;		_mssp1_clearIRQ
 16945 ;;		_mssp1_disableIRQ
 16946 ;; This function is called by:
 16947 ;;		_i2c_write1ByteRegister
 16948 ;;		_i2c_read1ByteRegister
 16949 ;;		_i2c_writeNBytes
 16950 ;;		_i2c_read2ByteRegister
 16951 ;;		_i2c_write2ByteRegister
 16952 ;;		_i2c_readDataBlock
 16953 ;;		_i2c_readNBytes
 16954 ;; This function uses a non-reentrant model
 16955 ;;
 16956                           
 16957                           
 16958                           ;psect for function _i2c_close
 16959  117A                     _i2c_close:	
 16960                           
 16961                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
 16962                           
 16963                           ;incstack = 0
 16964                           ; Regs used in _i2c_close: [wreg+status,2+status,0+pclath+cstack]
 16965  117A  0020               	movlb	0	; select bank0
 16966  117B  01A1               	clrf	i2c_close@ret
 16967  117C  0AA1               	incf	i2c_close@ret,f
 16968                           
 16969                           ;i2c_master.c: 165: if(!i2c_status.busy)
 16970  117D  0021               	movlb	1	; select bank1
 16971  117E  1847               	btfsc	_i2c_status^(0+128),0
 16972  117F  2992               	goto	l224
 16973                           
 16974                           ;i2c_master.c: 166: {
 16975                           ;i2c_master.c: 167: i2c_status.inUse = 0;
 16976  1180  10C7               	bcf	_i2c_status^(0+128),1
 16977                           
 16978                           ;i2c_master.c: 169: i2c_status.address = 0xff;
 16979  1181  30FF               	movlw	255
 16980  1182  0020               	movlb	0	; select bank0
 16981  1183  00A0               	movwf	??_i2c_close
 16982  1184  0820               	movf	??_i2c_close,w
 16983  1185  0021               	movlb	1	; select bank1
 16984  1186  00C8               	movwf	(_i2c_status^(0+128)+1)
 16985                           
 16986                           ;i2c_master.c: 170: mssp1_clearIRQ();
 16987  1187  319E  267A  3191   	fcall	_mssp1_clearIRQ
 16988                           
 16989                           ;i2c_master.c: 171: mssp1_disableIRQ();
 16990  118A  319E  267D         	fcall	_mssp1_disableIRQ
 16991                           
 16992                           ;i2c_master.c: 172: ret = i2c_status.error;
 16993  118C  0021               	movlb	1	; select bank1
 16994  118D  0851               	movf	(_i2c_status^(0+128)+10),w
 16995  118E  0020               	movlb	0	; select bank0
 16996  118F  00A0               	movwf	??_i2c_close
 16997  1190  0820               	movf	??_i2c_close,w
 16998  1191  00A1               	movwf	i2c_close@ret
 16999  1192                     l224:	
 17000                           
 17001                           ;i2c_master.c: 173: }
 17002                           ;i2c_master.c: 174: return ret;
 17003  1192  0020               	movlb	0	; select bank0
 17004  1193  0821               	movf	i2c_close@ret,w
 17005  1194  0008               	return
 17006  1195                     __end_of_i2c_close:	
 17007                           
 17008                           	psect	text84
 17009  1E7D                     __ptext84:	
 17010 ;; *************** function _mssp1_disableIRQ *****************
 17011 ;; Defined at:
 17012 ;;		line 48 in file "mcc_generated_files/i2c1_driver.c"
 17013 ;; Parameters:    Size  Location     Type
 17014 ;;		None
 17015 ;; Auto vars:     Size  Location     Type
 17016 ;;		None
 17017 ;; Return value:  Size  Location     Type
 17018 ;;                  1    wreg      void 
 17019 ;; Registers used:
 17020 ;;		None
 17021 ;; Tracked objects:
 17022 ;;		On entry : 0/0
 17023 ;;		On exit  : 0/0
 17024 ;;		Unchanged: 0/0
 17025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17030 ;;Total ram usage:        0 bytes
 17031 ;; Hardware stack levels used:    1
 17032 ;; Hardware stack levels required when called:    6
 17033 ;; This function calls:
 17034 ;;		Nothing
 17035 ;; This function is called by:
 17036 ;;		_i2c_close
 17037 ;;		_i2c_setTimeOut
 17038 ;; This function uses a non-reentrant model
 17039 ;;
 17040                           
 17041                           
 17042                           ;psect for function _mssp1_disableIRQ
 17043  1E7D                     _mssp1_disableIRQ:	
 17044                           
 17045                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
 17046                           
 17047                           ;incstack = 0
 17048                           ; Regs used in _mssp1_disableIRQ: []
 17049  1E7D  002E               	movlb	14	; select bank14
 17050  1E7E  1019               	bcf	25,0	;volatile
 17051  1E7F  0008               	return
 17052  1E80                     __end_of_mssp1_disableIRQ:	
 17053                           
 17054                           	psect	text85
 17055  1E7A                     __ptext85:	
 17056 ;; *************** function _mssp1_clearIRQ *****************
 17057 ;; Defined at:
 17058 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 17059 ;; Parameters:    Size  Location     Type
 17060 ;;		None
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;		None
 17063 ;; Return value:  Size  Location     Type
 17064 ;;                  1    wreg      void 
 17065 ;; Registers used:
 17066 ;;		None
 17067 ;; Tracked objects:
 17068 ;;		On entry : 0/0
 17069 ;;		On exit  : 0/0
 17070 ;;		Unchanged: 0/0
 17071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17076 ;;Total ram usage:        0 bytes
 17077 ;; Hardware stack levels used:    1
 17078 ;; Hardware stack levels required when called:    6
 17079 ;; This function calls:
 17080 ;;		Nothing
 17081 ;; This function is called by:
 17082 ;;		_i2c_open
 17083 ;;		_i2c_close
 17084 ;;		_i2c_ISR
 17085 ;; This function uses a non-reentrant model
 17086 ;;
 17087                           
 17088                           
 17089                           ;psect for function _mssp1_clearIRQ
 17090  1E7A                     _mssp1_clearIRQ:	
 17091                           
 17092                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
 17093                           
 17094                           ;incstack = 0
 17095                           ; Regs used in _mssp1_clearIRQ: []
 17096  1E7A  002E               	movlb	14	; select bank14
 17097  1E7B  100F               	bcf	15,0	;volatile
 17098  1E7C  0008               	return
 17099  1E7D                     __end_of_mssp1_clearIRQ:	
 17100                           
 17101                           	psect	text86
 17102  1ED2                     __ptext86:	
 17103 ;; *************** function _SPI2_Initialize *****************
 17104 ;; Defined at:
 17105 ;;		line 65 in file "mcc_generated_files/spi2.c"
 17106 ;; Parameters:    Size  Location     Type
 17107 ;;		None
 17108 ;; Auto vars:     Size  Location     Type
 17109 ;;		None
 17110 ;; Return value:  Size  Location     Type
 17111 ;;                  1    wreg      void 
 17112 ;; Registers used:
 17113 ;;		wreg, status,2
 17114 ;; Tracked objects:
 17115 ;;		On entry : 0/0
 17116 ;;		On exit  : 0/0
 17117 ;;		Unchanged: 0/0
 17118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17123 ;;Total ram usage:        0 bytes
 17124 ;; Hardware stack levels used:    1
 17125 ;; Hardware stack levels required when called:    6
 17126 ;; This function calls:
 17127 ;;		Nothing
 17128 ;; This function is called by:
 17129 ;;		_SYSTEM_Initialize
 17130 ;; This function uses a non-reentrant model
 17131 ;;
 17132                           
 17133                           
 17134                           ;psect for function _SPI2_Initialize
 17135  1ED2                     _SPI2_Initialize:	
 17136                           
 17137                           ;spi2.c: 70: SSP2STAT = 0x00;
 17138                           
 17139                           ;incstack = 0
 17140                           ; Regs used in _SPI2_Initialize: [wreg+status,2]
 17141  1ED2  0023               	movlb	3	; select bank3
 17142  1ED3  0199               	clrf	25	;volatile
 17143                           
 17144                           ;spi2.c: 73: SSP2CON1 = 0x30;
 17145  1ED4  3030               	movlw	48
 17146  1ED5  009A               	movwf	26	;volatile
 17147                           
 17148                           ;spi2.c: 76: SSP2ADD = 0x00;
 17149  1ED6  0197               	clrf	23	;volatile
 17150  1ED7  0008               	return
 17151  1ED8                     __end_of_SPI2_Initialize:	
 17152                           
 17153                           	psect	text87
 17154  1F21                     __ptext87:	
 17155 ;; *************** function _PMD_Initialize *****************
 17156 ;; Defined at:
 17157 ;;		line 73 in file "mcc_generated_files/mcc.c"
 17158 ;; Parameters:    Size  Location     Type
 17159 ;;		None
 17160 ;; Auto vars:     Size  Location     Type
 17161 ;;		None
 17162 ;; Return value:  Size  Location     Type
 17163 ;;                  1    wreg      void 
 17164 ;; Registers used:
 17165 ;;		status,2
 17166 ;; Tracked objects:
 17167 ;;		On entry : 0/0
 17168 ;;		On exit  : 0/0
 17169 ;;		Unchanged: 0/0
 17170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17175 ;;Total ram usage:        0 bytes
 17176 ;; Hardware stack levels used:    1
 17177 ;; Hardware stack levels required when called:    6
 17178 ;; This function calls:
 17179 ;;		Nothing
 17180 ;; This function is called by:
 17181 ;;		_SYSTEM_Initialize
 17182 ;; This function uses a non-reentrant model
 17183 ;;
 17184                           
 17185                           
 17186                           ;psect for function _PMD_Initialize
 17187  1F21                     _PMD_Initialize:	
 17188                           
 17189                           ;mcc.c: 76: PMD0 = 0x00;
 17190                           
 17191                           ;incstack = 0
 17192                           ; Regs used in _PMD_Initialize: [status,2]
 17193  1F21  002F               	movlb	15	; select bank15
 17194  1F22  0196               	clrf	22	;volatile
 17195                           
 17196                           ;mcc.c: 78: PMD1 = 0x00;
 17197  1F23  0197               	clrf	23	;volatile
 17198                           
 17199                           ;mcc.c: 80: PMD2 = 0x00;
 17200  1F24  0198               	clrf	24	;volatile
 17201                           
 17202                           ;mcc.c: 82: PMD3 = 0x00;
 17203  1F25  0199               	clrf	25	;volatile
 17204                           
 17205                           ;mcc.c: 84: PMD4 = 0x00;
 17206  1F26  019A               	clrf	26	;volatile
 17207                           
 17208                           ;mcc.c: 86: PMD5 = 0x00;
 17209  1F27  019B               	clrf	27	;volatile
 17210  1F28  0008               	return
 17211  1F29                     __end_of_PMD_Initialize:	
 17212                           
 17213                           	psect	text88
 17214  1565                     __ptext88:	
 17215 ;; *************** function _PIN_MANAGER_Initialize *****************
 17216 ;; Defined at:
 17217 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17218 ;; Parameters:    Size  Location     Type
 17219 ;;		None
 17220 ;; Auto vars:     Size  Location     Type
 17221 ;;		None
 17222 ;; Return value:  Size  Location     Type
 17223 ;;                  1    wreg      void 
 17224 ;; Registers used:
 17225 ;;		wreg, status,2, status,0
 17226 ;; Tracked objects:
 17227 ;;		On entry : 0/0
 17228 ;;		On exit  : 0/0
 17229 ;;		Unchanged: 0/0
 17230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17235 ;;Total ram usage:        0 bytes
 17236 ;; Hardware stack levels used:    1
 17237 ;; Hardware stack levels required when called:    6
 17238 ;; This function calls:
 17239 ;;		Nothing
 17240 ;; This function is called by:
 17241 ;;		_SYSTEM_Initialize
 17242 ;; This function uses a non-reentrant model
 17243 ;;
 17244                           
 17245                           
 17246                           ;psect for function _PIN_MANAGER_Initialize
 17247  1565                     _PIN_MANAGER_Initialize:	
 17248                           
 17249                           ;pin_manager.c: 62: LATE = 0x00;
 17250                           
 17251                           ;incstack = 0
 17252                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 17253  1565  0020               	movlb	0	; select bank0
 17254  1566  019A               	clrf	26	;volatile
 17255                           
 17256                           ;pin_manager.c: 63: LATD = 0x00;
 17257  1567  0199               	clrf	25	;volatile
 17258                           
 17259                           ;pin_manager.c: 64: LATA = 0x08;
 17260  1568  3008               	movlw	8
 17261  1569  0096               	movwf	22	;volatile
 17262                           
 17263                           ;pin_manager.c: 65: LATB = 0x00;
 17264  156A  0197               	clrf	23	;volatile
 17265                           
 17266                           ;pin_manager.c: 66: LATC = 0x00;
 17267  156B  0198               	clrf	24	;volatile
 17268                           
 17269                           ;pin_manager.c: 71: TRISE = 0x07;
 17270  156C  3007               	movlw	7
 17271  156D  0095               	movwf	21	;volatile
 17272                           
 17273                           ;pin_manager.c: 72: TRISA = 0xF7;
 17274  156E  30F7               	movlw	247
 17275  156F  0091               	movwf	17	;volatile
 17276                           
 17277                           ;pin_manager.c: 73: TRISB = 0xF5;
 17278  1570  30F5               	movlw	245
 17279  1571  0092               	movwf	18	;volatile
 17280                           
 17281                           ;pin_manager.c: 74: TRISC = 0xFB;
 17282  1572  30FB               	movlw	251
 17283  1573  0093               	movwf	19	;volatile
 17284                           
 17285                           ;pin_manager.c: 75: TRISD = 0xFE;
 17286  1574  30FE               	movlw	254
 17287  1575  0094               	movwf	20	;volatile
 17288                           
 17289                           ;pin_manager.c: 80: ANSELD = 0xFE;
 17290  1576  30FE               	movlw	254
 17291  1577  003E               	movlb	30	; select bank30
 17292  1578  00D9               	movwf	89	;volatile
 17293                           
 17294                           ;pin_manager.c: 81: ANSELC = 0xC3;
 17295  1579  30C3               	movlw	195
 17296  157A  00CE               	movwf	78	;volatile
 17297                           
 17298                           ;pin_manager.c: 82: ANSELB = 0xE1;
 17299  157B  30E1               	movlw	225
 17300  157C  00C3               	movwf	67	;volatile
 17301                           
 17302                           ;pin_manager.c: 83: ANSELE = 0x07;
 17303  157D  3007               	movlw	7
 17304  157E  00E4               	movwf	100	;volatile
 17305                           
 17306                           ;pin_manager.c: 84: ANSELA = 0xF7;
 17307  157F  30F7               	movlw	247
 17308  1580  00B8               	movwf	56	;volatile
 17309                           
 17310                           ;pin_manager.c: 89: WPUD = 0x00;
 17311  1581  01DA               	clrf	90	;volatile
 17312                           
 17313                           ;pin_manager.c: 90: WPUE = 0x00;
 17314  1582  01E5               	clrf	101	;volatile
 17315                           
 17316                           ;pin_manager.c: 91: WPUB = 0x00;
 17317  1583  01C4               	clrf	68	;volatile
 17318                           
 17319                           ;pin_manager.c: 92: WPUA = 0x00;
 17320  1584  01B9               	clrf	57	;volatile
 17321                           
 17322                           ;pin_manager.c: 93: WPUC = 0x00;
 17323  1585  01CF               	clrf	79	;volatile
 17324                           
 17325                           ;pin_manager.c: 98: ODCONE = 0x00;
 17326  1586  01E6               	clrf	102	;volatile
 17327                           
 17328                           ;pin_manager.c: 99: ODCONA = 0x00;
 17329  1587  01BA               	clrf	58	;volatile
 17330                           
 17331                           ;pin_manager.c: 100: ODCONB = 0x00;
 17332  1588  01C5               	clrf	69	;volatile
 17333                           
 17334                           ;pin_manager.c: 101: ODCONC = 0x00;
 17335  1589  01D0               	clrf	80	;volatile
 17336                           
 17337                           ;pin_manager.c: 102: ODCOND = 0x00;
 17338  158A  01DB               	clrf	91	;volatile
 17339                           
 17340                           ;pin_manager.c: 111: SSP1CLKPPSbits.SSP1CLKPPS = 0x13;
 17341  158B  003D               	movlb	29	; select bank29
 17342  158C  0845               	movf	69,w	;volatile
 17343  158D  39E0               	andlw	-32
 17344  158E  3813               	iorlw	19
 17345  158F  00C5               	movwf	69	;volatile
 17346                           
 17347                           ;pin_manager.c: 112: SSP1DATPPSbits.SSP1DATPPS = 0x14;
 17348  1590  0846               	movf	70,w	;volatile
 17349  1591  39E0               	andlw	-32
 17350  1592  3814               	iorlw	20
 17351  1593  00C6               	movwf	70	;volatile
 17352                           
 17353                           ;pin_manager.c: 113: RB1PPS = 0x16;
 17354  1594  3016               	movlw	22
 17355  1595  003E               	movlb	30	; select bank30
 17356  1596  0099               	movwf	25	;volatile
 17357                           
 17358                           ;pin_manager.c: 114: RC3PPS = 0x14;
 17359  1597  3014               	movlw	20
 17360  1598  00A3               	movwf	35	;volatile
 17361                           
 17362                           ;pin_manager.c: 115: RC4PPS = 0x15;
 17363  1599  3015               	movlw	21
 17364  159A  00A4               	movwf	36	;volatile
 17365                           
 17366                           ;pin_manager.c: 116: RB3PPS = 0x17;
 17367  159B  3017               	movlw	23
 17368  159C  009B               	movwf	27	;volatile
 17369                           
 17370                           ;pin_manager.c: 117: SSP2CLKPPSbits.SSP2CLKPPS = 0x09;
 17371  159D  003D               	movlb	29	; select bank29
 17372  159E  0848               	movf	72,w	;volatile
 17373  159F  39E0               	andlw	-32
 17374  15A0  3809               	iorlw	9
 17375  15A1  00C8               	movwf	72	;volatile
 17376                           
 17377                           ;pin_manager.c: 118: SSP2DATPPSbits.SSP2DATPPS = 0x0A;
 17378  15A2  0849               	movf	73,w	;volatile
 17379  15A3  39E0               	andlw	-32
 17380  15A4  380A               	iorlw	10
 17381  15A5  00C9               	movwf	73	;volatile
 17382  15A6  0008               	return
 17383  15A7                     __end_of_PIN_MANAGER_Initialize:	
 17384                           
 17385                           	psect	text89
 17386  1F61                     __ptext89:	
 17387 ;; *************** function _OSCILLATOR_Initialize *****************
 17388 ;; Defined at:
 17389 ;;		line 59 in file "mcc_generated_files/mcc.c"
 17390 ;; Parameters:    Size  Location     Type
 17391 ;;		None
 17392 ;; Auto vars:     Size  Location     Type
 17393 ;;		None
 17394 ;; Return value:  Size  Location     Type
 17395 ;;                  1    wreg      void 
 17396 ;; Registers used:
 17397 ;;		wreg, status,2
 17398 ;; Tracked objects:
 17399 ;;		On entry : 0/0
 17400 ;;		On exit  : 0/0
 17401 ;;		Unchanged: 0/0
 17402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17407 ;;Total ram usage:        0 bytes
 17408 ;; Hardware stack levels used:    1
 17409 ;; Hardware stack levels required when called:    6
 17410 ;; This function calls:
 17411 ;;		Nothing
 17412 ;; This function is called by:
 17413 ;;		_SYSTEM_Initialize
 17414 ;; This function uses a non-reentrant model
 17415 ;;
 17416                           
 17417                           
 17418                           ;psect for function _OSCILLATOR_Initialize
 17419  1F61                     _OSCILLATOR_Initialize:	
 17420                           
 17421                           ;mcc.c: 62: OSCCON1 = 0x62;
 17422                           
 17423                           ;incstack = 0
 17424                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17425  1F61  3062               	movlw	98
 17426  1F62  0031               	movlb	17	; select bank17
 17427  1F63  008D               	movwf	13	;volatile
 17428                           
 17429                           ;mcc.c: 64: OSCCON3 = 0x00;
 17430  1F64  018F               	clrf	15	;volatile
 17431                           
 17432                           ;mcc.c: 66: OSCEN = 0x00;
 17433  1F65  0191               	clrf	17	;volatile
 17434                           
 17435                           ;mcc.c: 68: OSCFRQ = 0x02;
 17436  1F66  3002               	movlw	2
 17437  1F67  0093               	movwf	19	;volatile
 17438                           
 17439                           ;mcc.c: 70: OSCTUNE = 0x00;
 17440  1F68  0192               	clrf	18	;volatile
 17441  1F69  0008               	return
 17442  1F6A                     __end_of_OSCILLATOR_Initialize:	
 17443                           
 17444                           	psect	text90
 17445  0A92                     __ptext90:	
 17446 ;; *************** function _OLED_Initialize *****************
 17447 ;; Defined at:
 17448 ;;		line 24 in file "oled.c"
 17449 ;; Parameters:    Size  Location     Type
 17450 ;;		None
 17451 ;; Auto vars:     Size  Location     Type
 17452 ;;		None
 17453 ;; Return value:  Size  Location     Type
 17454 ;;                  1    wreg      void 
 17455 ;; Registers used:
 17456 ;;		wreg, status,2, status,0, pclath, cstack
 17457 ;; Tracked objects:
 17458 ;;		On entry : 0/0
 17459 ;;		On exit  : 0/0
 17460 ;;		Unchanged: 0/0
 17461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17464 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17465 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17466 ;;Total ram usage:        2 bytes
 17467 ;; Hardware stack levels used:    1
 17468 ;; Hardware stack levels required when called:    8
 17469 ;; This function calls:
 17470 ;;		_OLED_Command
 17471 ;; This function is called by:
 17472 ;;		_main
 17473 ;; This function uses a non-reentrant model
 17474 ;;
 17475                           
 17476                           
 17477                           ;psect for function _OLED_Initialize
 17478  0A92                     _OLED_Initialize:	
 17479                           
 17480                           ;oled.c: 28: LATDbits.LATD0 = 0;
 17481                           
 17482                           ;incstack = 0
 17483                           ; Regs used in _OLED_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17484  0A92  0020               	movlb	0	; select bank0
 17485  0A93  1019               	bcf	25,0	;volatile
 17486                           
 17487                           ;oled.c: 29: _delay((unsigned long)((1000)*(1000000/4000.0)));
 17488  0A94  3002               	movlw	2
 17489  0A95  0020               	movlb	0	; select bank0
 17490  0A96  00A3               	movwf	??_OLED_Initialize+1
 17491  0A97  3045               	movlw	69
 17492  0A98  00A2               	movwf	??_OLED_Initialize
 17493  0A99  30A9               	movlw	169
 17494  0A9A                     u5577:	
 17495  0A9A  0B89               	decfsz	9,f
 17496  0A9B  2A9A               	goto	u5577
 17497  0A9C  0BA2               	decfsz	??_OLED_Initialize,f
 17498  0A9D  2A9A               	goto	u5577
 17499  0A9E  0BA3               	decfsz	??_OLED_Initialize+1,f
 17500  0A9F  2A9A               	goto	u5577
 17501  0AA0  3200               	nop2
 17502                           
 17503                           ;oled.c: 30: LATDbits.LATD0 = 1;
 17504  0AA1  0020               	movlb	0	; select bank0
 17505  0AA2  1419               	bsf	25,0	;volatile
 17506                           
 17507                           ;oled.c: 31: _delay((unsigned long)((1000)*(1000000/4000.0)));
 17508  0AA3  3002               	movlw	2
 17509  0AA4  0020               	movlb	0	; select bank0
 17510  0AA5  00A3               	movwf	??_OLED_Initialize+1
 17511  0AA6  3045               	movlw	69
 17512  0AA7  00A2               	movwf	??_OLED_Initialize
 17513  0AA8  30A9               	movlw	169
 17514  0AA9                     u5587:	
 17515  0AA9  0B89               	decfsz	9,f
 17516  0AAA  2AA9               	goto	u5587
 17517  0AAB  0BA2               	decfsz	??_OLED_Initialize,f
 17518  0AAC  2AA9               	goto	u5587
 17519  0AAD  0BA3               	decfsz	??_OLED_Initialize+1,f
 17520  0AAE  2AA9               	goto	u5587
 17521  0AAF  3200               	nop2
 17522                           
 17523                           ;oled.c: 32: OLED_Command(0xAE);
 17524  0AB0  30AE               	movlw	174
 17525  0AB1  319F  277D  318A   	fcall	_OLED_Command
 17526                           
 17527                           ;oled.c: 33: OLED_Command(0xD5);
 17528  0AB4  30D5               	movlw	213
 17529  0AB5  319F  277D  318A   	fcall	_OLED_Command
 17530                           
 17531                           ;oled.c: 34: OLED_Command(0x80);
 17532  0AB8  3080               	movlw	128
 17533  0AB9  319F  277D  318A   	fcall	_OLED_Command
 17534                           
 17535                           ;oled.c: 35: OLED_Command(0xA8);
 17536  0ABC  30A8               	movlw	168
 17537  0ABD  319F  277D  318A   	fcall	_OLED_Command
 17538                           
 17539                           ;oled.c: 36: OLED_Command(39);
 17540  0AC0  3027               	movlw	39
 17541  0AC1  319F  277D  318A   	fcall	_OLED_Command
 17542                           
 17543                           ;oled.c: 38: OLED_Command(0xA1);
 17544  0AC4  30A1               	movlw	161
 17545  0AC5  319F  277D  318A   	fcall	_OLED_Command
 17546                           
 17547                           ;oled.c: 39: OLED_Command(0xC8);
 17548  0AC8  30C8               	movlw	200
 17549  0AC9  319F  277D  318A   	fcall	_OLED_Command
 17550                           
 17551                           ;oled.c: 40: OLED_Command(0x40);
 17552  0ACC  3040               	movlw	64
 17553  0ACD  319F  277D  318A   	fcall	_OLED_Command
 17554                           
 17555                           ;oled.c: 42: OLED_Command(0xD3);
 17556  0AD0  30D3               	movlw	211
 17557  0AD1  319F  277D  318A   	fcall	_OLED_Command
 17558                           
 17559                           ;oled.c: 43: OLED_Command(0xA4);
 17560  0AD4  30A4               	movlw	164
 17561  0AD5  319F  277D  318A   	fcall	_OLED_Command
 17562                           
 17563                           ;oled.c: 44: OLED_Command(0x8D);
 17564  0AD8  308D               	movlw	141
 17565  0AD9  319F  277D  318A   	fcall	_OLED_Command
 17566                           
 17567                           ;oled.c: 45: OLED_Command(0x14);
 17568  0ADC  3014               	movlw	20
 17569  0ADD  319F  277D  318A   	fcall	_OLED_Command
 17570                           
 17571                           ;oled.c: 46: OLED_Command(0xDA);
 17572  0AE0  30DA               	movlw	218
 17573  0AE1  319F  277D  318A   	fcall	_OLED_Command
 17574                           
 17575                           ;oled.c: 47: OLED_Command(0x12);
 17576  0AE4  3012               	movlw	18
 17577  0AE5  319F  277D  318A   	fcall	_OLED_Command
 17578                           
 17579                           ;oled.c: 48: OLED_Command(0x81);
 17580  0AE8  3081               	movlw	129
 17581  0AE9  319F  277D  318A   	fcall	_OLED_Command
 17582                           
 17583                           ;oled.c: 49: OLED_Command(0xAF);
 17584  0AEC  30AF               	movlw	175
 17585  0AED  319F  277D  318A   	fcall	_OLED_Command
 17586                           
 17587                           ;oled.c: 50: OLED_Command(0xD9);
 17588  0AF0  30D9               	movlw	217
 17589  0AF1  319F  277D  318A   	fcall	_OLED_Command
 17590                           
 17591                           ;oled.c: 51: OLED_Command(0x25);
 17592  0AF4  3025               	movlw	37
 17593  0AF5  319F  277D  318A   	fcall	_OLED_Command
 17594                           
 17595                           ;oled.c: 52: OLED_Command(0xDB);
 17596  0AF8  30DB               	movlw	219
 17597  0AF9  319F  277D  318A   	fcall	_OLED_Command
 17598                           
 17599                           ;oled.c: 53: OLED_Command(0x20);
 17600  0AFC  3020               	movlw	32
 17601  0AFD  319F  277D  318A   	fcall	_OLED_Command
 17602                           
 17603                           ;oled.c: 54: OLED_Command(0xA4);
 17604  0B00  30A4               	movlw	164
 17605  0B01  319F  277D  318A   	fcall	_OLED_Command
 17606                           
 17607                           ;oled.c: 55: OLED_Command(0xA6);
 17608  0B04  30A6               	movlw	166
 17609  0B05  319F  277D  318A   	fcall	_OLED_Command
 17610                           
 17611                           ;oled.c: 56: OLED_Command(0xAF);
 17612  0B08  30AF               	movlw	175
 17613  0B09  319F  277D         	fcall	_OLED_Command
 17614  0B0B  0008               	return
 17615  0B0C                     __end_of_OLED_Initialize:	
 17616                           
 17617                           	psect	text91
 17618  0891                     __ptext91:	
 17619 ;; *************** function _OLED_Clear *****************
 17620 ;; Defined at:
 17621 ;;		line 92 in file "oled.c"
 17622 ;; Parameters:    Size  Location     Type
 17623 ;;		None
 17624 ;; Auto vars:     Size  Location     Type
 17625 ;;  j               2   13[BANK0 ] int 
 17626 ;;  i               1   15[BANK0 ] unsigned char 
 17627 ;;  j               1   12[BANK0 ] unsigned char 
 17628 ;; Return value:  Size  Location     Type
 17629 ;;                  1    wreg      void 
 17630 ;; Registers used:
 17631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17632 ;; Tracked objects:
 17633 ;;		On entry : 0/0
 17634 ;;		On exit  : 0/0
 17635 ;;		Unchanged: 0/0
 17636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17638 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17639 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17640 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17641 ;;Total ram usage:        6 bytes
 17642 ;; Hardware stack levels used:    1
 17643 ;; Hardware stack levels required when called:   10
 17644 ;; This function calls:
 17645 ;;		_OLED_Data
 17646 ;;		_OLED_PutPicture
 17647 ;;		_OLED_SetColumn
 17648 ;;		_OLED_SetRow
 17649 ;; This function is called by:
 17650 ;;		_main
 17651 ;; This function uses a non-reentrant model
 17652 ;;
 17653                           
 17654                           
 17655                           ;psect for function _OLED_Clear
 17656  0891                     _OLED_Clear:	
 17657                           
 17658                           ;oled.c: 94: unsigned char i,j;
 17659                           ;oled.c: 95: for( i=0; i<5; i++)
 17660                           
 17661                           ;incstack = 0
 17662                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17663  0891  0020               	movlb	0	; select bank0
 17664  0892  01AF               	clrf	OLED_Clear@i
 17665  0893  3005               	movlw	5
 17666  0894  022F               	subwf	OLED_Clear@i,w
 17667  0895  1803               	btfsc	3,0
 17668  0896  28BA               	goto	l4842
 17669  0897                     l4824:	
 17670                           
 17671                           ;oled.c: 96: {
 17672                           ;oled.c: 97: OLED_SetRow( i);
 17673  0897  082F               	movf	OLED_Clear@i,w
 17674  0898  319F  27A5  3188   	fcall	_OLED_SetRow
 17675                           
 17676                           ;oled.c: 98: OLED_SetColumn( 0);
 17677  089B  3000               	movlw	0
 17678  089C  3191  214A  3188   	fcall	_OLED_SetColumn
 17679                           
 17680                           ;oled.c: 99: for( j=0; j<96; j++)
 17681  089F  0020               	movlb	0	; select bank0
 17682  08A0  01AC               	clrf	OLED_Clear@j
 17683  08A1  3060               	movlw	96
 17684  08A2  022C               	subwf	OLED_Clear@j,w
 17685  08A3  1803               	btfsc	3,0
 17686  08A4  28B2               	goto	l4838
 17687  08A5                     l4832:	
 17688                           
 17689                           ;oled.c: 100: OLED_Data( 0x00);
 17690  08A5  3000               	movlw	0
 17691  08A6  319F  2773  3188   	fcall	_OLED_Data
 17692  08A9  3001               	movlw	1
 17693  08AA  0020               	movlb	0	; select bank0
 17694  08AB  00AA               	movwf	??_OLED_Clear
 17695  08AC  082A               	movf	??_OLED_Clear,w
 17696  08AD  07AC               	addwf	OLED_Clear@j,f
 17697  08AE  3060               	movlw	96
 17698  08AF  022C               	subwf	OLED_Clear@j,w
 17699  08B0  1C03               	skipc
 17700  08B1  28A5               	goto	l4832
 17701  08B2                     l4838:	
 17702  08B2  3001               	movlw	1
 17703  08B3  00AA               	movwf	??_OLED_Clear
 17704  08B4  082A               	movf	??_OLED_Clear,w
 17705  08B5  07AF               	addwf	OLED_Clear@i,f
 17706  08B6  3005               	movlw	5
 17707  08B7  022F               	subwf	OLED_Clear@i,w
 17708  08B8  1C03               	skipc
 17709  08B9  2897               	goto	l4824
 17710  08BA                     l4842:	
 17711                           
 17712                           ;oled.c: 101: }
 17713                           ;oled.c: 102: for(int j = 0; j < 400; j++){
 17714  08BA  01AD               	clrf	OLED_Clear@j_1658
 17715  08BB  01AE               	clrf	OLED_Clear@j_1658+1
 17716  08BC  082E               	movf	OLED_Clear@j_1658+1,w
 17717  08BD  3A80               	xorlw	128
 17718  08BE  00AA               	movwf	??_OLED_Clear
 17719  08BF  3081               	movlw	129
 17720  08C0  022A               	subwf	??_OLED_Clear,w
 17721  08C1  1D03               	skipz
 17722  08C2  28C5               	goto	u3225
 17723  08C3  3090               	movlw	144
 17724  08C4  022D               	subwf	OLED_Clear@j_1658,w
 17725  08C5                     u3225:	
 17726  08C5  1803               	btfsc	3,0
 17727  08C6  28E2               	goto	l4854
 17728  08C7                     l4848:	
 17729                           
 17730                           ;oled.c: 103: displayArray[j] = 0x00;
 17731  08C7  30B1               	movlw	177
 17732  08C8  0020               	movlb	0	; select bank0
 17733  08C9  00AA               	movwf	??_OLED_Clear
 17734  08CA  3021               	movlw	33
 17735  08CB  00AB               	movwf	??_OLED_Clear+1
 17736  08CC  082D               	movf	OLED_Clear@j_1658,w
 17737  08CD  072A               	addwf	??_OLED_Clear,w
 17738  08CE  0086               	movwf	6
 17739  08CF  082E               	movf	OLED_Clear@j_1658+1,w
 17740  08D0  3D2B               	addwfc	??_OLED_Clear+1,w
 17741  08D1  0087               	movwf	7
 17742  08D2  0181               	clrf	1
 17743  08D3  3001               	movlw	1
 17744  08D4  07AD               	addwf	OLED_Clear@j_1658,f
 17745  08D5  3000               	movlw	0
 17746  08D6  3DAE               	addwfc	OLED_Clear@j_1658+1,f
 17747  08D7  082E               	movf	OLED_Clear@j_1658+1,w
 17748  08D8  3A80               	xorlw	128
 17749  08D9  00AA               	movwf	??_OLED_Clear
 17750  08DA  3081               	movlw	129
 17751  08DB  022A               	subwf	??_OLED_Clear,w
 17752  08DC  1D03               	skipz
 17753  08DD  28E0               	goto	u3235
 17754  08DE  3090               	movlw	144
 17755  08DF  022D               	subwf	OLED_Clear@j_1658,w
 17756  08E0                     u3235:	
 17757  08E0  1C03               	skipc
 17758  08E1  28C7               	goto	l4848
 17759  08E2                     l4854:	
 17760                           
 17761                           ;oled.c: 104: }
 17762                           ;oled.c: 105: OLED_PutPicture(emptyArray);
 17763  08E2  306E               	movlw	low (_emptyArray| (0+32768))
 17764  08E3  0020               	movlb	0	; select bank0
 17765  08E4  00A4               	movwf	OLED_PutPicture@pic
 17766  08E5  3080               	movlw	high (_emptyArray| (0+32768))
 17767  08E6  00A5               	movwf	OLED_PutPicture@pic+1
 17768  08E7  3194  24EE         	fcall	_OLED_PutPicture
 17769  08E9  0008               	return
 17770  08EA                     __end_of_OLED_Clear:	
 17771                           
 17772                           	psect	text92
 17773  14EE                     __ptext92:	
 17774 ;; *************** function _OLED_PutPicture *****************
 17775 ;; Defined at:
 17776 ;;		line 76 in file "oled.c"
 17777 ;; Parameters:    Size  Location     Type
 17778 ;;  pic             2    4[BANK0 ] PTR const unsigned char 
 17779 ;;		 -> emptyArray(475), displayArray(475), 
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;  i               2    8[BANK0 ] unsigned int 
 17782 ;;  j               2    6[BANK0 ] unsigned int 
 17783 ;; Return value:  Size  Location     Type
 17784 ;;                  1    wreg      void 
 17785 ;; Registers used:
 17786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17787 ;; Tracked objects:
 17788 ;;		On entry : 0/0
 17789 ;;		On exit  : 0/0
 17790 ;;		Unchanged: 0/0
 17791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17792 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17793 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17795 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17796 ;;Total ram usage:        6 bytes
 17797 ;; Hardware stack levels used:    1
 17798 ;; Hardware stack levels required when called:    9
 17799 ;; This function calls:
 17800 ;;		_OLED_Data
 17801 ;;		_OLED_SetColumn
 17802 ;;		_OLED_SetRow
 17803 ;; This function is called by:
 17804 ;;		_OLED_Clear
 17805 ;;		_Write_String
 17806 ;; This function uses a non-reentrant model
 17807 ;;
 17808                           
 17809                           
 17810                           ;psect for function _OLED_PutPicture
 17811  14EE                     _OLED_PutPicture:	
 17812                           
 17813                           ;oled.c: 80: unsigned int i,j;
 17814                           ;oled.c: 81: for( i=0; i<5; i++)
 17815                           
 17816                           ;incstack = 0
 17817                           ; Regs used in _OLED_PutPicture: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17818  14EE  0020               	movlb	0	; select bank0
 17819  14EF  01A8               	clrf	OLED_PutPicture@i
 17820  14F0  01A9               	clrf	OLED_PutPicture@i+1
 17821  14F1                     L5:	
 17822  14F1  3000               	movlw	0
 17823  14F2  0229               	subwf	OLED_PutPicture@i+1,w
 17824  14F3  3005               	movlw	5
 17825  14F4  1903               	skipnz
 17826  14F5  0228               	subwf	OLED_PutPicture@i,w
 17827  14F6  1803               	btfsc	3,0
 17828  14F7  0008               	return
 17829                           
 17830                           ;oled.c: 82: {
 17831                           ;oled.c: 83: OLED_SetRow( i);
 17832  14F8  0828               	movf	OLED_PutPicture@i,w
 17833  14F9  319F  27A5  3194   	fcall	_OLED_SetRow
 17834                           
 17835                           ;oled.c: 84: OLED_SetColumn( 0);
 17836  14FC  3000               	movlw	0
 17837  14FD  3191  214A  3194   	fcall	_OLED_SetColumn
 17838                           
 17839                           ;oled.c: 85: for( j=0; j<96; j++)
 17840  1500  0020               	movlb	0	; select bank0
 17841  1501  01A6               	clrf	OLED_PutPicture@j
 17842  1502  01A7               	clrf	OLED_PutPicture@j+1
 17843  1503  3000               	movlw	0
 17844  1504  0227               	subwf	OLED_PutPicture@j+1,w
 17845  1505  3060               	movlw	96
 17846  1506  1903               	skipnz
 17847  1507  0226               	subwf	OLED_PutPicture@j,w
 17848  1508  1803               	btfsc	3,0
 17849  1509  2D22               	goto	l4550
 17850  150A                     l4542:	
 17851                           
 17852                           ;oled.c: 86: {
 17853                           ;oled.c: 87: OLED_Data( *pic++);
 17854  150A  0824               	movf	OLED_PutPicture@pic,w
 17855  150B  0084               	movwf	4
 17856  150C  0825               	movf	OLED_PutPicture@pic+1,w
 17857  150D  0085               	movwf	5
 17858  150E  0800               	movf	0,w	;code access
 17859  150F  319F  2773  3194   	fcall	_OLED_Data
 17860  1512  3001               	movlw	1
 17861  1513  0020               	movlb	0	; select bank0
 17862  1514  07A4               	addwf	OLED_PutPicture@pic,f
 17863  1515  3000               	movlw	0
 17864  1516  3DA5               	addwfc	OLED_PutPicture@pic+1,f
 17865  1517  3001               	movlw	1
 17866  1518  07A6               	addwf	OLED_PutPicture@j,f
 17867  1519  3000               	movlw	0
 17868  151A  3DA7               	addwfc	OLED_PutPicture@j+1,f
 17869  151B  3000               	movlw	0
 17870  151C  0227               	subwf	OLED_PutPicture@j+1,w
 17871  151D  3060               	movlw	96
 17872  151E  1903               	skipnz
 17873  151F  0226               	subwf	OLED_PutPicture@j,w
 17874  1520  1C03               	skipc
 17875  1521  2D0A               	goto	l4542
 17876  1522                     l4550:	
 17877  1522  3001               	movlw	1
 17878  1523  07A8               	addwf	OLED_PutPicture@i,f
 17879  1524  3000               	movlw	0
 17880  1525  3DA9               	addwfc	OLED_PutPicture@i+1,f
 17881  1526  2CF1               	goto	L5
 17882  1527                     __end_of_OLED_PutPicture:	
 17883                           
 17884                           	psect	text93
 17885  1FA5                     __ptext93:	
 17886 ;; *************** function _OLED_SetRow *****************
 17887 ;; Defined at:
 17888 ;;		line 59 in file "oled.c"
 17889 ;; Parameters:    Size  Location     Type
 17890 ;;  address         1    wreg     unsigned char 
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;  address         1    3[BANK0 ] unsigned char 
 17893 ;; Return value:  Size  Location     Type
 17894 ;;                  1    wreg      void 
 17895 ;; Registers used:
 17896 ;;		wreg, status,2, status,0, pclath, cstack
 17897 ;; Tracked objects:
 17898 ;;		On entry : 0/0
 17899 ;;		On exit  : 0/0
 17900 ;;		Unchanged: 0/0
 17901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17904 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17905 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17906 ;;Total ram usage:        2 bytes
 17907 ;; Hardware stack levels used:    1
 17908 ;; Hardware stack levels required when called:    8
 17909 ;; This function calls:
 17910 ;;		_OLED_Command
 17911 ;; This function is called by:
 17912 ;;		_OLED_PutPicture
 17913 ;;		_OLED_Clear
 17914 ;; This function uses a non-reentrant model
 17915 ;;
 17916                           
 17917                           
 17918                           ;psect for function _OLED_SetRow
 17919  1FA5                     _OLED_SetRow:	
 17920                           
 17921                           ;incstack = 0
 17922                           ; Regs used in _OLED_SetRow: [wreg+status,2+status,0+pclath+cstack]
 17923                           ;OLED_SetRow@address stored from wreg
 17924  1FA5  0020               	movlb	0	; select bank0
 17925  1FA6  00A3               	movwf	OLED_SetRow@address
 17926                           
 17927                           ;oled.c: 63: address = (uint8_t)(0xB0 | address);
 17928  1FA7  0823               	movf	OLED_SetRow@address,w
 17929  1FA8  38B0               	iorlw	176
 17930  1FA9  00A2               	movwf	??_OLED_SetRow
 17931  1FAA  0822               	movf	??_OLED_SetRow,w
 17932  1FAB  00A3               	movwf	OLED_SetRow@address
 17933                           
 17934                           ;oled.c: 64: OLED_Command( address);
 17935  1FAC  0823               	movf	OLED_SetRow@address,w
 17936  1FAD  319F  277D         	fcall	_OLED_Command
 17937  1FAF  0008               	return
 17938  1FB0                     __end_of_OLED_SetRow:	
 17939                           
 17940                           	psect	text94
 17941  114A                     __ptext94:	
 17942 ;; *************** function _OLED_SetColumn *****************
 17943 ;; Defined at:
 17944 ;;		line 67 in file "oled.c"
 17945 ;; Parameters:    Size  Location     Type
 17946 ;;  address         1    wreg     unsigned char 
 17947 ;; Auto vars:     Size  Location     Type
 17948 ;;  address         1    3[BANK0 ] unsigned char 
 17949 ;; Return value:  Size  Location     Type
 17950 ;;                  1    wreg      void 
 17951 ;; Registers used:
 17952 ;;		wreg, status,2, status,0, pclath, cstack
 17953 ;; Tracked objects:
 17954 ;;		On entry : 0/0
 17955 ;;		On exit  : 0/0
 17956 ;;		Unchanged: 0/0
 17957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17960 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17961 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17962 ;;Total ram usage:        2 bytes
 17963 ;; Hardware stack levels used:    1
 17964 ;; Hardware stack levels required when called:    8
 17965 ;; This function calls:
 17966 ;;		_OLED_Command
 17967 ;; This function is called by:
 17968 ;;		_OLED_PutPicture
 17969 ;;		_OLED_Clear
 17970 ;; This function uses a non-reentrant model
 17971 ;;
 17972                           
 17973                           
 17974                           ;psect for function _OLED_SetColumn
 17975  114A                     _OLED_SetColumn:	
 17976                           
 17977                           ;incstack = 0
 17978                           ; Regs used in _OLED_SetColumn: [wreg+status,2+status,0+pclath+cstack]
 17979                           ;OLED_SetColumn@address stored from wreg
 17980  114A  0020               	movlb	0	; select bank0
 17981  114B  00A3               	movwf	OLED_SetColumn@address
 17982                           
 17983                           ;oled.c: 71: address += 32;
 17984  114C  3020               	movlw	32
 17985  114D  00A2               	movwf	??_OLED_SetColumn
 17986  114E  0822               	movf	??_OLED_SetColumn,w
 17987  114F  07A3               	addwf	OLED_SetColumn@address,f
 17988                           
 17989                           ;oled.c: 72: OLED_Command(( 0x10 | (address >> 4)));
 17990  1150  0823               	movf	OLED_SetColumn@address,w
 17991  1151  00A2               	movwf	??_OLED_SetColumn
 17992  1152  3004               	movlw	4
 17993  1153                     u2605:	
 17994  1153  36A2               	lsrf	??_OLED_SetColumn,f
 17995  1154  0B89               	decfsz	9,f
 17996  1155  2953               	goto	u2605
 17997  1156  0822               	movf	??_OLED_SetColumn,w
 17998  1157  3810               	iorlw	16
 17999  1158  319F  277D  3191   	fcall	_OLED_Command
 18000                           
 18001                           ;oled.c: 73: OLED_Command(( 0x0f & address));
 18002  115B  0020               	movlb	0	; select bank0
 18003  115C  0823               	movf	OLED_SetColumn@address,w
 18004  115D  390F               	andlw	15
 18005  115E  319F  277D         	fcall	_OLED_Command
 18006  1160  0008               	return
 18007  1161                     __end_of_OLED_SetColumn:	
 18008                           
 18009                           	psect	text95
 18010  1F7D                     __ptext95:	
 18011 ;; *************** function _OLED_Command *****************
 18012 ;; Defined at:
 18013 ;;		line 4 in file "oled.c"
 18014 ;; Parameters:    Size  Location     Type
 18015 ;;  temp            1    wreg     unsigned char 
 18016 ;; Auto vars:     Size  Location     Type
 18017 ;;  temp            1    1[BANK0 ] unsigned char 
 18018 ;; Return value:  Size  Location     Type
 18019 ;;                  1    wreg      void 
 18020 ;; Registers used:
 18021 ;;		wreg, status,2, status,0, pclath, cstack
 18022 ;; Tracked objects:
 18023 ;;		On entry : 0/0
 18024 ;;		On exit  : 0/0
 18025 ;;		Unchanged: 0/0
 18026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18030 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18031 ;;Total ram usage:        1 bytes
 18032 ;; Hardware stack levels used:    1
 18033 ;; Hardware stack levels required when called:    7
 18034 ;; This function calls:
 18035 ;;		_SPI2_Exchange8bit
 18036 ;; This function is called by:
 18037 ;;		_OLED_Initialize
 18038 ;;		_OLED_SetRow
 18039 ;;		_OLED_SetColumn
 18040 ;; This function uses a non-reentrant model
 18041 ;;
 18042                           
 18043                           
 18044                           ;psect for function _OLED_Command
 18045  1F7D                     _OLED_Command:	
 18046                           
 18047                           ;incstack = 0
 18048                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
 18049                           ;OLED_Command@temp stored from wreg
 18050  1F7D  0020               	movlb	0	; select bank0
 18051  1F7E  00A1               	movwf	OLED_Command@temp
 18052                           
 18053                           ;oled.c: 8: LATAbits.LATA3 = 0;
 18054  1F7F  1196               	bcf	22,3	;volatile
 18055                           
 18056                           ;oled.c: 9: LATCbits.LATC2 = 0;
 18057  1F80  1118               	bcf	24,2	;volatile
 18058                           
 18059                           ;oled.c: 10: SPI2_Exchange8bit( temp);
 18060  1F81  0821               	movf	OLED_Command@temp,w
 18061  1F82  319F  27E8         	fcall	_SPI2_Exchange8bit
 18062                           
 18063                           ;oled.c: 11: LATAbits.LATA3 = 1;
 18064  1F84  0020               	movlb	0	; select bank0
 18065  1F85  1596               	bsf	22,3	;volatile
 18066  1F86  0008               	return
 18067  1F87                     __end_of_OLED_Command:	
 18068                           
 18069                           	psect	text96
 18070  1F73                     __ptext96:	
 18071 ;; *************** function _OLED_Data *****************
 18072 ;; Defined at:
 18073 ;;		line 14 in file "oled.c"
 18074 ;; Parameters:    Size  Location     Type
 18075 ;;  temp            1    wreg     unsigned char 
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;  temp            1    1[BANK0 ] unsigned char 
 18078 ;; Return value:  Size  Location     Type
 18079 ;;                  1    wreg      void 
 18080 ;; Registers used:
 18081 ;;		wreg, status,2, status,0, pclath, cstack
 18082 ;; Tracked objects:
 18083 ;;		On entry : 0/0
 18084 ;;		On exit  : 0/0
 18085 ;;		Unchanged: 0/0
 18086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18090 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18091 ;;Total ram usage:        1 bytes
 18092 ;; Hardware stack levels used:    1
 18093 ;; Hardware stack levels required when called:    7
 18094 ;; This function calls:
 18095 ;;		_SPI2_Exchange8bit
 18096 ;; This function is called by:
 18097 ;;		_OLED_PutPicture
 18098 ;;		_OLED_Clear
 18099 ;; This function uses a non-reentrant model
 18100 ;;
 18101                           
 18102                           
 18103                           ;psect for function _OLED_Data
 18104  1F73                     _OLED_Data:	
 18105                           
 18106                           ;incstack = 0
 18107                           ; Regs used in _OLED_Data: [wreg+status,2+status,0+pclath+cstack]
 18108                           ;OLED_Data@temp stored from wreg
 18109  1F73  0020               	movlb	0	; select bank0
 18110  1F74  00A1               	movwf	OLED_Data@temp
 18111                           
 18112                           ;oled.c: 18: LATAbits.LATA3 = 0;
 18113  1F75  1196               	bcf	22,3	;volatile
 18114                           
 18115                           ;oled.c: 19: LATCbits.LATC2 = 1;
 18116  1F76  1518               	bsf	24,2	;volatile
 18117                           
 18118                           ;oled.c: 20: SPI2_Exchange8bit( temp);
 18119  1F77  0821               	movf	OLED_Data@temp,w
 18120  1F78  319F  27E8         	fcall	_SPI2_Exchange8bit
 18121                           
 18122                           ;oled.c: 21: LATAbits.LATA3 = 1;
 18123  1F7A  0020               	movlb	0	; select bank0
 18124  1F7B  1596               	bsf	22,3	;volatile
 18125  1F7C  0008               	return
 18126  1F7D                     __end_of_OLED_Data:	
 18127                           
 18128                           	psect	text97
 18129  1FE8                     __ptext97:	
 18130 ;; *************** function _SPI2_Exchange8bit *****************
 18131 ;; Defined at:
 18132 ;;		line 79 in file "mcc_generated_files/spi2.c"
 18133 ;; Parameters:    Size  Location     Type
 18134 ;;  data            1    wreg     unsigned char 
 18135 ;; Auto vars:     Size  Location     Type
 18136 ;;  data            1    0[BANK0 ] unsigned char 
 18137 ;; Return value:  Size  Location     Type
 18138 ;;                  1    wreg      unsigned char 
 18139 ;; Registers used:
 18140 ;;		wreg
 18141 ;; Tracked objects:
 18142 ;;		On entry : 0/0
 18143 ;;		On exit  : 0/0
 18144 ;;		Unchanged: 0/0
 18145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18149 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18150 ;;Total ram usage:        1 bytes
 18151 ;; Hardware stack levels used:    1
 18152 ;; Hardware stack levels required when called:    6
 18153 ;; This function calls:
 18154 ;;		Nothing
 18155 ;; This function is called by:
 18156 ;;		_OLED_Command
 18157 ;;		_OLED_Data
 18158 ;;		_SPI2_Exchange8bitBuffer
 18159 ;; This function uses a non-reentrant model
 18160 ;;
 18161                           
 18162                           
 18163                           ;psect for function _SPI2_Exchange8bit
 18164  1FE8                     _SPI2_Exchange8bit:	
 18165                           
 18166                           ;incstack = 0
 18167                           ; Regs used in _SPI2_Exchange8bit: [wreg]
 18168                           ;SPI2_Exchange8bit@data stored from wreg
 18169  1FE8  0020               	movlb	0	; select bank0
 18170  1FE9  00A0               	movwf	SPI2_Exchange8bit@data
 18171                           
 18172                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 18173  1FEA  0023               	movlb	3	; select bank3
 18174  1FEB  139A               	bcf	26,7	;volatile
 18175                           
 18176                           ;spi2.c: 84: SSP2BUF = data;
 18177  1FEC  0020               	movlb	0	; select bank0
 18178  1FED  0820               	movf	SPI2_Exchange8bit@data,w
 18179  1FEE  0023               	movlb	3	; select bank3
 18180  1FEF  0096               	movwf	22	;volatile
 18181  1FF0                     l741:	
 18182                           ;spi2.c: 87: {
 18183                           
 18184                           ;spi2.c: 86: while(SSP2STATbits.BF == 0x0)
 18185                           
 18186  1FF0  1C19               	btfss	25,0	;volatile
 18187  1FF1  2FF0               	goto	l741
 18188                           
 18189                           ;spi2.c: 88: }
 18190                           ;spi2.c: 90: return (SSP2BUF);
 18191  1FF2  0816               	movf	22,w	;volatile
 18192  1FF3  0008               	return
 18193  1FF4                     __end_of_SPI2_Exchange8bit:	
 18194                           
 18195                           	psect	intentry
 18196  0004                     __pintentry:	
 18197 ;; *************** function _INTERRUPT_InterruptManager *****************
 18198 ;; Defined at:
 18199 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18200 ;; Parameters:    Size  Location     Type
 18201 ;;		None
 18202 ;; Auto vars:     Size  Location     Type
 18203 ;;		None
 18204 ;; Return value:  Size  Location     Type
 18205 ;;                  1    wreg      void 
 18206 ;; Registers used:
 18207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18208 ;; Tracked objects:
 18209 ;;		On entry : 0/0
 18210 ;;		On exit  : 0/0
 18211 ;;		Unchanged: 0/0
 18212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18216 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18217 ;;Total ram usage:        1 bytes
 18218 ;; Hardware stack levels used:    1
 18219 ;; Hardware stack levels required when called:    5
 18220 ;; This function calls:
 18221 ;;		Absolute function
 18222 ;;		_i2c_busCollisionISR
 18223 ;;		i1_i2c_ISR
 18224 ;; This function is called by:
 18225 ;;		Interrupt level 1
 18226 ;; This function uses a non-reentrant model
 18227 ;;
 18228                           
 18229  0004                     _INTERRUPT_InterruptManager:	
 18230                           
 18231                           ;incstack = 0
 18232 ;; hardware stack exceeded
 18233  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18234                           
 18235                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18236  0005  3180               	pagesel	$
 18237  0006  0020               	movlb	0	; select bank0
 18238  0007  087F               	movf	127,w
 18239  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
 18240                           
 18241                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 18242  0009  1F0B               	btfss	11,6	;volatile
 18243  000A  281D               	goto	i1l633
 18244                           
 18245                           ;interrupt_manager.c: 56: {
 18246                           ;interrupt_manager.c: 57: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 18247  000B  002E               	movlb	14	; select bank14
 18248  000C  1899               	btfsc	25,1	;volatile
 18249  000D  1C8F               	btfss	15,1	;volatile
 18250  000E  2815               	goto	i1l628
 18251                           
 18252                           ;interrupt_manager.c: 58: {
 18253                           ;interrupt_manager.c: 59: i2c1_driver_busCollisionISR();
 18254  000F  087D               	movf	_i2c1_driver_busCollisionISR+1,w
 18255  0010  008A               	movwf	10
 18256  0011  087C               	movf	_i2c1_driver_busCollisionISR,w
 18257  0012  000A               	callw
 18258  0013  3180               	pagesel	$
 18259                           
 18260                           ;interrupt_manager.c: 60: }
 18261  0014  281D               	goto	i1l633
 18262  0015                     i1l628:	
 18263                           
 18264                           ;interrupt_manager.c: 61: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 18265  0015  1819               	btfsc	25,0	;volatile
 18266  0016  1C0F               	btfss	15,0	;volatile
 18267  0017  281D               	goto	i1l633
 18268                           
 18269                           ;interrupt_manager.c: 62: {
 18270                           ;interrupt_manager.c: 63: i2c1_driver_i2cISR();
 18271  0018  087B               	movf	_i2c1_driver_i2cISR+1,w
 18272  0019  008A               	movwf	10
 18273  001A  087A               	movf	_i2c1_driver_i2cISR,w
 18274  001B  000A               	callw
 18275  001C  3180               	pagesel	$
 18276  001D                     i1l633:	
 18277                           ;interrupt_manager.c: 70: else
 18278                           ;interrupt_manager.c: 71: {
 18279                           
 18280                           ;interrupt_manager.c: 68: }
 18281                           ;interrupt_manager.c: 69: }
 18282                           
 18283                           ;interrupt_manager.c: 65: else
 18284                           ;interrupt_manager.c: 66: {
 18285                           
 18286                           ;interrupt_manager.c: 64: }
 18287                           
 18288  001D  0877               	movf	??_INTERRUPT_InterruptManager,w
 18289  001E  0020               	movlb	0	; select bank0
 18290  001F  00FF               	movwf	127
 18291  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18292  0021  0009               	retfie
 18293  0022                     __end_of_INTERRUPT_InterruptManager:	
 18294                           
 18295                           	psect	text99
 18296  12BC                     __ptext99:	
 18297 ;; *************** function i1_i2c_ISR *****************
 18298 ;; Defined at:
 18299 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 18300 ;; Parameters:    Size  Location     Type
 18301 ;;		None
 18302 ;; Auto vars:     Size  Location     Type
 18303 ;;		None
 18304 ;; Return value:  Size  Location     Type
 18305 ;;                  1    wreg      void 
 18306 ;; Registers used:
 18307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18308 ;; Tracked objects:
 18309 ;;		On entry : 0/0
 18310 ;;		On exit  : 0/0
 18311 ;;		Unchanged: 0/0
 18312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18315 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18317 ;;Total ram usage:        3 bytes
 18318 ;; Hardware stack levels used:    1
 18319 ;; Hardware stack levels required when called:    4
 18320 ;; This function calls:
 18321 ;;		i1_do_I2C_DO_ACK
 18322 ;;		i1_do_I2C_DO_ADDRESS_NACK
 18323 ;;		i1_do_I2C_DO_NACK_RESTART
 18324 ;;		i1_do_I2C_DO_NACK_STOP
 18325 ;;		i1_do_I2C_IDLE
 18326 ;;		i1_do_I2C_RCEN
 18327 ;;		i1_do_I2C_RESET
 18328 ;;		i1_do_I2C_RX
 18329 ;;		i1_do_I2C_SEND_ADR_READ
 18330 ;;		i1_do_I2C_SEND_ADR_WRITE
 18331 ;;		i1_do_I2C_SEND_RESTART
 18332 ;;		i1_do_I2C_SEND_RESTART_READ
 18333 ;;		i1_do_I2C_SEND_RESTART_WRITE
 18334 ;;		i1_do_I2C_SEND_STOP
 18335 ;;		i1_do_I2C_TX
 18336 ;;		i1_do_I2C_TX_EMPTY
 18337 ;;		i1_i2c1_driver_isNACK
 18338 ;;		i1_mssp1_clearIRQ
 18339 ;; This function is called by:
 18340 ;; This function uses a non-reentrant model
 18341 ;;
 18342                           
 18343                           
 18344                           ;psect for function i1_i2c_ISR
 18345  12BC                     i1_i2c_ISR:	
 18346  12BC                     i1l7094:	
 18347                           ;incstack = 0
 18348 ;; hardware stack exceeded
 18349                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18350                           
 18351                           
 18352                           ;i2c_master.c: 421: mssp1_clearIRQ();
 18353  12BC  319E  2677  3192   	fcall	i1_mssp1_clearIRQ
 18354                           
 18355                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 18356  12BF  0021               	movlb	1	; select bank1
 18357  12C0  1DC7               	btfss	_i2c_status^(0+128),3
 18358  12C1  2ACC               	goto	i1l7102
 18359  12C2  319F  2711  3192   	fcall	i1_i2c1_driver_isNACK
 18360  12C5  1C03               	btfss	3,0
 18361  12C6  2ACC               	goto	i1l7102
 18362                           
 18363                           ;i2c_master.c: 428: {
 18364                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 18365  12C7  300F               	movlw	15
 18366  12C8  00F4               	movwf	??i1_i2c_ISR
 18367  12C9  0874               	movf	??i1_i2c_ISR,w
 18368  12CA  0021               	movlb	1	; select bank1
 18369  12CB  00D0               	movwf	(_i2c_status^(0+128)+9)
 18370  12CC                     i1l7102:	
 18371                           
 18372                           ;i2c_master.c: 430: }
 18373                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 18374  12CC  0021               	movlb	1	; select bank1
 18375  12CD  0850               	movf	(_i2c_status^(0+128)+9),w
 18376  12CE  00F4               	movwf	??i1_i2c_ISR
 18377  12CF  01F5               	clrf	??i1_i2c_ISR+1
 18378  12D0  35F4               	lslf	??i1_i2c_ISR,f
 18379  12D1  0DF5               	rlf	??i1_i2c_ISR+1,f
 18380  12D2  3000               	movlw	low (_fsmStateTable| (0+32768))
 18381  12D3  0774               	addwf	??i1_i2c_ISR,w
 18382  12D4  0084               	movwf	4
 18383  12D5  3098               	movlw	high (_fsmStateTable| (0+32768))
 18384  12D6  3D75               	addwfc	??i1_i2c_ISR+1,w
 18385  12D7  0085               	movwf	5
 18386  12D8  3F01               	moviw [1]fsr0
 18387  12D9  008A               	movwf	10
 18388  12DA  3F00               	moviw [0]fsr0
 18389  12DB  000A               	callw
 18390  12DC  3192               	pagesel	$
 18391  12DD  00F6               	movwf	??i1_i2c_ISR+2
 18392  12DE  0876               	movf	??i1_i2c_ISR+2,w
 18393  12DF  0021               	movlb	1	; select bank1
 18394  12E0  00D0               	movwf	(_i2c_status^(0+128)+9)
 18395  12E1  0008               	return
 18396  12E2                     __end_ofi1_i2c_ISR:	
 18397                           
 18398                           	psect	text100
 18399  1E77                     __ptext100:	
 18400 ;; *************** function i1_mssp1_clearIRQ *****************
 18401 ;; Defined at:
 18402 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 18403 ;; Parameters:    Size  Location     Type
 18404 ;;		None
 18405 ;; Auto vars:     Size  Location     Type
 18406 ;;		None
 18407 ;; Return value:  Size  Location     Type
 18408 ;;                  1    wreg      void 
 18409 ;; Registers used:
 18410 ;;		None
 18411 ;; Tracked objects:
 18412 ;;		On entry : 0/0
 18413 ;;		On exit  : 0/0
 18414 ;;		Unchanged: 0/0
 18415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18420 ;;Total ram usage:        0 bytes
 18421 ;; Hardware stack levels used:    1
 18422 ;; This function calls:
 18423 ;;		Nothing
 18424 ;; This function is called by:
 18425 ;;		i1_i2c_ISR
 18426 ;; This function uses a non-reentrant model
 18427 ;;
 18428                           
 18429                           
 18430                           ;psect for function i1_mssp1_clearIRQ
 18431  1E77                     i1_mssp1_clearIRQ:	
 18432                           
 18433                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
 18434                           
 18435                           ;incstack = 0
 18436                           ; Regs used in i1_mssp1_clearIRQ: []
 18437  1E77  002E               	movlb	14	; select bank14
 18438  1E78  100F               	bcf	15,0	;volatile
 18439  1E79  0008               	return
 18440  1E7A                     __end_ofi1_mssp1_clearIRQ:	
 18441                           
 18442                           	psect	text101
 18443  1527                     __ptext101:	
 18444 ;; *************** function i1_do_I2C_RX *****************
 18445 ;; Defined at:
 18446 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 18447 ;; Parameters:    Size  Location     Type
 18448 ;;		None
 18449 ;; Auto vars:     Size  Location     Type
 18450 ;;		None
 18451 ;; Return value:  Size  Location     Type
 18452 ;;                  1    wreg      enum E15307
 18453 ;; Registers used:
 18454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18455 ;; Tracked objects:
 18456 ;;		On entry : 0/0
 18457 ;;		On exit  : 0/0
 18458 ;;		Unchanged: 0/0
 18459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18464 ;;Total ram usage:        1 bytes
 18465 ;; Hardware stack levels used:    1
 18466 ;; Hardware stack levels required when called:    3
 18467 ;; This function calls:
 18468 ;;		Absolute function
 18469 ;;		i1_do_I2C_DO_NACK_RESTART
 18470 ;;		i1_do_I2C_DO_NACK_STOP
 18471 ;;		i1_i2c1_driver_getRXData
 18472 ;;		i1_i2c1_driver_sendACK
 18473 ;;		i1_i2c_restartWrite
 18474 ;;		i1_rd1RegCompleteHandler
 18475 ;;		i1_rd2RegCompleteHandler
 18476 ;;		i1_rdBlkRegCompleteHandler
 18477 ;;		i1_returnReset
 18478 ;;		i1_returnStop
 18479 ;;		i1_wr1RegCompleteHandler
 18480 ;;		i1_wr2RegCompleteHandler
 18481 ;; This function is called by:
 18482 ;; This function uses a non-reentrant model
 18483 ;;
 18484                           
 18485                           
 18486                           ;psect for function i1_do_I2C_RX
 18487  1527                     i1_do_I2C_RX:	
 18488  1527                     i1l7006:	
 18489                           ;incstack = 0
 18490 ;; hardware stack exceeded
 18491                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18492                           
 18493                           
 18494                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 18495  1527  319E  2671  3195   	fcall	i1_i2c1_driver_getRXData
 18496  152A  00F0               	movwf	??i1_do_I2C_RX
 18497  152B  0021               	movlb	1	; select bank1
 18498  152C  0849               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 18499  152D  0086               	movwf	6
 18500  152E  0187               	clrf	7
 18501  152F  0870               	movf	??i1_do_I2C_RX,w
 18502  1530  0081               	movwf	1
 18503  1531  3001               	movlw	1
 18504  1532  00F0               	movwf	??i1_do_I2C_RX
 18505  1533  0870               	movf	??i1_do_I2C_RX,w
 18506  1534  07C9               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 18507                           
 18508                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 18509  1535  3001               	movlw	1
 18510  1536  02CA               	subwf	(_i2c_status^(0+128)+3),f
 18511  1537  3000               	movlw	0
 18512  1538  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 18513  1539  084A               	movf	(_i2c_status^(0+128)+3),w
 18514  153A  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 18515  153B  1903               	btfsc	3,2
 18516  153C  2D41               	goto	i1l314
 18517                           
 18518                           ;i2c_master.c: 361: {
 18519                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 18520  153D  319E  2692         	fcall	i1_i2c1_driver_sendACK
 18521                           
 18522                           ;i2c_master.c: 363: return I2C_RCEN;
 18523  153F  3005               	movlw	5
 18524                           
 18525                           ;i2c_master.c: 364: }
 18526  1540  0008               	return
 18527  1541                     i1l314:	
 18528                           
 18529                           ;i2c_master.c: 365: else
 18530                           ;i2c_master.c: 366: {
 18531                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 18532  1541  1547               	bsf	_i2c_status^(0+128),2
 18533                           
 18534                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 18535  1542  2D49               	goto	i1l7030
 18536  1543                     i1l7020:	
 18537                           ;i2c_master.c: 369: {
 18538                           ;i2c_master.c: 370: case i2c_restart_write:
 18539                           
 18540                           
 18541                           ;i2c_master.c: 371: case i2c_restart_read:
 18542                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 18543  1543  319E  26B2         	fcall	i1_do_I2C_DO_NACK_RESTART
 18544  1545  0008               	return
 18545  1546                     i1l7024:	
 18546                           ;i2c_master.c: 374: case i2c_continue:
 18547                           
 18548                           ;i2c_master.c: 373: default:
 18549                           
 18550                           
 18551                           ;i2c_master.c: 375: case i2c_stop:
 18552                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 18553  1546  319E  26AE         	fcall	i1_do_I2C_DO_NACK_STOP
 18554                           
 18555                           ;i2c_master.c: 377: }
 18556  1548  0008               	return
 18557  1549                     i1l7030:	
 18558  1549  0021               	movlb	1	; select bank1
 18559  154A  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 18560  154B  00F0               	movwf	??i1_do_I2C_RX
 18561  154C  0870               	movf	??i1_do_I2C_RX,w
 18562  154D  00F9               	movwf	i1returnStop@p
 18563  154E  300B               	movlw	11
 18564  154F  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 18565  1550  0086               	movwf	6
 18566  1551  0187               	clrf	7
 18567  1552  3F41               	moviw [1]fsr1
 18568  1553  008A               	movwf	10
 18569  1554  3F40               	moviw [0]fsr1
 18570  1555  000A               	callw
 18571  1556  3195               	pagesel	$
 18572                           
 18573                           ; Switch size 1, requested type "space"
 18574                           ; Number of cases is 4, Range of values is 1 to 4
 18575                           ; switch strategies available:
 18576                           ; Name         Instructions Cycles
 18577                           ; simple_byte           13     7 (average)
 18578                           ; direct_byte           17     9 (fixed)
 18579                           ; jumptable            263     9 (fixed)
 18580                           ;	Chosen strategy is simple_byte
 18581  1557  3A01               	xorlw	1	; case 1
 18582  1558  1903               	skipnz
 18583  1559  2D46               	goto	i1l7024
 18584  155A  3A03               	xorlw	3	; case 2
 18585  155B  1903               	skipnz
 18586  155C  2D43               	goto	i1l7020
 18587  155D  3A01               	xorlw	1	; case 3
 18588  155E  1903               	skipnz
 18589  155F  2D43               	goto	i1l7020
 18590  1560  3A07               	xorlw	7	; case 4
 18591  1561  1903               	skipnz
 18592  1562  2D46               	goto	i1l7024
 18593  1563  2D46               	goto	i1l7024
 18594  1564  0008               	return
 18595  1565                     __end_ofi1_do_I2C_RX:	
 18596                           
 18597                           	psect	text102
 18598  1678                     __ptext102:	
 18599 ;; *************** function i1_do_I2C_TX *****************
 18600 ;; Defined at:
 18601 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 18602 ;; Parameters:    Size  Location     Type
 18603 ;;		None
 18604 ;; Auto vars:     Size  Location     Type
 18605 ;;		None
 18606 ;; Return value:  Size  Location     Type
 18607 ;;                  1    wreg      enum E15307
 18608 ;; Registers used:
 18609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18610 ;; Tracked objects:
 18611 ;;		On entry : 0/0
 18612 ;;		On exit  : 0/0
 18613 ;;		Unchanged: 0/0
 18614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18619 ;;Total ram usage:        3 bytes
 18620 ;; Hardware stack levels used:    1
 18621 ;; Hardware stack levels required when called:    3
 18622 ;; This function calls:
 18623 ;;		Absolute function
 18624 ;;		i1_do_I2C_SEND_RESTART_READ
 18625 ;;		i1_do_I2C_SEND_RESTART_WRITE
 18626 ;;		i1_do_I2C_SEND_STOP
 18627 ;;		i1_i2c1_driver_TXData
 18628 ;;		i1_i2c1_driver_isNACK
 18629 ;;		i1_i2c_restartWrite
 18630 ;;		i1_rd1RegCompleteHandler
 18631 ;;		i1_rd2RegCompleteHandler
 18632 ;;		i1_rdBlkRegCompleteHandler
 18633 ;;		i1_returnReset
 18634 ;;		i1_returnStop
 18635 ;;		i1_wr1RegCompleteHandler
 18636 ;;		i1_wr2RegCompleteHandler
 18637 ;; This function is called by:
 18638 ;; This function uses a non-reentrant model
 18639 ;;
 18640                           
 18641                           
 18642                           ;psect for function i1_do_I2C_TX
 18643  1678                     i1_do_I2C_TX:	
 18644  1678                     i1l6976:	
 18645                           ;incstack = 0
 18646 ;; hardware stack exceeded
 18647                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18648                           
 18649                           
 18650                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 18651  1678  319F  2711  3196   	fcall	i1_i2c1_driver_isNACK
 18652  167B  1803               	btfsc	3,0
 18653  167C  2E87               	goto	i1l6994
 18654  167D  2EA3               	goto	i1l298
 18655  167E                     i1l6980:	
 18656                           ;i2c_master.c: 338: {
 18657                           ;i2c_master.c: 339: case i2c_restart_read:
 18658                           
 18659                           ;i2c_master.c: 336: {
 18660                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 18661                           
 18662                           
 18663                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 18664  167E  319E  269A         	fcall	i1_do_I2C_SEND_RESTART_READ
 18665  1680  0008               	return
 18666  1681                     i1l6984:	
 18667                           ;i2c_master.c: 341: case i2c_restart_write:
 18668                           
 18669                           
 18670                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 18671  1681  319E  269E         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 18672  1683  0008               	return
 18673  1684                     i1l6988:	
 18674                           ;i2c_master.c: 344: case i2c_continue:
 18675                           
 18676                           ;i2c_master.c: 343: default:
 18677                           
 18678                           
 18679                           ;i2c_master.c: 345: case i2c_stop:
 18680                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 18681  1684  319E  26A6         	fcall	i1_do_I2C_SEND_STOP
 18682                           
 18683                           ;i2c_master.c: 347: }
 18684  1686  0008               	return
 18685  1687                     i1l6994:	
 18686  1687  0021               	movlb	1	; select bank1
 18687  1688  0861               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 18688  1689  00F1               	movwf	??i1_do_I2C_TX
 18689  168A  0871               	movf	??i1_do_I2C_TX,w
 18690  168B  00F9               	movwf	i1returnStop@p
 18691  168C  3011               	movlw	17
 18692  168D  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 18693  168E  0086               	movwf	6
 18694  168F  0187               	clrf	7
 18695  1690  3F41               	moviw [1]fsr1
 18696  1691  008A               	movwf	10
 18697  1692  3F40               	moviw [0]fsr1
 18698  1693  000A               	callw
 18699  1694  3196               	pagesel	$
 18700                           
 18701                           ; Switch size 1, requested type "space"
 18702                           ; Number of cases is 4, Range of values is 1 to 4
 18703                           ; switch strategies available:
 18704                           ; Name         Instructions Cycles
 18705                           ; simple_byte           13     7 (average)
 18706                           ; direct_byte           17     9 (fixed)
 18707                           ; jumptable            263     9 (fixed)
 18708                           ;	Chosen strategy is simple_byte
 18709  1695  3A01               	xorlw	1	; case 1
 18710  1696  1903               	skipnz
 18711  1697  2E84               	goto	i1l6988
 18712  1698  3A03               	xorlw	3	; case 2
 18713  1699  1903               	skipnz
 18714  169A  2E7E               	goto	i1l6980
 18715  169B  3A01               	xorlw	1	; case 3
 18716  169C  1903               	skipnz
 18717  169D  2E81               	goto	i1l6984
 18718  169E  3A07               	xorlw	7	; case 4
 18719  169F  1903               	skipnz
 18720  16A0  2E84               	goto	i1l6988
 18721  16A1  2E84               	goto	i1l6988
 18722                           
 18723                           ;i2c_master.c: 348: }
 18724  16A2  0008               	return
 18725  16A3                     i1l298:	
 18726                           
 18727                           ;i2c_master.c: 349: else
 18728                           ;i2c_master.c: 350: {
 18729                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 18730  16A3  0021               	movlb	1	; select bank1
 18731  16A4  11C7               	bcf	_i2c_status^(0+128),3
 18732                           
 18733                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 18734  16A5  3002               	movlw	2
 18735  16A6  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 18736  16A7  0086               	movwf	6
 18737  16A8  0187               	clrf	7
 18738  16A9  3F40               	moviw [0]fsr1
 18739  16AA  0084               	movwf	4
 18740  16AB  0185               	clrf	5
 18741  16AC  0A81               	incf	1,f
 18742  16AD  0800               	movf	0,w
 18743  16AE  319E  26C2  3196   	fcall	i1_i2c1_driver_TXData
 18744                           
 18745                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 18746  16B1  3001               	movlw	1
 18747  16B2  0021               	movlb	1	; select bank1
 18748  16B3  02CA               	subwf	(_i2c_status^(0+128)+3),f
 18749  16B4  3000               	movlw	0
 18750  16B5  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 18751  16B6  084A               	movf	(_i2c_status^(0+128)+3),w
 18752  16B7  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 18753  16B8  1D03               	btfss	3,2
 18754  16B9  2EBC               	goto	i1l7002
 18755  16BA  3006               	movlw	6
 18756  16BB  2EBD               	goto	L6
 18757  16BC                     i1l7002:	
 18758  16BC  3003               	movlw	3
 18759  16BD                     L6:	
 18760  16BD  00F2               	movwf	i1_do_I2C_TX$723
 18761  16BE  3000               	movlw	0
 18762  16BF  00F3               	movwf	i1_do_I2C_TX$723+1
 18763  16C0  0872               	movf	i1_do_I2C_TX$723,w
 18764  16C1  0008               	return
 18765  16C2                     __end_ofi1_do_I2C_TX:	
 18766                           
 18767                           	psect	text103
 18768  122C                     __ptext103:	
 18769 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 18770 ;; Defined at:
 18771 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 18772 ;; Parameters:    Size  Location     Type
 18773 ;;		None
 18774 ;; Auto vars:     Size  Location     Type
 18775 ;;		None
 18776 ;; Return value:  Size  Location     Type
 18777 ;;                  1    wreg      enum E15307
 18778 ;; Registers used:
 18779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18780 ;; Tracked objects:
 18781 ;;		On entry : 0/0
 18782 ;;		On exit  : 0/0
 18783 ;;		Unchanged: 0/0
 18784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18789 ;;Total ram usage:        1 bytes
 18790 ;; Hardware stack levels used:    1
 18791 ;; Hardware stack levels required when called:    3
 18792 ;; This function calls:
 18793 ;;		Absolute function
 18794 ;;		i1_do_I2C_SEND_RESTART
 18795 ;;		i1_do_I2C_SEND_STOP
 18796 ;;		i1_i2c_restartWrite
 18797 ;;		i1_rd1RegCompleteHandler
 18798 ;;		i1_rd2RegCompleteHandler
 18799 ;;		i1_rdBlkRegCompleteHandler
 18800 ;;		i1_returnReset
 18801 ;;		i1_returnStop
 18802 ;;		i1_wr1RegCompleteHandler
 18803 ;;		i1_wr2RegCompleteHandler
 18804 ;; This function is called by:
 18805 ;; This function uses a non-reentrant model
 18806 ;;
 18807                           
 18808                           
 18809                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 18810  122C                     i1_do_I2C_DO_ADDRESS_NACK:	
 18811  122C                     i1l6960:	
 18812                           ;incstack = 0
 18813 ;; hardware stack exceeded
 18814                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18815                           
 18816                           
 18817                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 18818  122C  0021               	movlb	1	; select bank1
 18819  122D  11C7               	bcf	_i2c_status^(0+128),3
 18820                           
 18821                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 18822  122E  3002               	movlw	2
 18823  122F  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 18824  1230  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 18825  1231  00D1               	movwf	(_i2c_status^(0+128)+10)
 18826                           
 18827                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 18828  1232  2A39               	goto	i1l6974
 18829  1233                     i1l6964:	
 18830                           ;i2c_master.c: 324: {
 18831                           ;i2c_master.c: 325: case i2c_restart_read:
 18832                           
 18833                           
 18834                           ;i2c_master.c: 326: case i2c_restart_write:
 18835                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 18836  1233  319E  26A2         	fcall	i1_do_I2C_SEND_RESTART
 18837  1235  0008               	return
 18838  1236                     i1l6968:	
 18839                           ;i2c_master.c: 328: default:
 18840                           
 18841                           
 18842                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 18843  1236  319E  26A6         	fcall	i1_do_I2C_SEND_STOP
 18844                           
 18845                           ;i2c_master.c: 330: }
 18846  1238  0008               	return
 18847  1239                     i1l6974:	
 18848  1239  0021               	movlb	1	; select bank1
 18849  123A  0860               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 18850  123B  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 18851  123C  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 18852  123D  00F9               	movwf	i1returnStop@p
 18853  123E  300F               	movlw	15
 18854  123F  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 18855  1240  0086               	movwf	6
 18856  1241  0187               	clrf	7
 18857  1242  3F41               	moviw [1]fsr1
 18858  1243  008A               	movwf	10
 18859  1244  3F40               	moviw [0]fsr1
 18860  1245  000A               	callw
 18861  1246  3192               	pagesel	$
 18862                           
 18863                           ; Switch size 1, requested type "space"
 18864                           ; Number of cases is 2, Range of values is 2 to 3
 18865                           ; switch strategies available:
 18866                           ; Name         Instructions Cycles
 18867                           ; simple_byte            7     4 (average)
 18868                           ; direct_byte           13     9 (fixed)
 18869                           ; jumptable            263     9 (fixed)
 18870                           ;	Chosen strategy is simple_byte
 18871  1247  3A02               	xorlw	2	; case 2
 18872  1248  1903               	skipnz
 18873  1249  2A33               	goto	i1l6964
 18874  124A  3A01               	xorlw	1	; case 3
 18875  124B  1903               	skipnz
 18876  124C  2A33               	goto	i1l6964
 18877  124D  2A36               	goto	i1l6968
 18878  124E  0008               	return
 18879  124F                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 18880                           
 18881                           	psect	text104
 18882  1EB2                     __ptext104:	
 18883 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 18884 ;; Defined at:
 18885 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 18886 ;; Parameters:    Size  Location     Type
 18887 ;;		None
 18888 ;; Auto vars:     Size  Location     Type
 18889 ;;		None
 18890 ;; Return value:  Size  Location     Type
 18891 ;;                  1    wreg      enum E15307
 18892 ;; Registers used:
 18893 ;;		wreg, status,2, status,0, pclath, cstack
 18894 ;; Tracked objects:
 18895 ;;		On entry : 0/0
 18896 ;;		On exit  : 0/0
 18897 ;;		Unchanged: 0/0
 18898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18903 ;;Total ram usage:        0 bytes
 18904 ;; Hardware stack levels used:    1
 18905 ;; Hardware stack levels required when called:    1
 18906 ;; This function calls:
 18907 ;;		i1_i2c1_driver_sendNACK
 18908 ;; This function is called by:
 18909 ;;		i1_do_I2C_RX
 18910 ;; This function uses a non-reentrant model
 18911 ;;
 18912                           
 18913                           
 18914                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 18915  1EB2                     i1_do_I2C_DO_NACK_RESTART:	
 18916  1EB2                     i1l4198:	
 18917                           ;incstack = 0
 18918 ;; hardware stack exceeded
 18919                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18920                           
 18921                           
 18922                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 18923  1EB2  319E  2696         	fcall	i1_i2c1_driver_sendNACK
 18924                           
 18925                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 18926  1EB4  3009               	movlw	9
 18927  1EB5  0008               	return
 18928  1EB6                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 18929                           
 18930                           	psect	text105
 18931  1EAE                     __ptext105:	
 18932 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 18933 ;; Defined at:
 18934 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 18935 ;; Parameters:    Size  Location     Type
 18936 ;;		None
 18937 ;; Auto vars:     Size  Location     Type
 18938 ;;		None
 18939 ;; Return value:  Size  Location     Type
 18940 ;;                  1    wreg      enum E15307
 18941 ;; Registers used:
 18942 ;;		wreg, status,2, status,0, pclath, cstack
 18943 ;; Tracked objects:
 18944 ;;		On entry : 0/0
 18945 ;;		On exit  : 0/0
 18946 ;;		Unchanged: 0/0
 18947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18952 ;;Total ram usage:        0 bytes
 18953 ;; Hardware stack levels used:    1
 18954 ;; Hardware stack levels required when called:    1
 18955 ;; This function calls:
 18956 ;;		i1_i2c1_driver_sendNACK
 18957 ;; This function is called by:
 18958 ;;		i1_do_I2C_RX
 18959 ;; This function uses a non-reentrant model
 18960 ;;
 18961                           
 18962                           
 18963                           ;psect for function i1_do_I2C_DO_NACK_STOP
 18964  1EAE                     i1_do_I2C_DO_NACK_STOP:	
 18965  1EAE                     i1l4192:	
 18966                           ;incstack = 0
 18967 ;; hardware stack exceeded
 18968                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 18969                           
 18970                           
 18971                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 18972  1EAE  319E  2696         	fcall	i1_i2c1_driver_sendNACK
 18973                           
 18974                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 18975  1EB0  300A               	movlw	10
 18976  1EB1  0008               	return
 18977  1EB2                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 18978                           
 18979                           	psect	text106
 18980  1EAA                     __ptext106:	
 18981 ;; *************** function i1_do_I2C_DO_ACK *****************
 18982 ;; Defined at:
 18983 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 18984 ;; Parameters:    Size  Location     Type
 18985 ;;		None
 18986 ;; Auto vars:     Size  Location     Type
 18987 ;;		None
 18988 ;; Return value:  Size  Location     Type
 18989 ;;                  1    wreg      enum E15307
 18990 ;; Registers used:
 18991 ;;		wreg, status,2, status,0, pclath, cstack
 18992 ;; Tracked objects:
 18993 ;;		On entry : 0/0
 18994 ;;		On exit  : 0/0
 18995 ;;		Unchanged: 0/0
 18996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19001 ;;Total ram usage:        0 bytes
 19002 ;; Hardware stack levels used:    1
 19003 ;; Hardware stack levels required when called:    1
 19004 ;; This function calls:
 19005 ;;		i1_i2c1_driver_sendACK
 19006 ;; This function is called by:
 19007 ;; This function uses a non-reentrant model
 19008 ;;
 19009                           
 19010                           
 19011                           ;psect for function i1_do_I2C_DO_ACK
 19012  1EAA                     i1_do_I2C_DO_ACK:	
 19013  1EAA                     i1l4624:	
 19014                           ;incstack = 0
 19015                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 19016                           
 19017                           
 19018                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 19019  1EAA  319E  2692         	fcall	i1_i2c1_driver_sendACK
 19020                           
 19021                           ;i2c_master.c: 302: return I2C_RCEN;
 19022  1EAC  3005               	movlw	5
 19023  1EAD  0008               	return
 19024  1EAE                     __end_ofi1_do_I2C_DO_ACK:	
 19025                           
 19026                           	psect	text107
 19027  1ECC                     __ptext107:	
 19028 ;; *************** function i1_do_I2C_RCEN *****************
 19029 ;; Defined at:
 19030 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 19031 ;; Parameters:    Size  Location     Type
 19032 ;;		None
 19033 ;; Auto vars:     Size  Location     Type
 19034 ;;		None
 19035 ;; Return value:  Size  Location     Type
 19036 ;;                  1    wreg      enum E15307
 19037 ;; Registers used:
 19038 ;;		wreg, status,2, status,0, pclath, cstack
 19039 ;; Tracked objects:
 19040 ;;		On entry : 0/0
 19041 ;;		On exit  : 0/0
 19042 ;;		Unchanged: 0/0
 19043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19048 ;;Total ram usage:        0 bytes
 19049 ;; Hardware stack levels used:    1
 19050 ;; Hardware stack levels required when called:    1
 19051 ;; This function calls:
 19052 ;;		i1_i2c1_driver_startRX
 19053 ;; This function is called by:
 19054 ;; This function uses a non-reentrant model
 19055 ;;
 19056                           
 19057                           
 19058                           ;psect for function i1_do_I2C_RCEN
 19059  1ECC                     i1_do_I2C_RCEN:	
 19060  1ECC                     i1l4616:	
 19061                           ;incstack = 0
 19062                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 19063                           
 19064                           
 19065                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 19066  1ECC  0021               	movlb	1	; select bank1
 19067  1ECD  11C7               	bcf	_i2c_status^(0+128),3
 19068                           
 19069                           ;i2c_master.c: 295: i2c1_driver_startRX();
 19070  1ECE  319E  266E         	fcall	i1_i2c1_driver_startRX
 19071                           
 19072                           ;i2c_master.c: 296: return I2C_RX;
 19073  1ED0  3004               	movlw	4
 19074  1ED1  0008               	return
 19075  1ED2                     __end_ofi1_do_I2C_RCEN:	
 19076                           
 19077                           	psect	text108
 19078  1F03                     __ptext108:	
 19079 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 19080 ;; Defined at:
 19081 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 19082 ;; Parameters:    Size  Location     Type
 19083 ;;		None
 19084 ;; Auto vars:     Size  Location     Type
 19085 ;;		None
 19086 ;; Return value:  Size  Location     Type
 19087 ;;                  1    wreg      enum E15307
 19088 ;; Registers used:
 19089 ;;		wreg, status,2, status,0, pclath, cstack
 19090 ;; Tracked objects:
 19091 ;;		On entry : 0/0
 19092 ;;		On exit  : 0/0
 19093 ;;		Unchanged: 0/0
 19094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19099 ;;Total ram usage:        0 bytes
 19100 ;; Hardware stack levels used:    1
 19101 ;; Hardware stack levels required when called:    1
 19102 ;; This function calls:
 19103 ;;		i1_i2c1_driver_TXData
 19104 ;; This function is called by:
 19105 ;; This function uses a non-reentrant model
 19106 ;;
 19107                           
 19108                           
 19109                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 19110  1F03                     i1_do_I2C_SEND_ADR_WRITE:	
 19111  1F03                     i1l4608:	
 19112                           ;incstack = 0
 19113                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 19114                           
 19115                           
 19116                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 19117  1F03  0021               	movlb	1	; select bank1
 19118  1F04  15C7               	bsf	_i2c_status^(0+128),3
 19119                           
 19120                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 19121  1F05  3548               	lslf	(_i2c_status^(0+128)+1),w
 19122  1F06  319E  26C2         	fcall	i1_i2c1_driver_TXData
 19123                           
 19124                           ;i2c_master.c: 289: return I2C_TX;
 19125  1F08  3003               	movlw	3
 19126  1F09  0008               	return
 19127  1F0A                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 19128                           
 19129                           	psect	text109
 19130  1F19                     __ptext109:	
 19131 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 19132 ;; Defined at:
 19133 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 19134 ;; Parameters:    Size  Location     Type
 19135 ;;		None
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;		None
 19138 ;; Return value:  Size  Location     Type
 19139 ;;                  1    wreg      enum E15307
 19140 ;; Registers used:
 19141 ;;		wreg, status,2, status,0, pclath, cstack
 19142 ;; Tracked objects:
 19143 ;;		On entry : 0/0
 19144 ;;		On exit  : 0/0
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;Total ram usage:        0 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; Hardware stack levels required when called:    1
 19154 ;; This function calls:
 19155 ;;		i1_i2c1_driver_TXData
 19156 ;; This function is called by:
 19157 ;; This function uses a non-reentrant model
 19158 ;;
 19159                           
 19160                           
 19161                           ;psect for function i1_do_I2C_SEND_ADR_READ
 19162  1F19                     i1_do_I2C_SEND_ADR_READ:	
 19163  1F19                     i1l4600:	
 19164                           ;incstack = 0
 19165                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 19166                           
 19167                           
 19168                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 19169  1F19  0021               	movlb	1	; select bank1
 19170  1F1A  15C7               	bsf	_i2c_status^(0+128),3
 19171                           
 19172                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 19173  1F1B  1403               	setc
 19174  1F1C  0D48               	rlf	(_i2c_status^(0+128)+1),w
 19175  1F1D  319E  26C2         	fcall	i1_i2c1_driver_TXData
 19176                           
 19177                           ;i2c_master.c: 282: return I2C_RCEN;
 19178  1F1F  3005               	movlw	5
 19179  1F20  0008               	return
 19180  1F21                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 19181                           
 19182                           	psect	text110
 19183  1EA6                     __ptext110:	
 19184 ;; *************** function i1_do_I2C_SEND_STOP *****************
 19185 ;; Defined at:
 19186 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 19187 ;; Parameters:    Size  Location     Type
 19188 ;;		None
 19189 ;; Auto vars:     Size  Location     Type
 19190 ;;		None
 19191 ;; Return value:  Size  Location     Type
 19192 ;;                  1    wreg      enum E15307
 19193 ;; Registers used:
 19194 ;;		wreg, status,2, status,0, pclath, cstack
 19195 ;; Tracked objects:
 19196 ;;		On entry : 0/0
 19197 ;;		On exit  : 0/0
 19198 ;;		Unchanged: 0/0
 19199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19204 ;;Total ram usage:        0 bytes
 19205 ;; Hardware stack levels used:    1
 19206 ;; Hardware stack levels required when called:    1
 19207 ;; This function calls:
 19208 ;;		i1_i2c1_driver_stop
 19209 ;; This function is called by:
 19210 ;;		i1_do_I2C_DO_ADDRESS_NACK
 19211 ;;		i1_do_I2C_TX
 19212 ;;		i1_do_I2C_TX_EMPTY
 19213 ;; This function uses a non-reentrant model
 19214 ;;
 19215                           
 19216                           
 19217                           ;psect for function i1_do_I2C_SEND_STOP
 19218  1EA6                     i1_do_I2C_SEND_STOP:	
 19219  1EA6                     i1l4186:	
 19220                           ;incstack = 0
 19221 ;; hardware stack exceeded
 19222                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 19223                           
 19224                           
 19225                           ;i2c_master.c: 274: i2c1_driver_stop();
 19226  1EA6  319E  266B         	fcall	i1_i2c1_driver_stop
 19227                           
 19228                           ;i2c_master.c: 275: return I2C_IDLE;
 19229  1EA8  3000               	movlw	0
 19230  1EA9  0008               	return
 19231  1EAA                     __end_ofi1_do_I2C_SEND_STOP:	
 19232                           
 19233                           	psect	text111
 19234  1EA2                     __ptext111:	
 19235 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 19236 ;; Defined at:
 19237 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 19238 ;; Parameters:    Size  Location     Type
 19239 ;;		None
 19240 ;; Auto vars:     Size  Location     Type
 19241 ;;		None
 19242 ;; Return value:  Size  Location     Type
 19243 ;;                  1    wreg      enum E15307
 19244 ;; Registers used:
 19245 ;;		wreg, status,2, status,0, pclath, cstack
 19246 ;; Tracked objects:
 19247 ;;		On entry : 0/0
 19248 ;;		On exit  : 0/0
 19249 ;;		Unchanged: 0/0
 19250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19255 ;;Total ram usage:        0 bytes
 19256 ;; Hardware stack levels used:    1
 19257 ;; Hardware stack levels required when called:    1
 19258 ;; This function calls:
 19259 ;;		i1_i2c1_driver_restart
 19260 ;; This function is called by:
 19261 ;;		i1_do_I2C_DO_ADDRESS_NACK
 19262 ;;		i1_do_I2C_TX_EMPTY
 19263 ;; This function uses a non-reentrant model
 19264 ;;
 19265                           
 19266                           
 19267                           ;psect for function i1_do_I2C_SEND_RESTART
 19268  1EA2                     i1_do_I2C_SEND_RESTART:	
 19269  1EA2                     i1l4180:	
 19270                           ;incstack = 0
 19271 ;; hardware stack exceeded
 19272                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 19273                           
 19274                           
 19275                           ;i2c_master.c: 268: i2c1_driver_restart();
 19276  1EA2  319E  2668         	fcall	i1_i2c1_driver_restart
 19277                           
 19278                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 19279  1EA4  3001               	movlw	1
 19280  1EA5  0008               	return
 19281  1EA6                     __end_ofi1_do_I2C_SEND_RESTART:	
 19282                           
 19283                           	psect	text112
 19284  1E9E                     __ptext112:	
 19285 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 19286 ;; Defined at:
 19287 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 19288 ;; Parameters:    Size  Location     Type
 19289 ;;		None
 19290 ;; Auto vars:     Size  Location     Type
 19291 ;;		None
 19292 ;; Return value:  Size  Location     Type
 19293 ;;                  1    wreg      enum E15307
 19294 ;; Registers used:
 19295 ;;		wreg, status,2, status,0, pclath, cstack
 19296 ;; Tracked objects:
 19297 ;;		On entry : 0/0
 19298 ;;		On exit  : 0/0
 19299 ;;		Unchanged: 0/0
 19300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19305 ;;Total ram usage:        0 bytes
 19306 ;; Hardware stack levels used:    1
 19307 ;; Hardware stack levels required when called:    1
 19308 ;; This function calls:
 19309 ;;		i1_i2c1_driver_restart
 19310 ;; This function is called by:
 19311 ;;		i1_do_I2C_TX
 19312 ;; This function uses a non-reentrant model
 19313 ;;
 19314                           
 19315                           
 19316                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 19317  1E9E                     i1_do_I2C_SEND_RESTART_WRITE:	
 19318  1E9E                     i1l4174:	
 19319                           ;incstack = 0
 19320 ;; hardware stack exceeded
 19321                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 19322                           
 19323                           
 19324                           ;i2c_master.c: 262: i2c1_driver_restart();
 19325  1E9E  319E  2668         	fcall	i1_i2c1_driver_restart
 19326                           
 19327                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 19328  1EA0  3002               	movlw	2
 19329  1EA1  0008               	return
 19330  1EA2                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 19331                           
 19332                           	psect	text113
 19333  1E9A                     __ptext113:	
 19334 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 19335 ;; Defined at:
 19336 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 19337 ;; Parameters:    Size  Location     Type
 19338 ;;		None
 19339 ;; Auto vars:     Size  Location     Type
 19340 ;;		None
 19341 ;; Return value:  Size  Location     Type
 19342 ;;                  1    wreg      enum E15307
 19343 ;; Registers used:
 19344 ;;		wreg, status,2, status,0, pclath, cstack
 19345 ;; Tracked objects:
 19346 ;;		On entry : 0/0
 19347 ;;		On exit  : 0/0
 19348 ;;		Unchanged: 0/0
 19349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19354 ;;Total ram usage:        0 bytes
 19355 ;; Hardware stack levels used:    1
 19356 ;; Hardware stack levels required when called:    1
 19357 ;; This function calls:
 19358 ;;		i1_i2c1_driver_restart
 19359 ;; This function is called by:
 19360 ;;		i1_do_I2C_TX
 19361 ;; This function uses a non-reentrant model
 19362 ;;
 19363                           
 19364                           
 19365                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 19366  1E9A                     i1_do_I2C_SEND_RESTART_READ:	
 19367  1E9A                     i1l4168:	
 19368                           ;incstack = 0
 19369 ;; hardware stack exceeded
 19370                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 19371                           
 19372                           
 19373                           ;i2c_master.c: 256: i2c1_driver_restart();
 19374  1E9A  319E  2668         	fcall	i1_i2c1_driver_restart
 19375                           
 19376                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 19377  1E9C  3001               	movlw	1
 19378  1E9D  0008               	return
 19379  1E9E                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 19380                           
 19381                           	psect	text114
 19382  1EC7                     __ptext114:	
 19383 ;; *************** function i1_do_I2C_IDLE *****************
 19384 ;; Defined at:
 19385 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 19386 ;; Parameters:    Size  Location     Type
 19387 ;;		None
 19388 ;; Auto vars:     Size  Location     Type
 19389 ;;		None
 19390 ;; Return value:  Size  Location     Type
 19391 ;;                  1    wreg      enum E15307
 19392 ;; Registers used:
 19393 ;;		wreg, status,2
 19394 ;; Tracked objects:
 19395 ;;		On entry : 0/0
 19396 ;;		On exit  : 0/0
 19397 ;;		Unchanged: 0/0
 19398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19403 ;;Total ram usage:        0 bytes
 19404 ;; Hardware stack levels used:    1
 19405 ;; This function calls:
 19406 ;;		Nothing
 19407 ;; This function is called by:
 19408 ;; This function uses a non-reentrant model
 19409 ;;
 19410                           
 19411                           
 19412                           ;psect for function i1_do_I2C_IDLE
 19413  1EC7                     i1_do_I2C_IDLE:	
 19414  1EC7                     i1l4592:	
 19415                           ;incstack = 0
 19416                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 19417                           
 19418                           
 19419                           ;i2c_master.c: 249: i2c_status.busy = 0;
 19420  1EC7  0021               	movlb	1	; select bank1
 19421  1EC8  1047               	bcf	_i2c_status^(0+128),0
 19422                           
 19423                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 19424  1EC9  01D1               	clrf	(_i2c_status^(0+128)+10)
 19425                           
 19426                           ;i2c_master.c: 251: return I2C_RESET;
 19427  1ECA  300E               	movlw	14
 19428  1ECB  0008               	return
 19429  1ECC                     __end_ofi1_do_I2C_IDLE:	
 19430                           
 19431                           	psect	text115
 19432  1EFC                     __ptext115:	
 19433 ;; *************** function i1_do_I2C_RESET *****************
 19434 ;; Defined at:
 19435 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 19436 ;; Parameters:    Size  Location     Type
 19437 ;;		None
 19438 ;; Auto vars:     Size  Location     Type
 19439 ;;		None
 19440 ;; Return value:  Size  Location     Type
 19441 ;;                  1    wreg      enum E15307
 19442 ;; Registers used:
 19443 ;;		wreg, status,2, status,0, pclath, cstack
 19444 ;; Tracked objects:
 19445 ;;		On entry : 0/0
 19446 ;;		On exit  : 0/0
 19447 ;;		Unchanged: 0/0
 19448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19453 ;;Total ram usage:        0 bytes
 19454 ;; Hardware stack levels used:    1
 19455 ;; Hardware stack levels required when called:    1
 19456 ;; This function calls:
 19457 ;;		i1_i2c1_driver_resetBus
 19458 ;; This function is called by:
 19459 ;; This function uses a non-reentrant model
 19460 ;;
 19461                           
 19462                           
 19463                           ;psect for function i1_do_I2C_RESET
 19464  1EFC                     i1_do_I2C_RESET:	
 19465  1EFC                     i1l4582:	
 19466                           ;incstack = 0
 19467                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 19468                           
 19469                           
 19470                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 19471  1EFC  319E  265D         	fcall	i1_i2c1_driver_resetBus
 19472                           
 19473                           ;i2c_master.c: 242: i2c_status.busy = 0;
 19474  1EFE  0021               	movlb	1	; select bank1
 19475  1EFF  1047               	bcf	_i2c_status^(0+128),0
 19476                           
 19477                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 19478  1F00  01D1               	clrf	(_i2c_status^(0+128)+10)
 19479                           
 19480                           ;i2c_master.c: 244: return I2C_RESET;
 19481  1F01  300E               	movlw	14
 19482  1F02  0008               	return
 19483  1F03                     __end_ofi1_do_I2C_RESET:	
 19484                           
 19485                           	psect	text116
 19486  12E2                     __ptext116:	
 19487 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 19488 ;; Defined at:
 19489 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 19490 ;; Parameters:    Size  Location     Type
 19491 ;;		None
 19492 ;; Auto vars:     Size  Location     Type
 19493 ;;		None
 19494 ;; Return value:  Size  Location     Type
 19495 ;;                  1    wreg      enum E15307
 19496 ;; Registers used:
 19497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19498 ;; Tracked objects:
 19499 ;;		On entry : 0/0
 19500 ;;		On exit  : 0/0
 19501 ;;		Unchanged: 0/0
 19502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19507 ;;Total ram usage:        1 bytes
 19508 ;; Hardware stack levels used:    1
 19509 ;; Hardware stack levels required when called:    3
 19510 ;; This function calls:
 19511 ;;		Absolute function
 19512 ;;		i1_do_I2C_SEND_RESTART
 19513 ;;		i1_do_I2C_SEND_STOP
 19514 ;;		i1_i2c_restartWrite
 19515 ;;		i1_mssp1_setIRQ
 19516 ;;		i1_rd1RegCompleteHandler
 19517 ;;		i1_rd2RegCompleteHandler
 19518 ;;		i1_rdBlkRegCompleteHandler
 19519 ;;		i1_returnReset
 19520 ;;		i1_returnStop
 19521 ;;		i1_wr1RegCompleteHandler
 19522 ;;		i1_wr2RegCompleteHandler
 19523 ;; This function is called by:
 19524 ;; This function uses a non-reentrant model
 19525 ;;
 19526                           
 19527                           
 19528                           ;psect for function i1_do_I2C_TX_EMPTY
 19529  12E2                     i1_do_I2C_TX_EMPTY:	
 19530  12E2                     i1l7032:	
 19531                           ;incstack = 0
 19532 ;; hardware stack exceeded
 19533                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19534                           
 19535                           
 19536                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 19537  12E2  0021               	movlb	1	; select bank1
 19538  12E3  1547               	bsf	_i2c_status^(0+128),2
 19539                           
 19540                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 19541  12E4  2AEF               	goto	i1l7050
 19542  12E5                     i1l7034:	
 19543                           ;i2c_master.c: 386: {
 19544                           ;i2c_master.c: 387: case i2c_restart_read:
 19545                           
 19546                           
 19547                           ;i2c_master.c: 388: case i2c_restart_write:
 19548                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 19549  12E5  319E  26A2         	fcall	i1_do_I2C_SEND_RESTART
 19550  12E7  0008               	return
 19551  12E8                     i1l7038:	
 19552                           ;i2c_master.c: 390: case i2c_continue:
 19553                           
 19554                           
 19555                           ;i2c_master.c: 391: mssp1_setIRQ();
 19556  12E8  319E  2674         	fcall	i1_mssp1_setIRQ
 19557                           
 19558                           ;i2c_master.c: 392: return I2C_TX;
 19559  12EA  3003               	movlw	3
 19560  12EB  0008               	return
 19561  12EC                     i1l7044:	
 19562                           ;i2c_master.c: 394: case i2c_stop:
 19563                           
 19564                           ;i2c_master.c: 393: default:
 19565                           
 19566                           
 19567                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 19568  12EC  319E  26A6         	fcall	i1_do_I2C_SEND_STOP
 19569                           
 19570                           ;i2c_master.c: 396: }
 19571  12EE  0008               	return
 19572  12EF                     i1l7050:	
 19573  12EF  0021               	movlb	1	; select bank1
 19574  12F0  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 19575  12F1  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 19576  12F2  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 19577  12F3  00F9               	movwf	i1returnStop@p
 19578  12F4  300B               	movlw	11
 19579  12F5  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 19580  12F6  0086               	movwf	6
 19581  12F7  0187               	clrf	7
 19582  12F8  3F41               	moviw [1]fsr1
 19583  12F9  008A               	movwf	10
 19584  12FA  3F40               	moviw [0]fsr1
 19585  12FB  000A               	callw
 19586  12FC  3192               	pagesel	$
 19587                           
 19588                           ; Switch size 1, requested type "space"
 19589                           ; Number of cases is 4, Range of values is 1 to 4
 19590                           ; switch strategies available:
 19591                           ; Name         Instructions Cycles
 19592                           ; simple_byte           13     7 (average)
 19593                           ; direct_byte           17     9 (fixed)
 19594                           ; jumptable            263     9 (fixed)
 19595                           ;	Chosen strategy is simple_byte
 19596  12FD  3A01               	xorlw	1	; case 1
 19597  12FE  1903               	skipnz
 19598  12FF  2AEC               	goto	i1l7044
 19599  1300  3A03               	xorlw	3	; case 2
 19600  1301  1903               	skipnz
 19601  1302  2AE5               	goto	i1l7034
 19602  1303  3A01               	xorlw	1	; case 3
 19603  1304  1903               	skipnz
 19604  1305  2AE5               	goto	i1l7034
 19605  1306  3A07               	xorlw	7	; case 4
 19606  1307  1903               	skipnz
 19607  1308  2AE8               	goto	i1l7038
 19608  1309  2AEC               	goto	i1l7044
 19609  130A  0008               	return
 19610  130B                     __end_ofi1_do_I2C_TX_EMPTY:	
 19611                           
 19612                           	psect	text117
 19613  1E74                     __ptext117:	
 19614 ;; *************** function i1_mssp1_setIRQ *****************
 19615 ;; Defined at:
 19616 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 19617 ;; Parameters:    Size  Location     Type
 19618 ;;		None
 19619 ;; Auto vars:     Size  Location     Type
 19620 ;;		None
 19621 ;; Return value:  Size  Location     Type
 19622 ;;                  1    wreg      void 
 19623 ;; Registers used:
 19624 ;;		None
 19625 ;; Tracked objects:
 19626 ;;		On entry : 0/0
 19627 ;;		On exit  : 0/0
 19628 ;;		Unchanged: 0/0
 19629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19634 ;;Total ram usage:        0 bytes
 19635 ;; Hardware stack levels used:    1
 19636 ;; This function calls:
 19637 ;;		Nothing
 19638 ;; This function is called by:
 19639 ;;		i1_do_I2C_TX_EMPTY
 19640 ;; This function uses a non-reentrant model
 19641 ;;
 19642                           
 19643                           
 19644                           ;psect for function i1_mssp1_setIRQ
 19645  1E74                     i1_mssp1_setIRQ:	
 19646                           
 19647                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 19648                           
 19649                           ;incstack = 0
 19650                           ; Regs used in i1_mssp1_setIRQ: []
 19651  1E74  002E               	movlb	14	; select bank14
 19652  1E75  140F               	bsf	15,0	;volatile
 19653  1E76  0008               	return
 19654  1E77                     __end_ofi1_mssp1_setIRQ:	
 19655                           
 19656                           	psect	text118
 19657  1F11                     __ptext118:	
 19658 ;; *************** function i1_i2c1_driver_isNACK *****************
 19659 ;; Defined at:
 19660 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 19661 ;; Parameters:    Size  Location     Type
 19662 ;;		None
 19663 ;; Auto vars:     Size  Location     Type
 19664 ;;		None
 19665 ;; Return value:  Size  Location     Type
 19666 ;;		None               void
 19667 ;; Registers used:
 19668 ;;		wreg, status,2, status,0
 19669 ;; Tracked objects:
 19670 ;;		On entry : 0/0
 19671 ;;		On exit  : 0/0
 19672 ;;		Unchanged: 0/0
 19673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19676 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19678 ;;Total ram usage:        1 bytes
 19679 ;; Hardware stack levels used:    1
 19680 ;; This function calls:
 19681 ;;		Nothing
 19682 ;; This function is called by:
 19683 ;;		i1_do_I2C_TX
 19684 ;;		i1_i2c_ISR
 19685 ;; This function uses a non-reentrant model
 19686 ;;
 19687                           
 19688                           
 19689                           ;psect for function i1_i2c1_driver_isNACK
 19690  1F11                     i1_i2c1_driver_isNACK:	
 19691                           
 19692                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT;
 19693                           
 19694                           ;incstack = 0
 19695                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 19696  1F11  0023               	movlb	3	; select bank3
 19697  1F12  0E11               	swapf	17,w	;volatile
 19698  1F13  0C89               	rrf	9,f
 19699  1F14  0C89               	rrf	9,f
 19700  1F15  3901               	andlw	1
 19701  1F16  00F0               	movwf	??i1_i2c1_driver_isNACK
 19702  1F17  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 19703  1F18  0008               	return
 19704  1F19                     __end_ofi1_i2c1_driver_isNACK:	
 19705                           
 19706                           	psect	text119
 19707  1EC2                     __ptext119:	
 19708 ;; *************** function i1_i2c1_driver_TXData *****************
 19709 ;; Defined at:
 19710 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 19711 ;; Parameters:    Size  Location     Type
 19712 ;;  d               1    wreg     unsigned char 
 19713 ;; Auto vars:     Size  Location     Type
 19714 ;;  d               1    0[COMMON] unsigned char 
 19715 ;; Return value:  Size  Location     Type
 19716 ;;                  1    wreg      void 
 19717 ;; Registers used:
 19718 ;;		wreg
 19719 ;; Tracked objects:
 19720 ;;		On entry : 0/0
 19721 ;;		On exit  : 0/0
 19722 ;;		Unchanged: 0/0
 19723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19728 ;;Total ram usage:        1 bytes
 19729 ;; Hardware stack levels used:    1
 19730 ;; This function calls:
 19731 ;;		Nothing
 19732 ;; This function is called by:
 19733 ;;		i1_do_I2C_SEND_ADR_READ
 19734 ;;		i1_do_I2C_SEND_ADR_WRITE
 19735 ;;		i1_do_I2C_TX
 19736 ;; This function uses a non-reentrant model
 19737 ;;
 19738                           
 19739                           
 19740                           ;psect for function i1_i2c1_driver_TXData
 19741  1EC2                     i1_i2c1_driver_TXData:	
 19742                           
 19743                           ;incstack = 0
 19744                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 19745                           ;i1i2c1_driver_TXData@d stored from wreg
 19746  1EC2  00F0               	movwf	i1i2c1_driver_TXData@d
 19747                           
 19748                           ;i2c1_driver.c: 188: SSP1BUF = d;
 19749  1EC3  0870               	movf	i1i2c1_driver_TXData@d,w
 19750  1EC4  0023               	movlb	3	; select bank3
 19751  1EC5  008C               	movwf	12	;volatile
 19752  1EC6  0008               	return
 19753  1EC7                     __end_ofi1_i2c1_driver_TXData:	
 19754                           
 19755                           	psect	text120
 19756  1E71                     __ptext120:	
 19757 ;; *************** function i1_i2c1_driver_getRXData *****************
 19758 ;; Defined at:
 19759 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 19760 ;; Parameters:    Size  Location     Type
 19761 ;;		None
 19762 ;; Auto vars:     Size  Location     Type
 19763 ;;		None
 19764 ;; Return value:  Size  Location     Type
 19765 ;;                  1    wreg      unsigned char 
 19766 ;; Registers used:
 19767 ;;		wreg
 19768 ;; Tracked objects:
 19769 ;;		On entry : 0/0
 19770 ;;		On exit  : 0/0
 19771 ;;		Unchanged: 0/0
 19772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19777 ;;Total ram usage:        0 bytes
 19778 ;; Hardware stack levels used:    1
 19779 ;; This function calls:
 19780 ;;		Nothing
 19781 ;; This function is called by:
 19782 ;;		i1_do_I2C_RX
 19783 ;; This function uses a non-reentrant model
 19784 ;;
 19785                           
 19786                           
 19787                           ;psect for function i1_i2c1_driver_getRXData
 19788  1E71                     i1_i2c1_driver_getRXData:	
 19789                           
 19790                           ;i2c1_driver.c: 173: return SSP1BUF;
 19791                           
 19792                           ;incstack = 0
 19793                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 19794  1E71  0023               	movlb	3	; select bank3
 19795  1E72  080C               	movf	12,w	;volatile
 19796  1E73  0008               	return
 19797  1E74                     __end_ofi1_i2c1_driver_getRXData:	
 19798                           
 19799                           	psect	text121
 19800  1E96                     __ptext121:	
 19801 ;; *************** function i1_i2c1_driver_sendNACK *****************
 19802 ;; Defined at:
 19803 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 19804 ;; Parameters:    Size  Location     Type
 19805 ;;		None
 19806 ;; Auto vars:     Size  Location     Type
 19807 ;;		None
 19808 ;; Return value:  Size  Location     Type
 19809 ;;                  1    wreg      void 
 19810 ;; Registers used:
 19811 ;;		None
 19812 ;; Tracked objects:
 19813 ;;		On entry : 0/0
 19814 ;;		On exit  : 0/0
 19815 ;;		Unchanged: 0/0
 19816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19821 ;;Total ram usage:        0 bytes
 19822 ;; Hardware stack levels used:    1
 19823 ;; This function calls:
 19824 ;;		Nothing
 19825 ;; This function is called by:
 19826 ;;		i1_do_I2C_DO_NACK_STOP
 19827 ;;		i1_do_I2C_DO_NACK_RESTART
 19828 ;; This function uses a non-reentrant model
 19829 ;;
 19830                           
 19831                           
 19832                           ;psect for function i1_i2c1_driver_sendNACK
 19833  1E96                     i1_i2c1_driver_sendNACK:	
 19834                           
 19835                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 19836                           
 19837                           ;incstack = 0
 19838 ;; hardware stack exceeded
 19839                           ; Regs used in i1_i2c1_driver_sendNACK: []
 19840  1E96  0023               	movlb	3	; select bank3
 19841  1E97  1691               	bsf	17,5	;volatile
 19842                           
 19843                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 19844  1E98  1611               	bsf	17,4	;volatile
 19845  1E99  0008               	return
 19846  1E9A                     __end_ofi1_i2c1_driver_sendNACK:	
 19847                           
 19848                           	psect	text122
 19849  1E5D                     __ptext122:	
 19850 ;; *************** function i1_i2c1_driver_resetBus *****************
 19851 ;; Defined at:
 19852 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 19853 ;; Parameters:    Size  Location     Type
 19854 ;;		None
 19855 ;; Auto vars:     Size  Location     Type
 19856 ;;		None
 19857 ;; Return value:  Size  Location     Type
 19858 ;;                  1    wreg      void 
 19859 ;; Registers used:
 19860 ;;		None
 19861 ;; Tracked objects:
 19862 ;;		On entry : 0/0
 19863 ;;		On exit  : 0/0
 19864 ;;		Unchanged: 0/0
 19865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19870 ;;Total ram usage:        0 bytes
 19871 ;; Hardware stack levels used:    1
 19872 ;; This function calls:
 19873 ;;		Nothing
 19874 ;; This function is called by:
 19875 ;;		i1_do_I2C_RESET
 19876 ;; This function uses a non-reentrant model
 19877 ;;
 19878                           
 19879                           
 19880                           ;psect for function i1_i2c1_driver_resetBus
 19881  1E5D                     i1_i2c1_driver_resetBus:	
 19882                           
 19883                           ;incstack = 0
 19884                           ; Regs used in i1_i2c1_driver_resetBus: []
 19885  1E5D  0008               	return
 19886  1E5E                     __end_ofi1_i2c1_driver_resetBus:	
 19887                           
 19888                           	psect	text123
 19889  1E6E                     __ptext123:	
 19890 ;; *************** function i1_i2c1_driver_startRX *****************
 19891 ;; Defined at:
 19892 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 19893 ;; Parameters:    Size  Location     Type
 19894 ;;		None
 19895 ;; Auto vars:     Size  Location     Type
 19896 ;;		None
 19897 ;; Return value:  Size  Location     Type
 19898 ;;                  1    wreg      void 
 19899 ;; Registers used:
 19900 ;;		None
 19901 ;; Tracked objects:
 19902 ;;		On entry : 0/0
 19903 ;;		On exit  : 0/0
 19904 ;;		Unchanged: 0/0
 19905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19910 ;;Total ram usage:        0 bytes
 19911 ;; Hardware stack levels used:    1
 19912 ;; This function calls:
 19913 ;;		Nothing
 19914 ;; This function is called by:
 19915 ;;		i1_do_I2C_RCEN
 19916 ;; This function uses a non-reentrant model
 19917 ;;
 19918                           
 19919                           
 19920                           ;psect for function i1_i2c1_driver_startRX
 19921  1E6E                     i1_i2c1_driver_startRX:	
 19922                           
 19923                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 19924                           
 19925                           ;incstack = 0
 19926                           ; Regs used in i1_i2c1_driver_startRX: []
 19927  1E6E  0023               	movlb	3	; select bank3
 19928  1E6F  1591               	bsf	17,3	;volatile
 19929  1E70  0008               	return
 19930  1E71                     __end_ofi1_i2c1_driver_startRX:	
 19931                           
 19932                           	psect	text124
 19933  1133                     __ptext124:	
 19934 ;; *************** function i1_rdBlkRegCompleteHandler *****************
 19935 ;; Defined at:
 19936 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19937 ;; Parameters:    Size  Location     Type
 19938 ;;  p               1    9[COMMON] PTR void 
 19939 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19940 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19941 ;; Auto vars:     Size  Location     Type
 19942 ;;		None
 19943 ;; Return value:  Size  Location     Type
 19944 ;;                  1    wreg      enum E97
 19945 ;; Registers used:
 19946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19947 ;; Tracked objects:
 19948 ;;		On entry : 0/0
 19949 ;;		On exit  : 0/0
 19950 ;;		Unchanged: 0/0
 19951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19952 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19956 ;;Total ram usage:        1 bytes
 19957 ;; Hardware stack levels used:    1
 19958 ;; Hardware stack levels required when called:    2
 19959 ;; This function calls:
 19960 ;;		i1_i2c_setBuffer
 19961 ;;		i1_i2c_setDataCompleteCallback
 19962 ;; This function is called by:
 19963 ;; This function uses a non-reentrant model
 19964 ;;
 19965                           
 19966                           
 19967                           ;psect for function i1_rdBlkRegCompleteHandler
 19968  1133                     i1_rdBlkRegCompleteHandler:	
 19969  1133                     i1l4248:	
 19970                           ;incstack = 0
 19971 ;; hardware stack exceeded
 19972                           ; Regs used in i1_rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19973                           
 19974                           
 19975                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 19976  1133  0879               	movf	i1rdBlkRegCompleteHandler@p,w
 19977  1134  0086               	movwf	6
 19978  1135  0187               	clrf	7
 19979  1136  3F40               	moviw [0]fsr1
 19980  1137  00F0               	movwf	i1i2c_setBuffer@bufferSize
 19981  1138  3F41               	moviw [1]fsr1
 19982  1139  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 19983  113A  0879               	movf	i1rdBlkRegCompleteHandler@p,w
 19984  113B  3E02               	addlw	2
 19985  113C  0086               	movwf	6
 19986  113D  0187               	clrf	7
 19987  113E  0801               	movf	1,w
 19988  113F  3190  2047  3191   	fcall	i1_i2c_setBuffer
 19989                           
 19990                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 19991  1142  3000               	movlw	0
 19992  1143  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 19993  1144  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 19994  1145  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 19995  1146  319F  27DC         	fcall	i1_i2c_setDataCompleteCallback
 19996                           
 19997                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 19998  1148  3002               	movlw	2
 19999  1149  0008               	return
 20000  114A                     __end_ofi1_rdBlkRegCompleteHandler:	
 20001                           
 20002                           	psect	text125
 20003  10A3                     __ptext125:	
 20004 ;; *************** function i1_rd2RegCompleteHandler *****************
 20005 ;; Defined at:
 20006 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20007 ;; Parameters:    Size  Location     Type
 20008 ;;  p               1    9[COMMON] PTR void 
 20009 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20010 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20011 ;; Auto vars:     Size  Location     Type
 20012 ;;		None
 20013 ;; Return value:  Size  Location     Type
 20014 ;;                  1    wreg      enum E97
 20015 ;; Registers used:
 20016 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20017 ;; Tracked objects:
 20018 ;;		On entry : 0/0
 20019 ;;		On exit  : 0/0
 20020 ;;		Unchanged: 0/0
 20021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20022 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20025 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20026 ;;Total ram usage:        1 bytes
 20027 ;; Hardware stack levels used:    1
 20028 ;; Hardware stack levels required when called:    2
 20029 ;; This function calls:
 20030 ;;		i1_i2c_setBuffer
 20031 ;;		i1_i2c_setDataCompleteCallback
 20032 ;; This function is called by:
 20033 ;; This function uses a non-reentrant model
 20034 ;;
 20035                           
 20036                           
 20037                           ;psect for function i1_rd2RegCompleteHandler
 20038  10A3                     i1_rd2RegCompleteHandler:	
 20039  10A3                     i1l4232:	
 20040                           ;incstack = 0
 20041 ;; hardware stack exceeded
 20042                           ; Regs used in i1_rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20043                           
 20044                           
 20045                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 20046  10A3  3002               	movlw	2
 20047  10A4  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20048  10A5  3000               	movlw	0
 20049  10A6  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 20050  10A7  0879               	movf	i1rd2RegCompleteHandler@p,w
 20051  10A8  3190  2047  3190   	fcall	i1_i2c_setBuffer
 20052                           
 20053                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 20054  10AB  3000               	movlw	0
 20055  10AC  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 20056  10AD  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 20057  10AE  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 20058  10AF  319F  27DC         	fcall	i1_i2c_setDataCompleteCallback
 20059                           
 20060                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 20061  10B1  3002               	movlw	2
 20062  10B2  0008               	return
 20063  10B3                     __end_ofi1_rd2RegCompleteHandler:	
 20064                           
 20065                           	psect	text126
 20066  1093                     __ptext126:	
 20067 ;; *************** function i1_rd1RegCompleteHandler *****************
 20068 ;; Defined at:
 20069 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20070 ;; Parameters:    Size  Location     Type
 20071 ;;  p               1    9[COMMON] PTR void 
 20072 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20073 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20074 ;; Auto vars:     Size  Location     Type
 20075 ;;		None
 20076 ;; Return value:  Size  Location     Type
 20077 ;;                  1    wreg      enum E97
 20078 ;; Registers used:
 20079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20080 ;; Tracked objects:
 20081 ;;		On entry : 0/0
 20082 ;;		On exit  : 0/0
 20083 ;;		Unchanged: 0/0
 20084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20085 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20089 ;;Total ram usage:        1 bytes
 20090 ;; Hardware stack levels used:    1
 20091 ;; Hardware stack levels required when called:    2
 20092 ;; This function calls:
 20093 ;;		i1_i2c_setBuffer
 20094 ;;		i1_i2c_setDataCompleteCallback
 20095 ;; This function is called by:
 20096 ;; This function uses a non-reentrant model
 20097 ;;
 20098                           
 20099                           
 20100                           ;psect for function i1_rd1RegCompleteHandler
 20101  1093                     i1_rd1RegCompleteHandler:	
 20102  1093                     i1l4224:	
 20103                           ;incstack = 0
 20104 ;; hardware stack exceeded
 20105                           ; Regs used in i1_rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20106                           
 20107                           
 20108                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 20109  1093  3001               	movlw	1
 20110  1094  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20111  1095  3000               	movlw	0
 20112  1096  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 20113  1097  0879               	movf	i1rd1RegCompleteHandler@p,w
 20114  1098  3190  2047  3190   	fcall	i1_i2c_setBuffer
 20115                           
 20116                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 20117  109B  3000               	movlw	0
 20118  109C  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 20119  109D  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 20120  109E  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 20121  109F  319F  27DC         	fcall	i1_i2c_setDataCompleteCallback
 20122                           
 20123                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 20124  10A1  3002               	movlw	2
 20125  10A2  0008               	return
 20126  10A3                     __end_ofi1_rd1RegCompleteHandler:	
 20127                           
 20128                           	psect	text127
 20129  1083                     __ptext127:	
 20130 ;; *************** function i1_wr1RegCompleteHandler *****************
 20131 ;; Defined at:
 20132 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20133 ;; Parameters:    Size  Location     Type
 20134 ;;  p               1    9[COMMON] PTR void 
 20135 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20136 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20137 ;; Auto vars:     Size  Location     Type
 20138 ;;		None
 20139 ;; Return value:  Size  Location     Type
 20140 ;;                  1    wreg      enum E97
 20141 ;; Registers used:
 20142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20143 ;; Tracked objects:
 20144 ;;		On entry : 0/0
 20145 ;;		On exit  : 0/0
 20146 ;;		Unchanged: 0/0
 20147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20148 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20152 ;;Total ram usage:        1 bytes
 20153 ;; Hardware stack levels used:    1
 20154 ;; Hardware stack levels required when called:    2
 20155 ;; This function calls:
 20156 ;;		i1_i2c_setBuffer
 20157 ;;		i1_i2c_setDataCompleteCallback
 20158 ;; This function is called by:
 20159 ;; This function uses a non-reentrant model
 20160 ;;
 20161                           
 20162                           
 20163                           ;psect for function i1_wr1RegCompleteHandler
 20164  1083                     i1_wr1RegCompleteHandler:	
 20165  1083                     i1l4216:	
 20166                           ;incstack = 0
 20167 ;; hardware stack exceeded
 20168                           ; Regs used in i1_wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20169                           
 20170                           
 20171                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 20172  1083  3001               	movlw	1
 20173  1084  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20174  1085  3000               	movlw	0
 20175  1086  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 20176  1087  0879               	movf	i1wr1RegCompleteHandler@p,w
 20177  1088  3190  2047  3190   	fcall	i1_i2c_setBuffer
 20178                           
 20179                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 20180  108B  3000               	movlw	0
 20181  108C  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 20182  108D  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 20183  108E  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 20184  108F  319F  27DC         	fcall	i1_i2c_setDataCompleteCallback
 20185                           
 20186                           ;i2c_simple_master.c: 35: return i2c_continue;
 20187  1091  3004               	movlw	4
 20188  1092  0008               	return
 20189  1093                     __end_ofi1_wr1RegCompleteHandler:	
 20190                           
 20191                           	psect	text128
 20192  0002                     __ptext128:	
 20193 ;; *************** function i1_i2c_restartWrite *****************
 20194 ;; Defined at:
 20195 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 20196 ;; Parameters:    Size  Location     Type
 20197 ;;  p               1    9[COMMON] PTR void 
 20198 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20199 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20200 ;; Auto vars:     Size  Location     Type
 20201 ;;		None
 20202 ;; Return value:  Size  Location     Type
 20203 ;;                  1    wreg      enum E96
 20204 ;; Registers used:
 20205 ;;		wreg
 20206 ;; Tracked objects:
 20207 ;;		On entry : 0/0
 20208 ;;		On exit  : 0/0
 20209 ;;		Unchanged: 0/0
 20210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20211 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20215 ;;Total ram usage:        1 bytes
 20216 ;; Hardware stack levels used:    1
 20217 ;; This function calls:
 20218 ;;		Nothing
 20219 ;; This function is called by:
 20220 ;; This function uses a non-reentrant model
 20221 ;;
 20222                           
 20223                           
 20224                           ;psect for function i1_i2c_restartWrite
 20225  0002                     i1_i2c_restartWrite:	
 20226  0002                     i1l4212:	
 20227                           ;incstack = 0
 20228                           ; Regs used in i1_i2c_restartWrite: [wreg]
 20229                           
 20230                           
 20231                           ;i2c_types.c: 37: return i2c_restart_write;
 20232  0002  3003               	movlw	3
 20233  0003  0008               	return
 20234  0004                     __end_ofi1_i2c_restartWrite:	
 20235                           
 20236                           	psect	text129
 20237  1E60                     __ptext129:	
 20238 ;; *************** function i1_returnReset *****************
 20239 ;; Defined at:
 20240 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 20241 ;; Parameters:    Size  Location     Type
 20242 ;;  p               1    9[COMMON] PTR void 
 20243 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20244 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20245 ;; Auto vars:     Size  Location     Type
 20246 ;;		None
 20247 ;; Return value:  Size  Location     Type
 20248 ;;                  1    wreg      enum E15143
 20249 ;; Registers used:
 20250 ;;		wreg
 20251 ;; Tracked objects:
 20252 ;;		On entry : 0/0
 20253 ;;		On exit  : 0/0
 20254 ;;		Unchanged: 0/0
 20255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20256 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20259 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20260 ;;Total ram usage:        1 bytes
 20261 ;; Hardware stack levels used:    1
 20262 ;; This function calls:
 20263 ;;		Nothing
 20264 ;; This function is called by:
 20265 ;; This function uses a non-reentrant model
 20266 ;;
 20267                           
 20268                           
 20269                           ;psect for function i1_returnReset
 20270  1E60                     i1_returnReset:	
 20271  1E60                     i1l4208:	
 20272                           ;incstack = 0
 20273                           ; Regs used in i1_returnReset: [wreg]
 20274                           
 20275                           
 20276                           ;i2c_master.c: 450: return i2c_reset_link;
 20277  1E60  3005               	movlw	5
 20278  1E61  0008               	return
 20279  1E62                     __end_ofi1_returnReset:	
 20280                           
 20281                           	psect	text130
 20282  1E5E                     __ptext130:	
 20283 ;; *************** function i1_returnStop *****************
 20284 ;; Defined at:
 20285 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 20286 ;; Parameters:    Size  Location     Type
 20287 ;;  p               1    9[COMMON] PTR void 
 20288 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20289 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20290 ;; Auto vars:     Size  Location     Type
 20291 ;;		None
 20292 ;; Return value:  Size  Location     Type
 20293 ;;                  1    wreg      enum E15143
 20294 ;; Registers used:
 20295 ;;		wreg
 20296 ;; Tracked objects:
 20297 ;;		On entry : 0/0
 20298 ;;		On exit  : 0/0
 20299 ;;		Unchanged: 0/0
 20300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20301 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20305 ;;Total ram usage:        1 bytes
 20306 ;; Hardware stack levels used:    1
 20307 ;; This function calls:
 20308 ;;		Nothing
 20309 ;; This function is called by:
 20310 ;;		i1_setCallBack
 20311 ;;		_do_I2C_DO_ADDRESS_NACK
 20312 ;;		_do_I2C_TX
 20313 ;;		_do_I2C_RX
 20314 ;;		_do_I2C_TX_EMPTY
 20315 ;;		i1_do_I2C_DO_ADDRESS_NACK
 20316 ;;		i1_do_I2C_TX
 20317 ;;		i1_do_I2C_RX
 20318 ;;		i1_do_I2C_TX_EMPTY
 20319 ;; This function uses a non-reentrant model
 20320 ;;
 20321                           
 20322                           
 20323                           ;psect for function i1_returnStop
 20324  1E5E                     i1_returnStop:	
 20325  1E5E                     i1l4204:	
 20326                           ;incstack = 0
 20327                           ; Regs used in i1_returnStop: [wreg]
 20328                           
 20329                           
 20330                           ;i2c_master.c: 445: return i2c_stop;
 20331  1E5E  3001               	movlw	1
 20332  1E5F  0008               	return
 20333  1E60                     __end_ofi1_returnStop:	
 20334                           
 20335                           	psect	text131
 20336  1073                     __ptext131:	
 20337 ;; *************** function i1_wr2RegCompleteHandler *****************
 20338 ;; Defined at:
 20339 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20340 ;; Parameters:    Size  Location     Type
 20341 ;;  p               1    9[COMMON] PTR void 
 20342 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20343 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20344 ;; Auto vars:     Size  Location     Type
 20345 ;;		None
 20346 ;; Return value:  Size  Location     Type
 20347 ;;                  1    wreg      enum E97
 20348 ;; Registers used:
 20349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20350 ;; Tracked objects:
 20351 ;;		On entry : 0/0
 20352 ;;		On exit  : 0/0
 20353 ;;		Unchanged: 0/0
 20354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20355 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20359 ;;Total ram usage:        1 bytes
 20360 ;; Hardware stack levels used:    1
 20361 ;; Hardware stack levels required when called:    2
 20362 ;; This function calls:
 20363 ;;		i1_i2c_setBuffer
 20364 ;;		i1_i2c_setDataCompleteCallback
 20365 ;; This function is called by:
 20366 ;; This function uses a non-reentrant model
 20367 ;;
 20368                           
 20369                           
 20370                           ;psect for function i1_wr2RegCompleteHandler
 20371  1073                     i1_wr2RegCompleteHandler:	
 20372  1073                     i1l4240:	
 20373                           ;incstack = 0
 20374 ;; hardware stack exceeded
 20375                           ; Regs used in i1_wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20376                           
 20377                           
 20378                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 20379  1073  3002               	movlw	2
 20380  1074  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20381  1075  3000               	movlw	0
 20382  1076  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 20383  1077  0879               	movf	i1wr2RegCompleteHandler@p,w
 20384  1078  3190  2047  3190   	fcall	i1_i2c_setBuffer
 20385                           
 20386                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 20387  107B  3000               	movlw	0
 20388  107C  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 20389  107D  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 20390  107E  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 20391  107F  319F  27DC         	fcall	i1_i2c_setDataCompleteCallback
 20392                           
 20393                           ;i2c_simple_master.c: 114: return i2c_continue;
 20394  1081  3004               	movlw	4
 20395  1082  0008               	return
 20396  1083                     __end_ofi1_wr2RegCompleteHandler:	
 20397                           
 20398                           	psect	text132
 20399  1FDC                     __ptext132:	
 20400 ;; *************** function i1_i2c_setDataCompleteCallback *****************
 20401 ;; Defined at:
 20402 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 20403 ;; Parameters:    Size  Location     Type
 20404 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 20405 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 20406 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 20407 ;;  p               1    7[COMMON] PTR void 
 20408 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20409 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20410 ;; Auto vars:     Size  Location     Type
 20411 ;;		None
 20412 ;; Return value:  Size  Location     Type
 20413 ;;                  1    wreg      void 
 20414 ;; Registers used:
 20415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20416 ;; Tracked objects:
 20417 ;;		On entry : 0/0
 20418 ;;		On exit  : 0/0
 20419 ;;		Unchanged: 0/0
 20420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20421 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20424 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20425 ;;Total ram usage:        4 bytes
 20426 ;; Hardware stack levels used:    1
 20427 ;; Hardware stack levels required when called:    1
 20428 ;; This function calls:
 20429 ;;		i1_setCallBack
 20430 ;; This function is called by:
 20431 ;;		i1_wr1RegCompleteHandler
 20432 ;;		i1_rd1RegCompleteHandler
 20433 ;;		i1_rd2RegCompleteHandler
 20434 ;;		i1_wr2RegCompleteHandler
 20435 ;;		i1_rdBlkRegCompleteHandler
 20436 ;; This function uses a non-reentrant model
 20437 ;;
 20438                           
 20439                           
 20440                           ;psect for function i1_i2c_setDataCompleteCallback
 20441  1FDC                     i1_i2c_setDataCompleteCallback:	
 20442                           
 20443                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 20444                           
 20445                           ;incstack = 0
 20446 ;; hardware stack exceeded
 20447                           ; Regs used in i1_i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 20448  1FDC  0876               	movf	i1i2c_setDataCompleteCallback@cb+1,w
 20449  1FDD  00F1               	movwf	i1setCallBack@cb+1
 20450  1FDE  0875               	movf	i1i2c_setDataCompleteCallback@cb,w
 20451  1FDF  00F0               	movwf	i1setCallBack@cb
 20452  1FE0  0877               	movf	i1i2c_setDataCompleteCallback@p,w
 20453  1FE1  00F8               	movwf	??i1_i2c_setDataCompleteCallback
 20454  1FE2  0878               	movf	??i1_i2c_setDataCompleteCallback,w
 20455  1FE3  00F2               	movwf	i1setCallBack@p
 20456  1FE4  3000               	movlw	0
 20457  1FE5  3192  224F         	fcall	i1_setCallBack
 20458  1FE7  0008               	return
 20459  1FE8                     __end_ofi1_i2c_setDataCompleteCallback:	
 20460                           
 20461                           	psect	text133
 20462  124F                     __ptext133:	
 20463 ;; *************** function i1_setCallBack *****************
 20464 ;; Defined at:
 20465 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 20466 ;; Parameters:    Size  Location     Type
 20467 ;;  idx             1    wreg     enum E15325
 20468 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 20469 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 20470 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 20471 ;;  p               1    2[COMMON] PTR void 
 20472 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20473 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20474 ;; Auto vars:     Size  Location     Type
 20475 ;;  idx             1    4[COMMON] enum E15325
 20476 ;; Return value:  Size  Location     Type
 20477 ;;                  1    wreg      void 
 20478 ;; Registers used:
 20479 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20480 ;; Tracked objects:
 20481 ;;		On entry : 0/0
 20482 ;;		On exit  : 0/0
 20483 ;;		Unchanged: 0/0
 20484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20485 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20488 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20489 ;;Total ram usage:        5 bytes
 20490 ;; Hardware stack levels used:    1
 20491 ;; This function calls:
 20492 ;;		Nothing
 20493 ;; This function is called by:
 20494 ;;		i1_i2c_setDataCompleteCallback
 20495 ;; This function uses a non-reentrant model
 20496 ;;
 20497                           
 20498                           
 20499                           ;psect for function i1_setCallBack
 20500  124F                     i1_setCallBack:	
 20501                           
 20502                           ;incstack = 0
 20503 ;; hardware stack exceeded
 20504                           ; Regs used in i1_setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 20505                           ;i1setCallBack@idx stored from wreg
 20506  124F  00F4               	movwf	i1setCallBack@idx
 20507                           
 20508                           ;i2c_master.c: 455: if(cb)
 20509  1250  0870               	movf	i1setCallBack@cb,w
 20510  1251  0471               	iorwf	i1setCallBack@cb+1,w
 20511  1252  1903               	btfsc	3,2
 20512  1253  2A65               	goto	i1l3792
 20513                           
 20514                           ;i2c_master.c: 456: {
 20515                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 20516  1254  3574               	lslf	i1setCallBack@idx,w
 20517  1255  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 20518  1256  0086               	movwf	6
 20519  1257  0187               	clrf	7
 20520  1258  0870               	movf	i1setCallBack@cb,w
 20521  1259  3FC0               	movwi [0]fsr1
 20522  125A  0871               	movf	i1setCallBack@cb+1,w
 20523  125B  3FC1               	movwi [1]fsr1
 20524                           
 20525                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 20526  125C  0872               	movf	i1setCallBack@p,w
 20527  125D  00F3               	movwf	??i1_setCallBack
 20528  125E  0874               	movf	i1setCallBack@idx,w
 20529  125F  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 20530  1260  0086               	movwf	6
 20531  1261  0187               	clrf	7
 20532  1262  0873               	movf	??i1_setCallBack,w
 20533  1263  0081               	movwf	1
 20534                           
 20535                           ;i2c_master.c: 459: }
 20536  1264  0008               	return
 20537  1265                     i1l3792:	
 20538                           
 20539                           ;i2c_master.c: 460: else
 20540                           ;i2c_master.c: 461: {
 20541                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 20542  1265  3574               	lslf	i1setCallBack@idx,w
 20543  1266  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 20544  1267  0086               	movwf	6
 20545  1268  0187               	clrf	7
 20546  1269  30D8               	movlw	low _returnStop
 20547  126A  3FC0               	movwi [0]fsr1
 20548  126B  301E               	movlw	high _returnStop
 20549  126C  3FC1               	movwi [1]fsr1
 20550                           
 20551                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 20552  126D  0874               	movf	i1setCallBack@idx,w
 20553  126E  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 20554  126F  0086               	movwf	6
 20555  1270  0187               	clrf	7
 20556  1271  0181               	clrf	1
 20557  1272  0008               	return
 20558  1273                     __end_ofi1_setCallBack:	
 20559                           
 20560                           	psect	text134
 20561  1047                     __ptext134:	
 20562 ;; *************** function i1_i2c_setBuffer *****************
 20563 ;; Defined at:
 20564 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 20565 ;; Parameters:    Size  Location     Type
 20566 ;;  buffer          1    wreg     PTR void 
 20567 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 20568 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 20569 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20570 ;;  bufferSize      2    0[COMMON] unsigned int 
 20571 ;; Auto vars:     Size  Location     Type
 20572 ;;  buffer          1    3[COMMON] PTR void 
 20573 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 20574 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 20575 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20576 ;; Return value:  Size  Location     Type
 20577 ;;                  1    wreg      void 
 20578 ;; Registers used:
 20579 ;;		wreg
 20580 ;; Tracked objects:
 20581 ;;		On entry : 0/0
 20582 ;;		On exit  : 0/0
 20583 ;;		Unchanged: 0/0
 20584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20588 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20589 ;;Total ram usage:        4 bytes
 20590 ;; Hardware stack levels used:    1
 20591 ;; This function calls:
 20592 ;;		Nothing
 20593 ;; This function is called by:
 20594 ;;		i1_wr1RegCompleteHandler
 20595 ;;		i1_rd1RegCompleteHandler
 20596 ;;		i1_rd2RegCompleteHandler
 20597 ;;		i1_wr2RegCompleteHandler
 20598 ;;		i1_rdBlkRegCompleteHandler
 20599 ;; This function uses a non-reentrant model
 20600 ;;
 20601                           
 20602                           
 20603                           ;psect for function i1_i2c_setBuffer
 20604  1047                     i1_i2c_setBuffer:	
 20605                           
 20606                           ;incstack = 0
 20607 ;; hardware stack exceeded
 20608                           ; Regs used in i1_i2c_setBuffer: [wreg]
 20609                           ;i1i2c_setBuffer@buffer stored from wreg
 20610  1047  00F3               	movwf	i1i2c_setBuffer@buffer
 20611                           
 20612                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 20613  1048  0021               	movlb	1	; select bank1
 20614  1049  1D47               	btfss	_i2c_status^(0+128),2
 20615  104A  0008               	return
 20616                           
 20617                           ;i2c_master.c: 187: {
 20618                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 20619  104B  0873               	movf	i1i2c_setBuffer@buffer,w
 20620  104C  00F2               	movwf	??i1_i2c_setBuffer
 20621  104D  0872               	movf	??i1_i2c_setBuffer,w
 20622  104E  00C9               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 20623                           
 20624                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 20625  104F  0871               	movf	i1i2c_setBuffer@bufferSize+1,w
 20626  1050  00CB               	movwf	((_i2c_status+1)^(0+128)+3)
 20627  1051  0870               	movf	i1i2c_setBuffer@bufferSize,w
 20628  1052  00CA               	movwf	(_i2c_status^(0+128)+3)
 20629                           
 20630                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 20631  1053  1147               	bcf	_i2c_status^(0+128),2
 20632  1054  0008               	return
 20633  1055                     __end_ofi1_i2c_setBuffer:	
 20634                           
 20635                           	psect	text135
 20636  1E6B                     __ptext135:	
 20637 ;; *************** function i1_i2c1_driver_stop *****************
 20638 ;; Defined at:
 20639 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 20640 ;; Parameters:    Size  Location     Type
 20641 ;;		None
 20642 ;; Auto vars:     Size  Location     Type
 20643 ;;		None
 20644 ;; Return value:  Size  Location     Type
 20645 ;;                  1    wreg      void 
 20646 ;; Registers used:
 20647 ;;		None
 20648 ;; Tracked objects:
 20649 ;;		On entry : 0/0
 20650 ;;		On exit  : 0/0
 20651 ;;		Unchanged: 0/0
 20652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20657 ;;Total ram usage:        0 bytes
 20658 ;; Hardware stack levels used:    1
 20659 ;; This function calls:
 20660 ;;		Nothing
 20661 ;; This function is called by:
 20662 ;;		i1_do_I2C_SEND_STOP
 20663 ;; This function uses a non-reentrant model
 20664 ;;
 20665                           
 20666                           
 20667                           ;psect for function i1_i2c1_driver_stop
 20668  1E6B                     i1_i2c1_driver_stop:	
 20669                           
 20670                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 20671                           
 20672                           ;incstack = 0
 20673 ;; hardware stack exceeded
 20674                           ; Regs used in i1_i2c1_driver_stop: []
 20675  1E6B  0023               	movlb	3	; select bank3
 20676  1E6C  1511               	bsf	17,2	;volatile
 20677  1E6D  0008               	return
 20678  1E6E                     __end_ofi1_i2c1_driver_stop:	
 20679                           
 20680                           	psect	text136
 20681  1E68                     __ptext136:	
 20682 ;; *************** function i1_i2c1_driver_restart *****************
 20683 ;; Defined at:
 20684 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 20685 ;; Parameters:    Size  Location     Type
 20686 ;;		None
 20687 ;; Auto vars:     Size  Location     Type
 20688 ;;		None
 20689 ;; Return value:  Size  Location     Type
 20690 ;;                  1    wreg      void 
 20691 ;; Registers used:
 20692 ;;		None
 20693 ;; Tracked objects:
 20694 ;;		On entry : 0/0
 20695 ;;		On exit  : 0/0
 20696 ;;		Unchanged: 0/0
 20697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20702 ;;Total ram usage:        0 bytes
 20703 ;; Hardware stack levels used:    1
 20704 ;; This function calls:
 20705 ;;		Nothing
 20706 ;; This function is called by:
 20707 ;;		i1_do_I2C_SEND_RESTART_READ
 20708 ;;		i1_do_I2C_SEND_RESTART_WRITE
 20709 ;;		i1_do_I2C_SEND_RESTART
 20710 ;; This function uses a non-reentrant model
 20711 ;;
 20712                           
 20713                           
 20714                           ;psect for function i1_i2c1_driver_restart
 20715  1E68                     i1_i2c1_driver_restart:	
 20716                           
 20717                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 20718                           
 20719                           ;incstack = 0
 20720 ;; hardware stack exceeded
 20721                           ; Regs used in i1_i2c1_driver_restart: []
 20722  1E68  0023               	movlb	3	; select bank3
 20723  1E69  1491               	bsf	17,1	;volatile
 20724  1E6A  0008               	return
 20725  1E6B                     __end_ofi1_i2c1_driver_restart:	
 20726                           
 20727                           	psect	text137
 20728  1E92                     __ptext137:	
 20729 ;; *************** function i1_i2c1_driver_sendACK *****************
 20730 ;; Defined at:
 20731 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;		None
 20734 ;; Auto vars:     Size  Location     Type
 20735 ;;		None
 20736 ;; Return value:  Size  Location     Type
 20737 ;;                  1    wreg      void 
 20738 ;; Registers used:
 20739 ;;		None
 20740 ;; Tracked objects:
 20741 ;;		On entry : 0/0
 20742 ;;		On exit  : 0/0
 20743 ;;		Unchanged: 0/0
 20744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20749 ;;Total ram usage:        0 bytes
 20750 ;; Hardware stack levels used:    1
 20751 ;; This function calls:
 20752 ;;		Nothing
 20753 ;; This function is called by:
 20754 ;;		i1_do_I2C_DO_ACK
 20755 ;;		i1_do_I2C_RX
 20756 ;; This function uses a non-reentrant model
 20757 ;;
 20758                           
 20759                           
 20760                           ;psect for function i1_i2c1_driver_sendACK
 20761  1E92                     i1_i2c1_driver_sendACK:	
 20762                           
 20763                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 20764                           
 20765                           ;incstack = 0
 20766                           ; Regs used in i1_i2c1_driver_sendACK: []
 20767  1E92  0023               	movlb	3	; select bank3
 20768  1E93  1291               	bcf	17,5	;volatile
 20769                           
 20770                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 20771  1E94  1611               	bsf	17,4	;volatile
 20772  1E95  0008               	return
 20773  1E96                     __end_ofi1_i2c1_driver_sendACK:	
 20774                           
 20775                           	psect	text138
 20776  1E65                     __ptext138:	
 20777 ;; *************** function _i2c_busCollisionISR *****************
 20778 ;; Defined at:
 20779 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 20780 ;; Parameters:    Size  Location     Type
 20781 ;;		None
 20782 ;; Auto vars:     Size  Location     Type
 20783 ;;		None
 20784 ;; Return value:  Size  Location     Type
 20785 ;;                  1    wreg      void 
 20786 ;; Registers used:
 20787 ;;		status,2, status,0, pclath, cstack
 20788 ;; Tracked objects:
 20789 ;;		On entry : 0/0
 20790 ;;		On exit  : 0/0
 20791 ;;		Unchanged: 0/0
 20792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20797 ;;Total ram usage:        0 bytes
 20798 ;; Hardware stack levels used:    1
 20799 ;; Hardware stack levels required when called:    1
 20800 ;; This function calls:
 20801 ;;		_i2c1_driver_clearBusCollision
 20802 ;; This function is called by:
 20803 ;;		_i2c_open
 20804 ;;		_INTERRUPT_InterruptManager
 20805 ;; This function uses a non-reentrant model
 20806 ;;
 20807                           
 20808                           
 20809                           ;psect for function _i2c_busCollisionISR
 20810  1E65                     _i2c_busCollisionISR:	
 20811                           
 20812                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 20813                           
 20814                           ;incstack = 0
 20815                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 20816  1E65  319E  2662         	fcall	_i2c1_driver_clearBusCollision
 20817  1E67  0008               	return
 20818  1E68                     __end_of_i2c_busCollisionISR:	
 20819                           
 20820                           	psect	text139
 20821  1E62                     __ptext139:	
 20822 ;; *************** function _i2c1_driver_clearBusCollision *****************
 20823 ;; Defined at:
 20824 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 20825 ;; Parameters:    Size  Location     Type
 20826 ;;		None
 20827 ;; Auto vars:     Size  Location     Type
 20828 ;;		None
 20829 ;; Return value:  Size  Location     Type
 20830 ;;                  1    wreg      void 
 20831 ;; Registers used:
 20832 ;;		None
 20833 ;; Tracked objects:
 20834 ;;		On entry : 0/0
 20835 ;;		On exit  : 0/0
 20836 ;;		Unchanged: 0/0
 20837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20842 ;;Total ram usage:        0 bytes
 20843 ;; Hardware stack levels used:    1
 20844 ;; This function calls:
 20845 ;;		Nothing
 20846 ;; This function is called by:
 20847 ;;		_i2c_busCollisionISR
 20848 ;; This function uses a non-reentrant model
 20849 ;;
 20850                           
 20851                           
 20852                           ;psect for function _i2c1_driver_clearBusCollision
 20853  1E62                     _i2c1_driver_clearBusCollision:	
 20854                           
 20855                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
 20856                           
 20857                           ;incstack = 0
 20858                           ; Regs used in _i2c1_driver_clearBusCollision: []
 20859  1E62  002E               	movlb	14	; select bank14
 20860  1E63  108F               	bcf	15,1	;volatile
 20861  1E64  0008               	return
 20862  1E65                     __end_of_i2c1_driver_clearBusCollision:	
 20863  007E                     btemp	set	126	;btemp
 20864  007E                     int$flags	set	126
 20865  007E                     wtemp0	set	126


Data Sizes:
    Strings     90
    Constant    1004
    Data        487
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     74      80
    BANK1            80     39      80
    BANK2            80      0      59
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            33      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$2614$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$2620$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2626$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_ISR$2632	const PTR FTN()enum E15307 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$2631	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2626	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$2625	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$2620	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$2619	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX$2614	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S519$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 12
		 -> main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    mktime@timeptr	PTR struct tm size(1) Largest target is 18
		 -> rtc6_GetTime@tm_t(BANK1[18]), 

    memset@p1	PTR void  size(2) Largest target is 18
		 -> gmtime@tim(BANK2[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    memset@p	PTR unsigned char  size(2) Largest target is 18
		 -> gmtime@tim(BANK2[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    sp__ctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK2[27]), 

    sp__asctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK2[27]), 

    gmtime@tp	PTR const long  size(1) Largest target is 4
		 -> localtime@t(BANK0[4]), 

    sp__gmtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    localtime@tp	PTR const long  size(1) Largest target is 4
		 -> main@getTime(BANK1[4]), rtc6_SetTime@t(BANK0[4]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), main@timeStr(BANK1[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Modify_Data@c	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), 

    Write_String@message	PTR unsigned char  size(2) Largest target is 12
		 -> main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    OLED_PutPicture@pic	PTR const unsigned char  size(2) Largest target is 475
		 -> emptyArray(CODE[475]), displayArray(BIGRAM[475]), 

    main@tm_t	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S938$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    sp__localtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    sp__memset	PTR void  size(2) Largest target is 18
		 -> gmtime@tim(BANK2[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    rtc6_SetTime@tm_t	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E15307[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S519$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S519$callbackTable	PTR FTN(PTR void ,)enum E15143[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E15143[6] size(2) Largest target is 1
		 -> i1_returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> returnReset(), returnStop(), 

    S519$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->i1_i2c_ISR
    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    i1_wr2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_wr1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rdBlkRegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_i2c_setDataCompleteCallback->i1_setCallBack

Critical Paths under _main in BANK0

    _main->_rtc6_GetTime
    _rtc6_SetTime->_localtime
    _rtc6_SetComponent->_rtcc_read
    _localtime->_gmtime
    _gmtime->_dylen
    _dylen->___lwmod
    _rtc6_GetTime->_mktime
    _rtc6_GetComponent->_rtcc_read
    _mktime->_ymd_to_scalar
    _ymd_to_scalar->_years_to_days
    _years_to_days->___lwdiv
    _months_to_days->___lwdiv
    _isleap->___lwmod
    _Write_String->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _Modify_Data->___wmul
    _SYSTEM_Initialize->_rtc6_Initialize
    _rtc6_Initialize->_rtcc_read
    _rtcc_write->_i2c_write1ByteRegister
    _rtcc_read->_i2c_read1ByteRegister
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _OLED_Initialize->_OLED_Command
    _OLED_Clear->_OLED_PutPicture
    _OLED_PutPicture->_OLED_SetColumn
    _OLED_PutPicture->_OLED_SetRow
    _OLED_SetRow->_OLED_Command
    _OLED_SetColumn->_OLED_Command
    _OLED_Command->_SPI2_Exchange8bit
    _OLED_Data->_SPI2_Exchange8bit

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rtc6_GetTime

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               105   105      0  479661
                                             70 BANK0      4     4      0
                                             18 BANK1     21    21      0
                         _OLED_Clear
                    _OLED_Initialize
                  _SYSTEM_Initialize
                       _Write_String
                          _localtime
                             _memset
                       _rtc6_GetTime
                       _rtc6_SetTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _rtc6_SetTime                                         8     4      4  185827
                                             44 BANK0      8     4      4
                            ___awmod
                          _localtime
                             _memset
                  _rtc6_SetComponent
 ---------------------------------------------------------------------------------
 (2) _rtc6_SetComponent                                   10     8      2  178519
                                             19 BANK0     10     8      2
                            ___awdiv
                            ___awmod
                          _rtcc_read
                         _rtcc_write
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     580
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _localtime                                           13    13      0    4835
                                             31 BANK0     13    13      0
                             ___lmul
                             _gmtime
 ---------------------------------------------------------------------------------
 (3) _gmtime                                               7     7      0    3988
                                             24 BANK0      7     7      0
                            ___aldiv
                            ___almod
                            ___awmod
                              _dylen
 ---------------------------------------------------------------------------------
 (4) _dylen                                                4     2      2    1213
                                             20 BANK0      4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1006
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___almod                                             11     3      8     752
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     756
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _rtc6_GetTime                                        25    21      4   96182
                                             63 BANK0      7     3      4
                                              0 BANK1     18    18      0
                             _memset
                             _mktime
                  _rtc6_GetComponent
 ---------------------------------------------------------------------------------
 (2) _rtc6_GetComponent                                    6     5      1   87117
                                             19 BANK0      6     5      1
                             ___bmul
                          _rtcc_read
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _mktime                                              15    11      4    7666
                                             48 BANK0     15    11      4
                             ___lmul
                      _ymd_to_scalar
 ---------------------------------------------------------------------------------
 (3) _ymd_to_scalar                                       16    10      6    6661
                                             32 BANK0     16    10      6
                             _isleap
                     _months_to_days
                      _years_to_days
 ---------------------------------------------------------------------------------
 (4) _years_to_days                                       18    14      4    1636
                                             14 BANK0     18    14      4
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     702
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _months_to_days                                       2     0      2    3324
                                             14 BANK0      2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isleap                                               5     3      2    1085
                                             20 BANK0      5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     654
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _Write_String                                         4     2      2    9458
                                             51 BANK0      4     2      2
                        _Modify_Data
                    _OLED_PutPicture
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    19     16    5631
                                             20 BANK0     31    15     16
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     919
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     770
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Modify_Data                                         21    15      6    2931
                                              6 BANK0     21    15      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2456
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0  174885
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI2_Initialize
                    _rtc6_Initialize
 ---------------------------------------------------------------------------------
 (2) _rtc6_Initialize                                      3     3      0  174885
                                             19 BANK0      3     3      0
                          _rtcc_read
                         _rtcc_write
 ---------------------------------------------------------------------------------
 (3) _rtcc_write                                           4     3      1   89050
                                             14 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               4     2      2   86030
                                             10 BANK0      4     2      2
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _rtcc_read                                            2     2      0   85720
                                             17 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                7     6      1   85650
                                             10 BANK0      7     6      1
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _i2c_setAddressNACKCallback                           4     1      3    1870
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (5) _i2c_open                                             3     3      0     366
                                              2 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_setI2cISR                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_setBusCollisionISR                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_masterWrite                                      0     0      0   78362
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (6) _i2c_masterOperation                                  3     3      0   78362
                                              7 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (7) _mssp1_IRQisEnabled                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _i2c_poller                                           0     0      0   78192
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (8) _mssp1_waitForEvent                                   1     1      0      50
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _i2c_ISR                                              3     3      0   78142
                                              4 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX_EMPTY                                      1     1      0   19494
                                              0 BANK0      1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX                                            3     3      0   19616
                                              1 BANK0      3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_TXData                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RX                                            1     1      0   19494
                                              0 BANK0      1     1      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ADDRESS_NACK                               1     1      0   19494
                                              0 BANK0      1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _returnStop                                          1     0      1      76
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _returnReset                                         1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4010
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (6) _setCallBack                                          5     2      3     914
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (5) _i2c_setBuffer                                        4     2      2    1352
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (10) _i2c_restartWrite                                    1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_close                                            2     2      0      24
                                              0 BANK0      2     2      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (6) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OLED_Initialize                                      2     2      0      44
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           6     6      0     915
                                             10 BANK0      6     6      0
                          _OLED_Data
                    _OLED_PutPicture
                     _OLED_SetColumn
                        _OLED_SetRow
 ---------------------------------------------------------------------------------
 (2) _OLED_PutPicture                                      6     4      2     511
                                              4 BANK0      6     4      2
                          _OLED_Data
                     _OLED_SetColumn
                        _OLED_SetRow
 ---------------------------------------------------------------------------------
 (3) _OLED_SetRow                                          2     2      0      89
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_SetColumn                                       2     2      0      89
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (4) _OLED_Command                                         1     1      0      44
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _OLED_Data                                            1     1      0      44
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI2_Exchange8bit                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          1     1      0   14790
                                              7 COMMON     1     1      0
                   Absolute function *
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (14) i1_i2c_ISR                                           3     3      0   14790
                                              4 COMMON     3     3      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (15) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_TX_EMPTY                                   1     1      0    3656
                                              0 COMMON     1     1      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
                     i1_mssp1_setIRQ
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_TX                                         3     3      0    3778
                                              1 COMMON     3     3      0
                   Absolute function *
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_ADR_READ                              0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_TXData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_RX                                         1     1      0    3656
                                              0 COMMON     1     1      0
                   Absolute function *
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0    3656
                                              0 COMMON     1     1      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_wr2RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_wr1RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_returnStop                                        1     0      1      76
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (16) i1_returnReset                                       1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (16) i1_rdBlkRegCompleteHandler                           1     0      1     756
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_rd2RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_rd1RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_i2c_setDataCompleteCallback                       4     1      3     510
                                              5 COMMON     4     1      3
                      i1_setCallBack
 ---------------------------------------------------------------------------------
 (18) i1_setCallBack                                       5     2      3     206
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (17) i1_i2c_setBuffer                                     4     2      2     174
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (16) i1_i2c_restartWrite                                  1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (15) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OLED_Clear
     _OLED_Data
       _SPI2_Exchange8bit
     _OLED_PutPicture
       _OLED_Data
         _SPI2_Exchange8bit
       _OLED_SetColumn
         _OLED_Command
           _SPI2_Exchange8bit
       _OLED_SetRow
         _OLED_Command
           _SPI2_Exchange8bit
     _OLED_SetColumn
       _OLED_Command
         _SPI2_Exchange8bit
     _OLED_SetRow
       _OLED_Command
         _SPI2_Exchange8bit
   _OLED_Initialize
     _OLED_Command
       _SPI2_Exchange8bit
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI2_Initialize
     _rtc6_Initialize
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
       _rtcc_write
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_write1ByteRegister (ARG)
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _Write_String
     _Modify_Data
       ___wmul
     _OLED_PutPicture
       _OLED_Data
         _SPI2_Exchange8bit
       _OLED_SetColumn
         _OLED_Command
           _SPI2_Exchange8bit
       _OLED_SetRow
         _OLED_Command
           _SPI2_Exchange8bit
     _sprintf
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       ___wmul
       _isdigit
     _strlen
   _localtime
     ___lmul
     _gmtime
       ___aldiv
       ___almod
       ___awmod
       _dylen
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
   _memset
   _rtc6_GetTime
     _memset
     _mktime
       ___lmul
       _ymd_to_scalar
         _isleap
           ___lwmod
             ___lwdiv (ARG)
               ___wmul (ARG)
         _months_to_days
           ___lwdiv
             ___wmul (ARG)
           ___wmul
         _years_to_days
           ___lmul
           ___lwdiv
             ___wmul (ARG)
     _rtc6_GetComponent
       ___bmul
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _rtc6_SetTime
     ___awmod
     _localtime
       ___lmul
       _gmtime
         ___aldiv
         ___almod
         ___awmod
         _dylen
           ___lwmod
             ___lwdiv (ARG)
               ___wmul (ARG)
     _memset
     _rtc6_SetComponent
       ___awdiv
       ___awmod
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
       _rtcc_write
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_write1ByteRegister (ARG)
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _sprintf
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___wmul (ARG)
     ___wmul
     _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       Absolute function(Fake) *
       i1_do_I2C_DO_NACK_RESTART *
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP *
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData *
       i1_i2c1_driver_sendACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART_READ *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData *
       i1_i2c1_driver_isNACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c_restartWrite *
       i1_mssp1_setIRQ *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     27      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3B       9       73.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               21      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 26 21:50:56 2018

                           returnReset@p 0029                            _years_to_days 09B1  
              rtc6_SetComponent@location 003C                        _rtc6_SetTime$2612 0052  
                         ___bmul@product 0022            _do_I2C_SEND_RESTART$intlevel0 1F3D  
                            __CFG_CP$OFF 0000                                       l53 1FC9  
                           ___awdiv@sign 0026                      months_to_days@month 002E  
                    ??_rtc6_SetComponent 0035                     __size_of_do_I2C_IDLE 0009  
                    _do_I2C_SEND_RESTART 1F39                     __size_of_do_I2C_RCEN 000A  
                    ___wmul@multiplicand 0022                     __end_ofi1_returnStop 1E60  
                          rtcc_read@addr 0032                              i1_do_I2C_RX 1527  
                            i1_do_I2C_TX 1678                              __CFG_LVP$ON 0000  
                                    l224 1192                                      l217 170D  
                                    l314 160D                                      l298 178E  
                                    l741 1FF0                                      l833 0A24  
                                    l854 064E                                      l881 0743  
                                    l980 119E                             __CFG_CPD$OFF 0000  
               i1_do_I2C_DO_NACK_RESTART 1EB2                        ??_OLED_Initialize 0022  
                       ??_OLED_SetColumn 0022             __size_of_i2c_masterOperation 0024  
                   _returnStop$intlevel0 1EDC            i2c_setDataCompleteCallback@cb 0025  
                __size_of_PMD_Initialize 0008                             ___awmod@sign 0026  
               ?i1_rd2RegCompleteHandler 0079                    __size_of_do_I2C_RESET 000B  
                           __CFG_BORV$LO 0000                                      wreg 0009  
                  __end_ofi1_returnReset 1E62                          ?i1_mssp1_setIRQ 0070  
                       OLED_Command@temp 0021                 ?i1_wr2RegCompleteHandler 0079  
                     i1_i2c1_driver_stop 1E6B          i2c1_driver_setBusCollisionISR@f 0020  
        ??i1_i2c_setDataCompleteCallback 0078                              main@getTime 00C3  
                           __CFG_ZCD$OFF 0000                                     l1035 0B9D  
                ??_rd2RegCompleteHandler 002A                                     l1048 0954  
                                   l1390 0875                                     l4120 0F80  
                                   l3322 12AE                                     l3402 10F5  
                                   l3410 110B                                     l4042 07F1  
                                   l4130 0FC9                                     l4122 0FB1  
                                   l4036 1071                                     l4300 0DB6  
                                   l4132 0FF9                                     l4302 0DBF  
                                   l4046 07F7                                     l4062 17B9  
                                   l3360 1F35                                     l4144 0860  
                                   l4080 17D8                                     l3426 10DF  
                                   l3418 1121                                     l3434 11B5  
                                   l3442 1FB4                                     l3354 1F2D  
                                   l4410 0653                                     l4090 17F3  
                          i1returnStop@p 0079                                     l3452 1004  
                                   l3372 1F45                                     l3460 1FF8  
                                   l4500 0789                                     l4412 065C  
                                   l4404 064A                                     l4068 17C4  
                                   l3390 1EDC                                     l3366 1F3D  
                                   l4094 17FB                                     l4086 17EA  
                                   l4078 17CC                                     l3384 1F5D  
                                   l4520 07AD                                     l4512 07A9  
                                   l4424 0698                                     l4416 0669  
                                   l3394 1EE2                                     l3378 1F55  
                                   l3714 1198                                     l4506 079B  
                                   l4442 06CF                                     l4434 06A8  
                                   l4450 06FB                                     l4522 0629  
                                   l4282 1166                                     l3468 1FBF  
                                   l3476 1F8B                                     l3484 1F4D  
                                   l4460 0712                                     l4444 06DA  
                                   l4436 06BC                                     l4428 06A6  
                                   l4524 07E7                                     l3732 13FF  
                                   l3900 0977                                     l4550 1522  
                                   l4542 150A                                     l3398 1EE8  
                                   l3750 148B                                     l3752 1497  
                                   l4480 075F                                     l4472 0737  
                                   l4448 06E3                                     l3728 13F5  
                                   l3912 09A8                                     l3904 098F  
                                   l4570 0A35                                     l3762 14B2  
                                   l4490 0772                                     l4482 0762  
                                   l4466 0718                                     l3780 1381  
                                   l4556 11D3                                     l3908 099A  
                                   l3924 163D                                     l3758 14A9  
                                   l3774 1369                                     l4558 11DF  
                                   l3862 0BBE                                     l3854 0BAE  
                                   l3950 1673                                     l3942 1662  
                                   l4832 08A5                                     l4824 0897  
                                   l3776 1375                                     l3784 138A  
                                   l3880 0C05                                     l3872 0BEC  
                                   l3864 0BCC                                     l3936 164A  
                                   l3928 1644                                     l3960 14E4  
                                   l7232 0D02                                     l4842 08BA  
                                   l4578 0A8D                                     l4498 0785  
                                   l3938 1656                                     l3946 166B  
                                   l3876 0BF7                                     l3892 0961  
                                   l3964 14E9                                     l4854 08E2  
                                   l4838 08B2                                     l6710 130F  
                                   l4848 08C7                                     l6800 13A0  
                                   l3976 1479                                     l6714 1318  
                                   l6730 1768                                     l6810 134A  
                                   l6802 1339                                     l3978 147A  
                                   l3898 0969                                     l6724 131E  
                                   l6718 131B                                     l6734 176B  
                                   l6726 1762                                     l6830 1284  
                                   l6752 17A7                                     l6744 1771  
                                   l6832 128A                                     l6912 141E  
                                   l6738 176E                                     l6770 160F  
                                   l6818 1FD1                                     l6906 175C  
                                   l6922 1447                                     l6780 1615  
                                   l6756 15F0                                     l6836 1294  
                                   l6782 1393                                     l6774 1612  
                                   l6950 0938                                     l6784 1396  
                                   l6794 139D                                     l6788 1399  
                                   l6948 0927                                     l6886 171E  
                                   l6896 1747                                     STR_1 1820  
                                   STR_2 183F                                     STR_3 0249  
                                   u2015 1400                              ?_OLED_Clear 0070  
                                   u2025 1407                                     u2125 136C  
                                   _LATA 0016                                     _LATB 0017  
                                   u2055 148E                                     _LATC 0018  
                                   _LATD 0019                                     u2145 137B  
                                   u2305 0BCD                                     _LATE 001A  
                                   u2075 1498                                     u2155 1382  
                                   u2315 0BE1                                     u2085 14A2  
                                   u2325 0BED                                     u2405 0985  
                                   u2095 14AA                                     u2415 0990  
                                   u3225 08C5                                     u3145 0A2A  
                                   u2505 1663                                     u3235 08E0  
                                   u2605 1153                                     u2285 0BC1  
                                   u2385 096C                                     u2705 17D9  
                                   u2475 164D                                     u2715 17E3  
                                   u2725 17EB                                     u2495 165C  
                                   u5215 081E                                     u5225 1222  
                                   u2835 0DA0                                     u2755 0F97  
                                   _PMD0 0796                                     u2845 0DB4  
                                   u2765 0FE4                                     u2685 17CF  
                                   _PMD1 0797                                     u5510 0CA7  
                                   _PMD2 0798                                     u1975 119F  
                                   u2935 072D                                     _PMD3 0799  
                                   _PMD4 079A                                     u1985 11A4  
                                   _PMD5 079B                                     u2885 069F  
                                   u2975 0752                                     u5527 0CBC  
                                   u5537 0CFE                                     u5547 0D85  
                                   u5557 10C2                                     u5567 1FCD  
                                   u5577 0A9A                                     u5587 0AA9  
                   ?_do_I2C_SEND_RESTART 0070                __end_of_rtc6_SetComponent 083A  
                                   _WPUA 0F39                                     _WPUB 0F44  
                                   _WPUC 0F4F                                     _WPUD 0F5A  
                                   _WPUE 0F65                  ??_wr2RegCompleteHandler 002A  
                           __CFG_WRT$OFF 0000                            __CFG_FCMEN$ON 0000  
      __size_of_do_I2C_SEND_RESTART_READ 0008                      ?i1_i2c1_driver_stop 0070  
              ?_do_I2C_SEND_RESTART_READ 0070                              main@setTime 00BE  
                                   _main 0C96                __size_of_do_I2C_SEND_STOP 0008  
                 __size_of_do_I2C_DO_ACK 0008                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
                            main@timeStr 00B2                    __size_of_Write_String 002F  
                      ??i1_do_I2C_DO_ACK 0070                            __CFG_BOREN$ON 0000  
                i1_i2c1_driver_getRXData 1E71                    ?_do_I2C_SEND_ADR_READ 0070  
        ??_i2c1_driver_clearBusCollision 0070                                     start 0022  
                          _i2c_setBuffer 10C6                            __CFG_CSWEN$ON 0000  
                      ___bmul@multiplier 0023                            __CFG_MCLRE$ON 0000  
                        __end_of_i2c_ISR 1362                           ?_years_to_days 002E  
       __size_of_rdBlkRegCompleteHandler 001D                 ??_do_I2C_DO_NACK_RESTART 0020  
                     __size_of_OLED_Data 000A                            i1_do_I2C_IDLE 1EC7  
              __size_of_mssp1_disableIRQ 0003                            i1_do_I2C_RCEN 1ECC  
                           _do_I2C_RESET 1FB0                           i1returnReset@p 0079  
                 _i2c_write1ByteRegister 141C           __size_of_OSCILLATOR_Initialize 0009  
            i2c_setAddressNACKCallback@p 0027            __end_of_OSCILLATOR_Initialize 1F6A  
                   ??i1_i2c1_driver_stop 0070                          __end_of___aldiv 0C0E  
                        __end_of___almod 09B1                 __end_of_i2c1_driver_open 1F9B  
                                  ?_main 0070                   __size_of_ymd_to_scalar 0057  
                        __end_of___awdiv 1800                 __end_of_i2c1_driver_stop 1E89  
                          __CFG_WDTE$OFF 0000                          __end_of___awmod 1678  
                        ___awdiv@divisor 0020               __end_of_i2c1_driver_TXData 1EF0  
                         __CFG_DEBUG$OFF 0000                          __end_of___lwdiv 14B7  
                                  i1l314 1541                          __end_of___lwmod 138F  
                                  i1l633 001D                                    i1l298 16A3  
                                  i1l628 0015                          ___awdiv@counter 0025  
                                  _OSCEN 0891                                    _TRISA 0011  
                                  _TRISB 0012                                    _TRISC 0013  
                                  _TRISD 0014                                    _TRISE 0015  
                    ___lmul@multiplicand 0024                             ?_OLED_SetRow 0070  
                            i2c_open@ret 0024                        ??_OLED_PutPicture 0026  
                     __size_ofi1_i2c_ISR 0026                             _Write_String 13BD  
             __end_of_i2c1_driver_isNACK 1F73                          __end_of_dpowers 186B  
                                  _dylen 14B7                          __end_of_isdigit 1073  
           ?i1_do_I2C_SEND_RESTART_WRITE 0070               ?_do_I2C_SEND_RESTART_WRITE 0070  
                  ??_do_I2C_SEND_RESTART 0020                    _i2c_read1ByteRegister 1710  
                      ?i1_mssp1_clearIRQ 0070   __end_of_i2c1_driver_setBusCollisionISR 1EF6  
__size_of_i2c1_driver_setBusCollisionISR 0006           _i2c1_driver_setBusCollisionISR 1EF0  
                        __end_of_moninit 1861                                    pclath 000A  
                    Write_String@message 0053                  __size_of_mssp1_clearIRQ 0003  
                   i1_i2c1_driver_TXData 1EC2                         ymd_to_scalar@day 0044  
              i2c_write1ByteRegister@reg 002A                   ?_do_I2C_SEND_ADR_WRITE 0070  
                                  status 0003                       ??i1_mssp1_clearIRQ 0070  
                                  wtemp0 007E                          __end_of_sprintf 07EE  
                          ??_Modify_Data 002C                          years_to_days@yr 002E  
                         ?_i2c_setBuffer 0020                             ?_setCallBack 0020  
                   i1_i2c1_driver_isNACK 1F11                            _fsmStateTable 1800  
                        __initialization 0024           __size_ofi1_do_I2C_SEND_RESTART 0004  
                             _i2c_poller 1FD1            __end_ofi1_do_I2C_SEND_RESTART 1EA6  
                      _SPI2_Exchange8bit 1FE8                               _i2c_status 00C7  
                         ?i1_do_I2C_IDLE 0070                             __end_of_main 0D8D  
                         ?i1_do_I2C_RCEN 0070               __end_ofi1_do_I2C_SEND_STOP 1EAA  
                       __end_of_i2c_open 1710                       ?_SPI2_Exchange8bit 0070  
            ?_INTERRUPT_InterruptManager 0070                            rtc6_SetTime@t 004C  
        __end_ofi1_rd2RegCompleteHandler 10B3                      __size_of_OLED_Clear 0059  
                          setCallBack@cb 0020                           i1_do_I2C_RESET 1EFC  
                          _do_I2C_DO_ACK 1F49                                   ??_main 0066  
                          _do_I2C_TX$723 0022                        ?_i2c_restartWrite 0029  
        __end_ofi1_wr2RegCompleteHandler 1083                       OLED_PutPicture@pic 0024  
          __size_of_i2c1_driver_sendNACK 0004                             i2c_close@ret 0021  
               __size_of_SPI2_Initialize 0006                      ??_SPI2_Exchange8bit 0020  
                     ??_i2c_restartWrite 002A            __size_of_i2c1_driver_resetBus 0001  
                ?_do_I2C_DO_ADDRESS_NACK 0070                                   ?_dylen 0034  
                       ___awdiv@dividend 0022          i1i2c_setDataCompleteCallback@cb 0075  
                                 _ANSELA 0F38                                   _ANSELB 0F43  
                                 _ANSELC 0F4E                                   _ANSELD 0F59  
                      __end_of_OLED_Data 1F7D                                   _ANSELE 0F64  
                     __CFG_RSTOSC$HFINT1 0000                  ?i1_do_I2C_SEND_ADR_READ 0070  
                  ?i1_i2c1_driver_TXData 0070                                   _RB1PPS 0F19  
                         rtcc_write@addr 0031                                   _RB3PPS 0F1B  
                                 _RC3PPS 0F23                           rtcc_write@data 002E  
                                 _RC4PPS 0F24                                   _ODCONA 0F3A  
                                 _ODCONB 0F45                                   _ODCONC 0F50  
                                 _ODCOND 0F5B                                   _ODCONE 0F66  
                                 i1l4204 1E5E                                   i1l4212 0002  
                                 i1l4240 1073                                   i1l4208 1E60  
                                 i1l4216 1083                                   i1l4224 1093  
                                 i1l4232 10A3                                   i1l4180 1EA2  
                                 i1l4174 1E9E                                   i1l4248 1133  
                                 i1l4168 1E9A                                   i1l4600 1F19  
                                 i1l4192 1EAE                                   i1l4186 1EA6  
                                 i1l7002 16BC                                   i1l7020 1543  
                                 i1l4198 1EB2                                   i1l7030 1549  
                                 i1l7006 1527                                   i1l7102 12CC  
                                 i1l7032 12E2                                   i1l4608 1F03  
                                 i1l4616 1ECC                                   i1l4624 1EAA  
                                 i1l7024 1546                           __CFG_WDTCCS$SC 0000  
                                 i1l7034 12E5                                   i1l7050 12EF  
                                 i1l7044 12EC                                   i1l7038 12E8  
                                 i1l4582 1EFC                                   i1l3792 1265  
                                 i1l4592 1EC7                                   i1l7094 12BC  
              ??i1_i2c1_driver_getRXData 0070               __size_of_rtc6_SetComponent 0039  
                                 i1l6960 122C                                   i1l6964 1233  
                                 i1l6980 167E                                   i1l6974 1239  
                                 i1l6968 1236                                   i1l6984 1681  
                                 i1l6976 1678                                   i1l6994 1687  
                                 i1l6988 1684            ??i1_do_I2C_SEND_RESTART_WRITE 0070  
                     __size_of_i2c_close 001B                                   _OSCFRQ 0893  
                          ?_OLED_Command 0070                  i1_rd1RegCompleteHandler 1093  
                          _ymd_to_scalar 083A                   ??_do_I2C_SEND_ADR_READ 0021  
                                 _STATUS 0003                 rdBlkRegCompleteHandler@p 0029  
                              ??_i2c_ISR 0024                  i1_wr1RegCompleteHandler 1083  
                       rtc6_SetTime@tm_t 0053              ??i1_rdBlkRegCompleteHandler 007A  
                     rtc6_Initialize@reg 0035                    ?i1_i2c1_driver_isNACK 0070  
                         __CFG_PWRTE$OFF 0000                          ??_years_to_days 0032  
              __end_of_SPI2_Exchange8bit 1FF4                    _i2c1_driver_getRXData 1E8C  
                    _do_I2C_RX$intlevel0 15F0                                   ___bmul 07EE  
                  __size_ofi1_returnStop 0002              __end_of_do_I2C_DO_NACK_STOP 1F59  
                      __end_ofi1_i2c_ISR 12E2      __end_of_i2c_setDataCompleteCallback 103A  
            _i2c_setDataCompleteCallback 102D                                   ___lmul 13EC  
                              ??___aldiv 0028                                ??___almod 0028  
                                 ___wmul 1195                          _i2c_masterWrite 1EBE  
                    __end_of_Modify_Data 0A92                                ??___awdiv 0024  
  __end_of_i2c1_driver_clearBusCollision 1E65   __size_of_i2c1_driver_clearBusCollision 0003  
          _i2c1_driver_clearBusCollision 1E62                           __CFG_STVREN$ON 0000  
                              ??___awmod 0024          __size_of_do_I2C_DO_NACK_RESTART 0008  
                              ??___lwdiv 002A                                ??___lwmod 0032  
                 __end_ofi1_do_I2C_RESET 1F03                          i1_i2c_setBuffer 1047  
                                 _gmtime 0EAE                                   _memset 1161  
                                 _isleap 144E                              OLED_Clear@i 002F  
                            OLED_Clear@j 002C                         ___awdiv@quotient 0027  
                         ?_do_I2C_DO_ACK 0070                                   _mktime 0D8D  
                        ___awmod@divisor 0020                                   _lookup 0449  
            __size_ofi1_i2c_restartWrite 0002                          ___awmod@counter 0025  
                                 _strlen 11CE                 rtc6_GetComponent@working 0038  
                 i2c1_driver_setI2cISR@f 0020                             __pdataBIGRAM 21B1  
            __end_of_i2c1_driver_sendACK 1EBA                           _PMD_Initialize 1F21  
         __end_of_do_I2C_DO_ADDRESS_NACK 1335                                ??_isdigit 0020  
             i2c_write1ByteRegister@data 002B              ?_i2c_setAddressNACKCallback 0025  
            __end_of_i2c1_driver_restart 1E86                             ?_returnReset 0029  
          _do_I2C_DO_NACK_STOP$intlevel0 1F55               i1rdBlkRegCompleteHandler@p 0079  
                  _i2c1_driver_setI2cISR 1EF6              __end_of_i2c1_driver_startRX 1E8C  
                 ?_i2c_read1ByteRegister 002A        __size_ofi1_do_I2C_DO_ADDRESS_NACK 0023  
         __end_ofi1_do_I2C_SEND_ADR_READ 1F21                            ?_rtc6_GetTime 005F  
              ?i1_do_I2C_DO_ADDRESS_NACK 0070                                ??_sprintf 0044  
                            localtime@tp 004B                           ??_OLED_Command 0021  
                      i1_do_I2C_TX_EMPTY 12E2                           ?_ymd_to_scalar 0040  
                      _SYSTEM_Initialize 1055                  __end_of__initialization 006A  
                          ?_rtc6_SetTime 004C                          ??_i2c_setBuffer 0022  
         _do_I2C_SEND_ADR_READ$intlevel0 1FF8                         _do_I2C_SEND_STOP 1F41  
                           i1_returnStop 1E5E                    i1_do_I2C_DO_NACK_STOP 1EAE  
                     __size_of_do_I2C_RX 0046                       __size_of_do_I2C_TX 0050  
                     ?i1_do_I2C_TX_EMPTY 0070                       ?_SYSTEM_Initialize 0070  
             __end_of_mssp1_IRQisEnabled 1F11        _rdBlkRegCompleteHandler$intlevel0 11B5  
                    _i2c_masterOperation 1273                 __size_of_do_I2C_TX_EMPTY 002E  
                    ___bmul@multiplicand 0020                          ??i1_do_I2C_IDLE 0070  
                        ??i1_do_I2C_RCEN 0070                  _rdBlkRegCompleteHandler 11B1  
             __end_of_mssp1_waitForEvent 1FD1                              ?_i2c_poller 0070  
                        _OLED_Initialize 0A92                           __pcstackCOMMON 0070  
             ??i1_do_I2C_DO_NACK_RESTART 0070                      _do_I2C_TX$intlevel0 1762  
                    ??i1_do_I2C_TX_EMPTY 0070                             __pidataBANK1 1021  
                    ??_SYSTEM_Initialize 0036                         _mssp1_disableIRQ 1E7D  
                  i1_i2c1_driver_sendACK 1E92                            __end_of_dylen 14EE  
                  i1i2c1_driver_TXData@d 0070                          ?i1_do_I2C_RESET 0070  
                  i1_i2c1_driver_restart 1E68                   __end_of_PMD_Initialize 1F29  
                      __end_of_i2c_close 1195                             ?i1_do_I2C_RX 0070  
                           ?i1_do_I2C_TX 0070                    i1_i2c1_driver_startRX 1E6E  
                       ??i1_mssp1_setIRQ 0070                      i1i2c_restartWrite@p 0079  
              i1_rdBlkRegCompleteHandler 1133                     ?_i2c_masterOperation 0070  
         i1i2c_setDataCompleteCallback@p 0077             ??i1_do_I2C_SEND_RESTART_READ 0070  
                __size_of_months_to_days 001F                   __size_ofi1_setCallBack 0024  
                        i1setCallBack@cb 0070                 i1rd1RegCompleteHandler@p 0079  
                        i1_do_I2C_DO_ACK 1EAA                           ??_rtc6_GetTime 0063  
                        i1_do_I2C_TX$723 0072                           setCallBack@idx 0024  
              __end_ofi1_do_I2C_TX_EMPTY 130B                   _do_I2C_DO_NACK_RESTART 1F59  
                 ??i1_i2c1_driver_TXData 0070                                  ??_dylen 0036  
              __end_of_SYSTEM_Initialize 1064                     __size_of_OLED_SetRow 000B  
              ??i1_rd1RegCompleteHandler 007A                             sprintf@width 0050  
                           ??_OLED_Clear 002A                        ??_SPI2_Initialize 0020  
                         _mssp1_clearIRQ 1E7A                               __pbssBANK0 006A  
                             __pbssBANK1 00C7                               __pbssBANK2 0120  
              ??i1_wr1RegCompleteHandler 007A                           ??_rtc6_SetTime 0050  
         __size_of_rd2RegCompleteHandler 0016                                ?_i2c_open 0070  
          __end_of_rd2RegCompleteHandler 1133                 ??i1_i2c1_driver_sendNACK 0070  
         __size_of_wr2RegCompleteHandler 0016                   ??i1_i2c1_driver_isNACK 0070  
       __size_ofi1_rd2RegCompleteHandler 0010            __end_of_wr2RegCompleteHandler 10F1  
                __end_of_i2c_masterWrite 1EC2                              _Modify_Data 0A21  
               i1wr1RegCompleteHandler@p 0079                    _rd1RegCompleteHandler 1107  
                 ?_i2c1_driver_getRXData 0070                 ??i1_i2c1_driver_resetBus 0070  
               __size_of_rtc6_Initialize 0059                  __end_ofi1_i2c_setBuffer 1055  
                     __size_of_localtime 0045               __size_of_SPI2_Exchange8bit 000C  
       __size_ofi1_wr2RegCompleteHandler 0010                    _do_I2C_IDLE$intlevel0 1004  
                  _wr1RegCompleteHandler 10F1                           _SSP1DATPPSbits 0EC6  
           __size_of_i2c_busCollisionISR 0003          _wr1RegCompleteHandler$intlevel0 10F5  
        _rd1RegCompleteHandler$intlevel0 110B                               __pmaintext 0C96  
                          ??_do_I2C_IDLE 0020                  ?_i2c_write1ByteRegister 002A  
                   __size_of_setCallBack 0025                            ??_do_I2C_RCEN 0020  
                                ?___bmul 0020                                  ?___lmul 0020  
                                ?___wmul 0020                          __CFG_PPS1WAY$ON 0000  
                        ??_do_I2C_DO_ACK 0020                               __pintentry 0004  
                        _OLED_PutPicture 14EE                                  ?_gmtime 0070  
                                ?_memset 0020                                  ?_isleap 0034  
                         ___lmul@product 0028                      i2c_setBuffer@buffer 0023  
                                ?_mktime 0050                           _SSP2DATPPSbits 0EC9  
                         _SSP1CLKPPSbits 0EC5                          ?_PMD_Initialize 0070  
                     __end_of_OLED_Clear 08EA           ?_i2c1_driver_clearBusCollision 0070  
                                ?_strlen 0020                    ??_i2c_masterOperation 0027  
                      ?_i2c1_driver_open 0070                        __end_of_do_I2C_RX 1632  
                      __end_of_do_I2C_TX 17AE                        ?_i2c1_driver_stop 0070  
               ?i1_do_I2C_SEND_ADR_WRITE 0070                       __size_of_rtcc_read 000A  
                 ?_i2c1_driver_setI2cISR 0020                       ??_i2c1_driver_open 0020  
                     ??_i2c1_driver_stop 0020                                  _OSCCON1 088D  
                                _OSCCON3 088F                            ?_mssp1_setIRQ 0070  
                         _SSP2CLKPPSbits 0EC8                                  _OSCTUNE 0892  
                                _SSP1ADD 018D                                  _SSP2ADD 0197  
                                _SSP1BUF 018C                   __end_of_mssp1_clearIRQ 1E7D  
                                _SSP2BUF 0196                                  _SSP1MSK 018E  
                    __size_of_i2c_poller 000B                          ??_ymd_to_scalar 0046  
                ??_do_I2C_SEND_ADR_WRITE 0021            i2c_write1ByteRegister@address 002D  
    _do_I2C_SEND_RESTART_WRITE$intlevel0 1F35              ??_do_I2C_SEND_RESTART_WRITE 0020  
                 ?i1_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_TXData 1EEA  
                             ??_i2c_open 0022                       _i2c1_driver_i2cISR 007A  
                __end_of_OLED_Initialize 0B0C                                  _i2c_ISR 1335  
              ??_rdBlkRegCompleteHandler 002A                               _emptyArray 006E  
         __end_of_i2c_write1ByteRegister 144E                    _returnReset$intlevel0 1EE2  
                  _do_I2C_RCEN$intlevel0 1F8B                            i1_setCallBack 124F  
                     _i2c1_driver_isNACK 1F6A                      ?_i2c1_driver_TXData 0070  
       _do_I2C_DO_ADDRESS_NACK$intlevel0 130F                   ?i1_i2c1_driver_sendACK 0070  
                   __CFG_SCANE$available 0000      __size_of_i2c_setAddressNACKCallback 000D  
                                ___aldiv 0B8C                          __size_of___bmul 0012  
                                ___almod 0943                   __size_ofi1_returnReset 0002  
                                ___awdiv 17AE                          __size_of___lmul 0030  
                                ___awmod 1632                __size_ofi1_mssp1_clearIRQ 0003  
                        __size_of___wmul 001C                                  ___lwdiv 1482  
                 ?i1_i2c1_driver_restart 0070                                  ___lwmod 1362  
                      ??_do_I2C_TX_EMPTY 0020                      ?_i2c1_driver_isNACK 0070  
                 ?i1_i2c1_driver_startRX 0070                          __size_of_gmtime 0152  
                        __size_of_memset 0019                          __size_of_isleap 0034  
                   __end_of_OLED_Command 1F87                  __end_ofi1_do_I2C_DO_ACK 1EAE  
                        __size_of_mktime 0121                                  __ptext1 0B0C  
                                __ptext2 0801                                  __ptext3 17AE  
                                __ptext4 15A7                                  __ptext5 0EAE  
                                __ptext6 14B7                                  __ptext7 1632  
                                __ptext8 0943                                  __ptext9 0B8C  
            __size_ofi1_i2c1_driver_stop 0003                      __end_of_do_I2C_IDLE 1009  
                    __end_of_do_I2C_RCEN 1F91                          __size_of_strlen 001F  
                                _dpowers 1861                    _OSCILLATOR_Initialize 1F61  
                                _isdigit 1064              __end_of_do_I2C_SEND_RESTART 1F41  
                         ??_mssp1_setIRQ 0020                         ___awmod@dividend 0022  
                           Modify_Data@c 0026                         ___aldiv@dividend 0024  
                           Modify_Data@j 0039                             Modify_Data@p 0037  
                   ??_i2c1_driver_TXData 0020                        __end_of_localtime 15EC  
                          mktime@timeptr 005E                 ??_PIN_MANAGER_Initialize 0020  
                                _moninit 1855                   i2c_masterOperation@ret 0029  
                     i1_do_I2C_SEND_STOP 1EA6                          ?_mssp1_clearIRQ 0070  
             _do_I2C_SEND_STOP$intlevel0 1F45               __size_ofi1_do_I2C_TX_EMPTY 0029  
               _do_I2C_SEND_RESTART_READ 1F29               __size_of_SYSTEM_Initialize 000F  
                i2c_read1ByteRegister@d2 0030                                  _sprintf 0624  
                                clrloop0 100A                     __size_of_returnReset 0006  
                   end_of_initialization 006A                     ??_i2c1_driver_isNACK 0020  
                __size_of_OLED_SetColumn 0017                                  dylen@yr 0034  
              __size_of_i2c_restartWrite 0006                                  init_ram 1015  
                                memset@c 0022             __end_of_i2c1_driver_sendNACK 1EBE  
                    ?i1_do_I2C_SEND_STOP 0070                                  memset@n 0024  
                                memset@p 0026                   ?_rd1RegCompleteHandler 0029  
                                initloop 1016          __size_ofi1_i2c1_driver_sendNACK 0004  
                         main@welcomeMsg 00B2                                _OLED_Data 1F73  
                       ?_i2c_masterWrite 0070                   ?_wr1RegCompleteHandler 0029  
           __end_of_i2c1_driver_resetBus 0801                           ?i1_setCallBack 0070  
                __end_of_OLED_PutPicture 1527                        __end_of_rtcc_read 1FA5  
                       ?i1_i2c_setBuffer 0070          __size_ofi1_i2c1_driver_resetBus 0001  
                       ___aldiv@quotient 002B                     __end_of_rtc6_GetTime 0C96  
              _do_I2C_SEND_RESTART_WRITE 1F31                               main@F15397 00E4  
                      ??_rtc6_Initialize 0033                    i1_do_I2C_SEND_RESTART 1EA2  
       __end_ofi1_do_I2C_DO_ADDRESS_NACK 124F          __end_ofi1_do_I2C_SEND_ADR_WRITE 1F0A  
                  __CFG_WDTCPS$WDTCPS_31 0000                                  strlen@s 0020  
                              i1_i2c_ISR 12BC                     ??i1_do_I2C_SEND_STOP 0070  
                           _displayArray 21B1                     __end_of_rtc6_SetTime 0B8C  
                             _returnStop 1ED8          __end_of_rdBlkRegCompleteHandler 11CE  
               __end_of_do_I2C_SEND_STOP 1F49       __end_ofi1_do_I2C_SEND_RESTART_READ 1E9E  
             i1_do_I2C_SEND_RESTART_READ 1E9A                               _rtcc_write 10B3  
                ??_i2c_read1ByteRegister 002B                     __size_ofi1_do_I2C_RX 003E  
                   __size_ofi1_do_I2C_TX 004A                           _months_to_days 11ED  
                             asctime@buf 012E     __size_of_i2c_setDataCompleteCallback 000D  
                          i1_returnReset 1E60                              returnStop@p 0029  
                       __CFG_FEXTOSC$OFF 0000                 __end_of_mssp1_disableIRQ 1E80  
     __size_ofi1_rdBlkRegCompleteHandler 0017             i2c_setDataCompleteCallback@p 0027  
                     OLED_SetRow@address 0023                  i1_rd2RegCompleteHandler 10A3  
                       ?_OLED_Initialize 0070                               ?_OLED_Data 0070  
                i1_wr2RegCompleteHandler 1073                    SPI2_Exchange8bit@data 0020  
          __size_of_do_I2C_SEND_ADR_READ 000C                         ??i1_do_I2C_RESET 0070  
                           ??_i2c_poller 0027                    __end_of_years_to_days 0A21  
                            _do_I2C_IDLE 1000                         OLED_PutPicture@i 0028  
                       OLED_PutPicture@j 0026                              _do_I2C_RCEN 1F87  
             __end_ofi1_i2c_restartWrite 0004                           __end_of___bmul 0800  
                         __end_of___lmul 141C                            __pidataBIGRAM 026E  
                         __end_of___wmul 11B1                               ?i1_i2c_ISR 0070  
                     _mssp1_IRQisEnabled 1F0A                   i1_i2c1_driver_sendNACK 1E96  
                       ?i1_do_I2C_DO_ACK 0070                           __end_of_gmtime 1000  
                 ?_OSCILLATOR_Initialize 0070                           __end_of_memset 117A  
                         __end_of_isleap 1482                   __end_of_months_to_days 120C  
                        _SPI2_Initialize 1ED2                           __end_of_mktime 0EAE  
           __size_of_do_I2C_DO_NACK_STOP 0008                           __end_of_lookup 0624  
                        ymd_to_scalar@mo 0042                          ymd_to_scalar@yr 0040  
                     _mssp1_waitForEvent 1FC6                   i1_i2c1_driver_resetBus 1E5D  
                         __end_of_strlen 11ED                  ?_do_I2C_DO_NACK_RESTART 0070  
                    start_initialization 0024                                _i2c_close 117A  
                    _i2c_busCollisionISR 1E65          __size_of_PIN_MANAGER_Initialize 0042  
                    ?_mssp1_IRQisEnabled 0070                           ?i1_returnReset 0079  
               ?i1_i2c1_driver_getRXData 0070      __end_ofi1_do_I2C_SEND_RESTART_WRITE 1EA2  
            i1_do_I2C_SEND_RESTART_WRITE 1E9E                      ?_mssp1_waitForEvent 0070  
                           setCallBack@p 0022                       __end_of_i2c_poller 1FDC  
           __size_of_i2c1_driver_sendACK 0004                          i2c_open@address 0023  
                i2c_setBuffer@bufferSize 0020                  ??_i2c1_driver_getRXData 0020  
                      _rtc6_GetComponent 120C                   rd1RegCompleteHandler@p 0029  
           __size_of_i2c1_driver_restart 0003                          ??i1_setCallBack 0073  
           __size_of_i2c1_driver_startRX 0003                             ?_Modify_Data 0026  
                     ?_rtc6_GetComponent 0033                    __end_of_i2c_setBuffer 10DB  
                      __size_of_i2c_open 004E    __end_ofi1_i2c_setDataCompleteCallback 1FE8  
 __size_ofi1_i2c_setDataCompleteCallback 000C            i1_i2c_setDataCompleteCallback 1FDC  
                       ?_OLED_PutPicture 0024                     ?_i2c_busCollisionISR 0070  
                       __CFG_LPBOREN$OFF 0000                     __end_of_mssp1_setIRQ 1E92  
                   ??_mssp1_IRQisEnabled 0020                         i1setCallBack@idx 0074  
                  __size_of_OLED_Command 000A                                 ??___bmul 0021  
                       ??_PMD_Initialize 0020                    __end_ofi1_do_I2C_IDLE 1ECC  
                               ??___lmul 0028             i2c_read1ByteRegister@address 002C  
                  __end_ofi1_do_I2C_RCEN 1ED2                i1i2c_setBuffer@bufferSize 0070  
                               ??___wmul 0024                   ?i1_do_I2C_SEND_RESTART 0070  
                    ??_rtc6_GetComponent 0034                     ??_mssp1_waitForEvent 0020  
                       i1_mssp1_clearIRQ 1E77                   wr1RegCompleteHandler@p 0029  
                          ?_do_I2C_RESET 0070                              __pdataBANK1 00E4  
                               ??_gmtime 0038                                 ??_memset 0026  
                               ??_isleap 0036                _do_I2C_TX_EMPTY$intlevel0 1393  
                               ??_mktime 0054                              ?_returnStop 0029  
                ??_i2c1_driver_setI2cISR 0022                                 ??_strlen 0022  
         __end_of_do_I2C_DO_NACK_RESTART 1F61                              ?_rtcc_write 002E  
                        ?_months_to_days 002E                               localtime@t 0047  
                   _i2c1_driver_sendNACK 1EBA                              __pbssBIGRAM 238C  
               i1_do_I2C_DO_ADDRESS_NACK 122C                            ??_OLED_SetRow 0022  
                            __pbssCOMMON 007A                               ?_i2c_close 0070  
                              ___latbits 0002                     _i2c1_driver_resetBus 0800  
                          __pcstackBANK0 0020                            __pcstackBANK1 00A0  
      __size_ofi1_do_I2C_DO_NACK_RESTART 0004                 i1rd2RegCompleteHandler@p 0079  
                              _do_I2C_RX 15EC                ?i1_do_I2C_DO_NACK_RESTART 0070  
                              _do_I2C_TX 175E                            ?_Write_String 0053  
                ??i1_do_I2C_DO_NACK_STOP 0070                             _isdigit$2028 0020  
              ??i1_rd2RegCompleteHandler 007A                __end_of_rtc6_GetComponent 122C  
                         _OLED_SetColumn 114A           __size_of_do_I2C_SEND_ADR_WRITE 000B  
              ??i1_wr2RegCompleteHandler 007A            __size_ofi1_i2c1_driver_TXData 0005  
          __end_of_do_I2C_SEND_ADR_WRITE 1FC6                           i1setCallBack@p 0072  
                       _i2c_restartWrite 1EE4                              sprintf@flag 004F  
             _i2c_restartWrite$intlevel0 1EE8                             _OLED_Command 1F7D  
              __size_of_i2c1_driver_open 000A                __size_of_i2c1_driver_stop 0003  
                            sprintf@prec 004A                                 ?_i2c_ISR 0070  
        _do_I2C_SEND_ADR_WRITE$intlevel0 1FBF         __size_ofi1_do_I2C_SEND_ADR_WRITE 0007  
                            ??_OLED_Data 0021                          _do_I2C_TX_EMPTY 138F  
                          ??_setCallBack 0023                    __size_of_rtc6_GetTime 0088  
                  OLED_SetColumn@address 0023                 i1wr2RegCompleteHandler@p 0079  
                ??i1_i2c1_driver_sendACK 0070                    _rd2RegCompleteHandler 111D  
                  ??_i2c_busCollisionISR 0070                    __end_of_fsmStateTable 1820  
          __size_ofi1_i2c1_driver_isNACK 0008                         ___lwdiv@dividend 0028  
                 _PIN_MANAGER_Initialize 1565                    _wr2RegCompleteHandler 10DB  
                ??i1_i2c1_driver_restart 0070                  ??i1_i2c1_driver_startRX 0070  
                  __size_of_rtc6_SetTime 0080                                 ?___aldiv 0020  
                __end_of_SPI2_Initialize 1ED8                                 ?___almod 0020  
                         ??_do_I2C_RESET 0020                                 ?___awdiv 0020  
                              __ptext100 1E77                                __ptext101 1527  
                              __ptext110 1EA6                                __ptext102 1678  
                              __ptext111 1EA2                                __ptext103 122C  
                              __ptext120 1E71                                __ptext112 1E9E  
                              __ptext104 1EB2                                __ptext121 1E96  
                              __ptext113 1E9A                                __ptext105 1EAE  
                              __ptext130 1E5E                                __ptext122 1E5D  
                              __ptext114 1EC7                                __ptext106 1EAA  
                              __ptext131 1073                                __ptext123 1E6E  
                              __ptext115 1EFC                                __ptext107 1ECC  
                              __ptext132 1FDC                                __ptext124 1133  
                              __ptext116 12E2                                __ptext108 1F03  
                              __ptext133 124F                                __ptext125 10A3  
                              __ptext117 1E74                                __ptext109 1F19  
                              __ptext134 1047                                __ptext126 1093  
                              __ptext118 1F11                                __ptext135 1E6B  
                              __ptext127 1083                                __ptext119 1EC2  
                              __ptext136 1E68                                __ptext128 0002  
                              __ptext137 1E92                                __ptext129 1E60  
                              __ptext138 1E65                                __ptext139 1E62  
                               ?___awmod 0020              __end_of_i2c_masterOperation 1297  
                               ?___lwdiv 0026                 ??_do_I2C_DO_ADDRESS_NACK 0020  
                               ?___lwmod 002E              _i2c1_driver_busCollisionISR 007C  
                  __end_of_do_I2C_DO_ACK 1F51                              ??i1_i2c_ISR 0074  
           ??_INTERRUPT_InterruptManager 0077                         ___almod@dividend 0024  
             ??_do_I2C_SEND_RESTART_READ 0020                    ?_i2c1_driver_sendNACK 0070  
        __end_ofi1_i2c1_driver_getRXData 1E74                 ??i1_do_I2C_SEND_ADR_READ 0071  
                       ??_mssp1_clearIRQ 0020                          ??i1_returnReset 007A  
                               ?_isdigit 0070                    ?_i2c1_driver_resetBus 0070  
               ?i1_rd1RegCompleteHandler 0079       __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                         ??_Write_String 0055                 ?i1_wr1RegCompleteHandler 0079  
                             ?_do_I2C_RX 0070                               ?_do_I2C_TX 0070  
                       ___lwdiv@quotient 002B                   __end_of_OLED_SetColumn 1161  
                      _i2c1_driver_start 1E80                                 ?_sprintf 0034  
                           _rtc6_GetTime 0C0E                           __size_of_dylen 0037  
                ??_rd1RegCompleteHandler 002A                                _localtime 15A7  
                __size_ofi1_mssp1_setIRQ 0003                        _i2c_ISR$intlevel0 1339  
                     ?_i2c1_driver_start 0070                      __end_of_OLED_SetRow 1FB0  
                  __end_of_ymd_to_scalar 0891                  ??_wr1RegCompleteHandler 002A  
                        ___aldiv@divisor 0020                          ___aldiv@counter 0029  
                         ___wmul@product 0024                             _rtc6_SetTime 0B0C  
                 i2c_read1ByteRegister@e 002D                                 _LATAbits 0016  
                 i2c_read1ByteRegister@x 002E                                 _LATCbits 0018  
                               _LATDbits 0019                          _rtc6_Initialize 08EA  
                    __size_of_returnStop 0006                                clear_ram0 1009  
                               _PIE3bits 0719                      __size_of_rtcc_write 0013  
                    ??_i2c1_driver_start 0020      __size_of_INTERRUPT_InterruptManager 001E  
                               _PIR3bits 070F                                 _SSP1CON1 0190  
                               _SSP1CON2 0191                                 _SSP2CON1 019A  
                              _time_zone 006E             ?_i2c_setDataCompleteCallback 0025  
         ?i1_i2c_setDataCompleteCallback 0075                                _rtcc_read 1F9B  
                               _SSP1STAT 018F                                 _SSP2STAT 0199  
                    __end_of_setCallBack 12BC               __end_ofi1_i2c1_driver_stop 1E6E  
                      ___wmul@multiplier 0020             i2c_setAddressNACKCallback@cb 0025  
                        Write_String@len 0055                        ?_do_I2C_SEND_STOP 0070  
            ?i1_do_I2C_SEND_RESTART_READ 0070                           _CharacterArray 238C  
                            ??_i2c_close 0020                __end_of_i2c1_driver_start 1E83  
                          ??_returnReset 002A                       ??_do_I2C_SEND_STOP 0020  
            __size_of_i2c1_driver_TXData 0006           __size_of_i2c_read1ByteRegister 004E  
           ??_i2c_setAddressNACKCallback 0028            __end_of_i2c_read1ByteRegister 175E  
      __end_of_do_I2C_SEND_RESTART_WRITE 1F39                        Modify_Data@offset 0028  
                __end_of_do_I2C_TX_EMPTY 13BD                          ?_OLED_SetColumn 0070  
             __size_of_rtc6_GetComponent 0020                        ___lmul@multiplier 0020  
                  rtc6_GetComponent@mask 0033                    rtc6_SetComponent@mask 0033  
                             ?_localtime 0070                 ?_rdBlkRegCompleteHandler 0029  
                  rtc6_SetComponent@time 0034                        ?_mssp1_disableIRQ 0070  
           __size_of_do_I2C_SEND_RESTART 0008              __size_of_i2c1_driver_isNACK 0009  
                _do_I2C_DO_ACK$intlevel0 1F4D                                 _i2c_open 16C2  
                          ?i1_returnStop 0079                    __size_of_mssp1_setIRQ 0003  
                       rtc6_GetTime@tm_t 00A0                       ??_mssp1_disableIRQ 0020  
                 ?_rd2RegCompleteHandler 0029                      _do_I2C_DO_NACK_STOP 1F51  
                       __size_of_i2c_ISR 002D                   ?_wr2RegCompleteHandler 0029  
        _wr2RegCompleteHandler$intlevel0 10DF          _rd2RegCompleteHandler$intlevel0 1121  
                              gmtime@tim 0149                     __size_of_Modify_Data 0071  
                           ?_do_I2C_IDLE 0070                             ?_do_I2C_RCEN 0070  
                       ?_SPI2_Initialize 0070                  ?i1_i2c1_driver_sendNACK 0070  
                ??_OSCILLATOR_Initialize 0020                               ?_rtcc_read 0070  
                       __size_of___aldiv 0082                         __size_of___almod 006E  
                    _i2c1_driver_sendACK 1EB6                 __size_of_i2c_masterWrite 0004  
                       __size_of___awdiv 0052                         __size_of___awmod 0046  
        __size_of_do_I2C_DO_ADDRESS_NACK 002A                      i2c1_driver_TXData@d 0020  
                  i1i2c_setBuffer@buffer 0073                         __size_of___lwdiv 0035  
                 ??_i2c1_driver_sendNACK 0020                         __size_of___lwmod 002D  
          ??_i2c_setDataCompleteCallback 0028          __end_ofi1_rd1RegCompleteHandler 10A3  
                ?i1_i2c1_driver_resetBus 0070                 __size_ofi1_i2c_setBuffer 000E  
       ??_i2c1_driver_setBusCollisionISR 0022          ?_i2c1_driver_setBusCollisionISR 0020  
                          ??i1_do_I2C_RX 0070                            ??i1_do_I2C_TX 0071  
     _do_I2C_SEND_RESTART_READ$intlevel0 1F2D                      _i2c1_driver_restart 1E83  
            __size_ofi1_do_I2C_SEND_STOP 0004          __end_ofi1_wr1RegCompleteHandler 1093  
                   ?_do_I2C_DO_NACK_STOP 0070                      _i2c1_driver_startRX 1E89  
           __end_of_do_I2C_SEND_ADR_READ 2000                   ??_i2c1_driver_resetBus 0020  
                            _isleap$2096 0038          __size_ofi1_do_I2C_SEND_ADR_READ 0008  
                             sprintf@len 004B                               sprintf@val 004D  
                               _dateTime 0120                         __size_of_isdigit 000F  
                            _OLED_SetRow 1FA5                       i1_i2c_restartWrite 0002  
                        ___lwdiv@divisor 0026                             _mssp1_setIRQ 1E8F  
                            ??_do_I2C_RX 0020                              ??_do_I2C_TX 0021  
                     __end_of_emptyArray 0249                          ___lwdiv@counter 002D  
                               __ptext10 0C0E                                 __ptext11 120C  
                               __ptext20 13BD                                 __ptext12 07EE  
                               __ptext21 11CE                                 __ptext13 0D8D  
                               __ptext30 10B3                                 __ptext22 0624  
                               __ptext14 083A                                 __ptext31 141C  
                               __ptext23 1064                                 __ptext15 09B1  
                               __ptext40 1273                                 __ptext32 1F9B  
                               __ptext24 1362                                 __ptext16 13EC  
                               __ptext41 1F0A                                 __ptext33 1710  
                               __ptext25 1482                                 __ptext17 11ED  
                               __ptext50 1F49                                 __ptext42 1FD1  
                               __ptext34 103A                                 __ptext26 0A21  
                               __ptext18 144E                                 __ptext51 1F87  
                               __ptext43 1FC6                                 __ptext35 16C2  
                               __ptext27 1195                                 __ptext19 1161  
                               __ptext60 138F                                 __ptext52 1FBB  
                               __ptext44 1335                                 __ptext36 1EF6  
                               __ptext28 1055                                 __ptext61 1E8F  
                               __ptext53 1FF4                                 __ptext45 15EC  
                               __ptext37 1EF0                                 __ptext29 08EA  
                               __ptext70 1107                                 __ptext62 1F6A  
                               __ptext54 1F41                                 __ptext46 175E  
                               __ptext38 1F91                                 __ptext71 10F1  
                               __ptext63 1EEA                                 __ptext55 1F39  
                               __ptext47 130B                                 __ptext39 1EBE  
                               __ptext80 1E83                                 __ptext72 1EE4  
                               __ptext64 1E8C                                 __ptext56 1F31  
                               __ptext48 1F59                                 __ptext81 1EB6  
                               __ptext73 1EDE                                 __ptext65 1EBA  
                               __ptext57 1F29                                 __ptext49 1F51  
                               __ptext90 0A92                                 __ptext82 1E80  
                               __ptext74 1ED8                                 __ptext66 0800  
                               __ptext58 1000                                 __ptext91 0891  
                               __ptext83 117A                                 __ptext75 10DB  
                               __ptext67 1E89                                 __ptext59 1FB0  
                               __ptext92 14EE                                 __ptext84 1E7D  
                               __ptext76 102D                                 __ptext68 11B1  
                               __ptext93 1FA5                                 __ptext85 1E7A  
                               __ptext77 1297                                 __ptext69 111D  
                               __ptext94 114A                                 __ptext86 1ED2  
                               __ptext78 10C6                                 __ptext95 1F7D  
                               __ptext87 1F21                                 __ptext79 1E86  
                               __ptext96 1F73                                 __ptext88 1565  
                               __ptext97 1FE8                                 __ptext89 1F61  
                               __ptext99 12BC                             _SSP1CON1bits 0190  
                           _SSP1CON2bits 0191                  __end_of_rtc6_Initialize 0943  
               __end_ofi1_mssp1_clearIRQ 1E7A                             _SSP2CON1bits 019A  
                   ?_i2c1_driver_sendACK 0070                     __end_of_do_I2C_RESET 1FBB  
                        ___almod@divisor 0020                         __size_of_sprintf 01CA  
                        ___almod@counter 0029                 ??_i2c_write1ByteRegister 002C  
                         ??i1_returnStop 007A                            OLED_Data@temp 0021  
                       OLED_Clear@j_1658 002D                  i1_do_I2C_SEND_ADR_WRITE 1F03  
                    ?i1_i2c_restartWrite 0079                     ?_i2c1_driver_restart 0070  
                    __end_of_returnReset 1EE4                         _i2c1_driver_open 1F91  
                       _i2c1_driver_stop 1E86                            __size_of_main 00F7  
                   ?_i2c1_driver_startRX 0070           __size_of_i2c1_driver_getRXData 0003  
          __end_of_i2c1_driver_getRXData 1E8F                     __CFG_WDTCWS$WDTCWS_7 0000  
                            _setCallBack 1297                  ??i1_do_I2C_SEND_RESTART 0070  
       __size_ofi1_i2c1_driver_getRXData 0003                  i2c_masterOperation@read 0028  
   __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004           __end_ofi1_i2c1_driver_sendNACK 1E9A  
                   __end_of_Write_String 13EC                                 _timezone 006A  
                               int$flags 007E               ??i1_do_I2C_DO_ADDRESS_NACK 0070  
               __size_of_OLED_Initialize 007A                         ??_months_to_days 0030  
       __end_ofi1_do_I2C_DO_NACK_RESTART 1EB6           __end_ofi1_i2c1_driver_resetBus 1E5E  
     __end_of_INTERRUPT_InterruptManager 0022               _INTERRUPT_InterruptManager 0004  
                           _SSP1STATbits 018F                     ??i1_i2c_restartWrite 007A  
                               main@tm_t 00C2         __end_of_do_I2C_SEND_RESTART_READ 1F31  
               i2c_read1ByteRegister@reg 002A                             ??_returnStop 002A  
               __end_of_i2c_restartWrite 1EEA                             _SSP2STATbits 0199  
                       Modify_Data@limit 002A                    ??_do_I2C_DO_NACK_STOP 0020  
                       Modify_Data@right 0035                             ??_rtcc_write 002F  
                     _ymd_to_scalar$2108 004A                mssp1_waitForEvent@timeout 0020  
         __size_of_i2c1_driver_setI2cISR 0006            __end_of_i2c1_driver_setI2cISR 1EFC  
                             _INTCONbits 000B               __size_of_i2c1_driver_start 0003  
                               gmtime@tc 003B                                 gmtime@tp 003A  
                    __end_ofi1_do_I2C_RX 1565                      __end_ofi1_do_I2C_TX 16C2  
                               isdigit@c 0021                                 memset@p1 0020  
               __size_ofi1_do_I2C_DO_ACK 0004                   __size_of_years_to_days 0070  
                  ??_i2c1_driver_sendACK 0020                                 isleap@yr 0034  
                       ?_do_I2C_TX_EMPTY 0070                           i1_mssp1_setIRQ 1E74  
                            ??_localtime 003F                   _do_I2C_DO_ADDRESS_NACK 130B  
         __size_ofi1_do_I2C_DO_NACK_STOP 0004                                 intlevel1 0000  
          __end_ofi1_do_I2C_DO_NACK_STOP 1EB2                               _OLED_Clear 0891  
                              sprintf@ap 0048                   _do_I2C_RESET$intlevel0 1FB4  
                              sprintf@cp 0049                                sprintf@sp 0034  
                  ??_i2c1_driver_restart 0020                   rd2RegCompleteHandler@p 0029  
                  ??_i2c1_driver_startRX 0020                         ___lwmod@dividend 0030  
                               mktime@tt 005A                  ?_PIN_MANAGER_Initialize 0070  
                      i2c_restartWrite@p 0029                   i1_do_I2C_SEND_ADR_READ 1F19  
                      __CFG_CLKOUTEN$OFF 0000               ?i1_rdBlkRegCompleteHandler 0079  
                     __end_of_returnStop 1EDE                    __end_ofi1_setCallBack 1273  
                    ymd_to_scalar@scalar 004C                       __end_of_rtcc_write 10C6  
    __size_ofi1_do_I2C_SEND_RESTART_READ 0004           __size_ofi1_i2c1_driver_sendACK 0004  
          __end_ofi1_i2c1_driver_sendACK 1E96              __size_of_mssp1_IRQisEnabled 0007  
         __size_ofi1_i2c1_driver_restart 0003            __end_ofi1_i2c1_driver_restart 1E6B  
                 wr2RegCompleteHandler@p 0029                              ??_rtcc_read 0031  
            __size_of_mssp1_waitForEvent 000B           __size_ofi1_i2c1_driver_startRX 0003  
           __end_ofi1_i2c1_driver_TXData 1EC7            __end_ofi1_i2c1_driver_startRX 1E71  
               __size_of_OLED_PutPicture 0039                            __pstringtext1 0449  
                          __pstringtext2 1800                            __pstringtext3 1855  
                          __pstringtext4 1861                            __pstringtext5 006E  
                          __pstringtext6 1820                            __pstringtext7 183F  
                          __pstringtext8 0000                  __size_ofi1_do_I2C_RESET 0007  
                               sprintf@c 0052                                 sprintf@f 0036  
           __end_ofi1_i2c1_driver_isNACK 1F19                          ___lwmod@divisor 002E  
                               strlen@cp 0024                        ??_i2c_masterWrite 002A  
     __end_of_i2c_setAddressNACKCallback 1047               _i2c_setAddressNACKCallback 103A  
                        ___lwmod@counter 0033                   __size_of_i2c_setBuffer 0015  
                           ___aldiv@sign 002A                   __end_ofi1_mssp1_setIRQ 1E77  
                      ??i1_i2c_setBuffer 0072                              _returnReset 1EDE  
       _do_I2C_DO_NACK_RESTART$intlevel0 1F5D                ??i1_do_I2C_SEND_ADR_WRITE 0071  
                       ?_rtc6_Initialize 0070                   __size_ofi1_do_I2C_IDLE 0005  
                 __size_ofi1_do_I2C_RCEN 0006           __end_of_PIN_MANAGER_Initialize 15A7  
            __end_of_i2c_busCollisionISR 1E68                             ___almod@sign 002A  
         __size_of_rd1RegCompleteHandler 0016          __size_of_i2c_write1ByteRegister 0032  
          __end_of_rd1RegCompleteHandler 111D                rtc6_SetComponent@inMemory 003B  
         __size_of_wr1RegCompleteHandler 0016                        _rtc6_SetComponent 0801  
       __size_ofi1_rd1RegCompleteHandler 0010            __end_of_wr1RegCompleteHandler 1107  
                  _do_I2C_SEND_ADR_WRITE 1FBB                     _do_I2C_SEND_ADR_READ 1FF4  
      __end_ofi1_rdBlkRegCompleteHandler 114A         __size_ofi1_wr1RegCompleteHandler 0010  
                     ?_rtc6_SetComponent 0033                rtc6_GetComponent@location 0037  
