

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 26 21:46:24 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBIGRAM,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,delta=2
   107                           	psect	text82,local,class=CODE,merge=1,delta=2
   108                           	psect	text83,local,class=CODE,merge=1,delta=2
   109                           	psect	text84,local,class=CODE,merge=1,delta=2
   110                           	psect	text85,local,class=CODE,merge=1,delta=2
   111                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text90,local,class=CODE,merge=1,delta=2
   116                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   118                           	psect	text93,local,class=CODE,merge=1,delta=2
   119                           	psect	text94,local,class=CODE,merge=1,delta=2
   120                           	psect	text95,local,class=CODE,merge=1,delta=2
   121                           	psect	text96,local,class=CODE,merge=1,delta=2
   122                           	psect	text97,local,class=CODE,merge=1,delta=2
   123                           	psect	text98,local,class=CODE,merge=1,delta=2
   124                           	psect	text99,local,class=CODE,merge=1,delta=2
   125                           	psect	intentry,global,class=CODE,delta=2
   126                           	psect	text101,local,class=CODE,merge=1,delta=2
   127                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   128                           	psect	text103,local,class=CODE,merge=1,delta=2
   129                           	psect	text104,local,class=CODE,merge=1,delta=2
   130                           	psect	text105,local,class=CODE,merge=1,delta=2
   131                           	psect	text106,local,class=CODE,merge=1,delta=2
   132                           	psect	text107,local,class=CODE,merge=1,delta=2
   133                           	psect	text108,local,class=CODE,merge=1,delta=2
   134                           	psect	text109,local,class=CODE,merge=1,delta=2
   135                           	psect	text110,local,class=CODE,merge=1,delta=2
   136                           	psect	text111,local,class=CODE,merge=1,delta=2
   137                           	psect	text112,local,class=CODE,merge=1,delta=2
   138                           	psect	text113,local,class=CODE,merge=1,delta=2
   139                           	psect	text114,local,class=CODE,merge=1,delta=2
   140                           	psect	text115,local,class=CODE,merge=1,delta=2
   141                           	psect	text116,local,class=CODE,merge=1,delta=2
   142                           	psect	text117,local,class=CODE,merge=1,delta=2
   143                           	psect	text118,local,class=CODE,merge=1,delta=2
   144                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   145                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   146                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   147                           	psect	text122,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text123,local,class=CODE,merge=1,inline,delta=2
   149                           	psect	text124,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text125,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text126,local,class=CODE,merge=1,delta=2
   152                           	psect	text127,local,class=CODE,merge=1,delta=2
   153                           	psect	text128,local,class=CODE,merge=1,delta=2
   154                           	psect	text129,local,class=CODE,merge=1,delta=2
   155                           	psect	text130,local,class=CODE,merge=1,delta=2
   156                           	psect	text131,local,class=CODE,merge=1,delta=2
   157                           	psect	text132,local,class=CODE,merge=1,delta=2
   158                           	psect	text133,local,class=CODE,merge=1,delta=2
   159                           	psect	text134,local,class=CODE,merge=1,delta=2
   160                           	psect	text135,local,class=CODE,merge=1,delta=2
   161                           	psect	text136,local,class=CODE,merge=1,delta=2
   162                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   163                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   164                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   165                           	psect	text140,local,class=CODE,merge=1,delta=2
   166                           	psect	text141,local,class=CODE,merge=1,inline,delta=2
   167                           	dabs	1,0x620,48
   168                           	dabs	1,0x5BC,52
   169                           	dabs	1,0x5A0,28
   170                           	dabs	1,0x520,80
   171                           	dabs	1,0x4A0,80
   172                           	dabs	1,0x420,80
   173                           	dabs	1,0x3A0,80
   174                           	dabs	1,0x320,80
   175                           	dabs	1,0x2C1,47
   176                           	dabs	1,0x238C,0,_CharacterArray
   177                           	dabs	1,0x21B1,0,_displayArray
   178                           	dabs	1,0x7E,2
   179  0000                     
   180                           ; Version 1.45
   181                           ; Generated 16/11/2017 GMT
   182                           ; 
   183                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   184                           ; All rights reserved.
   185                           ; 
   186                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   187                           ; 
   188                           ; Redistribution and use in source and binary forms, with or without modification, are
   189                           ; permitted provided that the following conditions are met:
   190                           ; 
   191                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   192                           ;        conditions and the following disclaimer.
   193                           ; 
   194                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   195                           ;        of conditions and the following disclaimer in the documentation and/or other
   196                           ;        materials provided with the distribution.
   197                           ; 
   198                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   199                           ;        software without specific prior written permission.
   200                           ; 
   201                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   202                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   203                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   204                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   205                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   206                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   207                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   208                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   209                           ; 
   210                           ; 
   211                           ; Code-generator required, PIC16F18875 Definitions
   212                           ; 
   213                           ; SFR Addresses
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001C                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  008C                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  010E                     	;# 
   271  010E                     	;# 
   272  010F                     	;# 
   273  0110                     	;# 
   274  0110                     	;# 
   275  0111                     	;# 
   276  0112                     	;# 
   277  0112                     	;# 
   278  0113                     	;# 
   279  0114                     	;# 
   280  0114                     	;# 
   281  0115                     	;# 
   282  0116                     	;# 
   283  0116                     	;# 
   284  0117                     	;# 
   285  0119                     	;# 
   286  0119                     	;# 
   287  0119                     	;# 
   288  011A                     	;# 
   289  011A                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011B                     	;# 
   293  011B                     	;# 
   294  011B                     	;# 
   295  011B                     	;# 
   296  011C                     	;# 
   297  011C                     	;# 
   298  011C                     	;# 
   299  011D                     	;# 
   300  011D                     	;# 
   301  011D                     	;# 
   302  011E                     	;# 
   303  011E                     	;# 
   304  011E                     	;# 
   305  011F                     	;# 
   306  011F                     	;# 
   307  011F                     	;# 
   308  011F                     	;# 
   309  011F                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  018E                     	;# 
   313  018F                     	;# 
   314  0190                     	;# 
   315  0191                     	;# 
   316  0192                     	;# 
   317  0196                     	;# 
   318  0197                     	;# 
   319  0198                     	;# 
   320  0199                     	;# 
   321  019A                     	;# 
   322  019B                     	;# 
   323  019C                     	;# 
   324  020C                     	;# 
   325  020C                     	;# 
   326  020D                     	;# 
   327  020E                     	;# 
   328  020F                     	;# 
   329  020F                     	;# 
   330  0210                     	;# 
   331  0210                     	;# 
   332  0211                     	;# 
   333  0211                     	;# 
   334  0212                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0214                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0216                     	;# 
   341  0216                     	;# 
   342  0217                     	;# 
   343  0217                     	;# 
   344  0218                     	;# 
   345  0218                     	;# 
   346  0219                     	;# 
   347  021A                     	;# 
   348  021B                     	;# 
   349  021B                     	;# 
   350  021C                     	;# 
   351  021C                     	;# 
   352  021D                     	;# 
   353  021D                     	;# 
   354  021E                     	;# 
   355  021F                     	;# 
   356  028C                     	;# 
   357  028C                     	;# 
   358  028D                     	;# 
   359  028D                     	;# 
   360  028E                     	;# 
   361  028F                     	;# 
   362  0290                     	;# 
   363  0290                     	;# 
   364  0291                     	;# 
   365  0292                     	;# 
   366  0292                     	;# 
   367  0293                     	;# 
   368  0293                     	;# 
   369  0294                     	;# 
   370  0295                     	;# 
   371  0296                     	;# 
   372  0296                     	;# 
   373  0297                     	;# 
   374  0298                     	;# 
   375  0298                     	;# 
   376  0299                     	;# 
   377  0299                     	;# 
   378  029A                     	;# 
   379  029B                     	;# 
   380  029C                     	;# 
   381  029C                     	;# 
   382  029D                     	;# 
   383  030C                     	;# 
   384  030C                     	;# 
   385  030D                     	;# 
   386  030E                     	;# 
   387  030F                     	;# 
   388  0310                     	;# 
   389  0310                     	;# 
   390  0311                     	;# 
   391  0312                     	;# 
   392  0313                     	;# 
   393  0314                     	;# 
   394  0314                     	;# 
   395  0315                     	;# 
   396  0316                     	;# 
   397  0317                     	;# 
   398  0318                     	;# 
   399  0318                     	;# 
   400  0319                     	;# 
   401  031A                     	;# 
   402  031B                     	;# 
   403  031C                     	;# 
   404  031C                     	;# 
   405  031D                     	;# 
   406  031E                     	;# 
   407  031F                     	;# 
   408  038C                     	;# 
   409  038D                     	;# 
   410  038E                     	;# 
   411  0390                     	;# 
   412  0391                     	;# 
   413  0392                     	;# 
   414  040C                     	;# 
   415  040D                     	;# 
   416  040E                     	;# 
   417  040F                     	;# 
   418  0410                     	;# 
   419  0411                     	;# 
   420  0416                     	;# 
   421  0416                     	;# 
   422  0417                     	;# 
   423  0418                     	;# 
   424  0418                     	;# 
   425  0419                     	;# 
   426  041A                     	;# 
   427  041A                     	;# 
   428  041B                     	;# 
   429  041C                     	;# 
   430  041C                     	;# 
   431  041D                     	;# 
   432  041E                     	;# 
   433  041F                     	;# 
   434  048C                     	;# 
   435  048C                     	;# 
   436  048D                     	;# 
   437  048E                     	;# 
   438  048F                     	;# 
   439  048F                     	;# 
   440  0490                     	;# 
   441  0491                     	;# 
   442  0492                     	;# 
   443  0492                     	;# 
   444  0493                     	;# 
   445  0494                     	;# 
   446  0495                     	;# 
   447  0495                     	;# 
   448  0496                     	;# 
   449  0497                     	;# 
   450  0498                     	;# 
   451  0499                     	;# 
   452  049A                     	;# 
   453  049B                     	;# 
   454  049C                     	;# 
   455  049D                     	;# 
   456  050C                     	;# 
   457  050C                     	;# 
   458  050D                     	;# 
   459  050E                     	;# 
   460  050F                     	;# 
   461  050F                     	;# 
   462  0510                     	;# 
   463  0511                     	;# 
   464  0512                     	;# 
   465  0512                     	;# 
   466  0513                     	;# 
   467  0514                     	;# 
   468  0515                     	;# 
   469  0515                     	;# 
   470  0516                     	;# 
   471  0517                     	;# 
   472  0518                     	;# 
   473  0519                     	;# 
   474  051A                     	;# 
   475  051B                     	;# 
   476  051C                     	;# 
   477  051D                     	;# 
   478  058C                     	;# 
   479  058C                     	;# 
   480  058D                     	;# 
   481  058E                     	;# 
   482  058F                     	;# 
   483  058F                     	;# 
   484  0590                     	;# 
   485  0591                     	;# 
   486  0592                     	;# 
   487  0593                     	;# 
   488  060C                     	;# 
   489  060D                     	;# 
   490  060E                     	;# 
   491  060F                     	;# 
   492  0610                     	;# 
   493  0611                     	;# 
   494  0612                     	;# 
   495  0613                     	;# 
   496  0614                     	;# 
   497  0616                     	;# 
   498  0617                     	;# 
   499  0618                     	;# 
   500  0619                     	;# 
   501  061A                     	;# 
   502  061B                     	;# 
   503  061C                     	;# 
   504  061D                     	;# 
   505  061E                     	;# 
   506  068C                     	;# 
   507  068D                     	;# 
   508  068E                     	;# 
   509  068F                     	;# 
   510  0690                     	;# 
   511  0691                     	;# 
   512  0692                     	;# 
   513  0693                     	;# 
   514  0694                     	;# 
   515  070C                     	;# 
   516  070D                     	;# 
   517  070E                     	;# 
   518  070F                     	;# 
   519  0710                     	;# 
   520  0711                     	;# 
   521  0712                     	;# 
   522  0713                     	;# 
   523  0714                     	;# 
   524  0716                     	;# 
   525  0717                     	;# 
   526  0718                     	;# 
   527  0719                     	;# 
   528  071A                     	;# 
   529  071B                     	;# 
   530  071C                     	;# 
   531  071D                     	;# 
   532  071E                     	;# 
   533  0796                     	;# 
   534  0797                     	;# 
   535  0798                     	;# 
   536  0799                     	;# 
   537  079A                     	;# 
   538  079B                     	;# 
   539  080C                     	;# 
   540  080D                     	;# 
   541  080E                     	;# 
   542  080F                     	;# 
   543  0810                     	;# 
   544  0811                     	;# 
   545  0812                     	;# 
   546  0813                     	;# 
   547  0814                     	;# 
   548  081A                     	;# 
   549  081B                     	;# 
   550  081C                     	;# 
   551  081D                     	;# 
   552  081E                     	;# 
   553  081F                     	;# 
   554  088C                     	;# 
   555  088D                     	;# 
   556  088E                     	;# 
   557  088F                     	;# 
   558  0890                     	;# 
   559  0891                     	;# 
   560  0892                     	;# 
   561  0893                     	;# 
   562  0895                     	;# 
   563  0896                     	;# 
   564  0897                     	;# 
   565  0898                     	;# 
   566  0899                     	;# 
   567  089A                     	;# 
   568  089B                     	;# 
   569  090C                     	;# 
   570  090E                     	;# 
   571  090F                     	;# 
   572  091F                     	;# 
   573  091F                     	;# 
   574  098F                     	;# 
   575  098F                     	;# 
   576  0990                     	;# 
   577  0991                     	;# 
   578  0992                     	;# 
   579  0993                     	;# 
   580  0994                     	;# 
   581  0995                     	;# 
   582  0996                     	;# 
   583  0997                     	;# 
   584  0E0F                     	;# 
   585  0E10                     	;# 
   586  0E11                     	;# 
   587  0E12                     	;# 
   588  0E13                     	;# 
   589  0E14                     	;# 
   590  0E15                     	;# 
   591  0E16                     	;# 
   592  0E17                     	;# 
   593  0E18                     	;# 
   594  0E19                     	;# 
   595  0E1A                     	;# 
   596  0E1B                     	;# 
   597  0E1C                     	;# 
   598  0E1D                     	;# 
   599  0E1E                     	;# 
   600  0E1F                     	;# 
   601  0E20                     	;# 
   602  0E21                     	;# 
   603  0E22                     	;# 
   604  0E23                     	;# 
   605  0E24                     	;# 
   606  0E25                     	;# 
   607  0E26                     	;# 
   608  0E27                     	;# 
   609  0E28                     	;# 
   610  0E29                     	;# 
   611  0E2A                     	;# 
   612  0E2B                     	;# 
   613  0E2C                     	;# 
   614  0E2D                     	;# 
   615  0E2E                     	;# 
   616  0E2F                     	;# 
   617  0E30                     	;# 
   618  0E31                     	;# 
   619  0E32                     	;# 
   620  0E33                     	;# 
   621  0E34                     	;# 
   622  0E35                     	;# 
   623  0E36                     	;# 
   624  0E37                     	;# 
   625  0E8F                     	;# 
   626  0E90                     	;# 
   627  0E91                     	;# 
   628  0E92                     	;# 
   629  0E93                     	;# 
   630  0E94                     	;# 
   631  0E95                     	;# 
   632  0E96                     	;# 
   633  0E97                     	;# 
   634  0E9C                     	;# 
   635  0E9D                     	;# 
   636  0E9E                     	;# 
   637  0EA1                     	;# 
   638  0EA2                     	;# 
   639  0EA3                     	;# 
   640  0EA4                     	;# 
   641  0EA5                     	;# 
   642  0EA9                     	;# 
   643  0EAA                     	;# 
   644  0EAB                     	;# 
   645  0EAC                     	;# 
   646  0EB1                     	;# 
   647  0EB2                     	;# 
   648  0EB3                     	;# 
   649  0EB8                     	;# 
   650  0EB9                     	;# 
   651  0EBA                     	;# 
   652  0EBB                     	;# 
   653  0EBC                     	;# 
   654  0EBD                     	;# 
   655  0EBE                     	;# 
   656  0EC3                     	;# 
   657  0EC5                     	;# 
   658  0EC6                     	;# 
   659  0EC7                     	;# 
   660  0EC8                     	;# 
   661  0EC9                     	;# 
   662  0ECA                     	;# 
   663  0ECB                     	;# 
   664  0ECC                     	;# 
   665  0F10                     	;# 
   666  0F11                     	;# 
   667  0F12                     	;# 
   668  0F13                     	;# 
   669  0F14                     	;# 
   670  0F15                     	;# 
   671  0F16                     	;# 
   672  0F17                     	;# 
   673  0F18                     	;# 
   674  0F19                     	;# 
   675  0F1A                     	;# 
   676  0F1B                     	;# 
   677  0F1C                     	;# 
   678  0F1D                     	;# 
   679  0F1E                     	;# 
   680  0F1F                     	;# 
   681  0F20                     	;# 
   682  0F21                     	;# 
   683  0F22                     	;# 
   684  0F23                     	;# 
   685  0F24                     	;# 
   686  0F25                     	;# 
   687  0F26                     	;# 
   688  0F27                     	;# 
   689  0F28                     	;# 
   690  0F29                     	;# 
   691  0F2A                     	;# 
   692  0F2B                     	;# 
   693  0F2C                     	;# 
   694  0F2D                     	;# 
   695  0F2E                     	;# 
   696  0F2F                     	;# 
   697  0F30                     	;# 
   698  0F31                     	;# 
   699  0F32                     	;# 
   700  0F38                     	;# 
   701  0F39                     	;# 
   702  0F3A                     	;# 
   703  0F3B                     	;# 
   704  0F3C                     	;# 
   705  0F3D                     	;# 
   706  0F3E                     	;# 
   707  0F3F                     	;# 
   708  0F40                     	;# 
   709  0F41                     	;# 
   710  0F43                     	;# 
   711  0F44                     	;# 
   712  0F45                     	;# 
   713  0F46                     	;# 
   714  0F47                     	;# 
   715  0F48                     	;# 
   716  0F49                     	;# 
   717  0F4A                     	;# 
   718  0F4B                     	;# 
   719  0F4C                     	;# 
   720  0F4E                     	;# 
   721  0F4F                     	;# 
   722  0F50                     	;# 
   723  0F51                     	;# 
   724  0F52                     	;# 
   725  0F53                     	;# 
   726  0F54                     	;# 
   727  0F55                     	;# 
   728  0F56                     	;# 
   729  0F57                     	;# 
   730  0F59                     	;# 
   731  0F5A                     	;# 
   732  0F5B                     	;# 
   733  0F5C                     	;# 
   734  0F5D                     	;# 
   735  0F61                     	;# 
   736  0F62                     	;# 
   737  0F64                     	;# 
   738  0F65                     	;# 
   739  0F66                     	;# 
   740  0F67                     	;# 
   741  0F68                     	;# 
   742  0F69                     	;# 
   743  0F6A                     	;# 
   744  0F6B                     	;# 
   745  0F6C                     	;# 
   746  0F6D                     	;# 
   747  0FE4                     	;# 
   748  0FE5                     	;# 
   749  0FE6                     	;# 
   750  0FE7                     	;# 
   751  0FE8                     	;# 
   752  0FE9                     	;# 
   753  0FEA                     	;# 
   754  0FEB                     	;# 
   755  0FED                     	;# 
   756  0FEE                     	;# 
   757  0FEF                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0008                     	;# 
   767  0009                     	;# 
   768  000A                     	;# 
   769  000B                     	;# 
   770  000C                     	;# 
   771  000D                     	;# 
   772  000E                     	;# 
   773  000F                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0017                     	;# 
   782  0018                     	;# 
   783  0019                     	;# 
   784  001A                     	;# 
   785  001C                     	;# 
   786  001C                     	;# 
   787  001D                     	;# 
   788  001D                     	;# 
   789  001E                     	;# 
   790  001F                     	;# 
   791  008C                     	;# 
   792  008C                     	;# 
   793  008D                     	;# 
   794  008E                     	;# 
   795  008E                     	;# 
   796  008F                     	;# 
   797  0090                     	;# 
   798  0090                     	;# 
   799  0091                     	;# 
   800  0093                     	;# 
   801  0094                     	;# 
   802  0095                     	;# 
   803  0096                     	;# 
   804  0097                     	;# 
   805  0098                     	;# 
   806  0099                     	;# 
   807  009A                     	;# 
   808  009B                     	;# 
   809  009C                     	;# 
   810  009D                     	;# 
   811  009E                     	;# 
   812  010C                     	;# 
   813  010D                     	;# 
   814  010E                     	;# 
   815  010E                     	;# 
   816  010F                     	;# 
   817  0110                     	;# 
   818  0110                     	;# 
   819  0111                     	;# 
   820  0112                     	;# 
   821  0112                     	;# 
   822  0113                     	;# 
   823  0114                     	;# 
   824  0114                     	;# 
   825  0115                     	;# 
   826  0116                     	;# 
   827  0116                     	;# 
   828  0117                     	;# 
   829  0119                     	;# 
   830  0119                     	;# 
   831  0119                     	;# 
   832  011A                     	;# 
   833  011A                     	;# 
   834  011A                     	;# 
   835  011B                     	;# 
   836  011B                     	;# 
   837  011B                     	;# 
   838  011B                     	;# 
   839  011B                     	;# 
   840  011C                     	;# 
   841  011C                     	;# 
   842  011C                     	;# 
   843  011D                     	;# 
   844  011D                     	;# 
   845  011D                     	;# 
   846  011E                     	;# 
   847  011E                     	;# 
   848  011E                     	;# 
   849  011F                     	;# 
   850  011F                     	;# 
   851  011F                     	;# 
   852  011F                     	;# 
   853  011F                     	;# 
   854  018C                     	;# 
   855  018D                     	;# 
   856  018E                     	;# 
   857  018F                     	;# 
   858  0190                     	;# 
   859  0191                     	;# 
   860  0192                     	;# 
   861  0196                     	;# 
   862  0197                     	;# 
   863  0198                     	;# 
   864  0199                     	;# 
   865  019A                     	;# 
   866  019B                     	;# 
   867  019C                     	;# 
   868  020C                     	;# 
   869  020C                     	;# 
   870  020D                     	;# 
   871  020E                     	;# 
   872  020F                     	;# 
   873  020F                     	;# 
   874  0210                     	;# 
   875  0210                     	;# 
   876  0211                     	;# 
   877  0211                     	;# 
   878  0212                     	;# 
   879  0212                     	;# 
   880  0213                     	;# 
   881  0214                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0216                     	;# 
   885  0216                     	;# 
   886  0217                     	;# 
   887  0217                     	;# 
   888  0218                     	;# 
   889  0218                     	;# 
   890  0219                     	;# 
   891  021A                     	;# 
   892  021B                     	;# 
   893  021B                     	;# 
   894  021C                     	;# 
   895  021C                     	;# 
   896  021D                     	;# 
   897  021D                     	;# 
   898  021E                     	;# 
   899  021F                     	;# 
   900  028C                     	;# 
   901  028C                     	;# 
   902  028D                     	;# 
   903  028D                     	;# 
   904  028E                     	;# 
   905  028F                     	;# 
   906  0290                     	;# 
   907  0290                     	;# 
   908  0291                     	;# 
   909  0292                     	;# 
   910  0292                     	;# 
   911  0293                     	;# 
   912  0293                     	;# 
   913  0294                     	;# 
   914  0295                     	;# 
   915  0296                     	;# 
   916  0296                     	;# 
   917  0297                     	;# 
   918  0298                     	;# 
   919  0298                     	;# 
   920  0299                     	;# 
   921  0299                     	;# 
   922  029A                     	;# 
   923  029B                     	;# 
   924  029C                     	;# 
   925  029C                     	;# 
   926  029D                     	;# 
   927  030C                     	;# 
   928  030C                     	;# 
   929  030D                     	;# 
   930  030E                     	;# 
   931  030F                     	;# 
   932  0310                     	;# 
   933  0310                     	;# 
   934  0311                     	;# 
   935  0312                     	;# 
   936  0313                     	;# 
   937  0314                     	;# 
   938  0314                     	;# 
   939  0315                     	;# 
   940  0316                     	;# 
   941  0317                     	;# 
   942  0318                     	;# 
   943  0318                     	;# 
   944  0319                     	;# 
   945  031A                     	;# 
   946  031B                     	;# 
   947  031C                     	;# 
   948  031C                     	;# 
   949  031D                     	;# 
   950  031E                     	;# 
   951  031F                     	;# 
   952  038C                     	;# 
   953  038D                     	;# 
   954  038E                     	;# 
   955  0390                     	;# 
   956  0391                     	;# 
   957  0392                     	;# 
   958  040C                     	;# 
   959  040D                     	;# 
   960  040E                     	;# 
   961  040F                     	;# 
   962  0410                     	;# 
   963  0411                     	;# 
   964  0416                     	;# 
   965  0416                     	;# 
   966  0417                     	;# 
   967  0418                     	;# 
   968  0418                     	;# 
   969  0419                     	;# 
   970  041A                     	;# 
   971  041A                     	;# 
   972  041B                     	;# 
   973  041C                     	;# 
   974  041C                     	;# 
   975  041D                     	;# 
   976  041E                     	;# 
   977  041F                     	;# 
   978  048C                     	;# 
   979  048C                     	;# 
   980  048D                     	;# 
   981  048E                     	;# 
   982  048F                     	;# 
   983  048F                     	;# 
   984  0490                     	;# 
   985  0491                     	;# 
   986  0492                     	;# 
   987  0492                     	;# 
   988  0493                     	;# 
   989  0494                     	;# 
   990  0495                     	;# 
   991  0495                     	;# 
   992  0496                     	;# 
   993  0497                     	;# 
   994  0498                     	;# 
   995  0499                     	;# 
   996  049A                     	;# 
   997  049B                     	;# 
   998  049C                     	;# 
   999  049D                     	;# 
  1000  050C                     	;# 
  1001  050C                     	;# 
  1002  050D                     	;# 
  1003  050E                     	;# 
  1004  050F                     	;# 
  1005  050F                     	;# 
  1006  0510                     	;# 
  1007  0511                     	;# 
  1008  0512                     	;# 
  1009  0512                     	;# 
  1010  0513                     	;# 
  1011  0514                     	;# 
  1012  0515                     	;# 
  1013  0515                     	;# 
  1014  0516                     	;# 
  1015  0517                     	;# 
  1016  0518                     	;# 
  1017  0519                     	;# 
  1018  051A                     	;# 
  1019  051B                     	;# 
  1020  051C                     	;# 
  1021  051D                     	;# 
  1022  058C                     	;# 
  1023  058C                     	;# 
  1024  058D                     	;# 
  1025  058E                     	;# 
  1026  058F                     	;# 
  1027  058F                     	;# 
  1028  0590                     	;# 
  1029  0591                     	;# 
  1030  0592                     	;# 
  1031  0593                     	;# 
  1032  060C                     	;# 
  1033  060D                     	;# 
  1034  060E                     	;# 
  1035  060F                     	;# 
  1036  0610                     	;# 
  1037  0611                     	;# 
  1038  0612                     	;# 
  1039  0613                     	;# 
  1040  0614                     	;# 
  1041  0616                     	;# 
  1042  0617                     	;# 
  1043  0618                     	;# 
  1044  0619                     	;# 
  1045  061A                     	;# 
  1046  061B                     	;# 
  1047  061C                     	;# 
  1048  061D                     	;# 
  1049  061E                     	;# 
  1050  068C                     	;# 
  1051  068D                     	;# 
  1052  068E                     	;# 
  1053  068F                     	;# 
  1054  0690                     	;# 
  1055  0691                     	;# 
  1056  0692                     	;# 
  1057  0693                     	;# 
  1058  0694                     	;# 
  1059  070C                     	;# 
  1060  070D                     	;# 
  1061  070E                     	;# 
  1062  070F                     	;# 
  1063  0710                     	;# 
  1064  0711                     	;# 
  1065  0712                     	;# 
  1066  0713                     	;# 
  1067  0714                     	;# 
  1068  0716                     	;# 
  1069  0717                     	;# 
  1070  0718                     	;# 
  1071  0719                     	;# 
  1072  071A                     	;# 
  1073  071B                     	;# 
  1074  071C                     	;# 
  1075  071D                     	;# 
  1076  071E                     	;# 
  1077  0796                     	;# 
  1078  0797                     	;# 
  1079  0798                     	;# 
  1080  0799                     	;# 
  1081  079A                     	;# 
  1082  079B                     	;# 
  1083  080C                     	;# 
  1084  080D                     	;# 
  1085  080E                     	;# 
  1086  080F                     	;# 
  1087  0810                     	;# 
  1088  0811                     	;# 
  1089  0812                     	;# 
  1090  0813                     	;# 
  1091  0814                     	;# 
  1092  081A                     	;# 
  1093  081B                     	;# 
  1094  081C                     	;# 
  1095  081D                     	;# 
  1096  081E                     	;# 
  1097  081F                     	;# 
  1098  088C                     	;# 
  1099  088D                     	;# 
  1100  088E                     	;# 
  1101  088F                     	;# 
  1102  0890                     	;# 
  1103  0891                     	;# 
  1104  0892                     	;# 
  1105  0893                     	;# 
  1106  0895                     	;# 
  1107  0896                     	;# 
  1108  0897                     	;# 
  1109  0898                     	;# 
  1110  0899                     	;# 
  1111  089A                     	;# 
  1112  089B                     	;# 
  1113  090C                     	;# 
  1114  090E                     	;# 
  1115  090F                     	;# 
  1116  091F                     	;# 
  1117  091F                     	;# 
  1118  098F                     	;# 
  1119  098F                     	;# 
  1120  0990                     	;# 
  1121  0991                     	;# 
  1122  0992                     	;# 
  1123  0993                     	;# 
  1124  0994                     	;# 
  1125  0995                     	;# 
  1126  0996                     	;# 
  1127  0997                     	;# 
  1128  0E0F                     	;# 
  1129  0E10                     	;# 
  1130  0E11                     	;# 
  1131  0E12                     	;# 
  1132  0E13                     	;# 
  1133  0E14                     	;# 
  1134  0E15                     	;# 
  1135  0E16                     	;# 
  1136  0E17                     	;# 
  1137  0E18                     	;# 
  1138  0E19                     	;# 
  1139  0E1A                     	;# 
  1140  0E1B                     	;# 
  1141  0E1C                     	;# 
  1142  0E1D                     	;# 
  1143  0E1E                     	;# 
  1144  0E1F                     	;# 
  1145  0E20                     	;# 
  1146  0E21                     	;# 
  1147  0E22                     	;# 
  1148  0E23                     	;# 
  1149  0E24                     	;# 
  1150  0E25                     	;# 
  1151  0E26                     	;# 
  1152  0E27                     	;# 
  1153  0E28                     	;# 
  1154  0E29                     	;# 
  1155  0E2A                     	;# 
  1156  0E2B                     	;# 
  1157  0E2C                     	;# 
  1158  0E2D                     	;# 
  1159  0E2E                     	;# 
  1160  0E2F                     	;# 
  1161  0E30                     	;# 
  1162  0E31                     	;# 
  1163  0E32                     	;# 
  1164  0E33                     	;# 
  1165  0E34                     	;# 
  1166  0E35                     	;# 
  1167  0E36                     	;# 
  1168  0E37                     	;# 
  1169  0E8F                     	;# 
  1170  0E90                     	;# 
  1171  0E91                     	;# 
  1172  0E92                     	;# 
  1173  0E93                     	;# 
  1174  0E94                     	;# 
  1175  0E95                     	;# 
  1176  0E96                     	;# 
  1177  0E97                     	;# 
  1178  0E9C                     	;# 
  1179  0E9D                     	;# 
  1180  0E9E                     	;# 
  1181  0EA1                     	;# 
  1182  0EA2                     	;# 
  1183  0EA3                     	;# 
  1184  0EA4                     	;# 
  1185  0EA5                     	;# 
  1186  0EA9                     	;# 
  1187  0EAA                     	;# 
  1188  0EAB                     	;# 
  1189  0EAC                     	;# 
  1190  0EB1                     	;# 
  1191  0EB2                     	;# 
  1192  0EB3                     	;# 
  1193  0EB8                     	;# 
  1194  0EB9                     	;# 
  1195  0EBA                     	;# 
  1196  0EBB                     	;# 
  1197  0EBC                     	;# 
  1198  0EBD                     	;# 
  1199  0EBE                     	;# 
  1200  0EC3                     	;# 
  1201  0EC5                     	;# 
  1202  0EC6                     	;# 
  1203  0EC7                     	;# 
  1204  0EC8                     	;# 
  1205  0EC9                     	;# 
  1206  0ECA                     	;# 
  1207  0ECB                     	;# 
  1208  0ECC                     	;# 
  1209  0F10                     	;# 
  1210  0F11                     	;# 
  1211  0F12                     	;# 
  1212  0F13                     	;# 
  1213  0F14                     	;# 
  1214  0F15                     	;# 
  1215  0F16                     	;# 
  1216  0F17                     	;# 
  1217  0F18                     	;# 
  1218  0F19                     	;# 
  1219  0F1A                     	;# 
  1220  0F1B                     	;# 
  1221  0F1C                     	;# 
  1222  0F1D                     	;# 
  1223  0F1E                     	;# 
  1224  0F1F                     	;# 
  1225  0F20                     	;# 
  1226  0F21                     	;# 
  1227  0F22                     	;# 
  1228  0F23                     	;# 
  1229  0F24                     	;# 
  1230  0F25                     	;# 
  1231  0F26                     	;# 
  1232  0F27                     	;# 
  1233  0F28                     	;# 
  1234  0F29                     	;# 
  1235  0F2A                     	;# 
  1236  0F2B                     	;# 
  1237  0F2C                     	;# 
  1238  0F2D                     	;# 
  1239  0F2E                     	;# 
  1240  0F2F                     	;# 
  1241  0F30                     	;# 
  1242  0F31                     	;# 
  1243  0F32                     	;# 
  1244  0F38                     	;# 
  1245  0F39                     	;# 
  1246  0F3A                     	;# 
  1247  0F3B                     	;# 
  1248  0F3C                     	;# 
  1249  0F3D                     	;# 
  1250  0F3E                     	;# 
  1251  0F3F                     	;# 
  1252  0F40                     	;# 
  1253  0F41                     	;# 
  1254  0F43                     	;# 
  1255  0F44                     	;# 
  1256  0F45                     	;# 
  1257  0F46                     	;# 
  1258  0F47                     	;# 
  1259  0F48                     	;# 
  1260  0F49                     	;# 
  1261  0F4A                     	;# 
  1262  0F4B                     	;# 
  1263  0F4C                     	;# 
  1264  0F4E                     	;# 
  1265  0F4F                     	;# 
  1266  0F50                     	;# 
  1267  0F51                     	;# 
  1268  0F52                     	;# 
  1269  0F53                     	;# 
  1270  0F54                     	;# 
  1271  0F55                     	;# 
  1272  0F56                     	;# 
  1273  0F57                     	;# 
  1274  0F59                     	;# 
  1275  0F5A                     	;# 
  1276  0F5B                     	;# 
  1277  0F5C                     	;# 
  1278  0F5D                     	;# 
  1279  0F61                     	;# 
  1280  0F62                     	;# 
  1281  0F64                     	;# 
  1282  0F65                     	;# 
  1283  0F66                     	;# 
  1284  0F67                     	;# 
  1285  0F68                     	;# 
  1286  0F69                     	;# 
  1287  0F6A                     	;# 
  1288  0F6B                     	;# 
  1289  0F6C                     	;# 
  1290  0F6D                     	;# 
  1291  0FE4                     	;# 
  1292  0FE5                     	;# 
  1293  0FE6                     	;# 
  1294  0FE7                     	;# 
  1295  0FE8                     	;# 
  1296  0FE9                     	;# 
  1297  0FEA                     	;# 
  1298  0FEB                     	;# 
  1299  0FED                     	;# 
  1300  0FEE                     	;# 
  1301  0FEF                     	;# 
  1302  0000                     	;# 
  1303  0001                     	;# 
  1304  0002                     	;# 
  1305  0003                     	;# 
  1306  0004                     	;# 
  1307  0005                     	;# 
  1308  0006                     	;# 
  1309  0007                     	;# 
  1310  0008                     	;# 
  1311  0009                     	;# 
  1312  000A                     	;# 
  1313  000B                     	;# 
  1314  000C                     	;# 
  1315  000D                     	;# 
  1316  000E                     	;# 
  1317  000F                     	;# 
  1318  0010                     	;# 
  1319  0011                     	;# 
  1320  0012                     	;# 
  1321  0013                     	;# 
  1322  0014                     	;# 
  1323  0015                     	;# 
  1324  0016                     	;# 
  1325  0017                     	;# 
  1326  0018                     	;# 
  1327  0019                     	;# 
  1328  001A                     	;# 
  1329  001C                     	;# 
  1330  001C                     	;# 
  1331  001D                     	;# 
  1332  001D                     	;# 
  1333  001E                     	;# 
  1334  001F                     	;# 
  1335  008C                     	;# 
  1336  008C                     	;# 
  1337  008D                     	;# 
  1338  008E                     	;# 
  1339  008E                     	;# 
  1340  008F                     	;# 
  1341  0090                     	;# 
  1342  0090                     	;# 
  1343  0091                     	;# 
  1344  0093                     	;# 
  1345  0094                     	;# 
  1346  0095                     	;# 
  1347  0096                     	;# 
  1348  0097                     	;# 
  1349  0098                     	;# 
  1350  0099                     	;# 
  1351  009A                     	;# 
  1352  009B                     	;# 
  1353  009C                     	;# 
  1354  009D                     	;# 
  1355  009E                     	;# 
  1356  010C                     	;# 
  1357  010D                     	;# 
  1358  010E                     	;# 
  1359  010E                     	;# 
  1360  010F                     	;# 
  1361  0110                     	;# 
  1362  0110                     	;# 
  1363  0111                     	;# 
  1364  0112                     	;# 
  1365  0112                     	;# 
  1366  0113                     	;# 
  1367  0114                     	;# 
  1368  0114                     	;# 
  1369  0115                     	;# 
  1370  0116                     	;# 
  1371  0116                     	;# 
  1372  0117                     	;# 
  1373  0119                     	;# 
  1374  0119                     	;# 
  1375  0119                     	;# 
  1376  011A                     	;# 
  1377  011A                     	;# 
  1378  011A                     	;# 
  1379  011B                     	;# 
  1380  011B                     	;# 
  1381  011B                     	;# 
  1382  011B                     	;# 
  1383  011B                     	;# 
  1384  011C                     	;# 
  1385  011C                     	;# 
  1386  011C                     	;# 
  1387  011D                     	;# 
  1388  011D                     	;# 
  1389  011D                     	;# 
  1390  011E                     	;# 
  1391  011E                     	;# 
  1392  011E                     	;# 
  1393  011F                     	;# 
  1394  011F                     	;# 
  1395  011F                     	;# 
  1396  011F                     	;# 
  1397  011F                     	;# 
  1398  018C                     	;# 
  1399  018D                     	;# 
  1400  018E                     	;# 
  1401  018F                     	;# 
  1402  0190                     	;# 
  1403  0191                     	;# 
  1404  0192                     	;# 
  1405  0196                     	;# 
  1406  0197                     	;# 
  1407  0198                     	;# 
  1408  0199                     	;# 
  1409  019A                     	;# 
  1410  019B                     	;# 
  1411  019C                     	;# 
  1412  020C                     	;# 
  1413  020C                     	;# 
  1414  020D                     	;# 
  1415  020E                     	;# 
  1416  020F                     	;# 
  1417  020F                     	;# 
  1418  0210                     	;# 
  1419  0210                     	;# 
  1420  0211                     	;# 
  1421  0211                     	;# 
  1422  0212                     	;# 
  1423  0212                     	;# 
  1424  0213                     	;# 
  1425  0214                     	;# 
  1426  0215                     	;# 
  1427  0215                     	;# 
  1428  0216                     	;# 
  1429  0216                     	;# 
  1430  0217                     	;# 
  1431  0217                     	;# 
  1432  0218                     	;# 
  1433  0218                     	;# 
  1434  0219                     	;# 
  1435  021A                     	;# 
  1436  021B                     	;# 
  1437  021B                     	;# 
  1438  021C                     	;# 
  1439  021C                     	;# 
  1440  021D                     	;# 
  1441  021D                     	;# 
  1442  021E                     	;# 
  1443  021F                     	;# 
  1444  028C                     	;# 
  1445  028C                     	;# 
  1446  028D                     	;# 
  1447  028D                     	;# 
  1448  028E                     	;# 
  1449  028F                     	;# 
  1450  0290                     	;# 
  1451  0290                     	;# 
  1452  0291                     	;# 
  1453  0292                     	;# 
  1454  0292                     	;# 
  1455  0293                     	;# 
  1456  0293                     	;# 
  1457  0294                     	;# 
  1458  0295                     	;# 
  1459  0296                     	;# 
  1460  0296                     	;# 
  1461  0297                     	;# 
  1462  0298                     	;# 
  1463  0298                     	;# 
  1464  0299                     	;# 
  1465  0299                     	;# 
  1466  029A                     	;# 
  1467  029B                     	;# 
  1468  029C                     	;# 
  1469  029C                     	;# 
  1470  029D                     	;# 
  1471  030C                     	;# 
  1472  030C                     	;# 
  1473  030D                     	;# 
  1474  030E                     	;# 
  1475  030F                     	;# 
  1476  0310                     	;# 
  1477  0310                     	;# 
  1478  0311                     	;# 
  1479  0312                     	;# 
  1480  0313                     	;# 
  1481  0314                     	;# 
  1482  0314                     	;# 
  1483  0315                     	;# 
  1484  0316                     	;# 
  1485  0317                     	;# 
  1486  0318                     	;# 
  1487  0318                     	;# 
  1488  0319                     	;# 
  1489  031A                     	;# 
  1490  031B                     	;# 
  1491  031C                     	;# 
  1492  031C                     	;# 
  1493  031D                     	;# 
  1494  031E                     	;# 
  1495  031F                     	;# 
  1496  038C                     	;# 
  1497  038D                     	;# 
  1498  038E                     	;# 
  1499  0390                     	;# 
  1500  0391                     	;# 
  1501  0392                     	;# 
  1502  040C                     	;# 
  1503  040D                     	;# 
  1504  040E                     	;# 
  1505  040F                     	;# 
  1506  0410                     	;# 
  1507  0411                     	;# 
  1508  0416                     	;# 
  1509  0416                     	;# 
  1510  0417                     	;# 
  1511  0418                     	;# 
  1512  0418                     	;# 
  1513  0419                     	;# 
  1514  041A                     	;# 
  1515  041A                     	;# 
  1516  041B                     	;# 
  1517  041C                     	;# 
  1518  041C                     	;# 
  1519  041D                     	;# 
  1520  041E                     	;# 
  1521  041F                     	;# 
  1522  048C                     	;# 
  1523  048C                     	;# 
  1524  048D                     	;# 
  1525  048E                     	;# 
  1526  048F                     	;# 
  1527  048F                     	;# 
  1528  0490                     	;# 
  1529  0491                     	;# 
  1530  0492                     	;# 
  1531  0492                     	;# 
  1532  0493                     	;# 
  1533  0494                     	;# 
  1534  0495                     	;# 
  1535  0495                     	;# 
  1536  0496                     	;# 
  1537  0497                     	;# 
  1538  0498                     	;# 
  1539  0499                     	;# 
  1540  049A                     	;# 
  1541  049B                     	;# 
  1542  049C                     	;# 
  1543  049D                     	;# 
  1544  050C                     	;# 
  1545  050C                     	;# 
  1546  050D                     	;# 
  1547  050E                     	;# 
  1548  050F                     	;# 
  1549  050F                     	;# 
  1550  0510                     	;# 
  1551  0511                     	;# 
  1552  0512                     	;# 
  1553  0512                     	;# 
  1554  0513                     	;# 
  1555  0514                     	;# 
  1556  0515                     	;# 
  1557  0515                     	;# 
  1558  0516                     	;# 
  1559  0517                     	;# 
  1560  0518                     	;# 
  1561  0519                     	;# 
  1562  051A                     	;# 
  1563  051B                     	;# 
  1564  051C                     	;# 
  1565  051D                     	;# 
  1566  058C                     	;# 
  1567  058C                     	;# 
  1568  058D                     	;# 
  1569  058E                     	;# 
  1570  058F                     	;# 
  1571  058F                     	;# 
  1572  0590                     	;# 
  1573  0591                     	;# 
  1574  0592                     	;# 
  1575  0593                     	;# 
  1576  060C                     	;# 
  1577  060D                     	;# 
  1578  060E                     	;# 
  1579  060F                     	;# 
  1580  0610                     	;# 
  1581  0611                     	;# 
  1582  0612                     	;# 
  1583  0613                     	;# 
  1584  0614                     	;# 
  1585  0616                     	;# 
  1586  0617                     	;# 
  1587  0618                     	;# 
  1588  0619                     	;# 
  1589  061A                     	;# 
  1590  061B                     	;# 
  1591  061C                     	;# 
  1592  061D                     	;# 
  1593  061E                     	;# 
  1594  068C                     	;# 
  1595  068D                     	;# 
  1596  068E                     	;# 
  1597  068F                     	;# 
  1598  0690                     	;# 
  1599  0691                     	;# 
  1600  0692                     	;# 
  1601  0693                     	;# 
  1602  0694                     	;# 
  1603  070C                     	;# 
  1604  070D                     	;# 
  1605  070E                     	;# 
  1606  070F                     	;# 
  1607  0710                     	;# 
  1608  0711                     	;# 
  1609  0712                     	;# 
  1610  0713                     	;# 
  1611  0714                     	;# 
  1612  0716                     	;# 
  1613  0717                     	;# 
  1614  0718                     	;# 
  1615  0719                     	;# 
  1616  071A                     	;# 
  1617  071B                     	;# 
  1618  071C                     	;# 
  1619  071D                     	;# 
  1620  071E                     	;# 
  1621  0796                     	;# 
  1622  0797                     	;# 
  1623  0798                     	;# 
  1624  0799                     	;# 
  1625  079A                     	;# 
  1626  079B                     	;# 
  1627  080C                     	;# 
  1628  080D                     	;# 
  1629  080E                     	;# 
  1630  080F                     	;# 
  1631  0810                     	;# 
  1632  0811                     	;# 
  1633  0812                     	;# 
  1634  0813                     	;# 
  1635  0814                     	;# 
  1636  081A                     	;# 
  1637  081B                     	;# 
  1638  081C                     	;# 
  1639  081D                     	;# 
  1640  081E                     	;# 
  1641  081F                     	;# 
  1642  088C                     	;# 
  1643  088D                     	;# 
  1644  088E                     	;# 
  1645  088F                     	;# 
  1646  0890                     	;# 
  1647  0891                     	;# 
  1648  0892                     	;# 
  1649  0893                     	;# 
  1650  0895                     	;# 
  1651  0896                     	;# 
  1652  0897                     	;# 
  1653  0898                     	;# 
  1654  0899                     	;# 
  1655  089A                     	;# 
  1656  089B                     	;# 
  1657  090C                     	;# 
  1658  090E                     	;# 
  1659  090F                     	;# 
  1660  091F                     	;# 
  1661  091F                     	;# 
  1662  098F                     	;# 
  1663  098F                     	;# 
  1664  0990                     	;# 
  1665  0991                     	;# 
  1666  0992                     	;# 
  1667  0993                     	;# 
  1668  0994                     	;# 
  1669  0995                     	;# 
  1670  0996                     	;# 
  1671  0997                     	;# 
  1672  0E0F                     	;# 
  1673  0E10                     	;# 
  1674  0E11                     	;# 
  1675  0E12                     	;# 
  1676  0E13                     	;# 
  1677  0E14                     	;# 
  1678  0E15                     	;# 
  1679  0E16                     	;# 
  1680  0E17                     	;# 
  1681  0E18                     	;# 
  1682  0E19                     	;# 
  1683  0E1A                     	;# 
  1684  0E1B                     	;# 
  1685  0E1C                     	;# 
  1686  0E1D                     	;# 
  1687  0E1E                     	;# 
  1688  0E1F                     	;# 
  1689  0E20                     	;# 
  1690  0E21                     	;# 
  1691  0E22                     	;# 
  1692  0E23                     	;# 
  1693  0E24                     	;# 
  1694  0E25                     	;# 
  1695  0E26                     	;# 
  1696  0E27                     	;# 
  1697  0E28                     	;# 
  1698  0E29                     	;# 
  1699  0E2A                     	;# 
  1700  0E2B                     	;# 
  1701  0E2C                     	;# 
  1702  0E2D                     	;# 
  1703  0E2E                     	;# 
  1704  0E2F                     	;# 
  1705  0E30                     	;# 
  1706  0E31                     	;# 
  1707  0E32                     	;# 
  1708  0E33                     	;# 
  1709  0E34                     	;# 
  1710  0E35                     	;# 
  1711  0E36                     	;# 
  1712  0E37                     	;# 
  1713  0E8F                     	;# 
  1714  0E90                     	;# 
  1715  0E91                     	;# 
  1716  0E92                     	;# 
  1717  0E93                     	;# 
  1718  0E94                     	;# 
  1719  0E95                     	;# 
  1720  0E96                     	;# 
  1721  0E97                     	;# 
  1722  0E9C                     	;# 
  1723  0E9D                     	;# 
  1724  0E9E                     	;# 
  1725  0EA1                     	;# 
  1726  0EA2                     	;# 
  1727  0EA3                     	;# 
  1728  0EA4                     	;# 
  1729  0EA5                     	;# 
  1730  0EA9                     	;# 
  1731  0EAA                     	;# 
  1732  0EAB                     	;# 
  1733  0EAC                     	;# 
  1734  0EB1                     	;# 
  1735  0EB2                     	;# 
  1736  0EB3                     	;# 
  1737  0EB8                     	;# 
  1738  0EB9                     	;# 
  1739  0EBA                     	;# 
  1740  0EBB                     	;# 
  1741  0EBC                     	;# 
  1742  0EBD                     	;# 
  1743  0EBE                     	;# 
  1744  0EC3                     	;# 
  1745  0EC5                     	;# 
  1746  0EC6                     	;# 
  1747  0EC7                     	;# 
  1748  0EC8                     	;# 
  1749  0EC9                     	;# 
  1750  0ECA                     	;# 
  1751  0ECB                     	;# 
  1752  0ECC                     	;# 
  1753  0F10                     	;# 
  1754  0F11                     	;# 
  1755  0F12                     	;# 
  1756  0F13                     	;# 
  1757  0F14                     	;# 
  1758  0F15                     	;# 
  1759  0F16                     	;# 
  1760  0F17                     	;# 
  1761  0F18                     	;# 
  1762  0F19                     	;# 
  1763  0F1A                     	;# 
  1764  0F1B                     	;# 
  1765  0F1C                     	;# 
  1766  0F1D                     	;# 
  1767  0F1E                     	;# 
  1768  0F1F                     	;# 
  1769  0F20                     	;# 
  1770  0F21                     	;# 
  1771  0F22                     	;# 
  1772  0F23                     	;# 
  1773  0F24                     	;# 
  1774  0F25                     	;# 
  1775  0F26                     	;# 
  1776  0F27                     	;# 
  1777  0F28                     	;# 
  1778  0F29                     	;# 
  1779  0F2A                     	;# 
  1780  0F2B                     	;# 
  1781  0F2C                     	;# 
  1782  0F2D                     	;# 
  1783  0F2E                     	;# 
  1784  0F2F                     	;# 
  1785  0F30                     	;# 
  1786  0F31                     	;# 
  1787  0F32                     	;# 
  1788  0F38                     	;# 
  1789  0F39                     	;# 
  1790  0F3A                     	;# 
  1791  0F3B                     	;# 
  1792  0F3C                     	;# 
  1793  0F3D                     	;# 
  1794  0F3E                     	;# 
  1795  0F3F                     	;# 
  1796  0F40                     	;# 
  1797  0F41                     	;# 
  1798  0F43                     	;# 
  1799  0F44                     	;# 
  1800  0F45                     	;# 
  1801  0F46                     	;# 
  1802  0F47                     	;# 
  1803  0F48                     	;# 
  1804  0F49                     	;# 
  1805  0F4A                     	;# 
  1806  0F4B                     	;# 
  1807  0F4C                     	;# 
  1808  0F4E                     	;# 
  1809  0F4F                     	;# 
  1810  0F50                     	;# 
  1811  0F51                     	;# 
  1812  0F52                     	;# 
  1813  0F53                     	;# 
  1814  0F54                     	;# 
  1815  0F55                     	;# 
  1816  0F56                     	;# 
  1817  0F57                     	;# 
  1818  0F59                     	;# 
  1819  0F5A                     	;# 
  1820  0F5B                     	;# 
  1821  0F5C                     	;# 
  1822  0F5D                     	;# 
  1823  0F61                     	;# 
  1824  0F62                     	;# 
  1825  0F64                     	;# 
  1826  0F65                     	;# 
  1827  0F66                     	;# 
  1828  0F67                     	;# 
  1829  0F68                     	;# 
  1830  0F69                     	;# 
  1831  0F6A                     	;# 
  1832  0F6B                     	;# 
  1833  0F6C                     	;# 
  1834  0F6D                     	;# 
  1835  0FE4                     	;# 
  1836  0FE5                     	;# 
  1837  0FE6                     	;# 
  1838  0FE7                     	;# 
  1839  0FE8                     	;# 
  1840  0FE9                     	;# 
  1841  0FEA                     	;# 
  1842  0FEB                     	;# 
  1843  0FED                     	;# 
  1844  0FEE                     	;# 
  1845  0FEF                     	;# 
  1846  0000                     	;# 
  1847  0001                     	;# 
  1848  0002                     	;# 
  1849  0003                     	;# 
  1850  0004                     	;# 
  1851  0005                     	;# 
  1852  0006                     	;# 
  1853  0007                     	;# 
  1854  0008                     	;# 
  1855  0009                     	;# 
  1856  000A                     	;# 
  1857  000B                     	;# 
  1858  000C                     	;# 
  1859  000D                     	;# 
  1860  000E                     	;# 
  1861  000F                     	;# 
  1862  0010                     	;# 
  1863  0011                     	;# 
  1864  0012                     	;# 
  1865  0013                     	;# 
  1866  0014                     	;# 
  1867  0015                     	;# 
  1868  0016                     	;# 
  1869  0017                     	;# 
  1870  0018                     	;# 
  1871  0019                     	;# 
  1872  001A                     	;# 
  1873  001C                     	;# 
  1874  001C                     	;# 
  1875  001D                     	;# 
  1876  001D                     	;# 
  1877  001E                     	;# 
  1878  001F                     	;# 
  1879  008C                     	;# 
  1880  008C                     	;# 
  1881  008D                     	;# 
  1882  008E                     	;# 
  1883  008E                     	;# 
  1884  008F                     	;# 
  1885  0090                     	;# 
  1886  0090                     	;# 
  1887  0091                     	;# 
  1888  0093                     	;# 
  1889  0094                     	;# 
  1890  0095                     	;# 
  1891  0096                     	;# 
  1892  0097                     	;# 
  1893  0098                     	;# 
  1894  0099                     	;# 
  1895  009A                     	;# 
  1896  009B                     	;# 
  1897  009C                     	;# 
  1898  009D                     	;# 
  1899  009E                     	;# 
  1900  010C                     	;# 
  1901  010D                     	;# 
  1902  010E                     	;# 
  1903  010E                     	;# 
  1904  010F                     	;# 
  1905  0110                     	;# 
  1906  0110                     	;# 
  1907  0111                     	;# 
  1908  0112                     	;# 
  1909  0112                     	;# 
  1910  0113                     	;# 
  1911  0114                     	;# 
  1912  0114                     	;# 
  1913  0115                     	;# 
  1914  0116                     	;# 
  1915  0116                     	;# 
  1916  0117                     	;# 
  1917  0119                     	;# 
  1918  0119                     	;# 
  1919  0119                     	;# 
  1920  011A                     	;# 
  1921  011A                     	;# 
  1922  011A                     	;# 
  1923  011B                     	;# 
  1924  011B                     	;# 
  1925  011B                     	;# 
  1926  011B                     	;# 
  1927  011B                     	;# 
  1928  011C                     	;# 
  1929  011C                     	;# 
  1930  011C                     	;# 
  1931  011D                     	;# 
  1932  011D                     	;# 
  1933  011D                     	;# 
  1934  011E                     	;# 
  1935  011E                     	;# 
  1936  011E                     	;# 
  1937  011F                     	;# 
  1938  011F                     	;# 
  1939  011F                     	;# 
  1940  011F                     	;# 
  1941  011F                     	;# 
  1942  018C                     	;# 
  1943  018D                     	;# 
  1944  018E                     	;# 
  1945  018F                     	;# 
  1946  0190                     	;# 
  1947  0191                     	;# 
  1948  0192                     	;# 
  1949  0196                     	;# 
  1950  0197                     	;# 
  1951  0198                     	;# 
  1952  0199                     	;# 
  1953  019A                     	;# 
  1954  019B                     	;# 
  1955  019C                     	;# 
  1956  020C                     	;# 
  1957  020C                     	;# 
  1958  020D                     	;# 
  1959  020E                     	;# 
  1960  020F                     	;# 
  1961  020F                     	;# 
  1962  0210                     	;# 
  1963  0210                     	;# 
  1964  0211                     	;# 
  1965  0211                     	;# 
  1966  0212                     	;# 
  1967  0212                     	;# 
  1968  0213                     	;# 
  1969  0214                     	;# 
  1970  0215                     	;# 
  1971  0215                     	;# 
  1972  0216                     	;# 
  1973  0216                     	;# 
  1974  0217                     	;# 
  1975  0217                     	;# 
  1976  0218                     	;# 
  1977  0218                     	;# 
  1978  0219                     	;# 
  1979  021A                     	;# 
  1980  021B                     	;# 
  1981  021B                     	;# 
  1982  021C                     	;# 
  1983  021C                     	;# 
  1984  021D                     	;# 
  1985  021D                     	;# 
  1986  021E                     	;# 
  1987  021F                     	;# 
  1988  028C                     	;# 
  1989  028C                     	;# 
  1990  028D                     	;# 
  1991  028D                     	;# 
  1992  028E                     	;# 
  1993  028F                     	;# 
  1994  0290                     	;# 
  1995  0290                     	;# 
  1996  0291                     	;# 
  1997  0292                     	;# 
  1998  0292                     	;# 
  1999  0293                     	;# 
  2000  0293                     	;# 
  2001  0294                     	;# 
  2002  0295                     	;# 
  2003  0296                     	;# 
  2004  0296                     	;# 
  2005  0297                     	;# 
  2006  0298                     	;# 
  2007  0298                     	;# 
  2008  0299                     	;# 
  2009  0299                     	;# 
  2010  029A                     	;# 
  2011  029B                     	;# 
  2012  029C                     	;# 
  2013  029C                     	;# 
  2014  029D                     	;# 
  2015  030C                     	;# 
  2016  030C                     	;# 
  2017  030D                     	;# 
  2018  030E                     	;# 
  2019  030F                     	;# 
  2020  0310                     	;# 
  2021  0310                     	;# 
  2022  0311                     	;# 
  2023  0312                     	;# 
  2024  0313                     	;# 
  2025  0314                     	;# 
  2026  0314                     	;# 
  2027  0315                     	;# 
  2028  0316                     	;# 
  2029  0317                     	;# 
  2030  0318                     	;# 
  2031  0318                     	;# 
  2032  0319                     	;# 
  2033  031A                     	;# 
  2034  031B                     	;# 
  2035  031C                     	;# 
  2036  031C                     	;# 
  2037  031D                     	;# 
  2038  031E                     	;# 
  2039  031F                     	;# 
  2040  038C                     	;# 
  2041  038D                     	;# 
  2042  038E                     	;# 
  2043  0390                     	;# 
  2044  0391                     	;# 
  2045  0392                     	;# 
  2046  040C                     	;# 
  2047  040D                     	;# 
  2048  040E                     	;# 
  2049  040F                     	;# 
  2050  0410                     	;# 
  2051  0411                     	;# 
  2052  0416                     	;# 
  2053  0416                     	;# 
  2054  0417                     	;# 
  2055  0418                     	;# 
  2056  0418                     	;# 
  2057  0419                     	;# 
  2058  041A                     	;# 
  2059  041A                     	;# 
  2060  041B                     	;# 
  2061  041C                     	;# 
  2062  041C                     	;# 
  2063  041D                     	;# 
  2064  041E                     	;# 
  2065  041F                     	;# 
  2066  048C                     	;# 
  2067  048C                     	;# 
  2068  048D                     	;# 
  2069  048E                     	;# 
  2070  048F                     	;# 
  2071  048F                     	;# 
  2072  0490                     	;# 
  2073  0491                     	;# 
  2074  0492                     	;# 
  2075  0492                     	;# 
  2076  0493                     	;# 
  2077  0494                     	;# 
  2078  0495                     	;# 
  2079  0495                     	;# 
  2080  0496                     	;# 
  2081  0497                     	;# 
  2082  0498                     	;# 
  2083  0499                     	;# 
  2084  049A                     	;# 
  2085  049B                     	;# 
  2086  049C                     	;# 
  2087  049D                     	;# 
  2088  050C                     	;# 
  2089  050C                     	;# 
  2090  050D                     	;# 
  2091  050E                     	;# 
  2092  050F                     	;# 
  2093  050F                     	;# 
  2094  0510                     	;# 
  2095  0511                     	;# 
  2096  0512                     	;# 
  2097  0512                     	;# 
  2098  0513                     	;# 
  2099  0514                     	;# 
  2100  0515                     	;# 
  2101  0515                     	;# 
  2102  0516                     	;# 
  2103  0517                     	;# 
  2104  0518                     	;# 
  2105  0519                     	;# 
  2106  051A                     	;# 
  2107  051B                     	;# 
  2108  051C                     	;# 
  2109  051D                     	;# 
  2110  058C                     	;# 
  2111  058C                     	;# 
  2112  058D                     	;# 
  2113  058E                     	;# 
  2114  058F                     	;# 
  2115  058F                     	;# 
  2116  0590                     	;# 
  2117  0591                     	;# 
  2118  0592                     	;# 
  2119  0593                     	;# 
  2120  060C                     	;# 
  2121  060D                     	;# 
  2122  060E                     	;# 
  2123  060F                     	;# 
  2124  0610                     	;# 
  2125  0611                     	;# 
  2126  0612                     	;# 
  2127  0613                     	;# 
  2128  0614                     	;# 
  2129  0616                     	;# 
  2130  0617                     	;# 
  2131  0618                     	;# 
  2132  0619                     	;# 
  2133  061A                     	;# 
  2134  061B                     	;# 
  2135  061C                     	;# 
  2136  061D                     	;# 
  2137  061E                     	;# 
  2138  068C                     	;# 
  2139  068D                     	;# 
  2140  068E                     	;# 
  2141  068F                     	;# 
  2142  0690                     	;# 
  2143  0691                     	;# 
  2144  0692                     	;# 
  2145  0693                     	;# 
  2146  0694                     	;# 
  2147  070C                     	;# 
  2148  070D                     	;# 
  2149  070E                     	;# 
  2150  070F                     	;# 
  2151  0710                     	;# 
  2152  0711                     	;# 
  2153  0712                     	;# 
  2154  0713                     	;# 
  2155  0714                     	;# 
  2156  0716                     	;# 
  2157  0717                     	;# 
  2158  0718                     	;# 
  2159  0719                     	;# 
  2160  071A                     	;# 
  2161  071B                     	;# 
  2162  071C                     	;# 
  2163  071D                     	;# 
  2164  071E                     	;# 
  2165  0796                     	;# 
  2166  0797                     	;# 
  2167  0798                     	;# 
  2168  0799                     	;# 
  2169  079A                     	;# 
  2170  079B                     	;# 
  2171  080C                     	;# 
  2172  080D                     	;# 
  2173  080E                     	;# 
  2174  080F                     	;# 
  2175  0810                     	;# 
  2176  0811                     	;# 
  2177  0812                     	;# 
  2178  0813                     	;# 
  2179  0814                     	;# 
  2180  081A                     	;# 
  2181  081B                     	;# 
  2182  081C                     	;# 
  2183  081D                     	;# 
  2184  081E                     	;# 
  2185  081F                     	;# 
  2186  088C                     	;# 
  2187  088D                     	;# 
  2188  088E                     	;# 
  2189  088F                     	;# 
  2190  0890                     	;# 
  2191  0891                     	;# 
  2192  0892                     	;# 
  2193  0893                     	;# 
  2194  0895                     	;# 
  2195  0896                     	;# 
  2196  0897                     	;# 
  2197  0898                     	;# 
  2198  0899                     	;# 
  2199  089A                     	;# 
  2200  089B                     	;# 
  2201  090C                     	;# 
  2202  090E                     	;# 
  2203  090F                     	;# 
  2204  091F                     	;# 
  2205  091F                     	;# 
  2206  098F                     	;# 
  2207  098F                     	;# 
  2208  0990                     	;# 
  2209  0991                     	;# 
  2210  0992                     	;# 
  2211  0993                     	;# 
  2212  0994                     	;# 
  2213  0995                     	;# 
  2214  0996                     	;# 
  2215  0997                     	;# 
  2216  0E0F                     	;# 
  2217  0E10                     	;# 
  2218  0E11                     	;# 
  2219  0E12                     	;# 
  2220  0E13                     	;# 
  2221  0E14                     	;# 
  2222  0E15                     	;# 
  2223  0E16                     	;# 
  2224  0E17                     	;# 
  2225  0E18                     	;# 
  2226  0E19                     	;# 
  2227  0E1A                     	;# 
  2228  0E1B                     	;# 
  2229  0E1C                     	;# 
  2230  0E1D                     	;# 
  2231  0E1E                     	;# 
  2232  0E1F                     	;# 
  2233  0E20                     	;# 
  2234  0E21                     	;# 
  2235  0E22                     	;# 
  2236  0E23                     	;# 
  2237  0E24                     	;# 
  2238  0E25                     	;# 
  2239  0E26                     	;# 
  2240  0E27                     	;# 
  2241  0E28                     	;# 
  2242  0E29                     	;# 
  2243  0E2A                     	;# 
  2244  0E2B                     	;# 
  2245  0E2C                     	;# 
  2246  0E2D                     	;# 
  2247  0E2E                     	;# 
  2248  0E2F                     	;# 
  2249  0E30                     	;# 
  2250  0E31                     	;# 
  2251  0E32                     	;# 
  2252  0E33                     	;# 
  2253  0E34                     	;# 
  2254  0E35                     	;# 
  2255  0E36                     	;# 
  2256  0E37                     	;# 
  2257  0E8F                     	;# 
  2258  0E90                     	;# 
  2259  0E91                     	;# 
  2260  0E92                     	;# 
  2261  0E93                     	;# 
  2262  0E94                     	;# 
  2263  0E95                     	;# 
  2264  0E96                     	;# 
  2265  0E97                     	;# 
  2266  0E9C                     	;# 
  2267  0E9D                     	;# 
  2268  0E9E                     	;# 
  2269  0EA1                     	;# 
  2270  0EA2                     	;# 
  2271  0EA3                     	;# 
  2272  0EA4                     	;# 
  2273  0EA5                     	;# 
  2274  0EA9                     	;# 
  2275  0EAA                     	;# 
  2276  0EAB                     	;# 
  2277  0EAC                     	;# 
  2278  0EB1                     	;# 
  2279  0EB2                     	;# 
  2280  0EB3                     	;# 
  2281  0EB8                     	;# 
  2282  0EB9                     	;# 
  2283  0EBA                     	;# 
  2284  0EBB                     	;# 
  2285  0EBC                     	;# 
  2286  0EBD                     	;# 
  2287  0EBE                     	;# 
  2288  0EC3                     	;# 
  2289  0EC5                     	;# 
  2290  0EC6                     	;# 
  2291  0EC7                     	;# 
  2292  0EC8                     	;# 
  2293  0EC9                     	;# 
  2294  0ECA                     	;# 
  2295  0ECB                     	;# 
  2296  0ECC                     	;# 
  2297  0F10                     	;# 
  2298  0F11                     	;# 
  2299  0F12                     	;# 
  2300  0F13                     	;# 
  2301  0F14                     	;# 
  2302  0F15                     	;# 
  2303  0F16                     	;# 
  2304  0F17                     	;# 
  2305  0F18                     	;# 
  2306  0F19                     	;# 
  2307  0F1A                     	;# 
  2308  0F1B                     	;# 
  2309  0F1C                     	;# 
  2310  0F1D                     	;# 
  2311  0F1E                     	;# 
  2312  0F1F                     	;# 
  2313  0F20                     	;# 
  2314  0F21                     	;# 
  2315  0F22                     	;# 
  2316  0F23                     	;# 
  2317  0F24                     	;# 
  2318  0F25                     	;# 
  2319  0F26                     	;# 
  2320  0F27                     	;# 
  2321  0F28                     	;# 
  2322  0F29                     	;# 
  2323  0F2A                     	;# 
  2324  0F2B                     	;# 
  2325  0F2C                     	;# 
  2326  0F2D                     	;# 
  2327  0F2E                     	;# 
  2328  0F2F                     	;# 
  2329  0F30                     	;# 
  2330  0F31                     	;# 
  2331  0F32                     	;# 
  2332  0F38                     	;# 
  2333  0F39                     	;# 
  2334  0F3A                     	;# 
  2335  0F3B                     	;# 
  2336  0F3C                     	;# 
  2337  0F3D                     	;# 
  2338  0F3E                     	;# 
  2339  0F3F                     	;# 
  2340  0F40                     	;# 
  2341  0F41                     	;# 
  2342  0F43                     	;# 
  2343  0F44                     	;# 
  2344  0F45                     	;# 
  2345  0F46                     	;# 
  2346  0F47                     	;# 
  2347  0F48                     	;# 
  2348  0F49                     	;# 
  2349  0F4A                     	;# 
  2350  0F4B                     	;# 
  2351  0F4C                     	;# 
  2352  0F4E                     	;# 
  2353  0F4F                     	;# 
  2354  0F50                     	;# 
  2355  0F51                     	;# 
  2356  0F52                     	;# 
  2357  0F53                     	;# 
  2358  0F54                     	;# 
  2359  0F55                     	;# 
  2360  0F56                     	;# 
  2361  0F57                     	;# 
  2362  0F59                     	;# 
  2363  0F5A                     	;# 
  2364  0F5B                     	;# 
  2365  0F5C                     	;# 
  2366  0F5D                     	;# 
  2367  0F61                     	;# 
  2368  0F62                     	;# 
  2369  0F64                     	;# 
  2370  0F65                     	;# 
  2371  0F66                     	;# 
  2372  0F67                     	;# 
  2373  0F68                     	;# 
  2374  0F69                     	;# 
  2375  0F6A                     	;# 
  2376  0F6B                     	;# 
  2377  0F6C                     	;# 
  2378  0F6D                     	;# 
  2379  0FE4                     	;# 
  2380  0FE5                     	;# 
  2381  0FE6                     	;# 
  2382  0FE7                     	;# 
  2383  0FE8                     	;# 
  2384  0FE9                     	;# 
  2385  0FEA                     	;# 
  2386  0FEB                     	;# 
  2387  0FED                     	;# 
  2388  0FEE                     	;# 
  2389  0FEF                     	;# 
  2390  0000                     	;# 
  2391  0001                     	;# 
  2392  0002                     	;# 
  2393  0003                     	;# 
  2394  0004                     	;# 
  2395  0005                     	;# 
  2396  0006                     	;# 
  2397  0007                     	;# 
  2398  0008                     	;# 
  2399  0009                     	;# 
  2400  000A                     	;# 
  2401  000B                     	;# 
  2402  000C                     	;# 
  2403  000D                     	;# 
  2404  000E                     	;# 
  2405  000F                     	;# 
  2406  0010                     	;# 
  2407  0011                     	;# 
  2408  0012                     	;# 
  2409  0013                     	;# 
  2410  0014                     	;# 
  2411  0015                     	;# 
  2412  0016                     	;# 
  2413  0017                     	;# 
  2414  0018                     	;# 
  2415  0019                     	;# 
  2416  001A                     	;# 
  2417  001C                     	;# 
  2418  001C                     	;# 
  2419  001D                     	;# 
  2420  001D                     	;# 
  2421  001E                     	;# 
  2422  001F                     	;# 
  2423  008C                     	;# 
  2424  008C                     	;# 
  2425  008D                     	;# 
  2426  008E                     	;# 
  2427  008E                     	;# 
  2428  008F                     	;# 
  2429  0090                     	;# 
  2430  0090                     	;# 
  2431  0091                     	;# 
  2432  0093                     	;# 
  2433  0094                     	;# 
  2434  0095                     	;# 
  2435  0096                     	;# 
  2436  0097                     	;# 
  2437  0098                     	;# 
  2438  0099                     	;# 
  2439  009A                     	;# 
  2440  009B                     	;# 
  2441  009C                     	;# 
  2442  009D                     	;# 
  2443  009E                     	;# 
  2444  010C                     	;# 
  2445  010D                     	;# 
  2446  010E                     	;# 
  2447  010E                     	;# 
  2448  010F                     	;# 
  2449  0110                     	;# 
  2450  0110                     	;# 
  2451  0111                     	;# 
  2452  0112                     	;# 
  2453  0112                     	;# 
  2454  0113                     	;# 
  2455  0114                     	;# 
  2456  0114                     	;# 
  2457  0115                     	;# 
  2458  0116                     	;# 
  2459  0116                     	;# 
  2460  0117                     	;# 
  2461  0119                     	;# 
  2462  0119                     	;# 
  2463  0119                     	;# 
  2464  011A                     	;# 
  2465  011A                     	;# 
  2466  011A                     	;# 
  2467  011B                     	;# 
  2468  011B                     	;# 
  2469  011B                     	;# 
  2470  011B                     	;# 
  2471  011B                     	;# 
  2472  011C                     	;# 
  2473  011C                     	;# 
  2474  011C                     	;# 
  2475  011D                     	;# 
  2476  011D                     	;# 
  2477  011D                     	;# 
  2478  011E                     	;# 
  2479  011E                     	;# 
  2480  011E                     	;# 
  2481  011F                     	;# 
  2482  011F                     	;# 
  2483  011F                     	;# 
  2484  011F                     	;# 
  2485  011F                     	;# 
  2486  018C                     	;# 
  2487  018D                     	;# 
  2488  018E                     	;# 
  2489  018F                     	;# 
  2490  0190                     	;# 
  2491  0191                     	;# 
  2492  0192                     	;# 
  2493  0196                     	;# 
  2494  0197                     	;# 
  2495  0198                     	;# 
  2496  0199                     	;# 
  2497  019A                     	;# 
  2498  019B                     	;# 
  2499  019C                     	;# 
  2500  020C                     	;# 
  2501  020C                     	;# 
  2502  020D                     	;# 
  2503  020E                     	;# 
  2504  020F                     	;# 
  2505  020F                     	;# 
  2506  0210                     	;# 
  2507  0210                     	;# 
  2508  0211                     	;# 
  2509  0211                     	;# 
  2510  0212                     	;# 
  2511  0212                     	;# 
  2512  0213                     	;# 
  2513  0214                     	;# 
  2514  0215                     	;# 
  2515  0215                     	;# 
  2516  0216                     	;# 
  2517  0216                     	;# 
  2518  0217                     	;# 
  2519  0217                     	;# 
  2520  0218                     	;# 
  2521  0218                     	;# 
  2522  0219                     	;# 
  2523  021A                     	;# 
  2524  021B                     	;# 
  2525  021B                     	;# 
  2526  021C                     	;# 
  2527  021C                     	;# 
  2528  021D                     	;# 
  2529  021D                     	;# 
  2530  021E                     	;# 
  2531  021F                     	;# 
  2532  028C                     	;# 
  2533  028C                     	;# 
  2534  028D                     	;# 
  2535  028D                     	;# 
  2536  028E                     	;# 
  2537  028F                     	;# 
  2538  0290                     	;# 
  2539  0290                     	;# 
  2540  0291                     	;# 
  2541  0292                     	;# 
  2542  0292                     	;# 
  2543  0293                     	;# 
  2544  0293                     	;# 
  2545  0294                     	;# 
  2546  0295                     	;# 
  2547  0296                     	;# 
  2548  0296                     	;# 
  2549  0297                     	;# 
  2550  0298                     	;# 
  2551  0298                     	;# 
  2552  0299                     	;# 
  2553  0299                     	;# 
  2554  029A                     	;# 
  2555  029B                     	;# 
  2556  029C                     	;# 
  2557  029C                     	;# 
  2558  029D                     	;# 
  2559  030C                     	;# 
  2560  030C                     	;# 
  2561  030D                     	;# 
  2562  030E                     	;# 
  2563  030F                     	;# 
  2564  0310                     	;# 
  2565  0310                     	;# 
  2566  0311                     	;# 
  2567  0312                     	;# 
  2568  0313                     	;# 
  2569  0314                     	;# 
  2570  0314                     	;# 
  2571  0315                     	;# 
  2572  0316                     	;# 
  2573  0317                     	;# 
  2574  0318                     	;# 
  2575  0318                     	;# 
  2576  0319                     	;# 
  2577  031A                     	;# 
  2578  031B                     	;# 
  2579  031C                     	;# 
  2580  031C                     	;# 
  2581  031D                     	;# 
  2582  031E                     	;# 
  2583  031F                     	;# 
  2584  038C                     	;# 
  2585  038D                     	;# 
  2586  038E                     	;# 
  2587  0390                     	;# 
  2588  0391                     	;# 
  2589  0392                     	;# 
  2590  040C                     	;# 
  2591  040D                     	;# 
  2592  040E                     	;# 
  2593  040F                     	;# 
  2594  0410                     	;# 
  2595  0411                     	;# 
  2596  0416                     	;# 
  2597  0416                     	;# 
  2598  0417                     	;# 
  2599  0418                     	;# 
  2600  0418                     	;# 
  2601  0419                     	;# 
  2602  041A                     	;# 
  2603  041A                     	;# 
  2604  041B                     	;# 
  2605  041C                     	;# 
  2606  041C                     	;# 
  2607  041D                     	;# 
  2608  041E                     	;# 
  2609  041F                     	;# 
  2610  048C                     	;# 
  2611  048C                     	;# 
  2612  048D                     	;# 
  2613  048E                     	;# 
  2614  048F                     	;# 
  2615  048F                     	;# 
  2616  0490                     	;# 
  2617  0491                     	;# 
  2618  0492                     	;# 
  2619  0492                     	;# 
  2620  0493                     	;# 
  2621  0494                     	;# 
  2622  0495                     	;# 
  2623  0495                     	;# 
  2624  0496                     	;# 
  2625  0497                     	;# 
  2626  0498                     	;# 
  2627  0499                     	;# 
  2628  049A                     	;# 
  2629  049B                     	;# 
  2630  049C                     	;# 
  2631  049D                     	;# 
  2632  050C                     	;# 
  2633  050C                     	;# 
  2634  050D                     	;# 
  2635  050E                     	;# 
  2636  050F                     	;# 
  2637  050F                     	;# 
  2638  0510                     	;# 
  2639  0511                     	;# 
  2640  0512                     	;# 
  2641  0512                     	;# 
  2642  0513                     	;# 
  2643  0514                     	;# 
  2644  0515                     	;# 
  2645  0515                     	;# 
  2646  0516                     	;# 
  2647  0517                     	;# 
  2648  0518                     	;# 
  2649  0519                     	;# 
  2650  051A                     	;# 
  2651  051B                     	;# 
  2652  051C                     	;# 
  2653  051D                     	;# 
  2654  058C                     	;# 
  2655  058C                     	;# 
  2656  058D                     	;# 
  2657  058E                     	;# 
  2658  058F                     	;# 
  2659  058F                     	;# 
  2660  0590                     	;# 
  2661  0591                     	;# 
  2662  0592                     	;# 
  2663  0593                     	;# 
  2664  060C                     	;# 
  2665  060D                     	;# 
  2666  060E                     	;# 
  2667  060F                     	;# 
  2668  0610                     	;# 
  2669  0611                     	;# 
  2670  0612                     	;# 
  2671  0613                     	;# 
  2672  0614                     	;# 
  2673  0616                     	;# 
  2674  0617                     	;# 
  2675  0618                     	;# 
  2676  0619                     	;# 
  2677  061A                     	;# 
  2678  061B                     	;# 
  2679  061C                     	;# 
  2680  061D                     	;# 
  2681  061E                     	;# 
  2682  068C                     	;# 
  2683  068D                     	;# 
  2684  068E                     	;# 
  2685  068F                     	;# 
  2686  0690                     	;# 
  2687  0691                     	;# 
  2688  0692                     	;# 
  2689  0693                     	;# 
  2690  0694                     	;# 
  2691  070C                     	;# 
  2692  070D                     	;# 
  2693  070E                     	;# 
  2694  070F                     	;# 
  2695  0710                     	;# 
  2696  0711                     	;# 
  2697  0712                     	;# 
  2698  0713                     	;# 
  2699  0714                     	;# 
  2700  0716                     	;# 
  2701  0717                     	;# 
  2702  0718                     	;# 
  2703  0719                     	;# 
  2704  071A                     	;# 
  2705  071B                     	;# 
  2706  071C                     	;# 
  2707  071D                     	;# 
  2708  071E                     	;# 
  2709  0796                     	;# 
  2710  0797                     	;# 
  2711  0798                     	;# 
  2712  0799                     	;# 
  2713  079A                     	;# 
  2714  079B                     	;# 
  2715  080C                     	;# 
  2716  080D                     	;# 
  2717  080E                     	;# 
  2718  080F                     	;# 
  2719  0810                     	;# 
  2720  0811                     	;# 
  2721  0812                     	;# 
  2722  0813                     	;# 
  2723  0814                     	;# 
  2724  081A                     	;# 
  2725  081B                     	;# 
  2726  081C                     	;# 
  2727  081D                     	;# 
  2728  081E                     	;# 
  2729  081F                     	;# 
  2730  088C                     	;# 
  2731  088D                     	;# 
  2732  088E                     	;# 
  2733  088F                     	;# 
  2734  0890                     	;# 
  2735  0891                     	;# 
  2736  0892                     	;# 
  2737  0893                     	;# 
  2738  0895                     	;# 
  2739  0896                     	;# 
  2740  0897                     	;# 
  2741  0898                     	;# 
  2742  0899                     	;# 
  2743  089A                     	;# 
  2744  089B                     	;# 
  2745  090C                     	;# 
  2746  090E                     	;# 
  2747  090F                     	;# 
  2748  091F                     	;# 
  2749  091F                     	;# 
  2750  098F                     	;# 
  2751  098F                     	;# 
  2752  0990                     	;# 
  2753  0991                     	;# 
  2754  0992                     	;# 
  2755  0993                     	;# 
  2756  0994                     	;# 
  2757  0995                     	;# 
  2758  0996                     	;# 
  2759  0997                     	;# 
  2760  0E0F                     	;# 
  2761  0E10                     	;# 
  2762  0E11                     	;# 
  2763  0E12                     	;# 
  2764  0E13                     	;# 
  2765  0E14                     	;# 
  2766  0E15                     	;# 
  2767  0E16                     	;# 
  2768  0E17                     	;# 
  2769  0E18                     	;# 
  2770  0E19                     	;# 
  2771  0E1A                     	;# 
  2772  0E1B                     	;# 
  2773  0E1C                     	;# 
  2774  0E1D                     	;# 
  2775  0E1E                     	;# 
  2776  0E1F                     	;# 
  2777  0E20                     	;# 
  2778  0E21                     	;# 
  2779  0E22                     	;# 
  2780  0E23                     	;# 
  2781  0E24                     	;# 
  2782  0E25                     	;# 
  2783  0E26                     	;# 
  2784  0E27                     	;# 
  2785  0E28                     	;# 
  2786  0E29                     	;# 
  2787  0E2A                     	;# 
  2788  0E2B                     	;# 
  2789  0E2C                     	;# 
  2790  0E2D                     	;# 
  2791  0E2E                     	;# 
  2792  0E2F                     	;# 
  2793  0E30                     	;# 
  2794  0E31                     	;# 
  2795  0E32                     	;# 
  2796  0E33                     	;# 
  2797  0E34                     	;# 
  2798  0E35                     	;# 
  2799  0E36                     	;# 
  2800  0E37                     	;# 
  2801  0E8F                     	;# 
  2802  0E90                     	;# 
  2803  0E91                     	;# 
  2804  0E92                     	;# 
  2805  0E93                     	;# 
  2806  0E94                     	;# 
  2807  0E95                     	;# 
  2808  0E96                     	;# 
  2809  0E97                     	;# 
  2810  0E9C                     	;# 
  2811  0E9D                     	;# 
  2812  0E9E                     	;# 
  2813  0EA1                     	;# 
  2814  0EA2                     	;# 
  2815  0EA3                     	;# 
  2816  0EA4                     	;# 
  2817  0EA5                     	;# 
  2818  0EA9                     	;# 
  2819  0EAA                     	;# 
  2820  0EAB                     	;# 
  2821  0EAC                     	;# 
  2822  0EB1                     	;# 
  2823  0EB2                     	;# 
  2824  0EB3                     	;# 
  2825  0EB8                     	;# 
  2826  0EB9                     	;# 
  2827  0EBA                     	;# 
  2828  0EBB                     	;# 
  2829  0EBC                     	;# 
  2830  0EBD                     	;# 
  2831  0EBE                     	;# 
  2832  0EC3                     	;# 
  2833  0EC5                     	;# 
  2834  0EC6                     	;# 
  2835  0EC7                     	;# 
  2836  0EC8                     	;# 
  2837  0EC9                     	;# 
  2838  0ECA                     	;# 
  2839  0ECB                     	;# 
  2840  0ECC                     	;# 
  2841  0F10                     	;# 
  2842  0F11                     	;# 
  2843  0F12                     	;# 
  2844  0F13                     	;# 
  2845  0F14                     	;# 
  2846  0F15                     	;# 
  2847  0F16                     	;# 
  2848  0F17                     	;# 
  2849  0F18                     	;# 
  2850  0F19                     	;# 
  2851  0F1A                     	;# 
  2852  0F1B                     	;# 
  2853  0F1C                     	;# 
  2854  0F1D                     	;# 
  2855  0F1E                     	;# 
  2856  0F1F                     	;# 
  2857  0F20                     	;# 
  2858  0F21                     	;# 
  2859  0F22                     	;# 
  2860  0F23                     	;# 
  2861  0F24                     	;# 
  2862  0F25                     	;# 
  2863  0F26                     	;# 
  2864  0F27                     	;# 
  2865  0F28                     	;# 
  2866  0F29                     	;# 
  2867  0F2A                     	;# 
  2868  0F2B                     	;# 
  2869  0F2C                     	;# 
  2870  0F2D                     	;# 
  2871  0F2E                     	;# 
  2872  0F2F                     	;# 
  2873  0F30                     	;# 
  2874  0F31                     	;# 
  2875  0F32                     	;# 
  2876  0F38                     	;# 
  2877  0F39                     	;# 
  2878  0F3A                     	;# 
  2879  0F3B                     	;# 
  2880  0F3C                     	;# 
  2881  0F3D                     	;# 
  2882  0F3E                     	;# 
  2883  0F3F                     	;# 
  2884  0F40                     	;# 
  2885  0F41                     	;# 
  2886  0F43                     	;# 
  2887  0F44                     	;# 
  2888  0F45                     	;# 
  2889  0F46                     	;# 
  2890  0F47                     	;# 
  2891  0F48                     	;# 
  2892  0F49                     	;# 
  2893  0F4A                     	;# 
  2894  0F4B                     	;# 
  2895  0F4C                     	;# 
  2896  0F4E                     	;# 
  2897  0F4F                     	;# 
  2898  0F50                     	;# 
  2899  0F51                     	;# 
  2900  0F52                     	;# 
  2901  0F53                     	;# 
  2902  0F54                     	;# 
  2903  0F55                     	;# 
  2904  0F56                     	;# 
  2905  0F57                     	;# 
  2906  0F59                     	;# 
  2907  0F5A                     	;# 
  2908  0F5B                     	;# 
  2909  0F5C                     	;# 
  2910  0F5D                     	;# 
  2911  0F61                     	;# 
  2912  0F62                     	;# 
  2913  0F64                     	;# 
  2914  0F65                     	;# 
  2915  0F66                     	;# 
  2916  0F67                     	;# 
  2917  0F68                     	;# 
  2918  0F69                     	;# 
  2919  0F6A                     	;# 
  2920  0F6B                     	;# 
  2921  0F6C                     	;# 
  2922  0F6D                     	;# 
  2923  0FE4                     	;# 
  2924  0FE5                     	;# 
  2925  0FE6                     	;# 
  2926  0FE7                     	;# 
  2927  0FE8                     	;# 
  2928  0FE9                     	;# 
  2929  0FEA                     	;# 
  2930  0FEB                     	;# 
  2931  0FED                     	;# 
  2932  0FEE                     	;# 
  2933  0FEF                     	;# 
  2934  0000                     	;# 
  2935  0001                     	;# 
  2936  0002                     	;# 
  2937  0003                     	;# 
  2938  0004                     	;# 
  2939  0005                     	;# 
  2940  0006                     	;# 
  2941  0007                     	;# 
  2942  0008                     	;# 
  2943  0009                     	;# 
  2944  000A                     	;# 
  2945  000B                     	;# 
  2946  000C                     	;# 
  2947  000D                     	;# 
  2948  000E                     	;# 
  2949  000F                     	;# 
  2950  0010                     	;# 
  2951  0011                     	;# 
  2952  0012                     	;# 
  2953  0013                     	;# 
  2954  0014                     	;# 
  2955  0015                     	;# 
  2956  0016                     	;# 
  2957  0017                     	;# 
  2958  0018                     	;# 
  2959  0019                     	;# 
  2960  001A                     	;# 
  2961  001C                     	;# 
  2962  001C                     	;# 
  2963  001D                     	;# 
  2964  001D                     	;# 
  2965  001E                     	;# 
  2966  001F                     	;# 
  2967  008C                     	;# 
  2968  008C                     	;# 
  2969  008D                     	;# 
  2970  008E                     	;# 
  2971  008E                     	;# 
  2972  008F                     	;# 
  2973  0090                     	;# 
  2974  0090                     	;# 
  2975  0091                     	;# 
  2976  0093                     	;# 
  2977  0094                     	;# 
  2978  0095                     	;# 
  2979  0096                     	;# 
  2980  0097                     	;# 
  2981  0098                     	;# 
  2982  0099                     	;# 
  2983  009A                     	;# 
  2984  009B                     	;# 
  2985  009C                     	;# 
  2986  009D                     	;# 
  2987  009E                     	;# 
  2988  010C                     	;# 
  2989  010D                     	;# 
  2990  010E                     	;# 
  2991  010E                     	;# 
  2992  010F                     	;# 
  2993  0110                     	;# 
  2994  0110                     	;# 
  2995  0111                     	;# 
  2996  0112                     	;# 
  2997  0112                     	;# 
  2998  0113                     	;# 
  2999  0114                     	;# 
  3000  0114                     	;# 
  3001  0115                     	;# 
  3002  0116                     	;# 
  3003  0116                     	;# 
  3004  0117                     	;# 
  3005  0119                     	;# 
  3006  0119                     	;# 
  3007  0119                     	;# 
  3008  011A                     	;# 
  3009  011A                     	;# 
  3010  011A                     	;# 
  3011  011B                     	;# 
  3012  011B                     	;# 
  3013  011B                     	;# 
  3014  011B                     	;# 
  3015  011B                     	;# 
  3016  011C                     	;# 
  3017  011C                     	;# 
  3018  011C                     	;# 
  3019  011D                     	;# 
  3020  011D                     	;# 
  3021  011D                     	;# 
  3022  011E                     	;# 
  3023  011E                     	;# 
  3024  011E                     	;# 
  3025  011F                     	;# 
  3026  011F                     	;# 
  3027  011F                     	;# 
  3028  011F                     	;# 
  3029  011F                     	;# 
  3030  018C                     	;# 
  3031  018D                     	;# 
  3032  018E                     	;# 
  3033  018F                     	;# 
  3034  0190                     	;# 
  3035  0191                     	;# 
  3036  0192                     	;# 
  3037  0196                     	;# 
  3038  0197                     	;# 
  3039  0198                     	;# 
  3040  0199                     	;# 
  3041  019A                     	;# 
  3042  019B                     	;# 
  3043  019C                     	;# 
  3044  020C                     	;# 
  3045  020C                     	;# 
  3046  020D                     	;# 
  3047  020E                     	;# 
  3048  020F                     	;# 
  3049  020F                     	;# 
  3050  0210                     	;# 
  3051  0210                     	;# 
  3052  0211                     	;# 
  3053  0211                     	;# 
  3054  0212                     	;# 
  3055  0212                     	;# 
  3056  0213                     	;# 
  3057  0214                     	;# 
  3058  0215                     	;# 
  3059  0215                     	;# 
  3060  0216                     	;# 
  3061  0216                     	;# 
  3062  0217                     	;# 
  3063  0217                     	;# 
  3064  0218                     	;# 
  3065  0218                     	;# 
  3066  0219                     	;# 
  3067  021A                     	;# 
  3068  021B                     	;# 
  3069  021B                     	;# 
  3070  021C                     	;# 
  3071  021C                     	;# 
  3072  021D                     	;# 
  3073  021D                     	;# 
  3074  021E                     	;# 
  3075  021F                     	;# 
  3076  028C                     	;# 
  3077  028C                     	;# 
  3078  028D                     	;# 
  3079  028D                     	;# 
  3080  028E                     	;# 
  3081  028F                     	;# 
  3082  0290                     	;# 
  3083  0290                     	;# 
  3084  0291                     	;# 
  3085  0292                     	;# 
  3086  0292                     	;# 
  3087  0293                     	;# 
  3088  0293                     	;# 
  3089  0294                     	;# 
  3090  0295                     	;# 
  3091  0296                     	;# 
  3092  0296                     	;# 
  3093  0297                     	;# 
  3094  0298                     	;# 
  3095  0298                     	;# 
  3096  0299                     	;# 
  3097  0299                     	;# 
  3098  029A                     	;# 
  3099  029B                     	;# 
  3100  029C                     	;# 
  3101  029C                     	;# 
  3102  029D                     	;# 
  3103  030C                     	;# 
  3104  030C                     	;# 
  3105  030D                     	;# 
  3106  030E                     	;# 
  3107  030F                     	;# 
  3108  0310                     	;# 
  3109  0310                     	;# 
  3110  0311                     	;# 
  3111  0312                     	;# 
  3112  0313                     	;# 
  3113  0314                     	;# 
  3114  0314                     	;# 
  3115  0315                     	;# 
  3116  0316                     	;# 
  3117  0317                     	;# 
  3118  0318                     	;# 
  3119  0318                     	;# 
  3120  0319                     	;# 
  3121  031A                     	;# 
  3122  031B                     	;# 
  3123  031C                     	;# 
  3124  031C                     	;# 
  3125  031D                     	;# 
  3126  031E                     	;# 
  3127  031F                     	;# 
  3128  038C                     	;# 
  3129  038D                     	;# 
  3130  038E                     	;# 
  3131  0390                     	;# 
  3132  0391                     	;# 
  3133  0392                     	;# 
  3134  040C                     	;# 
  3135  040D                     	;# 
  3136  040E                     	;# 
  3137  040F                     	;# 
  3138  0410                     	;# 
  3139  0411                     	;# 
  3140  0416                     	;# 
  3141  0416                     	;# 
  3142  0417                     	;# 
  3143  0418                     	;# 
  3144  0418                     	;# 
  3145  0419                     	;# 
  3146  041A                     	;# 
  3147  041A                     	;# 
  3148  041B                     	;# 
  3149  041C                     	;# 
  3150  041C                     	;# 
  3151  041D                     	;# 
  3152  041E                     	;# 
  3153  041F                     	;# 
  3154  048C                     	;# 
  3155  048C                     	;# 
  3156  048D                     	;# 
  3157  048E                     	;# 
  3158  048F                     	;# 
  3159  048F                     	;# 
  3160  0490                     	;# 
  3161  0491                     	;# 
  3162  0492                     	;# 
  3163  0492                     	;# 
  3164  0493                     	;# 
  3165  0494                     	;# 
  3166  0495                     	;# 
  3167  0495                     	;# 
  3168  0496                     	;# 
  3169  0497                     	;# 
  3170  0498                     	;# 
  3171  0499                     	;# 
  3172  049A                     	;# 
  3173  049B                     	;# 
  3174  049C                     	;# 
  3175  049D                     	;# 
  3176  050C                     	;# 
  3177  050C                     	;# 
  3178  050D                     	;# 
  3179  050E                     	;# 
  3180  050F                     	;# 
  3181  050F                     	;# 
  3182  0510                     	;# 
  3183  0511                     	;# 
  3184  0512                     	;# 
  3185  0512                     	;# 
  3186  0513                     	;# 
  3187  0514                     	;# 
  3188  0515                     	;# 
  3189  0515                     	;# 
  3190  0516                     	;# 
  3191  0517                     	;# 
  3192  0518                     	;# 
  3193  0519                     	;# 
  3194  051A                     	;# 
  3195  051B                     	;# 
  3196  051C                     	;# 
  3197  051D                     	;# 
  3198  058C                     	;# 
  3199  058C                     	;# 
  3200  058D                     	;# 
  3201  058E                     	;# 
  3202  058F                     	;# 
  3203  058F                     	;# 
  3204  0590                     	;# 
  3205  0591                     	;# 
  3206  0592                     	;# 
  3207  0593                     	;# 
  3208  060C                     	;# 
  3209  060D                     	;# 
  3210  060E                     	;# 
  3211  060F                     	;# 
  3212  0610                     	;# 
  3213  0611                     	;# 
  3214  0612                     	;# 
  3215  0613                     	;# 
  3216  0614                     	;# 
  3217  0616                     	;# 
  3218  0617                     	;# 
  3219  0618                     	;# 
  3220  0619                     	;# 
  3221  061A                     	;# 
  3222  061B                     	;# 
  3223  061C                     	;# 
  3224  061D                     	;# 
  3225  061E                     	;# 
  3226  068C                     	;# 
  3227  068D                     	;# 
  3228  068E                     	;# 
  3229  068F                     	;# 
  3230  0690                     	;# 
  3231  0691                     	;# 
  3232  0692                     	;# 
  3233  0693                     	;# 
  3234  0694                     	;# 
  3235  070C                     	;# 
  3236  070D                     	;# 
  3237  070E                     	;# 
  3238  070F                     	;# 
  3239  0710                     	;# 
  3240  0711                     	;# 
  3241  0712                     	;# 
  3242  0713                     	;# 
  3243  0714                     	;# 
  3244  0716                     	;# 
  3245  0717                     	;# 
  3246  0718                     	;# 
  3247  0719                     	;# 
  3248  071A                     	;# 
  3249  071B                     	;# 
  3250  071C                     	;# 
  3251  071D                     	;# 
  3252  071E                     	;# 
  3253  0796                     	;# 
  3254  0797                     	;# 
  3255  0798                     	;# 
  3256  0799                     	;# 
  3257  079A                     	;# 
  3258  079B                     	;# 
  3259  080C                     	;# 
  3260  080D                     	;# 
  3261  080E                     	;# 
  3262  080F                     	;# 
  3263  0810                     	;# 
  3264  0811                     	;# 
  3265  0812                     	;# 
  3266  0813                     	;# 
  3267  0814                     	;# 
  3268  081A                     	;# 
  3269  081B                     	;# 
  3270  081C                     	;# 
  3271  081D                     	;# 
  3272  081E                     	;# 
  3273  081F                     	;# 
  3274  088C                     	;# 
  3275  088D                     	;# 
  3276  088E                     	;# 
  3277  088F                     	;# 
  3278  0890                     	;# 
  3279  0891                     	;# 
  3280  0892                     	;# 
  3281  0893                     	;# 
  3282  0895                     	;# 
  3283  0896                     	;# 
  3284  0897                     	;# 
  3285  0898                     	;# 
  3286  0899                     	;# 
  3287  089A                     	;# 
  3288  089B                     	;# 
  3289  090C                     	;# 
  3290  090E                     	;# 
  3291  090F                     	;# 
  3292  091F                     	;# 
  3293  091F                     	;# 
  3294  098F                     	;# 
  3295  098F                     	;# 
  3296  0990                     	;# 
  3297  0991                     	;# 
  3298  0992                     	;# 
  3299  0993                     	;# 
  3300  0994                     	;# 
  3301  0995                     	;# 
  3302  0996                     	;# 
  3303  0997                     	;# 
  3304  0E0F                     	;# 
  3305  0E10                     	;# 
  3306  0E11                     	;# 
  3307  0E12                     	;# 
  3308  0E13                     	;# 
  3309  0E14                     	;# 
  3310  0E15                     	;# 
  3311  0E16                     	;# 
  3312  0E17                     	;# 
  3313  0E18                     	;# 
  3314  0E19                     	;# 
  3315  0E1A                     	;# 
  3316  0E1B                     	;# 
  3317  0E1C                     	;# 
  3318  0E1D                     	;# 
  3319  0E1E                     	;# 
  3320  0E1F                     	;# 
  3321  0E20                     	;# 
  3322  0E21                     	;# 
  3323  0E22                     	;# 
  3324  0E23                     	;# 
  3325  0E24                     	;# 
  3326  0E25                     	;# 
  3327  0E26                     	;# 
  3328  0E27                     	;# 
  3329  0E28                     	;# 
  3330  0E29                     	;# 
  3331  0E2A                     	;# 
  3332  0E2B                     	;# 
  3333  0E2C                     	;# 
  3334  0E2D                     	;# 
  3335  0E2E                     	;# 
  3336  0E2F                     	;# 
  3337  0E30                     	;# 
  3338  0E31                     	;# 
  3339  0E32                     	;# 
  3340  0E33                     	;# 
  3341  0E34                     	;# 
  3342  0E35                     	;# 
  3343  0E36                     	;# 
  3344  0E37                     	;# 
  3345  0E8F                     	;# 
  3346  0E90                     	;# 
  3347  0E91                     	;# 
  3348  0E92                     	;# 
  3349  0E93                     	;# 
  3350  0E94                     	;# 
  3351  0E95                     	;# 
  3352  0E96                     	;# 
  3353  0E97                     	;# 
  3354  0E9C                     	;# 
  3355  0E9D                     	;# 
  3356  0E9E                     	;# 
  3357  0EA1                     	;# 
  3358  0EA2                     	;# 
  3359  0EA3                     	;# 
  3360  0EA4                     	;# 
  3361  0EA5                     	;# 
  3362  0EA9                     	;# 
  3363  0EAA                     	;# 
  3364  0EAB                     	;# 
  3365  0EAC                     	;# 
  3366  0EB1                     	;# 
  3367  0EB2                     	;# 
  3368  0EB3                     	;# 
  3369  0EB8                     	;# 
  3370  0EB9                     	;# 
  3371  0EBA                     	;# 
  3372  0EBB                     	;# 
  3373  0EBC                     	;# 
  3374  0EBD                     	;# 
  3375  0EBE                     	;# 
  3376  0EC3                     	;# 
  3377  0EC5                     	;# 
  3378  0EC6                     	;# 
  3379  0EC7                     	;# 
  3380  0EC8                     	;# 
  3381  0EC9                     	;# 
  3382  0ECA                     	;# 
  3383  0ECB                     	;# 
  3384  0ECC                     	;# 
  3385  0F10                     	;# 
  3386  0F11                     	;# 
  3387  0F12                     	;# 
  3388  0F13                     	;# 
  3389  0F14                     	;# 
  3390  0F15                     	;# 
  3391  0F16                     	;# 
  3392  0F17                     	;# 
  3393  0F18                     	;# 
  3394  0F19                     	;# 
  3395  0F1A                     	;# 
  3396  0F1B                     	;# 
  3397  0F1C                     	;# 
  3398  0F1D                     	;# 
  3399  0F1E                     	;# 
  3400  0F1F                     	;# 
  3401  0F20                     	;# 
  3402  0F21                     	;# 
  3403  0F22                     	;# 
  3404  0F23                     	;# 
  3405  0F24                     	;# 
  3406  0F25                     	;# 
  3407  0F26                     	;# 
  3408  0F27                     	;# 
  3409  0F28                     	;# 
  3410  0F29                     	;# 
  3411  0F2A                     	;# 
  3412  0F2B                     	;# 
  3413  0F2C                     	;# 
  3414  0F2D                     	;# 
  3415  0F2E                     	;# 
  3416  0F2F                     	;# 
  3417  0F30                     	;# 
  3418  0F31                     	;# 
  3419  0F32                     	;# 
  3420  0F38                     	;# 
  3421  0F39                     	;# 
  3422  0F3A                     	;# 
  3423  0F3B                     	;# 
  3424  0F3C                     	;# 
  3425  0F3D                     	;# 
  3426  0F3E                     	;# 
  3427  0F3F                     	;# 
  3428  0F40                     	;# 
  3429  0F41                     	;# 
  3430  0F43                     	;# 
  3431  0F44                     	;# 
  3432  0F45                     	;# 
  3433  0F46                     	;# 
  3434  0F47                     	;# 
  3435  0F48                     	;# 
  3436  0F49                     	;# 
  3437  0F4A                     	;# 
  3438  0F4B                     	;# 
  3439  0F4C                     	;# 
  3440  0F4E                     	;# 
  3441  0F4F                     	;# 
  3442  0F50                     	;# 
  3443  0F51                     	;# 
  3444  0F52                     	;# 
  3445  0F53                     	;# 
  3446  0F54                     	;# 
  3447  0F55                     	;# 
  3448  0F56                     	;# 
  3449  0F57                     	;# 
  3450  0F59                     	;# 
  3451  0F5A                     	;# 
  3452  0F5B                     	;# 
  3453  0F5C                     	;# 
  3454  0F5D                     	;# 
  3455  0F61                     	;# 
  3456  0F62                     	;# 
  3457  0F64                     	;# 
  3458  0F65                     	;# 
  3459  0F66                     	;# 
  3460  0F67                     	;# 
  3461  0F68                     	;# 
  3462  0F69                     	;# 
  3463  0F6A                     	;# 
  3464  0F6B                     	;# 
  3465  0F6C                     	;# 
  3466  0F6D                     	;# 
  3467  0FE4                     	;# 
  3468  0FE5                     	;# 
  3469  0FE6                     	;# 
  3470  0FE7                     	;# 
  3471  0FE8                     	;# 
  3472  0FE9                     	;# 
  3473  0FEA                     	;# 
  3474  0FEB                     	;# 
  3475  0FED                     	;# 
  3476  0FEE                     	;# 
  3477  0FEF                     	;# 
  3478  0000                     	;# 
  3479  0001                     	;# 
  3480  0002                     	;# 
  3481  0003                     	;# 
  3482  0004                     	;# 
  3483  0005                     	;# 
  3484  0006                     	;# 
  3485  0007                     	;# 
  3486  0008                     	;# 
  3487  0009                     	;# 
  3488  000A                     	;# 
  3489  000B                     	;# 
  3490  000C                     	;# 
  3491  000D                     	;# 
  3492  000E                     	;# 
  3493  000F                     	;# 
  3494  0010                     	;# 
  3495  0011                     	;# 
  3496  0012                     	;# 
  3497  0013                     	;# 
  3498  0014                     	;# 
  3499  0015                     	;# 
  3500  0016                     	;# 
  3501  0017                     	;# 
  3502  0018                     	;# 
  3503  0019                     	;# 
  3504  001A                     	;# 
  3505  001C                     	;# 
  3506  001C                     	;# 
  3507  001D                     	;# 
  3508  001D                     	;# 
  3509  001E                     	;# 
  3510  001F                     	;# 
  3511  008C                     	;# 
  3512  008C                     	;# 
  3513  008D                     	;# 
  3514  008E                     	;# 
  3515  008E                     	;# 
  3516  008F                     	;# 
  3517  0090                     	;# 
  3518  0090                     	;# 
  3519  0091                     	;# 
  3520  0093                     	;# 
  3521  0094                     	;# 
  3522  0095                     	;# 
  3523  0096                     	;# 
  3524  0097                     	;# 
  3525  0098                     	;# 
  3526  0099                     	;# 
  3527  009A                     	;# 
  3528  009B                     	;# 
  3529  009C                     	;# 
  3530  009D                     	;# 
  3531  009E                     	;# 
  3532  010C                     	;# 
  3533  010D                     	;# 
  3534  010E                     	;# 
  3535  010E                     	;# 
  3536  010F                     	;# 
  3537  0110                     	;# 
  3538  0110                     	;# 
  3539  0111                     	;# 
  3540  0112                     	;# 
  3541  0112                     	;# 
  3542  0113                     	;# 
  3543  0114                     	;# 
  3544  0114                     	;# 
  3545  0115                     	;# 
  3546  0116                     	;# 
  3547  0116                     	;# 
  3548  0117                     	;# 
  3549  0119                     	;# 
  3550  0119                     	;# 
  3551  0119                     	;# 
  3552  011A                     	;# 
  3553  011A                     	;# 
  3554  011A                     	;# 
  3555  011B                     	;# 
  3556  011B                     	;# 
  3557  011B                     	;# 
  3558  011B                     	;# 
  3559  011B                     	;# 
  3560  011C                     	;# 
  3561  011C                     	;# 
  3562  011C                     	;# 
  3563  011D                     	;# 
  3564  011D                     	;# 
  3565  011D                     	;# 
  3566  011E                     	;# 
  3567  011E                     	;# 
  3568  011E                     	;# 
  3569  011F                     	;# 
  3570  011F                     	;# 
  3571  011F                     	;# 
  3572  011F                     	;# 
  3573  011F                     	;# 
  3574  018C                     	;# 
  3575  018D                     	;# 
  3576  018E                     	;# 
  3577  018F                     	;# 
  3578  0190                     	;# 
  3579  0191                     	;# 
  3580  0192                     	;# 
  3581  0196                     	;# 
  3582  0197                     	;# 
  3583  0198                     	;# 
  3584  0199                     	;# 
  3585  019A                     	;# 
  3586  019B                     	;# 
  3587  019C                     	;# 
  3588  020C                     	;# 
  3589  020C                     	;# 
  3590  020D                     	;# 
  3591  020E                     	;# 
  3592  020F                     	;# 
  3593  020F                     	;# 
  3594  0210                     	;# 
  3595  0210                     	;# 
  3596  0211                     	;# 
  3597  0211                     	;# 
  3598  0212                     	;# 
  3599  0212                     	;# 
  3600  0213                     	;# 
  3601  0214                     	;# 
  3602  0215                     	;# 
  3603  0215                     	;# 
  3604  0216                     	;# 
  3605  0216                     	;# 
  3606  0217                     	;# 
  3607  0217                     	;# 
  3608  0218                     	;# 
  3609  0218                     	;# 
  3610  0219                     	;# 
  3611  021A                     	;# 
  3612  021B                     	;# 
  3613  021B                     	;# 
  3614  021C                     	;# 
  3615  021C                     	;# 
  3616  021D                     	;# 
  3617  021D                     	;# 
  3618  021E                     	;# 
  3619  021F                     	;# 
  3620  028C                     	;# 
  3621  028C                     	;# 
  3622  028D                     	;# 
  3623  028D                     	;# 
  3624  028E                     	;# 
  3625  028F                     	;# 
  3626  0290                     	;# 
  3627  0290                     	;# 
  3628  0291                     	;# 
  3629  0292                     	;# 
  3630  0292                     	;# 
  3631  0293                     	;# 
  3632  0293                     	;# 
  3633  0294                     	;# 
  3634  0295                     	;# 
  3635  0296                     	;# 
  3636  0296                     	;# 
  3637  0297                     	;# 
  3638  0298                     	;# 
  3639  0298                     	;# 
  3640  0299                     	;# 
  3641  0299                     	;# 
  3642  029A                     	;# 
  3643  029B                     	;# 
  3644  029C                     	;# 
  3645  029C                     	;# 
  3646  029D                     	;# 
  3647  030C                     	;# 
  3648  030C                     	;# 
  3649  030D                     	;# 
  3650  030E                     	;# 
  3651  030F                     	;# 
  3652  0310                     	;# 
  3653  0310                     	;# 
  3654  0311                     	;# 
  3655  0312                     	;# 
  3656  0313                     	;# 
  3657  0314                     	;# 
  3658  0314                     	;# 
  3659  0315                     	;# 
  3660  0316                     	;# 
  3661  0317                     	;# 
  3662  0318                     	;# 
  3663  0318                     	;# 
  3664  0319                     	;# 
  3665  031A                     	;# 
  3666  031B                     	;# 
  3667  031C                     	;# 
  3668  031C                     	;# 
  3669  031D                     	;# 
  3670  031E                     	;# 
  3671  031F                     	;# 
  3672  038C                     	;# 
  3673  038D                     	;# 
  3674  038E                     	;# 
  3675  0390                     	;# 
  3676  0391                     	;# 
  3677  0392                     	;# 
  3678  040C                     	;# 
  3679  040D                     	;# 
  3680  040E                     	;# 
  3681  040F                     	;# 
  3682  0410                     	;# 
  3683  0411                     	;# 
  3684  0416                     	;# 
  3685  0416                     	;# 
  3686  0417                     	;# 
  3687  0418                     	;# 
  3688  0418                     	;# 
  3689  0419                     	;# 
  3690  041A                     	;# 
  3691  041A                     	;# 
  3692  041B                     	;# 
  3693  041C                     	;# 
  3694  041C                     	;# 
  3695  041D                     	;# 
  3696  041E                     	;# 
  3697  041F                     	;# 
  3698  048C                     	;# 
  3699  048C                     	;# 
  3700  048D                     	;# 
  3701  048E                     	;# 
  3702  048F                     	;# 
  3703  048F                     	;# 
  3704  0490                     	;# 
  3705  0491                     	;# 
  3706  0492                     	;# 
  3707  0492                     	;# 
  3708  0493                     	;# 
  3709  0494                     	;# 
  3710  0495                     	;# 
  3711  0495                     	;# 
  3712  0496                     	;# 
  3713  0497                     	;# 
  3714  0498                     	;# 
  3715  0499                     	;# 
  3716  049A                     	;# 
  3717  049B                     	;# 
  3718  049C                     	;# 
  3719  049D                     	;# 
  3720  050C                     	;# 
  3721  050C                     	;# 
  3722  050D                     	;# 
  3723  050E                     	;# 
  3724  050F                     	;# 
  3725  050F                     	;# 
  3726  0510                     	;# 
  3727  0511                     	;# 
  3728  0512                     	;# 
  3729  0512                     	;# 
  3730  0513                     	;# 
  3731  0514                     	;# 
  3732  0515                     	;# 
  3733  0515                     	;# 
  3734  0516                     	;# 
  3735  0517                     	;# 
  3736  0518                     	;# 
  3737  0519                     	;# 
  3738  051A                     	;# 
  3739  051B                     	;# 
  3740  051C                     	;# 
  3741  051D                     	;# 
  3742  058C                     	;# 
  3743  058C                     	;# 
  3744  058D                     	;# 
  3745  058E                     	;# 
  3746  058F                     	;# 
  3747  058F                     	;# 
  3748  0590                     	;# 
  3749  0591                     	;# 
  3750  0592                     	;# 
  3751  0593                     	;# 
  3752  060C                     	;# 
  3753  060D                     	;# 
  3754  060E                     	;# 
  3755  060F                     	;# 
  3756  0610                     	;# 
  3757  0611                     	;# 
  3758  0612                     	;# 
  3759  0613                     	;# 
  3760  0614                     	;# 
  3761  0616                     	;# 
  3762  0617                     	;# 
  3763  0618                     	;# 
  3764  0619                     	;# 
  3765  061A                     	;# 
  3766  061B                     	;# 
  3767  061C                     	;# 
  3768  061D                     	;# 
  3769  061E                     	;# 
  3770  068C                     	;# 
  3771  068D                     	;# 
  3772  068E                     	;# 
  3773  068F                     	;# 
  3774  0690                     	;# 
  3775  0691                     	;# 
  3776  0692                     	;# 
  3777  0693                     	;# 
  3778  0694                     	;# 
  3779  070C                     	;# 
  3780  070D                     	;# 
  3781  070E                     	;# 
  3782  070F                     	;# 
  3783  0710                     	;# 
  3784  0711                     	;# 
  3785  0712                     	;# 
  3786  0713                     	;# 
  3787  0714                     	;# 
  3788  0716                     	;# 
  3789  0717                     	;# 
  3790  0718                     	;# 
  3791  0719                     	;# 
  3792  071A                     	;# 
  3793  071B                     	;# 
  3794  071C                     	;# 
  3795  071D                     	;# 
  3796  071E                     	;# 
  3797  0796                     	;# 
  3798  0797                     	;# 
  3799  0798                     	;# 
  3800  0799                     	;# 
  3801  079A                     	;# 
  3802  079B                     	;# 
  3803  080C                     	;# 
  3804  080D                     	;# 
  3805  080E                     	;# 
  3806  080F                     	;# 
  3807  0810                     	;# 
  3808  0811                     	;# 
  3809  0812                     	;# 
  3810  0813                     	;# 
  3811  0814                     	;# 
  3812  081A                     	;# 
  3813  081B                     	;# 
  3814  081C                     	;# 
  3815  081D                     	;# 
  3816  081E                     	;# 
  3817  081F                     	;# 
  3818  088C                     	;# 
  3819  088D                     	;# 
  3820  088E                     	;# 
  3821  088F                     	;# 
  3822  0890                     	;# 
  3823  0891                     	;# 
  3824  0892                     	;# 
  3825  0893                     	;# 
  3826  0895                     	;# 
  3827  0896                     	;# 
  3828  0897                     	;# 
  3829  0898                     	;# 
  3830  0899                     	;# 
  3831  089A                     	;# 
  3832  089B                     	;# 
  3833  090C                     	;# 
  3834  090E                     	;# 
  3835  090F                     	;# 
  3836  091F                     	;# 
  3837  091F                     	;# 
  3838  098F                     	;# 
  3839  098F                     	;# 
  3840  0990                     	;# 
  3841  0991                     	;# 
  3842  0992                     	;# 
  3843  0993                     	;# 
  3844  0994                     	;# 
  3845  0995                     	;# 
  3846  0996                     	;# 
  3847  0997                     	;# 
  3848  0E0F                     	;# 
  3849  0E10                     	;# 
  3850  0E11                     	;# 
  3851  0E12                     	;# 
  3852  0E13                     	;# 
  3853  0E14                     	;# 
  3854  0E15                     	;# 
  3855  0E16                     	;# 
  3856  0E17                     	;# 
  3857  0E18                     	;# 
  3858  0E19                     	;# 
  3859  0E1A                     	;# 
  3860  0E1B                     	;# 
  3861  0E1C                     	;# 
  3862  0E1D                     	;# 
  3863  0E1E                     	;# 
  3864  0E1F                     	;# 
  3865  0E20                     	;# 
  3866  0E21                     	;# 
  3867  0E22                     	;# 
  3868  0E23                     	;# 
  3869  0E24                     	;# 
  3870  0E25                     	;# 
  3871  0E26                     	;# 
  3872  0E27                     	;# 
  3873  0E28                     	;# 
  3874  0E29                     	;# 
  3875  0E2A                     	;# 
  3876  0E2B                     	;# 
  3877  0E2C                     	;# 
  3878  0E2D                     	;# 
  3879  0E2E                     	;# 
  3880  0E2F                     	;# 
  3881  0E30                     	;# 
  3882  0E31                     	;# 
  3883  0E32                     	;# 
  3884  0E33                     	;# 
  3885  0E34                     	;# 
  3886  0E35                     	;# 
  3887  0E36                     	;# 
  3888  0E37                     	;# 
  3889  0E8F                     	;# 
  3890  0E90                     	;# 
  3891  0E91                     	;# 
  3892  0E92                     	;# 
  3893  0E93                     	;# 
  3894  0E94                     	;# 
  3895  0E95                     	;# 
  3896  0E96                     	;# 
  3897  0E97                     	;# 
  3898  0E9C                     	;# 
  3899  0E9D                     	;# 
  3900  0E9E                     	;# 
  3901  0EA1                     	;# 
  3902  0EA2                     	;# 
  3903  0EA3                     	;# 
  3904  0EA4                     	;# 
  3905  0EA5                     	;# 
  3906  0EA9                     	;# 
  3907  0EAA                     	;# 
  3908  0EAB                     	;# 
  3909  0EAC                     	;# 
  3910  0EB1                     	;# 
  3911  0EB2                     	;# 
  3912  0EB3                     	;# 
  3913  0EB8                     	;# 
  3914  0EB9                     	;# 
  3915  0EBA                     	;# 
  3916  0EBB                     	;# 
  3917  0EBC                     	;# 
  3918  0EBD                     	;# 
  3919  0EBE                     	;# 
  3920  0EC3                     	;# 
  3921  0EC5                     	;# 
  3922  0EC6                     	;# 
  3923  0EC7                     	;# 
  3924  0EC8                     	;# 
  3925  0EC9                     	;# 
  3926  0ECA                     	;# 
  3927  0ECB                     	;# 
  3928  0ECC                     	;# 
  3929  0F10                     	;# 
  3930  0F11                     	;# 
  3931  0F12                     	;# 
  3932  0F13                     	;# 
  3933  0F14                     	;# 
  3934  0F15                     	;# 
  3935  0F16                     	;# 
  3936  0F17                     	;# 
  3937  0F18                     	;# 
  3938  0F19                     	;# 
  3939  0F1A                     	;# 
  3940  0F1B                     	;# 
  3941  0F1C                     	;# 
  3942  0F1D                     	;# 
  3943  0F1E                     	;# 
  3944  0F1F                     	;# 
  3945  0F20                     	;# 
  3946  0F21                     	;# 
  3947  0F22                     	;# 
  3948  0F23                     	;# 
  3949  0F24                     	;# 
  3950  0F25                     	;# 
  3951  0F26                     	;# 
  3952  0F27                     	;# 
  3953  0F28                     	;# 
  3954  0F29                     	;# 
  3955  0F2A                     	;# 
  3956  0F2B                     	;# 
  3957  0F2C                     	;# 
  3958  0F2D                     	;# 
  3959  0F2E                     	;# 
  3960  0F2F                     	;# 
  3961  0F30                     	;# 
  3962  0F31                     	;# 
  3963  0F32                     	;# 
  3964  0F38                     	;# 
  3965  0F39                     	;# 
  3966  0F3A                     	;# 
  3967  0F3B                     	;# 
  3968  0F3C                     	;# 
  3969  0F3D                     	;# 
  3970  0F3E                     	;# 
  3971  0F3F                     	;# 
  3972  0F40                     	;# 
  3973  0F41                     	;# 
  3974  0F43                     	;# 
  3975  0F44                     	;# 
  3976  0F45                     	;# 
  3977  0F46                     	;# 
  3978  0F47                     	;# 
  3979  0F48                     	;# 
  3980  0F49                     	;# 
  3981  0F4A                     	;# 
  3982  0F4B                     	;# 
  3983  0F4C                     	;# 
  3984  0F4E                     	;# 
  3985  0F4F                     	;# 
  3986  0F50                     	;# 
  3987  0F51                     	;# 
  3988  0F52                     	;# 
  3989  0F53                     	;# 
  3990  0F54                     	;# 
  3991  0F55                     	;# 
  3992  0F56                     	;# 
  3993  0F57                     	;# 
  3994  0F59                     	;# 
  3995  0F5A                     	;# 
  3996  0F5B                     	;# 
  3997  0F5C                     	;# 
  3998  0F5D                     	;# 
  3999  0F61                     	;# 
  4000  0F62                     	;# 
  4001  0F64                     	;# 
  4002  0F65                     	;# 
  4003  0F66                     	;# 
  4004  0F67                     	;# 
  4005  0F68                     	;# 
  4006  0F69                     	;# 
  4007  0F6A                     	;# 
  4008  0F6B                     	;# 
  4009  0F6C                     	;# 
  4010  0F6D                     	;# 
  4011  0FE4                     	;# 
  4012  0FE5                     	;# 
  4013  0FE6                     	;# 
  4014  0FE7                     	;# 
  4015  0FE8                     	;# 
  4016  0FE9                     	;# 
  4017  0FEA                     	;# 
  4018  0FEB                     	;# 
  4019  0FED                     	;# 
  4020  0FEE                     	;# 
  4021  0FEF                     	;# 
  4022  0000                     	;# 
  4023  0001                     	;# 
  4024  0002                     	;# 
  4025  0003                     	;# 
  4026  0004                     	;# 
  4027  0005                     	;# 
  4028  0006                     	;# 
  4029  0007                     	;# 
  4030  0008                     	;# 
  4031  0009                     	;# 
  4032  000A                     	;# 
  4033  000B                     	;# 
  4034  000C                     	;# 
  4035  000D                     	;# 
  4036  000E                     	;# 
  4037  000F                     	;# 
  4038  0010                     	;# 
  4039  0011                     	;# 
  4040  0012                     	;# 
  4041  0013                     	;# 
  4042  0014                     	;# 
  4043  0015                     	;# 
  4044  0016                     	;# 
  4045  0017                     	;# 
  4046  0018                     	;# 
  4047  0019                     	;# 
  4048  001A                     	;# 
  4049  001C                     	;# 
  4050  001C                     	;# 
  4051  001D                     	;# 
  4052  001D                     	;# 
  4053  001E                     	;# 
  4054  001F                     	;# 
  4055  008C                     	;# 
  4056  008C                     	;# 
  4057  008D                     	;# 
  4058  008E                     	;# 
  4059  008E                     	;# 
  4060  008F                     	;# 
  4061  0090                     	;# 
  4062  0090                     	;# 
  4063  0091                     	;# 
  4064  0093                     	;# 
  4065  0094                     	;# 
  4066  0095                     	;# 
  4067  0096                     	;# 
  4068  0097                     	;# 
  4069  0098                     	;# 
  4070  0099                     	;# 
  4071  009A                     	;# 
  4072  009B                     	;# 
  4073  009C                     	;# 
  4074  009D                     	;# 
  4075  009E                     	;# 
  4076  010C                     	;# 
  4077  010D                     	;# 
  4078  010E                     	;# 
  4079  010E                     	;# 
  4080  010F                     	;# 
  4081  0110                     	;# 
  4082  0110                     	;# 
  4083  0111                     	;# 
  4084  0112                     	;# 
  4085  0112                     	;# 
  4086  0113                     	;# 
  4087  0114                     	;# 
  4088  0114                     	;# 
  4089  0115                     	;# 
  4090  0116                     	;# 
  4091  0116                     	;# 
  4092  0117                     	;# 
  4093  0119                     	;# 
  4094  0119                     	;# 
  4095  0119                     	;# 
  4096  011A                     	;# 
  4097  011A                     	;# 
  4098  011A                     	;# 
  4099  011B                     	;# 
  4100  011B                     	;# 
  4101  011B                     	;# 
  4102  011B                     	;# 
  4103  011B                     	;# 
  4104  011C                     	;# 
  4105  011C                     	;# 
  4106  011C                     	;# 
  4107  011D                     	;# 
  4108  011D                     	;# 
  4109  011D                     	;# 
  4110  011E                     	;# 
  4111  011E                     	;# 
  4112  011E                     	;# 
  4113  011F                     	;# 
  4114  011F                     	;# 
  4115  011F                     	;# 
  4116  011F                     	;# 
  4117  011F                     	;# 
  4118  018C                     	;# 
  4119  018D                     	;# 
  4120  018E                     	;# 
  4121  018F                     	;# 
  4122  0190                     	;# 
  4123  0191                     	;# 
  4124  0192                     	;# 
  4125  0196                     	;# 
  4126  0197                     	;# 
  4127  0198                     	;# 
  4128  0199                     	;# 
  4129  019A                     	;# 
  4130  019B                     	;# 
  4131  019C                     	;# 
  4132  020C                     	;# 
  4133  020C                     	;# 
  4134  020D                     	;# 
  4135  020E                     	;# 
  4136  020F                     	;# 
  4137  020F                     	;# 
  4138  0210                     	;# 
  4139  0210                     	;# 
  4140  0211                     	;# 
  4141  0211                     	;# 
  4142  0212                     	;# 
  4143  0212                     	;# 
  4144  0213                     	;# 
  4145  0214                     	;# 
  4146  0215                     	;# 
  4147  0215                     	;# 
  4148  0216                     	;# 
  4149  0216                     	;# 
  4150  0217                     	;# 
  4151  0217                     	;# 
  4152  0218                     	;# 
  4153  0218                     	;# 
  4154  0219                     	;# 
  4155  021A                     	;# 
  4156  021B                     	;# 
  4157  021B                     	;# 
  4158  021C                     	;# 
  4159  021C                     	;# 
  4160  021D                     	;# 
  4161  021D                     	;# 
  4162  021E                     	;# 
  4163  021F                     	;# 
  4164  028C                     	;# 
  4165  028C                     	;# 
  4166  028D                     	;# 
  4167  028D                     	;# 
  4168  028E                     	;# 
  4169  028F                     	;# 
  4170  0290                     	;# 
  4171  0290                     	;# 
  4172  0291                     	;# 
  4173  0292                     	;# 
  4174  0292                     	;# 
  4175  0293                     	;# 
  4176  0293                     	;# 
  4177  0294                     	;# 
  4178  0295                     	;# 
  4179  0296                     	;# 
  4180  0296                     	;# 
  4181  0297                     	;# 
  4182  0298                     	;# 
  4183  0298                     	;# 
  4184  0299                     	;# 
  4185  0299                     	;# 
  4186  029A                     	;# 
  4187  029B                     	;# 
  4188  029C                     	;# 
  4189  029C                     	;# 
  4190  029D                     	;# 
  4191  030C                     	;# 
  4192  030C                     	;# 
  4193  030D                     	;# 
  4194  030E                     	;# 
  4195  030F                     	;# 
  4196  0310                     	;# 
  4197  0310                     	;# 
  4198  0311                     	;# 
  4199  0312                     	;# 
  4200  0313                     	;# 
  4201  0314                     	;# 
  4202  0314                     	;# 
  4203  0315                     	;# 
  4204  0316                     	;# 
  4205  0317                     	;# 
  4206  0318                     	;# 
  4207  0318                     	;# 
  4208  0319                     	;# 
  4209  031A                     	;# 
  4210  031B                     	;# 
  4211  031C                     	;# 
  4212  031C                     	;# 
  4213  031D                     	;# 
  4214  031E                     	;# 
  4215  031F                     	;# 
  4216  038C                     	;# 
  4217  038D                     	;# 
  4218  038E                     	;# 
  4219  0390                     	;# 
  4220  0391                     	;# 
  4221  0392                     	;# 
  4222  040C                     	;# 
  4223  040D                     	;# 
  4224  040E                     	;# 
  4225  040F                     	;# 
  4226  0410                     	;# 
  4227  0411                     	;# 
  4228  0416                     	;# 
  4229  0416                     	;# 
  4230  0417                     	;# 
  4231  0418                     	;# 
  4232  0418                     	;# 
  4233  0419                     	;# 
  4234  041A                     	;# 
  4235  041A                     	;# 
  4236  041B                     	;# 
  4237  041C                     	;# 
  4238  041C                     	;# 
  4239  041D                     	;# 
  4240  041E                     	;# 
  4241  041F                     	;# 
  4242  048C                     	;# 
  4243  048C                     	;# 
  4244  048D                     	;# 
  4245  048E                     	;# 
  4246  048F                     	;# 
  4247  048F                     	;# 
  4248  0490                     	;# 
  4249  0491                     	;# 
  4250  0492                     	;# 
  4251  0492                     	;# 
  4252  0493                     	;# 
  4253  0494                     	;# 
  4254  0495                     	;# 
  4255  0495                     	;# 
  4256  0496                     	;# 
  4257  0497                     	;# 
  4258  0498                     	;# 
  4259  0499                     	;# 
  4260  049A                     	;# 
  4261  049B                     	;# 
  4262  049C                     	;# 
  4263  049D                     	;# 
  4264  050C                     	;# 
  4265  050C                     	;# 
  4266  050D                     	;# 
  4267  050E                     	;# 
  4268  050F                     	;# 
  4269  050F                     	;# 
  4270  0510                     	;# 
  4271  0511                     	;# 
  4272  0512                     	;# 
  4273  0512                     	;# 
  4274  0513                     	;# 
  4275  0514                     	;# 
  4276  0515                     	;# 
  4277  0515                     	;# 
  4278  0516                     	;# 
  4279  0517                     	;# 
  4280  0518                     	;# 
  4281  0519                     	;# 
  4282  051A                     	;# 
  4283  051B                     	;# 
  4284  051C                     	;# 
  4285  051D                     	;# 
  4286  058C                     	;# 
  4287  058C                     	;# 
  4288  058D                     	;# 
  4289  058E                     	;# 
  4290  058F                     	;# 
  4291  058F                     	;# 
  4292  0590                     	;# 
  4293  0591                     	;# 
  4294  0592                     	;# 
  4295  0593                     	;# 
  4296  060C                     	;# 
  4297  060D                     	;# 
  4298  060E                     	;# 
  4299  060F                     	;# 
  4300  0610                     	;# 
  4301  0611                     	;# 
  4302  0612                     	;# 
  4303  0613                     	;# 
  4304  0614                     	;# 
  4305  0616                     	;# 
  4306  0617                     	;# 
  4307  0618                     	;# 
  4308  0619                     	;# 
  4309  061A                     	;# 
  4310  061B                     	;# 
  4311  061C                     	;# 
  4312  061D                     	;# 
  4313  061E                     	;# 
  4314  068C                     	;# 
  4315  068D                     	;# 
  4316  068E                     	;# 
  4317  068F                     	;# 
  4318  0690                     	;# 
  4319  0691                     	;# 
  4320  0692                     	;# 
  4321  0693                     	;# 
  4322  0694                     	;# 
  4323  070C                     	;# 
  4324  070D                     	;# 
  4325  070E                     	;# 
  4326  070F                     	;# 
  4327  0710                     	;# 
  4328  0711                     	;# 
  4329  0712                     	;# 
  4330  0713                     	;# 
  4331  0714                     	;# 
  4332  0716                     	;# 
  4333  0717                     	;# 
  4334  0718                     	;# 
  4335  0719                     	;# 
  4336  071A                     	;# 
  4337  071B                     	;# 
  4338  071C                     	;# 
  4339  071D                     	;# 
  4340  071E                     	;# 
  4341  0796                     	;# 
  4342  0797                     	;# 
  4343  0798                     	;# 
  4344  0799                     	;# 
  4345  079A                     	;# 
  4346  079B                     	;# 
  4347  080C                     	;# 
  4348  080D                     	;# 
  4349  080E                     	;# 
  4350  080F                     	;# 
  4351  0810                     	;# 
  4352  0811                     	;# 
  4353  0812                     	;# 
  4354  0813                     	;# 
  4355  0814                     	;# 
  4356  081A                     	;# 
  4357  081B                     	;# 
  4358  081C                     	;# 
  4359  081D                     	;# 
  4360  081E                     	;# 
  4361  081F                     	;# 
  4362  088C                     	;# 
  4363  088D                     	;# 
  4364  088E                     	;# 
  4365  088F                     	;# 
  4366  0890                     	;# 
  4367  0891                     	;# 
  4368  0892                     	;# 
  4369  0893                     	;# 
  4370  0895                     	;# 
  4371  0896                     	;# 
  4372  0897                     	;# 
  4373  0898                     	;# 
  4374  0899                     	;# 
  4375  089A                     	;# 
  4376  089B                     	;# 
  4377  090C                     	;# 
  4378  090E                     	;# 
  4379  090F                     	;# 
  4380  091F                     	;# 
  4381  091F                     	;# 
  4382  098F                     	;# 
  4383  098F                     	;# 
  4384  0990                     	;# 
  4385  0991                     	;# 
  4386  0992                     	;# 
  4387  0993                     	;# 
  4388  0994                     	;# 
  4389  0995                     	;# 
  4390  0996                     	;# 
  4391  0997                     	;# 
  4392  0E0F                     	;# 
  4393  0E10                     	;# 
  4394  0E11                     	;# 
  4395  0E12                     	;# 
  4396  0E13                     	;# 
  4397  0E14                     	;# 
  4398  0E15                     	;# 
  4399  0E16                     	;# 
  4400  0E17                     	;# 
  4401  0E18                     	;# 
  4402  0E19                     	;# 
  4403  0E1A                     	;# 
  4404  0E1B                     	;# 
  4405  0E1C                     	;# 
  4406  0E1D                     	;# 
  4407  0E1E                     	;# 
  4408  0E1F                     	;# 
  4409  0E20                     	;# 
  4410  0E21                     	;# 
  4411  0E22                     	;# 
  4412  0E23                     	;# 
  4413  0E24                     	;# 
  4414  0E25                     	;# 
  4415  0E26                     	;# 
  4416  0E27                     	;# 
  4417  0E28                     	;# 
  4418  0E29                     	;# 
  4419  0E2A                     	;# 
  4420  0E2B                     	;# 
  4421  0E2C                     	;# 
  4422  0E2D                     	;# 
  4423  0E2E                     	;# 
  4424  0E2F                     	;# 
  4425  0E30                     	;# 
  4426  0E31                     	;# 
  4427  0E32                     	;# 
  4428  0E33                     	;# 
  4429  0E34                     	;# 
  4430  0E35                     	;# 
  4431  0E36                     	;# 
  4432  0E37                     	;# 
  4433  0E8F                     	;# 
  4434  0E90                     	;# 
  4435  0E91                     	;# 
  4436  0E92                     	;# 
  4437  0E93                     	;# 
  4438  0E94                     	;# 
  4439  0E95                     	;# 
  4440  0E96                     	;# 
  4441  0E97                     	;# 
  4442  0E9C                     	;# 
  4443  0E9D                     	;# 
  4444  0E9E                     	;# 
  4445  0EA1                     	;# 
  4446  0EA2                     	;# 
  4447  0EA3                     	;# 
  4448  0EA4                     	;# 
  4449  0EA5                     	;# 
  4450  0EA9                     	;# 
  4451  0EAA                     	;# 
  4452  0EAB                     	;# 
  4453  0EAC                     	;# 
  4454  0EB1                     	;# 
  4455  0EB2                     	;# 
  4456  0EB3                     	;# 
  4457  0EB8                     	;# 
  4458  0EB9                     	;# 
  4459  0EBA                     	;# 
  4460  0EBB                     	;# 
  4461  0EBC                     	;# 
  4462  0EBD                     	;# 
  4463  0EBE                     	;# 
  4464  0EC3                     	;# 
  4465  0EC5                     	;# 
  4466  0EC6                     	;# 
  4467  0EC7                     	;# 
  4468  0EC8                     	;# 
  4469  0EC9                     	;# 
  4470  0ECA                     	;# 
  4471  0ECB                     	;# 
  4472  0ECC                     	;# 
  4473  0F10                     	;# 
  4474  0F11                     	;# 
  4475  0F12                     	;# 
  4476  0F13                     	;# 
  4477  0F14                     	;# 
  4478  0F15                     	;# 
  4479  0F16                     	;# 
  4480  0F17                     	;# 
  4481  0F18                     	;# 
  4482  0F19                     	;# 
  4483  0F1A                     	;# 
  4484  0F1B                     	;# 
  4485  0F1C                     	;# 
  4486  0F1D                     	;# 
  4487  0F1E                     	;# 
  4488  0F1F                     	;# 
  4489  0F20                     	;# 
  4490  0F21                     	;# 
  4491  0F22                     	;# 
  4492  0F23                     	;# 
  4493  0F24                     	;# 
  4494  0F25                     	;# 
  4495  0F26                     	;# 
  4496  0F27                     	;# 
  4497  0F28                     	;# 
  4498  0F29                     	;# 
  4499  0F2A                     	;# 
  4500  0F2B                     	;# 
  4501  0F2C                     	;# 
  4502  0F2D                     	;# 
  4503  0F2E                     	;# 
  4504  0F2F                     	;# 
  4505  0F30                     	;# 
  4506  0F31                     	;# 
  4507  0F32                     	;# 
  4508  0F38                     	;# 
  4509  0F39                     	;# 
  4510  0F3A                     	;# 
  4511  0F3B                     	;# 
  4512  0F3C                     	;# 
  4513  0F3D                     	;# 
  4514  0F3E                     	;# 
  4515  0F3F                     	;# 
  4516  0F40                     	;# 
  4517  0F41                     	;# 
  4518  0F43                     	;# 
  4519  0F44                     	;# 
  4520  0F45                     	;# 
  4521  0F46                     	;# 
  4522  0F47                     	;# 
  4523  0F48                     	;# 
  4524  0F49                     	;# 
  4525  0F4A                     	;# 
  4526  0F4B                     	;# 
  4527  0F4C                     	;# 
  4528  0F4E                     	;# 
  4529  0F4F                     	;# 
  4530  0F50                     	;# 
  4531  0F51                     	;# 
  4532  0F52                     	;# 
  4533  0F53                     	;# 
  4534  0F54                     	;# 
  4535  0F55                     	;# 
  4536  0F56                     	;# 
  4537  0F57                     	;# 
  4538  0F59                     	;# 
  4539  0F5A                     	;# 
  4540  0F5B                     	;# 
  4541  0F5C                     	;# 
  4542  0F5D                     	;# 
  4543  0F61                     	;# 
  4544  0F62                     	;# 
  4545  0F64                     	;# 
  4546  0F65                     	;# 
  4547  0F66                     	;# 
  4548  0F67                     	;# 
  4549  0F68                     	;# 
  4550  0F69                     	;# 
  4551  0F6A                     	;# 
  4552  0F6B                     	;# 
  4553  0F6C                     	;# 
  4554  0F6D                     	;# 
  4555  0FE4                     	;# 
  4556  0FE5                     	;# 
  4557  0FE6                     	;# 
  4558  0FE7                     	;# 
  4559  0FE8                     	;# 
  4560  0FE9                     	;# 
  4561  0FEA                     	;# 
  4562  0FEB                     	;# 
  4563  0FED                     	;# 
  4564  0FEE                     	;# 
  4565  0FEF                     	;# 
  4566  0000                     	;# 
  4567  0001                     	;# 
  4568  0002                     	;# 
  4569  0003                     	;# 
  4570  0004                     	;# 
  4571  0005                     	;# 
  4572  0006                     	;# 
  4573  0007                     	;# 
  4574  0008                     	;# 
  4575  0009                     	;# 
  4576  000A                     	;# 
  4577  000B                     	;# 
  4578  000C                     	;# 
  4579  000D                     	;# 
  4580  000E                     	;# 
  4581  000F                     	;# 
  4582  0010                     	;# 
  4583  0011                     	;# 
  4584  0012                     	;# 
  4585  0013                     	;# 
  4586  0014                     	;# 
  4587  0015                     	;# 
  4588  0016                     	;# 
  4589  0017                     	;# 
  4590  0018                     	;# 
  4591  0019                     	;# 
  4592  001A                     	;# 
  4593  001C                     	;# 
  4594  001C                     	;# 
  4595  001D                     	;# 
  4596  001D                     	;# 
  4597  001E                     	;# 
  4598  001F                     	;# 
  4599  008C                     	;# 
  4600  008C                     	;# 
  4601  008D                     	;# 
  4602  008E                     	;# 
  4603  008E                     	;# 
  4604  008F                     	;# 
  4605  0090                     	;# 
  4606  0090                     	;# 
  4607  0091                     	;# 
  4608  0093                     	;# 
  4609  0094                     	;# 
  4610  0095                     	;# 
  4611  0096                     	;# 
  4612  0097                     	;# 
  4613  0098                     	;# 
  4614  0099                     	;# 
  4615  009A                     	;# 
  4616  009B                     	;# 
  4617  009C                     	;# 
  4618  009D                     	;# 
  4619  009E                     	;# 
  4620  010C                     	;# 
  4621  010D                     	;# 
  4622  010E                     	;# 
  4623  010E                     	;# 
  4624  010F                     	;# 
  4625  0110                     	;# 
  4626  0110                     	;# 
  4627  0111                     	;# 
  4628  0112                     	;# 
  4629  0112                     	;# 
  4630  0113                     	;# 
  4631  0114                     	;# 
  4632  0114                     	;# 
  4633  0115                     	;# 
  4634  0116                     	;# 
  4635  0116                     	;# 
  4636  0117                     	;# 
  4637  0119                     	;# 
  4638  0119                     	;# 
  4639  0119                     	;# 
  4640  011A                     	;# 
  4641  011A                     	;# 
  4642  011A                     	;# 
  4643  011B                     	;# 
  4644  011B                     	;# 
  4645  011B                     	;# 
  4646  011B                     	;# 
  4647  011B                     	;# 
  4648  011C                     	;# 
  4649  011C                     	;# 
  4650  011C                     	;# 
  4651  011D                     	;# 
  4652  011D                     	;# 
  4653  011D                     	;# 
  4654  011E                     	;# 
  4655  011E                     	;# 
  4656  011E                     	;# 
  4657  011F                     	;# 
  4658  011F                     	;# 
  4659  011F                     	;# 
  4660  011F                     	;# 
  4661  011F                     	;# 
  4662  018C                     	;# 
  4663  018D                     	;# 
  4664  018E                     	;# 
  4665  018F                     	;# 
  4666  0190                     	;# 
  4667  0191                     	;# 
  4668  0192                     	;# 
  4669  0196                     	;# 
  4670  0197                     	;# 
  4671  0198                     	;# 
  4672  0199                     	;# 
  4673  019A                     	;# 
  4674  019B                     	;# 
  4675  019C                     	;# 
  4676  020C                     	;# 
  4677  020C                     	;# 
  4678  020D                     	;# 
  4679  020E                     	;# 
  4680  020F                     	;# 
  4681  020F                     	;# 
  4682  0210                     	;# 
  4683  0210                     	;# 
  4684  0211                     	;# 
  4685  0211                     	;# 
  4686  0212                     	;# 
  4687  0212                     	;# 
  4688  0213                     	;# 
  4689  0214                     	;# 
  4690  0215                     	;# 
  4691  0215                     	;# 
  4692  0216                     	;# 
  4693  0216                     	;# 
  4694  0217                     	;# 
  4695  0217                     	;# 
  4696  0218                     	;# 
  4697  0218                     	;# 
  4698  0219                     	;# 
  4699  021A                     	;# 
  4700  021B                     	;# 
  4701  021B                     	;# 
  4702  021C                     	;# 
  4703  021C                     	;# 
  4704  021D                     	;# 
  4705  021D                     	;# 
  4706  021E                     	;# 
  4707  021F                     	;# 
  4708  028C                     	;# 
  4709  028C                     	;# 
  4710  028D                     	;# 
  4711  028D                     	;# 
  4712  028E                     	;# 
  4713  028F                     	;# 
  4714  0290                     	;# 
  4715  0290                     	;# 
  4716  0291                     	;# 
  4717  0292                     	;# 
  4718  0292                     	;# 
  4719  0293                     	;# 
  4720  0293                     	;# 
  4721  0294                     	;# 
  4722  0295                     	;# 
  4723  0296                     	;# 
  4724  0296                     	;# 
  4725  0297                     	;# 
  4726  0298                     	;# 
  4727  0298                     	;# 
  4728  0299                     	;# 
  4729  0299                     	;# 
  4730  029A                     	;# 
  4731  029B                     	;# 
  4732  029C                     	;# 
  4733  029C                     	;# 
  4734  029D                     	;# 
  4735  030C                     	;# 
  4736  030C                     	;# 
  4737  030D                     	;# 
  4738  030E                     	;# 
  4739  030F                     	;# 
  4740  0310                     	;# 
  4741  0310                     	;# 
  4742  0311                     	;# 
  4743  0312                     	;# 
  4744  0313                     	;# 
  4745  0314                     	;# 
  4746  0314                     	;# 
  4747  0315                     	;# 
  4748  0316                     	;# 
  4749  0317                     	;# 
  4750  0318                     	;# 
  4751  0318                     	;# 
  4752  0319                     	;# 
  4753  031A                     	;# 
  4754  031B                     	;# 
  4755  031C                     	;# 
  4756  031C                     	;# 
  4757  031D                     	;# 
  4758  031E                     	;# 
  4759  031F                     	;# 
  4760  038C                     	;# 
  4761  038D                     	;# 
  4762  038E                     	;# 
  4763  0390                     	;# 
  4764  0391                     	;# 
  4765  0392                     	;# 
  4766  040C                     	;# 
  4767  040D                     	;# 
  4768  040E                     	;# 
  4769  040F                     	;# 
  4770  0410                     	;# 
  4771  0411                     	;# 
  4772  0416                     	;# 
  4773  0416                     	;# 
  4774  0417                     	;# 
  4775  0418                     	;# 
  4776  0418                     	;# 
  4777  0419                     	;# 
  4778  041A                     	;# 
  4779  041A                     	;# 
  4780  041B                     	;# 
  4781  041C                     	;# 
  4782  041C                     	;# 
  4783  041D                     	;# 
  4784  041E                     	;# 
  4785  041F                     	;# 
  4786  048C                     	;# 
  4787  048C                     	;# 
  4788  048D                     	;# 
  4789  048E                     	;# 
  4790  048F                     	;# 
  4791  048F                     	;# 
  4792  0490                     	;# 
  4793  0491                     	;# 
  4794  0492                     	;# 
  4795  0492                     	;# 
  4796  0493                     	;# 
  4797  0494                     	;# 
  4798  0495                     	;# 
  4799  0495                     	;# 
  4800  0496                     	;# 
  4801  0497                     	;# 
  4802  0498                     	;# 
  4803  0499                     	;# 
  4804  049A                     	;# 
  4805  049B                     	;# 
  4806  049C                     	;# 
  4807  049D                     	;# 
  4808  050C                     	;# 
  4809  050C                     	;# 
  4810  050D                     	;# 
  4811  050E                     	;# 
  4812  050F                     	;# 
  4813  050F                     	;# 
  4814  0510                     	;# 
  4815  0511                     	;# 
  4816  0512                     	;# 
  4817  0512                     	;# 
  4818  0513                     	;# 
  4819  0514                     	;# 
  4820  0515                     	;# 
  4821  0515                     	;# 
  4822  0516                     	;# 
  4823  0517                     	;# 
  4824  0518                     	;# 
  4825  0519                     	;# 
  4826  051A                     	;# 
  4827  051B                     	;# 
  4828  051C                     	;# 
  4829  051D                     	;# 
  4830  058C                     	;# 
  4831  058C                     	;# 
  4832  058D                     	;# 
  4833  058E                     	;# 
  4834  058F                     	;# 
  4835  058F                     	;# 
  4836  0590                     	;# 
  4837  0591                     	;# 
  4838  0592                     	;# 
  4839  0593                     	;# 
  4840  060C                     	;# 
  4841  060D                     	;# 
  4842  060E                     	;# 
  4843  060F                     	;# 
  4844  0610                     	;# 
  4845  0611                     	;# 
  4846  0612                     	;# 
  4847  0613                     	;# 
  4848  0614                     	;# 
  4849  0616                     	;# 
  4850  0617                     	;# 
  4851  0618                     	;# 
  4852  0619                     	;# 
  4853  061A                     	;# 
  4854  061B                     	;# 
  4855  061C                     	;# 
  4856  061D                     	;# 
  4857  061E                     	;# 
  4858  068C                     	;# 
  4859  068D                     	;# 
  4860  068E                     	;# 
  4861  068F                     	;# 
  4862  0690                     	;# 
  4863  0691                     	;# 
  4864  0692                     	;# 
  4865  0693                     	;# 
  4866  0694                     	;# 
  4867  070C                     	;# 
  4868  070D                     	;# 
  4869  070E                     	;# 
  4870  070F                     	;# 
  4871  0710                     	;# 
  4872  0711                     	;# 
  4873  0712                     	;# 
  4874  0713                     	;# 
  4875  0714                     	;# 
  4876  0716                     	;# 
  4877  0717                     	;# 
  4878  0718                     	;# 
  4879  0719                     	;# 
  4880  071A                     	;# 
  4881  071B                     	;# 
  4882  071C                     	;# 
  4883  071D                     	;# 
  4884  071E                     	;# 
  4885  0796                     	;# 
  4886  0797                     	;# 
  4887  0798                     	;# 
  4888  0799                     	;# 
  4889  079A                     	;# 
  4890  079B                     	;# 
  4891  080C                     	;# 
  4892  080D                     	;# 
  4893  080E                     	;# 
  4894  080F                     	;# 
  4895  0810                     	;# 
  4896  0811                     	;# 
  4897  0812                     	;# 
  4898  0813                     	;# 
  4899  0814                     	;# 
  4900  081A                     	;# 
  4901  081B                     	;# 
  4902  081C                     	;# 
  4903  081D                     	;# 
  4904  081E                     	;# 
  4905  081F                     	;# 
  4906  088C                     	;# 
  4907  088D                     	;# 
  4908  088E                     	;# 
  4909  088F                     	;# 
  4910  0890                     	;# 
  4911  0891                     	;# 
  4912  0892                     	;# 
  4913  0893                     	;# 
  4914  0895                     	;# 
  4915  0896                     	;# 
  4916  0897                     	;# 
  4917  0898                     	;# 
  4918  0899                     	;# 
  4919  089A                     	;# 
  4920  089B                     	;# 
  4921  090C                     	;# 
  4922  090E                     	;# 
  4923  090F                     	;# 
  4924  091F                     	;# 
  4925  091F                     	;# 
  4926  098F                     	;# 
  4927  098F                     	;# 
  4928  0990                     	;# 
  4929  0991                     	;# 
  4930  0992                     	;# 
  4931  0993                     	;# 
  4932  0994                     	;# 
  4933  0995                     	;# 
  4934  0996                     	;# 
  4935  0997                     	;# 
  4936  0E0F                     	;# 
  4937  0E10                     	;# 
  4938  0E11                     	;# 
  4939  0E12                     	;# 
  4940  0E13                     	;# 
  4941  0E14                     	;# 
  4942  0E15                     	;# 
  4943  0E16                     	;# 
  4944  0E17                     	;# 
  4945  0E18                     	;# 
  4946  0E19                     	;# 
  4947  0E1A                     	;# 
  4948  0E1B                     	;# 
  4949  0E1C                     	;# 
  4950  0E1D                     	;# 
  4951  0E1E                     	;# 
  4952  0E1F                     	;# 
  4953  0E20                     	;# 
  4954  0E21                     	;# 
  4955  0E22                     	;# 
  4956  0E23                     	;# 
  4957  0E24                     	;# 
  4958  0E25                     	;# 
  4959  0E26                     	;# 
  4960  0E27                     	;# 
  4961  0E28                     	;# 
  4962  0E29                     	;# 
  4963  0E2A                     	;# 
  4964  0E2B                     	;# 
  4965  0E2C                     	;# 
  4966  0E2D                     	;# 
  4967  0E2E                     	;# 
  4968  0E2F                     	;# 
  4969  0E30                     	;# 
  4970  0E31                     	;# 
  4971  0E32                     	;# 
  4972  0E33                     	;# 
  4973  0E34                     	;# 
  4974  0E35                     	;# 
  4975  0E36                     	;# 
  4976  0E37                     	;# 
  4977  0E8F                     	;# 
  4978  0E90                     	;# 
  4979  0E91                     	;# 
  4980  0E92                     	;# 
  4981  0E93                     	;# 
  4982  0E94                     	;# 
  4983  0E95                     	;# 
  4984  0E96                     	;# 
  4985  0E97                     	;# 
  4986  0E9C                     	;# 
  4987  0E9D                     	;# 
  4988  0E9E                     	;# 
  4989  0EA1                     	;# 
  4990  0EA2                     	;# 
  4991  0EA3                     	;# 
  4992  0EA4                     	;# 
  4993  0EA5                     	;# 
  4994  0EA9                     	;# 
  4995  0EAA                     	;# 
  4996  0EAB                     	;# 
  4997  0EAC                     	;# 
  4998  0EB1                     	;# 
  4999  0EB2                     	;# 
  5000  0EB3                     	;# 
  5001  0EB8                     	;# 
  5002  0EB9                     	;# 
  5003  0EBA                     	;# 
  5004  0EBB                     	;# 
  5005  0EBC                     	;# 
  5006  0EBD                     	;# 
  5007  0EBE                     	;# 
  5008  0EC3                     	;# 
  5009  0EC5                     	;# 
  5010  0EC6                     	;# 
  5011  0EC7                     	;# 
  5012  0EC8                     	;# 
  5013  0EC9                     	;# 
  5014  0ECA                     	;# 
  5015  0ECB                     	;# 
  5016  0ECC                     	;# 
  5017  0F10                     	;# 
  5018  0F11                     	;# 
  5019  0F12                     	;# 
  5020  0F13                     	;# 
  5021  0F14                     	;# 
  5022  0F15                     	;# 
  5023  0F16                     	;# 
  5024  0F17                     	;# 
  5025  0F18                     	;# 
  5026  0F19                     	;# 
  5027  0F1A                     	;# 
  5028  0F1B                     	;# 
  5029  0F1C                     	;# 
  5030  0F1D                     	;# 
  5031  0F1E                     	;# 
  5032  0F1F                     	;# 
  5033  0F20                     	;# 
  5034  0F21                     	;# 
  5035  0F22                     	;# 
  5036  0F23                     	;# 
  5037  0F24                     	;# 
  5038  0F25                     	;# 
  5039  0F26                     	;# 
  5040  0F27                     	;# 
  5041  0F28                     	;# 
  5042  0F29                     	;# 
  5043  0F2A                     	;# 
  5044  0F2B                     	;# 
  5045  0F2C                     	;# 
  5046  0F2D                     	;# 
  5047  0F2E                     	;# 
  5048  0F2F                     	;# 
  5049  0F30                     	;# 
  5050  0F31                     	;# 
  5051  0F32                     	;# 
  5052  0F38                     	;# 
  5053  0F39                     	;# 
  5054  0F3A                     	;# 
  5055  0F3B                     	;# 
  5056  0F3C                     	;# 
  5057  0F3D                     	;# 
  5058  0F3E                     	;# 
  5059  0F3F                     	;# 
  5060  0F40                     	;# 
  5061  0F41                     	;# 
  5062  0F43                     	;# 
  5063  0F44                     	;# 
  5064  0F45                     	;# 
  5065  0F46                     	;# 
  5066  0F47                     	;# 
  5067  0F48                     	;# 
  5068  0F49                     	;# 
  5069  0F4A                     	;# 
  5070  0F4B                     	;# 
  5071  0F4C                     	;# 
  5072  0F4E                     	;# 
  5073  0F4F                     	;# 
  5074  0F50                     	;# 
  5075  0F51                     	;# 
  5076  0F52                     	;# 
  5077  0F53                     	;# 
  5078  0F54                     	;# 
  5079  0F55                     	;# 
  5080  0F56                     	;# 
  5081  0F57                     	;# 
  5082  0F59                     	;# 
  5083  0F5A                     	;# 
  5084  0F5B                     	;# 
  5085  0F5C                     	;# 
  5086  0F5D                     	;# 
  5087  0F61                     	;# 
  5088  0F62                     	;# 
  5089  0F64                     	;# 
  5090  0F65                     	;# 
  5091  0F66                     	;# 
  5092  0F67                     	;# 
  5093  0F68                     	;# 
  5094  0F69                     	;# 
  5095  0F6A                     	;# 
  5096  0F6B                     	;# 
  5097  0F6C                     	;# 
  5098  0F6D                     	;# 
  5099  0FE4                     	;# 
  5100  0FE5                     	;# 
  5101  0FE6                     	;# 
  5102  0FE7                     	;# 
  5103  0FE8                     	;# 
  5104  0FE9                     	;# 
  5105  0FEA                     	;# 
  5106  0FEB                     	;# 
  5107  0FED                     	;# 
  5108  0FEE                     	;# 
  5109  0FEF                     	;# 
  5110  0000                     	;# 
  5111  0001                     	;# 
  5112  0002                     	;# 
  5113  0003                     	;# 
  5114  0004                     	;# 
  5115  0005                     	;# 
  5116  0006                     	;# 
  5117  0007                     	;# 
  5118  0008                     	;# 
  5119  0009                     	;# 
  5120  000A                     	;# 
  5121  000B                     	;# 
  5122  000C                     	;# 
  5123  000D                     	;# 
  5124  000E                     	;# 
  5125  000F                     	;# 
  5126  0010                     	;# 
  5127  0011                     	;# 
  5128  0012                     	;# 
  5129  0013                     	;# 
  5130  0014                     	;# 
  5131  0015                     	;# 
  5132  0016                     	;# 
  5133  0017                     	;# 
  5134  0018                     	;# 
  5135  0019                     	;# 
  5136  001A                     	;# 
  5137  001C                     	;# 
  5138  001C                     	;# 
  5139  001D                     	;# 
  5140  001D                     	;# 
  5141  001E                     	;# 
  5142  001F                     	;# 
  5143  008C                     	;# 
  5144  008C                     	;# 
  5145  008D                     	;# 
  5146  008E                     	;# 
  5147  008E                     	;# 
  5148  008F                     	;# 
  5149  0090                     	;# 
  5150  0090                     	;# 
  5151  0091                     	;# 
  5152  0093                     	;# 
  5153  0094                     	;# 
  5154  0095                     	;# 
  5155  0096                     	;# 
  5156  0097                     	;# 
  5157  0098                     	;# 
  5158  0099                     	;# 
  5159  009A                     	;# 
  5160  009B                     	;# 
  5161  009C                     	;# 
  5162  009D                     	;# 
  5163  009E                     	;# 
  5164  010C                     	;# 
  5165  010D                     	;# 
  5166  010E                     	;# 
  5167  010E                     	;# 
  5168  010F                     	;# 
  5169  0110                     	;# 
  5170  0110                     	;# 
  5171  0111                     	;# 
  5172  0112                     	;# 
  5173  0112                     	;# 
  5174  0113                     	;# 
  5175  0114                     	;# 
  5176  0114                     	;# 
  5177  0115                     	;# 
  5178  0116                     	;# 
  5179  0116                     	;# 
  5180  0117                     	;# 
  5181  0119                     	;# 
  5182  0119                     	;# 
  5183  0119                     	;# 
  5184  011A                     	;# 
  5185  011A                     	;# 
  5186  011A                     	;# 
  5187  011B                     	;# 
  5188  011B                     	;# 
  5189  011B                     	;# 
  5190  011B                     	;# 
  5191  011B                     	;# 
  5192  011C                     	;# 
  5193  011C                     	;# 
  5194  011C                     	;# 
  5195  011D                     	;# 
  5196  011D                     	;# 
  5197  011D                     	;# 
  5198  011E                     	;# 
  5199  011E                     	;# 
  5200  011E                     	;# 
  5201  011F                     	;# 
  5202  011F                     	;# 
  5203  011F                     	;# 
  5204  011F                     	;# 
  5205  011F                     	;# 
  5206  018C                     	;# 
  5207  018D                     	;# 
  5208  018E                     	;# 
  5209  018F                     	;# 
  5210  0190                     	;# 
  5211  0191                     	;# 
  5212  0192                     	;# 
  5213  0196                     	;# 
  5214  0197                     	;# 
  5215  0198                     	;# 
  5216  0199                     	;# 
  5217  019A                     	;# 
  5218  019B                     	;# 
  5219  019C                     	;# 
  5220  020C                     	;# 
  5221  020C                     	;# 
  5222  020D                     	;# 
  5223  020E                     	;# 
  5224  020F                     	;# 
  5225  020F                     	;# 
  5226  0210                     	;# 
  5227  0210                     	;# 
  5228  0211                     	;# 
  5229  0211                     	;# 
  5230  0212                     	;# 
  5231  0212                     	;# 
  5232  0213                     	;# 
  5233  0214                     	;# 
  5234  0215                     	;# 
  5235  0215                     	;# 
  5236  0216                     	;# 
  5237  0216                     	;# 
  5238  0217                     	;# 
  5239  0217                     	;# 
  5240  0218                     	;# 
  5241  0218                     	;# 
  5242  0219                     	;# 
  5243  021A                     	;# 
  5244  021B                     	;# 
  5245  021B                     	;# 
  5246  021C                     	;# 
  5247  021C                     	;# 
  5248  021D                     	;# 
  5249  021D                     	;# 
  5250  021E                     	;# 
  5251  021F                     	;# 
  5252  028C                     	;# 
  5253  028C                     	;# 
  5254  028D                     	;# 
  5255  028D                     	;# 
  5256  028E                     	;# 
  5257  028F                     	;# 
  5258  0290                     	;# 
  5259  0290                     	;# 
  5260  0291                     	;# 
  5261  0292                     	;# 
  5262  0292                     	;# 
  5263  0293                     	;# 
  5264  0293                     	;# 
  5265  0294                     	;# 
  5266  0295                     	;# 
  5267  0296                     	;# 
  5268  0296                     	;# 
  5269  0297                     	;# 
  5270  0298                     	;# 
  5271  0298                     	;# 
  5272  0299                     	;# 
  5273  0299                     	;# 
  5274  029A                     	;# 
  5275  029B                     	;# 
  5276  029C                     	;# 
  5277  029C                     	;# 
  5278  029D                     	;# 
  5279  030C                     	;# 
  5280  030C                     	;# 
  5281  030D                     	;# 
  5282  030E                     	;# 
  5283  030F                     	;# 
  5284  0310                     	;# 
  5285  0310                     	;# 
  5286  0311                     	;# 
  5287  0312                     	;# 
  5288  0313                     	;# 
  5289  0314                     	;# 
  5290  0314                     	;# 
  5291  0315                     	;# 
  5292  0316                     	;# 
  5293  0317                     	;# 
  5294  0318                     	;# 
  5295  0318                     	;# 
  5296  0319                     	;# 
  5297  031A                     	;# 
  5298  031B                     	;# 
  5299  031C                     	;# 
  5300  031C                     	;# 
  5301  031D                     	;# 
  5302  031E                     	;# 
  5303  031F                     	;# 
  5304  038C                     	;# 
  5305  038D                     	;# 
  5306  038E                     	;# 
  5307  0390                     	;# 
  5308  0391                     	;# 
  5309  0392                     	;# 
  5310  040C                     	;# 
  5311  040D                     	;# 
  5312  040E                     	;# 
  5313  040F                     	;# 
  5314  0410                     	;# 
  5315  0411                     	;# 
  5316  0416                     	;# 
  5317  0416                     	;# 
  5318  0417                     	;# 
  5319  0418                     	;# 
  5320  0418                     	;# 
  5321  0419                     	;# 
  5322  041A                     	;# 
  5323  041A                     	;# 
  5324  041B                     	;# 
  5325  041C                     	;# 
  5326  041C                     	;# 
  5327  041D                     	;# 
  5328  041E                     	;# 
  5329  041F                     	;# 
  5330  048C                     	;# 
  5331  048C                     	;# 
  5332  048D                     	;# 
  5333  048E                     	;# 
  5334  048F                     	;# 
  5335  048F                     	;# 
  5336  0490                     	;# 
  5337  0491                     	;# 
  5338  0492                     	;# 
  5339  0492                     	;# 
  5340  0493                     	;# 
  5341  0494                     	;# 
  5342  0495                     	;# 
  5343  0495                     	;# 
  5344  0496                     	;# 
  5345  0497                     	;# 
  5346  0498                     	;# 
  5347  0499                     	;# 
  5348  049A                     	;# 
  5349  049B                     	;# 
  5350  049C                     	;# 
  5351  049D                     	;# 
  5352  050C                     	;# 
  5353  050C                     	;# 
  5354  050D                     	;# 
  5355  050E                     	;# 
  5356  050F                     	;# 
  5357  050F                     	;# 
  5358  0510                     	;# 
  5359  0511                     	;# 
  5360  0512                     	;# 
  5361  0512                     	;# 
  5362  0513                     	;# 
  5363  0514                     	;# 
  5364  0515                     	;# 
  5365  0515                     	;# 
  5366  0516                     	;# 
  5367  0517                     	;# 
  5368  0518                     	;# 
  5369  0519                     	;# 
  5370  051A                     	;# 
  5371  051B                     	;# 
  5372  051C                     	;# 
  5373  051D                     	;# 
  5374  058C                     	;# 
  5375  058C                     	;# 
  5376  058D                     	;# 
  5377  058E                     	;# 
  5378  058F                     	;# 
  5379  058F                     	;# 
  5380  0590                     	;# 
  5381  0591                     	;# 
  5382  0592                     	;# 
  5383  0593                     	;# 
  5384  060C                     	;# 
  5385  060D                     	;# 
  5386  060E                     	;# 
  5387  060F                     	;# 
  5388  0610                     	;# 
  5389  0611                     	;# 
  5390  0612                     	;# 
  5391  0613                     	;# 
  5392  0614                     	;# 
  5393  0616                     	;# 
  5394  0617                     	;# 
  5395  0618                     	;# 
  5396  0619                     	;# 
  5397  061A                     	;# 
  5398  061B                     	;# 
  5399  061C                     	;# 
  5400  061D                     	;# 
  5401  061E                     	;# 
  5402  068C                     	;# 
  5403  068D                     	;# 
  5404  068E                     	;# 
  5405  068F                     	;# 
  5406  0690                     	;# 
  5407  0691                     	;# 
  5408  0692                     	;# 
  5409  0693                     	;# 
  5410  0694                     	;# 
  5411  070C                     	;# 
  5412  070D                     	;# 
  5413  070E                     	;# 
  5414  070F                     	;# 
  5415  0710                     	;# 
  5416  0711                     	;# 
  5417  0712                     	;# 
  5418  0713                     	;# 
  5419  0714                     	;# 
  5420  0716                     	;# 
  5421  0717                     	;# 
  5422  0718                     	;# 
  5423  0719                     	;# 
  5424  071A                     	;# 
  5425  071B                     	;# 
  5426  071C                     	;# 
  5427  071D                     	;# 
  5428  071E                     	;# 
  5429  0796                     	;# 
  5430  0797                     	;# 
  5431  0798                     	;# 
  5432  0799                     	;# 
  5433  079A                     	;# 
  5434  079B                     	;# 
  5435  080C                     	;# 
  5436  080D                     	;# 
  5437  080E                     	;# 
  5438  080F                     	;# 
  5439  0810                     	;# 
  5440  0811                     	;# 
  5441  0812                     	;# 
  5442  0813                     	;# 
  5443  0814                     	;# 
  5444  081A                     	;# 
  5445  081B                     	;# 
  5446  081C                     	;# 
  5447  081D                     	;# 
  5448  081E                     	;# 
  5449  081F                     	;# 
  5450  088C                     	;# 
  5451  088D                     	;# 
  5452  088E                     	;# 
  5453  088F                     	;# 
  5454  0890                     	;# 
  5455  0891                     	;# 
  5456  0892                     	;# 
  5457  0893                     	;# 
  5458  0895                     	;# 
  5459  0896                     	;# 
  5460  0897                     	;# 
  5461  0898                     	;# 
  5462  0899                     	;# 
  5463  089A                     	;# 
  5464  089B                     	;# 
  5465  090C                     	;# 
  5466  090E                     	;# 
  5467  090F                     	;# 
  5468  091F                     	;# 
  5469  091F                     	;# 
  5470  098F                     	;# 
  5471  098F                     	;# 
  5472  0990                     	;# 
  5473  0991                     	;# 
  5474  0992                     	;# 
  5475  0993                     	;# 
  5476  0994                     	;# 
  5477  0995                     	;# 
  5478  0996                     	;# 
  5479  0997                     	;# 
  5480  0E0F                     	;# 
  5481  0E10                     	;# 
  5482  0E11                     	;# 
  5483  0E12                     	;# 
  5484  0E13                     	;# 
  5485  0E14                     	;# 
  5486  0E15                     	;# 
  5487  0E16                     	;# 
  5488  0E17                     	;# 
  5489  0E18                     	;# 
  5490  0E19                     	;# 
  5491  0E1A                     	;# 
  5492  0E1B                     	;# 
  5493  0E1C                     	;# 
  5494  0E1D                     	;# 
  5495  0E1E                     	;# 
  5496  0E1F                     	;# 
  5497  0E20                     	;# 
  5498  0E21                     	;# 
  5499  0E22                     	;# 
  5500  0E23                     	;# 
  5501  0E24                     	;# 
  5502  0E25                     	;# 
  5503  0E26                     	;# 
  5504  0E27                     	;# 
  5505  0E28                     	;# 
  5506  0E29                     	;# 
  5507  0E2A                     	;# 
  5508  0E2B                     	;# 
  5509  0E2C                     	;# 
  5510  0E2D                     	;# 
  5511  0E2E                     	;# 
  5512  0E2F                     	;# 
  5513  0E30                     	;# 
  5514  0E31                     	;# 
  5515  0E32                     	;# 
  5516  0E33                     	;# 
  5517  0E34                     	;# 
  5518  0E35                     	;# 
  5519  0E36                     	;# 
  5520  0E37                     	;# 
  5521  0E8F                     	;# 
  5522  0E90                     	;# 
  5523  0E91                     	;# 
  5524  0E92                     	;# 
  5525  0E93                     	;# 
  5526  0E94                     	;# 
  5527  0E95                     	;# 
  5528  0E96                     	;# 
  5529  0E97                     	;# 
  5530  0E9C                     	;# 
  5531  0E9D                     	;# 
  5532  0E9E                     	;# 
  5533  0EA1                     	;# 
  5534  0EA2                     	;# 
  5535  0EA3                     	;# 
  5536  0EA4                     	;# 
  5537  0EA5                     	;# 
  5538  0EA9                     	;# 
  5539  0EAA                     	;# 
  5540  0EAB                     	;# 
  5541  0EAC                     	;# 
  5542  0EB1                     	;# 
  5543  0EB2                     	;# 
  5544  0EB3                     	;# 
  5545  0EB8                     	;# 
  5546  0EB9                     	;# 
  5547  0EBA                     	;# 
  5548  0EBB                     	;# 
  5549  0EBC                     	;# 
  5550  0EBD                     	;# 
  5551  0EBE                     	;# 
  5552  0EC3                     	;# 
  5553  0EC5                     	;# 
  5554  0EC6                     	;# 
  5555  0EC7                     	;# 
  5556  0EC8                     	;# 
  5557  0EC9                     	;# 
  5558  0ECA                     	;# 
  5559  0ECB                     	;# 
  5560  0ECC                     	;# 
  5561  0F10                     	;# 
  5562  0F11                     	;# 
  5563  0F12                     	;# 
  5564  0F13                     	;# 
  5565  0F14                     	;# 
  5566  0F15                     	;# 
  5567  0F16                     	;# 
  5568  0F17                     	;# 
  5569  0F18                     	;# 
  5570  0F19                     	;# 
  5571  0F1A                     	;# 
  5572  0F1B                     	;# 
  5573  0F1C                     	;# 
  5574  0F1D                     	;# 
  5575  0F1E                     	;# 
  5576  0F1F                     	;# 
  5577  0F20                     	;# 
  5578  0F21                     	;# 
  5579  0F22                     	;# 
  5580  0F23                     	;# 
  5581  0F24                     	;# 
  5582  0F25                     	;# 
  5583  0F26                     	;# 
  5584  0F27                     	;# 
  5585  0F28                     	;# 
  5586  0F29                     	;# 
  5587  0F2A                     	;# 
  5588  0F2B                     	;# 
  5589  0F2C                     	;# 
  5590  0F2D                     	;# 
  5591  0F2E                     	;# 
  5592  0F2F                     	;# 
  5593  0F30                     	;# 
  5594  0F31                     	;# 
  5595  0F32                     	;# 
  5596  0F38                     	;# 
  5597  0F39                     	;# 
  5598  0F3A                     	;# 
  5599  0F3B                     	;# 
  5600  0F3C                     	;# 
  5601  0F3D                     	;# 
  5602  0F3E                     	;# 
  5603  0F3F                     	;# 
  5604  0F40                     	;# 
  5605  0F41                     	;# 
  5606  0F43                     	;# 
  5607  0F44                     	;# 
  5608  0F45                     	;# 
  5609  0F46                     	;# 
  5610  0F47                     	;# 
  5611  0F48                     	;# 
  5612  0F49                     	;# 
  5613  0F4A                     	;# 
  5614  0F4B                     	;# 
  5615  0F4C                     	;# 
  5616  0F4E                     	;# 
  5617  0F4F                     	;# 
  5618  0F50                     	;# 
  5619  0F51                     	;# 
  5620  0F52                     	;# 
  5621  0F53                     	;# 
  5622  0F54                     	;# 
  5623  0F55                     	;# 
  5624  0F56                     	;# 
  5625  0F57                     	;# 
  5626  0F59                     	;# 
  5627  0F5A                     	;# 
  5628  0F5B                     	;# 
  5629  0F5C                     	;# 
  5630  0F5D                     	;# 
  5631  0F61                     	;# 
  5632  0F62                     	;# 
  5633  0F64                     	;# 
  5634  0F65                     	;# 
  5635  0F66                     	;# 
  5636  0F67                     	;# 
  5637  0F68                     	;# 
  5638  0F69                     	;# 
  5639  0F6A                     	;# 
  5640  0F6B                     	;# 
  5641  0F6C                     	;# 
  5642  0F6D                     	;# 
  5643  0FE4                     	;# 
  5644  0FE5                     	;# 
  5645  0FE6                     	;# 
  5646  0FE7                     	;# 
  5647  0FE8                     	;# 
  5648  0FE9                     	;# 
  5649  0FEA                     	;# 
  5650  0FEB                     	;# 
  5651  0FED                     	;# 
  5652  0FEE                     	;# 
  5653  0FEF                     	;_displayArray
  5654                           
  5655                           	psect	idataBANK1
  5656  1EC5                     __pidataBANK1:	
  5657                           
  5658                           ;initializer for main@F15397
  5659  1EC5  3441               	retlw	65
  5660  1EC6  346C               	retlw	108
  5661  1EC7  3461               	retlw	97
  5662  1EC8  3472               	retlw	114
  5663  1EC9  346D               	retlw	109
  5664  1ECA  3420               	retlw	32
  5665  1ECB  3443               	retlw	67
  5666  1ECC  346C               	retlw	108
  5667  1ECD  346F               	retlw	111
  5668  1ECE  3463               	retlw	99
  5669  1ECF  346B               	retlw	107
  5670  1ED0  3400               	retlw	0
  5671                           
  5672                           	psect	idataBIGRAM
  5673  0570                     __pidataBIGRAM:	
  5674                           
  5675                           ;initializer for _displayArray
  5676  0570  343F               	retlw	63
  5677  0571  3440               	retlw	64
  5678  0572  3438               	retlw	56
  5679  0573  3440               	retlw	64
  5680  0574  343F               	retlw	63
  5681  0575  3438               	retlw	56
  5682  0576  3454               	retlw	84
  5683  0577  3454               	retlw	84
  5684  0578  3454               	retlw	84
  5685  0579  3418               	retlw	24
  5686  057A  3400               	retlw	0
  5687  057B  3441               	retlw	65
  5688  057C  347F               	retlw	127
  5689  057D  3440               	retlw	64
  5690  057E  3400               	retlw	0
  5691  057F  3438               	retlw	56
  5692  0580  3444               	retlw	68
  5693  0581  3444               	retlw	68
  5694  0582  3444               	retlw	68
  5695  0583  3428               	retlw	40
  5696  0584  3438               	retlw	56
  5697  0585  3444               	retlw	68
  5698  0586  3444               	retlw	68
  5699  0587  3444               	retlw	68
  5700  0588  3438               	retlw	56
  5701  0589  347C               	retlw	124
  5702  058A  3404               	retlw	4
  5703  058B  3478               	retlw	120
  5704  058C  3404               	retlw	4
  5705  058D  3478               	retlw	120
  5706  058E  3438               	retlw	56
  5707  058F  3454               	retlw	84
  5708  0590  3454               	retlw	84
  5709  0591  3454               	retlw	84
  5710  0592  3418               	retlw	24
  5711  0593  3400               	retlw	0
  5712  0594  3400               	retlw	0
  5713  0595  3400               	retlw	0
  5714  0596  3400               	retlw	0
  5715  0597  3400               	retlw	0
  5716  0598  3400               	retlw	0
  5717  0599  3400               	retlw	0
  5718  059A  3400               	retlw	0
  5719  059B  3400               	retlw	0
  5720  059C  3400               	retlw	0
  5721  059D  347F               	retlw	127
  5722  059E  3441               	retlw	65
  5723  059F  3441               	retlw	65
  5724  05A0  3441               	retlw	65
  5725  05A1  343E               	retlw	62
  5726  05A2  3400               	retlw	0
  5727  05A3  3444               	retlw	68
  5728  05A4  347D               	retlw	125
  5729  05A5  3440               	retlw	64
  5730  05A6  3400               	retlw	0
  5731  05A7  3400               	retlw	0
  5732  05A8  3408               	retlw	8
  5733  05A9  347E               	retlw	126
  5734  05AA  3409               	retlw	9
  5735  05AB  3402               	retlw	2
  5736  05AC  3400               	retlw	0
  5737  05AD  3408               	retlw	8
  5738  05AE  347E               	retlw	126
  5739  05AF  3409               	retlw	9
  5740  05B0  3402               	retlw	2
  5741  05B1  343C               	retlw	60
  5742  05B2  3440               	retlw	64
  5743  05B3  3440               	retlw	64
  5744  05B4  3420               	retlw	32
  5745  05B5  347C               	retlw	124
  5746  05B6  3448               	retlw	72
  5747  05B7  3454               	retlw	84
  5748  05B8  3454               	retlw	84
  5749  05B9  3454               	retlw	84
  5750  05BA  3424               	retlw	36
  5751  05BB  3438               	retlw	56
  5752  05BC  3454               	retlw	84
  5753  05BD  3454               	retlw	84
  5754  05BE  3454               	retlw	84
  5755  05BF  3418               	retlw	24
  5756  05C0  347C               	retlw	124
  5757  05C1  3408               	retlw	8
  5758  05C2  3404               	retlw	4
  5759  05C3  3404               	retlw	4
  5760  05C4  3408               	retlw	8
  5761  05C5  3400               	retlw	0
  5762  05C6  3400               	retlw	0
  5763  05C7  3400               	retlw	0
  5764  05C8  3400               	retlw	0
  5765  05C9  3400               	retlw	0
  5766  05CA  3400               	retlw	0
  5767  05CB  3400               	retlw	0
  5768  05CC  3400               	retlw	0
  5769  05CD  3400               	retlw	0
  5770  05CE  3400               	retlw	0
  5771  05CF  3400               	retlw	0
  5772  05D0  3400               	retlw	0
  5773  05D1  3400               	retlw	0
  5774  05D2  3400               	retlw	0
  5775  05D3  3400               	retlw	0
  5776  05D4  3400               	retlw	0
  5777  05D5  3400               	retlw	0
  5778  05D6  3400               	retlw	0
  5779  05D7  3400               	retlw	0
  5780  05D8  3400               	retlw	0
  5781  05D9  3400               	retlw	0
  5782  05DA  3400               	retlw	0
  5783  05DB  3400               	retlw	0
  5784  05DC  3400               	retlw	0
  5785  05DD  3400               	retlw	0
  5786  05DE  3400               	retlw	0
  5787  05DF  3400               	retlw	0
  5788  05E0  3400               	retlw	0
  5789  05E1  3400               	retlw	0
  5790  05E2  3400               	retlw	0
  5791  05E3  3400               	retlw	0
  5792  05E4  3400               	retlw	0
  5793  05E5  3400               	retlw	0
  5794  05E6  3400               	retlw	0
  5795  05E7  3400               	retlw	0
  5796  05E8  3400               	retlw	0
  5797  05E9  3400               	retlw	0
  5798  05EA  3400               	retlw	0
  5799  05EB  3400               	retlw	0
  5800  05EC  3400               	retlw	0
  5801  05ED  3400               	retlw	0
  5802  05EE  3400               	retlw	0
  5803  05EF  3400               	retlw	0
  5804  05F0  3400               	retlw	0
  5805  05F1  3400               	retlw	0
  5806  05F2  3400               	retlw	0
  5807  05F3  3400               	retlw	0
  5808  05F4  3400               	retlw	0
  5809  05F5  3400               	retlw	0
  5810  05F6  3400               	retlw	0
  5811  05F7  3400               	retlw	0
  5812  05F8  3400               	retlw	0
  5813  05F9  3400               	retlw	0
  5814  05FA  3400               	retlw	0
  5815  05FB  3400               	retlw	0
  5816  05FC  3400               	retlw	0
  5817  05FD  3400               	retlw	0
  5818  05FE  3400               	retlw	0
  5819  05FF  3400               	retlw	0
  5820  0600  3400               	retlw	0
  5821  0601  3400               	retlw	0
  5822  0602  3400               	retlw	0
  5823  0603  3400               	retlw	0
  5824  0604  3400               	retlw	0
  5825  0605  3400               	retlw	0
  5826  0606  3400               	retlw	0
  5827  0607  3400               	retlw	0
  5828  0608  3400               	retlw	0
  5829  0609  3400               	retlw	0
  5830  060A  3400               	retlw	0
  5831  060B  3400               	retlw	0
  5832  060C  3400               	retlw	0
  5833  060D  3400               	retlw	0
  5834  060E  3400               	retlw	0
  5835  060F  3400               	retlw	0
  5836  0610  3400               	retlw	0
  5837  0611  3400               	retlw	0
  5838  0612  3400               	retlw	0
  5839  0613  3400               	retlw	0
  5840  0614  3400               	retlw	0
  5841  0615  3400               	retlw	0
  5842  0616  3400               	retlw	0
  5843  0617  3400               	retlw	0
  5844  0618  3400               	retlw	0
  5845  0619  3400               	retlw	0
  5846  061A  3400               	retlw	0
  5847  061B  3400               	retlw	0
  5848  061C  3400               	retlw	0
  5849  061D  3400               	retlw	0
  5850  061E  3400               	retlw	0
  5851  061F  3400               	retlw	0
  5852  0620  3400               	retlw	0
  5853  0621  3400               	retlw	0
  5854  0622  3400               	retlw	0
  5855  0623  3400               	retlw	0
  5856  0624  3400               	retlw	0
  5857  0625  3400               	retlw	0
  5858  0626  3400               	retlw	0
  5859  0627  3400               	retlw	0
  5860  0628  3400               	retlw	0
  5861  0629  3400               	retlw	0
  5862  062A  3400               	retlw	0
  5863  062B  3400               	retlw	0
  5864  062C  3400               	retlw	0
  5865  062D  3400               	retlw	0
  5866  062E  3400               	retlw	0
  5867  062F  3400               	retlw	0
  5868  0630  3400               	retlw	0
  5869  0631  3400               	retlw	0
  5870  0632  3400               	retlw	0
  5871  0633  3400               	retlw	0
  5872  0634  3400               	retlw	0
  5873  0635  3400               	retlw	0
  5874  0636  3400               	retlw	0
  5875  0637  3400               	retlw	0
  5876  0638  3400               	retlw	0
  5877  0639  3400               	retlw	0
  5878  063A  3400               	retlw	0
  5879  063B  3400               	retlw	0
  5880  063C  3400               	retlw	0
  5881  063D  3400               	retlw	0
  5882  063E  3400               	retlw	0
  5883  063F  3400               	retlw	0
  5884  0640  3400               	retlw	0
  5885  0641  3400               	retlw	0
  5886  0642  3400               	retlw	0
  5887  0643  3400               	retlw	0
  5888  0644  3400               	retlw	0
  5889  0645  3400               	retlw	0
  5890  0646  3400               	retlw	0
  5891  0647  3400               	retlw	0
  5892  0648  3400               	retlw	0
  5893  0649  3400               	retlw	0
  5894  064A  3400               	retlw	0
  5895  064B  3400               	retlw	0
  5896  064C  3400               	retlw	0
  5897  064D  3400               	retlw	0
  5898  064E  3400               	retlw	0
  5899  064F  3400               	retlw	0
  5900  0650  3400               	retlw	0
  5901  0651  3400               	retlw	0
  5902  0652  3400               	retlw	0
  5903  0653  3400               	retlw	0
  5904  0654  3400               	retlw	0
  5905  0655  3400               	retlw	0
  5906  0656  3400               	retlw	0
  5907  0657  3400               	retlw	0
  5908  0658  3400               	retlw	0
  5909  0659  3400               	retlw	0
  5910  065A  3400               	retlw	0
  5911  065B  3400               	retlw	0
  5912  065C  3400               	retlw	0
  5913  065D  3400               	retlw	0
  5914  065E  3400               	retlw	0
  5915  065F  3400               	retlw	0
  5916  0660  3400               	retlw	0
  5917  0661  3400               	retlw	0
  5918  0662  3400               	retlw	0
  5919  0663  3400               	retlw	0
  5920  0664  3400               	retlw	0
  5921  0665  3400               	retlw	0
  5922  0666  3400               	retlw	0
  5923  0667  3400               	retlw	0
  5924  0668  3400               	retlw	0
  5925  0669  3400               	retlw	0
  5926  066A  3400               	retlw	0
  5927  066B  3400               	retlw	0
  5928  066C  3400               	retlw	0
  5929  066D  3400               	retlw	0
  5930  066E  3400               	retlw	0
  5931  066F  3400               	retlw	0
  5932  0670  3400               	retlw	0
  5933  0671  3400               	retlw	0
  5934  0672  3400               	retlw	0
  5935  0673  3400               	retlw	0
  5936  0674  3400               	retlw	0
  5937  0675  3400               	retlw	0
  5938  0676  3400               	retlw	0
  5939  0677  3400               	retlw	0
  5940  0678  3400               	retlw	0
  5941  0679  3400               	retlw	0
  5942  067A  3400               	retlw	0
  5943  067B  3400               	retlw	0
  5944  067C  3400               	retlw	0
  5945  067D  3400               	retlw	0
  5946  067E  3400               	retlw	0
  5947  067F  3400               	retlw	0
  5948  0680  3400               	retlw	0
  5949  0681  3400               	retlw	0
  5950  0682  3400               	retlw	0
  5951  0683  3400               	retlw	0
  5952  0684  3400               	retlw	0
  5953  0685  3400               	retlw	0
  5954  0686  3400               	retlw	0
  5955  0687  3400               	retlw	0
  5956  0688  3400               	retlw	0
  5957  0689  3400               	retlw	0
  5958  068A  3400               	retlw	0
  5959  068B  3400               	retlw	0
  5960  068C  3400               	retlw	0
  5961  068D  3400               	retlw	0
  5962  068E  3400               	retlw	0
  5963  068F  3400               	retlw	0
  5964  0690  3400               	retlw	0
  5965  0691  3400               	retlw	0
  5966  0692  3400               	retlw	0
  5967  0693  3400               	retlw	0
  5968  0694  3400               	retlw	0
  5969  0695  3400               	retlw	0
  5970  0696  3400               	retlw	0
  5971  0697  3400               	retlw	0
  5972  0698  3400               	retlw	0
  5973  0699  3400               	retlw	0
  5974  069A  3400               	retlw	0
  5975  069B  3400               	retlw	0
  5976  069C  3400               	retlw	0
  5977  069D  3400               	retlw	0
  5978  069E  3400               	retlw	0
  5979  069F  3400               	retlw	0
  5980  06A0  3400               	retlw	0
  5981  06A1  3400               	retlw	0
  5982  06A2  3400               	retlw	0
  5983  06A3  3400               	retlw	0
  5984  06A4  3400               	retlw	0
  5985  06A5  3400               	retlw	0
  5986  06A6  3400               	retlw	0
  5987  06A7  3400               	retlw	0
  5988  06A8  3400               	retlw	0
  5989  06A9  3400               	retlw	0
  5990  06AA  3400               	retlw	0
  5991  06AB  3400               	retlw	0
  5992  06AC  3400               	retlw	0
  5993  06AD  3400               	retlw	0
  5994  06AE  3400               	retlw	0
  5995  06AF  3400               	retlw	0
  5996  06B0  3400               	retlw	0
  5997  06B1  3400               	retlw	0
  5998  06B2  3400               	retlw	0
  5999  06B3  3400               	retlw	0
  6000  06B4  3400               	retlw	0
  6001  06B5  3400               	retlw	0
  6002  06B6  3400               	retlw	0
  6003  06B7  3400               	retlw	0
  6004  06B8  3400               	retlw	0
  6005  06B9  3400               	retlw	0
  6006  06BA  3400               	retlw	0
  6007  06BB  3400               	retlw	0
  6008  06BC  3400               	retlw	0
  6009  06BD  3400               	retlw	0
  6010  06BE  3400               	retlw	0
  6011  06BF  3400               	retlw	0
  6012  06C0  3400               	retlw	0
  6013  06C1  3400               	retlw	0
  6014  06C2  3400               	retlw	0
  6015  06C3  3400               	retlw	0
  6016  06C4  3400               	retlw	0
  6017  06C5  3400               	retlw	0
  6018  06C6  3400               	retlw	0
  6019  06C7  3400               	retlw	0
  6020  06C8  3400               	retlw	0
  6021  06C9  3400               	retlw	0
  6022  06CA  3400               	retlw	0
  6023  06CB  3400               	retlw	0
  6024  06CC  3400               	retlw	0
  6025  06CD  3400               	retlw	0
  6026  06CE  3400               	retlw	0
  6027  06CF  3400               	retlw	0
  6028  06D0  3400               	retlw	0
  6029  06D1  3400               	retlw	0
  6030  06D2  3400               	retlw	0
  6031  06D3  3400               	retlw	0
  6032  06D4  3400               	retlw	0
  6033  06D5  3400               	retlw	0
  6034  06D6  3400               	retlw	0
  6035  06D7  3400               	retlw	0
  6036  06D8  3400               	retlw	0
  6037  06D9  3400               	retlw	0
  6038  06DA  3400               	retlw	0
  6039  06DB  3400               	retlw	0
  6040  06DC  3400               	retlw	0
  6041  06DD  3400               	retlw	0
  6042  06DE  3400               	retlw	0
  6043  06DF  3400               	retlw	0
  6044  06E0  3400               	retlw	0
  6045  06E1  3400               	retlw	0
  6046  06E2  3400               	retlw	0
  6047  06E3  3400               	retlw	0
  6048  06E4  3400               	retlw	0
  6049  06E5  3400               	retlw	0
  6050  06E6  3400               	retlw	0
  6051  06E7  3400               	retlw	0
  6052  06E8  3400               	retlw	0
  6053  06E9  3400               	retlw	0
  6054  06EA  3400               	retlw	0
  6055  06EB  3400               	retlw	0
  6056  06EC  3400               	retlw	0
  6057  06ED  3400               	retlw	0
  6058  06EE  3400               	retlw	0
  6059  06EF  3400               	retlw	0
  6060  06F0  3400               	retlw	0
  6061  06F1  3400               	retlw	0
  6062  06F2  3400               	retlw	0
  6063  06F3  3400               	retlw	0
  6064  06F4  3400               	retlw	0
  6065  06F5  3400               	retlw	0
  6066  06F6  3400               	retlw	0
  6067  06F7  3400               	retlw	0
  6068  06F8  3400               	retlw	0
  6069  06F9  3400               	retlw	0
  6070  06FA  3400               	retlw	0
  6071  06FB  3400               	retlw	0
  6072  06FC  3400               	retlw	0
  6073  06FD  3400               	retlw	0
  6074  06FE  3400               	retlw	0
  6075  06FF  3400               	retlw	0
  6076  0700  3400               	retlw	0
  6077  0701  3400               	retlw	0
  6078  0702  3400               	retlw	0
  6079  0703  3400               	retlw	0
  6080  0704  3400               	retlw	0
  6081  0705  3400               	retlw	0
  6082  0706  3400               	retlw	0
  6083  0707  3400               	retlw	0
  6084  0708  3400               	retlw	0
  6085  0709  3400               	retlw	0
  6086  070A  3400               	retlw	0
  6087  070B  3400               	retlw	0
  6088  070C  3400               	retlw	0
  6089  070D  3400               	retlw	0
  6090  070E  3400               	retlw	0
  6091  070F  3400               	retlw	0
  6092  0710  3400               	retlw	0
  6093  0711  3400               	retlw	0
  6094  0712  3400               	retlw	0
  6095  0713  3400               	retlw	0
  6096  0714  3400               	retlw	0
  6097  0715  3400               	retlw	0
  6098  0716  3400               	retlw	0
  6099  0717  3400               	retlw	0
  6100  0718  3400               	retlw	0
  6101  0719  3400               	retlw	0
  6102  071A  3400               	retlw	0
  6103  071B  3400               	retlw	0
  6104  071C  3400               	retlw	0
  6105  071D  3400               	retlw	0
  6106  071E  3400               	retlw	0
  6107  071F  3400               	retlw	0
  6108  0720  3400               	retlw	0
  6109  0721  3400               	retlw	0
  6110  0722  3400               	retlw	0
  6111  0723  3400               	retlw	0
  6112  0724  3400               	retlw	0
  6113  0725  3400               	retlw	0
  6114  0726  3400               	retlw	0
  6115  0727  3400               	retlw	0
  6116  0728  3400               	retlw	0
  6117  0729  3400               	retlw	0
  6118  072A  3400               	retlw	0
  6119  072B  3400               	retlw	0
  6120  072C  3400               	retlw	0
  6121  072D  3400               	retlw	0
  6122  072E  3400               	retlw	0
  6123  072F  3400               	retlw	0
  6124  0730  3400               	retlw	0
  6125  0731  3400               	retlw	0
  6126  0732  3400               	retlw	0
  6127  0733  3400               	retlw	0
  6128  0734  3400               	retlw	0
  6129  0735  3400               	retlw	0
  6130  0736  3400               	retlw	0
  6131  0737  3400               	retlw	0
  6132  0738  3400               	retlw	0
  6133  0739  3400               	retlw	0
  6134  073A  3400               	retlw	0
  6135  073B  3400               	retlw	0
  6136  073C  3400               	retlw	0
  6137  073D  3400               	retlw	0
  6138  073E  3400               	retlw	0
  6139  073F  3400               	retlw	0
  6140  0740  3400               	retlw	0
  6141  0741  3400               	retlw	0
  6142  0742  3400               	retlw	0
  6143  0743  3400               	retlw	0
  6144  0744  3400               	retlw	0
  6145  0745  3400               	retlw	0
  6146  0746  3400               	retlw	0
  6147  0747  3400               	retlw	0
  6148  0748  3400               	retlw	0
  6149  0749  3400               	retlw	0
  6150  074A  3400               	retlw	0
  6151                           
  6152                           	psect	stringtext1
  6153  074B                     __pstringtext1:	
  6154  074B                     _lookup:	
  6155  074B  3400               	retlw	0
  6156  074C  3400               	retlw	0
  6157  074D  3400               	retlw	0
  6158  074E  3400               	retlw	0
  6159  074F  3400               	retlw	0
  6160  0750  3400               	retlw	0
  6161  0751  3400               	retlw	0
  6162  0752  345F               	retlw	95
  6163  0753  3400               	retlw	0
  6164  0754  3400               	retlw	0
  6165  0755  3400               	retlw	0
  6166  0756  3407               	retlw	7
  6167  0757  3400               	retlw	0
  6168  0758  3407               	retlw	7
  6169  0759  3400               	retlw	0
  6170  075A  3414               	retlw	20
  6171  075B  347F               	retlw	127
  6172  075C  3414               	retlw	20
  6173  075D  347F               	retlw	127
  6174  075E  3414               	retlw	20
  6175  075F  3424               	retlw	36
  6176  0760  342A               	retlw	42
  6177  0761  347F               	retlw	127
  6178  0762  342A               	retlw	42
  6179  0763  3412               	retlw	18
  6180  0764  3423               	retlw	35
  6181  0765  3413               	retlw	19
  6182  0766  3408               	retlw	8
  6183  0767  3464               	retlw	100
  6184  0768  3462               	retlw	98
  6185  0769  3436               	retlw	54
  6186  076A  3449               	retlw	73
  6187  076B  3456               	retlw	86
  6188  076C  3420               	retlw	32
  6189  076D  3450               	retlw	80
  6190  076E  3400               	retlw	0
  6191  076F  3408               	retlw	8
  6192  0770  3407               	retlw	7
  6193  0771  3403               	retlw	3
  6194  0772  3400               	retlw	0
  6195  0773  3400               	retlw	0
  6196  0774  341C               	retlw	28
  6197  0775  3422               	retlw	34
  6198  0776  3441               	retlw	65
  6199  0777  3400               	retlw	0
  6200  0778  3400               	retlw	0
  6201  0779  3441               	retlw	65
  6202  077A  3422               	retlw	34
  6203  077B  341C               	retlw	28
  6204  077C  3400               	retlw	0
  6205  077D  342A               	retlw	42
  6206  077E  341C               	retlw	28
  6207  077F  347F               	retlw	127
  6208  0780  341C               	retlw	28
  6209  0781  342A               	retlw	42
  6210  0782  3408               	retlw	8
  6211  0783  3408               	retlw	8
  6212  0784  343E               	retlw	62
  6213  0785  3408               	retlw	8
  6214  0786  3408               	retlw	8
  6215  0787  3400               	retlw	0
  6216  0788  3400               	retlw	0
  6217  0789  3470               	retlw	112
  6218  078A  3430               	retlw	48
  6219  078B  3400               	retlw	0
  6220  078C  3408               	retlw	8
  6221  078D  3408               	retlw	8
  6222  078E  3408               	retlw	8
  6223  078F  3408               	retlw	8
  6224  0790  3408               	retlw	8
  6225  0791  3400               	retlw	0
  6226  0792  3400               	retlw	0
  6227  0793  3460               	retlw	96
  6228  0794  3460               	retlw	96
  6229  0795  3400               	retlw	0
  6230  0796  3420               	retlw	32
  6231  0797  3410               	retlw	16
  6232  0798  3408               	retlw	8
  6233  0799  3404               	retlw	4
  6234  079A  3402               	retlw	2
  6235  079B  343E               	retlw	62
  6236  079C  3451               	retlw	81
  6237  079D  3449               	retlw	73
  6238  079E  3445               	retlw	69
  6239  079F  343E               	retlw	62
  6240  07A0  3400               	retlw	0
  6241  07A1  3442               	retlw	66
  6242  07A2  347F               	retlw	127
  6243  07A3  3440               	retlw	64
  6244  07A4  3400               	retlw	0
  6245  07A5  3472               	retlw	114
  6246  07A6  3449               	retlw	73
  6247  07A7  3449               	retlw	73
  6248  07A8  3449               	retlw	73
  6249  07A9  3446               	retlw	70
  6250  07AA  3421               	retlw	33
  6251  07AB  3441               	retlw	65
  6252  07AC  3449               	retlw	73
  6253  07AD  344D               	retlw	77
  6254  07AE  3433               	retlw	51
  6255  07AF  3418               	retlw	24
  6256  07B0  3414               	retlw	20
  6257  07B1  3412               	retlw	18
  6258  07B2  347F               	retlw	127
  6259  07B3  3410               	retlw	16
  6260  07B4  3427               	retlw	39
  6261  07B5  3445               	retlw	69
  6262  07B6  3445               	retlw	69
  6263  07B7  3445               	retlw	69
  6264  07B8  3439               	retlw	57
  6265  07B9  343C               	retlw	60
  6266  07BA  344A               	retlw	74
  6267  07BB  3449               	retlw	73
  6268  07BC  3449               	retlw	73
  6269  07BD  3431               	retlw	49
  6270  07BE  3441               	retlw	65
  6271  07BF  3421               	retlw	33
  6272  07C0  3411               	retlw	17
  6273  07C1  3409               	retlw	9
  6274  07C2  3407               	retlw	7
  6275  07C3  3436               	retlw	54
  6276  07C4  3449               	retlw	73
  6277  07C5  3449               	retlw	73
  6278  07C6  3449               	retlw	73
  6279  07C7  3436               	retlw	54
  6280  07C8  3446               	retlw	70
  6281  07C9  3449               	retlw	73
  6282  07CA  3449               	retlw	73
  6283  07CB  3429               	retlw	41
  6284  07CC  341E               	retlw	30
  6285  07CD  3400               	retlw	0
  6286  07CE  3400               	retlw	0
  6287  07CF  3414               	retlw	20
  6288  07D0  3400               	retlw	0
  6289  07D1  3400               	retlw	0
  6290  07D2  3400               	retlw	0
  6291  07D3  3440               	retlw	64
  6292  07D4  3434               	retlw	52
  6293  07D5  3400               	retlw	0
  6294  07D6  3400               	retlw	0
  6295  07D7  3400               	retlw	0
  6296  07D8  3408               	retlw	8
  6297  07D9  3414               	retlw	20
  6298  07DA  3422               	retlw	34
  6299  07DB  3441               	retlw	65
  6300  07DC  3414               	retlw	20
  6301  07DD  3414               	retlw	20
  6302  07DE  3414               	retlw	20
  6303  07DF  3414               	retlw	20
  6304  07E0  3414               	retlw	20
  6305  07E1  3400               	retlw	0
  6306  07E2  3441               	retlw	65
  6307  07E3  3422               	retlw	34
  6308  07E4  3414               	retlw	20
  6309  07E5  3408               	retlw	8
  6310  07E6  3402               	retlw	2
  6311  07E7  3401               	retlw	1
  6312  07E8  3459               	retlw	89
  6313  07E9  3409               	retlw	9
  6314  07EA  3406               	retlw	6
  6315  07EB  343E               	retlw	62
  6316  07EC  3441               	retlw	65
  6317  07ED  345D               	retlw	93
  6318  07EE  3459               	retlw	89
  6319  07EF  344E               	retlw	78
  6320  07F0  347C               	retlw	124
  6321  07F1  3412               	retlw	18
  6322  07F2  3411               	retlw	17
  6323  07F3  3412               	retlw	18
  6324  07F4  347C               	retlw	124
  6325  07F5  347F               	retlw	127
  6326  07F6  3449               	retlw	73
  6327  07F7  3449               	retlw	73
  6328  07F8  3449               	retlw	73
  6329  07F9  3436               	retlw	54
  6330  07FA  343E               	retlw	62
  6331  07FB  3441               	retlw	65
  6332  07FC  3441               	retlw	65
  6333  07FD  3441               	retlw	65
  6334  07FE  3422               	retlw	34
  6335  07FF  347F               	retlw	127
  6336  0800  3441               	retlw	65
  6337  0801  3441               	retlw	65
  6338  0802  3441               	retlw	65
  6339  0803  343E               	retlw	62
  6340  0804  347F               	retlw	127
  6341  0805  3449               	retlw	73
  6342  0806  3449               	retlw	73
  6343  0807  3449               	retlw	73
  6344  0808  3441               	retlw	65
  6345  0809  347F               	retlw	127
  6346  080A  3409               	retlw	9
  6347  080B  3409               	retlw	9
  6348  080C  3409               	retlw	9
  6349  080D  3401               	retlw	1
  6350  080E  343E               	retlw	62
  6351  080F  3441               	retlw	65
  6352  0810  3441               	retlw	65
  6353  0811  3451               	retlw	81
  6354  0812  3473               	retlw	115
  6355  0813  347F               	retlw	127
  6356  0814  3408               	retlw	8
  6357  0815  3408               	retlw	8
  6358  0816  3408               	retlw	8
  6359  0817  347F               	retlw	127
  6360  0818  3400               	retlw	0
  6361  0819  3441               	retlw	65
  6362  081A  347F               	retlw	127
  6363  081B  3441               	retlw	65
  6364  081C  3400               	retlw	0
  6365  081D  3420               	retlw	32
  6366  081E  3440               	retlw	64
  6367  081F  3441               	retlw	65
  6368  0820  343F               	retlw	63
  6369  0821  3401               	retlw	1
  6370  0822  347F               	retlw	127
  6371  0823  3408               	retlw	8
  6372  0824  3414               	retlw	20
  6373  0825  3422               	retlw	34
  6374  0826  3441               	retlw	65
  6375  0827  347F               	retlw	127
  6376  0828  3440               	retlw	64
  6377  0829  3440               	retlw	64
  6378  082A  3440               	retlw	64
  6379  082B  3440               	retlw	64
  6380  082C  347F               	retlw	127
  6381  082D  3402               	retlw	2
  6382  082E  341C               	retlw	28
  6383  082F  3402               	retlw	2
  6384  0830  347F               	retlw	127
  6385  0831  347F               	retlw	127
  6386  0832  3404               	retlw	4
  6387  0833  3408               	retlw	8
  6388  0834  3410               	retlw	16
  6389  0835  347F               	retlw	127
  6390  0836  343E               	retlw	62
  6391  0837  3441               	retlw	65
  6392  0838  3441               	retlw	65
  6393  0839  3441               	retlw	65
  6394  083A  343E               	retlw	62
  6395  083B  347F               	retlw	127
  6396  083C  3409               	retlw	9
  6397  083D  3409               	retlw	9
  6398  083E  3409               	retlw	9
  6399  083F  3406               	retlw	6
  6400  0840  343E               	retlw	62
  6401  0841  3441               	retlw	65
  6402  0842  3451               	retlw	81
  6403  0843  3421               	retlw	33
  6404  0844  345E               	retlw	94
  6405  0845  347F               	retlw	127
  6406  0846  3409               	retlw	9
  6407  0847  3419               	retlw	25
  6408  0848  3429               	retlw	41
  6409  0849  3446               	retlw	70
  6410  084A  3426               	retlw	38
  6411  084B  3449               	retlw	73
  6412  084C  3449               	retlw	73
  6413  084D  3449               	retlw	73
  6414  084E  3432               	retlw	50
  6415  084F  3403               	retlw	3
  6416  0850  3401               	retlw	1
  6417  0851  347F               	retlw	127
  6418  0852  3401               	retlw	1
  6419  0853  3403               	retlw	3
  6420  0854  343F               	retlw	63
  6421  0855  3440               	retlw	64
  6422  0856  3440               	retlw	64
  6423  0857  3440               	retlw	64
  6424  0858  343F               	retlw	63
  6425  0859  341F               	retlw	31
  6426  085A  3420               	retlw	32
  6427  085B  3440               	retlw	64
  6428  085C  3420               	retlw	32
  6429  085D  341F               	retlw	31
  6430  085E  343F               	retlw	63
  6431  085F  3440               	retlw	64
  6432  0860  3438               	retlw	56
  6433  0861  3440               	retlw	64
  6434  0862  343F               	retlw	63
  6435  0863  3463               	retlw	99
  6436  0864  3414               	retlw	20
  6437  0865  3408               	retlw	8
  6438  0866  3414               	retlw	20
  6439  0867  3463               	retlw	99
  6440  0868  3403               	retlw	3
  6441  0869  3404               	retlw	4
  6442  086A  3478               	retlw	120
  6443  086B  3404               	retlw	4
  6444  086C  3403               	retlw	3
  6445  086D  3461               	retlw	97
  6446  086E  3459               	retlw	89
  6447  086F  3449               	retlw	73
  6448  0870  344D               	retlw	77
  6449  0871  3443               	retlw	67
  6450  0872  3400               	retlw	0
  6451  0873  347F               	retlw	127
  6452  0874  3441               	retlw	65
  6453  0875  3441               	retlw	65
  6454  0876  3441               	retlw	65
  6455  0877  3402               	retlw	2
  6456  0878  3404               	retlw	4
  6457  0879  3408               	retlw	8
  6458  087A  3410               	retlw	16
  6459  087B  3420               	retlw	32
  6460  087C  3400               	retlw	0
  6461  087D  3441               	retlw	65
  6462  087E  3441               	retlw	65
  6463  087F  3441               	retlw	65
  6464  0880  347F               	retlw	127
  6465  0881  3404               	retlw	4
  6466  0882  3402               	retlw	2
  6467  0883  3401               	retlw	1
  6468  0884  3402               	retlw	2
  6469  0885  3404               	retlw	4
  6470  0886  3440               	retlw	64
  6471  0887  3440               	retlw	64
  6472  0888  3440               	retlw	64
  6473  0889  3440               	retlw	64
  6474  088A  3440               	retlw	64
  6475  088B  3400               	retlw	0
  6476  088C  3403               	retlw	3
  6477  088D  3407               	retlw	7
  6478  088E  3408               	retlw	8
  6479  088F  3400               	retlw	0
  6480  0890  3420               	retlw	32
  6481  0891  3454               	retlw	84
  6482  0892  3454               	retlw	84
  6483  0893  3438               	retlw	56
  6484  0894  3440               	retlw	64
  6485  0895  347F               	retlw	127
  6486  0896  3428               	retlw	40
  6487  0897  3444               	retlw	68
  6488  0898  3444               	retlw	68
  6489  0899  3438               	retlw	56
  6490  089A  3438               	retlw	56
  6491  089B  3444               	retlw	68
  6492  089C  3444               	retlw	68
  6493  089D  3444               	retlw	68
  6494  089E  3428               	retlw	40
  6495  089F  3438               	retlw	56
  6496  08A0  3444               	retlw	68
  6497  08A1  3444               	retlw	68
  6498  08A2  3428               	retlw	40
  6499  08A3  347F               	retlw	127
  6500  08A4  3438               	retlw	56
  6501  08A5  3454               	retlw	84
  6502  08A6  3454               	retlw	84
  6503  08A7  3454               	retlw	84
  6504  08A8  3418               	retlw	24
  6505  08A9  3400               	retlw	0
  6506  08AA  3408               	retlw	8
  6507  08AB  347E               	retlw	126
  6508  08AC  3409               	retlw	9
  6509  08AD  3402               	retlw	2
  6510  08AE  340C               	retlw	12
  6511  08AF  3452               	retlw	82
  6512  08B0  3452               	retlw	82
  6513  08B1  344A               	retlw	74
  6514  08B2  343C               	retlw	60
  6515  08B3  347F               	retlw	127
  6516  08B4  3408               	retlw	8
  6517  08B5  3404               	retlw	4
  6518  08B6  3404               	retlw	4
  6519  08B7  3478               	retlw	120
  6520  08B8  3400               	retlw	0
  6521  08B9  3444               	retlw	68
  6522  08BA  347D               	retlw	125
  6523  08BB  3440               	retlw	64
  6524  08BC  3400               	retlw	0
  6525  08BD  3420               	retlw	32
  6526  08BE  3440               	retlw	64
  6527  08BF  3440               	retlw	64
  6528  08C0  343D               	retlw	61
  6529  08C1  3400               	retlw	0
  6530  08C2  347F               	retlw	127
  6531  08C3  3410               	retlw	16
  6532  08C4  3428               	retlw	40
  6533  08C5  3444               	retlw	68
  6534  08C6  3400               	retlw	0
  6535  08C7  3400               	retlw	0
  6536  08C8  3441               	retlw	65
  6537  08C9  347F               	retlw	127
  6538  08CA  3440               	retlw	64
  6539  08CB  3400               	retlw	0
  6540  08CC  347C               	retlw	124
  6541  08CD  3404               	retlw	4
  6542  08CE  3478               	retlw	120
  6543  08CF  3404               	retlw	4
  6544  08D0  3478               	retlw	120
  6545  08D1  347C               	retlw	124
  6546  08D2  3408               	retlw	8
  6547  08D3  3404               	retlw	4
  6548  08D4  3404               	retlw	4
  6549  08D5  3478               	retlw	120
  6550  08D6  3438               	retlw	56
  6551  08D7  3444               	retlw	68
  6552  08D8  3444               	retlw	68
  6553  08D9  3444               	retlw	68
  6554  08DA  3438               	retlw	56
  6555  08DB  347C               	retlw	124
  6556  08DC  3418               	retlw	24
  6557  08DD  3424               	retlw	36
  6558  08DE  3424               	retlw	36
  6559  08DF  3418               	retlw	24
  6560  08E0  3418               	retlw	24
  6561  08E1  3424               	retlw	36
  6562  08E2  3424               	retlw	36
  6563  08E3  3418               	retlw	24
  6564  08E4  347C               	retlw	124
  6565  08E5  347C               	retlw	124
  6566  08E6  3408               	retlw	8
  6567  08E7  3404               	retlw	4
  6568  08E8  3404               	retlw	4
  6569  08E9  3408               	retlw	8
  6570  08EA  3448               	retlw	72
  6571  08EB  3454               	retlw	84
  6572  08EC  3454               	retlw	84
  6573  08ED  3454               	retlw	84
  6574  08EE  3424               	retlw	36
  6575  08EF  3404               	retlw	4
  6576  08F0  3404               	retlw	4
  6577  08F1  343F               	retlw	63
  6578  08F2  3444               	retlw	68
  6579  08F3  3424               	retlw	36
  6580  08F4  343C               	retlw	60
  6581  08F5  3440               	retlw	64
  6582  08F6  3440               	retlw	64
  6583  08F7  3420               	retlw	32
  6584  08F8  347C               	retlw	124
  6585  08F9  341C               	retlw	28
  6586  08FA  3420               	retlw	32
  6587  08FB  3440               	retlw	64
  6588  08FC  3420               	retlw	32
  6589  08FD  341C               	retlw	28
  6590  08FE  343C               	retlw	60
  6591  08FF  3440               	retlw	64
  6592  0900  3430               	retlw	48
  6593  0901  3440               	retlw	64
  6594  0902  343C               	retlw	60
  6595  0903  3444               	retlw	68
  6596  0904  3428               	retlw	40
  6597  0905  3410               	retlw	16
  6598  0906  3428               	retlw	40
  6599  0907  3444               	retlw	68
  6600  0908  344C               	retlw	76
  6601  0909  3450               	retlw	80
  6602  090A  3450               	retlw	80
  6603  090B  3450               	retlw	80
  6604  090C  343C               	retlw	60
  6605  090D  3444               	retlw	68
  6606  090E  3464               	retlw	100
  6607  090F  3454               	retlw	84
  6608  0910  344C               	retlw	76
  6609  0911  3444               	retlw	68
  6610  0912  3400               	retlw	0
  6611  0913  3408               	retlw	8
  6612  0914  3436               	retlw	54
  6613  0915  3441               	retlw	65
  6614  0916  3400               	retlw	0
  6615  0917  3400               	retlw	0
  6616  0918  3400               	retlw	0
  6617  0919  3477               	retlw	119
  6618  091A  3400               	retlw	0
  6619  091B  3400               	retlw	0
  6620  091C  3400               	retlw	0
  6621  091D  3441               	retlw	65
  6622  091E  3436               	retlw	54
  6623  091F  3408               	retlw	8
  6624  0920  3400               	retlw	0
  6625  0921  3402               	retlw	2
  6626  0922  3401               	retlw	1
  6627  0923  3402               	retlw	2
  6628  0924  3404               	retlw	4
  6629  0925  3402               	retlw	2
  6630  0926                     __end_of_lookup:	
  6631                           
  6632                           	psect	stringtext2
  6633  1800                     __pstringtext2:	
  6634  1800                     _fsmStateTable:	
  6635  1800  3400               	retlw	low _do_I2C_IDLE
  6636  1801  3410               	retlw	high _do_I2C_IDLE
  6637  1802  34A1               	retlw	low _do_I2C_SEND_ADR_READ
  6638  1803  341E               	retlw	high _do_I2C_SEND_ADR_READ
  6639  1804  345D               	retlw	low _do_I2C_SEND_ADR_WRITE
  6640  1805  341E               	retlw	high _do_I2C_SEND_ADR_WRITE
  6641  1806  3455               	retlw	low _do_I2C_TX
  6642  1807  3416               	retlw	high _do_I2C_TX
  6643  1808  34E3               	retlw	low _do_I2C_RX
  6644  1809  3414               	retlw	high _do_I2C_RX
  6645  180A  342A               	retlw	low _do_I2C_RCEN
  6646  180B  341E               	retlw	high _do_I2C_RCEN
  6647  180C  344A               	retlw	low _do_I2C_TX_EMPTY
  6648  180D  3412               	retlw	high _do_I2C_TX_EMPTY
  6649  180E  34D6               	retlw	low _do_I2C_SEND_RESTART_READ
  6650  180F  341D               	retlw	high _do_I2C_SEND_RESTART_READ
  6651  1810  34DE               	retlw	low _do_I2C_SEND_RESTART_WRITE
  6652  1811  341D               	retlw	high _do_I2C_SEND_RESTART_WRITE
  6653  1812  34E6               	retlw	low _do_I2C_SEND_RESTART
  6654  1813  341D               	retlw	high _do_I2C_SEND_RESTART
  6655  1814  34EE               	retlw	low _do_I2C_SEND_STOP
  6656  1815  341D               	retlw	high _do_I2C_SEND_STOP
  6657  1816  34F6               	retlw	low _do_I2C_DO_ACK
  6658  1817  341D               	retlw	high _do_I2C_DO_ACK
  6659  1818  34FE               	retlw	low _do_I2C_DO_NACK_STOP
  6660  1819  341D               	retlw	high _do_I2C_DO_NACK_STOP
  6661  181A  3406               	retlw	low _do_I2C_DO_NACK_RESTART
  6662  181B  341E               	retlw	high _do_I2C_DO_NACK_RESTART
  6663  181C  3452               	retlw	low _do_I2C_RESET
  6664  181D  341E               	retlw	high _do_I2C_RESET
  6665  181E  34C6               	retlw	low _do_I2C_DO_ADDRESS_NACK
  6666  181F  3411               	retlw	high _do_I2C_DO_ADDRESS_NACK
  6667  1820                     __end_of_fsmStateTable:	
  6668                           
  6669                           	psect	stringtext3
  6670  1855                     __pstringtext3:	
  6671  1855                     _moninit:	
  6672  1855  341F               	retlw	31
  6673  1856  341C               	retlw	28
  6674  1857  341F               	retlw	31
  6675  1858  341E               	retlw	30
  6676  1859  341F               	retlw	31
  6677  185A  341E               	retlw	30
  6678  185B  341F               	retlw	31
  6679  185C  341F               	retlw	31
  6680  185D  341E               	retlw	30
  6681  185E  341F               	retlw	31
  6682  185F  341E               	retlw	30
  6683  1860  341F               	retlw	31
  6684  1861                     __end_of_moninit:	
  6685                           
  6686                           	psect	stringtext4
  6687  1861                     __pstringtext4:	
  6688  1861                     _dpowers:	
  6689  1861  3401               	retlw	1
  6690  1862  3400               	retlw	0
  6691  1863  340A               	retlw	10
  6692  1864  3400               	retlw	0
  6693  1865  3464               	retlw	100
  6694  1866  3400               	retlw	0
  6695  1867  34E8               	retlw	232
  6696  1868  3403               	retlw	3
  6697  1869  3410               	retlw	16
  6698  186A  3427               	retlw	39
  6699  186B                     __end_of_dpowers:	
  6700                           
  6701                           	psect	stringtext5
  6702  0370                     __pstringtext5:	
  6703  0370                     _emptyArray:	
  6704  0370  3400               	retlw	0
  6705  0371  3400               	retlw	0
  6706  0372  3400               	retlw	0
  6707  0373  3400               	retlw	0
  6708  0374  3400               	retlw	0
  6709  0375  3400               	retlw	0
  6710  0376  3400               	retlw	0
  6711  0377  3400               	retlw	0
  6712  0378  3400               	retlw	0
  6713  0379  3400               	retlw	0
  6714  037A  3400               	retlw	0
  6715  037B  3400               	retlw	0
  6716  037C  3400               	retlw	0
  6717  037D  3400               	retlw	0
  6718  037E  3400               	retlw	0
  6719  037F  3400               	retlw	0
  6720  0380  3400               	retlw	0
  6721  0381  3400               	retlw	0
  6722  0382  3400               	retlw	0
  6723  0383  3400               	retlw	0
  6724  0384  3400               	retlw	0
  6725  0385  3400               	retlw	0
  6726  0386  3400               	retlw	0
  6727  0387  3400               	retlw	0
  6728  0388  3400               	retlw	0
  6729  0389  3400               	retlw	0
  6730  038A  3400               	retlw	0
  6731  038B  3400               	retlw	0
  6732  038C  3400               	retlw	0
  6733  038D  3400               	retlw	0
  6734  038E  3400               	retlw	0
  6735  038F  3400               	retlw	0
  6736  0390  3400               	retlw	0
  6737  0391  3400               	retlw	0
  6738  0392  3400               	retlw	0
  6739  0393  3400               	retlw	0
  6740  0394  3400               	retlw	0
  6741  0395  3400               	retlw	0
  6742  0396  3400               	retlw	0
  6743  0397  3400               	retlw	0
  6744  0398  3400               	retlw	0
  6745  0399  3400               	retlw	0
  6746  039A  3400               	retlw	0
  6747  039B  3400               	retlw	0
  6748  039C  3400               	retlw	0
  6749  039D  3400               	retlw	0
  6750  039E  3400               	retlw	0
  6751  039F  3400               	retlw	0
  6752  03A0  3400               	retlw	0
  6753  03A1  3400               	retlw	0
  6754  03A2  3400               	retlw	0
  6755  03A3  3400               	retlw	0
  6756  03A4  3400               	retlw	0
  6757  03A5  3400               	retlw	0
  6758  03A6  3400               	retlw	0
  6759  03A7  3400               	retlw	0
  6760  03A8  3400               	retlw	0
  6761  03A9  3400               	retlw	0
  6762  03AA  3400               	retlw	0
  6763  03AB  3400               	retlw	0
  6764  03AC  3400               	retlw	0
  6765  03AD  3400               	retlw	0
  6766  03AE  3400               	retlw	0
  6767  03AF  3400               	retlw	0
  6768  03B0  3400               	retlw	0
  6769  03B1  3400               	retlw	0
  6770  03B2  3400               	retlw	0
  6771  03B3  3400               	retlw	0
  6772  03B4  3400               	retlw	0
  6773  03B5  3400               	retlw	0
  6774  03B6  3400               	retlw	0
  6775  03B7  3400               	retlw	0
  6776  03B8  3400               	retlw	0
  6777  03B9  3400               	retlw	0
  6778  03BA  3400               	retlw	0
  6779  03BB  3400               	retlw	0
  6780  03BC  3400               	retlw	0
  6781  03BD  3400               	retlw	0
  6782  03BE  3400               	retlw	0
  6783  03BF  3400               	retlw	0
  6784  03C0  3400               	retlw	0
  6785  03C1  3400               	retlw	0
  6786  03C2  3400               	retlw	0
  6787  03C3  3400               	retlw	0
  6788  03C4  3400               	retlw	0
  6789  03C5  3400               	retlw	0
  6790  03C6  3400               	retlw	0
  6791  03C7  3400               	retlw	0
  6792  03C8  3400               	retlw	0
  6793  03C9  3400               	retlw	0
  6794  03CA  3400               	retlw	0
  6795  03CB  3400               	retlw	0
  6796  03CC  3400               	retlw	0
  6797  03CD  3400               	retlw	0
  6798  03CE  3400               	retlw	0
  6799  03CF  3400               	retlw	0
  6800  03D0  3400               	retlw	0
  6801  03D1  3400               	retlw	0
  6802  03D2  3400               	retlw	0
  6803  03D3  3400               	retlw	0
  6804  03D4  3400               	retlw	0
  6805  03D5  3400               	retlw	0
  6806  03D6  3400               	retlw	0
  6807  03D7  3400               	retlw	0
  6808  03D8  3400               	retlw	0
  6809  03D9  3400               	retlw	0
  6810  03DA  3400               	retlw	0
  6811  03DB  3400               	retlw	0
  6812  03DC  3400               	retlw	0
  6813  03DD  3400               	retlw	0
  6814  03DE  3400               	retlw	0
  6815  03DF  3400               	retlw	0
  6816  03E0  3400               	retlw	0
  6817  03E1  3400               	retlw	0
  6818  03E2  3400               	retlw	0
  6819  03E3  3400               	retlw	0
  6820  03E4  3400               	retlw	0
  6821  03E5  3400               	retlw	0
  6822  03E6  3400               	retlw	0
  6823  03E7  3400               	retlw	0
  6824  03E8  3400               	retlw	0
  6825  03E9  3400               	retlw	0
  6826  03EA  3400               	retlw	0
  6827  03EB  3400               	retlw	0
  6828  03EC  3400               	retlw	0
  6829  03ED  3400               	retlw	0
  6830  03EE  3400               	retlw	0
  6831  03EF  3400               	retlw	0
  6832  03F0  3400               	retlw	0
  6833  03F1  3400               	retlw	0
  6834  03F2  3400               	retlw	0
  6835  03F3  3400               	retlw	0
  6836  03F4  3400               	retlw	0
  6837  03F5  3400               	retlw	0
  6838  03F6  3400               	retlw	0
  6839  03F7  3400               	retlw	0
  6840  03F8  3400               	retlw	0
  6841  03F9  3400               	retlw	0
  6842  03FA  3400               	retlw	0
  6843  03FB  3400               	retlw	0
  6844  03FC  3400               	retlw	0
  6845  03FD  3400               	retlw	0
  6846  03FE  3400               	retlw	0
  6847  03FF  3400               	retlw	0
  6848  0400  3400               	retlw	0
  6849  0401  3400               	retlw	0
  6850  0402  3400               	retlw	0
  6851  0403  3400               	retlw	0
  6852  0404  3400               	retlw	0
  6853  0405  3400               	retlw	0
  6854  0406  3400               	retlw	0
  6855  0407  3400               	retlw	0
  6856  0408  3400               	retlw	0
  6857  0409  3400               	retlw	0
  6858  040A  3400               	retlw	0
  6859  040B  3400               	retlw	0
  6860  040C  3400               	retlw	0
  6861  040D  3400               	retlw	0
  6862  040E  3400               	retlw	0
  6863  040F  3400               	retlw	0
  6864  0410  3400               	retlw	0
  6865  0411  3400               	retlw	0
  6866  0412  3400               	retlw	0
  6867  0413  3400               	retlw	0
  6868  0414  3400               	retlw	0
  6869  0415  3400               	retlw	0
  6870  0416  3400               	retlw	0
  6871  0417  3400               	retlw	0
  6872  0418  3400               	retlw	0
  6873  0419  3400               	retlw	0
  6874  041A  3400               	retlw	0
  6875  041B  3400               	retlw	0
  6876  041C  3400               	retlw	0
  6877  041D  3400               	retlw	0
  6878  041E  3400               	retlw	0
  6879  041F  3400               	retlw	0
  6880  0420  3400               	retlw	0
  6881  0421  3400               	retlw	0
  6882  0422  3400               	retlw	0
  6883  0423  3400               	retlw	0
  6884  0424  3400               	retlw	0
  6885  0425  3400               	retlw	0
  6886  0426  3400               	retlw	0
  6887  0427  3400               	retlw	0
  6888  0428  3400               	retlw	0
  6889  0429  3400               	retlw	0
  6890  042A  3400               	retlw	0
  6891  042B  3400               	retlw	0
  6892  042C  3400               	retlw	0
  6893  042D  3400               	retlw	0
  6894  042E  3400               	retlw	0
  6895  042F  3400               	retlw	0
  6896  0430  3400               	retlw	0
  6897  0431  3400               	retlw	0
  6898  0432  3400               	retlw	0
  6899  0433  3400               	retlw	0
  6900  0434  3400               	retlw	0
  6901  0435  3400               	retlw	0
  6902  0436  3400               	retlw	0
  6903  0437  3400               	retlw	0
  6904  0438  3400               	retlw	0
  6905  0439  3400               	retlw	0
  6906  043A  3400               	retlw	0
  6907  043B  3400               	retlw	0
  6908  043C  3400               	retlw	0
  6909  043D  3400               	retlw	0
  6910  043E  3400               	retlw	0
  6911  043F  3400               	retlw	0
  6912  0440  3400               	retlw	0
  6913  0441  3400               	retlw	0
  6914  0442  3400               	retlw	0
  6915  0443  3400               	retlw	0
  6916  0444  3400               	retlw	0
  6917  0445  3400               	retlw	0
  6918  0446  3400               	retlw	0
  6919  0447  3400               	retlw	0
  6920  0448  3400               	retlw	0
  6921  0449  3400               	retlw	0
  6922  044A  3400               	retlw	0
  6923  044B  3400               	retlw	0
  6924  044C  3400               	retlw	0
  6925  044D  3400               	retlw	0
  6926  044E  3400               	retlw	0
  6927  044F  3400               	retlw	0
  6928  0450  3400               	retlw	0
  6929  0451  3400               	retlw	0
  6930  0452  3400               	retlw	0
  6931  0453  3400               	retlw	0
  6932  0454  3400               	retlw	0
  6933  0455  3400               	retlw	0
  6934  0456  3400               	retlw	0
  6935  0457  3400               	retlw	0
  6936  0458  3400               	retlw	0
  6937  0459  3400               	retlw	0
  6938  045A  3400               	retlw	0
  6939  045B  3400               	retlw	0
  6940  045C  3400               	retlw	0
  6941  045D  3400               	retlw	0
  6942  045E  3400               	retlw	0
  6943  045F  3400               	retlw	0
  6944  0460  3400               	retlw	0
  6945  0461  3400               	retlw	0
  6946  0462  3400               	retlw	0
  6947  0463  3400               	retlw	0
  6948  0464  3400               	retlw	0
  6949  0465  3400               	retlw	0
  6950  0466  3400               	retlw	0
  6951  0467  3400               	retlw	0
  6952  0468  3400               	retlw	0
  6953  0469  3400               	retlw	0
  6954  046A  3400               	retlw	0
  6955  046B  3400               	retlw	0
  6956  046C  3400               	retlw	0
  6957  046D  3400               	retlw	0
  6958  046E  3400               	retlw	0
  6959  046F  3400               	retlw	0
  6960  0470  3400               	retlw	0
  6961  0471  3400               	retlw	0
  6962  0472  3400               	retlw	0
  6963  0473  3400               	retlw	0
  6964  0474  3400               	retlw	0
  6965  0475  3400               	retlw	0
  6966  0476  3400               	retlw	0
  6967  0477  3400               	retlw	0
  6968  0478  3400               	retlw	0
  6969  0479  3400               	retlw	0
  6970  047A  3400               	retlw	0
  6971  047B  3400               	retlw	0
  6972  047C  3400               	retlw	0
  6973  047D  3400               	retlw	0
  6974  047E  3400               	retlw	0
  6975  047F  3400               	retlw	0
  6976  0480  3400               	retlw	0
  6977  0481  3400               	retlw	0
  6978  0482  3400               	retlw	0
  6979  0483  3400               	retlw	0
  6980  0484  3400               	retlw	0
  6981  0485  3400               	retlw	0
  6982  0486  3400               	retlw	0
  6983  0487  3400               	retlw	0
  6984  0488  3400               	retlw	0
  6985  0489  3400               	retlw	0
  6986  048A  3400               	retlw	0
  6987  048B  3400               	retlw	0
  6988  048C  3400               	retlw	0
  6989  048D  3400               	retlw	0
  6990  048E  3400               	retlw	0
  6991  048F  3400               	retlw	0
  6992  0490  3400               	retlw	0
  6993  0491  3400               	retlw	0
  6994  0492  3400               	retlw	0
  6995  0493  3400               	retlw	0
  6996  0494  3400               	retlw	0
  6997  0495  3400               	retlw	0
  6998  0496  3400               	retlw	0
  6999  0497  3400               	retlw	0
  7000  0498  3400               	retlw	0
  7001  0499  3400               	retlw	0
  7002  049A  3400               	retlw	0
  7003  049B  3400               	retlw	0
  7004  049C  3400               	retlw	0
  7005  049D  3400               	retlw	0
  7006  049E  3400               	retlw	0
  7007  049F  3400               	retlw	0
  7008  04A0  3400               	retlw	0
  7009  04A1  3400               	retlw	0
  7010  04A2  3400               	retlw	0
  7011  04A3  3400               	retlw	0
  7012  04A4  3400               	retlw	0
  7013  04A5  3400               	retlw	0
  7014  04A6  3400               	retlw	0
  7015  04A7  3400               	retlw	0
  7016  04A8  3400               	retlw	0
  7017  04A9  3400               	retlw	0
  7018  04AA  3400               	retlw	0
  7019  04AB  3400               	retlw	0
  7020  04AC  3400               	retlw	0
  7021  04AD  3400               	retlw	0
  7022  04AE  3400               	retlw	0
  7023  04AF  3400               	retlw	0
  7024  04B0  3400               	retlw	0
  7025  04B1  3400               	retlw	0
  7026  04B2  3400               	retlw	0
  7027  04B3  3400               	retlw	0
  7028  04B4  3400               	retlw	0
  7029  04B5  3400               	retlw	0
  7030  04B6  3400               	retlw	0
  7031  04B7  3400               	retlw	0
  7032  04B8  3400               	retlw	0
  7033  04B9  3400               	retlw	0
  7034  04BA  3400               	retlw	0
  7035  04BB  3400               	retlw	0
  7036  04BC  3400               	retlw	0
  7037  04BD  3400               	retlw	0
  7038  04BE  3400               	retlw	0
  7039  04BF  3400               	retlw	0
  7040  04C0  3400               	retlw	0
  7041  04C1  3400               	retlw	0
  7042  04C2  3400               	retlw	0
  7043  04C3  3400               	retlw	0
  7044  04C4  3400               	retlw	0
  7045  04C5  3400               	retlw	0
  7046  04C6  3400               	retlw	0
  7047  04C7  3400               	retlw	0
  7048  04C8  3400               	retlw	0
  7049  04C9  3400               	retlw	0
  7050  04CA  3400               	retlw	0
  7051  04CB  3400               	retlw	0
  7052  04CC  3400               	retlw	0
  7053  04CD  3400               	retlw	0
  7054  04CE  3400               	retlw	0
  7055  04CF  3400               	retlw	0
  7056  04D0  3400               	retlw	0
  7057  04D1  3400               	retlw	0
  7058  04D2  3400               	retlw	0
  7059  04D3  3400               	retlw	0
  7060  04D4  3400               	retlw	0
  7061  04D5  3400               	retlw	0
  7062  04D6  3400               	retlw	0
  7063  04D7  3400               	retlw	0
  7064  04D8  3400               	retlw	0
  7065  04D9  3400               	retlw	0
  7066  04DA  3400               	retlw	0
  7067  04DB  3400               	retlw	0
  7068  04DC  3400               	retlw	0
  7069  04DD  3400               	retlw	0
  7070  04DE  3400               	retlw	0
  7071  04DF  3400               	retlw	0
  7072  04E0  3400               	retlw	0
  7073  04E1  3400               	retlw	0
  7074  04E2  3400               	retlw	0
  7075  04E3  3400               	retlw	0
  7076  04E4  3400               	retlw	0
  7077  04E5  3400               	retlw	0
  7078  04E6  3400               	retlw	0
  7079  04E7  3400               	retlw	0
  7080  04E8  3400               	retlw	0
  7081  04E9  3400               	retlw	0
  7082  04EA  3400               	retlw	0
  7083  04EB  3400               	retlw	0
  7084  04EC  3400               	retlw	0
  7085  04ED  3400               	retlw	0
  7086  04EE  3400               	retlw	0
  7087  04EF  3400               	retlw	0
  7088  04F0  3400               	retlw	0
  7089  04F1  3400               	retlw	0
  7090  04F2  3400               	retlw	0
  7091  04F3  3400               	retlw	0
  7092  04F4  3400               	retlw	0
  7093  04F5  3400               	retlw	0
  7094  04F6  3400               	retlw	0
  7095  04F7  3400               	retlw	0
  7096  04F8  3400               	retlw	0
  7097  04F9  3400               	retlw	0
  7098  04FA  3400               	retlw	0
  7099  04FB  3400               	retlw	0
  7100  04FC  3400               	retlw	0
  7101  04FD  3400               	retlw	0
  7102  04FE  3400               	retlw	0
  7103  04FF  3400               	retlw	0
  7104  0500  3400               	retlw	0
  7105  0501  3400               	retlw	0
  7106  0502  3400               	retlw	0
  7107  0503  3400               	retlw	0
  7108  0504  3400               	retlw	0
  7109  0505  3400               	retlw	0
  7110  0506  3400               	retlw	0
  7111  0507  3400               	retlw	0
  7112  0508  3400               	retlw	0
  7113  0509  3400               	retlw	0
  7114  050A  3400               	retlw	0
  7115  050B  3400               	retlw	0
  7116  050C  3400               	retlw	0
  7117  050D  3400               	retlw	0
  7118  050E  3400               	retlw	0
  7119  050F  3400               	retlw	0
  7120  0510  3400               	retlw	0
  7121  0511  3400               	retlw	0
  7122  0512  3400               	retlw	0
  7123  0513  3400               	retlw	0
  7124  0514  3400               	retlw	0
  7125  0515  3400               	retlw	0
  7126  0516  3400               	retlw	0
  7127  0517  3400               	retlw	0
  7128  0518  3400               	retlw	0
  7129  0519  3400               	retlw	0
  7130  051A  3400               	retlw	0
  7131  051B  3400               	retlw	0
  7132  051C  3400               	retlw	0
  7133  051D  3400               	retlw	0
  7134  051E  3400               	retlw	0
  7135  051F  3400               	retlw	0
  7136  0520  3400               	retlw	0
  7137  0521  3400               	retlw	0
  7138  0522  3400               	retlw	0
  7139  0523  3400               	retlw	0
  7140  0524  3400               	retlw	0
  7141  0525  3400               	retlw	0
  7142  0526  3400               	retlw	0
  7143  0527  3400               	retlw	0
  7144  0528  3400               	retlw	0
  7145  0529  3400               	retlw	0
  7146  052A  3400               	retlw	0
  7147  052B  3400               	retlw	0
  7148  052C  3400               	retlw	0
  7149  052D  3400               	retlw	0
  7150  052E  3400               	retlw	0
  7151  052F  3400               	retlw	0
  7152  0530  3400               	retlw	0
  7153  0531  3400               	retlw	0
  7154  0532  3400               	retlw	0
  7155  0533  3400               	retlw	0
  7156  0534  3400               	retlw	0
  7157  0535  3400               	retlw	0
  7158  0536  3400               	retlw	0
  7159  0537  3400               	retlw	0
  7160  0538  3400               	retlw	0
  7161  0539  3400               	retlw	0
  7162  053A  3400               	retlw	0
  7163  053B  3400               	retlw	0
  7164  053C  3400               	retlw	0
  7165  053D  3400               	retlw	0
  7166  053E  3400               	retlw	0
  7167  053F  3400               	retlw	0
  7168  0540  3400               	retlw	0
  7169  0541  3400               	retlw	0
  7170  0542  3400               	retlw	0
  7171  0543  3400               	retlw	0
  7172  0544  3400               	retlw	0
  7173  0545  3400               	retlw	0
  7174  0546  3400               	retlw	0
  7175  0547  3400               	retlw	0
  7176  0548  3400               	retlw	0
  7177  0549  3400               	retlw	0
  7178  054A  3400               	retlw	0
  7179  054B                     __end_of_emptyArray:	
  7180  0019                     _LATDbits	set	25
  7181  0018                     _LATCbits	set	24
  7182  0016                     _LATAbits	set	22
  7183  000B                     _INTCONbits	set	11
  7184  0014                     _TRISD	set	20
  7185  0013                     _TRISC	set	19
  7186  0012                     _TRISB	set	18
  7187  0011                     _TRISA	set	17
  7188  0015                     _TRISE	set	21
  7189  0018                     _LATC	set	24
  7190  0017                     _LATB	set	23
  7191  0016                     _LATA	set	22
  7192  0019                     _LATD	set	25
  7193  001A                     _LATE	set	26
  7194  0003                     _STATUS	set	3
  7195  0199                     _SSP2STATbits	set	409
  7196  0196                     _SSP2BUF	set	406
  7197  019A                     _SSP2CON1bits	set	410
  7198  0197                     _SSP2ADD	set	407
  7199  019A                     _SSP2CON1	set	410
  7200  0199                     _SSP2STAT	set	409
  7201  018F                     _SSP1STATbits	set	399
  7202  018E                     _SSP1MSK	set	398
  7203  018C                     _SSP1BUF	set	396
  7204  0191                     _SSP1CON2bits	set	401
  7205  018D                     _SSP1ADD	set	397
  7206  0191                     _SSP1CON2	set	401
  7207  0190                     _SSP1CON1	set	400
  7208  018F                     _SSP1STAT	set	399
  7209  0190                     _SSP1CON1bits	set	400
  7210  070F                     _PIR3bits	set	1807
  7211  0719                     _PIE3bits	set	1817
  7212  079B                     _PMD5	set	1947
  7213  079A                     _PMD4	set	1946
  7214  0799                     _PMD3	set	1945
  7215  0798                     _PMD2	set	1944
  7216  0797                     _PMD1	set	1943
  7217  0796                     _PMD0	set	1942
  7218  0892                     _OSCTUNE	set	2194
  7219  0893                     _OSCFRQ	set	2195
  7220  0891                     _OSCEN	set	2193
  7221  088F                     _OSCCON3	set	2191
  7222  088D                     _OSCCON1	set	2189
  7223  0EC9                     _SSP2DATPPSbits	set	3785
  7224  0EC8                     _SSP2CLKPPSbits	set	3784
  7225  0EC6                     _SSP1DATPPSbits	set	3782
  7226  0EC5                     _SSP1CLKPPSbits	set	3781
  7227  0F1B                     _RB3PPS	set	3867
  7228  0F24                     _RC4PPS	set	3876
  7229  0F23                     _RC3PPS	set	3875
  7230  0F19                     _RB1PPS	set	3865
  7231  0F5B                     _ODCOND	set	3931
  7232  0F50                     _ODCONC	set	3920
  7233  0F45                     _ODCONB	set	3909
  7234  0F3A                     _ODCONA	set	3898
  7235  0F66                     _ODCONE	set	3942
  7236  0F4F                     _WPUC	set	3919
  7237  0F39                     _WPUA	set	3897
  7238  0F44                     _WPUB	set	3908
  7239  0F65                     _WPUE	set	3941
  7240  0F5A                     _WPUD	set	3930
  7241  0F38                     _ANSELA	set	3896
  7242  0F64                     _ANSELE	set	3940
  7243  0F43                     _ANSELB	set	3907
  7244  0F4E                     _ANSELC	set	3918
  7245  0F59                     _ANSELD	set	3929
  7246  054B                     STR_4:	
  7247  054B  344A               	retlw	74	;'J'
  7248  054C  3461               	retlw	97	;'a'
  7249  054D  346E               	retlw	110	;'n'
  7250  054E  3446               	retlw	70	;'F'
  7251  054F  3465               	retlw	101	;'e'
  7252  0550  3462               	retlw	98	;'b'
  7253  0551  344D               	retlw	77	;'M'
  7254  0552  3461               	retlw	97	;'a'
  7255  0553  3472               	retlw	114	;'r'
  7256  0554  3441               	retlw	65	;'A'
  7257  0555  3470               	retlw	112	;'p'
  7258  0556  3472               	retlw	114	;'r'
  7259  0557  344D               	retlw	77	;'M'
  7260  0558  3461               	retlw	97	;'a'
  7261  0559  3479               	retlw	121	;'y'
  7262  055A  344A               	retlw	74	;'J'
  7263  055B  3475               	retlw	117	;'u'
  7264  055C  346E               	retlw	110	;'n'
  7265  055D  344A               	retlw	74	;'J'
  7266  055E  3475               	retlw	117	;'u'
  7267  055F  346C               	retlw	108	;'l'
  7268  0560  3441               	retlw	65	;'A'
  7269  0561  3475               	retlw	117	;'u'
  7270  0562  3467               	retlw	103	;'g'
  7271  0563  3453               	retlw	83	;'S'
  7272  0564  3465               	retlw	101	;'e'
  7273  0565  3470               	retlw	112	;'p'
  7274  0566  344F               	retlw	79	;'O'
  7275  0567  3463               	retlw	99	;'c'
  7276  0568  3474               	retlw	116	;'t'
  7277  0569  344E               	retlw	78	;'N'
  7278  056A  346F               	retlw	111	;'o'
  7279  056B  3476               	retlw	118	;'v'
  7280  056C  3444               	retlw	68	;'D'
  7281  056D  3465               	retlw	101	;'e'
  7282  056E  3463               	retlw	99	;'c'
  7283  056F  3400               	retlw	0
  7284                           
  7285                           	psect	stringtext6
  7286  1820                     __pstringtext6:	
  7287  1820                     STR_1:	
  7288  1820  3425               	retlw	37	;'%'
  7289  1821  3430               	retlw	48	;'0'
  7290  1822  3434               	retlw	52	;'4'
  7291  1823  3464               	retlw	100	;'d'
  7292  1824  342D               	retlw	45	;'-'
  7293  1825  3425               	retlw	37	;'%'
  7294  1826  3430               	retlw	48	;'0'
  7295  1827  3432               	retlw	50	;'2'
  7296  1828  3464               	retlw	100	;'d'
  7297  1829  342D               	retlw	45	;'-'
  7298  182A  3425               	retlw	37	;'%'
  7299  182B  3430               	retlw	48	;'0'
  7300  182C  3432               	retlw	50	;'2'
  7301  182D  3464               	retlw	100	;'d'
  7302  182E  3420               	retlw	32	;' '
  7303  182F  3425               	retlw	37	;'%'
  7304  1830  3430               	retlw	48	;'0'
  7305  1831  3432               	retlw	50	;'2'
  7306  1832  3464               	retlw	100	;'d'
  7307  1833  343A               	retlw	58	;':'
  7308  1834  3425               	retlw	37	;'%'
  7309  1835  3430               	retlw	48	;'0'
  7310  1836  3432               	retlw	50	;'2'
  7311  1837  3464               	retlw	100	;'d'
  7312  1838  343A               	retlw	58	;':'
  7313  1839  3425               	retlw	37	;'%'
  7314  183A  3430               	retlw	48	;'0'
  7315  183B  3432               	retlw	50	;'2'
  7316  183C  3464               	retlw	100	;'d'
  7317  183D  340A               	retlw	10
  7318  183E  3400               	retlw	0
  7319                           
  7320                           	psect	stringtext7
  7321  183F                     __pstringtext7:	
  7322  183F                     STR_3:	
  7323  183F  3453               	retlw	83	;'S'
  7324  1840  3475               	retlw	117	;'u'
  7325  1841  346E               	retlw	110	;'n'
  7326  1842  344D               	retlw	77	;'M'
  7327  1843  346F               	retlw	111	;'o'
  7328  1844  346E               	retlw	110	;'n'
  7329  1845  3454               	retlw	84	;'T'
  7330  1846  3475               	retlw	117	;'u'
  7331  1847  3465               	retlw	101	;'e'
  7332  1848  3457               	retlw	87	;'W'
  7333  1849  3465               	retlw	101	;'e'
  7334  184A  3464               	retlw	100	;'d'
  7335  184B  3454               	retlw	84	;'T'
  7336  184C  3468               	retlw	104	;'h'
  7337  184D  3475               	retlw	117	;'u'
  7338  184E  3446               	retlw	70	;'F'
  7339  184F  3472               	retlw	114	;'r'
  7340  1850  3469               	retlw	105	;'i'
  7341  1851  3453               	retlw	83	;'S'
  7342  1852  3461               	retlw	97	;'a'
  7343  1853  3474               	retlw	116	;'t'
  7344  1854  3400               	retlw	0
  7345                           
  7346                           	psect	stringtext8
  7347  0000                     __pstringtext8:	
  7348  1820                     
  7349                           ; #config settings
  7350  0000                     
  7351                           	psect	cinit
  7352  0024                     start_initialization:	
  7353  0024                     __initialization:		;BIGRAM
  7354                           
  7355                           ; Initialize objects allocated to BIGRAM
  7356  0024  3070               	movlw	low __pidataBIGRAM
  7357  0025  0084               	movwf	4
  7358  0026  3085               	movlw	(high __pidataBIGRAM)| (0+128)
  7359  0027  0085               	movwf	5
  7360  0028  30B1               	movlw	low (0+8625)
  7361  0029  0086               	movwf	6
  7362  002A  3021               	movlw	high (0+8625)
  7363  002B  0087               	movwf	7
  7364  002C  3001               	movlw	1
  7365  002D  00FF               	movwf	btemp+1
  7366  002E  30DB               	movlw	219
  7367  002F  319E  26B9  3180   	fcall	init_ram
  7368                           
  7369                           ; Initialize objects allocated to BANK1
  7370  0032  30C5               	movlw	low __pidataBANK1
  7371  0033  0084               	movwf	4
  7372  0034  309E               	movlw	(high __pidataBANK1)| (0+128)
  7373  0035  0085               	movwf	5
  7374  0036  30E4               	movlw	low __pdataBANK1
  7375  0037  0086               	movwf	6
  7376  0038  3000               	movlw	high __pdataBANK1
  7377  0039  0087               	movwf	7
  7378  003A  3000               	movlw	0
  7379  003B  00FF               	movwf	btemp+1
  7380  003C  300C               	movlw	12
  7381  003D  319E  26B9  3180   	fcall	init_ram
  7382                           
  7383                           ; Clear objects allocated to BIGRAM
  7384  0040  308C               	movlw	low (0+9100)
  7385  0041  0084               	movwf	4
  7386  0042  3023               	movlw	high (0+9100)
  7387  0043  0085               	movwf	5
  7388  0044  3064               	movlw	100
  7389  0045  00FE               	movwf	btemp
  7390  0046  3000               	movlw	0
  7391  0047  00FF               	movwf	btemp+1
  7392  0048  319E  26AD  3180   	fcall	clear_ram0
  7393                           
  7394                           ; Clear objects allocated to COMMON
  7395  004B  01FA               	clrf	__pbssCOMMON& (0+127)
  7396  004C  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7397  004D  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  7398  004E  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  7399                           
  7400                           ; Clear objects allocated to BANK0
  7401  004F  01EA               	clrf	__pbssBANK0& (0+127)
  7402  0050  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  7403  0051  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  7404  0052  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  7405  0053  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  7406  0054  01EF               	clrf	(__pbssBANK0+5)& (0+127)
  7407                           
  7408                           ; Clear objects allocated to BANK1
  7409  0055  30C7               	movlw	low __pbssBANK1
  7410  0056  0084               	movwf	4
  7411  0057  3000               	movlw	high __pbssBANK1
  7412  0058  0085               	movwf	5
  7413  0059  301D               	movlw	29
  7414  005A  00FE               	movwf	btemp
  7415  005B  3000               	movlw	0
  7416  005C  00FF               	movwf	btemp+1
  7417  005D  319E  26AD  3180   	fcall	clear_ram0
  7418                           
  7419                           ; Clear objects allocated to BANK2
  7420  0060  3020               	movlw	low __pbssBANK2
  7421  0061  0084               	movwf	4
  7422  0062  3001               	movlw	high __pbssBANK2
  7423  0063  0085               	movwf	5
  7424  0064  303B               	movlw	59
  7425  0065  00FE               	movwf	btemp
  7426  0066  3000               	movlw	0
  7427  0067  00FF               	movwf	btemp+1
  7428  0068  319E  26AD         	fcall	clear_ram0
  7429  006A                     end_of_initialization:	
  7430                           ;End of C runtime variable initialization code
  7431                           
  7432  006A                     __end_of__initialization:	
  7433  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7434  006B  0020               	movlb	0
  7435  006C  318C  2C9D         	ljmp	_main	;jump to C main() function
  7436                           
  7437                           	psect	bssCOMMON
  7438  007A                     __pbssCOMMON:	
  7439  007A                     _i2c1_driver_i2cISR:	
  7440  007A                     	ds	2
  7441  007C                     _i2c1_driver_busCollisionISR:	
  7442  007C                     	ds	2
  7443                           
  7444                           	psect	bssBANK0
  7445  006A                     __pbssBANK0:	
  7446  006A                     _timezone:	
  7447  006A                     	ds	4
  7448  006E                     _time_zone:	
  7449  006E                     	ds	2
  7450                           
  7451                           	psect	bssBANK1
  7452  00C7                     __pbssBANK1:	
  7453  00C7                     _i2c_status:	
  7454  00C7                     	ds	29
  7455                           
  7456                           	psect	dataBANK1
  7457  00E4                     __pdataBANK1:	
  7458  00E4                     main@F15397:	
  7459  00E4                     	ds	12
  7460                           
  7461                           	psect	bssBANK2
  7462  0120                     __pbssBANK2:	
  7463  0120                     _dateTime:	
  7464  0120                     	ds	14
  7465  012E                     asctime@buf:	
  7466  012E                     	ds	27
  7467  0149                     gmtime@tim:	
  7468  0149                     	ds	18
  7469                           
  7470                           	psect	inittext
  7471  1EB9                     init_ram:	
  7472  1EB9  00FE               	movwf	126
  7473  1EBA                     initloop:	
  7474  1EBA  0012               	moviw fsr0++
  7475  1EBB  001E               	movwi fsr1++
  7476  1EBC  3001               	movlw	1
  7477  1EBD  02FE               	subwf	126,f
  7478  1EBE  3000               	movlw	0
  7479  1EBF  3BFF               	subwfb	127,f
  7480  1EC0  087F               	movf	127,w
  7481  1EC1  047E               	iorwf	126,w
  7482  1EC2  1903               	btfsc	3,2
  7483  1EC3  3400               	retlw	0
  7484  1EC4  2EBA               	goto	initloop
  7485                           
  7486                           	psect	clrtext
  7487  1EAD                     clear_ram0:	
  7488                           ;	Called with FSR0 containing the base address, and
  7489                           ;	btemp/btemp+1 has the size to clear
  7490                           
  7491  1EAD  0064               	clrwdt	;clear the watchdog before getting into this loop
  7492  1EAE                     clrloop0:	
  7493  1EAE  0180               	clrf	0	;clear RAM location pointed to by FSR
  7494  1EAF  3101               	addfsr 0,1
  7495  1EB0  3001               	movlw	1
  7496  1EB1  02FE               	subwf	126,f
  7497  1EB2  3000               	movlw	0
  7498  1EB3  3BFF               	subwfb	127,f
  7499  1EB4  087F               	movf	127,w
  7500  1EB5  047E               	iorwf	126,w
  7501  1EB6  1903               	btfsc	3,2
  7502  1EB7  3400               	retlw	0	;all done for this memory range, return
  7503  1EB8  2EAE               	goto	clrloop0	;have we reached the end yet?
  7504                           
  7505                           	psect	cstackBANK1
  7506  00A0                     __pcstackBANK1:	
  7507  00A0                     rtc6_GetTime@tm_t:	
  7508                           
  7509                           ; 18 bytes @ 0x0
  7510  00A0                     	ds	18
  7511  00B2                     main@timeStr:	
  7512  00B2                     main@welcomeMsg:	
  7513                           ; 0 bytes @ 0x12
  7514                           
  7515                           
  7516                           ; 12 bytes @ 0x12
  7517  00B2                     	ds	12
  7518  00BE                     main@setTime:	
  7519                           
  7520                           ; 4 bytes @ 0x1E
  7521  00BE                     	ds	4
  7522  00C2                     main@tm_t:	
  7523                           
  7524                           ; 1 bytes @ 0x22
  7525  00C2                     	ds	1
  7526  00C3                     main@getTime:	
  7527                           
  7528                           ; 4 bytes @ 0x23
  7529  00C3                     	ds	4
  7530                           
  7531                           	psect	cstackCOMMON
  7532  0070                     __pcstackCOMMON:	
  7533  0070                     ?_isdigit:	
  7534  0070                     ?_mssp1_IRQisEnabled:	
  7535                           ; 1 bit 
  7536                           
  7537  0070                     ?_i2c1_driver_open:	
  7538                           ; 1 bit 
  7539                           
  7540  0070                     ?_i2c1_driver_isNACK:	
  7541                           ; 1 bit 
  7542                           
  7543  0070                     ?i1_i2c1_driver_isNACK:	
  7544                           ; 1 bit 
  7545                           
  7546  0070                     ?_i2c_busCollisionISR:	
  7547                           ; 1 bit 
  7548                           
  7549  0070                     ??_i2c_busCollisionISR:	
  7550                           ; 1 bytes @ 0x0
  7551                           
  7552  0070                     ?_i2c_ISR:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555  0070                     ?_i2c_poller:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558  0070                     ?_localtime:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561  0070                     ?_PMD_Initialize:	
  7562                           ; 1 bytes @ 0x0
  7563                           
  7564  0070                     ?_OSCILLATOR_Initialize:	
  7565                           ; 1 bytes @ 0x0
  7566                           
  7567  0070                     ?_SPI2_Initialize:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570  0070                     ?_OLED_Initialize:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573  0070                     ?_gmtime:	
  7574                           ; 1 bytes @ 0x0
  7575                           
  7576  0070                     ?_mssp1_disableIRQ:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579  0070                     ?_mssp1_clearIRQ:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582  0070                     ?_mssp1_setIRQ:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585  0070                     ?_mssp1_waitForEvent:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  0070                     ?_i2c1_driver_resetBus:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  0070                     ?_i2c1_driver_start:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  0070                     ?_i2c1_driver_restart:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  0070                     ?_i2c1_driver_stop:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  0070                     ?_i2c1_driver_startRX:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  0070                     ?_i2c1_driver_getRXData:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  0070                     ?_i2c1_driver_TXData:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  0070                     ?_i2c1_driver_sendACK:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  0070                     ?_i2c1_driver_sendNACK:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  0070                     ?_i2c1_driver_clearBusCollision:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  0070                     ??_i2c1_driver_clearBusCollision:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  0070                     ?_i2c_open:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624  0070                     ?_i2c_close:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627  0070                     ?_i2c_masterOperation:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630  0070                     ?_i2c_masterWrite:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633  0070                     ?_do_I2C_RESET:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636  0070                     ?_do_I2C_IDLE:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645  0070                     ?_do_I2C_SEND_RESTART:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648  0070                     ?_do_I2C_SEND_STOP:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651  0070                     ?_do_I2C_SEND_ADR_READ:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7655                           ; 1 bytes @ 0x0
  7656                           
  7657  0070                     ?_do_I2C_RCEN:	
  7658                           ; 1 bytes @ 0x0
  7659                           
  7660  0070                     ?_do_I2C_DO_ACK:	
  7661                           ; 1 bytes @ 0x0
  7662                           
  7663  0070                     ?_do_I2C_DO_NACK_STOP:	
  7664                           ; 1 bytes @ 0x0
  7665                           
  7666  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672  0070                     ?_do_I2C_TX:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675  0070                     ?_do_I2C_RX:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678  0070                     ?_do_I2C_TX_EMPTY:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681  0070                     ?_rtcc_read:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684  0070                     ?_rtc6_Initialize:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687  0070                     ?_PIN_MANAGER_Initialize:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690  0070                     ?_INTERRUPT_InterruptManager:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693  0070                     ?_SYSTEM_Initialize:	
  7694                           ; 1 bytes @ 0x0
  7695                           
  7696  0070                     ?_main:	
  7697                           ; 1 bytes @ 0x0
  7698                           
  7699  0070                     ?_SPI2_Exchange8bit:	
  7700                           ; 1 bytes @ 0x0
  7701                           
  7702  0070                     ?_OLED_Command:	
  7703                           ; 1 bytes @ 0x0
  7704                           
  7705  0070                     ?_OLED_Data:	
  7706                           ; 1 bytes @ 0x0
  7707                           
  7708  0070                     ?_OLED_SetRow:	
  7709                           ; 1 bytes @ 0x0
  7710                           
  7711  0070                     ?_OLED_SetColumn:	
  7712                           ; 1 bytes @ 0x0
  7713                           
  7714  0070                     ?_OLED_Clear:	
  7715                           ; 1 bytes @ 0x0
  7716                           
  7717  0070                     ?i1_mssp1_clearIRQ:	
  7718                           ; 1 bytes @ 0x0
  7719                           
  7720  0070                     ??i1_mssp1_clearIRQ:	
  7721                           ; 1 bytes @ 0x0
  7722                           
  7723  0070                     ?i1_mssp1_setIRQ:	
  7724                           ; 1 bytes @ 0x0
  7725                           
  7726  0070                     ??i1_mssp1_setIRQ:	
  7727                           ; 1 bytes @ 0x0
  7728                           
  7729  0070                     ?i1_i2c1_driver_resetBus:	
  7730                           ; 1 bytes @ 0x0
  7731                           
  7732  0070                     ??i1_i2c1_driver_resetBus:	
  7733                           ; 1 bytes @ 0x0
  7734                           
  7735  0070                     ?i1_i2c1_driver_restart:	
  7736                           ; 1 bytes @ 0x0
  7737                           
  7738  0070                     ??i1_i2c1_driver_restart:	
  7739                           ; 1 bytes @ 0x0
  7740                           
  7741  0070                     ?i1_i2c1_driver_stop:	
  7742                           ; 1 bytes @ 0x0
  7743                           
  7744  0070                     ??i1_i2c1_driver_stop:	
  7745                           ; 1 bytes @ 0x0
  7746                           
  7747  0070                     ??i1_i2c1_driver_isNACK:	
  7748                           ; 1 bytes @ 0x0
  7749                           
  7750  0070                     ?i1_i2c1_driver_startRX:	
  7751                           ; 1 bytes @ 0x0
  7752                           
  7753  0070                     ??i1_i2c1_driver_startRX:	
  7754                           ; 1 bytes @ 0x0
  7755                           
  7756  0070                     ?i1_i2c1_driver_getRXData:	
  7757                           ; 1 bytes @ 0x0
  7758                           
  7759  0070                     ??i1_i2c1_driver_getRXData:	
  7760                           ; 1 bytes @ 0x0
  7761                           
  7762  0070                     ?i1_i2c1_driver_TXData:	
  7763                           ; 1 bytes @ 0x0
  7764                           
  7765  0070                     ??i1_i2c1_driver_TXData:	
  7766                           ; 1 bytes @ 0x0
  7767                           
  7768  0070                     ?i1_i2c1_driver_sendACK:	
  7769                           ; 1 bytes @ 0x0
  7770                           
  7771  0070                     ??i1_i2c1_driver_sendACK:	
  7772                           ; 1 bytes @ 0x0
  7773                           
  7774  0070                     ?i1_i2c1_driver_sendNACK:	
  7775                           ; 1 bytes @ 0x0
  7776                           
  7777  0070                     ??i1_i2c1_driver_sendNACK:	
  7778                           ; 1 bytes @ 0x0
  7779                           
  7780  0070                     ?i1_i2c_setBuffer:	
  7781                           ; 1 bytes @ 0x0
  7782                           
  7783  0070                     ?i1_do_I2C_RESET:	
  7784                           ; 1 bytes @ 0x0
  7785                           
  7786  0070                     ??i1_do_I2C_RESET:	
  7787                           ; 1 bytes @ 0x0
  7788                           
  7789  0070                     ?i1_do_I2C_IDLE:	
  7790                           ; 1 bytes @ 0x0
  7791                           
  7792  0070                     ??i1_do_I2C_IDLE:	
  7793                           ; 1 bytes @ 0x0
  7794                           
  7795  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7796                           ; 1 bytes @ 0x0
  7797                           
  7798  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7799                           ; 1 bytes @ 0x0
  7800                           
  7801  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7802                           ; 1 bytes @ 0x0
  7803                           
  7804  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7805                           ; 1 bytes @ 0x0
  7806                           
  7807  0070                     ?i1_do_I2C_SEND_RESTART:	
  7808                           ; 1 bytes @ 0x0
  7809                           
  7810  0070                     ??i1_do_I2C_SEND_RESTART:	
  7811                           ; 1 bytes @ 0x0
  7812                           
  7813  0070                     ?i1_do_I2C_SEND_STOP:	
  7814                           ; 1 bytes @ 0x0
  7815                           
  7816  0070                     ??i1_do_I2C_SEND_STOP:	
  7817                           ; 1 bytes @ 0x0
  7818                           
  7819  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7820                           ; 1 bytes @ 0x0
  7821                           
  7822  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7823                           ; 1 bytes @ 0x0
  7824                           
  7825  0070                     ?i1_do_I2C_RCEN:	
  7826                           ; 1 bytes @ 0x0
  7827                           
  7828  0070                     ??i1_do_I2C_RCEN:	
  7829                           ; 1 bytes @ 0x0
  7830                           
  7831  0070                     ?i1_do_I2C_DO_ACK:	
  7832                           ; 1 bytes @ 0x0
  7833                           
  7834  0070                     ??i1_do_I2C_DO_ACK:	
  7835                           ; 1 bytes @ 0x0
  7836                           
  7837  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7838                           ; 1 bytes @ 0x0
  7839                           
  7840  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7841                           ; 1 bytes @ 0x0
  7842                           
  7843  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7844                           ; 1 bytes @ 0x0
  7845                           
  7846  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7847                           ; 1 bytes @ 0x0
  7848                           
  7849  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7850                           ; 1 bytes @ 0x0
  7851                           
  7852  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7853                           ; 1 bytes @ 0x0
  7854                           
  7855  0070                     ?i1_do_I2C_TX:	
  7856                           ; 1 bytes @ 0x0
  7857                           
  7858  0070                     ?i1_do_I2C_RX:	
  7859                           ; 1 bytes @ 0x0
  7860                           
  7861  0070                     ??i1_do_I2C_RX:	
  7862                           ; 1 bytes @ 0x0
  7863                           
  7864  0070                     ?i1_do_I2C_TX_EMPTY:	
  7865                           ; 1 bytes @ 0x0
  7866                           
  7867  0070                     ??i1_do_I2C_TX_EMPTY:	
  7868                           ; 1 bytes @ 0x0
  7869                           
  7870  0070                     ?i1_i2c_ISR:	
  7871                           ; 1 bytes @ 0x0
  7872                           
  7873  0070                     ?i1_setCallBack:	
  7874                           ; 1 bytes @ 0x0
  7875                           
  7876  0070                     i1i2c1_driver_TXData@d:	
  7877                           ; 1 bytes @ 0x0
  7878                           
  7879  0070                     i1i2c_setBuffer@bufferSize:	
  7880                           ; 1 bytes @ 0x0
  7881                           
  7882  0070                     i1setCallBack@cb:	
  7883                           ; 2 bytes @ 0x0
  7884                           
  7885                           
  7886                           ; 2 bytes @ 0x0
  7887  0070                     	ds	1
  7888  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7889  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7890                           ; 1 bytes @ 0x1
  7891                           
  7892  0071                     ??i1_do_I2C_TX:	
  7893                           ; 1 bytes @ 0x1
  7894                           
  7895                           
  7896                           ; 1 bytes @ 0x1
  7897  0071                     	ds	1
  7898  0072                     ??i1_i2c_setBuffer:	
  7899  0072                     i1setCallBack@p:	
  7900                           ; 1 bytes @ 0x2
  7901                           
  7902  0072                     i1_do_I2C_TX$723:	
  7903                           ; 1 bytes @ 0x2
  7904                           
  7905                           
  7906                           ; 2 bytes @ 0x2
  7907  0072                     	ds	1
  7908  0073                     ??i1_setCallBack:	
  7909  0073                     i1i2c_setBuffer@buffer:	
  7910                           ; 1 bytes @ 0x3
  7911                           
  7912                           
  7913                           ; 1 bytes @ 0x3
  7914  0073                     	ds	1
  7915  0074                     ??i1_i2c_ISR:	
  7916  0074                     i1setCallBack@idx:	
  7917                           ; 1 bytes @ 0x4
  7918                           
  7919                           
  7920                           ; 1 bytes @ 0x4
  7921  0074                     	ds	1
  7922  0075                     ?i1_i2c_setDataCompleteCallback:	
  7923  0075                     i1i2c_setDataCompleteCallback@cb:	
  7924                           ; 1 bytes @ 0x5
  7925                           
  7926                           
  7927                           ; 2 bytes @ 0x5
  7928  0075                     	ds	2
  7929  0077                     ??_INTERRUPT_InterruptManager:	
  7930  0077                     i1i2c_setDataCompleteCallback@p:	
  7931                           ; 1 bytes @ 0x7
  7932                           
  7933                           
  7934                           ; 1 bytes @ 0x7
  7935  0077                     	ds	1
  7936  0078                     ??i1_i2c_setDataCompleteCallback:	
  7937                           
  7938                           ; 1 bytes @ 0x8
  7939  0078                     	ds	1
  7940  0079                     ?i1_returnStop:	
  7941  0079                     ?i1_returnReset:	
  7942                           ; 1 bytes @ 0x9
  7943                           
  7944  0079                     ?i1_i2c_restartWrite:	
  7945                           ; 1 bytes @ 0x9
  7946                           
  7947  0079                     ?i1_wr1RegCompleteHandler:	
  7948                           ; 1 bytes @ 0x9
  7949                           
  7950  0079                     ?i1_rd1RegCompleteHandler:	
  7951                           ; 1 bytes @ 0x9
  7952                           
  7953  0079                     ?i1_rd2RegCompleteHandler:	
  7954                           ; 1 bytes @ 0x9
  7955                           
  7956  0079                     ?i1_wr2RegCompleteHandler:	
  7957                           ; 1 bytes @ 0x9
  7958                           
  7959  0079                     ?i1_rdBlkRegCompleteHandler:	
  7960                           ; 1 bytes @ 0x9
  7961                           
  7962  0079                     i1returnStop@p:	
  7963                           ; 1 bytes @ 0x9
  7964                           
  7965  0079                     i1returnReset@p:	
  7966                           ; 1 bytes @ 0x9
  7967                           
  7968  0079                     i1i2c_restartWrite@p:	
  7969                           ; 1 bytes @ 0x9
  7970                           
  7971  0079                     i1wr1RegCompleteHandler@p:	
  7972                           ; 1 bytes @ 0x9
  7973                           
  7974  0079                     i1rd1RegCompleteHandler@p:	
  7975                           ; 1 bytes @ 0x9
  7976                           
  7977  0079                     i1rd2RegCompleteHandler@p:	
  7978                           ; 1 bytes @ 0x9
  7979                           
  7980  0079                     i1wr2RegCompleteHandler@p:	
  7981                           ; 1 bytes @ 0x9
  7982                           
  7983  0079                     i1rdBlkRegCompleteHandler@p:	
  7984                           ; 1 bytes @ 0x9
  7985                           
  7986                           
  7987                           ; 1 bytes @ 0x9
  7988  0079                     	ds	1
  7989  007A                     ??i1_returnStop:	
  7990  007A                     ??i1_returnReset:	
  7991                           ; 1 bytes @ 0xA
  7992                           
  7993  007A                     ??i1_i2c_restartWrite:	
  7994                           ; 1 bytes @ 0xA
  7995                           
  7996  007A                     ??i1_wr1RegCompleteHandler:	
  7997                           ; 1 bytes @ 0xA
  7998                           
  7999  007A                     ??i1_rd1RegCompleteHandler:	
  8000                           ; 1 bytes @ 0xA
  8001                           
  8002  007A                     ??i1_rd2RegCompleteHandler:	
  8003                           ; 1 bytes @ 0xA
  8004                           
  8005  007A                     ??i1_wr2RegCompleteHandler:	
  8006                           ; 1 bytes @ 0xA
  8007                           
  8008  007A                     ??i1_rdBlkRegCompleteHandler:	
  8009                           ; 1 bytes @ 0xA
  8010                           
  8011                           
  8012                           	psect	cstackBANK0
  8013  0020                     __pcstackBANK0:	
  8014                           ; 1 bytes @ 0xA
  8015                           
  8016  0020                     ?_setCallBack:	
  8017  0020                     ??_PMD_Initialize:	
  8018                           ; 1 bytes @ 0x0
  8019                           
  8020  0020                     ??_OSCILLATOR_Initialize:	
  8021                           ; 1 bytes @ 0x0
  8022                           
  8023  0020                     ??_SPI2_Initialize:	
  8024                           ; 1 bytes @ 0x0
  8025                           
  8026  0020                     ??_isdigit:	
  8027                           ; 1 bytes @ 0x0
  8028                           
  8029  0020                     ?_putch:	
  8030                           ; 1 bytes @ 0x0
  8031                           
  8032  0020                     ??_mssp1_IRQisEnabled:	
  8033                           ; 1 bytes @ 0x0
  8034                           
  8035  0020                     ??_mssp1_disableIRQ:	
  8036                           ; 1 bytes @ 0x0
  8037                           
  8038  0020                     ??_mssp1_clearIRQ:	
  8039                           ; 1 bytes @ 0x0
  8040                           
  8041  0020                     ??_mssp1_setIRQ:	
  8042                           ; 1 bytes @ 0x0
  8043                           
  8044  0020                     ??_mssp1_waitForEvent:	
  8045                           ; 1 bytes @ 0x0
  8046                           
  8047  0020                     ??_i2c1_driver_open:	
  8048                           ; 1 bytes @ 0x0
  8049                           
  8050  0020                     ??_i2c1_driver_resetBus:	
  8051                           ; 1 bytes @ 0x0
  8052                           
  8053  0020                     ??_i2c1_driver_start:	
  8054                           ; 1 bytes @ 0x0
  8055                           
  8056  0020                     ??_i2c1_driver_restart:	
  8057                           ; 1 bytes @ 0x0
  8058                           
  8059  0020                     ??_i2c1_driver_stop:	
  8060                           ; 1 bytes @ 0x0
  8061                           
  8062  0020                     ??_i2c1_driver_isNACK:	
  8063                           ; 1 bytes @ 0x0
  8064                           
  8065  0020                     ??_i2c1_driver_startRX:	
  8066                           ; 1 bytes @ 0x0
  8067                           
  8068  0020                     ??_i2c1_driver_getRXData:	
  8069                           ; 1 bytes @ 0x0
  8070                           
  8071  0020                     ??_i2c1_driver_TXData:	
  8072                           ; 1 bytes @ 0x0
  8073                           
  8074  0020                     ??_i2c1_driver_sendACK:	
  8075                           ; 1 bytes @ 0x0
  8076                           
  8077  0020                     ??_i2c1_driver_sendNACK:	
  8078                           ; 1 bytes @ 0x0
  8079                           
  8080  0020                     ?_i2c1_driver_setBusCollisionISR:	
  8081                           ; 1 bytes @ 0x0
  8082                           
  8083  0020                     ?_i2c1_driver_setI2cISR:	
  8084                           ; 1 bytes @ 0x0
  8085                           
  8086  0020                     ??_i2c_close:	
  8087                           ; 1 bytes @ 0x0
  8088                           
  8089  0020                     ?_i2c_setBuffer:	
  8090                           ; 1 bytes @ 0x0
  8091                           
  8092  0020                     ??_do_I2C_RESET:	
  8093                           ; 1 bytes @ 0x0
  8094                           
  8095  0020                     ??_do_I2C_IDLE:	
  8096                           ; 1 bytes @ 0x0
  8097                           
  8098  0020                     ??_do_I2C_SEND_RESTART_READ:	
  8099                           ; 1 bytes @ 0x0
  8100                           
  8101  0020                     ??_do_I2C_SEND_RESTART_WRITE:	
  8102                           ; 1 bytes @ 0x0
  8103                           
  8104  0020                     ??_do_I2C_SEND_RESTART:	
  8105                           ; 1 bytes @ 0x0
  8106                           
  8107  0020                     ??_do_I2C_SEND_STOP:	
  8108                           ; 1 bytes @ 0x0
  8109                           
  8110  0020                     ??_do_I2C_RCEN:	
  8111                           ; 1 bytes @ 0x0
  8112                           
  8113  0020                     ??_do_I2C_DO_ACK:	
  8114                           ; 1 bytes @ 0x0
  8115                           
  8116  0020                     ??_do_I2C_DO_NACK_STOP:	
  8117                           ; 1 bytes @ 0x0
  8118                           
  8119  0020                     ??_do_I2C_DO_NACK_RESTART:	
  8120                           ; 1 bytes @ 0x0
  8121                           
  8122  0020                     ??_do_I2C_DO_ADDRESS_NACK:	
  8123                           ; 1 bytes @ 0x0
  8124                           
  8125  0020                     ??_do_I2C_RX:	
  8126                           ; 1 bytes @ 0x0
  8127                           
  8128  0020                     ??_do_I2C_TX_EMPTY:	
  8129                           ; 1 bytes @ 0x0
  8130                           
  8131  0020                     ??_PIN_MANAGER_Initialize:	
  8132                           ; 1 bytes @ 0x0
  8133                           
  8134  0020                     ??_SPI2_Exchange8bit:	
  8135                           ; 1 bytes @ 0x0
  8136                           
  8137  0020                     ?___bmul:	
  8138                           ; 1 bytes @ 0x0
  8139                           
  8140  0020                     ?_memset:	
  8141                           ; 1 bytes @ 0x0
  8142                           
  8143  0020                     ?_strlen:	
  8144                           ; 2 bytes @ 0x0
  8145                           
  8146  0020                     ?___wmul:	
  8147                           ; 2 bytes @ 0x0
  8148                           
  8149  0020                     ?___awdiv:	
  8150                           ; 2 bytes @ 0x0
  8151                           
  8152  0020                     ?___awmod:	
  8153                           ; 2 bytes @ 0x0
  8154                           
  8155  0020                     ?___lmul:	
  8156                           ; 2 bytes @ 0x0
  8157                           
  8158  0020                     ?___aldiv:	
  8159                           ; 4 bytes @ 0x0
  8160                           
  8161  0020                     ?___almod:	
  8162                           ; 4 bytes @ 0x0
  8163                           
  8164  0020                     mssp1_waitForEvent@timeout:	
  8165                           ; 4 bytes @ 0x0
  8166                           
  8167  0020                     i2c1_driver_TXData@d:	
  8168                           ; 1 bytes @ 0x0
  8169                           
  8170  0020                     SPI2_Exchange8bit@data:	
  8171                           ; 1 bytes @ 0x0
  8172                           
  8173  0020                     ___bmul@multiplicand:	
  8174                           ; 1 bytes @ 0x0
  8175                           
  8176  0020                     _isdigit$2071:	
  8177                           ; 1 bytes @ 0x0
  8178                           
  8179  0020                     putch@c:	
  8180                           ; 1 bytes @ 0x0
  8181                           
  8182  0020                     i2c1_driver_setBusCollisionISR@f:	
  8183                           ; 1 bytes @ 0x0
  8184                           
  8185  0020                     i2c1_driver_setI2cISR@f:	
  8186                           ; 2 bytes @ 0x0
  8187                           
  8188  0020                     i2c_setBuffer@bufferSize:	
  8189                           ; 2 bytes @ 0x0
  8190                           
  8191  0020                     setCallBack@cb:	
  8192                           ; 2 bytes @ 0x0
  8193                           
  8194  0020                     ___wmul@multiplier:	
  8195                           ; 2 bytes @ 0x0
  8196                           
  8197  0020                     ___awdiv@divisor:	
  8198                           ; 2 bytes @ 0x0
  8199                           
  8200  0020                     ___awmod@divisor:	
  8201                           ; 2 bytes @ 0x0
  8202                           
  8203  0020                     memset@p1:	
  8204                           ; 2 bytes @ 0x0
  8205                           
  8206  0020                     strlen@s:	
  8207                           ; 2 bytes @ 0x0
  8208                           
  8209  0020                     ___lmul@multiplier:	
  8210                           ; 2 bytes @ 0x0
  8211                           
  8212  0020                     ___aldiv@divisor:	
  8213                           ; 4 bytes @ 0x0
  8214                           
  8215  0020                     ___almod@divisor:	
  8216                           ; 4 bytes @ 0x0
  8217                           
  8218                           
  8219                           ; 4 bytes @ 0x0
  8220  0020                     	ds	1
  8221  0021                     ??_putch:	
  8222  0021                     ??_do_I2C_SEND_ADR_READ:	
  8223                           ; 1 bytes @ 0x1
  8224                           
  8225  0021                     ??_do_I2C_SEND_ADR_WRITE:	
  8226                           ; 1 bytes @ 0x1
  8227                           
  8228  0021                     ??_do_I2C_TX:	
  8229                           ; 1 bytes @ 0x1
  8230                           
  8231  0021                     ??_OLED_Command:	
  8232                           ; 1 bytes @ 0x1
  8233                           
  8234  0021                     ??_OLED_Data:	
  8235                           ; 1 bytes @ 0x1
  8236                           
  8237  0021                     ??___bmul:	
  8238                           ; 1 bytes @ 0x1
  8239                           
  8240  0021                     i2c_close@ret:	
  8241                           ; 1 bytes @ 0x1
  8242                           
  8243  0021                     OLED_Command@temp:	
  8244                           ; 1 bytes @ 0x1
  8245                           
  8246  0021                     OLED_Data@temp:	
  8247                           ; 1 bytes @ 0x1
  8248                           
  8249  0021                     isdigit@c:	
  8250                           ; 1 bytes @ 0x1
  8251                           
  8252                           
  8253                           ; 1 bytes @ 0x1
  8254  0021                     	ds	1
  8255  0022                     ??_OLED_Initialize:	
  8256  0022                     ??_strlen:	
  8257                           ; 1 bytes @ 0x2
  8258                           
  8259  0022                     ??_i2c1_driver_setBusCollisionISR:	
  8260                           ; 1 bytes @ 0x2
  8261                           
  8262  0022                     ??_i2c1_driver_setI2cISR:	
  8263                           ; 1 bytes @ 0x2
  8264                           
  8265  0022                     ??_i2c_open:	
  8266                           ; 1 bytes @ 0x2
  8267                           
  8268  0022                     ??_i2c_setBuffer:	
  8269                           ; 1 bytes @ 0x2
  8270                           
  8271  0022                     ??_OLED_SetRow:	
  8272                           ; 1 bytes @ 0x2
  8273                           
  8274  0022                     ??_OLED_SetColumn:	
  8275                           ; 1 bytes @ 0x2
  8276                           
  8277  0022                     setCallBack@p:	
  8278                           ; 1 bytes @ 0x2
  8279                           
  8280  0022                     ___bmul@product:	
  8281                           ; 1 bytes @ 0x2
  8282                           
  8283  0022                     _do_I2C_TX$723:	
  8284                           ; 1 bytes @ 0x2
  8285                           
  8286  0022                     ___wmul@multiplicand:	
  8287                           ; 2 bytes @ 0x2
  8288                           
  8289  0022                     ___awdiv@dividend:	
  8290                           ; 2 bytes @ 0x2
  8291                           
  8292  0022                     ___awmod@dividend:	
  8293                           ; 2 bytes @ 0x2
  8294                           
  8295  0022                     memset@c:	
  8296                           ; 2 bytes @ 0x2
  8297                           
  8298                           
  8299                           ; 2 bytes @ 0x2
  8300  0022                     	ds	1
  8301  0023                     ??_setCallBack:	
  8302  0023                     i2c_open@address:	
  8303                           ; 1 bytes @ 0x3
  8304                           
  8305  0023                     i2c_setBuffer@buffer:	
  8306                           ; 1 bytes @ 0x3
  8307                           
  8308  0023                     OLED_SetRow@address:	
  8309                           ; 1 bytes @ 0x3
  8310                           
  8311  0023                     OLED_SetColumn@address:	
  8312                           ; 1 bytes @ 0x3
  8313                           
  8314  0023                     ___bmul@multiplier:	
  8315                           ; 1 bytes @ 0x3
  8316                           
  8317                           
  8318                           ; 1 bytes @ 0x3
  8319  0023                     	ds	1
  8320  0024                     ??_i2c_ISR:	
  8321  0024                     ?_OLED_PutPicture:	
  8322                           ; 1 bytes @ 0x4
  8323                           
  8324  0024                     ??___wmul:	
  8325                           ; 1 bytes @ 0x4
  8326                           
  8327  0024                     ??___awdiv:	
  8328                           ; 1 bytes @ 0x4
  8329                           
  8330  0024                     ??___awmod:	
  8331                           ; 1 bytes @ 0x4
  8332                           
  8333  0024                     i2c_open@ret:	
  8334                           ; 1 bytes @ 0x4
  8335                           
  8336  0024                     setCallBack@idx:	
  8337                           ; 1 bytes @ 0x4
  8338                           
  8339  0024                     OLED_PutPicture@pic:	
  8340                           ; 1 bytes @ 0x4
  8341                           
  8342  0024                     ___wmul@product:	
  8343                           ; 2 bytes @ 0x4
  8344                           
  8345  0024                     memset@n:	
  8346                           ; 2 bytes @ 0x4
  8347                           
  8348  0024                     strlen@cp:	
  8349                           ; 2 bytes @ 0x4
  8350                           
  8351  0024                     ___lmul@multiplicand:	
  8352                           ; 2 bytes @ 0x4
  8353                           
  8354  0024                     ___aldiv@dividend:	
  8355                           ; 4 bytes @ 0x4
  8356                           
  8357  0024                     ___almod@dividend:	
  8358                           ; 4 bytes @ 0x4
  8359                           
  8360                           
  8361                           ; 4 bytes @ 0x4
  8362  0024                     	ds	1
  8363  0025                     ?_i2c_setDataCompleteCallback:	
  8364  0025                     ?_i2c_setAddressNACKCallback:	
  8365                           ; 1 bytes @ 0x5
  8366                           
  8367  0025                     ___awdiv@counter:	
  8368                           ; 1 bytes @ 0x5
  8369                           
  8370  0025                     ___awmod@counter:	
  8371                           ; 1 bytes @ 0x5
  8372                           
  8373  0025                     i2c_setDataCompleteCallback@cb:	
  8374                           ; 1 bytes @ 0x5
  8375                           
  8376  0025                     i2c_setAddressNACKCallback@cb:	
  8377                           ; 2 bytes @ 0x5
  8378                           
  8379                           
  8380                           ; 2 bytes @ 0x5
  8381  0025                     	ds	1
  8382  0026                     ??_memset:	
  8383  0026                     ?_Modify_Data:	
  8384                           ; 1 bytes @ 0x6
  8385                           
  8386  0026                     ??_OLED_PutPicture:	
  8387                           ; 1 bytes @ 0x6
  8388                           
  8389  0026                     ?___lwdiv:	
  8390                           ; 1 bytes @ 0x6
  8391                           
  8392  0026                     ___awdiv@sign:	
  8393                           ; 2 bytes @ 0x6
  8394                           
  8395  0026                     ___awmod@sign:	
  8396                           ; 1 bytes @ 0x6
  8397                           
  8398  0026                     OLED_PutPicture@j:	
  8399                           ; 1 bytes @ 0x6
  8400                           
  8401  0026                     Modify_Data@c:	
  8402                           ; 2 bytes @ 0x6
  8403                           
  8404  0026                     ___lwdiv@divisor:	
  8405                           ; 2 bytes @ 0x6
  8406                           
  8407  0026                     memset@p:	
  8408                           ; 2 bytes @ 0x6
  8409                           
  8410                           
  8411                           ; 2 bytes @ 0x6
  8412  0026                     	ds	1
  8413  0027                     ??_i2c_poller:	
  8414  0027                     ??_i2c_masterOperation:	
  8415                           ; 1 bytes @ 0x7
  8416                           
  8417  0027                     i2c_setDataCompleteCallback@p:	
  8418                           ; 1 bytes @ 0x7
  8419                           
  8420  0027                     i2c_setAddressNACKCallback@p:	
  8421                           ; 1 bytes @ 0x7
  8422                           
  8423  0027                     ___awdiv@quotient:	
  8424                           ; 1 bytes @ 0x7
  8425                           
  8426                           
  8427                           ; 2 bytes @ 0x7
  8428  0027                     	ds	1
  8429  0028                     ??_i2c_setDataCompleteCallback:	
  8430  0028                     ??_i2c_setAddressNACKCallback:	
  8431                           ; 1 bytes @ 0x8
  8432                           
  8433  0028                     ??___lmul:	
  8434                           ; 1 bytes @ 0x8
  8435                           
  8436  0028                     ??___aldiv:	
  8437                           ; 1 bytes @ 0x8
  8438                           
  8439  0028                     ??___almod:	
  8440                           ; 1 bytes @ 0x8
  8441                           
  8442  0028                     i2c_masterOperation@read:	
  8443                           ; 1 bytes @ 0x8
  8444                           
  8445  0028                     OLED_PutPicture@i:	
  8446                           ; 1 bytes @ 0x8
  8447                           
  8448  0028                     Modify_Data@offset:	
  8449                           ; 2 bytes @ 0x8
  8450                           
  8451  0028                     ___lwdiv@dividend:	
  8452                           ; 2 bytes @ 0x8
  8453                           
  8454  0028                     ___lmul@product:	
  8455                           ; 2 bytes @ 0x8
  8456                           
  8457                           
  8458                           ; 4 bytes @ 0x8
  8459  0028                     	ds	1
  8460  0029                     ?_returnStop:	
  8461  0029                     ?_returnReset:	
  8462                           ; 1 bytes @ 0x9
  8463                           
  8464  0029                     ?_i2c_restartWrite:	
  8465                           ; 1 bytes @ 0x9
  8466                           
  8467  0029                     ?_wr1RegCompleteHandler:	
  8468                           ; 1 bytes @ 0x9
  8469                           
  8470  0029                     ?_rd1RegCompleteHandler:	
  8471                           ; 1 bytes @ 0x9
  8472                           
  8473  0029                     ?_rd2RegCompleteHandler:	
  8474                           ; 1 bytes @ 0x9
  8475                           
  8476  0029                     ?_wr2RegCompleteHandler:	
  8477                           ; 1 bytes @ 0x9
  8478                           
  8479  0029                     ?_rdBlkRegCompleteHandler:	
  8480                           ; 1 bytes @ 0x9
  8481                           
  8482  0029                     i2c_masterOperation@ret:	
  8483                           ; 1 bytes @ 0x9
  8484                           
  8485  0029                     returnStop@p:	
  8486                           ; 1 bytes @ 0x9
  8487                           
  8488  0029                     returnReset@p:	
  8489                           ; 1 bytes @ 0x9
  8490                           
  8491  0029                     i2c_restartWrite@p:	
  8492                           ; 1 bytes @ 0x9
  8493                           
  8494  0029                     wr1RegCompleteHandler@p:	
  8495                           ; 1 bytes @ 0x9
  8496                           
  8497  0029                     rd1RegCompleteHandler@p:	
  8498                           ; 1 bytes @ 0x9
  8499                           
  8500  0029                     rd2RegCompleteHandler@p:	
  8501                           ; 1 bytes @ 0x9
  8502                           
  8503  0029                     wr2RegCompleteHandler@p:	
  8504                           ; 1 bytes @ 0x9
  8505                           
  8506  0029                     rdBlkRegCompleteHandler@p:	
  8507                           ; 1 bytes @ 0x9
  8508                           
  8509  0029                     ___aldiv@counter:	
  8510                           ; 1 bytes @ 0x9
  8511                           
  8512  0029                     ___almod@counter:	
  8513                           ; 1 bytes @ 0x9
  8514                           
  8515                           
  8516                           ; 1 bytes @ 0x9
  8517  0029                     	ds	1
  8518  002A                     ??_returnStop:	
  8519  002A                     ??_returnReset:	
  8520                           ; 1 bytes @ 0xA
  8521                           
  8522  002A                     ?_i2c_read1ByteRegister:	
  8523                           ; 1 bytes @ 0xA
  8524                           
  8525  002A                     ?_i2c_write1ByteRegister:	
  8526                           ; 1 bytes @ 0xA
  8527                           
  8528  002A                     ??_i2c_masterWrite:	
  8529                           ; 1 bytes @ 0xA
  8530                           
  8531  002A                     ??_i2c_restartWrite:	
  8532                           ; 1 bytes @ 0xA
  8533                           
  8534  002A                     ??_wr1RegCompleteHandler:	
  8535                           ; 1 bytes @ 0xA
  8536                           
  8537  002A                     ??_rd1RegCompleteHandler:	
  8538                           ; 1 bytes @ 0xA
  8539                           
  8540  002A                     ??_rd2RegCompleteHandler:	
  8541                           ; 1 bytes @ 0xA
  8542                           
  8543  002A                     ??_wr2RegCompleteHandler:	
  8544                           ; 1 bytes @ 0xA
  8545                           
  8546  002A                     ??_rdBlkRegCompleteHandler:	
  8547                           ; 1 bytes @ 0xA
  8548                           
  8549  002A                     ??_OLED_Clear:	
  8550                           ; 1 bytes @ 0xA
  8551                           
  8552  002A                     ??___lwdiv:	
  8553                           ; 1 bytes @ 0xA
  8554                           
  8555  002A                     i2c_write1ByteRegister@reg:	
  8556                           ; 1 bytes @ 0xA
  8557                           
  8558  002A                     i2c_read1ByteRegister@reg:	
  8559                           ; 1 bytes @ 0xA
  8560                           
  8561  002A                     ___aldiv@sign:	
  8562                           ; 1 bytes @ 0xA
  8563                           
  8564  002A                     ___almod@sign:	
  8565                           ; 1 bytes @ 0xA
  8566                           
  8567  002A                     Modify_Data@limit:	
  8568                           ; 1 bytes @ 0xA
  8569                           
  8570                           
  8571                           ; 2 bytes @ 0xA
  8572  002A                     	ds	1
  8573  002B                     ??_i2c_read1ByteRegister:	
  8574  002B                     i2c_write1ByteRegister@data:	
  8575                           ; 1 bytes @ 0xB
  8576                           
  8577  002B                     ___lwdiv@quotient:	
  8578                           ; 1 bytes @ 0xB
  8579                           
  8580  002B                     ___aldiv@quotient:	
  8581                           ; 2 bytes @ 0xB
  8582                           
  8583                           
  8584                           ; 4 bytes @ 0xB
  8585  002B                     	ds	1
  8586  002C                     ??_i2c_write1ByteRegister:	
  8587  002C                     ??_Modify_Data:	
  8588                           ; 1 bytes @ 0xC
  8589                           
  8590  002C                     i2c_read1ByteRegister@address:	
  8591                           ; 1 bytes @ 0xC
  8592                           
  8593  002C                     OLED_Clear@j:	
  8594                           ; 1 bytes @ 0xC
  8595                           
  8596                           
  8597                           ; 1 bytes @ 0xC
  8598  002C                     	ds	1
  8599  002D                     i2c_write1ByteRegister@address:	
  8600  002D                     i2c_read1ByteRegister@e:	
  8601                           ; 1 bytes @ 0xD
  8602                           
  8603  002D                     ___lwdiv@counter:	
  8604                           ; 1 bytes @ 0xD
  8605                           
  8606  002D                     OLED_Clear@j_1694:	
  8607                           ; 1 bytes @ 0xD
  8608                           
  8609                           
  8610                           ; 2 bytes @ 0xD
  8611  002D                     	ds	1
  8612  002E                     ?_rtcc_write:	
  8613  002E                     ?___lwmod:	
  8614                           ; 1 bytes @ 0xE
  8615                           
  8616  002E                     ?_months_to_days:	
  8617                           ; 2 bytes @ 0xE
  8618                           
  8619  002E                     ?_years_to_days:	
  8620                           ; 2 bytes @ 0xE
  8621                           
  8622  002E                     rtcc_write@data:	
  8623                           ; 4 bytes @ 0xE
  8624                           
  8625  002E                     i2c_read1ByteRegister@x:	
  8626                           ; 1 bytes @ 0xE
  8627                           
  8628  002E                     ___lwmod@divisor:	
  8629                           ; 2 bytes @ 0xE
  8630                           
  8631  002E                     months_to_days@month:	
  8632                           ; 2 bytes @ 0xE
  8633                           
  8634  002E                     years_to_days@yr:	
  8635                           ; 2 bytes @ 0xE
  8636                           
  8637                           
  8638                           ; 2 bytes @ 0xE
  8639  002E                     	ds	1
  8640  002F                     ??_rtcc_write:	
  8641  002F                     OLED_Clear@i:	
  8642                           ; 1 bytes @ 0xF
  8643                           
  8644                           
  8645                           ; 1 bytes @ 0xF
  8646  002F                     	ds	1
  8647  0030                     ??_months_to_days:	
  8648  0030                     i2c_read1ByteRegister@d2:	
  8649                           ; 1 bytes @ 0x10
  8650                           
  8651  0030                     ___lwmod@dividend:	
  8652                           ; 1 bytes @ 0x10
  8653                           
  8654                           
  8655                           ; 2 bytes @ 0x10
  8656  0030                     	ds	1
  8657  0031                     ??_rtcc_read:	
  8658  0031                     rtcc_write@addr:	
  8659                           ; 1 bytes @ 0x11
  8660                           
  8661                           
  8662                           ; 1 bytes @ 0x11
  8663  0031                     	ds	1
  8664  0032                     ??___lwmod:	
  8665  0032                     ??_years_to_days:	
  8666                           ; 1 bytes @ 0x12
  8667                           
  8668  0032                     rtcc_read@addr:	
  8669                           ; 1 bytes @ 0x12
  8670                           
  8671                           
  8672                           ; 1 bytes @ 0x12
  8673  0032                     	ds	1
  8674  0033                     ??_rtc6_Initialize:	
  8675  0033                     ?_rtc6_SetComponent:	
  8676                           ; 1 bytes @ 0x13
  8677                           
  8678  0033                     ?_rtc6_GetComponent:	
  8679                           ; 1 bytes @ 0x13
  8680                           
  8681  0033                     rtc6_SetComponent@mask:	
  8682                           ; 1 bytes @ 0x13
  8683                           
  8684  0033                     rtc6_GetComponent@mask:	
  8685                           ; 1 bytes @ 0x13
  8686                           
  8687  0033                     ___lwmod@counter:	
  8688                           ; 1 bytes @ 0x13
  8689                           
  8690                           
  8691                           ; 1 bytes @ 0x13
  8692  0033                     	ds	1
  8693  0034                     ??_rtc6_GetComponent:	
  8694  0034                     ?__doprnt:	
  8695                           ; 1 bytes @ 0x14
  8696                           
  8697  0034                     ?_dylen:	
  8698                           ; 2 bytes @ 0x14
  8699                           
  8700  0034                     ?_isleap:	
  8701                           ; 2 bytes @ 0x14
  8702                           
  8703  0034                     rtc6_SetComponent@time:	
  8704                           ; 2 bytes @ 0x14
  8705                           
  8706  0034                     __doprnt@pb:	
  8707                           ; 1 bytes @ 0x14
  8708                           
  8709  0034                     dylen@yr:	
  8710                           ; 2 bytes @ 0x14
  8711                           
  8712  0034                     isleap@yr:	
  8713                           ; 2 bytes @ 0x14
  8714                           
  8715                           
  8716                           ; 2 bytes @ 0x14
  8717  0034                     	ds	1
  8718  0035                     ??_rtc6_SetComponent:	
  8719  0035                     rtc6_Initialize@reg:	
  8720                           ; 1 bytes @ 0x15
  8721                           
  8722  0035                     Modify_Data@right:	
  8723                           ; 1 bytes @ 0x15
  8724                           
  8725                           
  8726                           ; 2 bytes @ 0x15
  8727  0035                     	ds	1
  8728  0036                     ??_SYSTEM_Initialize:	
  8729  0036                     ??_dylen:	
  8730                           ; 1 bytes @ 0x16
  8731                           
  8732  0036                     ??_isleap:	
  8733                           ; 1 bytes @ 0x16
  8734                           
  8735  0036                     __doprnt@f:	
  8736                           ; 1 bytes @ 0x16
  8737                           
  8738                           
  8739                           ; 2 bytes @ 0x16
  8740  0036                     	ds	1
  8741  0037                     rtc6_GetComponent@location:	
  8742  0037                     Modify_Data@p:	
  8743                           ; 1 bytes @ 0x17
  8744                           
  8745                           
  8746                           ; 2 bytes @ 0x17
  8747  0037                     	ds	1
  8748  0038                     ??_gmtime:	
  8749  0038                     rtc6_GetComponent@working:	
  8750                           ; 1 bytes @ 0x18
  8751                           
  8752  0038                     __doprnt@ap:	
  8753                           ; 1 bytes @ 0x18
  8754                           
  8755  0038                     _isleap$2139:	
  8756                           ; 1 bytes @ 0x18
  8757                           
  8758                           
  8759                           ; 1 bytes @ 0x18
  8760  0038                     	ds	1
  8761  0039                     ??__doprnt:	
  8762  0039                     Modify_Data@j:	
  8763                           ; 1 bytes @ 0x19
  8764                           
  8765                           
  8766                           ; 2 bytes @ 0x19
  8767  0039                     	ds	1
  8768  003A                     gmtime@tp:	
  8769                           
  8770                           ; 1 bytes @ 0x1A
  8771  003A                     	ds	1
  8772  003B                     rtc6_SetComponent@inMemory:	
  8773  003B                     gmtime@tc:	
  8774                           ; 1 bytes @ 0x1B
  8775                           
  8776                           
  8777                           ; 4 bytes @ 0x1B
  8778  003B                     	ds	1
  8779  003C                     rtc6_SetComponent@location:	
  8780                           
  8781                           ; 1 bytes @ 0x1C
  8782  003C                     	ds	1
  8783  003D                     __doprnt@prec:	
  8784                           
  8785                           ; 1 bytes @ 0x1D
  8786  003D                     	ds	1
  8787  003E                     __doprnt@cp:	
  8788                           
  8789                           ; 1 bytes @ 0x1E
  8790  003E                     	ds	1
  8791  003F                     ??_localtime:	
  8792  003F                     __doprnt@len:	
  8793                           ; 1 bytes @ 0x1F
  8794                           
  8795                           
  8796                           ; 2 bytes @ 0x1F
  8797  003F                     	ds	1
  8798  0040                     ?_ymd_to_scalar:	
  8799  0040                     ymd_to_scalar@yr:	
  8800                           ; 4 bytes @ 0x20
  8801                           
  8802                           
  8803                           ; 2 bytes @ 0x20
  8804  0040                     	ds	1
  8805  0041                     __doprnt@val:	
  8806                           
  8807                           ; 2 bytes @ 0x21
  8808  0041                     	ds	1
  8809  0042                     ymd_to_scalar@mo:	
  8810                           
  8811                           ; 2 bytes @ 0x22
  8812  0042                     	ds	1
  8813  0043                     __doprnt@flag:	
  8814                           
  8815                           ; 1 bytes @ 0x23
  8816  0043                     	ds	1
  8817  0044                     __doprnt@width:	
  8818  0044                     ymd_to_scalar@day:	
  8819                           ; 2 bytes @ 0x24
  8820                           
  8821                           
  8822                           ; 2 bytes @ 0x24
  8823  0044                     	ds	2
  8824  0046                     ??_ymd_to_scalar:	
  8825  0046                     __doprnt@c:	
  8826                           ; 1 bytes @ 0x26
  8827                           
  8828                           
  8829                           ; 1 bytes @ 0x26
  8830  0046                     	ds	1
  8831  0047                     ?_sprintf:	
  8832  0047                     sprintf@wh:	
  8833                           ; 2 bytes @ 0x27
  8834                           
  8835  0047                     localtime@t:	
  8836                           ; 2 bytes @ 0x27
  8837                           
  8838                           
  8839                           ; 4 bytes @ 0x27
  8840  0047                     	ds	2
  8841  0049                     sprintf@f:	
  8842                           
  8843                           ; 2 bytes @ 0x29
  8844  0049                     	ds	1
  8845  004A                     _ymd_to_scalar$2151:	
  8846                           
  8847                           ; 2 bytes @ 0x2A
  8848  004A                     	ds	1
  8849  004B                     localtime@tp:	
  8850                           
  8851                           ; 1 bytes @ 0x2B
  8852  004B                     	ds	1
  8853  004C                     ?_rtc6_SetTime:	
  8854  004C                     rtc6_SetTime@t:	
  8855                           ; 1 bytes @ 0x2C
  8856                           
  8857  004C                     ymd_to_scalar@scalar:	
  8858                           ; 4 bytes @ 0x2C
  8859                           
  8860                           
  8861                           ; 4 bytes @ 0x2C
  8862  004C                     	ds	4
  8863  0050                     ??_rtc6_SetTime:	
  8864  0050                     ?_mktime:	
  8865                           ; 1 bytes @ 0x30
  8866                           
  8867                           
  8868                           ; 4 bytes @ 0x30
  8869  0050                     	ds	2
  8870  0052                     _rtc6_SetTime$2707:	
  8871                           
  8872                           ; 1 bytes @ 0x32
  8873  0052                     	ds	1
  8874  0053                     rtc6_SetTime@tm_t:	
  8875                           
  8876                           ; 1 bytes @ 0x33
  8877  0053                     	ds	1
  8878  0054                     ??_mktime:	
  8879                           
  8880                           ; 1 bytes @ 0x34
  8881  0054                     	ds	3
  8882  0057                     ??_sprintf:	
  8883                           
  8884                           ; 1 bytes @ 0x37
  8885  0057                     	ds	1
  8886  0058                     sprintf@ap:	
  8887                           
  8888                           ; 1 bytes @ 0x38
  8889  0058                     	ds	1
  8890  0059                     sprintf@pb:	
  8891                           
  8892                           ; 4 bytes @ 0x39
  8893  0059                     	ds	1
  8894  005A                     mktime@tt:	
  8895                           
  8896                           ; 4 bytes @ 0x3A
  8897  005A                     	ds	3
  8898  005D                     ?_Write_String:	
  8899  005D                     Write_String@message:	
  8900                           ; 1 bytes @ 0x3D
  8901                           
  8902                           
  8903                           ; 2 bytes @ 0x3D
  8904  005D                     	ds	1
  8905  005E                     mktime@timeptr:	
  8906                           
  8907                           ; 1 bytes @ 0x3E
  8908  005E                     	ds	1
  8909  005F                     ??_Write_String:	
  8910  005F                     ?_rtc6_GetTime:	
  8911                           ; 1 bytes @ 0x3F
  8912                           
  8913  005F                     Write_String@len:	
  8914                           ; 4 bytes @ 0x3F
  8915                           
  8916                           
  8917                           ; 2 bytes @ 0x3F
  8918  005F                     	ds	4
  8919  0063                     ??_rtc6_GetTime:	
  8920                           
  8921                           ; 1 bytes @ 0x43
  8922  0063                     	ds	3
  8923  0066                     ??_main:	
  8924                           
  8925                           ; 1 bytes @ 0x46
  8926  0066                     	ds	4
  8927                           
  8928                           	psect	maintext
  8929  0C9D                     __pmaintext:	
  8930 ;;
  8931 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8932 ;;
  8933 ;; *************** function _main *****************
  8934 ;; Defined at:
  8935 ;;		line 5 in file "main.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;		None
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;  timeStr         0   18[BANK1 ] unsigned char [0]
  8940 ;;  buffer         80    0        unsigned char [80]
  8941 ;;  welcomeMsg     12   18[BANK1 ] unsigned char [12]
  8942 ;;  getTime         4   35[BANK1 ] volatile long 
  8943 ;;  setTime         4   30[BANK1 ] volatile long 
  8944 ;;  tm_t            1   34[BANK1 ] PTR struct tm
  8945 ;;		 -> gmtime@tim(18), 
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8950 ;; Tracked objects:
  8951 ;;		On entry : B1F/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;Total ram usage:       25 bytes
  8960 ;; Hardware stack levels required when called:   18
  8961 ;; This function calls:
  8962 ;;		_OLED_Initialize
  8963 ;;		_SYSTEM_Initialize
  8964 ;;		_Write_String
  8965 ;;		_localtime
  8966 ;;		_memset
  8967 ;;		_rtc6_GetTime
  8968 ;;		_rtc6_SetTime
  8969 ;;		_sprintf
  8970 ;; This function is called by:
  8971 ;;		Startup code after reset
  8972 ;; This function uses a non-reentrant model
  8973 ;;
  8974                           
  8975                           
  8976                           ;psect for function _main
  8977  0C9D                     _main:	
  8978                           
  8979                           ;main.c: 8: SYSTEM_Initialize();
  8980                           
  8981                           ;incstack = 0
  8982 ;; hardware stack exceeded
  8983                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8984  0C9D  319E  26F9  318C   	fcall	_SYSTEM_Initialize
  8985                           
  8986                           ;main.c: 9: OLED_Initialize();
  8987  0CA0  318A  2299  318C   	fcall	_OLED_Initialize
  8988                           
  8989                           ;main.c: 25: char welcomeMsg[] = "Alarm Clock";
  8990  0CA3  30E4               	movlw	low main@F15397
  8991  0CA4  0086               	movwf	6
  8992  0CA5  3000               	movlw	high main@F15397
  8993  0CA6  0087               	movwf	7
  8994  0CA7  30B2               	movlw	low main@welcomeMsg
  8995  0CA8  0084               	movwf	4
  8996  0CA9  3000               	movlw	high main@welcomeMsg
  8997  0CAA  0085               	movwf	5
  8998  0CAB  300C               	movlw	12
  8999  0CAC  0020               	movlb	0	; select bank0
  9000  0CAD  00E6               	movwf	??_main
  9001  0CAE                     u6870:	
  9002  0CAE  0016               	moviw fsr1++
  9003  0CAF  001A               	movwi fsr0++
  9004  0CB0  0BE6               	decfsz	??_main,f
  9005  0CB1  2CAE               	goto	u6870
  9006                           
  9007                           ;main.c: 26: Write_String(welcomeMsg);
  9008  0CB2  30B2               	movlw	low main@welcomeMsg
  9009  0CB3  00DD               	movwf	Write_String@message
  9010  0CB4  3000               	movlw	high main@welcomeMsg
  9011  0CB5  00DE               	movwf	Write_String@message+1
  9012  0CB6  3192  22DA  318C   	fcall	_Write_String
  9013                           
  9014                           ;main.c: 27: _delay((unsigned long)((1000)*(1000000/4000.0)));
  9015  0CB9  3002               	movlw	2
  9016  0CBA  0020               	movlb	0	; select bank0
  9017  0CBB  00E7               	movwf	??_main+1
  9018  0CBC  3045               	movlw	69
  9019  0CBD  00E6               	movwf	??_main
  9020  0CBE  30A9               	movlw	169
  9021  0CBF                     u6887:	
  9022  0CBF  0B89               	decfsz	9,f
  9023  0CC0  2CBF               	goto	u6887
  9024  0CC1  0BE6               	decfsz	??_main,f
  9025  0CC2  2CBF               	goto	u6887
  9026  0CC3  0BE7               	decfsz	??_main+1,f
  9027  0CC4  2CBF               	goto	u6887
  9028  0CC5  3200               	nop2
  9029                           
  9030                           ;main.c: 28: volatile time_t getTime, setTime;
  9031                           ;main.c: 30: struct tm *tm_t;
  9032                           ;main.c: 32: char buffer[80];
  9033                           ;main.c: 34: memset(tm_t, 0, sizeof (tm_t));
  9034  0CC6  0021               	movlb	1	; select bank1
  9035  0CC7  0842               	movf	main@tm_t^(0+128),w
  9036  0CC8  0020               	movlb	0	; select bank0
  9037  0CC9  00A0               	movwf	memset@p1
  9038  0CCA  3001               	movlw	1
  9039  0CCB  00A1               	movwf	memset@p1+1
  9040  0CCC  3000               	movlw	0
  9041  0CCD  00A2               	movwf	memset@c
  9042  0CCE  00A3               	movwf	memset@c+1
  9043  0CCF  3001               	movlw	1
  9044  0CD0  00A4               	movwf	memset@n
  9045  0CD1  3000               	movlw	0
  9046  0CD2  00A5               	movwf	memset@n+1
  9047  0CD3  3190  2020  318C   	fcall	_memset
  9048                           
  9049                           ;main.c: 37: setTime = 1503870020;
  9050  0CD6  3059               	movlw	89
  9051  0CD7  0021               	movlb	1	; select bank1
  9052  0CD8  00C1               	movwf	(main@setTime+3)^(0+128)	;volatile
  9053  0CD9  30A3               	movlw	163
  9054  0CDA  00C0               	movwf	(main@setTime+2)^(0+128)	;volatile
  9055  0CDB  303C               	movlw	60
  9056  0CDC  00BF               	movwf	(main@setTime+1)^(0+128)	;volatile
  9057  0CDD  3044               	movlw	68
  9058  0CDE  00BE               	movwf	main@setTime^(0+128)	;volatile
  9059                           
  9060                           ;main.c: 38: getTime = 0;
  9061  0CDF  3000               	movlw	0
  9062  0CE0  00C6               	movwf	(main@getTime+3)^(0+128)	;volatile
  9063  0CE1  3000               	movlw	0
  9064  0CE2  00C5               	movwf	(main@getTime+2)^(0+128)	;volatile
  9065  0CE3  3000               	movlw	0
  9066  0CE4  00C4               	movwf	(main@getTime+1)^(0+128)	;volatile
  9067  0CE5  3000               	movlw	0
  9068  0CE6  00C3               	movwf	main@getTime^(0+128)	;volatile
  9069                           
  9070                           ;main.c: 42: rtc6_SetTime(setTime);
  9071                           
  9072                           ;main.c: 40: while (1) {
  9073  0CE7  0021               	movlb	1	; select bank1
  9074  0CE8  0841               	movf	(main@setTime+3)^(0+128),w	;volatile
  9075  0CE9  0020               	movlb	0	; select bank0
  9076  0CEA  00CF               	movwf	rtc6_SetTime@t+3
  9077  0CEB  0021               	movlb	1	; select bank1
  9078  0CEC  0840               	movf	(main@setTime+2)^(0+128),w	;volatile
  9079  0CED  0020               	movlb	0	; select bank0
  9080  0CEE  00CE               	movwf	rtc6_SetTime@t+2
  9081  0CEF  0021               	movlb	1	; select bank1
  9082  0CF0  083F               	movf	(main@setTime+1)^(0+128),w	;volatile
  9083  0CF1  0020               	movlb	0	; select bank0
  9084  0CF2  00CD               	movwf	rtc6_SetTime@t+1
  9085  0CF3  0021               	movlb	1	; select bank1
  9086  0CF4  083E               	movf	main@setTime^(0+128),w	;volatile
  9087  0CF5  0020               	movlb	0	; select bank0
  9088  0CF6  00CC               	movwf	rtc6_SetTime@t
  9089  0CF7  318B  2313  318C   	fcall	_rtc6_SetTime
  9090                           
  9091                           ;main.c: 43: _delay((unsigned long)((20)*(1000000/4000.0)));
  9092  0CFA  3007               	movlw	7
  9093  0CFB  0020               	movlb	0	; select bank0
  9094  0CFC  00E6               	movwf	??_main
  9095  0CFD  307D               	movlw	125
  9096  0CFE                     u6897:	
  9097  0CFE  0B89               	decfsz	9,f
  9098  0CFF  2CFE               	goto	u6897
  9099  0D00  0BE6               	decfsz	??_main,f
  9100  0D01  2CFE               	goto	u6897
  9101  0D02                     l8258:	
  9102                           ;main.c: 44: char timeStr[];
  9103                           ;main.c: 45: while (1) {
  9104                           
  9105                           
  9106                           ;main.c: 47: getTime = rtc6_GetTime();
  9107  0D02  318C  2415  318C   	fcall	_rtc6_GetTime
  9108  0D05  0020               	movlb	0	; select bank0
  9109  0D06  0862               	movf	?_rtc6_GetTime+3,w
  9110  0D07  0021               	movlb	1	; select bank1
  9111  0D08  00C6               	movwf	(main@getTime+3)^(0+128)	;volatile
  9112  0D09  0020               	movlb	0	; select bank0
  9113  0D0A  0861               	movf	?_rtc6_GetTime+2,w
  9114  0D0B  0021               	movlb	1	; select bank1
  9115  0D0C  00C5               	movwf	(main@getTime+2)^(0+128)	;volatile
  9116  0D0D  0020               	movlb	0	; select bank0
  9117  0D0E  0860               	movf	?_rtc6_GetTime+1,w
  9118  0D0F  0021               	movlb	1	; select bank1
  9119  0D10  00C4               	movwf	(main@getTime+1)^(0+128)	;volatile
  9120  0D11  0020               	movlb	0	; select bank0
  9121  0D12  085F               	movf	?_rtc6_GetTime,w
  9122  0D13  0021               	movlb	1	; select bank1
  9123  0D14  00C3               	movwf	main@getTime^(0+128)	;volatile
  9124                           
  9125                           ;main.c: 48: tm_t = localtime(&getTime);
  9126  0D15  30C3               	movlw	(low (main@getTime| 0))& (0+255)
  9127  0D16  3194  249E  318C   	fcall	_localtime
  9128  0D19  0020               	movlb	0	; select bank0
  9129  0D1A  00E6               	movwf	??_main
  9130  0D1B  0866               	movf	??_main,w
  9131  0D1C  0021               	movlb	1	; select bank1
  9132  0D1D  00C2               	movwf	main@tm_t^(0+128)
  9133                           
  9134                           ;main.c: 49: sprintf(timeStr, "%04d-%02d-%02d %02d:%02d:%02d\n", tm_t->tm_year+1900, tm_
      +                          t->tm_mon+1, tm_t->tm_mday, tm_t->tm_hour, tm_t->tm_min, tm_t->tm_sec);
  9135  0D1E  30B2               	movlw	low main@timeStr
  9136  0D1F  0020               	movlb	0	; select bank0
  9137  0D20  00C7               	movwf	sprintf@wh
  9138  0D21  3000               	movlw	high main@timeStr
  9139  0D22  00C8               	movwf	sprintf@wh+1
  9140  0D23  3020               	movlw	low (STR_1| (0+32768))
  9141  0D24  00C9               	movwf	sprintf@f
  9142  0D25  3098               	movlw	high (STR_1| (0+32768))
  9143  0D26  00CA               	movwf	sprintf@f+1
  9144  0D27  0021               	movlb	1	; select bank1
  9145  0D28  0842               	movf	main@tm_t^(0+128),w
  9146  0D29  3E0A               	addlw	10
  9147  0D2A  0086               	movwf	6
  9148  0D2B  3001               	movlw	1	; select bank2/3
  9149  0D2C  0087               	movwf	7
  9150  0D2D  3F40               	moviw [0]fsr1
  9151  0D2E  0020               	movlb	0	; select bank0
  9152  0D2F  00E6               	movwf	??_main
  9153  0D30  3F41               	moviw [1]fsr1
  9154  0D31  00E7               	movwf	??_main+1
  9155  0D32  0866               	movf	??_main,w
  9156  0D33  3E6C               	addlw	108
  9157  0D34  00CB               	movwf	?_sprintf+4
  9158  0D35  3007               	movlw	7
  9159  0D36  3D67               	addwfc	??_main+1,w
  9160  0D37  00CC               	movwf	?_sprintf+5
  9161  0D38  0021               	movlb	1	; select bank1
  9162  0D39  0842               	movf	main@tm_t^(0+128),w
  9163  0D3A  3E08               	addlw	8
  9164  0D3B  0086               	movwf	6
  9165  0D3C  3001               	movlw	1	; select bank2/3
  9166  0D3D  0087               	movwf	7
  9167  0D3E  3F40               	moviw [0]fsr1
  9168  0D3F  0020               	movlb	0	; select bank0
  9169  0D40  00E8               	movwf	??_main+2
  9170  0D41  3F41               	moviw [1]fsr1
  9171  0D42  00E9               	movwf	??_main+3
  9172  0D43  0868               	movf	??_main+2,w
  9173  0D44  3E01               	addlw	1
  9174  0D45  00CD               	movwf	?_sprintf+6
  9175  0D46  3000               	movlw	0
  9176  0D47  3D69               	addwfc	??_main+3,w
  9177  0D48  00CE               	movwf	?_sprintf+7
  9178  0D49  0021               	movlb	1	; select bank1
  9179  0D4A  0842               	movf	main@tm_t^(0+128),w
  9180  0D4B  3E06               	addlw	6
  9181  0D4C  0086               	movwf	6
  9182  0D4D  3001               	movlw	1	; select bank2/3
  9183  0D4E  0087               	movwf	7
  9184  0D4F  3F40               	moviw [0]fsr1
  9185  0D50  0020               	movlb	0	; select bank0
  9186  0D51  00CF               	movwf	?_sprintf+8
  9187  0D52  3F41               	moviw [1]fsr1
  9188  0D53  00D0               	movwf	?_sprintf+9
  9189  0D54  0021               	movlb	1	; select bank1
  9190  0D55  0842               	movf	main@tm_t^(0+128),w
  9191  0D56  3E04               	addlw	4
  9192  0D57  0086               	movwf	6
  9193  0D58  3001               	movlw	1	; select bank2/3
  9194  0D59  0087               	movwf	7
  9195  0D5A  3F40               	moviw [0]fsr1
  9196  0D5B  0020               	movlb	0	; select bank0
  9197  0D5C  00D1               	movwf	?_sprintf+10
  9198  0D5D  3F41               	moviw [1]fsr1
  9199  0D5E  00D2               	movwf	?_sprintf+11
  9200  0D5F  0021               	movlb	1	; select bank1
  9201  0D60  0842               	movf	main@tm_t^(0+128),w
  9202  0D61  3E02               	addlw	2
  9203  0D62  0086               	movwf	6
  9204  0D63  3001               	movlw	1	; select bank2/3
  9205  0D64  0087               	movwf	7
  9206  0D65  3F40               	moviw [0]fsr1
  9207  0D66  0020               	movlb	0	; select bank0
  9208  0D67  00D3               	movwf	?_sprintf+12
  9209  0D68  3F41               	moviw [1]fsr1
  9210  0D69  00D4               	movwf	?_sprintf+13
  9211  0D6A  0021               	movlb	1	; select bank1
  9212  0D6B  0842               	movf	main@tm_t^(0+128),w
  9213  0D6C  0086               	movwf	6
  9214  0D6D  3001               	movlw	1	; select bank2/3
  9215  0D6E  0087               	movwf	7
  9216  0D6F  3F40               	moviw [0]fsr1
  9217  0D70  0020               	movlb	0	; select bank0
  9218  0D71  00D5               	movwf	?_sprintf+14
  9219  0D72  3F41               	moviw [1]fsr1
  9220  0D73  00D6               	movwf	?_sprintf+15
  9221  0D74  3190  20CB  318C   	fcall	_sprintf
  9222                           
  9223                           ;main.c: 50: Write_String(timeStr);
  9224  0D77  30B2               	movlw	low main@timeStr
  9225  0D78  0020               	movlb	0	; select bank0
  9226  0D79  00DD               	movwf	Write_String@message
  9227  0D7A  3000               	movlw	high main@timeStr
  9228  0D7B  00DE               	movwf	Write_String@message+1
  9229  0D7C  3192  22DA  318C   	fcall	_Write_String
  9230                           
  9231                           ;main.c: 51: _delay((unsigned long)((1000)*(1000000/4000.0)));
  9232  0D7F  3002               	movlw	2
  9233  0D80  0020               	movlb	0	; select bank0
  9234  0D81  00E7               	movwf	??_main+1
  9235  0D82  3045               	movlw	69
  9236  0D83  00E6               	movwf	??_main
  9237  0D84  30A9               	movlw	169
  9238  0D85                     u6907:	
  9239  0D85  0B89               	decfsz	9,f
  9240  0D86  2D85               	goto	u6907
  9241  0D87  0BE6               	decfsz	??_main,f
  9242  0D88  2D85               	goto	u6907
  9243  0D89  0BE7               	decfsz	??_main+1,f
  9244  0D8A  2D85               	goto	u6907
  9245  0D8B  3200               	nop2
  9246  0D8C  2D02               	goto	l8258
  9247  0D8D                     __end_of_main:	
  9248                           
  9249                           	psect	text1
  9250  0B13                     __ptext1:	
  9251 ;; *************** function _rtc6_SetTime *****************
  9252 ;; Defined at:
  9253 ;;		line 145 in file "mcc_generated_files/RTC6.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;  t               4   44[BANK0 ] long 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  tm_t            1   51[BANK0 ] PTR struct tm
  9258 ;;		 -> gmtime@tim(18), 
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  1    wreg      void 
  9261 ;; Registers used:
  9262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9268 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9269 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9270 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;Total ram usage:        8 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; Hardware stack levels required when called:   17
  9275 ;; This function calls:
  9276 ;;		___awmod
  9277 ;;		_localtime
  9278 ;;		_memset
  9279 ;;		_rtc6_SetComponent
  9280 ;; This function is called by:
  9281 ;;		_main
  9282 ;;		_rtc6_example
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           
  9287                           ;psect for function _rtc6_SetTime
  9288  0B13                     _rtc6_SetTime:	
  9289                           
  9290                           ;RTC6.c: 147: struct tm *tm_t;
  9291                           ;RTC6.c: 148: memset(tm_t, 0, sizeof (tm_t));
  9292                           
  9293                           ;incstack = 0
  9294 ;; hardware stack exceeded
  9295                           ; Regs used in _rtc6_SetTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9296  0B13  0020               	movlb	0	; select bank0
  9297  0B14  0853               	movf	rtc6_SetTime@tm_t,w
  9298  0B15  00A0               	movwf	memset@p1
  9299  0B16  3001               	movlw	1
  9300  0B17  00A1               	movwf	memset@p1+1
  9301  0B18  3000               	movlw	0
  9302  0B19  00A2               	movwf	memset@c
  9303  0B1A  00A3               	movwf	memset@c+1
  9304  0B1B  3001               	movlw	1
  9305  0B1C  00A4               	movwf	memset@n
  9306  0B1D  3000               	movlw	0
  9307  0B1E  00A5               	movwf	memset@n+1
  9308  0B1F  3190  2020  318B   	fcall	_memset
  9309                           
  9310                           ;RTC6.c: 150: tm_t = localtime(&t);
  9311  0B22  304C               	movlw	(low (rtc6_SetTime@t| 0))& (0+255)
  9312  0B23  3194  249E  318B   	fcall	_localtime
  9313  0B26  0020               	movlb	0	; select bank0
  9314  0B27  00D0               	movwf	??_rtc6_SetTime
  9315  0B28  0850               	movf	??_rtc6_SetTime,w
  9316  0B29  00D3               	movwf	rtc6_SetTime@tm_t
  9317                           
  9318                           ;RTC6.c: 151: rtc6_SetComponent(0x06, 0x00, tm_t->tm_year % 100);
  9319  0B2A  3064               	movlw	100
  9320  0B2B  00A0               	movwf	___awmod@divisor
  9321  0B2C  3000               	movlw	0
  9322  0B2D  00A1               	movwf	___awmod@divisor+1
  9323  0B2E  0853               	movf	rtc6_SetTime@tm_t,w
  9324  0B2F  3E0A               	addlw	10
  9325  0B30  0086               	movwf	6
  9326  0B31  3001               	movlw	1	; select bank2/3
  9327  0B32  0087               	movwf	7
  9328  0B33  3F40               	moviw [0]fsr1
  9329  0B34  00A2               	movwf	___awmod@dividend
  9330  0B35  3F41               	moviw [1]fsr1
  9331  0B36  00A3               	movwf	___awmod@dividend+1
  9332  0B37  3195  2529  318B   	fcall	___awmod
  9333  0B3A  0020               	movlb	0	; select bank0
  9334  0B3B  0820               	movf	?___awmod,w
  9335  0B3C  00D0               	movwf	??_rtc6_SetTime
  9336  0B3D  0850               	movf	??_rtc6_SetTime,w
  9337  0B3E  00D2               	movwf	_rtc6_SetTime$2707
  9338                           
  9339                           ;RTC6.c: 151: rtc6_SetComponent(0x06, 0x00, tm_t->tm_year % 100);
  9340  0B3F  01B3               	clrf	rtc6_SetComponent@mask
  9341  0B40  0852               	movf	_rtc6_SetTime$2707,w
  9342  0B41  00D0               	movwf	??_rtc6_SetTime
  9343  0B42  0850               	movf	??_rtc6_SetTime,w
  9344  0B43  00B4               	movwf	rtc6_SetComponent@time
  9345  0B44  3006               	movlw	6
  9346  0B45  3193  23E5  318B   	fcall	_rtc6_SetComponent
  9347                           
  9348                           ;RTC6.c: 152: rtc6_SetComponent(0x05, 0xD0, tm_t->tm_mon + 1);
  9349  0B48  30D0               	movlw	208
  9350  0B49  0020               	movlb	0	; select bank0
  9351  0B4A  00D0               	movwf	??_rtc6_SetTime
  9352  0B4B  0850               	movf	??_rtc6_SetTime,w
  9353  0B4C  00B3               	movwf	rtc6_SetComponent@mask
  9354  0B4D  0853               	movf	rtc6_SetTime@tm_t,w
  9355  0B4E  3E08               	addlw	8
  9356  0B4F  0086               	movwf	6
  9357  0B50  3001               	movlw	1	; select bank2/3
  9358  0B51  0087               	movwf	7
  9359  0B52  0801               	movf	1,w
  9360  0B53  3E01               	addlw	1
  9361  0B54  00D1               	movwf	??_rtc6_SetTime+1
  9362  0B55  0851               	movf	??_rtc6_SetTime+1,w
  9363  0B56  00B4               	movwf	rtc6_SetComponent@time
  9364  0B57  3005               	movlw	5
  9365  0B58  3193  23E5  318B   	fcall	_rtc6_SetComponent
  9366                           
  9367                           ;RTC6.c: 153: rtc6_SetComponent(0x04, 0x00, tm_t->tm_mday);
  9368  0B5B  0020               	movlb	0	; select bank0
  9369  0B5C  01B3               	clrf	rtc6_SetComponent@mask
  9370  0B5D  0853               	movf	rtc6_SetTime@tm_t,w
  9371  0B5E  0086               	movwf	6
  9372  0B5F  3001               	movlw	1	; select bank2/3
  9373  0B60  0087               	movwf	7
  9374  0B61  3001               	movlw	1	; select bank2/3
  9375  0B62  3F46               	moviw [6]fsr1
  9376  0B63  00B4               	movwf	rtc6_SetComponent@time
  9377  0B64  3004               	movlw	4
  9378  0B65  3193  23E5  318B   	fcall	_rtc6_SetComponent
  9379                           
  9380                           ;RTC6.c: 154: rtc6_SetComponent(0x01, 0x00, tm_t->tm_min);
  9381  0B68  0020               	movlb	0	; select bank0
  9382  0B69  01B3               	clrf	rtc6_SetComponent@mask
  9383  0B6A  0853               	movf	rtc6_SetTime@tm_t,w
  9384  0B6B  0086               	movwf	6
  9385  0B6C  3001               	movlw	1	; select bank2/3
  9386  0B6D  0087               	movwf	7
  9387  0B6E  3001               	movlw	1	; select bank2/3
  9388  0B6F  3F42               	moviw [2]fsr1
  9389  0B70  00B4               	movwf	rtc6_SetComponent@time
  9390  0B71  3001               	movlw	1
  9391  0B72  3193  23E5  318B   	fcall	_rtc6_SetComponent
  9392                           
  9393                           ;RTC6.c: 155: rtc6_SetComponent(0x00, 0x80, tm_t->tm_sec);
  9394  0B75  3080               	movlw	128
  9395  0B76  0020               	movlb	0	; select bank0
  9396  0B77  00D0               	movwf	??_rtc6_SetTime
  9397  0B78  0850               	movf	??_rtc6_SetTime,w
  9398  0B79  00B3               	movwf	rtc6_SetComponent@mask
  9399  0B7A  0853               	movf	rtc6_SetTime@tm_t,w
  9400  0B7B  0086               	movwf	6
  9401  0B7C  3001               	movlw	1	; select bank2/3
  9402  0B7D  0087               	movwf	7
  9403  0B7E  0801               	movf	1,w
  9404  0B7F  00D1               	movwf	??_rtc6_SetTime+1
  9405  0B80  0851               	movf	??_rtc6_SetTime+1,w
  9406  0B81  00B4               	movwf	rtc6_SetComponent@time
  9407  0B82  3000               	movlw	0
  9408  0B83  3193  23E5  318B   	fcall	_rtc6_SetComponent
  9409                           
  9410                           ;RTC6.c: 156: rtc6_SetComponent(0x02, 0x00, tm_t->tm_hour);
  9411  0B86  0020               	movlb	0	; select bank0
  9412  0B87  01B3               	clrf	rtc6_SetComponent@mask
  9413  0B88  0853               	movf	rtc6_SetTime@tm_t,w
  9414  0B89  0086               	movwf	6
  9415  0B8A  3001               	movlw	1	; select bank2/3
  9416  0B8B  0087               	movwf	7
  9417  0B8C  3001               	movlw	1	; select bank2/3
  9418  0B8D  3F44               	moviw [4]fsr1
  9419  0B8E  00B4               	movwf	rtc6_SetComponent@time
  9420  0B8F  3002               	movlw	2
  9421  0B90  3193  23E5         	fcall	_rtc6_SetComponent
  9422  0B92  0008               	return
  9423  0B93                     __end_of_rtc6_SetTime:	
  9424                           
  9425                           	psect	text2
  9426  13E5                     __ptext2:	
  9427 ;; *************** function _rtc6_SetComponent *****************
  9428 ;; Defined at:
  9429 ;;		line 140 in file "mcc_generated_files/RTC6.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;  location        1    wreg     unsigned char 
  9432 ;;  mask            1   19[BANK0 ] unsigned char 
  9433 ;;  time            1   20[BANK0 ] unsigned char 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;  location        1   28[BANK0 ] unsigned char 
  9436 ;;  inMemory        1   27[BANK0 ] unsigned char 
  9437 ;; Return value:  Size  Location     Type
  9438 ;;                  1    wreg      void 
  9439 ;; Registers used:
  9440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9441 ;; Tracked objects:
  9442 ;;		On entry : 0/0
  9443 ;;		On exit  : 0/0
  9444 ;;		Unchanged: 0/0
  9445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9449 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9450 ;;Total ram usage:       10 bytes
  9451 ;; Hardware stack levels used:    1
  9452 ;; Hardware stack levels required when called:   16
  9453 ;; This function calls:
  9454 ;;		___awdiv
  9455 ;;		___awmod
  9456 ;;		_rtcc_read
  9457 ;;		_rtcc_write
  9458 ;; This function is called by:
  9459 ;;		_rtc6_SetTime
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           
  9464                           ;psect for function _rtc6_SetComponent
  9465  13E5                     _rtc6_SetComponent:	
  9466                           
  9467                           ;incstack = 0
  9468 ;; hardware stack exceeded
  9469                           ; Regs used in _rtc6_SetComponent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9470                           ;rtc6_SetComponent@location stored from wreg
  9471  13E5  0020               	movlb	0	; select bank0
  9472  13E6  00BC               	movwf	rtc6_SetComponent@location
  9473                           
  9474                           ;RTC6.c: 141: uint8_t inMemory = rtcc_read(location) & mask;
  9475  13E7  083C               	movf	rtc6_SetComponent@location,w
  9476  13E8  319E  263E  3193   	fcall	_rtcc_read
  9477  13EB  0020               	movlb	0	; select bank0
  9478  13EC  0533               	andwf	rtc6_SetComponent@mask,w
  9479  13ED  00B5               	movwf	??_rtc6_SetComponent
  9480  13EE  0835               	movf	??_rtc6_SetComponent,w
  9481  13EF  00BB               	movwf	rtc6_SetComponent@inMemory
  9482                           
  9483                           ;RTC6.c: 142: rtcc_write(location, inMemory | (time % 10) | ((time / 10) << 4));
  9484  13F0  300A               	movlw	10
  9485  13F1  00A0               	movwf	___awdiv@divisor
  9486  13F2  3000               	movlw	0
  9487  13F3  00A1               	movwf	___awdiv@divisor+1
  9488  13F4  0834               	movf	rtc6_SetComponent@time,w
  9489  13F5  00B5               	movwf	??_rtc6_SetComponent
  9490  13F6  01B6               	clrf	??_rtc6_SetComponent+1
  9491  13F7  0835               	movf	??_rtc6_SetComponent,w
  9492  13F8  00A2               	movwf	___awdiv@dividend
  9493  13F9  0836               	movf	??_rtc6_SetComponent+1,w
  9494  13FA  00A3               	movwf	___awdiv@dividend+1
  9495  13FB  3196  26A5  3193   	fcall	___awdiv
  9496  13FE  0020               	movlb	0	; select bank0
  9497  13FF  0820               	movf	?___awdiv,w
  9498  1400  00B7               	movwf	??_rtc6_SetComponent+2
  9499  1401  3004               	movlw	4
  9500  1402                     u6575:	
  9501  1402  35B7               	lslf	??_rtc6_SetComponent+2,f
  9502  1403  0B89               	decfsz	9,f
  9503  1404  2C02               	goto	u6575
  9504  1405  300A               	movlw	10
  9505  1406  00A0               	movwf	___awmod@divisor
  9506  1407  3000               	movlw	0
  9507  1408  00A1               	movwf	___awmod@divisor+1
  9508  1409  0834               	movf	rtc6_SetComponent@time,w
  9509  140A  00B8               	movwf	??_rtc6_SetComponent+3
  9510  140B  01B9               	clrf	??_rtc6_SetComponent+4
  9511  140C  0838               	movf	??_rtc6_SetComponent+3,w
  9512  140D  00A2               	movwf	___awmod@dividend
  9513  140E  0839               	movf	??_rtc6_SetComponent+4,w
  9514  140F  00A3               	movwf	___awmod@dividend+1
  9515  1410  3195  2529  3193   	fcall	___awmod
  9516  1413  0020               	movlb	0	; select bank0
  9517  1414  0820               	movf	?___awmod,w
  9518  1415  0437               	iorwf	??_rtc6_SetComponent+2,w
  9519  1416  043B               	iorwf	rtc6_SetComponent@inMemory,w
  9520  1417  00BA               	movwf	??_rtc6_SetComponent+5
  9521  1418  083A               	movf	??_rtc6_SetComponent+5,w
  9522  1419  00AE               	movwf	rtcc_write@data
  9523  141A  083C               	movf	rtc6_SetComponent@location,w
  9524  141B  319F  2769         	fcall	_rtcc_write
  9525  141D  0008               	return
  9526  141E                     __end_of_rtc6_SetComponent:	
  9527                           
  9528                           	psect	text3
  9529  16A5                     __ptext3:	
  9530 ;; *************** function ___awdiv *****************
  9531 ;; Defined at:
  9532 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;  divisor         2    0[BANK0 ] int 
  9535 ;;  dividend        2    2[BANK0 ] int 
  9536 ;; Auto vars:     Size  Location     Type
  9537 ;;  quotient        2    7[BANK0 ] int 
  9538 ;;  sign            1    6[BANK0 ] unsigned char 
  9539 ;;  counter         1    5[BANK0 ] unsigned char 
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  2    0[BANK0 ] int 
  9542 ;; Registers used:
  9543 ;;		wreg, status,2, status,0
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9549 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9551 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9552 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;Total ram usage:        9 bytes
  9554 ;; Hardware stack levels used:    1
  9555 ;; Hardware stack levels required when called:    6
  9556 ;; This function calls:
  9557 ;;		Nothing
  9558 ;; This function is called by:
  9559 ;;		_rtc6_SetComponent
  9560 ;;		_asctime
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           
  9565                           ;psect for function ___awdiv
  9566  16A5                     ___awdiv:	
  9567                           
  9568                           ;incstack = 0
  9569                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9570  16A5  0020               	movlb	0	; select bank0
  9571  16A6  01A6               	clrf	___awdiv@sign
  9572  16A7  1FA1               	btfss	___awdiv@divisor+1,7
  9573  16A8  2EB0               	goto	l4366
  9574  16A9  09A0               	comf	___awdiv@divisor,f
  9575  16AA  09A1               	comf	___awdiv@divisor+1,f
  9576  16AB  0AA0               	incf	___awdiv@divisor,f
  9577  16AC  1903               	skipnz
  9578  16AD  0AA1               	incf	___awdiv@divisor+1,f
  9579  16AE  01A6               	clrf	___awdiv@sign
  9580  16AF  0AA6               	incf	___awdiv@sign,f
  9581  16B0                     l4366:	
  9582  16B0  1FA3               	btfss	___awdiv@dividend+1,7
  9583  16B1  2EBB               	goto	l4372
  9584  16B2  09A2               	comf	___awdiv@dividend,f
  9585  16B3  09A3               	comf	___awdiv@dividend+1,f
  9586  16B4  0AA2               	incf	___awdiv@dividend,f
  9587  16B5  1903               	skipnz
  9588  16B6  0AA3               	incf	___awdiv@dividend+1,f
  9589  16B7  3001               	movlw	1
  9590  16B8  00A4               	movwf	??___awdiv
  9591  16B9  0824               	movf	??___awdiv,w
  9592  16BA  06A6               	xorwf	___awdiv@sign,f
  9593  16BB                     l4372:	
  9594  16BB  01A7               	clrf	___awdiv@quotient
  9595  16BC  01A8               	clrf	___awdiv@quotient+1
  9596  16BD  0820               	movf	___awdiv@divisor,w
  9597  16BE  0421               	iorwf	___awdiv@divisor+1,w
  9598  16BF  1903               	btfsc	3,2
  9599  16C0  2EEA               	goto	l4394
  9600  16C1  01A5               	clrf	___awdiv@counter
  9601  16C2  0AA5               	incf	___awdiv@counter,f
  9602  16C3                     l4382:	
  9603  16C3  1BA1               	btfsc	___awdiv@divisor+1,7
  9604  16C4  2ECF               	goto	l4384
  9605  16C5  3001               	movlw	1
  9606  16C6                     u3105:	
  9607  16C6  35A0               	lslf	___awdiv@divisor,f
  9608  16C7  0DA1               	rlf	___awdiv@divisor+1,f
  9609  16C8  0B89               	decfsz	9,f
  9610  16C9  2EC6               	goto	u3105
  9611  16CA  3001               	movlw	1
  9612  16CB  00A4               	movwf	??___awdiv
  9613  16CC  0824               	movf	??___awdiv,w
  9614  16CD  07A5               	addwf	___awdiv@counter,f
  9615  16CE  2EC3               	goto	l4382
  9616  16CF                     l4384:	
  9617  16CF  3001               	movlw	1
  9618  16D0                     u3125:	
  9619  16D0  35A7               	lslf	___awdiv@quotient,f
  9620  16D1  0DA8               	rlf	___awdiv@quotient+1,f
  9621  16D2  0B89               	decfsz	9,f
  9622  16D3  2ED0               	goto	u3125
  9623  16D4  0821               	movf	___awdiv@divisor+1,w
  9624  16D5  0223               	subwf	___awdiv@dividend+1,w
  9625  16D6  1D03               	skipz
  9626  16D7  2EDA               	goto	u3135
  9627  16D8  0820               	movf	___awdiv@divisor,w
  9628  16D9  0222               	subwf	___awdiv@dividend,w
  9629  16DA                     u3135:	
  9630  16DA  1C03               	skipc
  9631  16DB  2EE1               	goto	l4390
  9632  16DC  0820               	movf	___awdiv@divisor,w
  9633  16DD  02A2               	subwf	___awdiv@dividend,f
  9634  16DE  0821               	movf	___awdiv@divisor+1,w
  9635  16DF  3BA3               	subwfb	___awdiv@dividend+1,f
  9636  16E0  1427               	bsf	___awdiv@quotient,0
  9637  16E1                     l4390:	
  9638  16E1  3001               	movlw	1
  9639  16E2                     u3145:	
  9640  16E2  36A1               	lsrf	___awdiv@divisor+1,f
  9641  16E3  0CA0               	rrf	___awdiv@divisor,f
  9642  16E4  0B89               	decfsz	9,f
  9643  16E5  2EE2               	goto	u3145
  9644  16E6  3001               	movlw	1
  9645  16E7  02A5               	subwf	___awdiv@counter,f
  9646  16E8  1D03               	btfss	3,2
  9647  16E9  2ECF               	goto	l4384
  9648  16EA                     l4394:	
  9649  16EA  0826               	movf	___awdiv@sign,w
  9650  16EB  1903               	btfsc	3,2
  9651  16EC  2EF2               	goto	l4398
  9652  16ED  09A7               	comf	___awdiv@quotient,f
  9653  16EE  09A8               	comf	___awdiv@quotient+1,f
  9654  16EF  0AA7               	incf	___awdiv@quotient,f
  9655  16F0  1903               	skipnz
  9656  16F1  0AA8               	incf	___awdiv@quotient+1,f
  9657  16F2                     l4398:	
  9658  16F2  0828               	movf	___awdiv@quotient+1,w
  9659  16F3  00A1               	movwf	?___awdiv+1
  9660  16F4  0827               	movf	___awdiv@quotient,w
  9661  16F5  00A0               	movwf	?___awdiv
  9662  16F6  0008               	return
  9663  16F7                     __end_of___awdiv:	
  9664                           
  9665                           	psect	text4
  9666  149E                     __ptext4:	
  9667 ;; *************** function _localtime *****************
  9668 ;; Defined at:
  9669 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  tp              1    wreg     PTR const long 
  9672 ;;		 -> main@getTime(4), rtc6_example@getTime(4), rtc6_SetTime@t(4), 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;  tp              1   43[BANK0 ] PTR const long 
  9675 ;;		 -> main@getTime(4), rtc6_example@getTime(4), rtc6_SetTime@t(4), 
  9676 ;;  t               4   39[BANK0 ] long 
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  1    wreg      PTR struct tm
  9679 ;; Registers used:
  9680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9687 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9688 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9689 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9690 ;;Total ram usage:       13 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; Hardware stack levels required when called:    9
  9693 ;; This function calls:
  9694 ;;		___lmul
  9695 ;;		_gmtime
  9696 ;; This function is called by:
  9697 ;;		_rtc6_SetTime
  9698 ;;		_main
  9699 ;;		_rtc6_example
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           
  9704                           ;psect for function _localtime
  9705  149E                     _localtime:	
  9706                           
  9707                           ;incstack = 0
  9708                           ; Regs used in _localtime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9709                           ;localtime@tp stored from wreg
  9710  149E  0020               	movlb	0	; select bank0
  9711  149F  00CB               	movwf	localtime@tp
  9712  14A0  084B               	movf	localtime@tp,w
  9713  14A1  0086               	movwf	6
  9714  14A2  0187               	clrf	7
  9715  14A3  3F40               	moviw [0]fsr1
  9716  14A4  00BF               	movwf	??_localtime
  9717  14A5  3F41               	moviw [1]fsr1
  9718  14A6  00C0               	movwf	??_localtime+1
  9719  14A7  3F42               	moviw [2]fsr1
  9720  14A8  00C1               	movwf	??_localtime+2
  9721  14A9  3F43               	moviw [3]fsr1
  9722  14AA  00C2               	movwf	??_localtime+3
  9723  14AB  086E               	movf	_time_zone,w
  9724  14AC  00A0               	movwf	___lmul@multiplier
  9725  14AD  086F               	movf	_time_zone+1,w
  9726  14AE  00A1               	movwf	___lmul@multiplier+1
  9727  14AF  0D89               	rlf	9,f
  9728  14B0  3B89               	subwfb	9,f
  9729  14B1  0989               	comf	9,f
  9730  14B2  00A2               	movwf	___lmul@multiplier+2
  9731  14B3  00A3               	movwf	___lmul@multiplier+3
  9732  14B4  3000               	movlw	0
  9733  14B5  00A7               	movwf	___lmul@multiplicand+3
  9734  14B6  3000               	movlw	0
  9735  14B7  00A6               	movwf	___lmul@multiplicand+2
  9736  14B8  3000               	movlw	0
  9737  14B9  00A5               	movwf	___lmul@multiplicand+1
  9738  14BA  303C               	movlw	60
  9739  14BB  00A4               	movwf	___lmul@multiplicand
  9740  14BC  3192  2278  3194   	fcall	___lmul
  9741  14BF  0020               	movlb	0	; select bank0
  9742  14C0  0920               	comf	?___lmul,w
  9743  14C1  00C3               	movwf	??_localtime+4
  9744  14C2  0921               	comf	?___lmul+1,w
  9745  14C3  00C4               	movwf	??_localtime+5
  9746  14C4  0922               	comf	?___lmul+2,w
  9747  14C5  00C5               	movwf	??_localtime+6
  9748  14C6  0923               	comf	?___lmul+3,w
  9749  14C7  00C6               	movwf	??_localtime+7
  9750  14C8  0AC3               	incf	??_localtime+4,f
  9751  14C9  1903               	skipnz
  9752  14CA  0AC4               	incf	??_localtime+5,f
  9753  14CB  1903               	skipnz
  9754  14CC  0AC5               	incf	??_localtime+6,f
  9755  14CD  1903               	skipnz
  9756  14CE  0AC6               	incf	??_localtime+7,f
  9757  14CF  0843               	movf	??_localtime+4,w
  9758  14D0  07BF               	addwf	??_localtime,f
  9759  14D1  0844               	movf	??_localtime+5,w
  9760  14D2  3DC0               	addwfc	??_localtime+1,f
  9761  14D3  0845               	movf	??_localtime+6,w
  9762  14D4  3DC1               	addwfc	??_localtime+2,f
  9763  14D5  0846               	movf	??_localtime+7,w
  9764  14D6  3DC2               	addwfc	??_localtime+3,f
  9765  14D7  0842               	movf	??_localtime+3,w
  9766  14D8  00CA               	movwf	localtime@t+3
  9767  14D9  0841               	movf	??_localtime+2,w
  9768  14DA  00C9               	movwf	localtime@t+2
  9769  14DB  0840               	movf	??_localtime+1,w
  9770  14DC  00C8               	movwf	localtime@t+1
  9771  14DD  083F               	movf	??_localtime,w
  9772  14DE  00C7               	movwf	localtime@t
  9773  14DF  3047               	movlw	(low (localtime@t| 0))& (0+255)
  9774  14E0  318E  26AE         	fcall	_gmtime
  9775  14E2  0008               	return
  9776  14E3                     __end_of_localtime:	
  9777                           
  9778                           	psect	text5
  9779  0EAE                     __ptext5:	
  9780 ;; *************** function _gmtime *****************
  9781 ;; Defined at:
  9782 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;  tp              1    wreg     PTR const long 
  9785 ;;		 -> localtime@t(4), 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;  tp              1   26[BANK0 ] PTR const long 
  9788 ;;		 -> localtime@t(4), 
  9789 ;;  tc              4   27[BANK0 ] struct .
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      PTR struct tm
  9792 ;; Registers used:
  9793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9800 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9801 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;Total ram usage:        7 bytes
  9804 ;; Hardware stack levels used:    1
  9805 ;; Hardware stack levels required when called:    8
  9806 ;; This function calls:
  9807 ;;		___aldiv
  9808 ;;		___almod
  9809 ;;		___awmod
  9810 ;;		_dylen
  9811 ;; This function is called by:
  9812 ;;		_localtime
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           
  9817                           ;psect for function _gmtime
  9818  0EAE                     _gmtime:	
  9819                           
  9820                           ;incstack = 0
  9821                           ; Regs used in _gmtime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9822                           ;gmtime@tp stored from wreg
  9823  0EAE  0020               	movlb	0	; select bank0
  9824  0EAF  00BA               	movwf	gmtime@tp
  9825  0EB0  083A               	movf	gmtime@tp,w
  9826  0EB1  0086               	movwf	6
  9827  0EB2  0187               	clrf	7
  9828  0EB3  3F40               	moviw [0]fsr1
  9829  0EB4  00BB               	movwf	gmtime@tc
  9830  0EB5  3F41               	moviw [1]fsr1
  9831  0EB6  00BC               	movwf	gmtime@tc+1
  9832  0EB7  3F42               	moviw [2]fsr1
  9833  0EB8  00BD               	movwf	gmtime@tc+2
  9834  0EB9  3F43               	moviw [3]fsr1
  9835  0EBA  00BE               	movwf	gmtime@tc+3
  9836  0EBB  3000               	movlw	0
  9837  0EBC  00A3               	movwf	___almod@divisor+3
  9838  0EBD  3000               	movlw	0
  9839  0EBE  00A2               	movwf	___almod@divisor+2
  9840  0EBF  3000               	movlw	0
  9841  0EC0  00A1               	movwf	___almod@divisor+1
  9842  0EC1  303C               	movlw	60
  9843  0EC2  00A0               	movwf	___almod@divisor
  9844  0EC3  083E               	movf	gmtime@tc+3,w
  9845  0EC4  00A7               	movwf	___almod@dividend+3
  9846  0EC5  083D               	movf	gmtime@tc+2,w
  9847  0EC6  00A6               	movwf	___almod@dividend+2
  9848  0EC7  083C               	movf	gmtime@tc+1,w
  9849  0EC8  00A5               	movwf	___almod@dividend+1
  9850  0EC9  083B               	movf	gmtime@tc,w
  9851  0ECA  00A4               	movwf	___almod@dividend
  9852  0ECB  3189  214A  318E   	fcall	___almod
  9853  0ECE  0020               	movlb	0	; select bank0
  9854  0ECF  0821               	movf	?___almod+1,w
  9855  0ED0  0022               	movlb	2	; select bank2
  9856  0ED1  00CA               	movwf	(gmtime@tim+1)^(0+256)
  9857  0ED2  0020               	movlb	0	; select bank0
  9858  0ED3  0820               	movf	?___almod,w
  9859  0ED4  0022               	movlb	2	; select bank2
  9860  0ED5  00C9               	movwf	gmtime@tim^(0+256)
  9861  0ED6  3000               	movlw	0
  9862  0ED7  0020               	movlb	0	; select bank0
  9863  0ED8  00A3               	movwf	___aldiv@divisor+3
  9864  0ED9  3000               	movlw	0
  9865  0EDA  00A2               	movwf	___aldiv@divisor+2
  9866  0EDB  3000               	movlw	0
  9867  0EDC  00A1               	movwf	___aldiv@divisor+1
  9868  0EDD  303C               	movlw	60
  9869  0EDE  00A0               	movwf	___aldiv@divisor
  9870  0EDF  083E               	movf	gmtime@tc+3,w
  9871  0EE0  00A7               	movwf	___aldiv@dividend+3
  9872  0EE1  083D               	movf	gmtime@tc+2,w
  9873  0EE2  00A6               	movwf	___aldiv@dividend+2
  9874  0EE3  083C               	movf	gmtime@tc+1,w
  9875  0EE4  00A5               	movwf	___aldiv@dividend+1
  9876  0EE5  083B               	movf	gmtime@tc,w
  9877  0EE6  00A4               	movwf	___aldiv@dividend
  9878  0EE7  318B  2393  318E   	fcall	___aldiv
  9879  0EEA  0020               	movlb	0	; select bank0
  9880  0EEB  0823               	movf	?___aldiv+3,w
  9881  0EEC  00BE               	movwf	gmtime@tc+3
  9882  0EED  0822               	movf	?___aldiv+2,w
  9883  0EEE  00BD               	movwf	gmtime@tc+2
  9884  0EEF  0821               	movf	?___aldiv+1,w
  9885  0EF0  00BC               	movwf	gmtime@tc+1
  9886  0EF1  0820               	movf	?___aldiv,w
  9887  0EF2  00BB               	movwf	gmtime@tc
  9888  0EF3  3000               	movlw	0
  9889  0EF4  00A3               	movwf	___almod@divisor+3
  9890  0EF5  3000               	movlw	0
  9891  0EF6  00A2               	movwf	___almod@divisor+2
  9892  0EF7  3000               	movlw	0
  9893  0EF8  00A1               	movwf	___almod@divisor+1
  9894  0EF9  303C               	movlw	60
  9895  0EFA  00A0               	movwf	___almod@divisor
  9896  0EFB  083E               	movf	gmtime@tc+3,w
  9897  0EFC  00A7               	movwf	___almod@dividend+3
  9898  0EFD  083D               	movf	gmtime@tc+2,w
  9899  0EFE  00A6               	movwf	___almod@dividend+2
  9900  0EFF  083C               	movf	gmtime@tc+1,w
  9901  0F00  00A5               	movwf	___almod@dividend+1
  9902  0F01  083B               	movf	gmtime@tc,w
  9903  0F02  00A4               	movwf	___almod@dividend
  9904  0F03  3189  214A  318E   	fcall	___almod
  9905  0F06  0020               	movlb	0	; select bank0
  9906  0F07  0821               	movf	?___almod+1,w
  9907  0F08  0022               	movlb	2	; select bank2
  9908  0F09  00CC               	movwf	((gmtime@tim+1)^(0+256)+2)
  9909  0F0A  0020               	movlb	0	; select bank0
  9910  0F0B  0820               	movf	?___almod,w
  9911  0F0C  0022               	movlb	2	; select bank2
  9912  0F0D  00CB               	movwf	(gmtime@tim^(0+256)+2)
  9913  0F0E  3000               	movlw	0
  9914  0F0F  0020               	movlb	0	; select bank0
  9915  0F10  00A3               	movwf	___aldiv@divisor+3
  9916  0F11  3000               	movlw	0
  9917  0F12  00A2               	movwf	___aldiv@divisor+2
  9918  0F13  3000               	movlw	0
  9919  0F14  00A1               	movwf	___aldiv@divisor+1
  9920  0F15  303C               	movlw	60
  9921  0F16  00A0               	movwf	___aldiv@divisor
  9922  0F17  083E               	movf	gmtime@tc+3,w
  9923  0F18  00A7               	movwf	___aldiv@dividend+3
  9924  0F19  083D               	movf	gmtime@tc+2,w
  9925  0F1A  00A6               	movwf	___aldiv@dividend+2
  9926  0F1B  083C               	movf	gmtime@tc+1,w
  9927  0F1C  00A5               	movwf	___aldiv@dividend+1
  9928  0F1D  083B               	movf	gmtime@tc,w
  9929  0F1E  00A4               	movwf	___aldiv@dividend
  9930  0F1F  318B  2393  318E   	fcall	___aldiv
  9931  0F22  0020               	movlb	0	; select bank0
  9932  0F23  0823               	movf	?___aldiv+3,w
  9933  0F24  00BE               	movwf	gmtime@tc+3
  9934  0F25  0822               	movf	?___aldiv+2,w
  9935  0F26  00BD               	movwf	gmtime@tc+2
  9936  0F27  0821               	movf	?___aldiv+1,w
  9937  0F28  00BC               	movwf	gmtime@tc+1
  9938  0F29  0820               	movf	?___aldiv,w
  9939  0F2A  00BB               	movwf	gmtime@tc
  9940  0F2B  3000               	movlw	0
  9941  0F2C  00A3               	movwf	___almod@divisor+3
  9942  0F2D  3000               	movlw	0
  9943  0F2E  00A2               	movwf	___almod@divisor+2
  9944  0F2F  3000               	movlw	0
  9945  0F30  00A1               	movwf	___almod@divisor+1
  9946  0F31  3018               	movlw	24
  9947  0F32  00A0               	movwf	___almod@divisor
  9948  0F33  083E               	movf	gmtime@tc+3,w
  9949  0F34  00A7               	movwf	___almod@dividend+3
  9950  0F35  083D               	movf	gmtime@tc+2,w
  9951  0F36  00A6               	movwf	___almod@dividend+2
  9952  0F37  083C               	movf	gmtime@tc+1,w
  9953  0F38  00A5               	movwf	___almod@dividend+1
  9954  0F39  083B               	movf	gmtime@tc,w
  9955  0F3A  00A4               	movwf	___almod@dividend
  9956  0F3B  3189  214A  318E   	fcall	___almod
  9957  0F3E  0020               	movlb	0	; select bank0
  9958  0F3F  0821               	movf	?___almod+1,w
  9959  0F40  0022               	movlb	2	; select bank2
  9960  0F41  00CE               	movwf	((gmtime@tim+1)^(0+256)+4)
  9961  0F42  0020               	movlb	0	; select bank0
  9962  0F43  0820               	movf	?___almod,w
  9963  0F44  0022               	movlb	2	; select bank2
  9964  0F45  00CD               	movwf	(gmtime@tim^(0+256)+4)
  9965  0F46  3000               	movlw	0
  9966  0F47  0020               	movlb	0	; select bank0
  9967  0F48  00A3               	movwf	___aldiv@divisor+3
  9968  0F49  3000               	movlw	0
  9969  0F4A  00A2               	movwf	___aldiv@divisor+2
  9970  0F4B  3000               	movlw	0
  9971  0F4C  00A1               	movwf	___aldiv@divisor+1
  9972  0F4D  3018               	movlw	24
  9973  0F4E  00A0               	movwf	___aldiv@divisor
  9974  0F4F  083E               	movf	gmtime@tc+3,w
  9975  0F50  00A7               	movwf	___aldiv@dividend+3
  9976  0F51  083D               	movf	gmtime@tc+2,w
  9977  0F52  00A6               	movwf	___aldiv@dividend+2
  9978  0F53  083C               	movf	gmtime@tc+1,w
  9979  0F54  00A5               	movwf	___aldiv@dividend+1
  9980  0F55  083B               	movf	gmtime@tc,w
  9981  0F56  00A4               	movwf	___aldiv@dividend
  9982  0F57  318B  2393  318E   	fcall	___aldiv
  9983  0F5A  0020               	movlb	0	; select bank0
  9984  0F5B  0821               	movf	?___aldiv+1,w
  9985  0F5C  0022               	movlb	2	; select bank2
  9986  0F5D  00D0               	movwf	((gmtime@tim+1)^(0+256)+6)
  9987  0F5E  0020               	movlb	0	; select bank0
  9988  0F5F  0820               	movf	?___aldiv,w
  9989  0F60  0022               	movlb	2	; select bank2
  9990  0F61  00CF               	movwf	(gmtime@tim^(0+256)+6)
  9991  0F62  3007               	movlw	7
  9992  0F63  0020               	movlb	0	; select bank0
  9993  0F64  00A0               	movwf	___awmod@divisor
  9994  0F65  3000               	movlw	0
  9995  0F66  00A1               	movwf	___awmod@divisor+1
  9996  0F67  0022               	movlb	2	; select bank2
  9997  0F68  084F               	movf	(gmtime@tim^(0+256)+6),w
  9998  0F69  3E04               	addlw	4
  9999  0F6A  0020               	movlb	0	; select bank0
 10000  0F6B  00A2               	movwf	___awmod@dividend
 10001  0F6C  3000               	movlw	0
 10002  0F6D  0022               	movlb	2	; select bank2
 10003  0F6E  3D50               	addwfc	((gmtime@tim+1)^(0+256)+6),w
 10004  0F6F  0020               	movlb	0	; select bank0
 10005  0F70  00A3               	movwf	___awmod@dividend+1
 10006  0F71  3195  2529  318E   	fcall	___awmod
 10007  0F74  0020               	movlb	0	; select bank0
 10008  0F75  0821               	movf	?___awmod+1,w
 10009  0F76  0022               	movlb	2	; select bank2
 10010  0F77  00D6               	movwf	((gmtime@tim+1)^(0+256)+12)
 10011  0F78  0020               	movlb	0	; select bank0
 10012  0F79  0820               	movf	?___awmod,w
 10013  0F7A  0022               	movlb	2	; select bank2
 10014  0F7B  00D5               	movwf	(gmtime@tim^(0+256)+12)
 10015  0F7C  3046               	movlw	70
 10016  0F7D  00D3               	movwf	(gmtime@tim^(0+256)+10)
 10017  0F7E  3000               	movlw	0
 10018  0F7F  00D4               	movwf	(gmtime@tim^(0+256)+11)
 10019  0F80                     l4424:	
 10020  0F80  0854               	movf	((gmtime@tim+1)^(0+256)+10),w
 10021  0F81  0020               	movlb	0	; select bank0
 10022  0F82  00B5               	movwf	dylen@yr+1
 10023  0F83  0022               	movlb	2	; select bank2
 10024  0F84  0853               	movf	(gmtime@tim^(0+256)+10),w
 10025  0F85  0020               	movlb	0	; select bank0
 10026  0F86  00B4               	movwf	dylen@yr
 10027  0F87  3193  2375  318E   	fcall	_dylen
 10028  0F8A  0022               	movlb	2	; select bank2
 10029  0F8B  0850               	movf	((gmtime@tim+1)^(0+256)+6),w
 10030  0F8C  3A80               	xorlw	128
 10031  0F8D  0020               	movlb	0	; select bank0
 10032  0F8E  00B8               	movwf	??_gmtime
 10033  0F8F  0835               	movf	?_dylen+1,w
 10034  0F90  3A80               	xorlw	128
 10035  0F91  0238               	subwf	??_gmtime,w
 10036  0F92  1D03               	skipz
 10037  0F93  2F97               	goto	u3175
 10038  0F94  0834               	movf	?_dylen,w
 10039  0F95  0022               	movlb	2	; select bank2
 10040  0F96  024F               	subwf	(gmtime@tim^(0+256)+6),w
 10041  0F97                     u3175:	
 10042  0F97  1C03               	btfss	3,0
 10043  0F98  2FB1               	goto	l4426
 10044  0F99  0022               	movlb	2	; select bank2
 10045  0F9A  0854               	movf	((gmtime@tim+1)^(0+256)+10),w
 10046  0F9B  0020               	movlb	0	; select bank0
 10047  0F9C  00B5               	movwf	dylen@yr+1
 10048  0F9D  0022               	movlb	2	; select bank2
 10049  0F9E  0853               	movf	(gmtime@tim^(0+256)+10),w
 10050  0F9F  0020               	movlb	0	; select bank0
 10051  0FA0  00B4               	movwf	dylen@yr
 10052  0FA1  3193  2375  318E   	fcall	_dylen
 10053  0FA4  0020               	movlb	0	; select bank0
 10054  0FA5  0834               	movf	?_dylen,w
 10055  0FA6  0022               	movlb	2	; select bank2
 10056  0FA7  02CF               	subwf	(gmtime@tim^(0+256)+6),f
 10057  0FA8  0020               	movlb	0	; select bank0
 10058  0FA9  0835               	movf	?_dylen+1,w
 10059  0FAA  0022               	movlb	2	; select bank2
 10060  0FAB  3BD0               	subwfb	((gmtime@tim+1)^(0+256)+6),f
 10061  0FAC  3001               	movlw	1
 10062  0FAD  07D3               	addwf	(gmtime@tim^(0+256)+10),f
 10063  0FAE  3000               	movlw	0
 10064  0FAF  3DD4               	addwfc	((gmtime@tim+1)^(0+256)+10),f
 10065  0FB0  2F80               	goto	l4424
 10066  0FB1                     l4426:	
 10067  0FB1  0022               	movlb	2	; select bank2
 10068  0FB2  0854               	movf	((gmtime@tim+1)^(0+256)+10),w
 10069  0FB3  0020               	movlb	0	; select bank0
 10070  0FB4  00B5               	movwf	dylen@yr+1
 10071  0FB5  0022               	movlb	2	; select bank2
 10072  0FB6  0853               	movf	(gmtime@tim^(0+256)+10),w
 10073  0FB7  0020               	movlb	0	; select bank0
 10074  0FB8  00B4               	movwf	dylen@yr
 10075  0FB9  3193  2375  318E   	fcall	_dylen
 10076  0FBC  0020               	movlb	0	; select bank0
 10077  0FBD  0834               	movf	?_dylen,w
 10078  0FBE  3902               	andlw	2
 10079  0FBF  00B8               	movwf	??_gmtime
 10080  0FC0  0838               	movf	??_gmtime,w
 10081  0FC1  00BB               	movwf	gmtime@tc
 10082  0FC2  0022               	movlb	2	; select bank2
 10083  0FC3  0850               	movf	((gmtime@tim+1)^(0+256)+6),w
 10084  0FC4  00D8               	movwf	((gmtime@tim+1)^(0+256)+14)
 10085  0FC5  084F               	movf	(gmtime@tim^(0+256)+6),w
 10086  0FC6  00D7               	movwf	(gmtime@tim^(0+256)+14)
 10087  0FC7  01D1               	clrf	(gmtime@tim^(0+256)+8)
 10088  0FC8  01D2               	clrf	((gmtime@tim+1)^(0+256)+8)
 10089  0FC9                     l4434:	
 10090  0FC9  0022               	movlb	2	; select bank2
 10091  0FCA  0852               	movf	((gmtime@tim+1)^(0+256)+8),w
 10092  0FCB  0085               	movwf	5
 10093  0FCC  0851               	movf	(gmtime@tim^(0+256)+8),w
 10094  0FCD  0084               	movwf	4
 10095  0FCE  3055               	movlw	low (_moninit| (0+32768))
 10096  0FCF  0784               	addwf	4,f
 10097  0FD0  3098               	movlw	high (_moninit| (0+32768))
 10098  0FD1  3D85               	addwfc	5,f
 10099  0FD2  0800               	movf	0,w	;code access
 10100  0FD3  0020               	movlb	0	; select bank0
 10101  0FD4  043B               	iorwf	gmtime@tc,w
 10102  0FD5  00B8               	movwf	??_gmtime
 10103  0FD6  0838               	movf	??_gmtime,w
 10104  0FD7  00BC               	movwf	gmtime@tc+1
 10105  0FD8  0022               	movlb	2	; select bank2
 10106  0FD9  0850               	movf	((gmtime@tim+1)^(0+256)+6),w
 10107  0FDA  3A80               	xorlw	128
 10108  0FDB  0020               	movlb	0	; select bank0
 10109  0FDC  00B9               	movwf	??_gmtime+1
 10110  0FDD  3080               	movlw	128
 10111  0FDE  0239               	subwf	??_gmtime+1,w
 10112  0FDF  1D03               	skipz
 10113  0FE0  2FE4               	goto	u3185
 10114  0FE1  083C               	movf	gmtime@tc+1,w
 10115  0FE2  0022               	movlb	2	; select bank2
 10116  0FE3  024F               	subwf	(gmtime@tim^(0+256)+6),w
 10117  0FE4                     u3185:	
 10118  0FE4  1C03               	btfss	3,0
 10119  0FE5  2FF9               	goto	l4436
 10120  0FE6  0020               	movlb	0	; select bank0
 10121  0FE7  083C               	movf	gmtime@tc+1,w
 10122  0FE8  00B8               	movwf	??_gmtime
 10123  0FE9  01B9               	clrf	??_gmtime+1
 10124  0FEA  0838               	movf	??_gmtime,w
 10125  0FEB  0022               	movlb	2	; select bank2
 10126  0FEC  02CF               	subwf	(gmtime@tim^(0+256)+6),f
 10127  0FED  0020               	movlb	0	; select bank0
 10128  0FEE  0839               	movf	??_gmtime+1,w
 10129  0FEF  0022               	movlb	2	; select bank2
 10130  0FF0  3BD0               	subwfb	((gmtime@tim+1)^(0+256)+6),f
 10131  0FF1  3001               	movlw	1
 10132  0FF2  07D1               	addwf	(gmtime@tim^(0+256)+8),f
 10133  0FF3  3000               	movlw	0
 10134  0FF4  3DD2               	addwfc	((gmtime@tim+1)^(0+256)+8),f
 10135  0FF5  1003               	clrc
 10136  0FF6  0020               	movlb	0	; select bank0
 10137  0FF7  0CBB               	rrf	gmtime@tc,f
 10138  0FF8  2FC9               	goto	l4434
 10139  0FF9                     l4436:	
 10140  0FF9  3001               	movlw	1
 10141  0FFA  0022               	movlb	2	; select bank2
 10142  0FFB  07CF               	addwf	(gmtime@tim^(0+256)+6),f
 10143  0FFC  3000               	movlw	0
 10144  0FFD  3DD0               	addwfc	((gmtime@tim+1)^(0+256)+6),f
 10145  0FFE  3049               	movlw	(low (gmtime@tim| (0+256)))& (0+255)
 10146  0FFF  0008               	return
 10147  1000                     __end_of_gmtime:	
 10148                           
 10149                           	psect	text6
 10150  1375                     __ptext6:	
 10151 ;; *************** function _dylen *****************
 10152 ;; Defined at:
 10153 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ctime.c"
 10154 ;; Parameters:    Size  Location     Type
 10155 ;;  yr              2   20[BANK0 ] unsigned int 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;		None
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  2   20[BANK0 ] int 
 10160 ;; Registers used:
 10161 ;;		wreg, status,2, status,0, pclath, cstack
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10167 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10169 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10170 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10171 ;;Total ram usage:        4 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; Hardware stack levels required when called:    7
 10174 ;; This function calls:
 10175 ;;		___lwmod
 10176 ;; This function is called by:
 10177 ;;		_gmtime
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           
 10182                           ;psect for function _dylen
 10183  1375                     _dylen:	
 10184                           
 10185                           ;incstack = 0
 10186                           ; Regs used in _dylen: [wreg+status,2+status,0+pclath+cstack]
 10187  1375  3003               	movlw	3
 10188  1376  0020               	movlb	0	; select bank0
 10189  1377  0534               	andwf	dylen@yr,w
 10190  1378  00B6               	movwf	??_dylen
 10191  1379  3000               	movlw	0
 10192  137A  0535               	andwf	dylen@yr+1,w
 10193  137B  00B7               	movwf	??_dylen+1
 10194  137C  0836               	movf	??_dylen,w
 10195  137D  0437               	iorwf	??_dylen+1,w
 10196  137E  1D03               	btfss	3,2
 10197  137F  2BA2               	goto	l4104
 10198  1380  3064               	movlw	100
 10199  1381  00AE               	movwf	___lwmod@divisor
 10200  1382  3000               	movlw	0
 10201  1383  00AF               	movwf	___lwmod@divisor+1
 10202  1384  0835               	movf	dylen@yr+1,w
 10203  1385  00B1               	movwf	___lwmod@dividend+1
 10204  1386  0834               	movf	dylen@yr,w
 10205  1387  00B0               	movwf	___lwmod@dividend
 10206  1388  3192  221D  3193   	fcall	___lwmod
 10207  138B  0020               	movlb	0	; select bank0
 10208  138C  082E               	movf	?___lwmod,w
 10209  138D  042F               	iorwf	?___lwmod+1,w
 10210  138E  1D03               	btfss	3,2
 10211  138F  2BA7               	goto	l4108
 10212  1390  3090               	movlw	144
 10213  1391  00AE               	movwf	___lwmod@divisor
 10214  1392  3001               	movlw	1
 10215  1393  00AF               	movwf	___lwmod@divisor+1
 10216  1394  0834               	movf	dylen@yr,w
 10217  1395  3E2C               	addlw	44
 10218  1396  00B0               	movwf	___lwmod@dividend
 10219  1397  3001               	movlw	1
 10220  1398  3D35               	addwfc	dylen@yr+1,w
 10221  1399  00B1               	movwf	___lwmod@dividend+1
 10222  139A  3192  221D  3193   	fcall	___lwmod
 10223  139D  0020               	movlb	0	; select bank0
 10224  139E  082E               	movf	?___lwmod,w
 10225  139F  042F               	iorwf	?___lwmod+1,w
 10226  13A0  1903               	btfsc	3,2
 10227  13A1  2BA7               	goto	l4108
 10228  13A2                     l4104:	
 10229  13A2  306D               	movlw	109
 10230  13A3  00B4               	movwf	?_dylen
 10231  13A4  3001               	movlw	1
 10232  13A5  00B5               	movwf	?_dylen+1
 10233  13A6  0008               	return
 10234  13A7                     l4108:	
 10235  13A7  306E               	movlw	110
 10236  13A8  00B4               	movwf	?_dylen
 10237  13A9  3001               	movlw	1
 10238  13AA  00B5               	movwf	?_dylen+1
 10239  13AB  0008               	return
 10240  13AC                     __end_of_dylen:	
 10241                           
 10242                           	psect	text7
 10243  1529                     __ptext7:	
 10244 ;; *************** function ___awmod *****************
 10245 ;; Defined at:
 10246 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;  divisor         2    0[BANK0 ] int 
 10249 ;;  dividend        2    2[BANK0 ] int 
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;  sign            1    6[BANK0 ] unsigned char 
 10252 ;;  counter         1    5[BANK0 ] unsigned char 
 10253 ;; Return value:  Size  Location     Type
 10254 ;;                  2    0[BANK0 ] int 
 10255 ;; Registers used:
 10256 ;;		wreg, status,2, status,0
 10257 ;; Tracked objects:
 10258 ;;		On entry : 0/0
 10259 ;;		On exit  : 0/0
 10260 ;;		Unchanged: 0/0
 10261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10262 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;Total ram usage:        7 bytes
 10267 ;; Hardware stack levels used:    1
 10268 ;; Hardware stack levels required when called:    6
 10269 ;; This function calls:
 10270 ;;		Nothing
 10271 ;; This function is called by:
 10272 ;;		_rtc6_SetComponent
 10273 ;;		_rtc6_SetTime
 10274 ;;		_gmtime
 10275 ;;		_asctime
 10276 ;; This function uses a non-reentrant model
 10277 ;;
 10278                           
 10279                           
 10280                           ;psect for function ___awmod
 10281  1529                     ___awmod:	
 10282                           
 10283                           ;incstack = 0
 10284                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10285  1529  0020               	movlb	0	; select bank0
 10286  152A  01A6               	clrf	___awmod@sign
 10287  152B  1FA3               	btfss	___awmod@dividend+1,7
 10288  152C  2D34               	goto	l4068
 10289  152D  09A2               	comf	___awmod@dividend,f
 10290  152E  09A3               	comf	___awmod@dividend+1,f
 10291  152F  0AA2               	incf	___awmod@dividend,f
 10292  1530  1903               	skipnz
 10293  1531  0AA3               	incf	___awmod@dividend+1,f
 10294  1532  01A6               	clrf	___awmod@sign
 10295  1533  0AA6               	incf	___awmod@sign,f
 10296  1534                     l4068:	
 10297  1534  1FA1               	btfss	___awmod@divisor+1,7
 10298  1535  2D3B               	goto	l4072
 10299  1536  09A0               	comf	___awmod@divisor,f
 10300  1537  09A1               	comf	___awmod@divisor+1,f
 10301  1538  0AA0               	incf	___awmod@divisor,f
 10302  1539  1903               	skipnz
 10303  153A  0AA1               	incf	___awmod@divisor+1,f
 10304  153B                     l4072:	
 10305  153B  0820               	movf	___awmod@divisor,w
 10306  153C  0421               	iorwf	___awmod@divisor+1,w
 10307  153D  1903               	btfsc	3,2
 10308  153E  2D62               	goto	l4090
 10309  153F  01A5               	clrf	___awmod@counter
 10310  1540  0AA5               	incf	___awmod@counter,f
 10311  1541                     l4080:	
 10312  1541  1BA1               	btfsc	___awmod@divisor+1,7
 10313  1542  2D4D               	goto	l4082
 10314  1543  3001               	movlw	1
 10315  1544                     u2585:	
 10316  1544  35A0               	lslf	___awmod@divisor,f
 10317  1545  0DA1               	rlf	___awmod@divisor+1,f
 10318  1546  0B89               	decfsz	9,f
 10319  1547  2D44               	goto	u2585
 10320  1548  3001               	movlw	1
 10321  1549  00A4               	movwf	??___awmod
 10322  154A  0824               	movf	??___awmod,w
 10323  154B  07A5               	addwf	___awmod@counter,f
 10324  154C  2D41               	goto	l4080
 10325  154D                     l4082:	
 10326  154D  0821               	movf	___awmod@divisor+1,w
 10327  154E  0223               	subwf	___awmod@dividend+1,w
 10328  154F  1D03               	skipz
 10329  1550  2D53               	goto	u2605
 10330  1551  0820               	movf	___awmod@divisor,w
 10331  1552  0222               	subwf	___awmod@dividend,w
 10332  1553                     u2605:	
 10333  1553  1C03               	skipc
 10334  1554  2D59               	goto	l4086
 10335  1555  0820               	movf	___awmod@divisor,w
 10336  1556  02A2               	subwf	___awmod@dividend,f
 10337  1557  0821               	movf	___awmod@divisor+1,w
 10338  1558  3BA3               	subwfb	___awmod@dividend+1,f
 10339  1559                     l4086:	
 10340  1559  3001               	movlw	1
 10341  155A                     u2615:	
 10342  155A  36A1               	lsrf	___awmod@divisor+1,f
 10343  155B  0CA0               	rrf	___awmod@divisor,f
 10344  155C  0B89               	decfsz	9,f
 10345  155D  2D5A               	goto	u2615
 10346  155E  3001               	movlw	1
 10347  155F  02A5               	subwf	___awmod@counter,f
 10348  1560  1D03               	btfss	3,2
 10349  1561  2D4D               	goto	l4082
 10350  1562                     l4090:	
 10351  1562  0826               	movf	___awmod@sign,w
 10352  1563  1903               	btfsc	3,2
 10353  1564  2D6A               	goto	l4094
 10354  1565  09A2               	comf	___awmod@dividend,f
 10355  1566  09A3               	comf	___awmod@dividend+1,f
 10356  1567  0AA2               	incf	___awmod@dividend,f
 10357  1568  1903               	skipnz
 10358  1569  0AA3               	incf	___awmod@dividend+1,f
 10359  156A                     l4094:	
 10360  156A  0823               	movf	___awmod@dividend+1,w
 10361  156B  00A1               	movwf	?___awmod+1
 10362  156C  0822               	movf	___awmod@dividend,w
 10363  156D  00A0               	movwf	?___awmod
 10364  156E  0008               	return
 10365  156F                     __end_of___awmod:	
 10366                           
 10367                           	psect	text8
 10368  094A                     __ptext8:	
 10369 ;; *************** function ___almod *****************
 10370 ;; Defined at:
 10371 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  divisor         4    0[BANK0 ] long 
 10374 ;;  dividend        4    4[BANK0 ] long 
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;  sign            1   10[BANK0 ] unsigned char 
 10377 ;;  counter         1    9[BANK0 ] unsigned char 
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  4    0[BANK0 ] long 
 10380 ;; Registers used:
 10381 ;;		wreg, status,2, status,0
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10387 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10390 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10391 ;;Total ram usage:       11 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; Hardware stack levels required when called:    6
 10394 ;; This function calls:
 10395 ;;		Nothing
 10396 ;; This function is called by:
 10397 ;;		_gmtime
 10398 ;; This function uses a non-reentrant model
 10399 ;;
 10400                           
 10401                           
 10402                           ;psect for function ___almod
 10403  094A                     ___almod:	
 10404                           
 10405                           ;incstack = 0
 10406                           ; Regs used in ___almod: [wreg+status,2+status,0]
 10407  094A  0020               	movlb	0	; select bank0
 10408  094B  01AA               	clrf	___almod@sign
 10409  094C  1FA7               	btfss	___almod@dividend+3,7
 10410  094D  295B               	goto	l1085
 10411  094E  09A4               	comf	___almod@dividend,f
 10412  094F  09A5               	comf	___almod@dividend+1,f
 10413  0950  09A6               	comf	___almod@dividend+2,f
 10414  0951  09A7               	comf	___almod@dividend+3,f
 10415  0952  0AA4               	incf	___almod@dividend,f
 10416  0953  1903               	skipnz
 10417  0954  0AA5               	incf	___almod@dividend+1,f
 10418  0955  1903               	skipnz
 10419  0956  0AA6               	incf	___almod@dividend+2,f
 10420  0957  1903               	skipnz
 10421  0958  0AA7               	incf	___almod@dividend+3,f
 10422  0959  01AA               	clrf	___almod@sign
 10423  095A  0AAA               	incf	___almod@sign,f
 10424  095B                     l1085:	
 10425  095B  1FA3               	btfss	___almod@divisor+3,7
 10426  095C  2968               	goto	l4036
 10427  095D  09A0               	comf	___almod@divisor,f
 10428  095E  09A1               	comf	___almod@divisor+1,f
 10429  095F  09A2               	comf	___almod@divisor+2,f
 10430  0960  09A3               	comf	___almod@divisor+3,f
 10431  0961  0AA0               	incf	___almod@divisor,f
 10432  0962  1903               	skipnz
 10433  0963  0AA1               	incf	___almod@divisor+1,f
 10434  0964  1903               	skipnz
 10435  0965  0AA2               	incf	___almod@divisor+2,f
 10436  0966  1903               	skipnz
 10437  0967  0AA3               	incf	___almod@divisor+3,f
 10438  0968                     l4036:	
 10439  0968  0823               	movf	___almod@divisor+3,w
 10440  0969  0422               	iorwf	___almod@divisor+2,w
 10441  096A  0421               	iorwf	___almod@divisor+1,w
 10442  096B  0420               	iorwf	___almod@divisor,w
 10443  096C  1903               	skipnz
 10444  096D  29A1               	goto	l4052
 10445  096E  01A9               	clrf	___almod@counter
 10446  096F  0AA9               	incf	___almod@counter,f
 10447  0970                     l4042:	
 10448  0970  1BA3               	btfsc	___almod@divisor+3,7
 10449  0971  297E               	goto	l4044
 10450  0972  3001               	movlw	1
 10451  0973                     u2495:	
 10452  0973  35A0               	lslf	___almod@divisor,f
 10453  0974  0DA1               	rlf	___almod@divisor+1,f
 10454  0975  0DA2               	rlf	___almod@divisor+2,f
 10455  0976  0DA3               	rlf	___almod@divisor+3,f
 10456  0977  0B89               	decfsz	9,f
 10457  0978  2973               	goto	u2495
 10458  0979  3001               	movlw	1
 10459  097A  00A8               	movwf	??___almod
 10460  097B  0828               	movf	??___almod,w
 10461  097C  07A9               	addwf	___almod@counter,f
 10462  097D  2970               	goto	l4042
 10463  097E                     l4044:	
 10464  097E  0823               	movf	___almod@divisor+3,w
 10465  097F  0227               	subwf	___almod@dividend+3,w
 10466  0980  1D03               	skipz
 10467  0981  298C               	goto	u2515
 10468  0982  0822               	movf	___almod@divisor+2,w
 10469  0983  0226               	subwf	___almod@dividend+2,w
 10470  0984  1D03               	skipz
 10471  0985  298C               	goto	u2515
 10472  0986  0821               	movf	___almod@divisor+1,w
 10473  0987  0225               	subwf	___almod@dividend+1,w
 10474  0988  1D03               	skipz
 10475  0989  298C               	goto	u2515
 10476  098A  0820               	movf	___almod@divisor,w
 10477  098B  0224               	subwf	___almod@dividend,w
 10478  098C                     u2515:	
 10479  098C  1C03               	skipc
 10480  098D  2996               	goto	l4048
 10481  098E  0820               	movf	___almod@divisor,w
 10482  098F  02A4               	subwf	___almod@dividend,f
 10483  0990  0821               	movf	___almod@divisor+1,w
 10484  0991  3BA5               	subwfb	___almod@dividend+1,f
 10485  0992  0822               	movf	___almod@divisor+2,w
 10486  0993  3BA6               	subwfb	___almod@dividend+2,f
 10487  0994  0823               	movf	___almod@divisor+3,w
 10488  0995  3BA7               	subwfb	___almod@dividend+3,f
 10489  0996                     l4048:	
 10490  0996  3001               	movlw	1
 10491  0997                     u2525:	
 10492  0997  36A3               	lsrf	___almod@divisor+3,f
 10493  0998  0CA2               	rrf	___almod@divisor+2,f
 10494  0999  0CA1               	rrf	___almod@divisor+1,f
 10495  099A  0CA0               	rrf	___almod@divisor,f
 10496  099B  0B89               	decfsz	9,f
 10497  099C  2997               	goto	u2525
 10498  099D  3001               	movlw	1
 10499  099E  02A9               	subwf	___almod@counter,f
 10500  099F  1D03               	btfss	3,2
 10501  09A0  297E               	goto	l4044
 10502  09A1                     l4052:	
 10503  09A1  082A               	movf	___almod@sign,w
 10504  09A2  1903               	btfsc	3,2
 10505  09A3  29AF               	goto	l4056
 10506  09A4  09A4               	comf	___almod@dividend,f
 10507  09A5  09A5               	comf	___almod@dividend+1,f
 10508  09A6  09A6               	comf	___almod@dividend+2,f
 10509  09A7  09A7               	comf	___almod@dividend+3,f
 10510  09A8  0AA4               	incf	___almod@dividend,f
 10511  09A9  1903               	skipnz
 10512  09AA  0AA5               	incf	___almod@dividend+1,f
 10513  09AB  1903               	skipnz
 10514  09AC  0AA6               	incf	___almod@dividend+2,f
 10515  09AD  1903               	skipnz
 10516  09AE  0AA7               	incf	___almod@dividend+3,f
 10517  09AF                     l4056:	
 10518  09AF  0827               	movf	___almod@dividend+3,w
 10519  09B0  00A3               	movwf	?___almod+3
 10520  09B1  0826               	movf	___almod@dividend+2,w
 10521  09B2  00A2               	movwf	?___almod+2
 10522  09B3  0825               	movf	___almod@dividend+1,w
 10523  09B4  00A1               	movwf	?___almod+1
 10524  09B5  0824               	movf	___almod@dividend,w
 10525  09B6  00A0               	movwf	?___almod
 10526  09B7  0008               	return
 10527  09B8                     __end_of___almod:	
 10528                           
 10529                           	psect	text9
 10530  0B93                     __ptext9:	
 10531 ;; *************** function ___aldiv *****************
 10532 ;; Defined at:
 10533 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10534 ;; Parameters:    Size  Location     Type
 10535 ;;  divisor         4    0[BANK0 ] long 
 10536 ;;  dividend        4    4[BANK0 ] long 
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;  quotient        4   11[BANK0 ] long 
 10539 ;;  sign            1   10[BANK0 ] unsigned char 
 10540 ;;  counter         1    9[BANK0 ] unsigned char 
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  4    0[BANK0 ] long 
 10543 ;; Registers used:
 10544 ;;		wreg, status,2, status,0
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10550 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;Total ram usage:       15 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; Hardware stack levels required when called:    6
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_gmtime
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564                           
 10565                           ;psect for function ___aldiv
 10566  0B93                     ___aldiv:	
 10567                           
 10568                           ;incstack = 0
 10569                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10570  0B93  0020               	movlb	0	; select bank0
 10571  0B94  01AA               	clrf	___aldiv@sign
 10572  0B95  1FA3               	btfss	___aldiv@divisor+3,7
 10573  0B96  2BA4               	goto	l1072
 10574  0B97  09A0               	comf	___aldiv@divisor,f
 10575  0B98  09A1               	comf	___aldiv@divisor+1,f
 10576  0B99  09A2               	comf	___aldiv@divisor+2,f
 10577  0B9A  09A3               	comf	___aldiv@divisor+3,f
 10578  0B9B  0AA0               	incf	___aldiv@divisor,f
 10579  0B9C  1903               	skipnz
 10580  0B9D  0AA1               	incf	___aldiv@divisor+1,f
 10581  0B9E  1903               	skipnz
 10582  0B9F  0AA2               	incf	___aldiv@divisor+2,f
 10583  0BA0  1903               	skipnz
 10584  0BA1  0AA3               	incf	___aldiv@divisor+3,f
 10585  0BA2  01AA               	clrf	___aldiv@sign
 10586  0BA3  0AAA               	incf	___aldiv@sign,f
 10587  0BA4                     l1072:	
 10588  0BA4  1FA7               	btfss	___aldiv@dividend+3,7
 10589  0BA5  2BB5               	goto	l3998
 10590  0BA6  09A4               	comf	___aldiv@dividend,f
 10591  0BA7  09A5               	comf	___aldiv@dividend+1,f
 10592  0BA8  09A6               	comf	___aldiv@dividend+2,f
 10593  0BA9  09A7               	comf	___aldiv@dividend+3,f
 10594  0BAA  0AA4               	incf	___aldiv@dividend,f
 10595  0BAB  1903               	skipnz
 10596  0BAC  0AA5               	incf	___aldiv@dividend+1,f
 10597  0BAD  1903               	skipnz
 10598  0BAE  0AA6               	incf	___aldiv@dividend+2,f
 10599  0BAF  1903               	skipnz
 10600  0BB0  0AA7               	incf	___aldiv@dividend+3,f
 10601  0BB1  3001               	movlw	1
 10602  0BB2  00A8               	movwf	??___aldiv
 10603  0BB3  0828               	movf	??___aldiv,w
 10604  0BB4  06AA               	xorwf	___aldiv@sign,f
 10605  0BB5                     l3998:	
 10606  0BB5  3000               	movlw	0
 10607  0BB6  00AE               	movwf	___aldiv@quotient+3
 10608  0BB7  3000               	movlw	0
 10609  0BB8  00AD               	movwf	___aldiv@quotient+2
 10610  0BB9  3000               	movlw	0
 10611  0BBA  00AC               	movwf	___aldiv@quotient+1
 10612  0BBB  3000               	movlw	0
 10613  0BBC  00AB               	movwf	___aldiv@quotient
 10614  0BBD  0823               	movf	___aldiv@divisor+3,w
 10615  0BBE  0422               	iorwf	___aldiv@divisor+2,w
 10616  0BBF  0421               	iorwf	___aldiv@divisor+1,w
 10617  0BC0  0420               	iorwf	___aldiv@divisor,w
 10618  0BC1  1903               	skipnz
 10619  0BC2  2BFE               	goto	l4020
 10620  0BC3  01A9               	clrf	___aldiv@counter
 10621  0BC4  0AA9               	incf	___aldiv@counter,f
 10622  0BC5                     l4006:	
 10623  0BC5  1BA3               	btfsc	___aldiv@divisor+3,7
 10624  0BC6  2BD3               	goto	l4008
 10625  0BC7  3001               	movlw	1
 10626  0BC8                     u2395:	
 10627  0BC8  35A0               	lslf	___aldiv@divisor,f
 10628  0BC9  0DA1               	rlf	___aldiv@divisor+1,f
 10629  0BCA  0DA2               	rlf	___aldiv@divisor+2,f
 10630  0BCB  0DA3               	rlf	___aldiv@divisor+3,f
 10631  0BCC  0B89               	decfsz	9,f
 10632  0BCD  2BC8               	goto	u2395
 10633  0BCE  3001               	movlw	1
 10634  0BCF  00A8               	movwf	??___aldiv
 10635  0BD0  0828               	movf	??___aldiv,w
 10636  0BD1  07A9               	addwf	___aldiv@counter,f
 10637  0BD2  2BC5               	goto	l4006
 10638  0BD3                     l4008:	
 10639  0BD3  3001               	movlw	1
 10640  0BD4                     u2415:	
 10641  0BD4  35AB               	lslf	___aldiv@quotient,f
 10642  0BD5  0DAC               	rlf	___aldiv@quotient+1,f
 10643  0BD6  0DAD               	rlf	___aldiv@quotient+2,f
 10644  0BD7  0DAE               	rlf	___aldiv@quotient+3,f
 10645  0BD8  0B89               	decfsz	9,f
 10646  0BD9  2BD4               	goto	u2415
 10647  0BDA  0823               	movf	___aldiv@divisor+3,w
 10648  0BDB  0227               	subwf	___aldiv@dividend+3,w
 10649  0BDC  1D03               	skipz
 10650  0BDD  2BE8               	goto	u2425
 10651  0BDE  0822               	movf	___aldiv@divisor+2,w
 10652  0BDF  0226               	subwf	___aldiv@dividend+2,w
 10653  0BE0  1D03               	skipz
 10654  0BE1  2BE8               	goto	u2425
 10655  0BE2  0821               	movf	___aldiv@divisor+1,w
 10656  0BE3  0225               	subwf	___aldiv@dividend+1,w
 10657  0BE4  1D03               	skipz
 10658  0BE5  2BE8               	goto	u2425
 10659  0BE6  0820               	movf	___aldiv@divisor,w
 10660  0BE7  0224               	subwf	___aldiv@dividend,w
 10661  0BE8                     u2425:	
 10662  0BE8  1C03               	skipc
 10663  0BE9  2BF3               	goto	l4016
 10664  0BEA  0820               	movf	___aldiv@divisor,w
 10665  0BEB  02A4               	subwf	___aldiv@dividend,f
 10666  0BEC  0821               	movf	___aldiv@divisor+1,w
 10667  0BED  3BA5               	subwfb	___aldiv@dividend+1,f
 10668  0BEE  0822               	movf	___aldiv@divisor+2,w
 10669  0BEF  3BA6               	subwfb	___aldiv@dividend+2,f
 10670  0BF0  0823               	movf	___aldiv@divisor+3,w
 10671  0BF1  3BA7               	subwfb	___aldiv@dividend+3,f
 10672  0BF2  142B               	bsf	___aldiv@quotient,0
 10673  0BF3                     l4016:	
 10674  0BF3  3001               	movlw	1
 10675  0BF4                     u2435:	
 10676  0BF4  36A3               	lsrf	___aldiv@divisor+3,f
 10677  0BF5  0CA2               	rrf	___aldiv@divisor+2,f
 10678  0BF6  0CA1               	rrf	___aldiv@divisor+1,f
 10679  0BF7  0CA0               	rrf	___aldiv@divisor,f
 10680  0BF8  0B89               	decfsz	9,f
 10681  0BF9  2BF4               	goto	u2435
 10682  0BFA  3001               	movlw	1
 10683  0BFB  02A9               	subwf	___aldiv@counter,f
 10684  0BFC  1D03               	btfss	3,2
 10685  0BFD  2BD3               	goto	l4008
 10686  0BFE                     l4020:	
 10687  0BFE  082A               	movf	___aldiv@sign,w
 10688  0BFF  1903               	btfsc	3,2
 10689  0C00  2C0C               	goto	l4024
 10690  0C01  09AB               	comf	___aldiv@quotient,f
 10691  0C02  09AC               	comf	___aldiv@quotient+1,f
 10692  0C03  09AD               	comf	___aldiv@quotient+2,f
 10693  0C04  09AE               	comf	___aldiv@quotient+3,f
 10694  0C05  0AAB               	incf	___aldiv@quotient,f
 10695  0C06  1903               	skipnz
 10696  0C07  0AAC               	incf	___aldiv@quotient+1,f
 10697  0C08  1903               	skipnz
 10698  0C09  0AAD               	incf	___aldiv@quotient+2,f
 10699  0C0A  1903               	skipnz
 10700  0C0B  0AAE               	incf	___aldiv@quotient+3,f
 10701  0C0C                     l4024:	
 10702  0C0C  082E               	movf	___aldiv@quotient+3,w
 10703  0C0D  00A3               	movwf	?___aldiv+3
 10704  0C0E  082D               	movf	___aldiv@quotient+2,w
 10705  0C0F  00A2               	movwf	?___aldiv+2
 10706  0C10  082C               	movf	___aldiv@quotient+1,w
 10707  0C11  00A1               	movwf	?___aldiv+1
 10708  0C12  082B               	movf	___aldiv@quotient,w
 10709  0C13  00A0               	movwf	?___aldiv
 10710  0C14  0008               	return
 10711  0C15                     __end_of___aldiv:	
 10712                           
 10713                           	psect	text10
 10714  0C15                     __ptext10:	
 10715 ;; *************** function _rtc6_GetTime *****************
 10716 ;; Defined at:
 10717 ;;		line 164 in file "mcc_generated_files/RTC6.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;		None
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;  tm_t           18    0[BANK1 ] struct tm
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  4   63[BANK0 ] long 
 10724 ;; Registers used:
 10725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10734 ;;      Totals:         0       7      18       0       0       0       0       0       0       0       0       0       
      +0       0
 10735 ;;Total ram usage:       25 bytes
 10736 ;; Hardware stack levels used:    1
 10737 ;; Hardware stack levels required when called:   17
 10738 ;; This function calls:
 10739 ;;		_memset
 10740 ;;		_mktime
 10741 ;;		_rtc6_GetComponent
 10742 ;; This function is called by:
 10743 ;;		_main
 10744 ;;		_rtc6_example
 10745 ;; This function uses a non-reentrant model
 10746 ;;
 10747                           
 10748                           
 10749                           ;psect for function _rtc6_GetTime
 10750  0C15                     _rtc6_GetTime:	
 10751                           
 10752                           ;RTC6.c: 165: struct tm tm_t;
 10753                           ;RTC6.c: 166: memset(&tm_t, 0, sizeof (tm_t));
 10754                           
 10755                           ;incstack = 0
 10756 ;; hardware stack exceeded
 10757                           ; Regs used in _rtc6_GetTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10758  0C15  30A0               	movlw	low rtc6_GetTime@tm_t
 10759  0C16  0020               	movlb	0	; select bank0
 10760  0C17  00A0               	movwf	memset@p1
 10761  0C18  3000               	movlw	high rtc6_GetTime@tm_t
 10762  0C19  00A1               	movwf	memset@p1+1
 10763  0C1A  3000               	movlw	0
 10764  0C1B  00A2               	movwf	memset@c
 10765  0C1C  00A3               	movwf	memset@c+1
 10766  0C1D  3012               	movlw	18
 10767  0C1E  00A4               	movwf	memset@n
 10768  0C1F  3000               	movlw	0
 10769  0C20  00A5               	movwf	memset@n+1
 10770  0C21  3190  2020  318C   	fcall	_memset
 10771                           
 10772                           ;RTC6.c: 168: tm_t.tm_year = rtc6_GetComponent(0x06, 0xFF) + 100;
 10773  0C24  30FF               	movlw	255
 10774  0C25  0020               	movlb	0	; select bank0
 10775  0C26  00E3               	movwf	??_rtc6_GetTime
 10776  0C27  0863               	movf	??_rtc6_GetTime,w
 10777  0C28  00B3               	movwf	rtc6_GetComponent@mask
 10778  0C29  3006               	movlw	6
 10779  0C2A  3190  20EB  318C   	fcall	_rtc6_GetComponent
 10780  0C2D  3E64               	addlw	100
 10781  0C2E  0021               	movlb	1	; select bank1
 10782  0C2F  00AA               	movwf	(rtc6_GetTime@tm_t^(0+128)+10)
 10783  0C30  3000               	movlw	0
 10784  0C31  1803               	skipnc
 10785  0C32  3001               	movlw	1
 10786  0C33  00AB               	movwf	(rtc6_GetTime@tm_t^(0+128)+11)
 10787                           
 10788                           ;RTC6.c: 169: tm_t.tm_mon = rtc6_GetComponent(0x05, 0x1F) - 1;
 10789  0C34  301F               	movlw	31
 10790  0C35  0020               	movlb	0	; select bank0
 10791  0C36  00E3               	movwf	??_rtc6_GetTime
 10792  0C37  0863               	movf	??_rtc6_GetTime,w
 10793  0C38  00B3               	movwf	rtc6_GetComponent@mask
 10794  0C39  3005               	movlw	5
 10795  0C3A  3190  20EB  318C   	fcall	_rtc6_GetComponent
 10796  0C3D  3EFF               	addlw	255
 10797  0C3E  0021               	movlb	1	; select bank1
 10798  0C3F  00A8               	movwf	(rtc6_GetTime@tm_t^(0+128)+8)
 10799  0C40  30FF               	movlw	255
 10800  0C41  1803               	skipnc
 10801  0C42  3000               	movlw	0
 10802  0C43  00A9               	movwf	(rtc6_GetTime@tm_t^(0+128)+9)
 10803                           
 10804                           ;RTC6.c: 170: tm_t.tm_mday = rtc6_GetComponent(0x04, 0x3F);
 10805  0C44  303F               	movlw	63
 10806  0C45  0020               	movlb	0	; select bank0
 10807  0C46  00E3               	movwf	??_rtc6_GetTime
 10808  0C47  0863               	movf	??_rtc6_GetTime,w
 10809  0C48  00B3               	movwf	rtc6_GetComponent@mask
 10810  0C49  3004               	movlw	4
 10811  0C4A  3190  20EB  318C   	fcall	_rtc6_GetComponent
 10812  0C4D  0020               	movlb	0	; select bank0
 10813  0C4E  00E4               	movwf	??_rtc6_GetTime+1
 10814  0C4F  01E5               	clrf	??_rtc6_GetTime+2
 10815  0C50  0864               	movf	??_rtc6_GetTime+1,w
 10816  0C51  0021               	movlb	1	; select bank1
 10817  0C52  00A6               	movwf	(rtc6_GetTime@tm_t^(0+128)+6)
 10818  0C53  0020               	movlb	0	; select bank0
 10819  0C54  0865               	movf	??_rtc6_GetTime+2,w
 10820  0C55  0021               	movlb	1	; select bank1
 10821  0C56  00A7               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+6)
 10822                           
 10823                           ;RTC6.c: 171: tm_t.tm_hour = rtc6_GetComponent(0x02, 0x3F);
 10824  0C57  303F               	movlw	63
 10825  0C58  0020               	movlb	0	; select bank0
 10826  0C59  00E3               	movwf	??_rtc6_GetTime
 10827  0C5A  0863               	movf	??_rtc6_GetTime,w
 10828  0C5B  00B3               	movwf	rtc6_GetComponent@mask
 10829  0C5C  3002               	movlw	2
 10830  0C5D  3190  20EB  318C   	fcall	_rtc6_GetComponent
 10831  0C60  0020               	movlb	0	; select bank0
 10832  0C61  00E4               	movwf	??_rtc6_GetTime+1
 10833  0C62  01E5               	clrf	??_rtc6_GetTime+2
 10834  0C63  0864               	movf	??_rtc6_GetTime+1,w
 10835  0C64  0021               	movlb	1	; select bank1
 10836  0C65  00A4               	movwf	(rtc6_GetTime@tm_t^(0+128)+4)
 10837  0C66  0020               	movlb	0	; select bank0
 10838  0C67  0865               	movf	??_rtc6_GetTime+2,w
 10839  0C68  0021               	movlb	1	; select bank1
 10840  0C69  00A5               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+4)
 10841                           
 10842                           ;RTC6.c: 172: tm_t.tm_min = rtc6_GetComponent(0x01, 0x7F);
 10843  0C6A  307F               	movlw	127
 10844  0C6B  0020               	movlb	0	; select bank0
 10845  0C6C  00E3               	movwf	??_rtc6_GetTime
 10846  0C6D  0863               	movf	??_rtc6_GetTime,w
 10847  0C6E  00B3               	movwf	rtc6_GetComponent@mask
 10848  0C6F  3001               	movlw	1
 10849  0C70  3190  20EB  318C   	fcall	_rtc6_GetComponent
 10850  0C73  0020               	movlb	0	; select bank0
 10851  0C74  00E4               	movwf	??_rtc6_GetTime+1
 10852  0C75  01E5               	clrf	??_rtc6_GetTime+2
 10853  0C76  0864               	movf	??_rtc6_GetTime+1,w
 10854  0C77  0021               	movlb	1	; select bank1
 10855  0C78  00A2               	movwf	(rtc6_GetTime@tm_t^(0+128)+2)
 10856  0C79  0020               	movlb	0	; select bank0
 10857  0C7A  0865               	movf	??_rtc6_GetTime+2,w
 10858  0C7B  0021               	movlb	1	; select bank1
 10859  0C7C  00A3               	movwf	((rtc6_GetTime@tm_t+1)^(0+128)+2)
 10860                           
 10861                           ;RTC6.c: 173: tm_t.tm_sec = rtc6_GetComponent(0x00, 0x7F);
 10862  0C7D  307F               	movlw	127
 10863  0C7E  0020               	movlb	0	; select bank0
 10864  0C7F  00E3               	movwf	??_rtc6_GetTime
 10865  0C80  0863               	movf	??_rtc6_GetTime,w
 10866  0C81  00B3               	movwf	rtc6_GetComponent@mask
 10867  0C82  3000               	movlw	0
 10868  0C83  3190  20EB  318C   	fcall	_rtc6_GetComponent
 10869  0C86  0020               	movlb	0	; select bank0
 10870  0C87  00E4               	movwf	??_rtc6_GetTime+1
 10871  0C88  01E5               	clrf	??_rtc6_GetTime+2
 10872  0C89  0864               	movf	??_rtc6_GetTime+1,w
 10873  0C8A  0021               	movlb	1	; select bank1
 10874  0C8B  00A0               	movwf	rtc6_GetTime@tm_t^(0+128)
 10875  0C8C  0020               	movlb	0	; select bank0
 10876  0C8D  0865               	movf	??_rtc6_GetTime+2,w
 10877  0C8E  0021               	movlb	1	; select bank1
 10878  0C8F  00A1               	movwf	(rtc6_GetTime@tm_t+1)^(0+128)
 10879                           
 10880                           ;RTC6.c: 175: return mktime(&tm_t);
 10881  0C90  30A0               	movlw	(low (rtc6_GetTime@tm_t| 0))& (0+255)
 10882  0C91  318D  258D         	fcall	_mktime
 10883  0C93  0020               	movlb	0	; select bank0
 10884  0C94  0853               	movf	?_mktime+3,w
 10885  0C95  00E2               	movwf	?_rtc6_GetTime+3
 10886  0C96  0852               	movf	?_mktime+2,w
 10887  0C97  00E1               	movwf	?_rtc6_GetTime+2
 10888  0C98  0851               	movf	?_mktime+1,w
 10889  0C99  00E0               	movwf	?_rtc6_GetTime+1
 10890  0C9A  0850               	movf	?_mktime,w
 10891  0C9B  00DF               	movwf	?_rtc6_GetTime
 10892  0C9C  0008               	return
 10893  0C9D                     __end_of_rtc6_GetTime:	
 10894                           
 10895                           	psect	text11
 10896  10EB                     __ptext11:	
 10897 ;; *************** function _rtc6_GetComponent *****************
 10898 ;; Defined at:
 10899 ;;		line 159 in file "mcc_generated_files/RTC6.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  location        1    wreg     unsigned char 
 10902 ;;  mask            1   19[BANK0 ] unsigned char 
 10903 ;; Auto vars:     Size  Location     Type
 10904 ;;  location        1   23[BANK0 ] unsigned char 
 10905 ;;  working         1   24[BANK0 ] unsigned char 
 10906 ;; Return value:  Size  Location     Type
 10907 ;;                  1    wreg      unsigned char 
 10908 ;; Registers used:
 10909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/0
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10915 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10917 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10918 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;Total ram usage:        6 bytes
 10920 ;; Hardware stack levels used:    1
 10921 ;; Hardware stack levels required when called:   16
 10922 ;; This function calls:
 10923 ;;		___bmul
 10924 ;;		_rtcc_read
 10925 ;; This function is called by:
 10926 ;;		_rtc6_GetTime
 10927 ;; This function uses a non-reentrant model
 10928 ;;
 10929                           
 10930                           
 10931                           ;psect for function _rtc6_GetComponent
 10932  10EB                     _rtc6_GetComponent:	
 10933                           
 10934                           ;incstack = 0
 10935 ;; hardware stack exceeded
 10936                           ; Regs used in _rtc6_GetComponent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10937                           ;rtc6_GetComponent@location stored from wreg
 10938  10EB  0020               	movlb	0	; select bank0
 10939  10EC  00B7               	movwf	rtc6_GetComponent@location
 10940                           
 10941                           ;RTC6.c: 160: uint8_t working = rtcc_read(location) & mask;
 10942  10ED  0837               	movf	rtc6_GetComponent@location,w
 10943  10EE  319E  263E  3190   	fcall	_rtcc_read
 10944  10F1  0020               	movlb	0	; select bank0
 10945  10F2  0533               	andwf	rtc6_GetComponent@mask,w
 10946  10F3  00B4               	movwf	??_rtc6_GetComponent
 10947  10F4  0834               	movf	??_rtc6_GetComponent,w
 10948  10F5  00B8               	movwf	rtc6_GetComponent@working
 10949                           
 10950                           ;RTC6.c: 161: return (working & 0x0F) + (((working & (mask & 0xF0)) >> 4) * 10);
 10951  10F6  300F               	movlw	15
 10952  10F7  0538               	andwf	rtc6_GetComponent@working,w
 10953  10F8  00B4               	movwf	??_rtc6_GetComponent
 10954  10F9  300A               	movlw	10
 10955  10FA  00B5               	movwf	??_rtc6_GetComponent+1
 10956  10FB  0835               	movf	??_rtc6_GetComponent+1,w
 10957  10FC  00A0               	movwf	___bmul@multiplicand
 10958  10FD  0833               	movf	rtc6_GetComponent@mask,w
 10959  10FE  0538               	andwf	rtc6_GetComponent@working,w
 10960  10FF  00B6               	movwf	??_rtc6_GetComponent+2
 10961  1100  3004               	movlw	4
 10962  1101                     u6585:	
 10963  1101  36B6               	lsrf	??_rtc6_GetComponent+2,f
 10964  1102  0B89               	decfsz	9,f
 10965  1103  2901               	goto	u6585
 10966  1104  0836               	movf	??_rtc6_GetComponent+2,w
 10967  1105  390F               	andlw	15
 10968  1106  319F  2757         	fcall	___bmul
 10969  1108  0020               	movlb	0	; select bank0
 10970  1109  0734               	addwf	??_rtc6_GetComponent,w
 10971  110A  0008               	return
 10972  110B                     __end_of_rtc6_GetComponent:	
 10973                           
 10974                           	psect	text12
 10975  1F57                     __ptext12:	
 10976 ;; *************** function ___bmul *****************
 10977 ;; Defined at:
 10978 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;  multiplier      1    wreg     unsigned char 
 10981 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;  multiplier      1    3[BANK0 ] unsigned char 
 10984 ;;  product         1    2[BANK0 ] unsigned char 
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      unsigned char 
 10987 ;; Registers used:
 10988 ;;		wreg, status,2, status,0
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10994 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10995 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10997 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;Total ram usage:        4 bytes
 10999 ;; Hardware stack levels used:    1
 11000 ;; Hardware stack levels required when called:    6
 11001 ;; This function calls:
 11002 ;;		Nothing
 11003 ;; This function is called by:
 11004 ;;		_rtc6_GetComponent
 11005 ;; This function uses a non-reentrant model
 11006 ;;
 11007                           
 11008                           
 11009                           ;psect for function ___bmul
 11010  1F57                     ___bmul:	
 11011                           
 11012                           ;incstack = 0
 11013                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11014                           ;___bmul@multiplier stored from wreg
 11015  1F57  0020               	movlb	0	; select bank0
 11016  1F58  00A3               	movwf	___bmul@multiplier
 11017  1F59  01A2               	clrf	___bmul@product
 11018  1F5A                     l4346:	
 11019  1F5A  1C23               	btfss	___bmul@multiplier,0
 11020  1F5B  2F60               	goto	l4350
 11021  1F5C  0820               	movf	___bmul@multiplicand,w
 11022  1F5D  00A1               	movwf	??___bmul
 11023  1F5E  0821               	movf	??___bmul,w
 11024  1F5F  07A2               	addwf	___bmul@product,f
 11025  1F60                     l4350:	
 11026  1F60  1003               	clrc
 11027  1F61  0DA0               	rlf	___bmul@multiplicand,f
 11028  1F62  1003               	clrc
 11029  1F63  0CA3               	rrf	___bmul@multiplier,f
 11030  1F64  0823               	movf	___bmul@multiplier,w
 11031  1F65  1D03               	btfss	3,2
 11032  1F66  2F5A               	goto	l4346
 11033  1F67  0822               	movf	___bmul@product,w
 11034  1F68  0008               	return
 11035  1F69                     __end_of___bmul:	
 11036                           
 11037                           	psect	text13
 11038  0D8D                     __ptext13:	
 11039 ;; *************** function _mktime *****************
 11040 ;; Defined at:
 11041 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;  timeptr         1    wreg     PTR struct tm
 11044 ;;		 -> rtc6_GetTime@tm_t(18), 
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;  timeptr         1   62[BANK0 ] PTR struct tm
 11047 ;;		 -> rtc6_GetTime@tm_t(18), 
 11048 ;;  tt              4   58[BANK0 ] long 
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  4   48[BANK0 ] long 
 11051 ;; Registers used:
 11052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11058 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;Total ram usage:       15 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; Hardware stack levels required when called:    9
 11065 ;; This function calls:
 11066 ;;		___lmul
 11067 ;;		_ymd_to_scalar
 11068 ;; This function is called by:
 11069 ;;		_rtc6_GetTime
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           
 11074                           ;psect for function _mktime
 11075  0D8D                     _mktime:	
 11076                           
 11077                           ;incstack = 0
 11078                           ; Regs used in _mktime: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11079                           ;mktime@timeptr stored from wreg
 11080  0D8D  0020               	movlb	0	; select bank0
 11081  0D8E  00DE               	movwf	mktime@timeptr
 11082  0D8F  085E               	movf	mktime@timeptr,w
 11083  0D90  3E0A               	addlw	10
 11084  0D91  0086               	movwf	6
 11085  0D92  0187               	clrf	7
 11086  0D93  3F40               	moviw [0]fsr1
 11087  0D94  00D4               	movwf	??_mktime
 11088  0D95  3F41               	moviw [1]fsr1
 11089  0D96  00D5               	movwf	??_mktime+1
 11090  0D97  0855               	movf	??_mktime+1,w
 11091  0D98  3A80               	xorlw	128
 11092  0D99  00D6               	movwf	??_mktime+2
 11093  0D9A  3080               	movlw	128
 11094  0D9B  0256               	subwf	??_mktime+2,w
 11095  0D9C  1D03               	skipz
 11096  0D9D  2DA0               	goto	u3255
 11097  0D9E  3046               	movlw	70
 11098  0D9F  0254               	subwf	??_mktime,w
 11099  0DA0                     u3255:	
 11100  0DA0  1C03               	skipc
 11101  0DA1  2DB6               	goto	l4604
 11102  0DA2  0020               	movlb	0	; select bank0
 11103  0DA3  085E               	movf	mktime@timeptr,w
 11104  0DA4  3E0A               	addlw	10
 11105  0DA5  0086               	movwf	6
 11106  0DA6  0187               	clrf	7
 11107  0DA7  3F40               	moviw [0]fsr1
 11108  0DA8  00D4               	movwf	??_mktime
 11109  0DA9  3F41               	moviw [1]fsr1
 11110  0DAA  00D5               	movwf	??_mktime+1
 11111  0DAB  0855               	movf	??_mktime+1,w
 11112  0DAC  3A80               	xorlw	128
 11113  0DAD  00D6               	movwf	??_mktime+2
 11114  0DAE  3080               	movlw	128
 11115  0DAF  0256               	subwf	??_mktime+2,w
 11116  0DB0  1D03               	skipz
 11117  0DB1  2DB4               	goto	u3265
 11118  0DB2  308B               	movlw	139
 11119  0DB3  0254               	subwf	??_mktime,w
 11120  0DB4                     u3265:	
 11121  0DB4  1C03               	skipc
 11122  0DB5  2DBF               	goto	l4606
 11123  0DB6                     l4604:	
 11124  0DB6  30FF               	movlw	255
 11125  0DB7  0020               	movlb	0	; select bank0
 11126  0DB8  00DD               	movwf	mktime@tt+3
 11127  0DB9  30FF               	movlw	255
 11128  0DBA  00DC               	movwf	mktime@tt+2
 11129  0DBB  30FF               	movlw	255
 11130  0DBC  00DB               	movwf	mktime@tt+1
 11131  0DBD  30FF               	movlw	255
 11132  0DBE  2EA4               	goto	L1
 11133  0DBF                     l4606:	
 11134  0DBF  0020               	movlb	0	; select bank0
 11135  0DC0  085E               	movf	mktime@timeptr,w
 11136  0DC1  3E0A               	addlw	10
 11137  0DC2  0086               	movwf	6
 11138  0DC3  0187               	clrf	7
 11139  0DC4  3F40               	moviw [0]fsr1
 11140  0DC5  00D4               	movwf	??_mktime
 11141  0DC6  3F41               	moviw [1]fsr1
 11142  0DC7  00D5               	movwf	??_mktime+1
 11143  0DC8  0854               	movf	??_mktime,w
 11144  0DC9  3E6C               	addlw	108
 11145  0DCA  00C0               	movwf	ymd_to_scalar@yr
 11146  0DCB  3007               	movlw	7
 11147  0DCC  3D55               	addwfc	??_mktime+1,w
 11148  0DCD  00C1               	movwf	ymd_to_scalar@yr+1
 11149  0DCE  085E               	movf	mktime@timeptr,w
 11150  0DCF  3E08               	addlw	8
 11151  0DD0  0086               	movwf	6
 11152  0DD1  0187               	clrf	7
 11153  0DD2  3F40               	moviw [0]fsr1
 11154  0DD3  00D6               	movwf	??_mktime+2
 11155  0DD4  3F41               	moviw [1]fsr1
 11156  0DD5  00D7               	movwf	??_mktime+3
 11157  0DD6  0856               	movf	??_mktime+2,w
 11158  0DD7  3E01               	addlw	1
 11159  0DD8  00C2               	movwf	ymd_to_scalar@mo
 11160  0DD9  3000               	movlw	0
 11161  0DDA  3D57               	addwfc	??_mktime+3,w
 11162  0DDB  00C3               	movwf	ymd_to_scalar@mo+1
 11163  0DDC  085E               	movf	mktime@timeptr,w
 11164  0DDD  3E06               	addlw	6
 11165  0DDE  0086               	movwf	6
 11166  0DDF  0187               	clrf	7
 11167  0DE0  3F40               	moviw [0]fsr1
 11168  0DE1  00C4               	movwf	ymd_to_scalar@day
 11169  0DE2  3F41               	moviw [1]fsr1
 11170  0DE3  00C5               	movwf	ymd_to_scalar@day+1
 11171  0DE4  3196  26F7  318D   	fcall	_ymd_to_scalar
 11172  0DE7  0020               	movlb	0	; select bank0
 11173  0DE8  0843               	movf	?_ymd_to_scalar+3,w
 11174  0DE9  00DD               	movwf	mktime@tt+3
 11175  0DEA  0842               	movf	?_ymd_to_scalar+2,w
 11176  0DEB  00DC               	movwf	mktime@tt+2
 11177  0DEC  0841               	movf	?_ymd_to_scalar+1,w
 11178  0DED  00DB               	movwf	mktime@tt+1
 11179  0DEE  0840               	movf	?_ymd_to_scalar,w
 11180  0DEF  00DA               	movwf	mktime@tt
 11181  0DF0  30B2               	movlw	178
 11182  0DF1  00C0               	movwf	ymd_to_scalar@yr
 11183  0DF2  3007               	movlw	7
 11184  0DF3  00C1               	movwf	ymd_to_scalar@yr+1
 11185  0DF4  3001               	movlw	1
 11186  0DF5  00C2               	movwf	ymd_to_scalar@mo
 11187  0DF6  3000               	movlw	0
 11188  0DF7  00C3               	movwf	ymd_to_scalar@mo+1
 11189  0DF8  3001               	movlw	1
 11190  0DF9  00C4               	movwf	ymd_to_scalar@day
 11191  0DFA  3000               	movlw	0
 11192  0DFB  00C5               	movwf	ymd_to_scalar@day+1
 11193  0DFC  3196  26F7  318D   	fcall	_ymd_to_scalar
 11194  0DFF  0020               	movlb	0	; select bank0
 11195  0E00  0840               	movf	?_ymd_to_scalar,w
 11196  0E01  02DA               	subwf	mktime@tt,f
 11197  0E02  0841               	movf	?_ymd_to_scalar+1,w
 11198  0E03  3BDB               	subwfb	mktime@tt+1,f
 11199  0E04  0842               	movf	?_ymd_to_scalar+2,w
 11200  0E05  3BDC               	subwfb	mktime@tt+2,f
 11201  0E06  0843               	movf	?_ymd_to_scalar+3,w
 11202  0E07  3BDD               	subwfb	mktime@tt+3,f
 11203  0E08  085E               	movf	mktime@timeptr,w
 11204  0E09  3E04               	addlw	4
 11205  0E0A  0086               	movwf	6
 11206  0E0B  0187               	clrf	7
 11207  0E0C  3F40               	moviw [0]fsr1
 11208  0E0D  00D4               	movwf	??_mktime
 11209  0E0E  3F41               	moviw [1]fsr1
 11210  0E0F  00D5               	movwf	??_mktime+1
 11211  0E10  0854               	movf	??_mktime,w
 11212  0E11  00D6               	movwf	??_mktime+2
 11213  0E12  0855               	movf	??_mktime+1,w
 11214  0E13  00D7               	movwf	??_mktime+3
 11215  0E14  3000               	movlw	0
 11216  0E15  1BD7               	btfsc	??_mktime+3,7
 11217  0E16  30FF               	movlw	255
 11218  0E17  00D8               	movwf	??_mktime+4
 11219  0E18  00D9               	movwf	??_mktime+5
 11220  0E19  085D               	movf	mktime@tt+3,w
 11221  0E1A  00A3               	movwf	___lmul@multiplier+3
 11222  0E1B  085C               	movf	mktime@tt+2,w
 11223  0E1C  00A2               	movwf	___lmul@multiplier+2
 11224  0E1D  085B               	movf	mktime@tt+1,w
 11225  0E1E  00A1               	movwf	___lmul@multiplier+1
 11226  0E1F  085A               	movf	mktime@tt,w
 11227  0E20  00A0               	movwf	___lmul@multiplier
 11228  0E21  3000               	movlw	0
 11229  0E22  00A7               	movwf	___lmul@multiplicand+3
 11230  0E23  3000               	movlw	0
 11231  0E24  00A6               	movwf	___lmul@multiplicand+2
 11232  0E25  3000               	movlw	0
 11233  0E26  00A5               	movwf	___lmul@multiplicand+1
 11234  0E27  3018               	movlw	24
 11235  0E28  00A4               	movwf	___lmul@multiplicand
 11236  0E29  3192  2278  318D   	fcall	___lmul
 11237  0E2C  0020               	movlb	0	; select bank0
 11238  0E2D  0820               	movf	?___lmul,w
 11239  0E2E  07D6               	addwf	??_mktime+2,f
 11240  0E2F  0821               	movf	?___lmul+1,w
 11241  0E30  3DD7               	addwfc	??_mktime+3,f
 11242  0E31  0822               	movf	?___lmul+2,w
 11243  0E32  3DD8               	addwfc	??_mktime+4,f
 11244  0E33  0823               	movf	?___lmul+3,w
 11245  0E34  3DD9               	addwfc	??_mktime+5,f
 11246  0E35  0859               	movf	??_mktime+5,w
 11247  0E36  00DD               	movwf	mktime@tt+3
 11248  0E37  0858               	movf	??_mktime+4,w
 11249  0E38  00DC               	movwf	mktime@tt+2
 11250  0E39  0857               	movf	??_mktime+3,w
 11251  0E3A  00DB               	movwf	mktime@tt+1
 11252  0E3B  0856               	movf	??_mktime+2,w
 11253  0E3C  00DA               	movwf	mktime@tt
 11254  0E3D  085E               	movf	mktime@timeptr,w
 11255  0E3E  3E02               	addlw	2
 11256  0E3F  0086               	movwf	6
 11257  0E40  0187               	clrf	7
 11258  0E41  3F40               	moviw [0]fsr1
 11259  0E42  00D4               	movwf	??_mktime
 11260  0E43  3F41               	moviw [1]fsr1
 11261  0E44  00D5               	movwf	??_mktime+1
 11262  0E45  0854               	movf	??_mktime,w
 11263  0E46  00D6               	movwf	??_mktime+2
 11264  0E47  0855               	movf	??_mktime+1,w
 11265  0E48  00D7               	movwf	??_mktime+3
 11266  0E49  3000               	movlw	0
 11267  0E4A  1BD7               	btfsc	??_mktime+3,7
 11268  0E4B  30FF               	movlw	255
 11269  0E4C  00D8               	movwf	??_mktime+4
 11270  0E4D  00D9               	movwf	??_mktime+5
 11271  0E4E  085D               	movf	mktime@tt+3,w
 11272  0E4F  00A3               	movwf	___lmul@multiplier+3
 11273  0E50  085C               	movf	mktime@tt+2,w
 11274  0E51  00A2               	movwf	___lmul@multiplier+2
 11275  0E52  085B               	movf	mktime@tt+1,w
 11276  0E53  00A1               	movwf	___lmul@multiplier+1
 11277  0E54  085A               	movf	mktime@tt,w
 11278  0E55  00A0               	movwf	___lmul@multiplier
 11279  0E56  3000               	movlw	0
 11280  0E57  00A7               	movwf	___lmul@multiplicand+3
 11281  0E58  3000               	movlw	0
 11282  0E59  00A6               	movwf	___lmul@multiplicand+2
 11283  0E5A  3000               	movlw	0
 11284  0E5B  00A5               	movwf	___lmul@multiplicand+1
 11285  0E5C  303C               	movlw	60
 11286  0E5D  00A4               	movwf	___lmul@multiplicand
 11287  0E5E  3192  2278  318D   	fcall	___lmul
 11288  0E61  0020               	movlb	0	; select bank0
 11289  0E62  0820               	movf	?___lmul,w
 11290  0E63  07D6               	addwf	??_mktime+2,f
 11291  0E64  0821               	movf	?___lmul+1,w
 11292  0E65  3DD7               	addwfc	??_mktime+3,f
 11293  0E66  0822               	movf	?___lmul+2,w
 11294  0E67  3DD8               	addwfc	??_mktime+4,f
 11295  0E68  0823               	movf	?___lmul+3,w
 11296  0E69  3DD9               	addwfc	??_mktime+5,f
 11297  0E6A  0859               	movf	??_mktime+5,w
 11298  0E6B  00DD               	movwf	mktime@tt+3
 11299  0E6C  0858               	movf	??_mktime+4,w
 11300  0E6D  00DC               	movwf	mktime@tt+2
 11301  0E6E  0857               	movf	??_mktime+3,w
 11302  0E6F  00DB               	movwf	mktime@tt+1
 11303  0E70  0856               	movf	??_mktime+2,w
 11304  0E71  00DA               	movwf	mktime@tt
 11305  0E72  085E               	movf	mktime@timeptr,w
 11306  0E73  0086               	movwf	6
 11307  0E74  0187               	clrf	7
 11308  0E75  3F40               	moviw [0]fsr1
 11309  0E76  00D4               	movwf	??_mktime
 11310  0E77  3F41               	moviw [1]fsr1
 11311  0E78  00D5               	movwf	??_mktime+1
 11312  0E79  0854               	movf	??_mktime,w
 11313  0E7A  00D6               	movwf	??_mktime+2
 11314  0E7B  0855               	movf	??_mktime+1,w
 11315  0E7C  00D7               	movwf	??_mktime+3
 11316  0E7D  3000               	movlw	0
 11317  0E7E  1BD7               	btfsc	??_mktime+3,7
 11318  0E7F  30FF               	movlw	255
 11319  0E80  00D8               	movwf	??_mktime+4
 11320  0E81  00D9               	movwf	??_mktime+5
 11321  0E82  085D               	movf	mktime@tt+3,w
 11322  0E83  00A3               	movwf	___lmul@multiplier+3
 11323  0E84  085C               	movf	mktime@tt+2,w
 11324  0E85  00A2               	movwf	___lmul@multiplier+2
 11325  0E86  085B               	movf	mktime@tt+1,w
 11326  0E87  00A1               	movwf	___lmul@multiplier+1
 11327  0E88  085A               	movf	mktime@tt,w
 11328  0E89  00A0               	movwf	___lmul@multiplier
 11329  0E8A  3000               	movlw	0
 11330  0E8B  00A7               	movwf	___lmul@multiplicand+3
 11331  0E8C  3000               	movlw	0
 11332  0E8D  00A6               	movwf	___lmul@multiplicand+2
 11333  0E8E  3000               	movlw	0
 11334  0E8F  00A5               	movwf	___lmul@multiplicand+1
 11335  0E90  303C               	movlw	60
 11336  0E91  00A4               	movwf	___lmul@multiplicand
 11337  0E92  3192  2278         	fcall	___lmul
 11338  0E94  0020               	movlb	0	; select bank0
 11339  0E95  0820               	movf	?___lmul,w
 11340  0E96  07D6               	addwf	??_mktime+2,f
 11341  0E97  0821               	movf	?___lmul+1,w
 11342  0E98  3DD7               	addwfc	??_mktime+3,f
 11343  0E99  0822               	movf	?___lmul+2,w
 11344  0E9A  3DD8               	addwfc	??_mktime+4,f
 11345  0E9B  0823               	movf	?___lmul+3,w
 11346  0E9C  3DD9               	addwfc	??_mktime+5,f
 11347  0E9D  0859               	movf	??_mktime+5,w
 11348  0E9E  00DD               	movwf	mktime@tt+3
 11349  0E9F  0858               	movf	??_mktime+4,w
 11350  0EA0  00DC               	movwf	mktime@tt+2
 11351  0EA1  0857               	movf	??_mktime+3,w
 11352  0EA2  00DB               	movwf	mktime@tt+1
 11353  0EA3  0856               	movf	??_mktime+2,w
 11354  0EA4                     L1:	
 11355  0EA4  00DA               	movwf	mktime@tt
 11356  0EA5  085D               	movf	mktime@tt+3,w
 11357  0EA6  00D3               	movwf	?_mktime+3
 11358  0EA7  085C               	movf	mktime@tt+2,w
 11359  0EA8  00D2               	movwf	?_mktime+2
 11360  0EA9  085B               	movf	mktime@tt+1,w
 11361  0EAA  00D1               	movwf	?_mktime+1
 11362  0EAB  085A               	movf	mktime@tt,w
 11363  0EAC  00D0               	movwf	?_mktime
 11364  0EAD  0008               	return
 11365  0EAE                     __end_of_mktime:	
 11366                           
 11367                           	psect	text14
 11368  16F7                     __ptext14:	
 11369 ;; *************** function _ymd_to_scalar *****************
 11370 ;; Defined at:
 11371 ;;		line 40 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;  yr              2   32[BANK0 ] unsigned int 
 11374 ;;  mo              2   34[BANK0 ] unsigned int 
 11375 ;;  day             2   36[BANK0 ] unsigned int 
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;  scalar          4   44[BANK0 ] long 
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  4   32[BANK0 ] long 
 11380 ;; Registers used:
 11381 ;;		wreg, status,2, status,0, pclath, cstack
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11387 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11388 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;Total ram usage:       16 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    8
 11394 ;; This function calls:
 11395 ;;		_isleap
 11396 ;;		_months_to_days
 11397 ;;		_years_to_days
 11398 ;; This function is called by:
 11399 ;;		_mktime
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           
 11403                           
 11404                           ;psect for function _ymd_to_scalar
 11405  16F7                     _ymd_to_scalar:	
 11406                           
 11407                           ;incstack = 0
 11408                           ; Regs used in _ymd_to_scalar: [wreg+status,2+status,0+pclath+cstack]
 11409  16F7  0020               	movlb	0	; select bank0
 11410  16F8  0843               	movf	ymd_to_scalar@mo+1,w
 11411  16F9  00AF               	movwf	months_to_days@month+1
 11412  16FA  0842               	movf	ymd_to_scalar@mo,w
 11413  16FB  00AE               	movwf	months_to_days@month
 11414  16FC  3190  20AC  3196   	fcall	_months_to_days
 11415  16FF  0020               	movlb	0	; select bank0
 11416  1700  0844               	movf	ymd_to_scalar@day,w
 11417  1701  072E               	addwf	?_months_to_days,w
 11418  1702  00CC               	movwf	ymd_to_scalar@scalar
 11419  1703  0845               	movf	ymd_to_scalar@day+1,w
 11420  1704  3D2F               	addwfc	?_months_to_days+1,w
 11421  1705  00CD               	movwf	ymd_to_scalar@scalar+1
 11422  1706  01CE               	clrf	ymd_to_scalar@scalar+2
 11423  1707  01CF               	clrf	ymd_to_scalar@scalar+3
 11424  1708  3000               	movlw	0
 11425  1709  0243               	subwf	ymd_to_scalar@mo+1,w
 11426  170A  3003               	movlw	3
 11427  170B  1903               	skipnz
 11428  170C  0242               	subwf	ymd_to_scalar@mo,w
 11429  170D  1C03               	skipc
 11430  170E  2F32               	goto	l1427
 11431  170F  0841               	movf	ymd_to_scalar@yr+1,w
 11432  1710  00B5               	movwf	isleap@yr+1
 11433  1711  0840               	movf	ymd_to_scalar@yr,w
 11434  1712  00B4               	movwf	isleap@yr
 11435  1713  3193  230C  3196   	fcall	_isleap
 11436  1716  0020               	movlb	0	; select bank0
 11437  1717  0834               	movf	?_isleap,w
 11438  1718  0435               	iorwf	?_isleap+1,w
 11439  1719  1D03               	btfss	3,2
 11440  171A  2F1D               	goto	l4448
 11441  171B  3002               	movlw	2
 11442  171C  2F1E               	goto	L2
 11443  171D                     l4448:	
 11444  171D  3001               	movlw	1
 11445  171E                     L2:	
 11446  171E  00CA               	movwf	_ymd_to_scalar$2151
 11447  171F  3000               	movlw	0
 11448  1720  00CB               	movwf	_ymd_to_scalar$2151+1
 11449  1721  084A               	movf	_ymd_to_scalar$2151,w
 11450  1722  00C6               	movwf	??_ymd_to_scalar
 11451  1723  084B               	movf	_ymd_to_scalar$2151+1,w
 11452  1724  00C7               	movwf	??_ymd_to_scalar+1
 11453  1725  3000               	movlw	0
 11454  1726  1BC7               	btfsc	??_ymd_to_scalar+1,7
 11455  1727  30FF               	movlw	255
 11456  1728  00C8               	movwf	??_ymd_to_scalar+2
 11457  1729  00C9               	movwf	??_ymd_to_scalar+3
 11458  172A  0846               	movf	??_ymd_to_scalar,w
 11459  172B  02CC               	subwf	ymd_to_scalar@scalar,f
 11460  172C  0847               	movf	??_ymd_to_scalar+1,w
 11461  172D  3BCD               	subwfb	ymd_to_scalar@scalar+1,f
 11462  172E  0848               	movf	??_ymd_to_scalar+2,w
 11463  172F  3BCE               	subwfb	ymd_to_scalar@scalar+2,f
 11464  1730  0849               	movf	??_ymd_to_scalar+3,w
 11465  1731  3BCF               	subwfb	ymd_to_scalar@scalar+3,f
 11466  1732                     l1427:	
 11467  1732  3001               	movlw	1
 11468  1733  02C0               	subwf	ymd_to_scalar@yr,f
 11469  1734  3000               	movlw	0
 11470  1735  3BC1               	subwfb	ymd_to_scalar@yr+1,f
 11471  1736  0841               	movf	ymd_to_scalar@yr+1,w
 11472  1737  00AF               	movwf	years_to_days@yr+1
 11473  1738  0840               	movf	ymd_to_scalar@yr,w
 11474  1739  00AE               	movwf	years_to_days@yr
 11475  173A  3189  21B8         	fcall	_years_to_days
 11476  173C  0020               	movlb	0	; select bank0
 11477  173D  082E               	movf	?_years_to_days,w
 11478  173E  07CC               	addwf	ymd_to_scalar@scalar,f
 11479  173F  082F               	movf	?_years_to_days+1,w
 11480  1740  3DCD               	addwfc	ymd_to_scalar@scalar+1,f
 11481  1741  0830               	movf	?_years_to_days+2,w
 11482  1742  3DCE               	addwfc	ymd_to_scalar@scalar+2,f
 11483  1743  0831               	movf	?_years_to_days+3,w
 11484  1744  3DCF               	addwfc	ymd_to_scalar@scalar+3,f
 11485  1745  084F               	movf	ymd_to_scalar@scalar+3,w
 11486  1746  00C3               	movwf	?_ymd_to_scalar+3
 11487  1747  084E               	movf	ymd_to_scalar@scalar+2,w
 11488  1748  00C2               	movwf	?_ymd_to_scalar+2
 11489  1749  084D               	movf	ymd_to_scalar@scalar+1,w
 11490  174A  00C1               	movwf	?_ymd_to_scalar+1
 11491  174B  084C               	movf	ymd_to_scalar@scalar,w
 11492  174C  00C0               	movwf	?_ymd_to_scalar
 11493  174D  0008               	return
 11494  174E                     __end_of_ymd_to_scalar:	
 11495                           
 11496                           	psect	text15
 11497  09B8                     __ptext15:	
 11498 ;; *************** function _years_to_days *****************
 11499 ;; Defined at:
 11500 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 11501 ;; Parameters:    Size  Location     Type
 11502 ;;  yr              2   14[BANK0 ] unsigned int 
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;		None
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  4   14[BANK0 ] long 
 11507 ;; Registers used:
 11508 ;;		wreg, status,2, status,0, pclath, cstack
 11509 ;; Tracked objects:
 11510 ;;		On entry : 0/0
 11511 ;;		On exit  : 0/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11514 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11516 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11517 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11518 ;;Total ram usage:       18 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; Hardware stack levels required when called:    7
 11521 ;; This function calls:
 11522 ;;		___lmul
 11523 ;;		___lwdiv
 11524 ;; This function is called by:
 11525 ;;		_ymd_to_scalar
 11526 ;; This function uses a non-reentrant model
 11527 ;;
 11528                           
 11529                           
 11530                           ;psect for function _years_to_days
 11531  09B8                     _years_to_days:	
 11532                           
 11533                           ;incstack = 0
 11534                           ; Regs used in _years_to_days: [wreg+status,2+status,0+pclath+cstack]
 11535  09B8  3064               	movlw	100
 11536  09B9  0020               	movlb	0	; select bank0
 11537  09BA  00A6               	movwf	___lwdiv@divisor
 11538  09BB  3000               	movlw	0
 11539  09BC  00A7               	movwf	___lwdiv@divisor+1
 11540  09BD  082F               	movf	years_to_days@yr+1,w
 11541  09BE  00A9               	movwf	___lwdiv@dividend+1
 11542  09BF  082E               	movf	years_to_days@yr,w
 11543  09C0  00A8               	movwf	___lwdiv@dividend
 11544  09C1  3193  2340  3189   	fcall	___lwdiv
 11545  09C4  0020               	movlb	0	; select bank0
 11546  09C5  0826               	movf	?___lwdiv,w
 11547  09C6  00B2               	movwf	??_years_to_days
 11548  09C7  0827               	movf	?___lwdiv+1,w
 11549  09C8  00B3               	movwf	??_years_to_days+1
 11550  09C9  01B4               	clrf	??_years_to_days+2
 11551  09CA  01B5               	clrf	??_years_to_days+3
 11552  09CB  09B2               	comf	??_years_to_days,f
 11553  09CC  09B3               	comf	??_years_to_days+1,f
 11554  09CD  09B4               	comf	??_years_to_days+2,f
 11555  09CE  09B5               	comf	??_years_to_days+3,f
 11556  09CF  0AB2               	incf	??_years_to_days,f
 11557  09D0  1903               	skipnz
 11558  09D1  0AB3               	incf	??_years_to_days+1,f
 11559  09D2  1903               	skipnz
 11560  09D3  0AB4               	incf	??_years_to_days+2,f
 11561  09D4  1903               	skipnz
 11562  09D5  0AB5               	incf	??_years_to_days+3,f
 11563  09D6  3090               	movlw	144
 11564  09D7  00A6               	movwf	___lwdiv@divisor
 11565  09D8  3001               	movlw	1
 11566  09D9  00A7               	movwf	___lwdiv@divisor+1
 11567  09DA  082F               	movf	years_to_days@yr+1,w
 11568  09DB  00A9               	movwf	___lwdiv@dividend+1
 11569  09DC  082E               	movf	years_to_days@yr,w
 11570  09DD  00A8               	movwf	___lwdiv@dividend
 11571  09DE  3193  2340  3189   	fcall	___lwdiv
 11572  09E1  0020               	movlb	0	; select bank0
 11573  09E2  0826               	movf	?___lwdiv,w
 11574  09E3  00B6               	movwf	??_years_to_days+4
 11575  09E4  0827               	movf	?___lwdiv+1,w
 11576  09E5  00B7               	movwf	??_years_to_days+5
 11577  09E6  01B8               	clrf	??_years_to_days+6
 11578  09E7  01B9               	clrf	??_years_to_days+7
 11579  09E8  082F               	movf	years_to_days@yr+1,w
 11580  09E9  00BB               	movwf	??_years_to_days+9
 11581  09EA  082E               	movf	years_to_days@yr,w
 11582  09EB  00BA               	movwf	??_years_to_days+8
 11583  09EC  36BB               	lsrf	??_years_to_days+9,f
 11584  09ED  0CBA               	rrf	??_years_to_days+8,f
 11585  09EE  36BB               	lsrf	??_years_to_days+9,f
 11586  09EF  0CBA               	rrf	??_years_to_days+8,f
 11587  09F0  083A               	movf	??_years_to_days+8,w
 11588  09F1  00BC               	movwf	??_years_to_days+10
 11589  09F2  083B               	movf	??_years_to_days+9,w
 11590  09F3  00BD               	movwf	??_years_to_days+11
 11591  09F4  01BE               	clrf	??_years_to_days+12
 11592  09F5  01BF               	clrf	??_years_to_days+13
 11593  09F6  082E               	movf	years_to_days@yr,w
 11594  09F7  00A0               	movwf	___lmul@multiplier
 11595  09F8  082F               	movf	years_to_days@yr+1,w
 11596  09F9  00A1               	movwf	___lmul@multiplier+1
 11597  09FA  01A2               	clrf	___lmul@multiplier+2
 11598  09FB  01A3               	clrf	___lmul@multiplier+3
 11599  09FC  3000               	movlw	0
 11600  09FD  00A7               	movwf	___lmul@multiplicand+3
 11601  09FE  3000               	movlw	0
 11602  09FF  00A6               	movwf	___lmul@multiplicand+2
 11603  0A00  3001               	movlw	1
 11604  0A01  00A5               	movwf	___lmul@multiplicand+1
 11605  0A02  306D               	movlw	109
 11606  0A03  00A4               	movwf	___lmul@multiplicand
 11607  0A04  3192  2278         	fcall	___lmul
 11608  0A06  0020               	movlb	0	; select bank0
 11609  0A07  0820               	movf	?___lmul,w
 11610  0A08  07BC               	addwf	??_years_to_days+10,f
 11611  0A09  0821               	movf	?___lmul+1,w
 11612  0A0A  3DBD               	addwfc	??_years_to_days+11,f
 11613  0A0B  0822               	movf	?___lmul+2,w
 11614  0A0C  3DBE               	addwfc	??_years_to_days+12,f
 11615  0A0D  0823               	movf	?___lmul+3,w
 11616  0A0E  3DBF               	addwfc	??_years_to_days+13,f
 11617  0A0F  083C               	movf	??_years_to_days+10,w
 11618  0A10  07B6               	addwf	??_years_to_days+4,f
 11619  0A11  083D               	movf	??_years_to_days+11,w
 11620  0A12  3DB7               	addwfc	??_years_to_days+5,f
 11621  0A13  083E               	movf	??_years_to_days+12,w
 11622  0A14  3DB8               	addwfc	??_years_to_days+6,f
 11623  0A15  083F               	movf	??_years_to_days+13,w
 11624  0A16  3DB9               	addwfc	??_years_to_days+7,f
 11625  0A17  0836               	movf	??_years_to_days+4,w
 11626  0A18  07B2               	addwf	??_years_to_days,f
 11627  0A19  0837               	movf	??_years_to_days+5,w
 11628  0A1A  3DB3               	addwfc	??_years_to_days+1,f
 11629  0A1B  0838               	movf	??_years_to_days+6,w
 11630  0A1C  3DB4               	addwfc	??_years_to_days+2,f
 11631  0A1D  0839               	movf	??_years_to_days+7,w
 11632  0A1E  3DB5               	addwfc	??_years_to_days+3,f
 11633  0A1F  0835               	movf	??_years_to_days+3,w
 11634  0A20  00B1               	movwf	?_years_to_days+3
 11635  0A21  0834               	movf	??_years_to_days+2,w
 11636  0A22  00B0               	movwf	?_years_to_days+2
 11637  0A23  0833               	movf	??_years_to_days+1,w
 11638  0A24  00AF               	movwf	?_years_to_days+1
 11639  0A25  0832               	movf	??_years_to_days,w
 11640  0A26  00AE               	movwf	?_years_to_days
 11641  0A27  0008               	return
 11642  0A28                     __end_of_years_to_days:	
 11643                           
 11644                           	psect	text16
 11645  1278                     __ptext16:	
 11646 ;; *************** function ___lmul *****************
 11647 ;; Defined at:
 11648 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;  multiplier      4    0[BANK0 ] unsigned long 
 11651 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;  product         4    8[BANK0 ] unsigned long 
 11654 ;; Return value:  Size  Location     Type
 11655 ;;                  4    0[BANK0 ] unsigned long 
 11656 ;; Registers used:
 11657 ;;		wreg, status,2, status,0
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/0
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11663 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;Total ram usage:       12 bytes
 11668 ;; Hardware stack levels used:    1
 11669 ;; Hardware stack levels required when called:    6
 11670 ;; This function calls:
 11671 ;;		Nothing
 11672 ;; This function is called by:
 11673 ;;		_years_to_days
 11674 ;;		_mktime
 11675 ;;		_localtime
 11676 ;; This function uses a non-reentrant model
 11677 ;;
 11678                           
 11679                           
 11680                           ;psect for function ___lmul
 11681  1278                     ___lmul:	
 11682                           
 11683                           ;incstack = 0
 11684                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11685  1278  3000               	movlw	0
 11686  1279  0020               	movlb	0	; select bank0
 11687  127A  00AB               	movwf	___lmul@product+3
 11688  127B  3000               	movlw	0
 11689  127C  00AA               	movwf	___lmul@product+2
 11690  127D  3000               	movlw	0
 11691  127E  00A9               	movwf	___lmul@product+1
 11692  127F  3000               	movlw	0
 11693  1280  00A8               	movwf	___lmul@product
 11694  1281                     l3850:	
 11695  1281  1C20               	btfss	___lmul@multiplier,0
 11696  1282  2A8B               	goto	l3854
 11697  1283  0824               	movf	___lmul@multiplicand,w
 11698  1284  07A8               	addwf	___lmul@product,f
 11699  1285  0825               	movf	___lmul@multiplicand+1,w
 11700  1286  3DA9               	addwfc	___lmul@product+1,f
 11701  1287  0826               	movf	___lmul@multiplicand+2,w
 11702  1288  3DAA               	addwfc	___lmul@product+2,f
 11703  1289  0827               	movf	___lmul@multiplicand+3,w
 11704  128A  3DAB               	addwfc	___lmul@product+3,f
 11705  128B                     l3854:	
 11706  128B  3001               	movlw	1
 11707  128C                     u2095:	
 11708  128C  35A4               	lslf	___lmul@multiplicand,f
 11709  128D  0DA5               	rlf	___lmul@multiplicand+1,f
 11710  128E  0DA6               	rlf	___lmul@multiplicand+2,f
 11711  128F  0DA7               	rlf	___lmul@multiplicand+3,f
 11712  1290  0B89               	decfsz	9,f
 11713  1291  2A8C               	goto	u2095
 11714  1292  3001               	movlw	1
 11715  1293                     u2105:	
 11716  1293  36A3               	lsrf	___lmul@multiplier+3,f
 11717  1294  0CA2               	rrf	___lmul@multiplier+2,f
 11718  1295  0CA1               	rrf	___lmul@multiplier+1,f
 11719  1296  0CA0               	rrf	___lmul@multiplier,f
 11720  1297  0B89               	decfsz	9,f
 11721  1298  2A93               	goto	u2105
 11722  1299  0823               	movf	___lmul@multiplier+3,w
 11723  129A  0422               	iorwf	___lmul@multiplier+2,w
 11724  129B  0421               	iorwf	___lmul@multiplier+1,w
 11725  129C  0420               	iorwf	___lmul@multiplier,w
 11726  129D  1D03               	skipz
 11727  129E  2A81               	goto	l3850
 11728  129F  082B               	movf	___lmul@product+3,w
 11729  12A0  00A3               	movwf	?___lmul+3
 11730  12A1  082A               	movf	___lmul@product+2,w
 11731  12A2  00A2               	movwf	?___lmul+2
 11732  12A3  0829               	movf	___lmul@product+1,w
 11733  12A4  00A1               	movwf	?___lmul+1
 11734  12A5  0828               	movf	___lmul@product,w
 11735  12A6  00A0               	movwf	?___lmul
 11736  12A7  0008               	return
 11737  12A8                     __end_of___lmul:	
 11738                           
 11739                           	psect	text17
 11740  10AC                     __ptext17:	
 11741 ;; *************** function _months_to_days *****************
 11742 ;; Defined at:
 11743 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 11744 ;; Parameters:    Size  Location     Type
 11745 ;;  month           2   14[BANK0 ] unsigned int 
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  2   14[BANK0 ] unsigned int 
 11750 ;; Registers used:
 11751 ;;		wreg, status,2, status,0, pclath, cstack
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11760 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11761 ;;Total ram usage:        2 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:    7
 11764 ;; This function calls:
 11765 ;;		___lwdiv
 11766 ;;		___wmul
 11767 ;; This function is called by:
 11768 ;;		_ymd_to_scalar
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           
 11773                           ;psect for function _months_to_days
 11774  10AC                     _months_to_days:	
 11775                           
 11776                           ;incstack = 0
 11777                           ; Regs used in _months_to_days: [wreg+status,2+status,0+pclath+cstack]
 11778  10AC  3064               	movlw	100
 11779  10AD  0020               	movlb	0	; select bank0
 11780  10AE  00A6               	movwf	___lwdiv@divisor
 11781  10AF  3000               	movlw	0
 11782  10B0  00A7               	movwf	___lwdiv@divisor+1
 11783  10B1  082F               	movf	months_to_days@month+1,w
 11784  10B2  00A1               	movwf	___wmul@multiplier+1
 11785  10B3  082E               	movf	months_to_days@month,w
 11786  10B4  00A0               	movwf	___wmul@multiplier
 11787  10B5  30F1               	movlw	241
 11788  10B6  00A2               	movwf	___wmul@multiplicand
 11789  10B7  300B               	movlw	11
 11790  10B8  00A3               	movwf	___wmul@multiplicand+1
 11791  10B9  3190  2054  3190   	fcall	___wmul
 11792  10BC  0020               	movlb	0	; select bank0
 11793  10BD  0820               	movf	?___wmul,w
 11794  10BE  3E41               	addlw	65
 11795  10BF  00A8               	movwf	___lwdiv@dividend
 11796  10C0  30F4               	movlw	244
 11797  10C1  3D21               	addwfc	?___wmul+1,w
 11798  10C2  00A9               	movwf	___lwdiv@dividend+1
 11799  10C3  3193  2340         	fcall	___lwdiv
 11800  10C5  0020               	movlb	0	; select bank0
 11801  10C6  0827               	movf	?___lwdiv+1,w
 11802  10C7  00AF               	movwf	?_months_to_days+1
 11803  10C8  0826               	movf	?___lwdiv,w
 11804  10C9  00AE               	movwf	?_months_to_days
 11805  10CA  0008               	return
 11806  10CB                     __end_of_months_to_days:	
 11807                           
 11808                           	psect	text18
 11809  130C                     __ptext18:	
 11810 ;; *************** function _isleap *****************
 11811 ;; Defined at:
 11812 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\mktime.c"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;  yr              2   20[BANK0 ] unsigned int 
 11815 ;; Auto vars:     Size  Location     Type
 11816 ;;		None
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  2   20[BANK0 ] int 
 11819 ;; Registers used:
 11820 ;;		wreg, status,2, status,0, pclath, cstack
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/0
 11823 ;;		On exit  : 0/0
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;Total ram usage:        5 bytes
 11831 ;; Hardware stack levels used:    1
 11832 ;; Hardware stack levels required when called:    7
 11833 ;; This function calls:
 11834 ;;		___lwmod
 11835 ;; This function is called by:
 11836 ;;		_ymd_to_scalar
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           
 11841                           ;psect for function _isleap
 11842  130C                     _isleap:	
 11843                           
 11844                           ;incstack = 0
 11845                           ; Regs used in _isleap: [wreg+status,2+status,0+pclath+cstack]
 11846  130C  0020               	movlb	0	; select bank0
 11847  130D  01B8               	clrf	_isleap$2139
 11848  130E  0AB8               	incf	_isleap$2139,f
 11849  130F  3090               	movlw	144
 11850  1310  00AE               	movwf	___lwmod@divisor
 11851  1311  3001               	movlw	1
 11852  1312  00AF               	movwf	___lwmod@divisor+1
 11853  1313  0835               	movf	isleap@yr+1,w
 11854  1314  00B1               	movwf	___lwmod@dividend+1
 11855  1315  0834               	movf	isleap@yr,w
 11856  1316  00B0               	movwf	___lwmod@dividend
 11857  1317  3192  221D  3193   	fcall	___lwmod
 11858  131A  0020               	movlb	0	; select bank0
 11859  131B  082E               	movf	?___lwmod,w
 11860  131C  042F               	iorwf	?___lwmod+1,w
 11861  131D  1903               	btfsc	3,2
 11862  131E  2B38               	goto	l4122
 11863  131F  3003               	movlw	3
 11864  1320  0534               	andwf	isleap@yr,w
 11865  1321  00B6               	movwf	??_isleap
 11866  1322  3000               	movlw	0
 11867  1323  0535               	andwf	isleap@yr+1,w
 11868  1324  00B7               	movwf	??_isleap+1
 11869  1325  0836               	movf	??_isleap,w
 11870  1326  0437               	iorwf	??_isleap+1,w
 11871  1327  1D03               	btfss	3,2
 11872  1328  2B37               	goto	l4120
 11873  1329  3064               	movlw	100
 11874  132A  00AE               	movwf	___lwmod@divisor
 11875  132B  3000               	movlw	0
 11876  132C  00AF               	movwf	___lwmod@divisor+1
 11877  132D  0835               	movf	isleap@yr+1,w
 11878  132E  00B1               	movwf	___lwmod@dividend+1
 11879  132F  0834               	movf	isleap@yr,w
 11880  1330  00B0               	movwf	___lwmod@dividend
 11881  1331  3192  221D         	fcall	___lwmod
 11882  1333  0020               	movlb	0	; select bank0
 11883  1334  082E               	movf	?___lwmod,w
 11884  1335  042F               	iorwf	?___lwmod+1,w
 11885  1336  1903               	btfsc	3,2
 11886  1337                     l4120:	
 11887  1337  01B8               	clrf	_isleap$2139
 11888  1338                     l4122:	
 11889  1338  0838               	movf	_isleap$2139,w
 11890  1339  00B6               	movwf	??_isleap
 11891  133A  01B7               	clrf	??_isleap+1
 11892  133B  0836               	movf	??_isleap,w
 11893  133C  00B4               	movwf	?_isleap
 11894  133D  0837               	movf	??_isleap+1,w
 11895  133E  00B5               	movwf	?_isleap+1
 11896  133F  0008               	return
 11897  1340                     __end_of_isleap:	
 11898                           
 11899                           	psect	text19
 11900  1020                     __ptext19:	
 11901 ;; *************** function _memset *****************
 11902 ;; Defined at:
 11903 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 11904 ;; Parameters:    Size  Location     Type
 11905 ;;  p1              2    0[BANK0 ] PTR void 
 11906 ;;		 -> gmtime@tim(18), rtc6_GetTime@tm_t(18), 
 11907 ;;  c               2    2[BANK0 ] int 
 11908 ;;  n               2    4[BANK0 ] unsigned int 
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;  p               2    6[BANK0 ] PTR unsigned char 
 11911 ;;		 -> gmtime@tim(18), rtc6_GetTime@tm_t(18), 
 11912 ;; Return value:  Size  Location     Type
 11913 ;;                  2    0[BANK0 ] PTR void 
 11914 ;; Registers used:
 11915 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11916 ;; Tracked objects:
 11917 ;;		On entry : 0/0
 11918 ;;		On exit  : 0/0
 11919 ;;		Unchanged: 0/0
 11920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11921 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11922 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11924 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11925 ;;Total ram usage:        8 bytes
 11926 ;; Hardware stack levels used:    1
 11927 ;; Hardware stack levels required when called:    6
 11928 ;; This function calls:
 11929 ;;		Nothing
 11930 ;; This function is called by:
 11931 ;;		_rtc6_SetTime
 11932 ;;		_rtc6_GetTime
 11933 ;;		_main
 11934 ;;		_rtc6_example
 11935 ;; This function uses a non-reentrant model
 11936 ;;
 11937                           
 11938                           
 11939                           ;psect for function _memset
 11940  1020                     _memset:	
 11941                           
 11942                           ;incstack = 0
 11943                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11944  1020  0020               	movlb	0	; select bank0
 11945  1021  0821               	movf	memset@p1+1,w
 11946  1022  00A7               	movwf	memset@p+1
 11947  1023  0820               	movf	memset@p1,w
 11948  1024  00A6               	movwf	memset@p
 11949  1025                     l4586:	
 11950  1025  3001               	movlw	1
 11951  1026  02A4               	subwf	memset@n,f
 11952  1027  3000               	movlw	0
 11953  1028  3BA5               	subwfb	memset@n+1,f
 11954  1029  0A24               	incf	memset@n,w
 11955  102A  1903               	btfsc	3,2
 11956  102B  0A25               	incf	memset@n+1,w
 11957  102C  1903               	btfsc	3,2
 11958  102D  0008               	return
 11959  102E  0826               	movf	memset@p,w
 11960  102F  0086               	movwf	6
 11961  1030  0827               	movf	memset@p+1,w
 11962  1031  0087               	movwf	7
 11963  1032  0822               	movf	memset@c,w
 11964  1033  0081               	movwf	1
 11965  1034  3001               	movlw	1
 11966  1035  07A6               	addwf	memset@p,f
 11967  1036  3000               	movlw	0
 11968  1037  3DA7               	addwfc	memset@p+1,f
 11969  1038  2825               	goto	l4586
 11970  1039                     __end_of_memset:	
 11971                           ;	Return value of _memset is never used
 11972                           
 11973                           
 11974                           	psect	text20
 11975  12DA                     __ptext20:	
 11976 ;; *************** function _Write_String *****************
 11977 ;; Defined at:
 11978 ;;		line 108 in file "oled.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;  message         2   61[BANK0 ] PTR unsigned char 
 11981 ;;		 -> main@timeStr(0), main@welcomeMsg(12), 
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;  len             2   63[BANK0 ] unsigned int 
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  1    wreg      void 
 11986 ;; Registers used:
 11987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11993 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11996 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11997 ;;Total ram usage:        4 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; Hardware stack levels required when called:   11
 12000 ;; This function calls:
 12001 ;;		_Modify_Data
 12002 ;;		_OLED_Clear
 12003 ;;		_OLED_PutPicture
 12004 ;;		_sprintf
 12005 ;;		_strlen
 12006 ;; This function is called by:
 12007 ;;		_main
 12008 ;; This function uses a non-reentrant model
 12009 ;;
 12010                           
 12011                           
 12012                           ;psect for function _Write_String
 12013  12DA                     _Write_String:	
 12014                           
 12015                           ;oled.c: 109: OLED_Clear();
 12016                           
 12017                           ;incstack = 0
 12018                           ; Regs used in _Write_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12019  12DA  3197  27A7  3192   	fcall	_OLED_Clear
 12020                           
 12021                           ;oled.c: 110: size_t len = strlen(message);
 12022  12DD  0020               	movlb	0	; select bank0
 12023  12DE  085E               	movf	Write_String@message+1,w
 12024  12DF  00A1               	movwf	strlen@s+1
 12025  12E0  085D               	movf	Write_String@message,w
 12026  12E1  00A0               	movwf	strlen@s
 12027  12E2  3190  208D  3192   	fcall	_strlen
 12028  12E5  0020               	movlb	0	; select bank0
 12029  12E6  0821               	movf	?_strlen+1,w
 12030  12E7  00E0               	movwf	Write_String@len+1
 12031  12E8  0820               	movf	?_strlen,w
 12032  12E9  00DF               	movwf	Write_String@len
 12033                           
 12034                           ;oled.c: 111: sprintf(CharacterArray, message);
 12035  12EA  308C               	movlw	140
 12036  12EB  00C7               	movwf	sprintf@wh
 12037  12EC  3023               	movlw	35
 12038  12ED  00C8               	movwf	sprintf@wh+1
 12039  12EE  085E               	movf	Write_String@message+1,w
 12040  12EF  00CA               	movwf	sprintf@f+1
 12041  12F0  085D               	movf	Write_String@message,w
 12042  12F1  00C9               	movwf	sprintf@f
 12043  12F2  3190  20CB  3192   	fcall	_sprintf
 12044                           
 12045                           ;oled.c: 112: Modify_Data(CharacterArray, 0, len);
 12046  12F5  308C               	movlw	140
 12047  12F6  0020               	movlb	0	; select bank0
 12048  12F7  00A6               	movwf	Modify_Data@c
 12049  12F8  3023               	movlw	35
 12050  12F9  00A7               	movwf	Modify_Data@c+1
 12051  12FA  3000               	movlw	0
 12052  12FB  00A8               	movwf	Modify_Data@offset
 12053  12FC  00A9               	movwf	Modify_Data@offset+1
 12054  12FD  0860               	movf	Write_String@len+1,w
 12055  12FE  00AB               	movwf	Modify_Data@limit+1
 12056  12FF  085F               	movf	Write_String@len,w
 12057  1300  00AA               	movwf	Modify_Data@limit
 12058  1301  318A  2228  3192   	fcall	_Modify_Data
 12059                           
 12060                           ;oled.c: 113: OLED_PutPicture(displayArray);
 12061  1304  30B1               	movlw	177
 12062  1305  0020               	movlb	0	; select bank0
 12063  1306  00A4               	movwf	OLED_PutPicture@pic
 12064  1307  3021               	movlw	33
 12065  1308  00A5               	movwf	OLED_PutPicture@pic+1
 12066  1309  3193  23AC         	fcall	_OLED_PutPicture
 12067  130B  0008               	return
 12068  130C                     __end_of_Write_String:	
 12069                           
 12070                           	psect	text21
 12071  108D                     __ptext21:	
 12072 ;; *************** function _strlen *****************
 12073 ;; Defined at:
 12074 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 12075 ;; Parameters:    Size  Location     Type
 12076 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 12077 ;;		 -> main@timeStr(0), main@welcomeMsg(12), 
 12078 ;; Auto vars:     Size  Location     Type
 12079 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 12080 ;;		 -> main@timeStr(0), main@welcomeMsg(12), 
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  2    0[BANK0 ] unsigned int 
 12083 ;; Registers used:
 12084 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12092 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;Total ram usage:        6 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    6
 12097 ;; This function calls:
 12098 ;;		Nothing
 12099 ;; This function is called by:
 12100 ;;		_Write_String
 12101 ;; This function uses a non-reentrant model
 12102 ;;
 12103                           
 12104                           
 12105                           ;psect for function _strlen
 12106  108D                     _strlen:	
 12107                           
 12108                           ;incstack = 0
 12109                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12110  108D  0020               	movlb	0	; select bank0
 12111  108E  0821               	movf	strlen@s+1,w
 12112  108F  00A5               	movwf	strlen@cp+1
 12113  1090  0820               	movf	strlen@s,w
 12114  1091  00A4               	movwf	strlen@cp
 12115  1092                     l4754:	
 12116  1092  0824               	movf	strlen@cp,w
 12117  1093  0086               	movwf	6
 12118  1094  0825               	movf	strlen@cp+1,w
 12119  1095  0087               	movwf	7
 12120  1096  0801               	movf	1,w
 12121  1097  1903               	btfsc	3,2
 12122  1098  289E               	goto	l4756
 12123  1099  3001               	movlw	1
 12124  109A  07A4               	addwf	strlen@cp,f
 12125  109B  3000               	movlw	0
 12126  109C  3DA5               	addwfc	strlen@cp+1,f
 12127  109D  2892               	goto	l4754
 12128  109E                     l4756:	
 12129  109E  0920               	comf	strlen@s,w
 12130  109F  00A2               	movwf	??_strlen
 12131  10A0  0921               	comf	strlen@s+1,w
 12132  10A1  00A3               	movwf	??_strlen+1
 12133  10A2  0AA2               	incf	??_strlen,f
 12134  10A3  1903               	skipnz
 12135  10A4  0AA3               	incf	??_strlen+1,f
 12136  10A5  0824               	movf	strlen@cp,w
 12137  10A6  0722               	addwf	??_strlen,w
 12138  10A7  00A0               	movwf	?_strlen
 12139  10A8  0825               	movf	strlen@cp+1,w
 12140  10A9  3D23               	addwfc	??_strlen+1,w
 12141  10AA  00A1               	movwf	?_strlen+1
 12142  10AB  0008               	return
 12143  10AC                     __end_of_strlen:	
 12144                           
 12145                           	psect	text22
 12146  10CB                     __ptext22:	
 12147 ;; *************** function _sprintf *****************
 12148 ;; Defined at:
 12149 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprintf.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;  wh              2   39[BANK0 ] PTR unsigned char 
 12152 ;;		 -> CharacterArray(100), main@timeStr(0), 
 12153 ;;  f               2   41[BANK0 ] PTR const unsigned char 
 12154 ;;		 -> STR_2(31), main@timeStr(0), main@welcomeMsg(12), 
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;  pb              4   57[BANK0 ] struct __prbuf
 12157 ;;  ap              1   56[BANK0 ] PTR void [1]
 12158 ;;		 -> ?_sprintf(2), ?_printf(2), 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  2   39[BANK0 ] int 
 12161 ;; Registers used:
 12162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12168 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;Total ram usage:       22 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:    8
 12175 ;; This function calls:
 12176 ;;		__doprnt
 12177 ;; This function is called by:
 12178 ;;		_main
 12179 ;;		_Write_String
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           
 12184                           ;psect for function _sprintf
 12185  10CB                     _sprintf:	
 12186                           
 12187                           ;incstack = 0
 12188                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12189  10CB  0020               	movlb	0	; select bank0
 12190  10CC  0848               	movf	sprintf@wh+1,w
 12191  10CD  00DA               	movwf	sprintf@pb+1
 12192  10CE  0847               	movf	sprintf@wh,w
 12193  10CF  00D9               	movwf	sprintf@pb
 12194  10D0  01DB               	clrf	sprintf@pb+2
 12195  10D1  01DC               	clrf	sprintf@pb+3
 12196  10D2  304B               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
 12197  10D3  00D7               	movwf	??_sprintf
 12198  10D4  0857               	movf	??_sprintf,w
 12199  10D5  00D8               	movwf	sprintf@ap
 12200  10D6  3059               	movlw	low sprintf@pb
 12201  10D7  00B4               	movwf	__doprnt@pb
 12202  10D8  3000               	movlw	high sprintf@pb
 12203  10D9  00B5               	movwf	__doprnt@pb+1
 12204  10DA  084A               	movf	sprintf@f+1,w
 12205  10DB  00B7               	movwf	__doprnt@f+1
 12206  10DC  0849               	movf	sprintf@f,w
 12207  10DD  00B6               	movwf	__doprnt@f
 12208  10DE  3058               	movlw	(low (sprintf@ap| 0))& (0+255)
 12209  10DF  00D7               	movwf	??_sprintf
 12210  10E0  0857               	movf	??_sprintf,w
 12211  10E1  00B8               	movwf	__doprnt@ap
 12212  10E2  3180  206E         	fcall	__doprnt
 12213  10E4  0020               	movlb	0	; select bank0
 12214  10E5  0859               	movf	sprintf@pb,w
 12215  10E6  0086               	movwf	6
 12216  10E7  085A               	movf	sprintf@pb+1,w
 12217  10E8  0087               	movwf	7
 12218  10E9  0181               	clrf	1
 12219  10EA  0008               	return
 12220  10EB                     __end_of_sprintf:	
 12221                           ;	Return value of _sprintf is never used
 12222                           
 12223                           
 12224                           	psect	text23
 12225  006E                     __ptext23:	
 12226 ;; *************** function __doprnt *****************
 12227 ;; Defined at:
 12228 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 12229 ;; Parameters:    Size  Location     Type
 12230 ;;  pb              2   20[BANK0 ] PTR struct __prbuf
 12231 ;;		 -> sprintf@pb(4), printf@pb(4), 
 12232 ;;  f               2   22[BANK0 ] PTR const unsigned char 
 12233 ;;		 -> STR_2(31), main@timeStr(0), main@welcomeMsg(12), STR_1(31), 
 12234 ;;  ap              1   24[BANK0 ] PTR PTR void 
 12235 ;;		 -> sprintf@ap(1), printf@ap(1), 
 12236 ;; Auto vars:     Size  Location     Type
 12237 ;;  tmpval          4    0        struct .
 12238 ;;  width           2   36[BANK0 ] int 
 12239 ;;  val             2   33[BANK0 ] unsigned int 
 12240 ;;  len             2   31[BANK0 ] unsigned int 
 12241 ;;  c               1   38[BANK0 ] char 
 12242 ;;  flag            1   35[BANK0 ] unsigned char 
 12243 ;;  cp              1   30[BANK0 ] PTR const unsigned char 
 12244 ;;		 -> _doprnt@c(1), 
 12245 ;;  prec            1   29[BANK0 ] char 
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  2   20[BANK0 ] int 
 12248 ;; Registers used:
 12249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/0
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12255 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12258 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;Total ram usage:       19 bytes
 12260 ;; Hardware stack levels used:    1
 12261 ;; Hardware stack levels required when called:    7
 12262 ;; This function calls:
 12263 ;;		Absolute function
 12264 ;;		___lwdiv
 12265 ;;		___lwmod
 12266 ;;		___wmul
 12267 ;;		_isdigit
 12268 ;;		_putch
 12269 ;; This function is called by:
 12270 ;;		_sprintf
 12271 ;;		_printf
 12272 ;; This function uses a non-reentrant model
 12273 ;;
 12274                           
 12275                           
 12276                           ;psect for function __doprnt
 12277  006E                     __doprnt:	
 12278  006E                     l7906:	
 12279                           ;doprnt.c: 499: signed char c;
 12280                           ;doprnt.c: 501: int width;
 12281                           ;doprnt.c: 506: signed char prec;
 12282                           ;doprnt.c: 508: unsigned char flag;
 12283                           ;doprnt.c: 523: union {
 12284                           ;doprnt.c: 524: unsigned long vd;
 12285                           ;doprnt.c: 525: double integ;
 12286                           ;doprnt.c: 526: } tmpval;
 12287                           ;doprnt.c: 528: unsigned int val;
 12288                           ;doprnt.c: 529: unsigned len;
 12289                           ;doprnt.c: 530: const char * cp;
 12290                           ;doprnt.c: 536: while(c = *f++) {
 12291                           
 12292                           ;incstack = 0
 12293                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12294                           
 12295  006E  0020               	movlb	0	; select bank0
 12296  006F  0837               	movf	__doprnt@f+1,w
 12297  0070  00BA               	movwf	??__doprnt+1
 12298  0071  0836               	movf	__doprnt@f,w
 12299  0072  00B9               	movwf	??__doprnt
 12300  0073  0AB6               	incf	__doprnt@f,f
 12301  0074  1903               	skipnz
 12302  0075  0AB7               	incf	__doprnt@f+1,f
 12303  0076  0839               	movf	??__doprnt,w
 12304  0077  0084               	movwf	4
 12305  0078  083A               	movf	??__doprnt+1,w
 12306  0079  0085               	movwf	5
 12307  007A  0800               	movf	0,w	;code access
 12308  007B  00BB               	movwf	??__doprnt+2
 12309  007C  083B               	movf	??__doprnt+2,w
 12310  007D  00C6               	movwf	__doprnt@c
 12311  007E  0846               	movf	__doprnt@c,w
 12312  007F  1903               	btfsc	3,2
 12313  0080  2B6C               	goto	l7908
 12314                           
 12315                           ;doprnt.c: 538: if(c != '%')
 12316  0081  3025               	movlw	37
 12317  0082  0020               	movlb	0	; select bank0
 12318  0083  0646               	xorwf	__doprnt@c,w
 12319  0084  1903               	btfsc	3,2
 12320  0085  28B7               	goto	l7760
 12321                           
 12322                           ;doprnt.c: 540: {
 12323                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 12324  0086  0834               	movf	__doprnt@pb,w
 12325  0087  0086               	movwf	6
 12326  0088  0835               	movf	__doprnt@pb+1,w
 12327  0089  0087               	movwf	7
 12328  008A  3142               	addfsr 1,2
 12329  008B  0016               	moviw fsr1++
 12330  008C  0401               	iorwf	1,w
 12331  008D  1903               	btfsc	3,2
 12332  008E  289E               	goto	l7756
 12333  008F  0846               	movf	__doprnt@c,w
 12334  0090  00B9               	movwf	??__doprnt
 12335  0091  0839               	movf	??__doprnt,w
 12336  0092  00A0               	movwf	putch@c
 12337  0093  0834               	movf	__doprnt@pb,w
 12338  0094  0086               	movwf	6
 12339  0095  0835               	movf	__doprnt@pb+1,w
 12340  0096  0087               	movwf	7
 12341  0097  3142               	addfsr 1,2
 12342  0098  3F41               	moviw [1]fsr1
 12343  0099  008A               	movwf	10
 12344  009A  3F40               	moviw [0]fsr1
 12345  009B  000A               	callw
 12346  009C  3180               	pagesel	$
 12347  009D  286E               	goto	l7906
 12348  009E                     l7756:	
 12349  009E  0020               	movlb	0	; select bank0
 12350  009F  0834               	movf	__doprnt@pb,w
 12351  00A0  0086               	movwf	6
 12352  00A1  0835               	movf	__doprnt@pb+1,w
 12353  00A2  0087               	movwf	7
 12354  00A3  3F40               	moviw [0]fsr1
 12355  00A4  00B9               	movwf	??__doprnt
 12356  00A5  3F41               	moviw [1]fsr1
 12357  00A6  00BA               	movwf	??__doprnt+1
 12358  00A7  0839               	movf	??__doprnt,w
 12359  00A8  0086               	movwf	6
 12360  00A9  083A               	movf	??__doprnt+1,w
 12361  00AA  0087               	movwf	7
 12362  00AB  0846               	movf	__doprnt@c,w
 12363  00AC  0081               	movwf	1
 12364  00AD  0834               	movf	__doprnt@pb,w
 12365  00AE  0086               	movwf	6
 12366  00AF  0835               	movf	__doprnt@pb+1,w
 12367  00B0  0087               	movwf	7
 12368  00B1  3001               	movlw	1
 12369  00B2  0781               	addwf	1,f
 12370  00B3  3141               	addfsr 1,1
 12371  00B4  1803               	skipnc
 12372  00B5  0A81               	incf	1,f
 12373                           
 12374                           ;doprnt.c: 542: continue;
 12375  00B6  286E               	goto	l7906
 12376  00B7                     l7760:	
 12377                           
 12378                           ;doprnt.c: 543: }
 12379                           ;doprnt.c: 546: width = 0;
 12380  00B7  01C4               	clrf	__doprnt@width
 12381  00B8  01C5               	clrf	__doprnt@width+1
 12382                           
 12383                           ;doprnt.c: 548: flag = 0;
 12384  00B9  01C3               	clrf	__doprnt@flag
 12385                           
 12386                           ;doprnt.c: 551: switch(*f) {
 12387                           
 12388                           ;doprnt.c: 550: for(;;) {
 12389  00BA  28C0               	goto	l7766
 12390  00BB                     l877:	
 12391                           ;doprnt.c: 579: case '0':
 12392                           
 12393                           
 12394                           ;doprnt.c: 580: flag |= 0x04;
 12395  00BB  1543               	bsf	__doprnt@flag,2
 12396                           
 12397                           ;doprnt.c: 581: f++;
 12398  00BC  3001               	movlw	1
 12399  00BD  07B6               	addwf	__doprnt@f,f
 12400  00BE  3000               	movlw	0
 12401  00BF  3DB7               	addwfc	__doprnt@f+1,f
 12402  00C0                     l7766:	
 12403                           ;doprnt.c: 584: }
 12404                           
 12405                           ;doprnt.c: 582: continue;
 12406                           
 12407  00C0  0836               	movf	__doprnt@f,w
 12408  00C1  0084               	movwf	4
 12409  00C2  0837               	movf	__doprnt@f+1,w
 12410  00C3  0085               	movwf	5
 12411  00C4  0800               	movf	0,w	;code access
 12412                           
 12413                           ; Switch size 1, requested type "space"
 12414                           ; Number of cases is 1, Range of values is 48 to 48
 12415                           ; switch strategies available:
 12416                           ; Name         Instructions Cycles
 12417                           ; simple_byte            4     3 (average)
 12418                           ; direct_byte           11     9 (fixed)
 12419                           ; jumptable            263     9 (fixed)
 12420                           ;	Chosen strategy is simple_byte
 12421  00C5  3A30               	xorlw	48	; case 48
 12422  00C6  1903               	skipnz
 12423  00C7  28BB               	goto	l877
 12424  00C8  28C9               	goto	l7768
 12425  00C9                     l7768:	
 12426                           ;doprnt.c: 586: }
 12427                           
 12428                           ;doprnt.c: 585: break;
 12429                           
 12430                           
 12431                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 12432  00C9  0836               	movf	__doprnt@f,w
 12433  00CA  0084               	movwf	4
 12434  00CB  0837               	movf	__doprnt@f+1,w
 12435  00CC  0085               	movwf	5
 12436  00CD  0800               	movf	0,w	;code access
 12437  00CE  319F  2708  3180   	fcall	_isdigit
 12438  00D1  1C03               	btfss	3,0
 12439  00D2  29A4               	goto	l7814
 12440                           
 12441                           ;doprnt.c: 598: width = 0;
 12442  00D3  0020               	movlb	0	; select bank0
 12443  00D4  01C4               	clrf	__doprnt@width
 12444  00D5  01C5               	clrf	__doprnt@width+1
 12445  00D6                     l7772:	
 12446                           ;doprnt.c: 599: do {
 12447                           
 12448                           
 12449                           ;doprnt.c: 600: width *= 10;
 12450  00D6  300A               	movlw	10
 12451  00D7  0020               	movlb	0	; select bank0
 12452  00D8  00A0               	movwf	___wmul@multiplier
 12453  00D9  3000               	movlw	0
 12454  00DA  00A1               	movwf	___wmul@multiplier+1
 12455  00DB  0845               	movf	__doprnt@width+1,w
 12456  00DC  00A3               	movwf	___wmul@multiplicand+1
 12457  00DD  0844               	movf	__doprnt@width,w
 12458  00DE  00A2               	movwf	___wmul@multiplicand
 12459  00DF  3190  2054  3180   	fcall	___wmul
 12460  00E2  0020               	movlb	0	; select bank0
 12461  00E3  0821               	movf	?___wmul+1,w
 12462  00E4  00C5               	movwf	__doprnt@width+1
 12463  00E5  0820               	movf	?___wmul,w
 12464  00E6  00C4               	movwf	__doprnt@width
 12465                           
 12466                           ;doprnt.c: 601: width += *f++ - '0';
 12467  00E7  0836               	movf	__doprnt@f,w
 12468  00E8  0084               	movwf	4
 12469  00E9  0837               	movf	__doprnt@f+1,w
 12470  00EA  0085               	movwf	5
 12471  00EB  0800               	movf	0,w	;code access
 12472  00EC  3ED0               	addlw	208
 12473  00ED  00B9               	movwf	??__doprnt
 12474  00EE  30FF               	movlw	255
 12475  00EF  1803               	skipnc
 12476  00F0  3000               	movlw	0
 12477  00F1  00BA               	movwf	??__doprnt+1
 12478  00F2  0839               	movf	??__doprnt,w
 12479  00F3  07C4               	addwf	__doprnt@width,f
 12480  00F4  083A               	movf	??__doprnt+1,w
 12481  00F5  3DC5               	addwfc	__doprnt@width+1,f
 12482  00F6  3001               	movlw	1
 12483  00F7  07B6               	addwf	__doprnt@f,f
 12484  00F8  3000               	movlw	0
 12485  00F9  3DB7               	addwfc	__doprnt@f+1,f
 12486                           
 12487                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 12488  00FA  0836               	movf	__doprnt@f,w
 12489  00FB  0084               	movwf	4
 12490  00FC  0837               	movf	__doprnt@f+1,w
 12491  00FD  0085               	movwf	5
 12492  00FE  0800               	movf	0,w	;code access
 12493  00FF  319F  2708  3180   	fcall	_isdigit
 12494  0102  1C03               	btfss	3,0
 12495  0103  29A4               	goto	l7814
 12496  0104  28D6               	goto	l7772
 12497  0105                     l7780:	
 12498                           ;doprnt.c: 750: dostring:
 12499                           
 12500                           ;doprnt.c: 698: case 'i':
 12501                           ;doprnt.c: 699: break;
 12502                           
 12503                           ;doprnt.c: 697: case 'd':
 12504                           
 12505                           ;doprnt.c: 638: goto alldone;
 12506                           
 12507                           ;doprnt.c: 637: case 0:
 12508                           
 12509                           ;doprnt.c: 608: }
 12510                           ;doprnt.c: 635: switch(c = *f++) {
 12511                           
 12512                           
 12513                           ;doprnt.c: 757: if(width > len)
 12514  0105  0020               	movlb	0	; select bank0
 12515  0106  0845               	movf	__doprnt@width+1,w
 12516  0107  0240               	subwf	__doprnt@len+1,w
 12517  0108  1D03               	skipz
 12518  0109  290C               	goto	u6305
 12519  010A  0844               	movf	__doprnt@width,w
 12520  010B  023F               	subwf	__doprnt@len,w
 12521  010C                     u6305:	
 12522  010C  1803               	skipnc
 12523  010D  2913               	goto	l7784
 12524                           
 12525                           ;doprnt.c: 758: width -= len;
 12526  010E  083F               	movf	__doprnt@len,w
 12527  010F  02C4               	subwf	__doprnt@width,f
 12528  0110  0840               	movf	__doprnt@len+1,w
 12529  0111  3BC5               	subwfb	__doprnt@width+1,f
 12530  0112  2915               	goto	l7794
 12531  0113                     l7784:	
 12532                           
 12533                           ;doprnt.c: 759: else
 12534                           ;doprnt.c: 760: width = 0;
 12535  0113  01C4               	clrf	__doprnt@width
 12536  0114  01C5               	clrf	__doprnt@width+1
 12537  0115                     l7794:	
 12538                           ;doprnt.c: 764: while(width--)
 12539                           
 12540  0115  30FF               	movlw	255
 12541  0116  0020               	movlb	0	; select bank0
 12542  0117  07C4               	addwf	__doprnt@width,f
 12543  0118  30FF               	movlw	255
 12544  0119  3DC5               	addwfc	__doprnt@width+1,f
 12545  011A  0A44               	incf	__doprnt@width,w
 12546  011B  1903               	btfsc	3,2
 12547  011C  0A45               	incf	__doprnt@width+1,w
 12548  011D  1903               	btfsc	3,2
 12549  011E  2990               	goto	l7808
 12550                           
 12551                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 12552  011F  0834               	movf	__doprnt@pb,w
 12553  0120  0086               	movwf	6
 12554  0121  0835               	movf	__doprnt@pb+1,w
 12555  0122  0087               	movwf	7
 12556  0123  3142               	addfsr 1,2
 12557  0124  0016               	moviw fsr1++
 12558  0125  0401               	iorwf	1,w
 12559  0126  1903               	btfsc	3,2
 12560  0127  2937               	goto	l7790
 12561  0128  3020               	movlw	32
 12562  0129  00B9               	movwf	??__doprnt
 12563  012A  0839               	movf	??__doprnt,w
 12564  012B  00A0               	movwf	putch@c
 12565  012C  0834               	movf	__doprnt@pb,w
 12566  012D  0086               	movwf	6
 12567  012E  0835               	movf	__doprnt@pb+1,w
 12568  012F  0087               	movwf	7
 12569  0130  3142               	addfsr 1,2
 12570  0131  3F41               	moviw [1]fsr1
 12571  0132  008A               	movwf	10
 12572  0133  3F40               	moviw [0]fsr1
 12573  0134  000A               	callw
 12574  0135  3180               	pagesel	$
 12575  0136  2915               	goto	l7794
 12576  0137                     l7790:	
 12577  0137  0020               	movlb	0	; select bank0
 12578  0138  0834               	movf	__doprnt@pb,w
 12579  0139  0086               	movwf	6
 12580  013A  0835               	movf	__doprnt@pb+1,w
 12581  013B  0087               	movwf	7
 12582  013C  3F40               	moviw [0]fsr1
 12583  013D  00B9               	movwf	??__doprnt
 12584  013E  3F41               	moviw [1]fsr1
 12585  013F  00BA               	movwf	??__doprnt+1
 12586  0140  0839               	movf	??__doprnt,w
 12587  0141  0086               	movwf	6
 12588  0142  083A               	movf	??__doprnt+1,w
 12589  0143  0087               	movwf	7
 12590  0144  3020               	movlw	32
 12591  0145  0081               	movwf	1
 12592  0146  0834               	movf	__doprnt@pb,w
 12593  0147  0086               	movwf	6
 12594  0148  0835               	movf	__doprnt@pb+1,w
 12595  0149  0087               	movwf	7
 12596  014A  3001               	movlw	1
 12597  014B  0781               	addwf	1,f
 12598  014C  3141               	addfsr 1,1
 12599  014D  1803               	skipnc
 12600  014E  0A81               	incf	1,f
 12601  014F  2915               	goto	l7794
 12602  0150                     l7796:	
 12603                           ;doprnt.c: 767: while(len--)
 12604                           
 12605                           
 12606                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 12607  0150  0834               	movf	__doprnt@pb,w
 12608  0151  0086               	movwf	6
 12609  0152  0835               	movf	__doprnt@pb+1,w
 12610  0153  0087               	movwf	7
 12611  0154  3142               	addfsr 1,2
 12612  0155  0016               	moviw fsr1++
 12613  0156  0401               	iorwf	1,w
 12614  0157  1903               	btfsc	3,2
 12615  0158  2970               	goto	l7802
 12616  0159  083E               	movf	__doprnt@cp,w
 12617  015A  0086               	movwf	6
 12618  015B  0187               	clrf	7
 12619  015C  0801               	movf	1,w
 12620  015D  00B9               	movwf	??__doprnt
 12621  015E  0839               	movf	??__doprnt,w
 12622  015F  00A0               	movwf	putch@c
 12623  0160  0834               	movf	__doprnt@pb,w
 12624  0161  0086               	movwf	6
 12625  0162  0835               	movf	__doprnt@pb+1,w
 12626  0163  0087               	movwf	7
 12627  0164  3142               	addfsr 1,2
 12628  0165  3F41               	moviw [1]fsr1
 12629  0166  008A               	movwf	10
 12630  0167  3F40               	moviw [0]fsr1
 12631  0168  000A               	callw
 12632  0169  3180               	pagesel	$
 12633  016A  3001               	movlw	1
 12634  016B  0020               	movlb	0	; select bank0
 12635  016C  00B9               	movwf	??__doprnt
 12636  016D  0839               	movf	??__doprnt,w
 12637  016E  07BE               	addwf	__doprnt@cp,f
 12638  016F  2990               	goto	l7808
 12639  0170                     l7802:	
 12640  0170  083E               	movf	__doprnt@cp,w
 12641  0171  0086               	movwf	6
 12642  0172  0187               	clrf	7
 12643  0173  0801               	movf	1,w
 12644  0174  00B9               	movwf	??__doprnt
 12645  0175  0834               	movf	__doprnt@pb,w
 12646  0176  0086               	movwf	6
 12647  0177  0835               	movf	__doprnt@pb+1,w
 12648  0178  0087               	movwf	7
 12649  0179  3F40               	moviw [0]fsr1
 12650  017A  00BA               	movwf	??__doprnt+1
 12651  017B  3F41               	moviw [1]fsr1
 12652  017C  00BB               	movwf	??__doprnt+2
 12653  017D  083A               	movf	??__doprnt+1,w
 12654  017E  0086               	movwf	6
 12655  017F  083B               	movf	??__doprnt+2,w
 12656  0180  0087               	movwf	7
 12657  0181  0839               	movf	??__doprnt,w
 12658  0182  0081               	movwf	1
 12659  0183  3001               	movlw	1
 12660  0184  00B9               	movwf	??__doprnt
 12661  0185  0839               	movf	??__doprnt,w
 12662  0186  07BE               	addwf	__doprnt@cp,f
 12663  0187  0834               	movf	__doprnt@pb,w
 12664  0188  0086               	movwf	6
 12665  0189  0835               	movf	__doprnt@pb+1,w
 12666  018A  0087               	movwf	7
 12667  018B  3001               	movlw	1
 12668  018C  0781               	addwf	1,f
 12669  018D  3141               	addfsr 1,1
 12670  018E  1803               	skipnc
 12671  018F  0A81               	incf	1,f
 12672  0190                     l7808:	
 12673  0190  3001               	movlw	1
 12674  0191  02BF               	subwf	__doprnt@len,f
 12675  0192  3000               	movlw	0
 12676  0193  3BC0               	subwfb	__doprnt@len+1,f
 12677  0194  0A3F               	incf	__doprnt@len,w
 12678  0195  1D03               	skipz
 12679  0196  2950               	goto	l7796
 12680  0197  0A40               	incf	__doprnt@len+1,w
 12681  0198  1903               	btfsc	3,2
 12682  0199  286E               	goto	l7906
 12683  019A  2950               	goto	l7796
 12684  019B                     l7810:	
 12685                           ;doprnt.c: 802: default:
 12686                           
 12687                           ;doprnt.c: 774: continue;
 12688                           
 12689                           
 12690                           ;doprnt.c: 805: cp = (char *)&c;
 12691  019B  3046               	movlw	(low (__doprnt@c| 0))& (0+255)
 12692  019C  00B9               	movwf	??__doprnt
 12693  019D  0839               	movf	??__doprnt,w
 12694  019E  00BE               	movwf	__doprnt@cp
 12695                           
 12696                           ;doprnt.c: 806: len = 1;
 12697  019F  3001               	movlw	1
 12698  01A0  00BF               	movwf	__doprnt@len
 12699  01A1  3000               	movlw	0
 12700  01A2  00C0               	movwf	__doprnt@len+1
 12701                           
 12702                           ;doprnt.c: 807: goto dostring;
 12703  01A3  2905               	goto	l7780
 12704  01A4                     l7814:	
 12705                           ;doprnt.c: 822: }
 12706                           
 12707  01A4  0020               	movlb	0	; select bank0
 12708  01A5  0837               	movf	__doprnt@f+1,w
 12709  01A6  00BA               	movwf	??__doprnt+1
 12710  01A7  0836               	movf	__doprnt@f,w
 12711  01A8  00B9               	movwf	??__doprnt
 12712  01A9  0AB6               	incf	__doprnt@f,f
 12713  01AA  1903               	skipnz
 12714  01AB  0AB7               	incf	__doprnt@f+1,f
 12715  01AC  0839               	movf	??__doprnt,w
 12716  01AD  0084               	movwf	4
 12717  01AE  083A               	movf	??__doprnt+1,w
 12718  01AF  0085               	movwf	5
 12719  01B0  0800               	movf	0,w	;code access
 12720  01B1  00C6               	movwf	__doprnt@c
 12721                           
 12722                           ; Switch size 1, requested type "space"
 12723                           ; Number of cases is 3, Range of values is 0 to 105
 12724                           ; switch strategies available:
 12725                           ; Name         Instructions Cycles
 12726                           ; simple_byte           10     6 (average)
 12727                           ; direct_byte          218     6 (fixed)
 12728                           ; jumptable            260     6 (fixed)
 12729                           ;	Chosen strategy is simple_byte
 12730  01B2  3A00               	xorlw	0	; case 0
 12731  01B3  1903               	skipnz
 12732  01B4  2B6C               	goto	l7908
 12733  01B5  3A64               	xorlw	100	; case 100
 12734  01B6  1903               	skipnz
 12735  01B7  29BC               	goto	l7816
 12736  01B8  3A0D               	xorlw	13	; case 105
 12737  01B9  1903               	skipnz
 12738  01BA  29BC               	goto	l7816
 12739  01BB  299B               	goto	l7810
 12740  01BC                     l7816:	
 12741                           
 12742                           ;doprnt.c: 1253: {
 12743                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 12744  01BC  0020               	movlb	0	; select bank0
 12745  01BD  0838               	movf	__doprnt@ap,w
 12746  01BE  0086               	movwf	6
 12747  01BF  0187               	clrf	7
 12748  01C0  0801               	movf	1,w
 12749  01C1  0084               	movwf	4
 12750  01C2  0185               	clrf	5
 12751  01C3  3002               	movlw	2
 12752  01C4  0781               	addwf	1,f
 12753  01C5  3F00               	moviw [0]fsr0
 12754  01C6  00C1               	movwf	__doprnt@val
 12755  01C7  3F01               	moviw [1]fsr0
 12756  01C8  00C2               	movwf	__doprnt@val+1
 12757                           
 12758                           ;doprnt.c: 1261: if((int)val < 0) {
 12759  01C9  1FC2               	btfss	__doprnt@val+1,7
 12760  01CA  29D4               	goto	l7824
 12761                           
 12762                           ;doprnt.c: 1262: flag |= 0x03;
 12763  01CB  3003               	movlw	3
 12764  01CC  00B9               	movwf	??__doprnt
 12765  01CD  0839               	movf	??__doprnt,w
 12766  01CE  04C3               	iorwf	__doprnt@flag,f
 12767                           
 12768                           ;doprnt.c: 1263: val = -val;
 12769  01CF  09C1               	comf	__doprnt@val,f
 12770  01D0  09C2               	comf	__doprnt@val+1,f
 12771  01D1  0AC1               	incf	__doprnt@val,f
 12772  01D2  1903               	skipnz
 12773  01D3  0AC2               	incf	__doprnt@val+1,f
 12774  01D4                     l7824:	
 12775                           
 12776                           ;doprnt.c: 1264: }
 12777                           ;doprnt.c: 1266: }
 12778                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12779  01D4  01C6               	clrf	__doprnt@c
 12780  01D5  0AC6               	incf	__doprnt@c,f
 12781  01D6  3005               	movlw	5
 12782  01D7  0646               	xorwf	__doprnt@c,w
 12783  01D8  1903               	btfsc	3,2
 12784  01D9  29F9               	goto	l7836
 12785  01DA                     l7830:	
 12786                           
 12787                           ;doprnt.c: 1306: if(val < dpowers[c])
 12788  01DA  0846               	movf	__doprnt@c,w
 12789  01DB  00B9               	movwf	??__doprnt
 12790  01DC  01BA               	clrf	??__doprnt+1
 12791  01DD  35B9               	lslf	??__doprnt,f
 12792  01DE  0DBA               	rlf	??__doprnt+1,f
 12793  01DF  3061               	movlw	low (_dpowers| (0+32768))
 12794  01E0  0739               	addwf	??__doprnt,w
 12795  01E1  0084               	movwf	4
 12796  01E2  3098               	movlw	high (_dpowers| (0+32768))
 12797  01E3  3D3A               	addwfc	??__doprnt+1,w
 12798  01E4  0085               	movwf	5
 12799  01E5  3F00               	moviw [0]fsr0
 12800  01E6  00BB               	movwf	??__doprnt+2
 12801  01E7  3F01               	moviw [1]fsr0
 12802  01E8  00BC               	movwf	??__doprnt+3
 12803  01E9  083C               	movf	??__doprnt+3,w
 12804  01EA  0242               	subwf	__doprnt@val+1,w
 12805  01EB  1D03               	skipz
 12806  01EC  29EF               	goto	u6375
 12807  01ED  083B               	movf	??__doprnt+2,w
 12808  01EE  0241               	subwf	__doprnt@val,w
 12809  01EF                     u6375:	
 12810  01EF  1C03               	btfss	3,0
 12811  01F0  29F9               	goto	l7836
 12812                           
 12813                           ;doprnt.c: 1307: break;
 12814  01F1  3001               	movlw	1
 12815  01F2  00B9               	movwf	??__doprnt
 12816  01F3  0839               	movf	??__doprnt,w
 12817  01F4  07C6               	addwf	__doprnt@c,f
 12818  01F5  3005               	movlw	5
 12819  01F6  0646               	xorwf	__doprnt@c,w
 12820  01F7  1D03               	btfss	3,2
 12821  01F8  29DA               	goto	l7830
 12822  01F9                     l7836:	
 12823                           
 12824                           ;doprnt.c: 1345: if(width && flag & 0x03)
 12825  01F9  0844               	movf	__doprnt@width,w
 12826  01FA  0445               	iorwf	__doprnt@width+1,w
 12827  01FB  1903               	btfsc	3,2
 12828  01FC  2A05               	goto	l908
 12829  01FD  0843               	movf	__doprnt@flag,w
 12830  01FE  3903               	andlw	3
 12831  01FF  1903               	btfsc	3,2
 12832  0200  2A05               	goto	l908
 12833                           
 12834                           ;doprnt.c: 1346: width--;
 12835  0201  30FF               	movlw	255
 12836  0202  07C4               	addwf	__doprnt@width,f
 12837  0203  30FF               	movlw	255
 12838  0204  3DC5               	addwfc	__doprnt@width+1,f
 12839  0205                     l908:	
 12840                           
 12841                           ;doprnt.c: 1381: if(width > c)
 12842  0205  0846               	movf	__doprnt@c,w
 12843  0206  00B9               	movwf	??__doprnt
 12844  0207  01BA               	clrf	??__doprnt+1
 12845  0208  1BB9               	btfsc	??__doprnt,7
 12846  0209  03BA               	decf	??__doprnt+1,f
 12847  020A  083A               	movf	??__doprnt+1,w
 12848  020B  3A80               	xorlw	128
 12849  020C  00BB               	movwf	??__doprnt+2
 12850  020D  0845               	movf	__doprnt@width+1,w
 12851  020E  3A80               	xorlw	128
 12852  020F  023B               	subwf	??__doprnt+2,w
 12853  0210  1D03               	skipz
 12854  0211  2A14               	goto	u6415
 12855  0212  0844               	movf	__doprnt@width,w
 12856  0213  0239               	subwf	??__doprnt,w
 12857  0214                     u6415:	
 12858  0214  1803               	skipnc
 12859  0215  2A21               	goto	l7844
 12860                           
 12861                           ;doprnt.c: 1382: width -= c;
 12862  0216  0020               	movlb	0	; select bank0
 12863  0217  0846               	movf	__doprnt@c,w
 12864  0218  00B9               	movwf	??__doprnt
 12865  0219  01BA               	clrf	??__doprnt+1
 12866  021A  1BB9               	btfsc	??__doprnt,7
 12867  021B  03BA               	decf	??__doprnt+1,f
 12868  021C  0839               	movf	??__doprnt,w
 12869  021D  02C4               	subwf	__doprnt@width,f
 12870  021E  083A               	movf	??__doprnt+1,w
 12871  021F  3BC5               	subwfb	__doprnt@width+1,f
 12872  0220  2A24               	goto	l7846
 12873  0221                     l7844:	
 12874                           
 12875                           ;doprnt.c: 1383: else
 12876                           ;doprnt.c: 1384: width = 0;
 12877  0221  0020               	movlb	0	; select bank0
 12878  0222  01C4               	clrf	__doprnt@width
 12879  0223  01C5               	clrf	__doprnt@width+1
 12880  0224                     l7846:	
 12881                           
 12882                           ;doprnt.c: 1387: if(flag & 0x04) {
 12883  0224  1D43               	btfss	__doprnt@flag,2
 12884  0225  2A95               	goto	l7870
 12885                           
 12886                           ;doprnt.c: 1392: if(flag & 0x03)
 12887  0226  0843               	movf	__doprnt@flag,w
 12888  0227  3903               	andlw	3
 12889  0228  1903               	btfsc	3,2
 12890  0229  2A5A               	goto	l7858
 12891                           
 12892                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12893  022A  0834               	movf	__doprnt@pb,w
 12894  022B  0086               	movwf	6
 12895  022C  0835               	movf	__doprnt@pb+1,w
 12896  022D  0087               	movwf	7
 12897  022E  3142               	addfsr 1,2
 12898  022F  0016               	moviw fsr1++
 12899  0230  0401               	iorwf	1,w
 12900  0231  1903               	btfsc	3,2
 12901  0232  2A42               	goto	l7854
 12902  0233  302D               	movlw	45
 12903  0234  00B9               	movwf	??__doprnt
 12904  0235  0839               	movf	??__doprnt,w
 12905  0236  00A0               	movwf	putch@c
 12906  0237  0834               	movf	__doprnt@pb,w
 12907  0238  0086               	movwf	6
 12908  0239  0835               	movf	__doprnt@pb+1,w
 12909  023A  0087               	movwf	7
 12910  023B  3142               	addfsr 1,2
 12911  023C  3F41               	moviw [1]fsr1
 12912  023D  008A               	movwf	10
 12913  023E  3F40               	moviw [0]fsr1
 12914  023F  000A               	callw
 12915  0240  3180               	pagesel	$
 12916  0241  2A5A               	goto	l7858
 12917  0242                     l7854:	
 12918  0242  0020               	movlb	0	; select bank0
 12919  0243  0834               	movf	__doprnt@pb,w
 12920  0244  0086               	movwf	6
 12921  0245  0835               	movf	__doprnt@pb+1,w
 12922  0246  0087               	movwf	7
 12923  0247  3F40               	moviw [0]fsr1
 12924  0248  00B9               	movwf	??__doprnt
 12925  0249  3F41               	moviw [1]fsr1
 12926  024A  00BA               	movwf	??__doprnt+1
 12927  024B  0839               	movf	??__doprnt,w
 12928  024C  0086               	movwf	6
 12929  024D  083A               	movf	??__doprnt+1,w
 12930  024E  0087               	movwf	7
 12931  024F  302D               	movlw	45
 12932  0250  0081               	movwf	1
 12933  0251  0834               	movf	__doprnt@pb,w
 12934  0252  0086               	movwf	6
 12935  0253  0835               	movf	__doprnt@pb+1,w
 12936  0254  0087               	movwf	7
 12937  0255  3001               	movlw	1
 12938  0256  0781               	addwf	1,f
 12939  0257  3141               	addfsr 1,1
 12940  0258  1803               	skipnc
 12941  0259  0A81               	incf	1,f
 12942  025A                     l7858:	
 12943                           
 12944                           ;doprnt.c: 1415: if(width)
 12945  025A  0020               	movlb	0	; select bank0
 12946  025B                     L4:	
 12947  025B  0844               	movf	__doprnt@width,w
 12948  025C  0445               	iorwf	__doprnt@width+1,w
 12949  025D  1903               	btfsc	3,2
 12950  025E  2B06               	goto	l7892
 12951                           
 12952                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12953                           
 12954                           ;doprnt.c: 1416: do
 12955  025F  0834               	movf	__doprnt@pb,w
 12956  0260  0086               	movwf	6
 12957  0261  0835               	movf	__doprnt@pb+1,w
 12958  0262  0087               	movwf	7
 12959  0263  3142               	addfsr 1,2
 12960  0264  0016               	moviw fsr1++
 12961  0265  0401               	iorwf	1,w
 12962  0266  1903               	btfsc	3,2
 12963  0267  2A77               	goto	l7864
 12964  0268  3030               	movlw	48
 12965  0269  00B9               	movwf	??__doprnt
 12966  026A  0839               	movf	??__doprnt,w
 12967  026B  00A0               	movwf	putch@c
 12968  026C  0834               	movf	__doprnt@pb,w
 12969  026D  0086               	movwf	6
 12970  026E  0835               	movf	__doprnt@pb+1,w
 12971  026F  0087               	movwf	7
 12972  0270  3142               	addfsr 1,2
 12973  0271  3F41               	moviw [1]fsr1
 12974  0272  008A               	movwf	10
 12975  0273  3F40               	moviw [0]fsr1
 12976  0274  000A               	callw
 12977  0275  3180               	pagesel	$
 12978  0276  2A8F               	goto	l7868
 12979  0277                     l7864:	
 12980  0277  0020               	movlb	0	; select bank0
 12981  0278  0834               	movf	__doprnt@pb,w
 12982  0279  0086               	movwf	6
 12983  027A  0835               	movf	__doprnt@pb+1,w
 12984  027B  0087               	movwf	7
 12985  027C  3F40               	moviw [0]fsr1
 12986  027D  00B9               	movwf	??__doprnt
 12987  027E  3F41               	moviw [1]fsr1
 12988  027F  00BA               	movwf	??__doprnt+1
 12989  0280  0839               	movf	??__doprnt,w
 12990  0281  0086               	movwf	6
 12991  0282  083A               	movf	??__doprnt+1,w
 12992  0283  0087               	movwf	7
 12993  0284  3030               	movlw	48
 12994  0285  0081               	movwf	1
 12995  0286  0834               	movf	__doprnt@pb,w
 12996  0287  0086               	movwf	6
 12997  0288  0835               	movf	__doprnt@pb+1,w
 12998  0289  0087               	movwf	7
 12999  028A  3001               	movlw	1
 13000  028B  0781               	addwf	1,f
 13001  028C  3141               	addfsr 1,1
 13002  028D  1803               	skipnc
 13003  028E  0A81               	incf	1,f
 13004  028F                     l7868:	
 13005                           
 13006                           ;doprnt.c: 1418: while(--width);
 13007  028F  30FF               	movlw	255
 13008  0290  0020               	movlb	0	; select bank0
 13009  0291  07C4               	addwf	__doprnt@width,f
 13010  0292  30FF               	movlw	255
 13011  0293  3DC5               	addwfc	__doprnt@width+1,f
 13012  0294  2A5B               	goto	L4
 13013  0295                     l7870:	
 13014                           ;doprnt.c: 1420: } else
 13015                           
 13016                           
 13017                           ;doprnt.c: 1422: {
 13018                           ;doprnt.c: 1424: if(width
 13019                           ;doprnt.c: 1428: )
 13020  0295  0844               	movf	__doprnt@width,w
 13021  0296  0445               	iorwf	__doprnt@width+1,w
 13022  0297  1903               	btfsc	3,2
 13023  0298  2AD2               	goto	l7882
 13024  0299                     l7872:	
 13025                           ;doprnt.c: 1429: do
 13026                           
 13027                           
 13028                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 13029  0299  0834               	movf	__doprnt@pb,w
 13030  029A  0086               	movwf	6
 13031  029B  0835               	movf	__doprnt@pb+1,w
 13032  029C  0087               	movwf	7
 13033  029D  3142               	addfsr 1,2
 13034  029E  0016               	moviw fsr1++
 13035  029F  0401               	iorwf	1,w
 13036  02A0  1903               	btfsc	3,2
 13037  02A1  2AB1               	goto	l7876
 13038  02A2  3020               	movlw	32
 13039  02A3  00B9               	movwf	??__doprnt
 13040  02A4  0839               	movf	??__doprnt,w
 13041  02A5  00A0               	movwf	putch@c
 13042  02A6  0834               	movf	__doprnt@pb,w
 13043  02A7  0086               	movwf	6
 13044  02A8  0835               	movf	__doprnt@pb+1,w
 13045  02A9  0087               	movwf	7
 13046  02AA  3142               	addfsr 1,2
 13047  02AB  3F41               	moviw [1]fsr1
 13048  02AC  008A               	movwf	10
 13049  02AD  3F40               	moviw [0]fsr1
 13050  02AE  000A               	callw
 13051  02AF  3180               	pagesel	$
 13052  02B0  2AC9               	goto	l7880
 13053  02B1                     l7876:	
 13054  02B1  0020               	movlb	0	; select bank0
 13055  02B2  0834               	movf	__doprnt@pb,w
 13056  02B3  0086               	movwf	6
 13057  02B4  0835               	movf	__doprnt@pb+1,w
 13058  02B5  0087               	movwf	7
 13059  02B6  3F40               	moviw [0]fsr1
 13060  02B7  00B9               	movwf	??__doprnt
 13061  02B8  3F41               	moviw [1]fsr1
 13062  02B9  00BA               	movwf	??__doprnt+1
 13063  02BA  0839               	movf	??__doprnt,w
 13064  02BB  0086               	movwf	6
 13065  02BC  083A               	movf	??__doprnt+1,w
 13066  02BD  0087               	movwf	7
 13067  02BE  3020               	movlw	32
 13068  02BF  0081               	movwf	1
 13069  02C0  0834               	movf	__doprnt@pb,w
 13070  02C1  0086               	movwf	6
 13071  02C2  0835               	movf	__doprnt@pb+1,w
 13072  02C3  0087               	movwf	7
 13073  02C4  3001               	movlw	1
 13074  02C5  0781               	addwf	1,f
 13075  02C6  3141               	addfsr 1,1
 13076  02C7  1803               	skipnc
 13077  02C8  0A81               	incf	1,f
 13078  02C9                     l7880:	
 13079                           
 13080                           ;doprnt.c: 1431: while(--width);
 13081  02C9  30FF               	movlw	255
 13082  02CA  0020               	movlb	0	; select bank0
 13083  02CB  07C4               	addwf	__doprnt@width,f
 13084  02CC  30FF               	movlw	255
 13085  02CD  3DC5               	addwfc	__doprnt@width+1,f
 13086  02CE  0844               	movf	__doprnt@width,w
 13087  02CF  0445               	iorwf	__doprnt@width+1,w
 13088  02D0  1D03               	btfss	3,2
 13089  02D1  2A99               	goto	l7872
 13090  02D2                     l7882:	
 13091                           
 13092                           ;doprnt.c: 1438: if(flag & 0x03)
 13093  02D2  0843               	movf	__doprnt@flag,w
 13094  02D3  3903               	andlw	3
 13095  02D4  1903               	btfsc	3,2
 13096  02D5  2B06               	goto	l7892
 13097                           
 13098                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13099  02D6  0834               	movf	__doprnt@pb,w
 13100  02D7  0086               	movwf	6
 13101  02D8  0835               	movf	__doprnt@pb+1,w
 13102  02D9  0087               	movwf	7
 13103  02DA  3142               	addfsr 1,2
 13104  02DB  0016               	moviw fsr1++
 13105  02DC  0401               	iorwf	1,w
 13106  02DD  1903               	btfsc	3,2
 13107  02DE  2AEE               	goto	l7888
 13108  02DF  302D               	movlw	45
 13109  02E0  00B9               	movwf	??__doprnt
 13110  02E1  0839               	movf	??__doprnt,w
 13111  02E2  00A0               	movwf	putch@c
 13112  02E3  0834               	movf	__doprnt@pb,w
 13113  02E4  0086               	movwf	6
 13114  02E5  0835               	movf	__doprnt@pb+1,w
 13115  02E6  0087               	movwf	7
 13116  02E7  3142               	addfsr 1,2
 13117  02E8  3F41               	moviw [1]fsr1
 13118  02E9  008A               	movwf	10
 13119  02EA  3F40               	moviw [0]fsr1
 13120  02EB  000A               	callw
 13121  02EC  3180               	pagesel	$
 13122  02ED  2B06               	goto	l7892
 13123  02EE                     l7888:	
 13124  02EE  0020               	movlb	0	; select bank0
 13125  02EF  0834               	movf	__doprnt@pb,w
 13126  02F0  0086               	movwf	6
 13127  02F1  0835               	movf	__doprnt@pb+1,w
 13128  02F2  0087               	movwf	7
 13129  02F3  3F40               	moviw [0]fsr1
 13130  02F4  00B9               	movwf	??__doprnt
 13131  02F5  3F41               	moviw [1]fsr1
 13132  02F6  00BA               	movwf	??__doprnt+1
 13133  02F7  0839               	movf	??__doprnt,w
 13134  02F8  0086               	movwf	6
 13135  02F9  083A               	movf	??__doprnt+1,w
 13136  02FA  0087               	movwf	7
 13137  02FB  302D               	movlw	45
 13138  02FC  0081               	movwf	1
 13139  02FD  0834               	movf	__doprnt@pb,w
 13140  02FE  0086               	movwf	6
 13141  02FF  0835               	movf	__doprnt@pb+1,w
 13142  0300  0087               	movwf	7
 13143  0301  3001               	movlw	1
 13144  0302  0781               	addwf	1,f
 13145  0303  3141               	addfsr 1,1
 13146  0304  1803               	skipnc
 13147  0305  0A81               	incf	1,f
 13148  0306                     l7892:	
 13149                           
 13150                           ;doprnt.c: 1469: }
 13151                           ;doprnt.c: 1472: prec = c;
 13152  0306  0020               	movlb	0	; select bank0
 13153  0307  0846               	movf	__doprnt@c,w
 13154  0308  00B9               	movwf	??__doprnt
 13155  0309  0839               	movf	??__doprnt,w
 13156  030A  00BD               	movwf	__doprnt@prec
 13157  030B                     l7904:	
 13158                           ;doprnt.c: 1474: while(prec--) {
 13159                           
 13160  030B  30FF               	movlw	255
 13161  030C  0020               	movlb	0	; select bank0
 13162  030D  00B9               	movwf	??__doprnt
 13163  030E  0839               	movf	??__doprnt,w
 13164  030F  07BD               	addwf	__doprnt@prec,f
 13165  0310  0A3D               	incf	__doprnt@prec,w
 13166  0311  1903               	btfsc	3,2
 13167  0312  286E               	goto	l7906
 13168                           
 13169                           ;doprnt.c: 1478: {
 13170                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 13171  0313  300A               	movlw	10
 13172  0314  00AE               	movwf	___lwmod@divisor
 13173  0315  3000               	movlw	0
 13174  0316  00AF               	movwf	___lwmod@divisor+1
 13175  0317  083D               	movf	__doprnt@prec,w
 13176  0318  00B9               	movwf	??__doprnt
 13177  0319  01BA               	clrf	??__doprnt+1
 13178  031A  35B9               	lslf	??__doprnt,f
 13179  031B  0DBA               	rlf	??__doprnt+1,f
 13180  031C  3061               	movlw	low (_dpowers| (0+32768))
 13181  031D  0739               	addwf	??__doprnt,w
 13182  031E  0084               	movwf	4
 13183  031F  3098               	movlw	high (_dpowers| (0+32768))
 13184  0320  3D3A               	addwfc	??__doprnt+1,w
 13185  0321  0085               	movwf	5
 13186  0322  3F00               	moviw [0]fsr0
 13187  0323  00A6               	movwf	___lwdiv@divisor
 13188  0324  3F01               	moviw [1]fsr0
 13189  0325  00A7               	movwf	___lwdiv@divisor+1
 13190  0326  0842               	movf	__doprnt@val+1,w
 13191  0327  00A9               	movwf	___lwdiv@dividend+1
 13192  0328  0841               	movf	__doprnt@val,w
 13193  0329  00A8               	movwf	___lwdiv@dividend
 13194  032A  3193  2340  3180   	fcall	___lwdiv
 13195  032D  0020               	movlb	0	; select bank0
 13196  032E  0827               	movf	?___lwdiv+1,w
 13197  032F  00B1               	movwf	___lwmod@dividend+1
 13198  0330  0826               	movf	?___lwdiv,w
 13199  0331  00B0               	movwf	___lwmod@dividend
 13200  0332  3192  221D  3180   	fcall	___lwmod
 13201  0335  0020               	movlb	0	; select bank0
 13202  0336  082E               	movf	?___lwmod,w
 13203  0337  3E30               	addlw	48
 13204  0338  00BB               	movwf	??__doprnt+2
 13205  0339  083B               	movf	??__doprnt+2,w
 13206  033A  00C6               	movwf	__doprnt@c
 13207                           
 13208                           ;doprnt.c: 1523: }
 13209                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 13210  033B  0834               	movf	__doprnt@pb,w
 13211  033C  0086               	movwf	6
 13212  033D  0835               	movf	__doprnt@pb+1,w
 13213  033E  0087               	movwf	7
 13214  033F  3142               	addfsr 1,2
 13215  0340  0016               	moviw fsr1++
 13216  0341  0401               	iorwf	1,w
 13217  0342  1903               	btfsc	3,2
 13218  0343  2B53               	goto	l7900
 13219  0344  0846               	movf	__doprnt@c,w
 13220  0345  00B9               	movwf	??__doprnt
 13221  0346  0839               	movf	??__doprnt,w
 13222  0347  00A0               	movwf	putch@c
 13223  0348  0834               	movf	__doprnt@pb,w
 13224  0349  0086               	movwf	6
 13225  034A  0835               	movf	__doprnt@pb+1,w
 13226  034B  0087               	movwf	7
 13227  034C  3142               	addfsr 1,2
 13228  034D  3F41               	moviw [1]fsr1
 13229  034E  008A               	movwf	10
 13230  034F  3F40               	moviw [0]fsr1
 13231  0350  000A               	callw
 13232  0351  3180               	pagesel	$
 13233  0352  2B0B               	goto	l7904
 13234  0353                     l7900:	
 13235  0353  0020               	movlb	0	; select bank0
 13236  0354  0834               	movf	__doprnt@pb,w
 13237  0355  0086               	movwf	6
 13238  0356  0835               	movf	__doprnt@pb+1,w
 13239  0357  0087               	movwf	7
 13240  0358  3F40               	moviw [0]fsr1
 13241  0359  00B9               	movwf	??__doprnt
 13242  035A  3F41               	moviw [1]fsr1
 13243  035B  00BA               	movwf	??__doprnt+1
 13244  035C  0839               	movf	??__doprnt,w
 13245  035D  0086               	movwf	6
 13246  035E  083A               	movf	??__doprnt+1,w
 13247  035F  0087               	movwf	7
 13248  0360  0846               	movf	__doprnt@c,w
 13249  0361  0081               	movwf	1
 13250  0362  0834               	movf	__doprnt@pb,w
 13251  0363  0086               	movwf	6
 13252  0364  0835               	movf	__doprnt@pb+1,w
 13253  0365  0087               	movwf	7
 13254  0366  3001               	movlw	1
 13255  0367  0781               	addwf	1,f
 13256  0368  3141               	addfsr 1,1
 13257  0369  1803               	skipnc
 13258  036A  0A81               	incf	1,f
 13259  036B  2B0B               	goto	l7904
 13260  036C                     l7908:	
 13261                           ;doprnt.c: 1525: }
 13262                           ;doprnt.c: 1533: }
 13263                           ;doprnt.c: 1535: alldone:
 13264                           
 13265                           
 13266                           ;doprnt.c: 1540: return 0;
 13267  036C  0020               	movlb	0	; select bank0
 13268  036D  01B4               	clrf	?__doprnt
 13269  036E  01B5               	clrf	?__doprnt+1
 13270  036F  0008               	return
 13271  0370                     __end_of__doprnt:	
 13272                           
 13273                           	psect	text24
 13274  1D0A                     __ptext24:	
 13275 ;; *************** function _putch *****************
 13276 ;; Defined at:
 13277 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\putch.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;  c               1    0[BANK0 ] unsigned char 
 13280 ;; Auto vars:     Size  Location     Type
 13281 ;;		None
 13282 ;; Return value:  Size  Location     Type
 13283 ;;                  1    wreg      void 
 13284 ;; Registers used:
 13285 ;;		None
 13286 ;; Tracked objects:
 13287 ;;		On entry : 0/0
 13288 ;;		On exit  : 0/0
 13289 ;;		Unchanged: 0/0
 13290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13291 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13295 ;;Total ram usage:        1 bytes
 13296 ;; Hardware stack levels used:    1
 13297 ;; Hardware stack levels required when called:    6
 13298 ;; This function calls:
 13299 ;;		Nothing
 13300 ;; This function is called by:
 13301 ;;		__doprnt
 13302 ;;		_printf
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306                           
 13307                           ;psect for function _putch
 13308  1D0A                     _putch:	
 13309                           
 13310                           ;incstack = 0
 13311                           ; Regs used in _putch: []
 13312  1D0A  0008               	return
 13313  1D0B                     __end_of_putch:	
 13314                           
 13315                           	psect	text25
 13316  1F08                     __ptext25:	
 13317 ;; *************** function _isdigit *****************
 13318 ;; Defined at:
 13319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 13320 ;; Parameters:    Size  Location     Type
 13321 ;;  c               1    wreg     unsigned char 
 13322 ;; Auto vars:     Size  Location     Type
 13323 ;;  c               1    1[BANK0 ] unsigned char 
 13324 ;; Return value:  Size  Location     Type
 13325 ;;		None               void
 13326 ;; Registers used:
 13327 ;;		wreg, status,2, status,0
 13328 ;; Tracked objects:
 13329 ;;		On entry : 0/0
 13330 ;;		On exit  : 0/0
 13331 ;;		Unchanged: 0/0
 13332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13334 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13336 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13337 ;;Total ram usage:        2 bytes
 13338 ;; Hardware stack levels used:    1
 13339 ;; Hardware stack levels required when called:    6
 13340 ;; This function calls:
 13341 ;;		Nothing
 13342 ;; This function is called by:
 13343 ;;		__doprnt
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           
 13347                           
 13348                           ;psect for function _isdigit
 13349  1F08                     _isdigit:	
 13350                           
 13351                           ;incstack = 0
 13352                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13353                           ;isdigit@c stored from wreg
 13354  1F08  0020               	movlb	0	; select bank0
 13355  1F09  00A1               	movwf	isdigit@c
 13356  1F0A  01A0               	clrf	_isdigit$2071
 13357  1F0B  303A               	movlw	58
 13358  1F0C  0221               	subwf	isdigit@c,w
 13359  1F0D  1803               	skipnc
 13360  1F0E  2F15               	goto	l3984
 13361  1F0F  3030               	movlw	48
 13362  1F10  0221               	subwf	isdigit@c,w
 13363  1F11  1C03               	skipc
 13364  1F12  2F15               	goto	l3984
 13365  1F13  01A0               	clrf	_isdigit$2071
 13366  1F14  0AA0               	incf	_isdigit$2071,f
 13367  1F15                     l3984:	
 13368  1F15  0C20               	rrf	_isdigit$2071,w
 13369  1F16  0008               	return
 13370  1F17                     __end_of_isdigit:	
 13371                           
 13372                           	psect	text26
 13373  121D                     __ptext26:	
 13374 ;; *************** function ___lwmod *****************
 13375 ;; Defined at:
 13376 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13377 ;; Parameters:    Size  Location     Type
 13378 ;;  divisor         2   14[BANK0 ] unsigned int 
 13379 ;;  dividend        2   16[BANK0 ] unsigned int 
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;  counter         1   19[BANK0 ] unsigned char 
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  2   14[BANK0 ] unsigned int 
 13384 ;; Registers used:
 13385 ;;		wreg, status,2, status,0
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13391 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;Total ram usage:        6 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:    6
 13398 ;; This function calls:
 13399 ;;		Nothing
 13400 ;; This function is called by:
 13401 ;;		__doprnt
 13402 ;;		_dylen
 13403 ;;		_isleap
 13404 ;; This function uses a non-reentrant model
 13405 ;;
 13406                           
 13407                           
 13408                           ;psect for function ___lwmod
 13409  121D                     ___lwmod:	
 13410                           
 13411                           ;incstack = 0
 13412                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13413  121D  0020               	movlb	0	; select bank0
 13414  121E  082E               	movf	___lwmod@divisor,w
 13415  121F  042F               	iorwf	___lwmod@divisor+1,w
 13416  1220  1903               	btfsc	3,2
 13417  1221  2A45               	goto	l3906
 13418  1222  01B3               	clrf	___lwmod@counter
 13419  1223  0AB3               	incf	___lwmod@counter,f
 13420  1224                     l3896:	
 13421  1224  1BAF               	btfsc	___lwmod@divisor+1,7
 13422  1225  2A30               	goto	l3898
 13423  1226  3001               	movlw	1
 13424  1227                     u2205:	
 13425  1227  35AE               	lslf	___lwmod@divisor,f
 13426  1228  0DAF               	rlf	___lwmod@divisor+1,f
 13427  1229  0B89               	decfsz	9,f
 13428  122A  2A27               	goto	u2205
 13429  122B  3001               	movlw	1
 13430  122C  00B2               	movwf	??___lwmod
 13431  122D  0832               	movf	??___lwmod,w
 13432  122E  07B3               	addwf	___lwmod@counter,f
 13433  122F  2A24               	goto	l3896
 13434  1230                     l3898:	
 13435  1230  082F               	movf	___lwmod@divisor+1,w
 13436  1231  0231               	subwf	___lwmod@dividend+1,w
 13437  1232  1D03               	skipz
 13438  1233  2A36               	goto	u2225
 13439  1234  082E               	movf	___lwmod@divisor,w
 13440  1235  0230               	subwf	___lwmod@dividend,w
 13441  1236                     u2225:	
 13442  1236  1C03               	skipc
 13443  1237  2A3C               	goto	l3902
 13444  1238  082E               	movf	___lwmod@divisor,w
 13445  1239  02B0               	subwf	___lwmod@dividend,f
 13446  123A  082F               	movf	___lwmod@divisor+1,w
 13447  123B  3BB1               	subwfb	___lwmod@dividend+1,f
 13448  123C                     l3902:	
 13449  123C  3001               	movlw	1
 13450  123D                     u2235:	
 13451  123D  36AF               	lsrf	___lwmod@divisor+1,f
 13452  123E  0CAE               	rrf	___lwmod@divisor,f
 13453  123F  0B89               	decfsz	9,f
 13454  1240  2A3D               	goto	u2235
 13455  1241  3001               	movlw	1
 13456  1242  02B3               	subwf	___lwmod@counter,f
 13457  1243  1D03               	btfss	3,2
 13458  1244  2A30               	goto	l3898
 13459  1245                     l3906:	
 13460  1245  0831               	movf	___lwmod@dividend+1,w
 13461  1246  00AF               	movwf	?___lwmod+1
 13462  1247  0830               	movf	___lwmod@dividend,w
 13463  1248  00AE               	movwf	?___lwmod
 13464  1249  0008               	return
 13465  124A                     __end_of___lwmod:	
 13466                           
 13467                           	psect	text27
 13468  1340                     __ptext27:	
 13469 ;; *************** function ___lwdiv *****************
 13470 ;; Defined at:
 13471 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 13472 ;; Parameters:    Size  Location     Type
 13473 ;;  divisor         2    6[BANK0 ] unsigned int 
 13474 ;;  dividend        2    8[BANK0 ] unsigned int 
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;  quotient        2   11[BANK0 ] unsigned int 
 13477 ;;  counter         1   13[BANK0 ] unsigned char 
 13478 ;; Return value:  Size  Location     Type
 13479 ;;                  2    6[BANK0 ] unsigned int 
 13480 ;; Registers used:
 13481 ;;		wreg, status,2, status,0
 13482 ;; Tracked objects:
 13483 ;;		On entry : 0/0
 13484 ;;		On exit  : 0/0
 13485 ;;		Unchanged: 0/0
 13486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13487 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13488 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13491 ;;Total ram usage:        8 bytes
 13492 ;; Hardware stack levels used:    1
 13493 ;; Hardware stack levels required when called:    6
 13494 ;; This function calls:
 13495 ;;		Nothing
 13496 ;; This function is called by:
 13497 ;;		__doprnt
 13498 ;;		_months_to_days
 13499 ;;		_years_to_days
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           
 13504                           ;psect for function ___lwdiv
 13505  1340                     ___lwdiv:	
 13506                           
 13507                           ;incstack = 0
 13508                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13509  1340  0020               	movlb	0	; select bank0
 13510  1341  01AB               	clrf	___lwdiv@quotient
 13511  1342  01AC               	clrf	___lwdiv@quotient+1
 13512  1343  0826               	movf	___lwdiv@divisor,w
 13513  1344  0427               	iorwf	___lwdiv@divisor+1,w
 13514  1345  1903               	btfsc	3,2
 13515  1346  2B70               	goto	l3884
 13516  1347  01AD               	clrf	___lwdiv@counter
 13517  1348  0AAD               	incf	___lwdiv@counter,f
 13518  1349                     l3872:	
 13519  1349  1BA7               	btfsc	___lwdiv@divisor+1,7
 13520  134A  2B55               	goto	l3874
 13521  134B  3001               	movlw	1
 13522  134C                     u2135:	
 13523  134C  35A6               	lslf	___lwdiv@divisor,f
 13524  134D  0DA7               	rlf	___lwdiv@divisor+1,f
 13525  134E  0B89               	decfsz	9,f
 13526  134F  2B4C               	goto	u2135
 13527  1350  3001               	movlw	1
 13528  1351  00AA               	movwf	??___lwdiv
 13529  1352  082A               	movf	??___lwdiv,w
 13530  1353  07AD               	addwf	___lwdiv@counter,f
 13531  1354  2B49               	goto	l3872
 13532  1355                     l3874:	
 13533  1355  3001               	movlw	1
 13534  1356                     u2155:	
 13535  1356  35AB               	lslf	___lwdiv@quotient,f
 13536  1357  0DAC               	rlf	___lwdiv@quotient+1,f
 13537  1358  0B89               	decfsz	9,f
 13538  1359  2B56               	goto	u2155
 13539  135A  0827               	movf	___lwdiv@divisor+1,w
 13540  135B  0229               	subwf	___lwdiv@dividend+1,w
 13541  135C  1D03               	skipz
 13542  135D  2B60               	goto	u2165
 13543  135E  0826               	movf	___lwdiv@divisor,w
 13544  135F  0228               	subwf	___lwdiv@dividend,w
 13545  1360                     u2165:	
 13546  1360  1C03               	skipc
 13547  1361  2B67               	goto	l3880
 13548  1362  0826               	movf	___lwdiv@divisor,w
 13549  1363  02A8               	subwf	___lwdiv@dividend,f
 13550  1364  0827               	movf	___lwdiv@divisor+1,w
 13551  1365  3BA9               	subwfb	___lwdiv@dividend+1,f
 13552  1366  142B               	bsf	___lwdiv@quotient,0
 13553  1367                     l3880:	
 13554  1367  3001               	movlw	1
 13555  1368                     u2175:	
 13556  1368  36A7               	lsrf	___lwdiv@divisor+1,f
 13557  1369  0CA6               	rrf	___lwdiv@divisor,f
 13558  136A  0B89               	decfsz	9,f
 13559  136B  2B68               	goto	u2175
 13560  136C  3001               	movlw	1
 13561  136D  02AD               	subwf	___lwdiv@counter,f
 13562  136E  1D03               	btfss	3,2
 13563  136F  2B55               	goto	l3874
 13564  1370                     l3884:	
 13565  1370  082C               	movf	___lwdiv@quotient+1,w
 13566  1371  00A7               	movwf	?___lwdiv+1
 13567  1372  082B               	movf	___lwdiv@quotient,w
 13568  1373  00A6               	movwf	?___lwdiv
 13569  1374  0008               	return
 13570  1375                     __end_of___lwdiv:	
 13571                           
 13572                           	psect	text28
 13573  17A7                     __ptext28:	
 13574 ;; *************** function _OLED_Clear *****************
 13575 ;; Defined at:
 13576 ;;		line 92 in file "oled.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;		None
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;  j               2   13[BANK0 ] int 
 13581 ;;  i               1   15[BANK0 ] unsigned char 
 13582 ;;  j               1   12[BANK0 ] unsigned char 
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  1    wreg      void 
 13585 ;; Registers used:
 13586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13587 ;; Tracked objects:
 13588 ;;		On entry : 0/0
 13589 ;;		On exit  : 0/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13593 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13594 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13595 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13596 ;;Total ram usage:        6 bytes
 13597 ;; Hardware stack levels used:    1
 13598 ;; Hardware stack levels required when called:   10
 13599 ;; This function calls:
 13600 ;;		_OLED_Data
 13601 ;;		_OLED_PutPicture
 13602 ;;		_OLED_SetColumn
 13603 ;;		_OLED_SetRow
 13604 ;; This function is called by:
 13605 ;;		_Write_String
 13606 ;; This function uses a non-reentrant model
 13607 ;;
 13608                           
 13609                           
 13610                           ;psect for function _OLED_Clear
 13611  17A7                     _OLED_Clear:	
 13612                           
 13613                           ;oled.c: 94: unsigned char i,j;
 13614                           ;oled.c: 95: for( i=0; i<5; i++)
 13615                           
 13616                           ;incstack = 0
 13617                           ; Regs used in _OLED_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13618  17A7  0020               	movlb	0	; select bank0
 13619  17A8  01AF               	clrf	OLED_Clear@i
 13620  17A9  3005               	movlw	5
 13621  17AA  022F               	subwf	OLED_Clear@i,w
 13622  17AB  1803               	btfsc	3,0
 13623  17AC  2FD0               	goto	l4736
 13624  17AD                     l4718:	
 13625                           
 13626                           ;oled.c: 96: {
 13627                           ;oled.c: 97: OLED_SetRow( i);
 13628  17AD  082F               	movf	OLED_Clear@i,w
 13629  17AE  319E  267E  3197   	fcall	_OLED_SetRow
 13630                           
 13631                           ;oled.c: 98: OLED_SetColumn( 0);
 13632  17B1  3000               	movlw	0
 13633  17B2  3190  2009  3197   	fcall	_OLED_SetColumn
 13634                           
 13635                           ;oled.c: 99: for( j=0; j<96; j++)
 13636  17B5  0020               	movlb	0	; select bank0
 13637  17B6  01AC               	clrf	OLED_Clear@j
 13638  17B7  3060               	movlw	96
 13639  17B8  022C               	subwf	OLED_Clear@j,w
 13640  17B9  1803               	btfsc	3,0
 13641  17BA  2FC8               	goto	l4732
 13642  17BB                     l4726:	
 13643                           
 13644                           ;oled.c: 100: OLED_Data( 0x00);
 13645  17BB  3000               	movlw	0
 13646  17BC  319E  2648  3197   	fcall	_OLED_Data
 13647  17BF  3001               	movlw	1
 13648  17C0  0020               	movlb	0	; select bank0
 13649  17C1  00AA               	movwf	??_OLED_Clear
 13650  17C2  082A               	movf	??_OLED_Clear,w
 13651  17C3  07AC               	addwf	OLED_Clear@j,f
 13652  17C4  3060               	movlw	96
 13653  17C5  022C               	subwf	OLED_Clear@j,w
 13654  17C6  1C03               	skipc
 13655  17C7  2FBB               	goto	l4726
 13656  17C8                     l4732:	
 13657  17C8  3001               	movlw	1
 13658  17C9  00AA               	movwf	??_OLED_Clear
 13659  17CA  082A               	movf	??_OLED_Clear,w
 13660  17CB  07AF               	addwf	OLED_Clear@i,f
 13661  17CC  3005               	movlw	5
 13662  17CD  022F               	subwf	OLED_Clear@i,w
 13663  17CE  1C03               	skipc
 13664  17CF  2FAD               	goto	l4718
 13665  17D0                     l4736:	
 13666                           
 13667                           ;oled.c: 101: }
 13668                           ;oled.c: 102: for(int j = 0; j < 400; j++){
 13669  17D0  01AD               	clrf	OLED_Clear@j_1694
 13670  17D1  01AE               	clrf	OLED_Clear@j_1694+1
 13671  17D2  082E               	movf	OLED_Clear@j_1694+1,w
 13672  17D3  3A80               	xorlw	128
 13673  17D4  00AA               	movwf	??_OLED_Clear
 13674  17D5  3081               	movlw	129
 13675  17D6  022A               	subwf	??_OLED_Clear,w
 13676  17D7  1D03               	skipz
 13677  17D8  2FDB               	goto	u3315
 13678  17D9  3090               	movlw	144
 13679  17DA  022D               	subwf	OLED_Clear@j_1694,w
 13680  17DB                     u3315:	
 13681  17DB  1803               	btfsc	3,0
 13682  17DC  2FF8               	goto	l4748
 13683  17DD                     l4742:	
 13684                           
 13685                           ;oled.c: 103: displayArray[j] = 0x00;
 13686  17DD  30B1               	movlw	177
 13687  17DE  0020               	movlb	0	; select bank0
 13688  17DF  00AA               	movwf	??_OLED_Clear
 13689  17E0  3021               	movlw	33
 13690  17E1  00AB               	movwf	??_OLED_Clear+1
 13691  17E2  082D               	movf	OLED_Clear@j_1694,w
 13692  17E3  072A               	addwf	??_OLED_Clear,w
 13693  17E4  0086               	movwf	6
 13694  17E5  082E               	movf	OLED_Clear@j_1694+1,w
 13695  17E6  3D2B               	addwfc	??_OLED_Clear+1,w
 13696  17E7  0087               	movwf	7
 13697  17E8  0181               	clrf	1
 13698  17E9  3001               	movlw	1
 13699  17EA  07AD               	addwf	OLED_Clear@j_1694,f
 13700  17EB  3000               	movlw	0
 13701  17EC  3DAE               	addwfc	OLED_Clear@j_1694+1,f
 13702  17ED  082E               	movf	OLED_Clear@j_1694+1,w
 13703  17EE  3A80               	xorlw	128
 13704  17EF  00AA               	movwf	??_OLED_Clear
 13705  17F0  3081               	movlw	129
 13706  17F1  022A               	subwf	??_OLED_Clear,w
 13707  17F2  1D03               	skipz
 13708  17F3  2FF6               	goto	u3325
 13709  17F4  3090               	movlw	144
 13710  17F5  022D               	subwf	OLED_Clear@j_1694,w
 13711  17F6                     u3325:	
 13712  17F6  1C03               	skipc
 13713  17F7  2FDD               	goto	l4742
 13714  17F8                     l4748:	
 13715                           
 13716                           ;oled.c: 104: }
 13717                           ;oled.c: 105: OLED_PutPicture(emptyArray);
 13718  17F8  3070               	movlw	low (_emptyArray| (0+32768))
 13719  17F9  0020               	movlb	0	; select bank0
 13720  17FA  00A4               	movwf	OLED_PutPicture@pic
 13721  17FB  3083               	movlw	high (_emptyArray| (0+32768))
 13722  17FC  00A5               	movwf	OLED_PutPicture@pic+1
 13723  17FD  3193  23AC         	fcall	_OLED_PutPicture
 13724  17FF  0008               	return
 13725  1800                     __end_of_OLED_Clear:	
 13726                           
 13727                           	psect	text29
 13728  13AC                     __ptext29:	
 13729 ;; *************** function _OLED_PutPicture *****************
 13730 ;; Defined at:
 13731 ;;		line 76 in file "oled.c"
 13732 ;; Parameters:    Size  Location     Type
 13733 ;;  pic             2    4[BANK0 ] PTR const unsigned char 
 13734 ;;		 -> emptyArray(475), displayArray(475), 
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;  i               2    8[BANK0 ] unsigned int 
 13737 ;;  j               2    6[BANK0 ] unsigned int 
 13738 ;; Return value:  Size  Location     Type
 13739 ;;                  1    wreg      void 
 13740 ;; Registers used:
 13741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/0
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13747 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13748 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13751 ;;Total ram usage:        6 bytes
 13752 ;; Hardware stack levels used:    1
 13753 ;; Hardware stack levels required when called:    9
 13754 ;; This function calls:
 13755 ;;		_OLED_Data
 13756 ;;		_OLED_SetColumn
 13757 ;;		_OLED_SetRow
 13758 ;; This function is called by:
 13759 ;;		_OLED_Clear
 13760 ;;		_Write_String
 13761 ;; This function uses a non-reentrant model
 13762 ;;
 13763                           
 13764                           
 13765                           ;psect for function _OLED_PutPicture
 13766  13AC                     _OLED_PutPicture:	
 13767                           
 13768                           ;oled.c: 80: unsigned int i,j;
 13769                           ;oled.c: 81: for( i=0; i<5; i++)
 13770                           
 13771                           ;incstack = 0
 13772                           ; Regs used in _OLED_PutPicture: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13773  13AC  0020               	movlb	0	; select bank0
 13774  13AD  01A8               	clrf	OLED_PutPicture@i
 13775  13AE  01A9               	clrf	OLED_PutPicture@i+1
 13776  13AF                     L5:	
 13777  13AF  3000               	movlw	0
 13778  13B0  0229               	subwf	OLED_PutPicture@i+1,w
 13779  13B1  3005               	movlw	5
 13780  13B2  1903               	skipnz
 13781  13B3  0228               	subwf	OLED_PutPicture@i,w
 13782  13B4  1803               	btfsc	3,0
 13783  13B5  0008               	return
 13784                           
 13785                           ;oled.c: 82: {
 13786                           ;oled.c: 83: OLED_SetRow( i);
 13787  13B6  0828               	movf	OLED_PutPicture@i,w
 13788  13B7  319E  267E  3193   	fcall	_OLED_SetRow
 13789                           
 13790                           ;oled.c: 84: OLED_SetColumn( 0);
 13791  13BA  3000               	movlw	0
 13792  13BB  3190  2009  3193   	fcall	_OLED_SetColumn
 13793                           
 13794                           ;oled.c: 85: for( j=0; j<96; j++)
 13795  13BE  0020               	movlb	0	; select bank0
 13796  13BF  01A6               	clrf	OLED_PutPicture@j
 13797  13C0  01A7               	clrf	OLED_PutPicture@j+1
 13798  13C1  3000               	movlw	0
 13799  13C2  0227               	subwf	OLED_PutPicture@j+1,w
 13800  13C3  3060               	movlw	96
 13801  13C4  1903               	skipnz
 13802  13C5  0226               	subwf	OLED_PutPicture@j,w
 13803  13C6  1803               	btfsc	3,0
 13804  13C7  2BE0               	goto	l4178
 13805  13C8                     l4170:	
 13806                           
 13807                           ;oled.c: 86: {
 13808                           ;oled.c: 87: OLED_Data( *pic++);
 13809  13C8  0824               	movf	OLED_PutPicture@pic,w
 13810  13C9  0084               	movwf	4
 13811  13CA  0825               	movf	OLED_PutPicture@pic+1,w
 13812  13CB  0085               	movwf	5
 13813  13CC  0800               	movf	0,w	;code access
 13814  13CD  319E  2648  3193   	fcall	_OLED_Data
 13815  13D0  3001               	movlw	1
 13816  13D1  0020               	movlb	0	; select bank0
 13817  13D2  07A4               	addwf	OLED_PutPicture@pic,f
 13818  13D3  3000               	movlw	0
 13819  13D4  3DA5               	addwfc	OLED_PutPicture@pic+1,f
 13820  13D5  3001               	movlw	1
 13821  13D6  07A6               	addwf	OLED_PutPicture@j,f
 13822  13D7  3000               	movlw	0
 13823  13D8  3DA7               	addwfc	OLED_PutPicture@j+1,f
 13824  13D9  3000               	movlw	0
 13825  13DA  0227               	subwf	OLED_PutPicture@j+1,w
 13826  13DB  3060               	movlw	96
 13827  13DC  1903               	skipnz
 13828  13DD  0226               	subwf	OLED_PutPicture@j,w
 13829  13DE  1C03               	skipc
 13830  13DF  2BC8               	goto	l4170
 13831  13E0                     l4178:	
 13832  13E0  3001               	movlw	1
 13833  13E1  07A8               	addwf	OLED_PutPicture@i,f
 13834  13E2  3000               	movlw	0
 13835  13E3  3DA9               	addwfc	OLED_PutPicture@i+1,f
 13836  13E4  2BAF               	goto	L5
 13837  13E5                     __end_of_OLED_PutPicture:	
 13838                           
 13839                           	psect	text30
 13840  1E7E                     __ptext30:	
 13841 ;; *************** function _OLED_SetRow *****************
 13842 ;; Defined at:
 13843 ;;		line 59 in file "oled.c"
 13844 ;; Parameters:    Size  Location     Type
 13845 ;;  address         1    wreg     unsigned char 
 13846 ;; Auto vars:     Size  Location     Type
 13847 ;;  address         1    3[BANK0 ] unsigned char 
 13848 ;; Return value:  Size  Location     Type
 13849 ;;                  1    wreg      void 
 13850 ;; Registers used:
 13851 ;;		wreg, status,2, status,0, pclath, cstack
 13852 ;; Tracked objects:
 13853 ;;		On entry : 0/0
 13854 ;;		On exit  : 0/0
 13855 ;;		Unchanged: 0/0
 13856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;Total ram usage:        2 bytes
 13862 ;; Hardware stack levels used:    1
 13863 ;; Hardware stack levels required when called:    8
 13864 ;; This function calls:
 13865 ;;		_OLED_Command
 13866 ;; This function is called by:
 13867 ;;		_OLED_PutPicture
 13868 ;;		_OLED_Clear
 13869 ;; This function uses a non-reentrant model
 13870 ;;
 13871                           
 13872                           
 13873                           ;psect for function _OLED_SetRow
 13874  1E7E                     _OLED_SetRow:	
 13875                           
 13876                           ;incstack = 0
 13877                           ; Regs used in _OLED_SetRow: [wreg+status,2+status,0+pclath+cstack]
 13878                           ;OLED_SetRow@address stored from wreg
 13879  1E7E  0020               	movlb	0	; select bank0
 13880  1E7F  00A3               	movwf	OLED_SetRow@address
 13881                           
 13882                           ;oled.c: 63: address = (uint8_t)(0xB0 | address);
 13883  1E80  0823               	movf	OLED_SetRow@address,w
 13884  1E81  38B0               	iorlw	176
 13885  1E82  00A2               	movwf	??_OLED_SetRow
 13886  1E83  0822               	movf	??_OLED_SetRow,w
 13887  1E84  00A3               	movwf	OLED_SetRow@address
 13888                           
 13889                           ;oled.c: 64: OLED_Command( address);
 13890  1E85  0823               	movf	OLED_SetRow@address,w
 13891  1E86  319E  2620         	fcall	_OLED_Command
 13892  1E88  0008               	return
 13893  1E89                     __end_of_OLED_SetRow:	
 13894                           
 13895                           	psect	text31
 13896  1009                     __ptext31:	
 13897 ;; *************** function _OLED_SetColumn *****************
 13898 ;; Defined at:
 13899 ;;		line 67 in file "oled.c"
 13900 ;; Parameters:    Size  Location     Type
 13901 ;;  address         1    wreg     unsigned char 
 13902 ;; Auto vars:     Size  Location     Type
 13903 ;;  address         1    3[BANK0 ] unsigned char 
 13904 ;; Return value:  Size  Location     Type
 13905 ;;                  1    wreg      void 
 13906 ;; Registers used:
 13907 ;;		wreg, status,2, status,0, pclath, cstack
 13908 ;; Tracked objects:
 13909 ;;		On entry : 0/0
 13910 ;;		On exit  : 0/0
 13911 ;;		Unchanged: 0/0
 13912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13917 ;;Total ram usage:        2 bytes
 13918 ;; Hardware stack levels used:    1
 13919 ;; Hardware stack levels required when called:    8
 13920 ;; This function calls:
 13921 ;;		_OLED_Command
 13922 ;; This function is called by:
 13923 ;;		_OLED_PutPicture
 13924 ;;		_OLED_Clear
 13925 ;; This function uses a non-reentrant model
 13926 ;;
 13927                           
 13928                           
 13929                           ;psect for function _OLED_SetColumn
 13930  1009                     _OLED_SetColumn:	
 13931                           
 13932                           ;incstack = 0
 13933                           ; Regs used in _OLED_SetColumn: [wreg+status,2+status,0+pclath+cstack]
 13934                           ;OLED_SetColumn@address stored from wreg
 13935  1009  0020               	movlb	0	; select bank0
 13936  100A  00A3               	movwf	OLED_SetColumn@address
 13937                           
 13938                           ;oled.c: 71: address += 32;
 13939  100B  3020               	movlw	32
 13940  100C  00A2               	movwf	??_OLED_SetColumn
 13941  100D  0822               	movf	??_OLED_SetColumn,w
 13942  100E  07A3               	addwf	OLED_SetColumn@address,f
 13943                           
 13944                           ;oled.c: 72: OLED_Command(( 0x10 | (address >> 4)));
 13945  100F  0823               	movf	OLED_SetColumn@address,w
 13946  1010  00A2               	movwf	??_OLED_SetColumn
 13947  1011  3004               	movlw	4
 13948  1012                     u2335:	
 13949  1012  36A2               	lsrf	??_OLED_SetColumn,f
 13950  1013  0B89               	decfsz	9,f
 13951  1014  2812               	goto	u2335
 13952  1015  0822               	movf	??_OLED_SetColumn,w
 13953  1016  3810               	iorlw	16
 13954  1017  319E  2620  3190   	fcall	_OLED_Command
 13955                           
 13956                           ;oled.c: 73: OLED_Command(( 0x0f & address));
 13957  101A  0020               	movlb	0	; select bank0
 13958  101B  0823               	movf	OLED_SetColumn@address,w
 13959  101C  390F               	andlw	15
 13960  101D  319E  2620         	fcall	_OLED_Command
 13961  101F  0008               	return
 13962  1020                     __end_of_OLED_SetColumn:	
 13963                           
 13964                           	psect	text32
 13965  1E48                     __ptext32:	
 13966 ;; *************** function _OLED_Data *****************
 13967 ;; Defined at:
 13968 ;;		line 14 in file "oled.c"
 13969 ;; Parameters:    Size  Location     Type
 13970 ;;  temp            1    wreg     unsigned char 
 13971 ;; Auto vars:     Size  Location     Type
 13972 ;;  temp            1    1[BANK0 ] unsigned char 
 13973 ;; Return value:  Size  Location     Type
 13974 ;;                  1    wreg      void 
 13975 ;; Registers used:
 13976 ;;		wreg, status,2, status,0, pclath, cstack
 13977 ;; Tracked objects:
 13978 ;;		On entry : 0/0
 13979 ;;		On exit  : 0/0
 13980 ;;		Unchanged: 0/0
 13981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;Total ram usage:        1 bytes
 13987 ;; Hardware stack levels used:    1
 13988 ;; Hardware stack levels required when called:    7
 13989 ;; This function calls:
 13990 ;;		_SPI2_Exchange8bit
 13991 ;; This function is called by:
 13992 ;;		_OLED_PutPicture
 13993 ;;		_OLED_Clear
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           
 13998                           ;psect for function _OLED_Data
 13999  1E48                     _OLED_Data:	
 14000                           
 14001                           ;incstack = 0
 14002                           ; Regs used in _OLED_Data: [wreg+status,2+status,0+pclath+cstack]
 14003                           ;OLED_Data@temp stored from wreg
 14004  1E48  0020               	movlb	0	; select bank0
 14005  1E49  00A1               	movwf	OLED_Data@temp
 14006                           
 14007                           ;oled.c: 18: LATAbits.LATA3 = 0;
 14008  1E4A  1196               	bcf	22,3	;volatile
 14009                           
 14010                           ;oled.c: 19: LATCbits.LATC2 = 1;
 14011  1E4B  1518               	bsf	24,2	;volatile
 14012                           
 14013                           ;oled.c: 20: SPI2_Exchange8bit( temp);
 14014  1E4C  0821               	movf	OLED_Data@temp,w
 14015  1E4D  319E  2695         	fcall	_SPI2_Exchange8bit
 14016                           
 14017                           ;oled.c: 21: LATAbits.LATA3 = 1;
 14018  1E4F  0020               	movlb	0	; select bank0
 14019  1E50  1596               	bsf	22,3	;volatile
 14020  1E51  0008               	return
 14021  1E52                     __end_of_OLED_Data:	
 14022                           
 14023                           	psect	text33
 14024  0A28                     __ptext33:	
 14025 ;; *************** function _Modify_Data *****************
 14026 ;; Defined at:
 14027 ;;		line 116 in file "oled.c"
 14028 ;; Parameters:    Size  Location     Type
 14029 ;;  c               2    6[BANK0 ] PTR unsigned char 
 14030 ;;		 -> CharacterArray(100), 
 14031 ;;  offset          2    8[BANK0 ] unsigned int 
 14032 ;;  limit           2   10[BANK0 ] unsigned int 
 14033 ;; Auto vars:     Size  Location     Type
 14034 ;;  right           2   21[BANK0 ] int 
 14035 ;;  p               2   23[BANK0 ] int 
 14036 ;;  j               2   25[BANK0 ] unsigned int 
 14037 ;; Return value:  Size  Location     Type
 14038 ;;                  1    wreg      void 
 14039 ;; Registers used:
 14040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14041 ;; Tracked objects:
 14042 ;;		On entry : 0/0
 14043 ;;		On exit  : 0/0
 14044 ;;		Unchanged: 0/0
 14045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14046 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14047 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14048 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14050 ;;Total ram usage:       21 bytes
 14051 ;; Hardware stack levels used:    1
 14052 ;; Hardware stack levels required when called:    7
 14053 ;; This function calls:
 14054 ;;		___wmul
 14055 ;; This function is called by:
 14056 ;;		_Write_String
 14057 ;; This function uses a non-reentrant model
 14058 ;;
 14059                           
 14060                           
 14061                           ;psect for function _Modify_Data
 14062  0A28                     _Modify_Data:	
 14063                           
 14064                           ;oled.c: 120: unsigned int j;
 14065                           ;oled.c: 121: for(int p=0;p<=limit;p++)
 14066                           
 14067                           ;incstack = 0
 14068                           ; Regs used in _Modify_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14069  0A28  0020               	movlb	0	; select bank0
 14070  0A29  01B7               	clrf	Modify_Data@p
 14071  0A2A  01B8               	clrf	Modify_Data@p+1
 14072  0A2B                     l856:	
 14073  0A2B  0838               	movf	Modify_Data@p+1,w
 14074  0A2C  022B               	subwf	Modify_Data@limit+1,w
 14075  0A2D  1D03               	skipz
 14076  0A2E  2A31               	goto	u3365
 14077  0A2F  0837               	movf	Modify_Data@p,w
 14078  0A30  022A               	subwf	Modify_Data@limit,w
 14079  0A31                     u3365:	
 14080  0A31  1C03               	btfss	3,0
 14081  0A32  0008               	return
 14082                           
 14083                           ;oled.c: 122: {
 14084                           ;oled.c: 123: for(j=0;j<5;j++)
 14085  0A33  01B9               	clrf	Modify_Data@j
 14086  0A34  01BA               	clrf	Modify_Data@j+1
 14087  0A35  3000               	movlw	0
 14088  0A36  023A               	subwf	Modify_Data@j+1,w
 14089  0A37  3005               	movlw	5
 14090  0A38  1903               	skipnz
 14091  0A39  0239               	subwf	Modify_Data@j,w
 14092  0A3A  1803               	btfsc	3,0
 14093  0A3B  2A94               	goto	l4776
 14094  0A3C                     l4768:	
 14095                           
 14096                           ;oled.c: 124: {
 14097                           ;oled.c: 125: int right;
 14098                           ;oled.c: 126: right=(j+((int)(c[p])-0x20)*5);
 14099  0A3C  0837               	movf	Modify_Data@p,w
 14100  0A3D  0726               	addwf	Modify_Data@c,w
 14101  0A3E  0086               	movwf	6
 14102  0A3F  0838               	movf	Modify_Data@p+1,w
 14103  0A40  3D27               	addwfc	Modify_Data@c+1,w
 14104  0A41  0087               	movwf	7
 14105  0A42  0801               	movf	1,w
 14106  0A43  3EE0               	addlw	224
 14107  0A44  00A0               	movwf	___wmul@multiplier
 14108  0A45  30FF               	movlw	255
 14109  0A46  1803               	skipnc
 14110  0A47  3000               	movlw	0
 14111  0A48  00A1               	movwf	___wmul@multiplier+1
 14112  0A49  3005               	movlw	5
 14113  0A4A  00A2               	movwf	___wmul@multiplicand
 14114  0A4B  3000               	movlw	0
 14115  0A4C  00A3               	movwf	___wmul@multiplicand+1
 14116  0A4D  3190  2054  318A   	fcall	___wmul
 14117  0A50  0020               	movlb	0	; select bank0
 14118  0A51  0839               	movf	Modify_Data@j,w
 14119  0A52  0720               	addwf	?___wmul,w
 14120  0A53  00B5               	movwf	Modify_Data@right
 14121  0A54  083A               	movf	Modify_Data@j+1,w
 14122  0A55  3D21               	addwfc	?___wmul+1,w
 14123  0A56  00B6               	movwf	Modify_Data@right+1
 14124                           
 14125                           ;oled.c: 127: displayArray[offset+j+(p*5)]=lookup[right];
 14126  0A57  0836               	movf	Modify_Data@right+1,w
 14127  0A58  0085               	movwf	5
 14128  0A59  0835               	movf	Modify_Data@right,w
 14129  0A5A  0084               	movwf	4
 14130  0A5B  304B               	movlw	low (_lookup| (0+32768))
 14131  0A5C  0784               	addwf	4,f
 14132  0A5D  3087               	movlw	high (_lookup| (0+32768))
 14133  0A5E  3D85               	addwfc	5,f
 14134  0A5F  0800               	movf	0,w	;code access
 14135  0A60  00AC               	movwf	??_Modify_Data
 14136  0A61  0838               	movf	Modify_Data@p+1,w
 14137  0A62  00A1               	movwf	___wmul@multiplier+1
 14138  0A63  0837               	movf	Modify_Data@p,w
 14139  0A64  00A0               	movwf	___wmul@multiplier
 14140  0A65  3005               	movlw	5
 14141  0A66  00A2               	movwf	___wmul@multiplicand
 14142  0A67  3000               	movlw	0
 14143  0A68  00A3               	movwf	___wmul@multiplicand+1
 14144  0A69  3190  2054  318A   	fcall	___wmul
 14145  0A6C  0020               	movlb	0	; select bank0
 14146  0A6D  0828               	movf	Modify_Data@offset,w
 14147  0A6E  0720               	addwf	?___wmul,w
 14148  0A6F  00AD               	movwf	??_Modify_Data+1
 14149  0A70  0829               	movf	Modify_Data@offset+1,w
 14150  0A71  3D21               	addwfc	?___wmul+1,w
 14151  0A72  00AE               	movwf	??_Modify_Data+2
 14152  0A73  0839               	movf	Modify_Data@j,w
 14153  0A74  072D               	addwf	??_Modify_Data+1,w
 14154  0A75  00AF               	movwf	??_Modify_Data+3
 14155  0A76  083A               	movf	Modify_Data@j+1,w
 14156  0A77  3D2E               	addwfc	??_Modify_Data+2,w
 14157  0A78  00B0               	movwf	??_Modify_Data+4
 14158  0A79  30B1               	movlw	177
 14159  0A7A  00B1               	movwf	??_Modify_Data+5
 14160  0A7B  3021               	movlw	33
 14161  0A7C  00B2               	movwf	??_Modify_Data+6
 14162  0A7D  082F               	movf	??_Modify_Data+3,w
 14163  0A7E  0731               	addwf	??_Modify_Data+5,w
 14164  0A7F  00B3               	movwf	??_Modify_Data+7
 14165  0A80  0830               	movf	??_Modify_Data+4,w
 14166  0A81  3D32               	addwfc	??_Modify_Data+6,w
 14167  0A82  00B4               	movwf	??_Modify_Data+8
 14168  0A83  0833               	movf	??_Modify_Data+7,w
 14169  0A84  0086               	movwf	6
 14170  0A85  0834               	movf	??_Modify_Data+8,w
 14171  0A86  0087               	movwf	7
 14172  0A87  082C               	movf	??_Modify_Data,w
 14173  0A88  0081               	movwf	1
 14174  0A89  3001               	movlw	1
 14175  0A8A  07B9               	addwf	Modify_Data@j,f
 14176  0A8B  3000               	movlw	0
 14177  0A8C  3DBA               	addwfc	Modify_Data@j+1,f
 14178  0A8D  3000               	movlw	0
 14179  0A8E  023A               	subwf	Modify_Data@j+1,w
 14180  0A8F  3005               	movlw	5
 14181  0A90  1903               	skipnz
 14182  0A91  0239               	subwf	Modify_Data@j,w
 14183  0A92  1C03               	skipc
 14184  0A93  2A3C               	goto	l4768
 14185  0A94                     l4776:	
 14186  0A94  3001               	movlw	1
 14187  0A95  07B7               	addwf	Modify_Data@p,f
 14188  0A96  3000               	movlw	0
 14189  0A97  3DB8               	addwfc	Modify_Data@p+1,f
 14190  0A98  2A2B               	goto	l856
 14191  0A99                     __end_of_Modify_Data:	
 14192                           
 14193                           	psect	text34
 14194  1054                     __ptext34:	
 14195 ;; *************** function ___wmul *****************
 14196 ;; Defined at:
 14197 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14198 ;; Parameters:    Size  Location     Type
 14199 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14200 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;  product         2    4[BANK0 ] unsigned int 
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  2    0[BANK0 ] unsigned int 
 14205 ;; Registers used:
 14206 ;;		wreg, status,2, status,0
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14212 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14213 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14215 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14216 ;;Total ram usage:        6 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; Hardware stack levels required when called:    6
 14219 ;; This function calls:
 14220 ;;		Nothing
 14221 ;; This function is called by:
 14222 ;;		_Modify_Data
 14223 ;;		__doprnt
 14224 ;;		_months_to_days
 14225 ;;		_asctime
 14226 ;; This function uses a non-reentrant model
 14227 ;;
 14228                           
 14229                           
 14230                           ;psect for function ___wmul
 14231  1054                     ___wmul:	
 14232                           
 14233                           ;incstack = 0
 14234                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14235  1054  0020               	movlb	0	; select bank0
 14236  1055  01A4               	clrf	___wmul@product
 14237  1056  01A5               	clrf	___wmul@product+1
 14238  1057                     l3836:	
 14239  1057  1C20               	btfss	___wmul@multiplier,0
 14240  1058  285D               	goto	l1017
 14241  1059  0822               	movf	___wmul@multiplicand,w
 14242  105A  07A4               	addwf	___wmul@product,f
 14243  105B  0823               	movf	___wmul@multiplicand+1,w
 14244  105C  3DA5               	addwfc	___wmul@product+1,f
 14245  105D                     l1017:	
 14246  105D  3001               	movlw	1
 14247  105E                     u2055:	
 14248  105E  35A2               	lslf	___wmul@multiplicand,f
 14249  105F  0DA3               	rlf	___wmul@multiplicand+1,f
 14250  1060  0B89               	decfsz	9,f
 14251  1061  285E               	goto	u2055
 14252  1062  3001               	movlw	1
 14253  1063                     u2065:	
 14254  1063  36A1               	lsrf	___wmul@multiplier+1,f
 14255  1064  0CA0               	rrf	___wmul@multiplier,f
 14256  1065  0B89               	decfsz	9,f
 14257  1066  2863               	goto	u2065
 14258  1067  0820               	movf	___wmul@multiplier,w
 14259  1068  0421               	iorwf	___wmul@multiplier+1,w
 14260  1069  1D03               	btfss	3,2
 14261  106A  2857               	goto	l3836
 14262  106B  0825               	movf	___wmul@product+1,w
 14263  106C  00A1               	movwf	?___wmul+1
 14264  106D  0824               	movf	___wmul@product,w
 14265  106E  00A0               	movwf	?___wmul
 14266  106F  0008               	return
 14267  1070                     __end_of___wmul:	
 14268                           
 14269                           	psect	text35
 14270  1EF9                     __ptext35:	
 14271 ;; *************** function _SYSTEM_Initialize *****************
 14272 ;; Defined at:
 14273 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14274 ;; Parameters:    Size  Location     Type
 14275 ;;		None
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;		None
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  1    wreg      void 
 14280 ;; Registers used:
 14281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14291 ;;Total ram usage:        0 bytes
 14292 ;; Hardware stack levels used:    1
 14293 ;; Hardware stack levels required when called:   17
 14294 ;; This function calls:
 14295 ;;		_OSCILLATOR_Initialize
 14296 ;;		_PIN_MANAGER_Initialize
 14297 ;;		_PMD_Initialize
 14298 ;;		_SPI2_Initialize
 14299 ;;		_rtc6_Initialize
 14300 ;; This function is called by:
 14301 ;;		_main
 14302 ;; This function uses a non-reentrant model
 14303 ;;
 14304                           
 14305                           
 14306                           ;psect for function _SYSTEM_Initialize
 14307  1EF9                     _SYSTEM_Initialize:	
 14308                           
 14309                           ;mcc.c: 52: PMD_Initialize();
 14310                           
 14311                           ;incstack = 0
 14312 ;; hardware stack exceeded
 14313                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14314  1EF9  319D  25CE  319E   	fcall	_PMD_Initialize
 14315                           
 14316                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 14317  1EFC  3194  245C  319E   	fcall	_PIN_MANAGER_Initialize
 14318                           
 14319                           ;mcc.c: 54: OSCILLATOR_Initialize();
 14320  1EFF  319E  260E  319E   	fcall	_OSCILLATOR_Initialize
 14321                           
 14322                           ;mcc.c: 55: SPI2_Initialize();
 14323  1F02  319D  257F  319E   	fcall	_SPI2_Initialize
 14324                           
 14325                           ;mcc.c: 56: rtc6_Initialize();
 14326  1F05  3197  274E         	fcall	_rtc6_Initialize
 14327  1F07  0008               	return
 14328  1F08                     __end_of_SYSTEM_Initialize:	
 14329                           
 14330                           	psect	text36
 14331  174E                     __ptext36:	
 14332 ;; *************** function _rtc6_Initialize *****************
 14333 ;; Defined at:
 14334 ;;		line 111 in file "mcc_generated_files/RTC6.c"
 14335 ;; Parameters:    Size  Location     Type
 14336 ;;		None
 14337 ;; Auto vars:     Size  Location     Type
 14338 ;;  reg             1   21[BANK0 ] unsigned char 
 14339 ;; Return value:  Size  Location     Type
 14340 ;;                  1    wreg      void 
 14341 ;; Registers used:
 14342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14343 ;; Tracked objects:
 14344 ;;		On entry : 0/0
 14345 ;;		On exit  : 0/0
 14346 ;;		Unchanged: 0/0
 14347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14351 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14352 ;;Total ram usage:        3 bytes
 14353 ;; Hardware stack levels used:    1
 14354 ;; Hardware stack levels required when called:   16
 14355 ;; This function calls:
 14356 ;;		_rtcc_read
 14357 ;;		_rtcc_write
 14358 ;; This function is called by:
 14359 ;;		_SYSTEM_Initialize
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363                           
 14364                           ;psect for function _rtc6_Initialize
 14365  174E                     _rtc6_Initialize:	
 14366                           
 14367                           ;RTC6.c: 112: uint8_t reg = 0;
 14368                           
 14369                           ;incstack = 0
 14370 ;; hardware stack exceeded
 14371                           ; Regs used in _rtc6_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14372  174E  0020               	movlb	0	; select bank0
 14373  174F  01B5               	clrf	rtc6_Initialize@reg
 14374                           
 14375                           ;RTC6.c: 114: dateTime.day = (rtcc_read(0x03) & 0x07);
 14376  1750  3003               	movlw	3
 14377  1751  319E  263E  3197   	fcall	_rtcc_read
 14378  1754  3907               	andlw	7
 14379  1755  0020               	movlb	0	; select bank0
 14380  1756  00B3               	movwf	??_rtc6_Initialize
 14381  1757  01B4               	clrf	??_rtc6_Initialize+1
 14382  1758  0833               	movf	??_rtc6_Initialize,w
 14383  1759  0022               	movlb	2	; select bank2
 14384  175A  00AC               	movwf	(_dateTime^(0+256)+12)
 14385  175B  0020               	movlb	0	; select bank0
 14386  175C  0834               	movf	??_rtc6_Initialize+1,w
 14387  175D  0022               	movlb	2	; select bank2
 14388  175E  00AD               	movwf	((_dateTime+1)^(0+256)+12)
 14389                           
 14390                           ;RTC6.c: 115: rtcc_write(0x03, (dateTime.day | 0x08));
 14391  175F  082C               	movf	(_dateTime^(0+256)+12),w
 14392  1760  3808               	iorlw	8
 14393  1761  0020               	movlb	0	; select bank0
 14394  1762  00B3               	movwf	??_rtc6_Initialize
 14395  1763  0833               	movf	??_rtc6_Initialize,w
 14396  1764  00AE               	movwf	rtcc_write@data
 14397  1765  3003               	movlw	3
 14398  1766  319F  2769  3197   	fcall	_rtcc_write
 14399                           
 14400                           ;RTC6.c: 116: dateTime.sec = rtcc_read(0x00);
 14401  1769  3000               	movlw	0
 14402  176A  319E  263E  3197   	fcall	_rtcc_read
 14403  176D  0020               	movlb	0	; select bank0
 14404  176E  00B3               	movwf	??_rtc6_Initialize
 14405  176F  01B4               	clrf	??_rtc6_Initialize+1
 14406  1770  0833               	movf	??_rtc6_Initialize,w
 14407  1771  0022               	movlb	2	; select bank2
 14408  1772  00A0               	movwf	_dateTime^(0+256)
 14409  1773  0020               	movlb	0	; select bank0
 14410  1774  0834               	movf	??_rtc6_Initialize+1,w
 14411  1775  0022               	movlb	2	; select bank2
 14412  1776  00A1               	movwf	(_dateTime+1)^(0+256)
 14413                           
 14414                           ;RTC6.c: 120: rtcc_write(0x07, 0x00 + 0x40 + 0x00);
 14415  1777  3040               	movlw	64
 14416  1778  0020               	movlb	0	; select bank0
 14417  1779  00B3               	movwf	??_rtc6_Initialize
 14418  177A  0833               	movf	??_rtc6_Initialize,w
 14419  177B  00AE               	movwf	rtcc_write@data
 14420  177C  3007               	movlw	7
 14421  177D  319F  2769  3197   	fcall	_rtcc_write
 14422                           
 14423                           ;RTC6.c: 123: rtcc_write(0x00, dateTime.sec | 0x80);
 14424  1780  0022               	movlb	2	; select bank2
 14425  1781  0820               	movf	_dateTime^(0+256),w
 14426  1782  3880               	iorlw	128
 14427  1783  0020               	movlb	0	; select bank0
 14428  1784  00B3               	movwf	??_rtc6_Initialize
 14429  1785  0833               	movf	??_rtc6_Initialize,w
 14430  1786  00AE               	movwf	rtcc_write@data
 14431  1787  3000               	movlw	0
 14432  1788  319F  2769  3197   	fcall	_rtcc_write
 14433  178B                     l7928:	
 14434                           ;RTC6.c: 124: while (!reg) {
 14435                           
 14436  178B  0020               	movlb	0	; select bank0
 14437  178C  0835               	movf	rtc6_Initialize@reg,w
 14438  178D  1D03               	btfss	3,2
 14439  178E  2F9C               	goto	l7930
 14440                           
 14441                           ;RTC6.c: 125: reg = rtcc_read(0x03);
 14442  178F  3003               	movlw	3
 14443  1790  319E  263E  3197   	fcall	_rtcc_read
 14444  1793  0020               	movlb	0	; select bank0
 14445  1794  00B3               	movwf	??_rtc6_Initialize
 14446  1795  0833               	movf	??_rtc6_Initialize,w
 14447  1796  00B5               	movwf	rtc6_Initialize@reg
 14448                           
 14449                           ;RTC6.c: 126: reg &= 0x20;
 14450  1797  3020               	movlw	32
 14451  1798  00B3               	movwf	??_rtc6_Initialize
 14452  1799  0833               	movf	??_rtc6_Initialize,w
 14453  179A  05B5               	andwf	rtc6_Initialize@reg,f
 14454  179B  2F8B               	goto	l7928
 14455  179C                     l7930:	
 14456                           
 14457                           ;RTC6.c: 127: }
 14458                           ;RTC6.c: 130: rtcc_write(0x03, dateTime.day | (0x08 & 0xEF));
 14459  179C  0022               	movlb	2	; select bank2
 14460  179D  082C               	movf	(_dateTime^(0+256)+12),w
 14461  179E  3808               	iorlw	8
 14462  179F  0020               	movlb	0	; select bank0
 14463  17A0  00B3               	movwf	??_rtc6_Initialize
 14464  17A1  0833               	movf	??_rtc6_Initialize,w
 14465  17A2  00AE               	movwf	rtcc_write@data
 14466  17A3  3003               	movlw	3
 14467  17A4  319F  2769         	fcall	_rtcc_write
 14468  17A6  0008               	return
 14469  17A7                     __end_of_rtc6_Initialize:	
 14470                           
 14471                           	psect	text37
 14472  1F69                     __ptext37:	
 14473 ;; *************** function _rtcc_write *****************
 14474 ;; Defined at:
 14475 ;;		line 106 in file "mcc_generated_files/RTC6.c"
 14476 ;; Parameters:    Size  Location     Type
 14477 ;;  addr            1    wreg     unsigned char 
 14478 ;;  data            1   14[BANK0 ] unsigned char 
 14479 ;; Auto vars:     Size  Location     Type
 14480 ;;  addr            1   17[BANK0 ] unsigned char 
 14481 ;; Return value:  Size  Location     Type
 14482 ;;                  1    wreg      void 
 14483 ;; Registers used:
 14484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14485 ;; Tracked objects:
 14486 ;;		On entry : 0/0
 14487 ;;		On exit  : 0/0
 14488 ;;		Unchanged: 0/0
 14489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14490 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14493 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14494 ;;Total ram usage:        4 bytes
 14495 ;; Hardware stack levels used:    1
 14496 ;; Hardware stack levels required when called:   15
 14497 ;; This function calls:
 14498 ;;		_i2c_write1ByteRegister
 14499 ;; This function is called by:
 14500 ;;		_rtc6_Initialize
 14501 ;;		_rtc6_SetComponent
 14502 ;;		_rtc6_EnableAlarms
 14503 ;;		_rtc6_SetAlarm0
 14504 ;;		_rtc6_ClearAlarm0
 14505 ;;		_rtc6_SetAlarm1
 14506 ;;		_rtc6_ClearAlarm1
 14507 ;; This function uses a non-reentrant model
 14508 ;;
 14509                           
 14510                           
 14511                           ;psect for function _rtcc_write
 14512  1F69                     _rtcc_write:	
 14513                           
 14514                           ;incstack = 0
 14515 ;; hardware stack exceeded
 14516                           ; Regs used in _rtcc_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14517                           ;rtcc_write@addr stored from wreg
 14518  1F69  0020               	movlb	0	; select bank0
 14519  1F6A  00B1               	movwf	rtcc_write@addr
 14520                           
 14521                           ;RTC6.c: 107: i2c_write1ByteRegister(0x6F, addr, data);
 14522  1F6B  0831               	movf	rtcc_write@addr,w
 14523  1F6C  00AF               	movwf	??_rtcc_write
 14524  1F6D  082F               	movf	??_rtcc_write,w
 14525  1F6E  00AA               	movwf	i2c_write1ByteRegister@reg
 14526  1F6F  082E               	movf	rtcc_write@data,w
 14527  1F70  00B0               	movwf	??_rtcc_write+1
 14528  1F71  0830               	movf	??_rtcc_write+1,w
 14529  1F72  00AB               	movwf	i2c_write1ByteRegister@data
 14530  1F73  306F               	movlw	111
 14531  1F74  3192  22A8  319F   	fcall	_i2c_write1ByteRegister
 14532                           
 14533                           ;RTC6.c: 108: _delay((unsigned long)((5)*(1000000/4000.0)));
 14534  1F77  30FA               	movlw	250
 14535  1F78                     u6917:	
 14536  1F78  3200               	nop2
 14537  1F79  0B89               	decfsz	9,f
 14538  1F7A  2F78               	goto	u6917
 14539  1F7B  0008               	return
 14540  1F7C                     __end_of_rtcc_write:	
 14541                           
 14542                           	psect	text38
 14543  12A8                     __ptext38:	
 14544 ;; *************** function _i2c_write1ByteRegister *****************
 14545 ;; Defined at:
 14546 ;;		line 38 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14547 ;; Parameters:    Size  Location     Type
 14548 ;;  address         1    wreg     unsigned char 
 14549 ;;  reg             1   10[BANK0 ] unsigned char 
 14550 ;;  data            1   11[BANK0 ] unsigned char 
 14551 ;; Auto vars:     Size  Location     Type
 14552 ;;  address         1   13[BANK0 ] unsigned char 
 14553 ;; Return value:  Size  Location     Type
 14554 ;;                  1    wreg      void 
 14555 ;; Registers used:
 14556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 0/0
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14562 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14564 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14565 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14566 ;;Total ram usage:        4 bytes
 14567 ;; Hardware stack levels used:    1
 14568 ;; Hardware stack levels required when called:   14
 14569 ;; This function calls:
 14570 ;;		_i2c_close
 14571 ;;		_i2c_masterWrite
 14572 ;;		_i2c_open
 14573 ;;		_i2c_setAddressNACKCallback
 14574 ;;		_i2c_setBuffer
 14575 ;;		_i2c_setDataCompleteCallback
 14576 ;; This function is called by:
 14577 ;;		_rtcc_write
 14578 ;;		_rtc6_EEPRWriteLatchEnable
 14579 ;;		_rtc6_EEPRWriteLatchDisable
 14580 ;;		_rtc6_WriteByteEEPROM
 14581 ;; This function uses a non-reentrant model
 14582 ;;
 14583                           
 14584                           
 14585                           ;psect for function _i2c_write1ByteRegister
 14586  12A8                     _i2c_write1ByteRegister:	
 14587                           
 14588                           ;incstack = 0
 14589 ;; hardware stack exceeded
 14590                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14591                           ;i2c_write1ByteRegister@address stored from wreg
 14592  12A8  0020               	movlb	0	; select bank0
 14593  12A9  00AD               	movwf	i2c_write1ByteRegister@address
 14594  12AA                     l7728:	
 14595                           ;i2c_simple_master.c: 40: while(!i2c_open(address));
 14596                           
 14597  12AA  0020               	movlb	0	; select bank0
 14598  12AB  082D               	movf	i2c_write1ByteRegister@address,w
 14599  12AC  3195  25B9  3192   	fcall	_i2c_open
 14600  12AF  3A00               	xorlw	0
 14601  12B0  1903               	skipnz
 14602  12B1  2AAA               	goto	l7728
 14603                           
 14604                           ;i2c_simple_master.c: 41: i2c_setDataCompleteCallback(wr1RegCompleteHandler,&data);
 14605  12B2  30A7               	movlw	low _wr1RegCompleteHandler
 14606  12B3  0020               	movlb	0	; select bank0
 14607  12B4  00A5               	movwf	i2c_setDataCompleteCallback@cb
 14608  12B5  301F               	movlw	high _wr1RegCompleteHandler
 14609  12B6  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 14610  12B7  302B               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14611  12B8  00AC               	movwf	??_i2c_write1ByteRegister
 14612  12B9  082C               	movf	??_i2c_write1ByteRegister,w
 14613  12BA  00A7               	movwf	i2c_setDataCompleteCallback@p
 14614  12BB  319E  26D1  3192   	fcall	_i2c_setDataCompleteCallback
 14615                           
 14616                           ;i2c_simple_master.c: 42: i2c_setBuffer(&reg,1);
 14617  12BE  3001               	movlw	1
 14618  12BF  0020               	movlb	0	; select bank0
 14619  12C0  00A0               	movwf	i2c_setBuffer@bufferSize
 14620  12C1  3000               	movlw	0
 14621  12C2  00A1               	movwf	i2c_setBuffer@bufferSize+1
 14622  12C3  302A               	movlw	(low (i2c_write1ByteRegister@reg| 0))& (0+255)
 14623  12C4  319F  277C  3192   	fcall	_i2c_setBuffer
 14624                           
 14625                           ;i2c_simple_master.c: 43: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 14626  12C7  3091               	movlw	low _i2c_restartWrite
 14627  12C8  0020               	movlb	0	; select bank0
 14628  12C9  00A5               	movwf	i2c_setAddressNACKCallback@cb
 14629  12CA  301D               	movlw	high _i2c_restartWrite
 14630  12CB  00A6               	movwf	i2c_setAddressNACKCallback@cb+1
 14631  12CC  01A7               	clrf	i2c_setAddressNACKCallback@p
 14632  12CD  319E  26DE  3192   	fcall	_i2c_setAddressNACKCallback
 14633                           
 14634                           ;i2c_simple_master.c: 44: i2c_masterWrite();
 14635  12D0  319D  256B  3192   	fcall	_i2c_masterWrite
 14636  12D3                     l7738:	
 14637                           ;i2c_simple_master.c: 45: while(I2C_BUSY == i2c_close());
 14638                           
 14639  12D3  3190  2039  3192   	fcall	_i2c_close
 14640  12D6  3A01               	xorlw	1
 14641  12D7  1D03               	btfss	3,2
 14642  12D8  0008               	return
 14643  12D9  2AD3               	goto	l7738
 14644  12DA                     __end_of_i2c_write1ByteRegister:	
 14645                           
 14646                           	psect	text39
 14647  1E3E                     __ptext39:	
 14648 ;; *************** function _rtcc_read *****************
 14649 ;; Defined at:
 14650 ;;		line 102 in file "mcc_generated_files/RTC6.c"
 14651 ;; Parameters:    Size  Location     Type
 14652 ;;  addr            1    wreg     unsigned char 
 14653 ;; Auto vars:     Size  Location     Type
 14654 ;;  addr            1   18[BANK0 ] unsigned char 
 14655 ;; Return value:  Size  Location     Type
 14656 ;;                  1    wreg      unsigned char 
 14657 ;; Registers used:
 14658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14659 ;; Tracked objects:
 14660 ;;		On entry : 0/0
 14661 ;;		On exit  : 0/0
 14662 ;;		Unchanged: 0/0
 14663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14668 ;;Total ram usage:        2 bytes
 14669 ;; Hardware stack levels used:    1
 14670 ;; Hardware stack levels required when called:   15
 14671 ;; This function calls:
 14672 ;;		_i2c_read1ByteRegister
 14673 ;; This function is called by:
 14674 ;;		_rtc6_Initialize
 14675 ;;		_rtc6_SetComponent
 14676 ;;		_rtc6_GetComponent
 14677 ;;		_rtc6_EnableAlarms
 14678 ;;		_rtc6_ClearAlarm0
 14679 ;;		_rtc6_ClearAlarm1
 14680 ;; This function uses a non-reentrant model
 14681 ;;
 14682                           
 14683                           
 14684                           ;psect for function _rtcc_read
 14685  1E3E                     _rtcc_read:	
 14686                           
 14687                           ;incstack = 0
 14688 ;; hardware stack exceeded
 14689                           ; Regs used in _rtcc_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14690                           ;rtcc_read@addr stored from wreg
 14691  1E3E  0020               	movlb	0	; select bank0
 14692  1E3F  00B2               	movwf	rtcc_read@addr
 14693                           
 14694                           ;RTC6.c: 103: return i2c_read1ByteRegister(0x6F, addr);
 14695  1E40  0832               	movf	rtcc_read@addr,w
 14696  1E41  00B1               	movwf	??_rtcc_read
 14697  1E42  0831               	movf	??_rtcc_read,w
 14698  1E43  00AA               	movwf	i2c_read1ByteRegister@reg
 14699  1E44  306F               	movlw	111
 14700  1E45  3196  2607         	fcall	_i2c_read1ByteRegister
 14701  1E47  0008               	return
 14702  1E48                     __end_of_rtcc_read:	
 14703                           
 14704                           	psect	text40
 14705  1607                     __ptext40:	
 14706 ;; *************** function _i2c_read1ByteRegister *****************
 14707 ;; Defined at:
 14708 ;;		line 65 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;  address         1    wreg     unsigned char 
 14711 ;;  reg             1   10[BANK0 ] unsigned char 
 14712 ;; Auto vars:     Size  Location     Type
 14713 ;;  address         1   12[BANK0 ] unsigned char 
 14714 ;;  x               2   14[BANK0 ] int 
 14715 ;;  d2              1   16[BANK0 ] unsigned char 
 14716 ;;  e               1   13[BANK0 ] enum E92
 14717 ;; Return value:  Size  Location     Type
 14718 ;;                  1    wreg      unsigned char 
 14719 ;; Registers used:
 14720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14721 ;; Tracked objects:
 14722 ;;		On entry : 0/0
 14723 ;;		On exit  : 0/0
 14724 ;;		Unchanged: 0/0
 14725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14726 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14727 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14728 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14729 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14730 ;;Total ram usage:        7 bytes
 14731 ;; Hardware stack levels used:    1
 14732 ;; Hardware stack levels required when called:   14
 14733 ;; This function calls:
 14734 ;;		_i2c_close
 14735 ;;		_i2c_masterWrite
 14736 ;;		_i2c_open
 14737 ;;		_i2c_setAddressNACKCallback
 14738 ;;		_i2c_setBuffer
 14739 ;;		_i2c_setDataCompleteCallback
 14740 ;; This function is called by:
 14741 ;;		_rtcc_read
 14742 ;;		_rtc6_EEPRReadStatusRegister
 14743 ;;		_rtc6_ReadByteEEPROM
 14744 ;; This function uses a non-reentrant model
 14745 ;;
 14746                           
 14747                           
 14748                           ;psect for function _i2c_read1ByteRegister
 14749  1607                     _i2c_read1ByteRegister:	
 14750                           
 14751                           ;incstack = 0
 14752 ;; hardware stack exceeded
 14753                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14754                           ;i2c_read1ByteRegister@address stored from wreg
 14755  1607  0020               	movlb	0	; select bank0
 14756  1608  00AC               	movwf	i2c_read1ByteRegister@address
 14757                           
 14758                           ;i2c_simple_master.c: 67: uint8_t d2=42;
 14759  1609  302A               	movlw	42
 14760  160A  00AB               	movwf	??_i2c_read1ByteRegister
 14761  160B  082B               	movf	??_i2c_read1ByteRegister,w
 14762  160C  00B0               	movwf	i2c_read1ByteRegister@d2
 14763                           
 14764                           ;i2c_simple_master.c: 68: i2c_error_t e;
 14765                           ;i2c_simple_master.c: 69: int x;
 14766                           ;i2c_simple_master.c: 71: for(x = 2; x != 0; x--)
 14767  160D  3002               	movlw	2
 14768  160E  00AE               	movwf	i2c_read1ByteRegister@x
 14769  160F  3000               	movlw	0
 14770  1610  00AF               	movwf	i2c_read1ByteRegister@x+1
 14771  1611  082E               	movf	i2c_read1ByteRegister@x,w
 14772  1612  042F               	iorwf	i2c_read1ByteRegister@x+1,w
 14773  1613  1903               	btfsc	3,2
 14774  1614  2E53               	goto	l7722
 14775  1615                     l7702:	
 14776                           ;i2c_simple_master.c: 72: {
 14777                           ;i2c_simple_master.c: 73: while(!i2c_open(address));
 14778                           
 14779  1615  0020               	movlb	0	; select bank0
 14780  1616  082C               	movf	i2c_read1ByteRegister@address,w
 14781  1617  3195  25B9  3196   	fcall	_i2c_open
 14782  161A  3A00               	xorlw	0
 14783  161B  1903               	skipnz
 14784  161C  2E15               	goto	l7702
 14785                           
 14786                           ;i2c_simple_master.c: 74: i2c_setDataCompleteCallback(rd1RegCompleteHandler,&d2);
 14787  161D  30BD               	movlw	low _rd1RegCompleteHandler
 14788  161E  0020               	movlb	0	; select bank0
 14789  161F  00A5               	movwf	i2c_setDataCompleteCallback@cb
 14790  1620  301F               	movlw	high _rd1RegCompleteHandler
 14791  1621  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 14792  1622  3030               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 14793  1623  00AB               	movwf	??_i2c_read1ByteRegister
 14794  1624  082B               	movf	??_i2c_read1ByteRegister,w
 14795  1625  00A7               	movwf	i2c_setDataCompleteCallback@p
 14796  1626  319E  26D1  3196   	fcall	_i2c_setDataCompleteCallback
 14797                           
 14798                           ;i2c_simple_master.c: 75: i2c_setBuffer(&reg,1);
 14799  1629  3001               	movlw	1
 14800  162A  0020               	movlb	0	; select bank0
 14801  162B  00A0               	movwf	i2c_setBuffer@bufferSize
 14802  162C  3000               	movlw	0
 14803  162D  00A1               	movwf	i2c_setBuffer@bufferSize+1
 14804  162E  302A               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 14805  162F  319F  277C  3196   	fcall	_i2c_setBuffer
 14806                           
 14807                           ;i2c_simple_master.c: 76: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 14808  1632  3091               	movlw	low _i2c_restartWrite
 14809  1633  0020               	movlb	0	; select bank0
 14810  1634  00A5               	movwf	i2c_setAddressNACKCallback@cb
 14811  1635  301D               	movlw	high _i2c_restartWrite
 14812  1636  00A6               	movwf	i2c_setAddressNACKCallback@cb+1
 14813  1637  01A7               	clrf	i2c_setAddressNACKCallback@p
 14814  1638  319E  26DE  3196   	fcall	_i2c_setAddressNACKCallback
 14815                           
 14816                           ;i2c_simple_master.c: 77: i2c_masterWrite();
 14817  163B  319D  256B  3196   	fcall	_i2c_masterWrite
 14818  163E                     l7712:	
 14819                           ;i2c_simple_master.c: 78: while(I2C_BUSY == (e = i2c_close()));
 14820                           
 14821  163E  3190  2039  3196   	fcall	_i2c_close
 14822  1641  0020               	movlb	0	; select bank0
 14823  1642  00AB               	movwf	??_i2c_read1ByteRegister
 14824  1643  082B               	movf	??_i2c_read1ByteRegister,w
 14825  1644  00AD               	movwf	i2c_read1ByteRegister@e
 14826  1645  032D               	decf	i2c_read1ByteRegister@e,w
 14827  1646  1903               	btfsc	3,2
 14828  1647  2E3E               	goto	l7712
 14829                           
 14830                           ;i2c_simple_master.c: 79: if(e==I2C_NOERR) break;
 14831  1648  082D               	movf	i2c_read1ByteRegister@e,w
 14832  1649  1903               	btfsc	3,2
 14833  164A  2E53               	goto	l7722
 14834  164B  30FF               	movlw	255
 14835  164C  07AE               	addwf	i2c_read1ByteRegister@x,f
 14836  164D  30FF               	movlw	255
 14837  164E  3DAF               	addwfc	i2c_read1ByteRegister@x+1,f
 14838  164F  082E               	movf	i2c_read1ByteRegister@x,w
 14839  1650  042F               	iorwf	i2c_read1ByteRegister@x+1,w
 14840  1651  1D03               	btfss	3,2
 14841  1652  2E15               	goto	l7702
 14842  1653                     l7722:	
 14843                           
 14844                           ;i2c_simple_master.c: 80: }
 14845                           ;i2c_simple_master.c: 83: return d2;
 14846  1653  0830               	movf	i2c_read1ByteRegister@d2,w
 14847  1654  0008               	return
 14848  1655                     __end_of_i2c_read1ByteRegister:	
 14849                           
 14850                           	psect	text41
 14851  1EDE                     __ptext41:	
 14852 ;; *************** function _i2c_setAddressNACKCallback *****************
 14853 ;; Defined at:
 14854 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
 14855 ;; Parameters:    Size  Location     Type
 14856 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 14857 ;;		 -> i2c_restartWrite(1), 
 14858 ;;  p               1    7[BANK0 ] PTR void 
 14859 ;;		 -> NULL(0), 
 14860 ;; Auto vars:     Size  Location     Type
 14861 ;;		None
 14862 ;; Return value:  Size  Location     Type
 14863 ;;                  1    wreg      void 
 14864 ;; Registers used:
 14865 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14866 ;; Tracked objects:
 14867 ;;		On entry : 0/0
 14868 ;;		On exit  : 0/0
 14869 ;;		Unchanged: 0/0
 14870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14871 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14873 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14874 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14875 ;;Total ram usage:        4 bytes
 14876 ;; Hardware stack levels used:    1
 14877 ;; Hardware stack levels required when called:    7
 14878 ;; This function calls:
 14879 ;;		_setCallBack
 14880 ;; This function is called by:
 14881 ;;		_i2c_write1ByteRegister
 14882 ;;		_i2c_read1ByteRegister
 14883 ;;		_i2c_writeNBytes
 14884 ;;		_i2c_read2ByteRegister
 14885 ;;		_i2c_write2ByteRegister
 14886 ;;		_i2c_readDataBlock
 14887 ;; This function uses a non-reentrant model
 14888 ;;
 14889                           
 14890                           
 14891                           ;psect for function _i2c_setAddressNACKCallback
 14892  1EDE                     _i2c_setAddressNACKCallback:	
 14893                           
 14894                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
 14895                           
 14896                           ;incstack = 0
 14897                           ; Regs used in _i2c_setAddressNACKCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 14898  1EDE  0020               	movlb	0	; select bank0
 14899  1EDF  0826               	movf	i2c_setAddressNACKCallback@cb+1,w
 14900  1EE0  00A1               	movwf	setCallBack@cb+1
 14901  1EE1  0825               	movf	i2c_setAddressNACKCallback@cb,w
 14902  1EE2  00A0               	movwf	setCallBack@cb
 14903  1EE3  0827               	movf	i2c_setAddressNACKCallback@p,w
 14904  1EE4  00A8               	movwf	??_i2c_setAddressNACKCallback
 14905  1EE5  0828               	movf	??_i2c_setAddressNACKCallback,w
 14906  1EE6  00A2               	movwf	setCallBack@p
 14907  1EE7  3002               	movlw	2
 14908  1EE8  3191  2152         	fcall	_setCallBack
 14909  1EEA  0008               	return
 14910  1EEB                     __end_of_i2c_setAddressNACKCallback:	
 14911                           
 14912                           	psect	text42
 14913  15B9                     __ptext42:	
 14914 ;; *************** function _i2c_open *****************
 14915 ;; Defined at:
 14916 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 14917 ;; Parameters:    Size  Location     Type
 14918 ;;  address         1    wreg     unsigned char 
 14919 ;; Auto vars:     Size  Location     Type
 14920 ;;  address         1    3[BANK0 ] unsigned char 
 14921 ;;  ret             1    4[BANK0 ] enum E15138
 14922 ;; Return value:  Size  Location     Type
 14923 ;;                  1    wreg      enum E15138
 14924 ;; Registers used:
 14925 ;;		wreg, status,2, status,0, pclath, cstack
 14926 ;; Tracked objects:
 14927 ;;		On entry : 0/0
 14928 ;;		On exit  : 0/0
 14929 ;;		Unchanged: 0/0
 14930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14935 ;;Total ram usage:        3 bytes
 14936 ;; Hardware stack levels used:    1
 14937 ;; Hardware stack levels required when called:    7
 14938 ;; This function calls:
 14939 ;;		_i2c1_driver_open
 14940 ;;		_i2c1_driver_setBusCollisionISR
 14941 ;;		_i2c1_driver_setI2cISR
 14942 ;;		_mssp1_clearIRQ
 14943 ;; This function is called by:
 14944 ;;		_i2c_write1ByteRegister
 14945 ;;		_i2c_read1ByteRegister
 14946 ;;		_i2c_writeNBytes
 14947 ;;		_i2c_read2ByteRegister
 14948 ;;		_i2c_write2ByteRegister
 14949 ;;		_i2c_readDataBlock
 14950 ;;		_i2c_readNBytes
 14951 ;; This function uses a non-reentrant model
 14952 ;;
 14953                           
 14954                           
 14955                           ;psect for function _i2c_open
 14956  15B9                     _i2c_open:	
 14957                           
 14958                           ;incstack = 0
 14959                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 14960                           ;i2c_open@address stored from wreg
 14961  15B9  0020               	movlb	0	; select bank0
 14962  15BA  00A3               	movwf	i2c_open@address
 14963                           
 14964                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 14965  15BB  01A4               	clrf	i2c_open@ret
 14966  15BC  0AA4               	incf	i2c_open@ret,f
 14967                           
 14968                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 14969  15BD  0021               	movlb	1	; select bank1
 14970  15BE  18C7               	btfsc	_i2c_status^(0+128),1
 14971  15BF  2E04               	goto	l217
 14972                           
 14973                           ;i2c_master.c: 121: {
 14974                           ;i2c_master.c: 122: i2c_status.address = address;
 14975  15C0  0020               	movlb	0	; select bank0
 14976  15C1  0823               	movf	i2c_open@address,w
 14977  15C2  00A2               	movwf	??_i2c_open
 14978  15C3  0822               	movf	??_i2c_open,w
 14979  15C4  0021               	movlb	1	; select bank1
 14980  15C5  00C8               	movwf	(_i2c_status^(0+128)+1)
 14981                           
 14982                           ;i2c_master.c: 123: i2c_status.busy = 0;
 14983  15C6  1047               	bcf	_i2c_status^(0+128),0
 14984                           
 14985                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 14986  15C7  14C7               	bsf	_i2c_status^(0+128),1
 14987                           
 14988                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 14989  15C8  11C7               	bcf	_i2c_status^(0+128),3
 14990                           
 14991                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 14992  15C9  300E               	movlw	14
 14993  15CA  0020               	movlb	0	; select bank0
 14994  15CB  00A2               	movwf	??_i2c_open
 14995  15CC  0822               	movf	??_i2c_open,w
 14996  15CD  0021               	movlb	1	; select bank1
 14997  15CE  00D0               	movwf	(_i2c_status^(0+128)+9)
 14998                           
 14999                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 15000  15CF  30F4               	movlw	244
 15001  15D0  00CE               	movwf	(_i2c_status^(0+128)+7)
 15002  15D1  3001               	movlw	1
 15003  15D2  00CF               	movwf	(_i2c_status^(0+128)+8)
 15004                           
 15005                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 15006  15D3  1547               	bsf	_i2c_status^(0+128),2
 15007                           
 15008                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 15009  15D4  3085               	movlw	low _returnStop
 15010  15D5  00D2               	movwf	(low ((_i2c_status| 0+11)))^(0+128)
 15011  15D6  301D               	movlw	high _returnStop
 15012  15D7  00D3               	movwf	((low ((_i2c_status| 0+11)))^(0+128)+1)
 15013                           
 15014                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 15015  15D8  01DE               	clrf	(low ((_i2c_status| 0+23)))^(0+128)
 15016                           
 15017                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 15018  15D9  3085               	movlw	low _returnStop
 15019  15DA  00D4               	movwf	(low ((_i2c_status| 0+13)))^(0+128)
 15020  15DB  301D               	movlw	high _returnStop
 15021  15DC  00D5               	movwf	((low ((_i2c_status| 0+13)))^(0+128)+1)
 15022                           
 15023                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 15024  15DD  01DF               	clrf	(low ((_i2c_status| 0+24)))^(0+128)
 15025                           
 15026                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 15027  15DE  3085               	movlw	low _returnStop
 15028  15DF  00D6               	movwf	(low ((_i2c_status| 0+15)))^(0+128)
 15029  15E0  301D               	movlw	high _returnStop
 15030  15E1  00D7               	movwf	((low ((_i2c_status| 0+15)))^(0+128)+1)
 15031                           
 15032                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 15033  15E2  01E0               	clrf	(low ((_i2c_status| 0+25)))^(0+128)
 15034                           
 15035                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 15036  15E3  3085               	movlw	low _returnStop
 15037  15E4  00D8               	movwf	(low ((_i2c_status| 0+17)))^(0+128)
 15038  15E5  301D               	movlw	high _returnStop
 15039  15E6  00D9               	movwf	((low ((_i2c_status| 0+17)))^(0+128)+1)
 15040                           
 15041                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 15042  15E7  01E1               	clrf	(low ((_i2c_status| 0+26)))^(0+128)
 15043                           
 15044                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 15045  15E8  308B               	movlw	low _returnReset
 15046  15E9  00DA               	movwf	(low ((_i2c_status| 0+19)))^(0+128)
 15047  15EA  301D               	movlw	high _returnReset
 15048  15EB  00DB               	movwf	((low ((_i2c_status| 0+19)))^(0+128)+1)
 15049                           
 15050                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 15051  15EC  01E2               	clrf	(low ((_i2c_status| 0+27)))^(0+128)
 15052                           
 15053                           ;i2c_master.c: 142: i2c1_driver_open();
 15054  15ED  319E  2634  3195   	fcall	_i2c1_driver_open
 15055                           
 15056                           ;i2c_master.c: 143: mssp1_clearIRQ();
 15057  15F0  319D  2527  3195   	fcall	_mssp1_clearIRQ
 15058                           
 15059                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 15060  15F3  3012               	movlw	low _i2c_busCollisionISR
 15061  15F4  0020               	movlb	0	; select bank0
 15062  15F5  00A0               	movwf	i2c1_driver_setBusCollisionISR@f
 15063  15F6  301D               	movlw	high _i2c_busCollisionISR
 15064  15F7  00A1               	movwf	i2c1_driver_setBusCollisionISR@f+1
 15065  15F8  319D  259D  3195   	fcall	_i2c1_driver_setBusCollisionISR
 15066                           
 15067                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 15068  15FB  30F0               	movlw	low _i2c_ISR
 15069  15FC  0020               	movlb	0	; select bank0
 15070  15FD  00A0               	movwf	i2c1_driver_setI2cISR@f
 15071  15FE  3011               	movlw	high _i2c_ISR
 15072  15FF  00A1               	movwf	i2c1_driver_setI2cISR@f+1
 15073  1600  319D  25A3         	fcall	_i2c1_driver_setI2cISR
 15074                           
 15075                           ;i2c_master.c: 151: ret = I2C_NOERR;
 15076  1602  0020               	movlb	0	; select bank0
 15077  1603  01A4               	clrf	i2c_open@ret
 15078  1604                     l217:	
 15079                           
 15080                           ;i2c_master.c: 152: }
 15081                           ;i2c_master.c: 153: return ret;
 15082  1604  0020               	movlb	0	; select bank0
 15083  1605  0824               	movf	i2c_open@ret,w
 15084  1606  0008               	return
 15085  1607                     __end_of_i2c_open:	
 15086                           
 15087                           	psect	text43
 15088  1DA3                     __ptext43:	
 15089 ;; *************** function _i2c1_driver_setI2cISR *****************
 15090 ;; Defined at:
 15091 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 15092 ;; Parameters:    Size  Location     Type
 15093 ;;  f               2    0[BANK0 ] PTR void 
 15094 ;;		 -> i2c_ISR(1), 
 15095 ;; Auto vars:     Size  Location     Type
 15096 ;;		None
 15097 ;; Return value:  Size  Location     Type
 15098 ;;                  1    wreg      void 
 15099 ;; Registers used:
 15100 ;;		wreg
 15101 ;; Tracked objects:
 15102 ;;		On entry : 0/0
 15103 ;;		On exit  : 0/0
 15104 ;;		Unchanged: 0/0
 15105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15106 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15109 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15110 ;;Total ram usage:        2 bytes
 15111 ;; Hardware stack levels used:    1
 15112 ;; Hardware stack levels required when called:    6
 15113 ;; This function calls:
 15114 ;;		Nothing
 15115 ;; This function is called by:
 15116 ;;		_i2c_open
 15117 ;; This function uses a non-reentrant model
 15118 ;;
 15119                           
 15120                           
 15121                           ;psect for function _i2c1_driver_setI2cISR
 15122  1DA3                     _i2c1_driver_setI2cISR:	
 15123                           
 15124                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 15125                           
 15126                           ;incstack = 0
 15127                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 15128  1DA3  0020               	movlb	0	; select bank0
 15129  1DA4  0821               	movf	i2c1_driver_setI2cISR@f+1,w
 15130  1DA5  00FB               	movwf	_i2c1_driver_i2cISR+1
 15131  1DA6  0820               	movf	i2c1_driver_setI2cISR@f,w
 15132  1DA7  00FA               	movwf	_i2c1_driver_i2cISR
 15133  1DA8  0008               	return
 15134  1DA9                     __end_of_i2c1_driver_setI2cISR:	
 15135                           
 15136                           	psect	text44
 15137  1D9D                     __ptext44:	
 15138 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 15139 ;; Defined at:
 15140 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 15141 ;; Parameters:    Size  Location     Type
 15142 ;;  f               2    0[BANK0 ] PTR void 
 15143 ;;		 -> i2c_busCollisionISR(1), 
 15144 ;; Auto vars:     Size  Location     Type
 15145 ;;		None
 15146 ;; Return value:  Size  Location     Type
 15147 ;;                  1    wreg      void 
 15148 ;; Registers used:
 15149 ;;		wreg
 15150 ;; Tracked objects:
 15151 ;;		On entry : 0/0
 15152 ;;		On exit  : 0/0
 15153 ;;		Unchanged: 0/0
 15154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15158 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15159 ;;Total ram usage:        2 bytes
 15160 ;; Hardware stack levels used:    1
 15161 ;; Hardware stack levels required when called:    6
 15162 ;; This function calls:
 15163 ;;		Nothing
 15164 ;; This function is called by:
 15165 ;;		_i2c_open
 15166 ;; This function uses a non-reentrant model
 15167 ;;
 15168                           
 15169                           
 15170                           ;psect for function _i2c1_driver_setBusCollisionISR
 15171  1D9D                     _i2c1_driver_setBusCollisionISR:	
 15172                           
 15173                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 15174                           
 15175                           ;incstack = 0
 15176                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 15177  1D9D  0020               	movlb	0	; select bank0
 15178  1D9E  0821               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 15179  1D9F  00FD               	movwf	_i2c1_driver_busCollisionISR+1
 15180  1DA0  0820               	movf	i2c1_driver_setBusCollisionISR@f,w
 15181  1DA1  00FC               	movwf	_i2c1_driver_busCollisionISR
 15182  1DA2  0008               	return
 15183  1DA3                     __end_of_i2c1_driver_setBusCollisionISR:	
 15184                           
 15185                           	psect	text45
 15186  1E34                     __ptext45:	
 15187 ;; *************** function _i2c1_driver_open *****************
 15188 ;; Defined at:
 15189 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 15190 ;; Parameters:    Size  Location     Type
 15191 ;;		None
 15192 ;; Auto vars:     Size  Location     Type
 15193 ;;		None
 15194 ;; Return value:  Size  Location     Type
 15195 ;;		None               void
 15196 ;; Registers used:
 15197 ;;		wreg, status,2
 15198 ;; Tracked objects:
 15199 ;;		On entry : 0/0
 15200 ;;		On exit  : 0/0
 15201 ;;		Unchanged: 0/0
 15202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15207 ;;Total ram usage:        0 bytes
 15208 ;; Hardware stack levels used:    1
 15209 ;; Hardware stack levels required when called:    6
 15210 ;; This function calls:
 15211 ;;		Nothing
 15212 ;; This function is called by:
 15213 ;;		_i2c_open
 15214 ;; This function uses a non-reentrant model
 15215 ;;
 15216                           
 15217                           
 15218                           ;psect for function _i2c1_driver_open
 15219  1E34                     _i2c1_driver_open:	
 15220                           
 15221                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 15222                           
 15223                           ;incstack = 0
 15224                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 15225  1E34  0023               	movlb	3	; select bank3
 15226  1E35  1A90               	btfsc	16,5	;volatile
 15227  1E36  0008               	return
 15228                           
 15229                           ;i2c1_driver.c: 86: {
 15230                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 15231  1E37  018F               	clrf	15	;volatile
 15232                           
 15233                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 15234  1E38  3028               	movlw	40
 15235  1E39  0090               	movwf	16	;volatile
 15236                           
 15237                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 15238  1E3A  0191               	clrf	17	;volatile
 15239                           
 15240                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 15241  1E3B  3003               	movlw	3
 15242  1E3C  008D               	movwf	13	;volatile
 15243                           
 15244                           ;i2c1_driver.c: 93: else
 15245                           ;i2c1_driver.c: 94: return 0;
 15246                           ;	Return value of _i2c1_driver_open is never used
 15247                           
 15248                           ;i2c1_driver.c: 92: }
 15249                           
 15250                           ;i2c1_driver.c: 91: return 1;
 15251                           ;	Return value of _i2c1_driver_open is never used
 15252  1E3D  0008               	return
 15253  1E3E                     __end_of_i2c1_driver_open:	
 15254                           
 15255                           	psect	text46
 15256  1D6B                     __ptext46:	
 15257 ;; *************** function _i2c_masterWrite *****************
 15258 ;; Defined at:
 15259 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
 15260 ;; Parameters:    Size  Location     Type
 15261 ;;		None
 15262 ;; Auto vars:     Size  Location     Type
 15263 ;;		None
 15264 ;; Return value:  Size  Location     Type
 15265 ;;                  1    wreg      enum E15138
 15266 ;; Registers used:
 15267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15268 ;; Tracked objects:
 15269 ;;		On entry : 0/0
 15270 ;;		On exit  : 0/0
 15271 ;;		Unchanged: 0/0
 15272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15277 ;;Total ram usage:        0 bytes
 15278 ;; Hardware stack levels used:    1
 15279 ;; Hardware stack levels required when called:   13
 15280 ;; This function calls:
 15281 ;;		_i2c_masterOperation
 15282 ;; This function is called by:
 15283 ;;		_i2c_write1ByteRegister
 15284 ;;		_i2c_read1ByteRegister
 15285 ;;		_i2c_writeNBytes
 15286 ;;		_i2c_read2ByteRegister
 15287 ;;		_i2c_write2ByteRegister
 15288 ;;		_i2c_readDataBlock
 15289 ;; This function uses a non-reentrant model
 15290 ;;
 15291                           
 15292                           
 15293                           ;psect for function _i2c_masterWrite
 15294  1D6B                     _i2c_masterWrite:	
 15295                           
 15296                           ;i2c_master.c: 224: return i2c_masterOperation(0);
 15297                           ;	Return value of _i2c_masterWrite is never used
 15298                           
 15299                           ;incstack = 0
 15300 ;; hardware stack exceeded
 15301                           ; Regs used in _i2c_masterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15302  1D6B  3000               	movlw	0
 15303  1D6C  3189  2126         	fcall	_i2c_masterOperation
 15304  1D6E  0008               	return
 15305  1D6F                     __end_of_i2c_masterWrite:	
 15306                           
 15307                           	psect	text47
 15308  0926                     __ptext47:	
 15309 ;; *************** function _i2c_masterOperation *****************
 15310 ;; Defined at:
 15311 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 15312 ;; Parameters:    Size  Location     Type
 15313 ;;  read            1    wreg     unsigned char 
 15314 ;; Auto vars:     Size  Location     Type
 15315 ;;  read            1    8[BANK0 ] unsigned char 
 15316 ;;  ret             1    9[BANK0 ] enum E15138
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1    wreg      enum E15138
 15319 ;; Registers used:
 15320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15321 ;; Tracked objects:
 15322 ;;		On entry : 0/0
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15327 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15328 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15329 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15330 ;;Total ram usage:        3 bytes
 15331 ;; Hardware stack levels used:    1
 15332 ;; Hardware stack levels required when called:   12
 15333 ;; This function calls:
 15334 ;;		_i2c1_driver_start
 15335 ;;		_i2c_poller
 15336 ;;		_mssp1_IRQisEnabled
 15337 ;; This function is called by:
 15338 ;;		_i2c_masterWrite
 15339 ;;		_i2c_masterRead
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343                           
 15344                           ;psect for function _i2c_masterOperation
 15345  0926                     _i2c_masterOperation:	
 15346                           
 15347                           ;incstack = 0
 15348 ;; hardware stack exceeded
 15349                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15350                           ;i2c_masterOperation@read stored from wreg
 15351  0926  0020               	movlb	0	; select bank0
 15352  0927  00A8               	movwf	i2c_masterOperation@read
 15353                           
 15354                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 15355  0928  01A9               	clrf	i2c_masterOperation@ret
 15356  0929  0AA9               	incf	i2c_masterOperation@ret,f
 15357                           
 15358                           ;i2c_master.c: 196: if(!i2c_status.busy)
 15359  092A  0021               	movlb	1	; select bank1
 15360  092B  1847               	btfsc	_i2c_status^(0+128),0
 15361  092C  2947               	goto	l7652
 15362                           
 15363                           ;i2c_master.c: 197: {
 15364                           ;i2c_master.c: 198: i2c_status.busy = 1;
 15365  092D  1447               	bsf	_i2c_status^(0+128),0
 15366                           
 15367                           ;i2c_master.c: 199: ret = I2C_NOERR;
 15368  092E  0020               	movlb	0	; select bank0
 15369  092F  01A9               	clrf	i2c_masterOperation@ret
 15370                           
 15371                           ;i2c_master.c: 201: if(read)
 15372  0930  0828               	movf	i2c_masterOperation@read,w
 15373  0931  1903               	btfsc	3,2
 15374  0932  2937               	goto	l7646
 15375                           
 15376                           ;i2c_master.c: 202: {
 15377                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 15378  0933  0021               	movlb	1	; select bank1
 15379  0934  01D0               	clrf	(_i2c_status^(0+128)+9)
 15380  0935  0AD0               	incf	(_i2c_status^(0+128)+9),f
 15381                           
 15382                           ;i2c_master.c: 204: }
 15383  0936  293D               	goto	l7648
 15384  0937                     l7646:	
 15385                           
 15386                           ;i2c_master.c: 205: else
 15387                           ;i2c_master.c: 206: {
 15388                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 15389  0937  3002               	movlw	2
 15390  0938  0020               	movlb	0	; select bank0
 15391  0939  00A7               	movwf	??_i2c_masterOperation
 15392  093A  0827               	movf	??_i2c_masterOperation,w
 15393  093B  0021               	movlb	1	; select bank1
 15394  093C  00D0               	movwf	(_i2c_status^(0+128)+9)
 15395  093D                     l7648:	
 15396                           
 15397                           ;i2c_master.c: 208: }
 15398                           ;i2c_master.c: 209: i2c1_driver_start();
 15399  093D  319D  252D  3189   	fcall	_i2c1_driver_start
 15400                           
 15401                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 15402  0940  319D  25B7  3189   	fcall	_mssp1_IRQisEnabled
 15403  0943  1803               	btfsc	3,0
 15404  0944  2947               	goto	l7652
 15405                           
 15406                           ;i2c_master.c: 212: i2c_poller();
 15407  0945  319E  2673         	fcall	_i2c_poller
 15408  0947                     l7652:	
 15409                           
 15410                           ;i2c_master.c: 213: }
 15411                           ;i2c_master.c: 214: return ret;
 15412  0947  0020               	movlb	0	; select bank0
 15413  0948  0829               	movf	i2c_masterOperation@ret,w
 15414  0949  0008               	return
 15415  094A                     __end_of_i2c_masterOperation:	
 15416                           
 15417                           	psect	text48
 15418  1DB7                     __ptext48:	
 15419 ;; *************** function _mssp1_IRQisEnabled *****************
 15420 ;; Defined at:
 15421 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;		None
 15424 ;; Auto vars:     Size  Location     Type
 15425 ;;		None
 15426 ;; Return value:  Size  Location     Type
 15427 ;;		None               void
 15428 ;; Registers used:
 15429 ;;		wreg, status,2, status,0
 15430 ;; Tracked objects:
 15431 ;;		On entry : 0/0
 15432 ;;		On exit  : 0/0
 15433 ;;		Unchanged: 0/0
 15434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15439 ;;Total ram usage:        1 bytes
 15440 ;; Hardware stack levels used:    1
 15441 ;; Hardware stack levels required when called:    6
 15442 ;; This function calls:
 15443 ;;		Nothing
 15444 ;; This function is called by:
 15445 ;;		_i2c_masterOperation
 15446 ;; This function uses a non-reentrant model
 15447 ;;
 15448                           
 15449                           
 15450                           ;psect for function _mssp1_IRQisEnabled
 15451  1DB7                     _mssp1_IRQisEnabled:	
 15452                           
 15453                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
 15454                           
 15455                           ;incstack = 0
 15456                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 15457  1DB7  002E               	movlb	14	; select bank14
 15458  1DB8  0819               	movf	25,w	;volatile
 15459  1DB9  3901               	andlw	1
 15460  1DBA  0020               	movlb	0	; select bank0
 15461  1DBB  00A0               	movwf	??_mssp1_IRQisEnabled
 15462  1DBC  0C20               	rrf	??_mssp1_IRQisEnabled,w
 15463  1DBD  0008               	return
 15464  1DBE                     __end_of_mssp1_IRQisEnabled:	
 15465                           
 15466                           	psect	text49
 15467  1E73                     __ptext49:	
 15468 ;; *************** function _i2c_poller *****************
 15469 ;; Defined at:
 15470 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 15471 ;; Parameters:    Size  Location     Type
 15472 ;;		None
 15473 ;; Auto vars:     Size  Location     Type
 15474 ;;		None
 15475 ;; Return value:  Size  Location     Type
 15476 ;;                  1    wreg      void 
 15477 ;; Registers used:
 15478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15479 ;; Tracked objects:
 15480 ;;		On entry : 0/0
 15481 ;;		On exit  : 0/0
 15482 ;;		Unchanged: 0/0
 15483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;Total ram usage:        0 bytes
 15489 ;; Hardware stack levels used:    1
 15490 ;; Hardware stack levels required when called:   11
 15491 ;; This function calls:
 15492 ;;		_i2c_ISR
 15493 ;;		_mssp1_waitForEvent
 15494 ;; This function is called by:
 15495 ;;		_i2c_masterOperation
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499                           
 15500                           ;psect for function _i2c_poller
 15501  1E73                     _i2c_poller:	
 15502  1E73                     l7634:	
 15503                           ;i2c_master.c: 232: while(i2c_status.busy)
 15504                           
 15505                           ;incstack = 0
 15506 ;; hardware stack exceeded
 15507                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15508                           
 15509  1E73  0021               	movlb	1	; select bank1
 15510  1E74  1C47               	btfss	_i2c_status^(0+128),0
 15511  1E75  0008               	return
 15512                           
 15513                           ;i2c_master.c: 233: {
 15514                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 15515  1E76  3000               	movlw	0
 15516  1E77  319E  2668  319E   	fcall	_mssp1_waitForEvent
 15517                           
 15518                           ;i2c_master.c: 235: i2c_ISR();
 15519  1E7A  3191  21F0  319E   	fcall	_i2c_ISR
 15520  1E7D  2E73               	goto	l7634
 15521  1E7E                     __end_of_i2c_poller:	
 15522                           
 15523                           	psect	text50
 15524  1E68                     __ptext50:	
 15525 ;; *************** function _mssp1_waitForEvent *****************
 15526 ;; Defined at:
 15527 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 15528 ;; Parameters:    Size  Location     Type
 15529 ;;  timeout         1    wreg     PTR unsigned int 
 15530 ;;		 -> NULL(0), 
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;  timeout         1    0[BANK0 ] PTR unsigned int 
 15533 ;;		 -> NULL(0), 
 15534 ;; Return value:  Size  Location     Type
 15535 ;;                  1    wreg      void 
 15536 ;; Registers used:
 15537 ;;		wreg
 15538 ;; Tracked objects:
 15539 ;;		On entry : 0/0
 15540 ;;		On exit  : 0/0
 15541 ;;		Unchanged: 0/0
 15542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15544 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15546 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;Total ram usage:        1 bytes
 15548 ;; Hardware stack levels used:    1
 15549 ;; Hardware stack levels required when called:    6
 15550 ;; This function calls:
 15551 ;;		Nothing
 15552 ;; This function is called by:
 15553 ;;		_i2c_poller
 15554 ;; This function uses a non-reentrant model
 15555 ;;
 15556                           
 15557                           
 15558                           ;psect for function _mssp1_waitForEvent
 15559  1E68                     _mssp1_waitForEvent:	
 15560                           
 15561                           ;i2c1_driver.c: 73: if(PIR3bits.SSP1IF == 0)
 15562                           
 15563                           ;incstack = 0
 15564                           ; Regs used in _mssp1_waitForEvent: [wreg]
 15565  1E68  002E               	movlb	14	; select bank14
 15566  1E69  180F               	btfsc	15,0	;volatile
 15567  1E6A  0008               	return
 15568  1E6B                     l53:	
 15569                           ;i2c1_driver.c: 74: {
 15570                           ;i2c1_driver.c: 75: while(1)
 15571                           
 15572                           
 15573                           ;i2c1_driver.c: 76: {
 15574                           ;i2c1_driver.c: 77: if(PIR3bits.SSP1IF) break;
 15575  1E6B  002E               	movlb	14	; select bank14
 15576  1E6C  180F               	btfsc	15,0	;volatile
 15577  1E6D  0008               	return
 15578                           
 15579                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 15580  1E6E  3008               	movlw	8
 15581  1E6F                     u6927:	
 15582  1E6F  0B89               	decfsz	9,f
 15583  1E70  2E6F               	goto	u6927
 15584  1E71  0000               	nop
 15585  1E72  2E6B               	goto	l53
 15586  1E73                     __end_of_mssp1_waitForEvent:	
 15587                           
 15588                           	psect	text51
 15589  11F0                     __ptext51:	
 15590 ;; *************** function _i2c_ISR *****************
 15591 ;; Defined at:
 15592 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 15593 ;; Parameters:    Size  Location     Type
 15594 ;;		None
 15595 ;; Auto vars:     Size  Location     Type
 15596 ;;		None
 15597 ;; Return value:  Size  Location     Type
 15598 ;;                  1    wreg      void 
 15599 ;; Registers used:
 15600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15601 ;; Tracked objects:
 15602 ;;		On entry : 0/0
 15603 ;;		On exit  : 0/0
 15604 ;;		Unchanged: 0/0
 15605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15608 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15609 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15610 ;;Total ram usage:        3 bytes
 15611 ;; Hardware stack levels used:    1
 15612 ;; Hardware stack levels required when called:   10
 15613 ;; This function calls:
 15614 ;;		_do_I2C_DO_ACK
 15615 ;;		_do_I2C_DO_ADDRESS_NACK
 15616 ;;		_do_I2C_DO_NACK_RESTART
 15617 ;;		_do_I2C_DO_NACK_STOP
 15618 ;;		_do_I2C_IDLE
 15619 ;;		_do_I2C_RCEN
 15620 ;;		_do_I2C_RESET
 15621 ;;		_do_I2C_RX
 15622 ;;		_do_I2C_SEND_ADR_READ
 15623 ;;		_do_I2C_SEND_ADR_WRITE
 15624 ;;		_do_I2C_SEND_RESTART
 15625 ;;		_do_I2C_SEND_RESTART_READ
 15626 ;;		_do_I2C_SEND_RESTART_WRITE
 15627 ;;		_do_I2C_SEND_STOP
 15628 ;;		_do_I2C_TX
 15629 ;;		_do_I2C_TX_EMPTY
 15630 ;;		_i2c1_driver_isNACK
 15631 ;;		_mssp1_clearIRQ
 15632 ;; This function is called by:
 15633 ;;		_i2c_open
 15634 ;;		_i2c_poller
 15635 ;;		_INTERRUPT_InterruptManager
 15636 ;; This function uses a non-reentrant model
 15637 ;;
 15638                           
 15639                           
 15640                           ;psect for function _i2c_ISR
 15641  11F0                     _i2c_ISR:	
 15642                           
 15643                           ;Skip over the trampoline to the duplicate function for level 1
 15644  11F0  1C7E               	btfss	126,0
 15645  11F1  29F4               	goto	l7618
 15646  11F2  3191  2977         	ljmp	i1l8096
 15647  11F4                     _i2c_ISR$intlevel0:	
 15648  11F4                     l7618:	
 15649                           ;incstack = 0
 15650 ;; hardware stack exceeded
 15651                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15652                           
 15653                           
 15654                           ;i2c_master.c: 421: mssp1_clearIRQ();
 15655  11F4  319D  2527  3191   	fcall	_mssp1_clearIRQ
 15656                           
 15657                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 15658  11F7  0021               	movlb	1	; select bank1
 15659  11F8  1DC7               	btfss	_i2c_status^(0+128),3
 15660  11F9  2A05               	goto	l7626
 15661  11FA  319E  2617  3191   	fcall	_i2c1_driver_isNACK
 15662  11FD  1C03               	btfss	3,0
 15663  11FE  2A05               	goto	l7626
 15664                           
 15665                           ;i2c_master.c: 428: {
 15666                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 15667  11FF  300F               	movlw	15
 15668  1200  0020               	movlb	0	; select bank0
 15669  1201  00A4               	movwf	??_i2c_ISR
 15670  1202  0824               	movf	??_i2c_ISR,w
 15671  1203  0021               	movlb	1	; select bank1
 15672  1204  00D0               	movwf	(_i2c_status^(0+128)+9)
 15673  1205                     l7626:	
 15674                           
 15675                           ;i2c_master.c: 430: }
 15676                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 15677  1205  0021               	movlb	1	; select bank1
 15678  1206  0850               	movf	(_i2c_status^(0+128)+9),w
 15679  1207  0020               	movlb	0	; select bank0
 15680  1208  00A4               	movwf	??_i2c_ISR
 15681  1209  01A5               	clrf	??_i2c_ISR+1
 15682  120A  35A4               	lslf	??_i2c_ISR,f
 15683  120B  0DA5               	rlf	??_i2c_ISR+1,f
 15684  120C  3000               	movlw	low (_fsmStateTable| (0+32768))
 15685  120D  0724               	addwf	??_i2c_ISR,w
 15686  120E  0084               	movwf	4
 15687  120F  3098               	movlw	high (_fsmStateTable| (0+32768))
 15688  1210  3D25               	addwfc	??_i2c_ISR+1,w
 15689  1211  0085               	movwf	5
 15690  1212  3F01               	moviw [1]fsr0
 15691  1213  008A               	movwf	10
 15692  1214  3F00               	moviw [0]fsr0
 15693  1215  000A               	callw
 15694  1216  3191               	pagesel	$
 15695  1217  0020               	movlb	0	; select bank0
 15696  1218  00A6               	movwf	??_i2c_ISR+2
 15697  1219  0826               	movf	??_i2c_ISR+2,w
 15698  121A  0021               	movlb	1	; select bank1
 15699  121B  00D0               	movwf	(_i2c_status^(0+128)+9)
 15700  121C  0008               	return
 15701  121D                     __end_of_i2c_ISR:	
 15702                           
 15703                           	psect	text52
 15704  14E3                     __ptext52:	
 15705 ;; *************** function _do_I2C_RX *****************
 15706 ;; Defined at:
 15707 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 15708 ;; Parameters:    Size  Location     Type
 15709 ;;		None
 15710 ;; Auto vars:     Size  Location     Type
 15711 ;;		None
 15712 ;; Return value:  Size  Location     Type
 15713 ;;                  1    wreg      enum E15307
 15714 ;; Registers used:
 15715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15716 ;; Tracked objects:
 15717 ;;		On entry : 0/0
 15718 ;;		On exit  : 0/0
 15719 ;;		Unchanged: 0/0
 15720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15724 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15725 ;;Total ram usage:        1 bytes
 15726 ;; Hardware stack levels used:    1
 15727 ;; Hardware stack levels required when called:    9
 15728 ;; This function calls:
 15729 ;;		Absolute function
 15730 ;;		_do_I2C_DO_NACK_RESTART
 15731 ;;		_do_I2C_DO_NACK_STOP
 15732 ;;		_i2c1_driver_getRXData
 15733 ;;		_i2c1_driver_sendACK
 15734 ;;		_i2c_restartWrite
 15735 ;;		_rd1RegCompleteHandler
 15736 ;;		_rd2RegCompleteHandler
 15737 ;;		_rdBlkRegCompleteHandler
 15738 ;;		_returnReset
 15739 ;;		_returnStop
 15740 ;;		_wr1RegCompleteHandler
 15741 ;;		_wr2RegCompleteHandler
 15742 ;; This function is called by:
 15743 ;;		_i2c_ISR
 15744 ;;		i1_i2c_ISR
 15745 ;; This function uses a non-reentrant model
 15746 ;;
 15747                           
 15748                           
 15749                           ;psect for function _do_I2C_RX
 15750  14E3                     _do_I2C_RX:	
 15751                           
 15752                           ;Skip over the trampoline to the duplicate function for level 1
 15753  14E3  1C7E               	btfss	126,0
 15754  14E4  2CE7               	goto	l7572
 15755  14E5  3194  2C1E         	ljmp	i1l7998
 15756  14E7                     _do_I2C_RX$intlevel0:	
 15757  14E7                     l7572:	
 15758                           ;incstack = 0
 15759 ;; hardware stack exceeded
 15760                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15761                           
 15762                           
 15763                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 15764  14E7  319D  2539  3194   	fcall	_i2c1_driver_getRXData
 15765  14EA  0020               	movlb	0	; select bank0
 15766  14EB  00A0               	movwf	??_do_I2C_RX
 15767  14EC  0021               	movlb	1	; select bank1
 15768  14ED  0849               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 15769  14EE  0086               	movwf	6
 15770  14EF  0187               	clrf	7
 15771  14F0  0020               	movlb	0	; select bank0
 15772  14F1  0820               	movf	??_do_I2C_RX,w
 15773  14F2  0081               	movwf	1
 15774  14F3  3001               	movlw	1
 15775  14F4  00A0               	movwf	??_do_I2C_RX
 15776  14F5  0820               	movf	??_do_I2C_RX,w
 15777  14F6  0021               	movlb	1	; select bank1
 15778  14F7  07C9               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 15779                           
 15780                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 15781  14F8  3001               	movlw	1
 15782  14F9  02CA               	subwf	(_i2c_status^(0+128)+3),f
 15783  14FA  3000               	movlw	0
 15784  14FB  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 15785  14FC  084A               	movf	(_i2c_status^(0+128)+3),w
 15786  14FD  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 15787  14FE  1903               	btfsc	3,2
 15788  14FF  2D04               	goto	l314
 15789                           
 15790                           ;i2c_master.c: 361: {
 15791                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 15792  1500  319D  2563         	fcall	_i2c1_driver_sendACK
 15793                           
 15794                           ;i2c_master.c: 363: return I2C_RCEN;
 15795  1502  3005               	movlw	5
 15796                           
 15797                           ;i2c_master.c: 364: }
 15798  1503  0008               	return
 15799  1504                     l314:	
 15800                           
 15801                           ;i2c_master.c: 365: else
 15802                           ;i2c_master.c: 366: {
 15803                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 15804  1504  1547               	bsf	_i2c_status^(0+128),2
 15805                           
 15806                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 15807  1505  2D0C               	goto	l7596
 15808  1506                     l7586:	
 15809                           ;i2c_master.c: 369: {
 15810                           ;i2c_master.c: 370: case i2c_restart_write:
 15811                           
 15812                           
 15813                           ;i2c_master.c: 371: case i2c_restart_read:
 15814                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 15815  1506  319E  2606         	fcall	_do_I2C_DO_NACK_RESTART
 15816  1508  0008               	return
 15817  1509                     l7590:	
 15818                           ;i2c_master.c: 374: case i2c_continue:
 15819                           
 15820                           ;i2c_master.c: 373: default:
 15821                           
 15822                           
 15823                           ;i2c_master.c: 375: case i2c_stop:
 15824                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 15825  1509  319D  25FE         	fcall	_do_I2C_DO_NACK_STOP
 15826                           
 15827                           ;i2c_master.c: 377: }
 15828  150B  0008               	return
 15829  150C                     l7596:	
 15830  150C  0021               	movlb	1	; select bank1
 15831  150D  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15832  150E  0020               	movlb	0	; select bank0
 15833  150F  00A0               	movwf	??_do_I2C_RX
 15834  1510  0820               	movf	??_do_I2C_RX,w
 15835  1511  00A9               	movwf	returnStop@p
 15836  1512  300B               	movlw	11
 15837  1513  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 15838  1514  0086               	movwf	6
 15839  1515  0187               	clrf	7
 15840  1516  3F41               	moviw [1]fsr1
 15841  1517  008A               	movwf	10
 15842  1518  3F40               	moviw [0]fsr1
 15843  1519  000A               	callw
 15844  151A  3194               	pagesel	$
 15845                           
 15846                           ; Switch size 1, requested type "space"
 15847                           ; Number of cases is 4, Range of values is 1 to 4
 15848                           ; switch strategies available:
 15849                           ; Name         Instructions Cycles
 15850                           ; simple_byte           13     7 (average)
 15851                           ; direct_byte           17     9 (fixed)
 15852                           ; jumptable            263     9 (fixed)
 15853                           ;	Chosen strategy is simple_byte
 15854  151B  3A01               	xorlw	1	; case 1
 15855  151C  1903               	skipnz
 15856  151D  2D09               	goto	l7590
 15857  151E  3A03               	xorlw	3	; case 2
 15858  151F  1903               	skipnz
 15859  1520  2D06               	goto	l7586
 15860  1521  3A01               	xorlw	1	; case 3
 15861  1522  1903               	skipnz
 15862  1523  2D06               	goto	l7586
 15863  1524  3A07               	xorlw	7	; case 4
 15864  1525  1903               	skipnz
 15865  1526  2D09               	goto	l7590
 15866  1527  2D09               	goto	l7590
 15867  1528  0008               	return
 15868  1529                     __end_of_do_I2C_RX:	
 15869                           
 15870                           	psect	text53
 15871  1655                     __ptext53:	
 15872 ;; *************** function _do_I2C_TX *****************
 15873 ;; Defined at:
 15874 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 15875 ;; Parameters:    Size  Location     Type
 15876 ;;		None
 15877 ;; Auto vars:     Size  Location     Type
 15878 ;;		None
 15879 ;; Return value:  Size  Location     Type
 15880 ;;                  1    wreg      enum E15307
 15881 ;; Registers used:
 15882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15883 ;; Tracked objects:
 15884 ;;		On entry : 0/0
 15885 ;;		On exit  : 0/0
 15886 ;;		Unchanged: 0/0
 15887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15890 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15891 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15892 ;;Total ram usage:        3 bytes
 15893 ;; Hardware stack levels used:    1
 15894 ;; Hardware stack levels required when called:    9
 15895 ;; This function calls:
 15896 ;;		Absolute function
 15897 ;;		_do_I2C_SEND_RESTART_READ
 15898 ;;		_do_I2C_SEND_RESTART_WRITE
 15899 ;;		_do_I2C_SEND_STOP
 15900 ;;		_i2c1_driver_TXData
 15901 ;;		_i2c1_driver_isNACK
 15902 ;;		_i2c_restartWrite
 15903 ;;		_rd1RegCompleteHandler
 15904 ;;		_rd2RegCompleteHandler
 15905 ;;		_rdBlkRegCompleteHandler
 15906 ;;		_returnReset
 15907 ;;		_returnStop
 15908 ;;		_wr1RegCompleteHandler
 15909 ;;		_wr2RegCompleteHandler
 15910 ;; This function is called by:
 15911 ;;		_i2c_ISR
 15912 ;;		i1_i2c_ISR
 15913 ;; This function uses a non-reentrant model
 15914 ;;
 15915                           
 15916                           
 15917                           ;psect for function _do_I2C_TX
 15918  1655                     _do_I2C_TX:	
 15919                           
 15920                           ;Skip over the trampoline to the duplicate function for level 1
 15921  1655  1C7E               	btfss	126,0
 15922  1656  2E59               	goto	l7542
 15923  1657  3195  2D6F         	ljmp	i1l7968
 15924  1659                     _do_I2C_TX$intlevel0:	
 15925  1659                     l7542:	
 15926                           ;incstack = 0
 15927 ;; hardware stack exceeded
 15928                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15929                           
 15930                           
 15931                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 15932  1659  319E  2617  3196   	fcall	_i2c1_driver_isNACK
 15933  165C  1803               	btfsc	3,0
 15934  165D  2E68               	goto	l7560
 15935  165E  2E85               	goto	l298
 15936  165F                     l7546:	
 15937                           ;i2c_master.c: 338: {
 15938                           ;i2c_master.c: 339: case i2c_restart_read:
 15939                           
 15940                           ;i2c_master.c: 336: {
 15941                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 15942                           
 15943                           
 15944                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 15945  165F  319D  25D6         	fcall	_do_I2C_SEND_RESTART_READ
 15946  1661  0008               	return
 15947  1662                     l7550:	
 15948                           ;i2c_master.c: 341: case i2c_restart_write:
 15949                           
 15950                           
 15951                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 15952  1662  319D  25DE         	fcall	_do_I2C_SEND_RESTART_WRITE
 15953  1664  0008               	return
 15954  1665                     l7554:	
 15955                           ;i2c_master.c: 344: case i2c_continue:
 15956                           
 15957                           ;i2c_master.c: 343: default:
 15958                           
 15959                           
 15960                           ;i2c_master.c: 345: case i2c_stop:
 15961                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 15962  1665  319D  25EE         	fcall	_do_I2C_SEND_STOP
 15963                           
 15964                           ;i2c_master.c: 347: }
 15965  1667  0008               	return
 15966  1668                     l7560:	
 15967  1668  0021               	movlb	1	; select bank1
 15968  1669  0861               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 15969  166A  0020               	movlb	0	; select bank0
 15970  166B  00A1               	movwf	??_do_I2C_TX
 15971  166C  0821               	movf	??_do_I2C_TX,w
 15972  166D  00A9               	movwf	returnStop@p
 15973  166E  3011               	movlw	17
 15974  166F  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 15975  1670  0086               	movwf	6
 15976  1671  0187               	clrf	7
 15977  1672  3F41               	moviw [1]fsr1
 15978  1673  008A               	movwf	10
 15979  1674  3F40               	moviw [0]fsr1
 15980  1675  000A               	callw
 15981  1676  3196               	pagesel	$
 15982                           
 15983                           ; Switch size 1, requested type "space"
 15984                           ; Number of cases is 4, Range of values is 1 to 4
 15985                           ; switch strategies available:
 15986                           ; Name         Instructions Cycles
 15987                           ; simple_byte           13     7 (average)
 15988                           ; direct_byte           17     9 (fixed)
 15989                           ; jumptable            263     9 (fixed)
 15990                           ;	Chosen strategy is simple_byte
 15991  1677  3A01               	xorlw	1	; case 1
 15992  1678  1903               	skipnz
 15993  1679  2E65               	goto	l7554
 15994  167A  3A03               	xorlw	3	; case 2
 15995  167B  1903               	skipnz
 15996  167C  2E5F               	goto	l7546
 15997  167D  3A01               	xorlw	1	; case 3
 15998  167E  1903               	skipnz
 15999  167F  2E62               	goto	l7550
 16000  1680  3A07               	xorlw	7	; case 4
 16001  1681  1903               	skipnz
 16002  1682  2E65               	goto	l7554
 16003  1683  2E65               	goto	l7554
 16004                           
 16005                           ;i2c_master.c: 348: }
 16006  1684  0008               	return
 16007  1685                     l298:	
 16008                           
 16009                           ;i2c_master.c: 349: else
 16010                           ;i2c_master.c: 350: {
 16011                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 16012  1685  0021               	movlb	1	; select bank1
 16013  1686  11C7               	bcf	_i2c_status^(0+128),3
 16014                           
 16015                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 16016  1687  3002               	movlw	2
 16017  1688  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 16018  1689  0086               	movwf	6
 16019  168A  0187               	clrf	7
 16020  168B  3F40               	moviw [0]fsr1
 16021  168C  0084               	movwf	4
 16022  168D  0185               	clrf	5
 16023  168E  0A81               	incf	1,f
 16024  168F  0800               	movf	0,w
 16025  1690  319D  2597  3196   	fcall	_i2c1_driver_TXData
 16026                           
 16027                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 16028  1693  3001               	movlw	1
 16029  1694  0021               	movlb	1	; select bank1
 16030  1695  02CA               	subwf	(_i2c_status^(0+128)+3),f
 16031  1696  3000               	movlw	0
 16032  1697  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 16033  1698  084A               	movf	(_i2c_status^(0+128)+3),w
 16034  1699  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 16035  169A  1D03               	btfss	3,2
 16036  169B  2E9E               	goto	l7568
 16037  169C  3006               	movlw	6
 16038  169D  2E9F               	goto	L6
 16039  169E                     l7568:	
 16040  169E  3003               	movlw	3
 16041  169F                     L6:	
 16042  169F  0020               	movlb	0	; select bank0
 16043  16A0  00A2               	movwf	_do_I2C_TX$723
 16044  16A1  3000               	movlw	0
 16045  16A2  00A3               	movwf	_do_I2C_TX$723+1
 16046  16A3  0822               	movf	_do_I2C_TX$723,w
 16047  16A4  0008               	return
 16048  16A5                     __end_of_do_I2C_TX:	
 16049                           
 16050                           	psect	text54
 16051  11C6                     __ptext54:	
 16052 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 16053 ;; Defined at:
 16054 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 16055 ;; Parameters:    Size  Location     Type
 16056 ;;		None
 16057 ;; Auto vars:     Size  Location     Type
 16058 ;;		None
 16059 ;; Return value:  Size  Location     Type
 16060 ;;                  1    wreg      enum E15307
 16061 ;; Registers used:
 16062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16063 ;; Tracked objects:
 16064 ;;		On entry : 0/0
 16065 ;;		On exit  : 0/0
 16066 ;;		Unchanged: 0/0
 16067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16071 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16072 ;;Total ram usage:        1 bytes
 16073 ;; Hardware stack levels used:    1
 16074 ;; Hardware stack levels required when called:    9
 16075 ;; This function calls:
 16076 ;;		Absolute function
 16077 ;;		_do_I2C_SEND_RESTART
 16078 ;;		_do_I2C_SEND_STOP
 16079 ;;		_i2c_restartWrite
 16080 ;;		_rd1RegCompleteHandler
 16081 ;;		_rd2RegCompleteHandler
 16082 ;;		_rdBlkRegCompleteHandler
 16083 ;;		_returnReset
 16084 ;;		_returnStop
 16085 ;;		_wr1RegCompleteHandler
 16086 ;;		_wr2RegCompleteHandler
 16087 ;; This function is called by:
 16088 ;;		_i2c_ISR
 16089 ;;		i1_i2c_ISR
 16090 ;; This function uses a non-reentrant model
 16091 ;;
 16092                           
 16093                           
 16094                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 16095  11C6                     _do_I2C_DO_ADDRESS_NACK:	
 16096                           
 16097                           ;Skip over the trampoline to the duplicate function for level 1
 16098  11C6  1C7E               	btfss	126,0
 16099  11C7  29CA               	goto	l7526
 16100  11C8  3191  290B         	ljmp	i1l7952
 16101  11CA                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 16102  11CA                     l7526:	
 16103                           ;incstack = 0
 16104 ;; hardware stack exceeded
 16105                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16106                           
 16107                           
 16108                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 16109  11CA  0021               	movlb	1	; select bank1
 16110  11CB  11C7               	bcf	_i2c_status^(0+128),3
 16111                           
 16112                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 16113  11CC  3002               	movlw	2
 16114  11CD  0020               	movlb	0	; select bank0
 16115  11CE  00A0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16116  11CF  0820               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16117  11D0  0021               	movlb	1	; select bank1
 16118  11D1  00D1               	movwf	(_i2c_status^(0+128)+10)
 16119                           
 16120                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 16121  11D2  29D9               	goto	l7540
 16122  11D3                     l7530:	
 16123                           ;i2c_master.c: 324: {
 16124                           ;i2c_master.c: 325: case i2c_restart_read:
 16125                           
 16126                           
 16127                           ;i2c_master.c: 326: case i2c_restart_write:
 16128                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 16129  11D3  319D  25E6         	fcall	_do_I2C_SEND_RESTART
 16130  11D5  0008               	return
 16131  11D6                     l7534:	
 16132                           ;i2c_master.c: 328: default:
 16133                           
 16134                           
 16135                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 16136  11D6  319D  25EE         	fcall	_do_I2C_SEND_STOP
 16137                           
 16138                           ;i2c_master.c: 330: }
 16139  11D8  0008               	return
 16140  11D9                     l7540:	
 16141  11D9  0021               	movlb	1	; select bank1
 16142  11DA  0860               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 16143  11DB  0020               	movlb	0	; select bank0
 16144  11DC  00A0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16145  11DD  0820               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16146  11DE  00A9               	movwf	returnStop@p
 16147  11DF  300F               	movlw	15
 16148  11E0  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 16149  11E1  0086               	movwf	6
 16150  11E2  0187               	clrf	7
 16151  11E3  3F41               	moviw [1]fsr1
 16152  11E4  008A               	movwf	10
 16153  11E5  3F40               	moviw [0]fsr1
 16154  11E6  000A               	callw
 16155  11E7  3191               	pagesel	$
 16156                           
 16157                           ; Switch size 1, requested type "space"
 16158                           ; Number of cases is 2, Range of values is 2 to 3
 16159                           ; switch strategies available:
 16160                           ; Name         Instructions Cycles
 16161                           ; simple_byte            7     4 (average)
 16162                           ; direct_byte           13     9 (fixed)
 16163                           ; jumptable            263     9 (fixed)
 16164                           ;	Chosen strategy is simple_byte
 16165  11E8  3A02               	xorlw	2	; case 2
 16166  11E9  1903               	skipnz
 16167  11EA  29D3               	goto	l7530
 16168  11EB  3A01               	xorlw	1	; case 3
 16169  11EC  1903               	skipnz
 16170  11ED  29D3               	goto	l7530
 16171  11EE  29D6               	goto	l7534
 16172  11EF  0008               	return
 16173  11F0                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 16174                           
 16175                           	psect	text55
 16176  1E06                     __ptext55:	
 16177 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 16178 ;; Defined at:
 16179 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 16180 ;; Parameters:    Size  Location     Type
 16181 ;;		None
 16182 ;; Auto vars:     Size  Location     Type
 16183 ;;		None
 16184 ;; Return value:  Size  Location     Type
 16185 ;;                  1    wreg      enum E15307
 16186 ;; Registers used:
 16187 ;;		wreg, status,2, status,0, pclath, cstack
 16188 ;; Tracked objects:
 16189 ;;		On entry : 0/0
 16190 ;;		On exit  : 0/0
 16191 ;;		Unchanged: 0/0
 16192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16197 ;;Total ram usage:        0 bytes
 16198 ;; Hardware stack levels used:    1
 16199 ;; Hardware stack levels required when called:    7
 16200 ;; This function calls:
 16201 ;;		_i2c1_driver_sendNACK
 16202 ;; This function is called by:
 16203 ;;		_do_I2C_RX
 16204 ;;		_i2c_ISR
 16205 ;;		i1_i2c_ISR
 16206 ;; This function uses a non-reentrant model
 16207 ;;
 16208                           
 16209                           
 16210                           ;psect for function _do_I2C_DO_NACK_RESTART
 16211  1E06                     _do_I2C_DO_NACK_RESTART:	
 16212                           
 16213                           ;Skip over the trampoline to the duplicate function for level 1
 16214  1E06  1C7E               	btfss	126,0
 16215  1E07  2E0A               	goto	l3500
 16216  1E08  319D  2D5F         	ljmp	i1l4502
 16217  1E0A                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 16218  1E0A                     l3500:	
 16219                           ;incstack = 0
 16220 ;; hardware stack exceeded
 16221                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16222                           
 16223                           
 16224                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 16225  1E0A  319D  2567         	fcall	_i2c1_driver_sendNACK
 16226                           
 16227                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 16228  1E0C  3009               	movlw	9
 16229  1E0D  0008               	return
 16230  1E0E                     __end_of_do_I2C_DO_NACK_RESTART:	
 16231                           
 16232                           	psect	text56
 16233  1DFE                     __ptext56:	
 16234 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 16235 ;; Defined at:
 16236 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 16237 ;; Parameters:    Size  Location     Type
 16238 ;;		None
 16239 ;; Auto vars:     Size  Location     Type
 16240 ;;		None
 16241 ;; Return value:  Size  Location     Type
 16242 ;;                  1    wreg      enum E15307
 16243 ;; Registers used:
 16244 ;;		wreg, status,2, status,0, pclath, cstack
 16245 ;; Tracked objects:
 16246 ;;		On entry : 0/0
 16247 ;;		On exit  : 0/0
 16248 ;;		Unchanged: 0/0
 16249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16254 ;;Total ram usage:        0 bytes
 16255 ;; Hardware stack levels used:    1
 16256 ;; Hardware stack levels required when called:    7
 16257 ;; This function calls:
 16258 ;;		_i2c1_driver_sendNACK
 16259 ;; This function is called by:
 16260 ;;		_do_I2C_RX
 16261 ;;		_i2c_ISR
 16262 ;;		i1_i2c_ISR
 16263 ;; This function uses a non-reentrant model
 16264 ;;
 16265                           
 16266                           
 16267                           ;psect for function _do_I2C_DO_NACK_STOP
 16268  1DFE                     _do_I2C_DO_NACK_STOP:	
 16269                           
 16270                           ;Skip over the trampoline to the duplicate function for level 1
 16271  1DFE  1C7E               	btfss	126,0
 16272  1DFF  2E02               	goto	l3494
 16273  1E00  319D  2D5B         	ljmp	i1l4496
 16274  1E02                     _do_I2C_DO_NACK_STOP$intlevel0:	
 16275  1E02                     l3494:	
 16276                           ;incstack = 0
 16277 ;; hardware stack exceeded
 16278                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 16279                           
 16280                           
 16281                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 16282  1E02  319D  2567         	fcall	_i2c1_driver_sendNACK
 16283                           
 16284                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 16285  1E04  300A               	movlw	10
 16286  1E05  0008               	return
 16287  1E06                     __end_of_do_I2C_DO_NACK_STOP:	
 16288                           
 16289                           	psect	text57
 16290  1DF6                     __ptext57:	
 16291 ;; *************** function _do_I2C_DO_ACK *****************
 16292 ;; Defined at:
 16293 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;		None
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;		None
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  1    wreg      enum E15307
 16300 ;; Registers used:
 16301 ;;		wreg, status,2, status,0, pclath, cstack
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16311 ;;Total ram usage:        0 bytes
 16312 ;; Hardware stack levels used:    1
 16313 ;; Hardware stack levels required when called:    7
 16314 ;; This function calls:
 16315 ;;		_i2c1_driver_sendACK
 16316 ;; This function is called by:
 16317 ;;		_i2c_ISR
 16318 ;;		i1_i2c_ISR
 16319 ;; This function uses a non-reentrant model
 16320 ;;
 16321                           
 16322                           
 16323                           ;psect for function _do_I2C_DO_ACK
 16324  1DF6                     _do_I2C_DO_ACK:	
 16325                           
 16326                           ;Skip over the trampoline to the duplicate function for level 1
 16327  1DF6  1C7E               	btfss	126,0
 16328  1DF7  2DFA               	goto	l3600
 16329  1DF8  319D  2D57         	ljmp	i1l4822
 16330  1DFA                     _do_I2C_DO_ACK$intlevel0:	
 16331  1DFA                     l3600:	
 16332                           ;incstack = 0
 16333                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 16334                           
 16335                           
 16336                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 16337  1DFA  319D  2563         	fcall	_i2c1_driver_sendACK
 16338                           
 16339                           ;i2c_master.c: 302: return I2C_RCEN;
 16340  1DFC  3005               	movlw	5
 16341  1DFD  0008               	return
 16342  1DFE                     __end_of_do_I2C_DO_ACK:	
 16343                           
 16344                           	psect	text58
 16345  1E2A                     __ptext58:	
 16346 ;; *************** function _do_I2C_RCEN *****************
 16347 ;; Defined at:
 16348 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 16349 ;; Parameters:    Size  Location     Type
 16350 ;;		None
 16351 ;; Auto vars:     Size  Location     Type
 16352 ;;		None
 16353 ;; Return value:  Size  Location     Type
 16354 ;;                  1    wreg      enum E15307
 16355 ;; Registers used:
 16356 ;;		wreg, status,2, status,0, pclath, cstack
 16357 ;; Tracked objects:
 16358 ;;		On entry : 0/0
 16359 ;;		On exit  : 0/0
 16360 ;;		Unchanged: 0/0
 16361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16366 ;;Total ram usage:        0 bytes
 16367 ;; Hardware stack levels used:    1
 16368 ;; Hardware stack levels required when called:    7
 16369 ;; This function calls:
 16370 ;;		_i2c1_driver_startRX
 16371 ;; This function is called by:
 16372 ;;		_i2c_ISR
 16373 ;;		i1_i2c_ISR
 16374 ;; This function uses a non-reentrant model
 16375 ;;
 16376                           
 16377                           
 16378                           ;psect for function _do_I2C_RCEN
 16379  1E2A                     _do_I2C_RCEN:	
 16380                           
 16381                           ;Skip over the trampoline to the duplicate function for level 1
 16382  1E2A  1C7E               	btfss	126,0
 16383  1E2B  2E2E               	goto	l3592
 16384  1E2C  319D  2D79         	ljmp	i1l4814
 16385  1E2E                     _do_I2C_RCEN$intlevel0:	
 16386  1E2E                     l3592:	
 16387                           ;incstack = 0
 16388                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 16389                           
 16390                           
 16391                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 16392  1E2E  0021               	movlb	1	; select bank1
 16393  1E2F  11C7               	bcf	_i2c_status^(0+128),3
 16394                           
 16395                           ;i2c_master.c: 295: i2c1_driver_startRX();
 16396  1E30  319D  2536         	fcall	_i2c1_driver_startRX
 16397                           
 16398                           ;i2c_master.c: 296: return I2C_RX;
 16399  1E32  3004               	movlw	4
 16400  1E33  0008               	return
 16401  1E34                     __end_of_do_I2C_RCEN:	
 16402                           
 16403                           	psect	text59
 16404  1E5D                     __ptext59:	
 16405 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 16406 ;; Defined at:
 16407 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 16408 ;; Parameters:    Size  Location     Type
 16409 ;;		None
 16410 ;; Auto vars:     Size  Location     Type
 16411 ;;		None
 16412 ;; Return value:  Size  Location     Type
 16413 ;;                  1    wreg      enum E15307
 16414 ;; Registers used:
 16415 ;;		wreg, status,2, status,0, pclath, cstack
 16416 ;; Tracked objects:
 16417 ;;		On entry : 0/0
 16418 ;;		On exit  : 0/0
 16419 ;;		Unchanged: 0/0
 16420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16425 ;;Total ram usage:        0 bytes
 16426 ;; Hardware stack levels used:    1
 16427 ;; Hardware stack levels required when called:    7
 16428 ;; This function calls:
 16429 ;;		_i2c1_driver_TXData
 16430 ;; This function is called by:
 16431 ;;		_i2c_ISR
 16432 ;;		i1_i2c_ISR
 16433 ;; This function uses a non-reentrant model
 16434 ;;
 16435                           
 16436                           
 16437                           ;psect for function _do_I2C_SEND_ADR_WRITE
 16438  1E5D                     _do_I2C_SEND_ADR_WRITE:	
 16439                           
 16440                           ;Skip over the trampoline to the duplicate function for level 1
 16441  1E5D  1C7E               	btfss	126,0
 16442  1E5E  2E61               	goto	l3584
 16443  1E5F  319D  2DB0         	ljmp	i1l4806
 16444  1E61                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 16445  1E61                     l3584:	
 16446                           ;incstack = 0
 16447                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16448                           
 16449                           
 16450                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 16451  1E61  0021               	movlb	1	; select bank1
 16452  1E62  15C7               	bsf	_i2c_status^(0+128),3
 16453                           
 16454                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 16455  1E63  3548               	lslf	(_i2c_status^(0+128)+1),w
 16456  1E64  319D  2597         	fcall	_i2c1_driver_TXData
 16457                           
 16458                           ;i2c_master.c: 289: return I2C_TX;
 16459  1E66  3003               	movlw	3
 16460  1E67  0008               	return
 16461  1E68                     __end_of_do_I2C_SEND_ADR_WRITE:	
 16462                           
 16463                           	psect	text60
 16464  1EA1                     __ptext60:	
 16465 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 16466 ;; Defined at:
 16467 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;		None
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;		None
 16472 ;; Return value:  Size  Location     Type
 16473 ;;                  1    wreg      enum E15307
 16474 ;; Registers used:
 16475 ;;		wreg, status,2, status,0, pclath, cstack
 16476 ;; Tracked objects:
 16477 ;;		On entry : 0/0
 16478 ;;		On exit  : 0/0
 16479 ;;		Unchanged: 0/0
 16480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16485 ;;Total ram usage:        0 bytes
 16486 ;; Hardware stack levels used:    1
 16487 ;; Hardware stack levels required when called:    7
 16488 ;; This function calls:
 16489 ;;		_i2c1_driver_TXData
 16490 ;; This function is called by:
 16491 ;;		_i2c_ISR
 16492 ;;		i1_i2c_ISR
 16493 ;; This function uses a non-reentrant model
 16494 ;;
 16495                           
 16496                           
 16497                           ;psect for function _do_I2C_SEND_ADR_READ
 16498  1EA1                     _do_I2C_SEND_ADR_READ:	
 16499                           
 16500                           ;Skip over the trampoline to the duplicate function for level 1
 16501  1EA1  1C7E               	btfss	126,0
 16502  1EA2  2EA5               	goto	l3576
 16503  1EA3  319D  2DC6         	ljmp	i1l4798
 16504  1EA5                     _do_I2C_SEND_ADR_READ$intlevel0:	
 16505  1EA5                     l3576:	
 16506                           ;incstack = 0
 16507                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 16508                           
 16509                           
 16510                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 16511  1EA5  0021               	movlb	1	; select bank1
 16512  1EA6  15C7               	bsf	_i2c_status^(0+128),3
 16513                           
 16514                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 16515  1EA7  1403               	setc
 16516  1EA8  0D48               	rlf	(_i2c_status^(0+128)+1),w
 16517  1EA9  319D  2597         	fcall	_i2c1_driver_TXData
 16518                           
 16519                           ;i2c_master.c: 282: return I2C_RCEN;
 16520  1EAB  3005               	movlw	5
 16521  1EAC  0008               	return
 16522  1EAD                     __end_of_do_I2C_SEND_ADR_READ:	
 16523                           
 16524                           	psect	text61
 16525  1DEE                     __ptext61:	
 16526 ;; *************** function _do_I2C_SEND_STOP *****************
 16527 ;; Defined at:
 16528 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 16529 ;; Parameters:    Size  Location     Type
 16530 ;;		None
 16531 ;; Auto vars:     Size  Location     Type
 16532 ;;		None
 16533 ;; Return value:  Size  Location     Type
 16534 ;;                  1    wreg      enum E15307
 16535 ;; Registers used:
 16536 ;;		wreg, status,2, status,0, pclath, cstack
 16537 ;; Tracked objects:
 16538 ;;		On entry : 0/0
 16539 ;;		On exit  : 0/0
 16540 ;;		Unchanged: 0/0
 16541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16546 ;;Total ram usage:        0 bytes
 16547 ;; Hardware stack levels used:    1
 16548 ;; Hardware stack levels required when called:    7
 16549 ;; This function calls:
 16550 ;;		_i2c1_driver_stop
 16551 ;; This function is called by:
 16552 ;;		_do_I2C_DO_ADDRESS_NACK
 16553 ;;		_do_I2C_TX
 16554 ;;		_do_I2C_TX_EMPTY
 16555 ;;		_i2c_ISR
 16556 ;;		i1_i2c_ISR
 16557 ;; This function uses a non-reentrant model
 16558 ;;
 16559                           
 16560                           
 16561                           ;psect for function _do_I2C_SEND_STOP
 16562  1DEE                     _do_I2C_SEND_STOP:	
 16563                           
 16564                           ;Skip over the trampoline to the duplicate function for level 1
 16565  1DEE  1C7E               	btfss	126,0
 16566  1DEF  2DF2               	goto	l3488
 16567  1DF0  319D  2D53         	ljmp	i1l4490
 16568  1DF2                     _do_I2C_SEND_STOP$intlevel0:	
 16569  1DF2                     l3488:	
 16570                           ;incstack = 0
 16571 ;; hardware stack exceeded
 16572                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 16573                           
 16574                           
 16575                           ;i2c_master.c: 274: i2c1_driver_stop();
 16576  1DF2  319D  2533         	fcall	_i2c1_driver_stop
 16577                           
 16578                           ;i2c_master.c: 275: return I2C_IDLE;
 16579  1DF4  3000               	movlw	0
 16580  1DF5  0008               	return
 16581  1DF6                     __end_of_do_I2C_SEND_STOP:	
 16582                           
 16583                           	psect	text62
 16584  1DE6                     __ptext62:	
 16585 ;; *************** function _do_I2C_SEND_RESTART *****************
 16586 ;; Defined at:
 16587 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 16588 ;; Parameters:    Size  Location     Type
 16589 ;;		None
 16590 ;; Auto vars:     Size  Location     Type
 16591 ;;		None
 16592 ;; Return value:  Size  Location     Type
 16593 ;;                  1    wreg      enum E15307
 16594 ;; Registers used:
 16595 ;;		wreg, status,2, status,0, pclath, cstack
 16596 ;; Tracked objects:
 16597 ;;		On entry : 0/0
 16598 ;;		On exit  : 0/0
 16599 ;;		Unchanged: 0/0
 16600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16605 ;;Total ram usage:        0 bytes
 16606 ;; Hardware stack levels used:    1
 16607 ;; Hardware stack levels required when called:    7
 16608 ;; This function calls:
 16609 ;;		_i2c1_driver_restart
 16610 ;; This function is called by:
 16611 ;;		_do_I2C_DO_ADDRESS_NACK
 16612 ;;		_do_I2C_TX_EMPTY
 16613 ;;		_i2c_ISR
 16614 ;;		i1_i2c_ISR
 16615 ;; This function uses a non-reentrant model
 16616 ;;
 16617                           
 16618                           
 16619                           ;psect for function _do_I2C_SEND_RESTART
 16620  1DE6                     _do_I2C_SEND_RESTART:	
 16621                           
 16622                           ;Skip over the trampoline to the duplicate function for level 1
 16623  1DE6  1C7E               	btfss	126,0
 16624  1DE7  2DEA               	goto	l3482
 16625  1DE8  319D  2D4F         	ljmp	i1l4484
 16626  1DEA                     _do_I2C_SEND_RESTART$intlevel0:	
 16627  1DEA                     l3482:	
 16628                           ;incstack = 0
 16629 ;; hardware stack exceeded
 16630                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16631                           
 16632                           
 16633                           ;i2c_master.c: 268: i2c1_driver_restart();
 16634  1DEA  319D  2530         	fcall	_i2c1_driver_restart
 16635                           
 16636                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 16637  1DEC  3001               	movlw	1
 16638  1DED  0008               	return
 16639  1DEE                     __end_of_do_I2C_SEND_RESTART:	
 16640                           
 16641                           	psect	text63
 16642  1DDE                     __ptext63:	
 16643 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 16644 ;; Defined at:
 16645 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 16646 ;; Parameters:    Size  Location     Type
 16647 ;;		None
 16648 ;; Auto vars:     Size  Location     Type
 16649 ;;		None
 16650 ;; Return value:  Size  Location     Type
 16651 ;;                  1    wreg      enum E15307
 16652 ;; Registers used:
 16653 ;;		wreg, status,2, status,0, pclath, cstack
 16654 ;; Tracked objects:
 16655 ;;		On entry : 0/0
 16656 ;;		On exit  : 0/0
 16657 ;;		Unchanged: 0/0
 16658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16663 ;;Total ram usage:        0 bytes
 16664 ;; Hardware stack levels used:    1
 16665 ;; Hardware stack levels required when called:    7
 16666 ;; This function calls:
 16667 ;;		_i2c1_driver_restart
 16668 ;; This function is called by:
 16669 ;;		_do_I2C_TX
 16670 ;;		_i2c_ISR
 16671 ;;		i1_i2c_ISR
 16672 ;; This function uses a non-reentrant model
 16673 ;;
 16674                           
 16675                           
 16676                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 16677  1DDE                     _do_I2C_SEND_RESTART_WRITE:	
 16678                           
 16679                           ;Skip over the trampoline to the duplicate function for level 1
 16680  1DDE  1C7E               	btfss	126,0
 16681  1DDF  2DE2               	goto	l3476
 16682  1DE0  319D  2D4B         	ljmp	i1l4478
 16683  1DE2                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 16684  1DE2                     l3476:	
 16685                           ;incstack = 0
 16686 ;; hardware stack exceeded
 16687                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16688                           
 16689                           
 16690                           ;i2c_master.c: 262: i2c1_driver_restart();
 16691  1DE2  319D  2530         	fcall	_i2c1_driver_restart
 16692                           
 16693                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 16694  1DE4  3002               	movlw	2
 16695  1DE5  0008               	return
 16696  1DE6                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 16697                           
 16698                           	psect	text64
 16699  1DD6                     __ptext64:	
 16700 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 16701 ;; Defined at:
 16702 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 16703 ;; Parameters:    Size  Location     Type
 16704 ;;		None
 16705 ;; Auto vars:     Size  Location     Type
 16706 ;;		None
 16707 ;; Return value:  Size  Location     Type
 16708 ;;                  1    wreg      enum E15307
 16709 ;; Registers used:
 16710 ;;		wreg, status,2, status,0, pclath, cstack
 16711 ;; Tracked objects:
 16712 ;;		On entry : 0/0
 16713 ;;		On exit  : 0/0
 16714 ;;		Unchanged: 0/0
 16715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16720 ;;Total ram usage:        0 bytes
 16721 ;; Hardware stack levels used:    1
 16722 ;; Hardware stack levels required when called:    7
 16723 ;; This function calls:
 16724 ;;		_i2c1_driver_restart
 16725 ;; This function is called by:
 16726 ;;		_do_I2C_TX
 16727 ;;		_i2c_ISR
 16728 ;;		i1_i2c_ISR
 16729 ;; This function uses a non-reentrant model
 16730 ;;
 16731                           
 16732                           
 16733                           ;psect for function _do_I2C_SEND_RESTART_READ
 16734  1DD6                     _do_I2C_SEND_RESTART_READ:	
 16735                           
 16736                           ;Skip over the trampoline to the duplicate function for level 1
 16737  1DD6  1C7E               	btfss	126,0
 16738  1DD7  2DDA               	goto	l3470
 16739  1DD8  319D  2D47         	ljmp	i1l4472
 16740  1DDA                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 16741  1DDA                     l3470:	
 16742                           ;incstack = 0
 16743 ;; hardware stack exceeded
 16744                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 16745                           
 16746                           
 16747                           ;i2c_master.c: 256: i2c1_driver_restart();
 16748  1DDA  319D  2530         	fcall	_i2c1_driver_restart
 16749                           
 16750                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 16751  1DDC  3001               	movlw	1
 16752  1DDD  0008               	return
 16753  1DDE                     __end_of_do_I2C_SEND_RESTART_READ:	
 16754                           
 16755                           	psect	text65
 16756  1000                     __ptext65:	
 16757 ;; *************** function _do_I2C_IDLE *****************
 16758 ;; Defined at:
 16759 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 16760 ;; Parameters:    Size  Location     Type
 16761 ;;		None
 16762 ;; Auto vars:     Size  Location     Type
 16763 ;;		None
 16764 ;; Return value:  Size  Location     Type
 16765 ;;                  1    wreg      enum E15307
 16766 ;; Registers used:
 16767 ;;		wreg, status,2
 16768 ;; Tracked objects:
 16769 ;;		On entry : 0/0
 16770 ;;		On exit  : 0/0
 16771 ;;		Unchanged: 0/0
 16772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16777 ;;Total ram usage:        0 bytes
 16778 ;; Hardware stack levels used:    1
 16779 ;; Hardware stack levels required when called:    6
 16780 ;; This function calls:
 16781 ;;		Nothing
 16782 ;; This function is called by:
 16783 ;;		_i2c_ISR
 16784 ;;		i1_i2c_ISR
 16785 ;; This function uses a non-reentrant model
 16786 ;;
 16787                           
 16788                           
 16789                           ;psect for function _do_I2C_IDLE
 16790  1000                     _do_I2C_IDLE:	
 16791                           
 16792                           ;Skip over the trampoline to the duplicate function for level 1
 16793  1000  1C7E               	btfss	126,0
 16794  1001  2804               	goto	l3568
 16795  1002  319D  2D74         	ljmp	i1l4790
 16796  1004                     _do_I2C_IDLE$intlevel0:	
 16797  1004                     l3568:	
 16798                           ;incstack = 0
 16799                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 16800                           
 16801                           
 16802                           ;i2c_master.c: 249: i2c_status.busy = 0;
 16803  1004  0021               	movlb	1	; select bank1
 16804  1005  1047               	bcf	_i2c_status^(0+128),0
 16805                           
 16806                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 16807  1006  01D1               	clrf	(_i2c_status^(0+128)+10)
 16808                           
 16809                           ;i2c_master.c: 251: return I2C_RESET;
 16810  1007  300E               	movlw	14
 16811  1008  0008               	return
 16812  1009                     __end_of_do_I2C_IDLE:	
 16813                           
 16814                           	psect	text66
 16815  1E52                     __ptext66:	
 16816 ;; *************** function _do_I2C_RESET *****************
 16817 ;; Defined at:
 16818 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 16819 ;; Parameters:    Size  Location     Type
 16820 ;;		None
 16821 ;; Auto vars:     Size  Location     Type
 16822 ;;		None
 16823 ;; Return value:  Size  Location     Type
 16824 ;;                  1    wreg      enum E15307
 16825 ;; Registers used:
 16826 ;;		wreg, status,2, status,0, pclath, cstack
 16827 ;; Tracked objects:
 16828 ;;		On entry : 0/0
 16829 ;;		On exit  : 0/0
 16830 ;;		Unchanged: 0/0
 16831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16836 ;;Total ram usage:        0 bytes
 16837 ;; Hardware stack levels used:    1
 16838 ;; Hardware stack levels required when called:    7
 16839 ;; This function calls:
 16840 ;;		_i2c1_driver_resetBus
 16841 ;; This function is called by:
 16842 ;;		_i2c_ISR
 16843 ;;		i1_i2c_ISR
 16844 ;; This function uses a non-reentrant model
 16845 ;;
 16846                           
 16847                           
 16848                           ;psect for function _do_I2C_RESET
 16849  1E52                     _do_I2C_RESET:	
 16850                           
 16851                           ;Skip over the trampoline to the duplicate function for level 1
 16852  1E52  1C7E               	btfss	126,0
 16853  1E53  2E56               	goto	l3558
 16854  1E54  319D  2DA9         	ljmp	i1l4780
 16855  1E56                     _do_I2C_RESET$intlevel0:	
 16856  1E56                     l3558:	
 16857                           ;incstack = 0
 16858                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 16859                           
 16860                           
 16861                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 16862  1E56  319D  2509         	fcall	_i2c1_driver_resetBus
 16863                           
 16864                           ;i2c_master.c: 242: i2c_status.busy = 0;
 16865  1E58  0021               	movlb	1	; select bank1
 16866  1E59  1047               	bcf	_i2c_status^(0+128),0
 16867                           
 16868                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 16869  1E5A  01D1               	clrf	(_i2c_status^(0+128)+10)
 16870                           
 16871                           ;i2c_master.c: 244: return I2C_RESET;
 16872  1E5B  300E               	movlw	14
 16873  1E5C  0008               	return
 16874  1E5D                     __end_of_do_I2C_RESET:	
 16875                           
 16876                           	psect	text67
 16877  124A                     __ptext67:	
 16878 ;; *************** function _do_I2C_TX_EMPTY *****************
 16879 ;; Defined at:
 16880 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 16881 ;; Parameters:    Size  Location     Type
 16882 ;;		None
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;		None
 16885 ;; Return value:  Size  Location     Type
 16886 ;;                  1    wreg      enum E15307
 16887 ;; Registers used:
 16888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16889 ;; Tracked objects:
 16890 ;;		On entry : 0/0
 16891 ;;		On exit  : 0/0
 16892 ;;		Unchanged: 0/0
 16893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16897 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16898 ;;Total ram usage:        1 bytes
 16899 ;; Hardware stack levels used:    1
 16900 ;; Hardware stack levels required when called:    9
 16901 ;; This function calls:
 16902 ;;		Absolute function
 16903 ;;		_do_I2C_SEND_RESTART
 16904 ;;		_do_I2C_SEND_STOP
 16905 ;;		_i2c_restartWrite
 16906 ;;		_mssp1_setIRQ
 16907 ;;		_rd1RegCompleteHandler
 16908 ;;		_rd2RegCompleteHandler
 16909 ;;		_rdBlkRegCompleteHandler
 16910 ;;		_returnReset
 16911 ;;		_returnStop
 16912 ;;		_wr1RegCompleteHandler
 16913 ;;		_wr2RegCompleteHandler
 16914 ;; This function is called by:
 16915 ;;		_i2c_ISR
 16916 ;;		i1_i2c_ISR
 16917 ;; This function uses a non-reentrant model
 16918 ;;
 16919                           
 16920                           
 16921                           ;psect for function _do_I2C_TX_EMPTY
 16922  124A                     _do_I2C_TX_EMPTY:	
 16923                           
 16924                           ;Skip over the trampoline to the duplicate function for level 1
 16925  124A  1C7E               	btfss	126,0
 16926  124B  2A4E               	goto	l7598
 16927  124C  3191  299D         	ljmp	i1l8024
 16928  124E                     _do_I2C_TX_EMPTY$intlevel0:	
 16929  124E                     l7598:	
 16930                           ;incstack = 0
 16931 ;; hardware stack exceeded
 16932                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16933                           
 16934                           
 16935                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 16936  124E  0021               	movlb	1	; select bank1
 16937  124F  1547               	bsf	_i2c_status^(0+128),2
 16938                           
 16939                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 16940  1250  2A5B               	goto	l7616
 16941  1251                     l7600:	
 16942                           ;i2c_master.c: 386: {
 16943                           ;i2c_master.c: 387: case i2c_restart_read:
 16944                           
 16945                           
 16946                           ;i2c_master.c: 388: case i2c_restart_write:
 16947                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 16948  1251  319D  25E6         	fcall	_do_I2C_SEND_RESTART
 16949  1253  0008               	return
 16950  1254                     l7604:	
 16951                           ;i2c_master.c: 390: case i2c_continue:
 16952                           
 16953                           
 16954                           ;i2c_master.c: 391: mssp1_setIRQ();
 16955  1254  319D  253C         	fcall	_mssp1_setIRQ
 16956                           
 16957                           ;i2c_master.c: 392: return I2C_TX;
 16958  1256  3003               	movlw	3
 16959  1257  0008               	return
 16960  1258                     l7610:	
 16961                           ;i2c_master.c: 394: case i2c_stop:
 16962                           
 16963                           ;i2c_master.c: 393: default:
 16964                           
 16965                           
 16966                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 16967  1258  319D  25EE         	fcall	_do_I2C_SEND_STOP
 16968                           
 16969                           ;i2c_master.c: 396: }
 16970  125A  0008               	return
 16971  125B                     l7616:	
 16972  125B  0021               	movlb	1	; select bank1
 16973  125C  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 16974  125D  0020               	movlb	0	; select bank0
 16975  125E  00A0               	movwf	??_do_I2C_TX_EMPTY
 16976  125F  0820               	movf	??_do_I2C_TX_EMPTY,w
 16977  1260  00A9               	movwf	returnStop@p
 16978  1261  300B               	movlw	11
 16979  1262  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 16980  1263  0086               	movwf	6
 16981  1264  0187               	clrf	7
 16982  1265  3F41               	moviw [1]fsr1
 16983  1266  008A               	movwf	10
 16984  1267  3F40               	moviw [0]fsr1
 16985  1268  000A               	callw
 16986  1269  3192               	pagesel	$
 16987                           
 16988                           ; Switch size 1, requested type "space"
 16989                           ; Number of cases is 4, Range of values is 1 to 4
 16990                           ; switch strategies available:
 16991                           ; Name         Instructions Cycles
 16992                           ; simple_byte           13     7 (average)
 16993                           ; direct_byte           17     9 (fixed)
 16994                           ; jumptable            263     9 (fixed)
 16995                           ;	Chosen strategy is simple_byte
 16996  126A  3A01               	xorlw	1	; case 1
 16997  126B  1903               	skipnz
 16998  126C  2A58               	goto	l7610
 16999  126D  3A03               	xorlw	3	; case 2
 17000  126E  1903               	skipnz
 17001  126F  2A51               	goto	l7600
 17002  1270  3A01               	xorlw	1	; case 3
 17003  1271  1903               	skipnz
 17004  1272  2A51               	goto	l7600
 17005  1273  3A07               	xorlw	7	; case 4
 17006  1274  1903               	skipnz
 17007  1275  2A54               	goto	l7604
 17008  1276  2A58               	goto	l7610
 17009  1277  0008               	return
 17010  1278                     __end_of_do_I2C_TX_EMPTY:	
 17011                           
 17012                           	psect	text68
 17013  1D3C                     __ptext68:	
 17014 ;; *************** function _mssp1_setIRQ *****************
 17015 ;; Defined at:
 17016 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 17017 ;; Parameters:    Size  Location     Type
 17018 ;;		None
 17019 ;; Auto vars:     Size  Location     Type
 17020 ;;		None
 17021 ;; Return value:  Size  Location     Type
 17022 ;;                  1    wreg      void 
 17023 ;; Registers used:
 17024 ;;		None
 17025 ;; Tracked objects:
 17026 ;;		On entry : 0/0
 17027 ;;		On exit  : 0/0
 17028 ;;		Unchanged: 0/0
 17029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17034 ;;Total ram usage:        0 bytes
 17035 ;; Hardware stack levels used:    1
 17036 ;; Hardware stack levels required when called:    6
 17037 ;; This function calls:
 17038 ;;		Nothing
 17039 ;; This function is called by:
 17040 ;;		_do_I2C_TX_EMPTY
 17041 ;; This function uses a non-reentrant model
 17042 ;;
 17043                           
 17044                           
 17045                           ;psect for function _mssp1_setIRQ
 17046  1D3C                     _mssp1_setIRQ:	
 17047                           
 17048                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 17049                           
 17050                           ;incstack = 0
 17051                           ; Regs used in _mssp1_setIRQ: []
 17052  1D3C  002E               	movlb	14	; select bank14
 17053  1D3D  140F               	bsf	15,0	;volatile
 17054  1D3E  0008               	return
 17055  1D3F                     __end_of_mssp1_setIRQ:	
 17056                           
 17057                           	psect	text69
 17058  1E17                     __ptext69:	
 17059 ;; *************** function _i2c1_driver_isNACK *****************
 17060 ;; Defined at:
 17061 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 17062 ;; Parameters:    Size  Location     Type
 17063 ;;		None
 17064 ;; Auto vars:     Size  Location     Type
 17065 ;;		None
 17066 ;; Return value:  Size  Location     Type
 17067 ;;		None               void
 17068 ;; Registers used:
 17069 ;;		wreg, status,2, status,0
 17070 ;; Tracked objects:
 17071 ;;		On entry : 0/0
 17072 ;;		On exit  : 0/0
 17073 ;;		Unchanged: 0/0
 17074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17077 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17079 ;;Total ram usage:        1 bytes
 17080 ;; Hardware stack levels used:    1
 17081 ;; Hardware stack levels required when called:    6
 17082 ;; This function calls:
 17083 ;;		Nothing
 17084 ;; This function is called by:
 17085 ;;		_do_I2C_TX
 17086 ;;		_i2c_ISR
 17087 ;; This function uses a non-reentrant model
 17088 ;;
 17089                           
 17090                           
 17091                           ;psect for function _i2c1_driver_isNACK
 17092  1E17                     _i2c1_driver_isNACK:	
 17093                           
 17094                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT;
 17095                           
 17096                           ;incstack = 0
 17097                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 17098  1E17  0023               	movlb	3	; select bank3
 17099  1E18  0E11               	swapf	17,w	;volatile
 17100  1E19  0C89               	rrf	9,f
 17101  1E1A  0C89               	rrf	9,f
 17102  1E1B  3901               	andlw	1
 17103  1E1C  0020               	movlb	0	; select bank0
 17104  1E1D  00A0               	movwf	??_i2c1_driver_isNACK
 17105  1E1E  0C20               	rrf	??_i2c1_driver_isNACK,w
 17106  1E1F  0008               	return
 17107  1E20                     __end_of_i2c1_driver_isNACK:	
 17108                           
 17109                           	psect	text70
 17110  1D97                     __ptext70:	
 17111 ;; *************** function _i2c1_driver_TXData *****************
 17112 ;; Defined at:
 17113 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 17114 ;; Parameters:    Size  Location     Type
 17115 ;;  d               1    wreg     unsigned char 
 17116 ;; Auto vars:     Size  Location     Type
 17117 ;;  d               1    0[BANK0 ] unsigned char 
 17118 ;; Return value:  Size  Location     Type
 17119 ;;                  1    wreg      void 
 17120 ;; Registers used:
 17121 ;;		wreg
 17122 ;; Tracked objects:
 17123 ;;		On entry : 0/0
 17124 ;;		On exit  : 0/0
 17125 ;;		Unchanged: 0/0
 17126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17131 ;;Total ram usage:        1 bytes
 17132 ;; Hardware stack levels used:    1
 17133 ;; Hardware stack levels required when called:    6
 17134 ;; This function calls:
 17135 ;;		Nothing
 17136 ;; This function is called by:
 17137 ;;		_do_I2C_SEND_ADR_READ
 17138 ;;		_do_I2C_SEND_ADR_WRITE
 17139 ;;		_do_I2C_TX
 17140 ;; This function uses a non-reentrant model
 17141 ;;
 17142                           
 17143                           
 17144                           ;psect for function _i2c1_driver_TXData
 17145  1D97                     _i2c1_driver_TXData:	
 17146                           
 17147                           ;incstack = 0
 17148                           ; Regs used in _i2c1_driver_TXData: [wreg]
 17149                           ;i2c1_driver_TXData@d stored from wreg
 17150  1D97  0020               	movlb	0	; select bank0
 17151  1D98  00A0               	movwf	i2c1_driver_TXData@d
 17152                           
 17153                           ;i2c1_driver.c: 188: SSP1BUF = d;
 17154  1D99  0820               	movf	i2c1_driver_TXData@d,w
 17155  1D9A  0023               	movlb	3	; select bank3
 17156  1D9B  008C               	movwf	12	;volatile
 17157  1D9C  0008               	return
 17158  1D9D                     __end_of_i2c1_driver_TXData:	
 17159                           
 17160                           	psect	text71
 17161  1D39                     __ptext71:	
 17162 ;; *************** function _i2c1_driver_getRXData *****************
 17163 ;; Defined at:
 17164 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 17165 ;; Parameters:    Size  Location     Type
 17166 ;;		None
 17167 ;; Auto vars:     Size  Location     Type
 17168 ;;		None
 17169 ;; Return value:  Size  Location     Type
 17170 ;;                  1    wreg      unsigned char 
 17171 ;; Registers used:
 17172 ;;		wreg
 17173 ;; Tracked objects:
 17174 ;;		On entry : 0/0
 17175 ;;		On exit  : 0/0
 17176 ;;		Unchanged: 0/0
 17177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17182 ;;Total ram usage:        0 bytes
 17183 ;; Hardware stack levels used:    1
 17184 ;; Hardware stack levels required when called:    6
 17185 ;; This function calls:
 17186 ;;		Nothing
 17187 ;; This function is called by:
 17188 ;;		_do_I2C_RX
 17189 ;; This function uses a non-reentrant model
 17190 ;;
 17191                           
 17192                           
 17193                           ;psect for function _i2c1_driver_getRXData
 17194  1D39                     _i2c1_driver_getRXData:	
 17195                           
 17196                           ;i2c1_driver.c: 173: return SSP1BUF;
 17197                           
 17198                           ;incstack = 0
 17199                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 17200  1D39  0023               	movlb	3	; select bank3
 17201  1D3A  080C               	movf	12,w	;volatile
 17202  1D3B  0008               	return
 17203  1D3C                     __end_of_i2c1_driver_getRXData:	
 17204                           
 17205                           	psect	text72
 17206  1D67                     __ptext72:	
 17207 ;; *************** function _i2c1_driver_sendNACK *****************
 17208 ;; Defined at:
 17209 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 17210 ;; Parameters:    Size  Location     Type
 17211 ;;		None
 17212 ;; Auto vars:     Size  Location     Type
 17213 ;;		None
 17214 ;; Return value:  Size  Location     Type
 17215 ;;                  1    wreg      void 
 17216 ;; Registers used:
 17217 ;;		None
 17218 ;; Tracked objects:
 17219 ;;		On entry : 0/0
 17220 ;;		On exit  : 0/0
 17221 ;;		Unchanged: 0/0
 17222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17227 ;;Total ram usage:        0 bytes
 17228 ;; Hardware stack levels used:    1
 17229 ;; Hardware stack levels required when called:    6
 17230 ;; This function calls:
 17231 ;;		Nothing
 17232 ;; This function is called by:
 17233 ;;		_do_I2C_DO_NACK_STOP
 17234 ;;		_do_I2C_DO_NACK_RESTART
 17235 ;; This function uses a non-reentrant model
 17236 ;;
 17237                           
 17238                           
 17239                           ;psect for function _i2c1_driver_sendNACK
 17240  1D67                     _i2c1_driver_sendNACK:	
 17241                           
 17242                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 17243                           
 17244                           ;incstack = 0
 17245 ;; hardware stack exceeded
 17246                           ; Regs used in _i2c1_driver_sendNACK: []
 17247  1D67  0023               	movlb	3	; select bank3
 17248  1D68  1691               	bsf	17,5	;volatile
 17249                           
 17250                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 17251  1D69  1611               	bsf	17,4	;volatile
 17252  1D6A  0008               	return
 17253  1D6B                     __end_of_i2c1_driver_sendNACK:	
 17254                           
 17255                           	psect	text73
 17256  1D09                     __ptext73:	
 17257 ;; *************** function _i2c1_driver_resetBus *****************
 17258 ;; Defined at:
 17259 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 17260 ;; Parameters:    Size  Location     Type
 17261 ;;		None
 17262 ;; Auto vars:     Size  Location     Type
 17263 ;;		None
 17264 ;; Return value:  Size  Location     Type
 17265 ;;                  1    wreg      void 
 17266 ;; Registers used:
 17267 ;;		None
 17268 ;; Tracked objects:
 17269 ;;		On entry : 0/0
 17270 ;;		On exit  : 0/0
 17271 ;;		Unchanged: 0/0
 17272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17277 ;;Total ram usage:        0 bytes
 17278 ;; Hardware stack levels used:    1
 17279 ;; Hardware stack levels required when called:    6
 17280 ;; This function calls:
 17281 ;;		Nothing
 17282 ;; This function is called by:
 17283 ;;		_do_I2C_RESET
 17284 ;; This function uses a non-reentrant model
 17285 ;;
 17286                           
 17287                           
 17288                           ;psect for function _i2c1_driver_resetBus
 17289  1D09                     _i2c1_driver_resetBus:	
 17290                           
 17291                           ;incstack = 0
 17292                           ; Regs used in _i2c1_driver_resetBus: []
 17293  1D09  0008               	return
 17294  1D0A                     __end_of_i2c1_driver_resetBus:	
 17295                           
 17296                           	psect	text74
 17297  1D36                     __ptext74:	
 17298 ;; *************** function _i2c1_driver_startRX *****************
 17299 ;; Defined at:
 17300 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 17301 ;; Parameters:    Size  Location     Type
 17302 ;;		None
 17303 ;; Auto vars:     Size  Location     Type
 17304 ;;		None
 17305 ;; Return value:  Size  Location     Type
 17306 ;;                  1    wreg      void 
 17307 ;; Registers used:
 17308 ;;		None
 17309 ;; Tracked objects:
 17310 ;;		On entry : 0/0
 17311 ;;		On exit  : 0/0
 17312 ;;		Unchanged: 0/0
 17313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17318 ;;Total ram usage:        0 bytes
 17319 ;; Hardware stack levels used:    1
 17320 ;; Hardware stack levels required when called:    6
 17321 ;; This function calls:
 17322 ;;		Nothing
 17323 ;; This function is called by:
 17324 ;;		_do_I2C_RCEN
 17325 ;; This function uses a non-reentrant model
 17326 ;;
 17327                           
 17328                           
 17329                           ;psect for function _i2c1_driver_startRX
 17330  1D36                     _i2c1_driver_startRX:	
 17331                           
 17332                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 17333                           
 17334                           ;incstack = 0
 17335                           ; Regs used in _i2c1_driver_startRX: []
 17336  1D36  0023               	movlb	3	; select bank3
 17337  1D37  1591               	bsf	17,3	;volatile
 17338  1D38  0008               	return
 17339  1D39                     __end_of_i2c1_driver_startRX:	
 17340                           
 17341                           	psect	text75
 17342  1070                     __ptext75:	
 17343 ;; *************** function _rdBlkRegCompleteHandler *****************
 17344 ;; Defined at:
 17345 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17346 ;; Parameters:    Size  Location     Type
 17347 ;;  p               1    9[BANK0 ] PTR void 
 17348 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17349 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17350 ;; Auto vars:     Size  Location     Type
 17351 ;;		None
 17352 ;; Return value:  Size  Location     Type
 17353 ;;                  1    wreg      enum E97
 17354 ;; Registers used:
 17355 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17356 ;; Tracked objects:
 17357 ;;		On entry : 0/0
 17358 ;;		On exit  : 0/0
 17359 ;;		Unchanged: 0/0
 17360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17361 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17364 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17365 ;;Total ram usage:        1 bytes
 17366 ;; Hardware stack levels used:    1
 17367 ;; Hardware stack levels required when called:    8
 17368 ;; This function calls:
 17369 ;;		_i2c_setBuffer
 17370 ;;		_i2c_setDataCompleteCallback
 17371 ;; This function is called by:
 17372 ;;		_i2c_readDataBlock
 17373 ;;		_do_I2C_DO_ADDRESS_NACK
 17374 ;;		_do_I2C_TX
 17375 ;;		_do_I2C_RX
 17376 ;;		_do_I2C_TX_EMPTY
 17377 ;;		i1_do_I2C_DO_ADDRESS_NACK
 17378 ;;		i1_do_I2C_TX
 17379 ;;		i1_do_I2C_RX
 17380 ;;		i1_do_I2C_TX_EMPTY
 17381 ;; This function uses a non-reentrant model
 17382 ;;
 17383                           
 17384                           
 17385                           ;psect for function _rdBlkRegCompleteHandler
 17386  1070                     _rdBlkRegCompleteHandler:	
 17387                           
 17388                           ;Skip over the trampoline to the duplicate function for level 1
 17389  1070  1C7E               	btfss	126,0
 17390  1071  2874               	goto	l3550
 17391  1072  319F  2FE9         	ljmp	i1l4552
 17392  1074                     _rdBlkRegCompleteHandler$intlevel0:	
 17393  1074                     l3550:	
 17394                           ;incstack = 0
 17395 ;; hardware stack exceeded
 17396                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 17397                           
 17398                           
 17399                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 17400  1074  0020               	movlb	0	; select bank0
 17401  1075  0829               	movf	rdBlkRegCompleteHandler@p,w
 17402  1076  0086               	movwf	6
 17403  1077  0187               	clrf	7
 17404  1078  3F40               	moviw [0]fsr1
 17405  1079  00A0               	movwf	i2c_setBuffer@bufferSize
 17406  107A  3F41               	moviw [1]fsr1
 17407  107B  00A1               	movwf	i2c_setBuffer@bufferSize+1
 17408  107C  0829               	movf	rdBlkRegCompleteHandler@p,w
 17409  107D  3E02               	addlw	2
 17410  107E  0086               	movwf	6
 17411  107F  0187               	clrf	7
 17412  1080  0801               	movf	1,w
 17413  1081  319F  277C  3190   	fcall	_i2c_setBuffer
 17414                           
 17415                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 17416  1084  3000               	movlw	0
 17417  1085  0020               	movlb	0	; select bank0
 17418  1086  00A5               	movwf	i2c_setDataCompleteCallback@cb
 17419  1087  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 17420  1088  01A7               	clrf	i2c_setDataCompleteCallback@p
 17421  1089  319E  26D1         	fcall	_i2c_setDataCompleteCallback
 17422                           
 17423                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 17424  108B  3002               	movlw	2
 17425  108C  0008               	return
 17426  108D                     __end_of_rdBlkRegCompleteHandler:	
 17427                           
 17428                           	psect	text76
 17429  1FD3                     __ptext76:	
 17430 ;; *************** function _rd2RegCompleteHandler *****************
 17431 ;; Defined at:
 17432 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17433 ;; Parameters:    Size  Location     Type
 17434 ;;  p               1    9[BANK0 ] PTR void 
 17435 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17436 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17437 ;; Auto vars:     Size  Location     Type
 17438 ;;		None
 17439 ;; Return value:  Size  Location     Type
 17440 ;;                  1    wreg      enum E97
 17441 ;; Registers used:
 17442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17443 ;; Tracked objects:
 17444 ;;		On entry : 0/0
 17445 ;;		On exit  : 0/0
 17446 ;;		Unchanged: 0/0
 17447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17448 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17451 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17452 ;;Total ram usage:        1 bytes
 17453 ;; Hardware stack levels used:    1
 17454 ;; Hardware stack levels required when called:    8
 17455 ;; This function calls:
 17456 ;;		_i2c_setBuffer
 17457 ;;		_i2c_setDataCompleteCallback
 17458 ;; This function is called by:
 17459 ;;		_i2c_read2ByteRegister
 17460 ;;		_do_I2C_DO_ADDRESS_NACK
 17461 ;;		_do_I2C_TX
 17462 ;;		_do_I2C_RX
 17463 ;;		_do_I2C_TX_EMPTY
 17464 ;;		i1_do_I2C_DO_ADDRESS_NACK
 17465 ;;		i1_do_I2C_TX
 17466 ;;		i1_do_I2C_RX
 17467 ;;		i1_do_I2C_TX_EMPTY
 17468 ;; This function uses a non-reentrant model
 17469 ;;
 17470                           
 17471                           
 17472                           ;psect for function _rd2RegCompleteHandler
 17473  1FD3                     _rd2RegCompleteHandler:	
 17474                           
 17475                           ;Skip over the trampoline to the duplicate function for level 1
 17476  1FD3  1C7E               	btfss	126,0
 17477  1FD4  2FD7               	goto	l3534
 17478  1FD5  319F  2F47         	ljmp	i1l4536
 17479  1FD7                     _rd2RegCompleteHandler$intlevel0:	
 17480  1FD7                     l3534:	
 17481                           ;incstack = 0
 17482 ;; hardware stack exceeded
 17483                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17484                           
 17485                           
 17486                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 17487  1FD7  3002               	movlw	2
 17488  1FD8  0020               	movlb	0	; select bank0
 17489  1FD9  00A0               	movwf	i2c_setBuffer@bufferSize
 17490  1FDA  3000               	movlw	0
 17491  1FDB  00A1               	movwf	i2c_setBuffer@bufferSize+1
 17492  1FDC  0829               	movf	rd2RegCompleteHandler@p,w
 17493  1FDD  319F  277C  319F   	fcall	_i2c_setBuffer
 17494                           
 17495                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 17496  1FE0  3000               	movlw	0
 17497  1FE1  0020               	movlb	0	; select bank0
 17498  1FE2  00A5               	movwf	i2c_setDataCompleteCallback@cb
 17499  1FE3  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 17500  1FE4  01A7               	clrf	i2c_setDataCompleteCallback@p
 17501  1FE5  319E  26D1         	fcall	_i2c_setDataCompleteCallback
 17502                           
 17503                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 17504  1FE7  3002               	movlw	2
 17505  1FE8  0008               	return
 17506  1FE9                     __end_of_rd2RegCompleteHandler:	
 17507                           
 17508                           	psect	text77
 17509  1FBD                     __ptext77:	
 17510 ;; *************** function _rd1RegCompleteHandler *****************
 17511 ;; Defined at:
 17512 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17513 ;; Parameters:    Size  Location     Type
 17514 ;;  p               1    9[BANK0 ] PTR void 
 17515 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17516 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;		None
 17519 ;; Return value:  Size  Location     Type
 17520 ;;                  1    wreg      enum E97
 17521 ;; Registers used:
 17522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17523 ;; Tracked objects:
 17524 ;;		On entry : 0/0
 17525 ;;		On exit  : 0/0
 17526 ;;		Unchanged: 0/0
 17527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17528 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17531 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17532 ;;Total ram usage:        1 bytes
 17533 ;; Hardware stack levels used:    1
 17534 ;; Hardware stack levels required when called:    8
 17535 ;; This function calls:
 17536 ;;		_i2c_setBuffer
 17537 ;;		_i2c_setDataCompleteCallback
 17538 ;; This function is called by:
 17539 ;;		_i2c_read1ByteRegister
 17540 ;;		_do_I2C_DO_ADDRESS_NACK
 17541 ;;		_do_I2C_TX
 17542 ;;		_do_I2C_RX
 17543 ;;		_do_I2C_TX_EMPTY
 17544 ;;		i1_do_I2C_DO_ADDRESS_NACK
 17545 ;;		i1_do_I2C_TX
 17546 ;;		i1_do_I2C_RX
 17547 ;;		i1_do_I2C_TX_EMPTY
 17548 ;; This function uses a non-reentrant model
 17549 ;;
 17550                           
 17551                           
 17552                           ;psect for function _rd1RegCompleteHandler
 17553  1FBD                     _rd1RegCompleteHandler:	
 17554                           
 17555                           ;Skip over the trampoline to the duplicate function for level 1
 17556  1FBD  1C7E               	btfss	126,0
 17557  1FBE  2FC1               	goto	l3526
 17558  1FBF  319F  2F37         	ljmp	i1l4528
 17559  1FC1                     _rd1RegCompleteHandler$intlevel0:	
 17560  1FC1                     l3526:	
 17561                           ;incstack = 0
 17562 ;; hardware stack exceeded
 17563                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17564                           
 17565                           
 17566                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 17567  1FC1  3001               	movlw	1
 17568  1FC2  0020               	movlb	0	; select bank0
 17569  1FC3  00A0               	movwf	i2c_setBuffer@bufferSize
 17570  1FC4  3000               	movlw	0
 17571  1FC5  00A1               	movwf	i2c_setBuffer@bufferSize+1
 17572  1FC6  0829               	movf	rd1RegCompleteHandler@p,w
 17573  1FC7  319F  277C  319F   	fcall	_i2c_setBuffer
 17574                           
 17575                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 17576  1FCA  3000               	movlw	0
 17577  1FCB  0020               	movlb	0	; select bank0
 17578  1FCC  00A5               	movwf	i2c_setDataCompleteCallback@cb
 17579  1FCD  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 17580  1FCE  01A7               	clrf	i2c_setDataCompleteCallback@p
 17581  1FCF  319E  26D1         	fcall	_i2c_setDataCompleteCallback
 17582                           
 17583                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 17584  1FD1  3002               	movlw	2
 17585  1FD2  0008               	return
 17586  1FD3                     __end_of_rd1RegCompleteHandler:	
 17587                           
 17588                           	psect	text78
 17589  1FA7                     __ptext78:	
 17590 ;; *************** function _wr1RegCompleteHandler *****************
 17591 ;; Defined at:
 17592 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17593 ;; Parameters:    Size  Location     Type
 17594 ;;  p               1    9[BANK0 ] PTR void 
 17595 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17596 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17597 ;; Auto vars:     Size  Location     Type
 17598 ;;		None
 17599 ;; Return value:  Size  Location     Type
 17600 ;;                  1    wreg      enum E97
 17601 ;; Registers used:
 17602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17603 ;; Tracked objects:
 17604 ;;		On entry : 0/0
 17605 ;;		On exit  : 0/0
 17606 ;;		Unchanged: 0/0
 17607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17608 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17611 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17612 ;;Total ram usage:        1 bytes
 17613 ;; Hardware stack levels used:    1
 17614 ;; Hardware stack levels required when called:    8
 17615 ;; This function calls:
 17616 ;;		_i2c_setBuffer
 17617 ;;		_i2c_setDataCompleteCallback
 17618 ;; This function is called by:
 17619 ;;		_i2c_write1ByteRegister
 17620 ;;		_do_I2C_DO_ADDRESS_NACK
 17621 ;;		_do_I2C_TX
 17622 ;;		_do_I2C_RX
 17623 ;;		_do_I2C_TX_EMPTY
 17624 ;;		i1_do_I2C_DO_ADDRESS_NACK
 17625 ;;		i1_do_I2C_TX
 17626 ;;		i1_do_I2C_RX
 17627 ;;		i1_do_I2C_TX_EMPTY
 17628 ;; This function uses a non-reentrant model
 17629 ;;
 17630                           
 17631                           
 17632                           ;psect for function _wr1RegCompleteHandler
 17633  1FA7                     _wr1RegCompleteHandler:	
 17634                           
 17635                           ;Skip over the trampoline to the duplicate function for level 1
 17636  1FA7  1C7E               	btfss	126,0
 17637  1FA8  2FAB               	goto	l3518
 17638  1FA9  319F  2F27         	ljmp	i1l4520
 17639  1FAB                     _wr1RegCompleteHandler$intlevel0:	
 17640  1FAB                     l3518:	
 17641                           ;incstack = 0
 17642 ;; hardware stack exceeded
 17643                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17644                           
 17645                           
 17646                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 17647  1FAB  3001               	movlw	1
 17648  1FAC  0020               	movlb	0	; select bank0
 17649  1FAD  00A0               	movwf	i2c_setBuffer@bufferSize
 17650  1FAE  3000               	movlw	0
 17651  1FAF  00A1               	movwf	i2c_setBuffer@bufferSize+1
 17652  1FB0  0829               	movf	wr1RegCompleteHandler@p,w
 17653  1FB1  319F  277C  319F   	fcall	_i2c_setBuffer
 17654                           
 17655                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 17656  1FB4  3000               	movlw	0
 17657  1FB5  0020               	movlb	0	; select bank0
 17658  1FB6  00A5               	movwf	i2c_setDataCompleteCallback@cb
 17659  1FB7  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 17660  1FB8  01A7               	clrf	i2c_setDataCompleteCallback@p
 17661  1FB9  319E  26D1         	fcall	_i2c_setDataCompleteCallback
 17662                           
 17663                           ;i2c_simple_master.c: 35: return i2c_continue;
 17664  1FBB  3004               	movlw	4
 17665  1FBC  0008               	return
 17666  1FBD                     __end_of_wr1RegCompleteHandler:	
 17667                           
 17668                           	psect	text79
 17669  1D91                     __ptext79:	
 17670 ;; *************** function _i2c_restartWrite *****************
 17671 ;; Defined at:
 17672 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 17673 ;; Parameters:    Size  Location     Type
 17674 ;;  p               1    9[BANK0 ] PTR void 
 17675 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17676 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17677 ;; Auto vars:     Size  Location     Type
 17678 ;;		None
 17679 ;; Return value:  Size  Location     Type
 17680 ;;                  1    wreg      enum E96
 17681 ;; Registers used:
 17682 ;;		wreg
 17683 ;; Tracked objects:
 17684 ;;		On entry : 0/0
 17685 ;;		On exit  : 0/0
 17686 ;;		Unchanged: 0/0
 17687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17688 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17691 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17692 ;;Total ram usage:        1 bytes
 17693 ;; Hardware stack levels used:    1
 17694 ;; Hardware stack levels required when called:    6
 17695 ;; This function calls:
 17696 ;;		Nothing
 17697 ;; This function is called by:
 17698 ;;		_i2c_write1ByteRegister
 17699 ;;		_i2c_read1ByteRegister
 17700 ;;		_i2c_writeNBytes
 17701 ;;		_i2c_read2ByteRegister
 17702 ;;		_i2c_write2ByteRegister
 17703 ;;		_i2c_readDataBlock
 17704 ;;		_do_I2C_DO_ADDRESS_NACK
 17705 ;;		_do_I2C_TX
 17706 ;;		_do_I2C_RX
 17707 ;;		_do_I2C_TX_EMPTY
 17708 ;;		i1_do_I2C_DO_ADDRESS_NACK
 17709 ;;		i1_do_I2C_TX
 17710 ;;		i1_do_I2C_RX
 17711 ;;		i1_do_I2C_TX_EMPTY
 17712 ;; This function uses a non-reentrant model
 17713 ;;
 17714                           
 17715                           
 17716                           ;psect for function _i2c_restartWrite
 17717  1D91                     _i2c_restartWrite:	
 17718                           
 17719                           ;Skip over the trampoline to the duplicate function for level 1
 17720  1D91  1C7E               	btfss	126,0
 17721  1D92  2D95               	goto	l3514
 17722  1D93  3180  2802         	ljmp	i1l4516
 17723  1D95                     _i2c_restartWrite$intlevel0:	
 17724  1D95                     l3514:	
 17725                           ;incstack = 0
 17726                           ; Regs used in _i2c_restartWrite: [wreg]
 17727                           
 17728                           
 17729                           ;i2c_types.c: 37: return i2c_restart_write;
 17730  1D95  3003               	movlw	3
 17731  1D96  0008               	return
 17732  1D97                     __end_of_i2c_restartWrite:	
 17733                           
 17734                           	psect	text80
 17735  1D8B                     __ptext80:	
 17736 ;; *************** function _returnReset *****************
 17737 ;; Defined at:
 17738 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 17739 ;; Parameters:    Size  Location     Type
 17740 ;;  p               1    9[BANK0 ] PTR void 
 17741 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17742 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17743 ;; Auto vars:     Size  Location     Type
 17744 ;;		None
 17745 ;; Return value:  Size  Location     Type
 17746 ;;                  1    wreg      enum E15143
 17747 ;; Registers used:
 17748 ;;		wreg
 17749 ;; Tracked objects:
 17750 ;;		On entry : 0/0
 17751 ;;		On exit  : 0/0
 17752 ;;		Unchanged: 0/0
 17753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17754 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17757 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17758 ;;Total ram usage:        1 bytes
 17759 ;; Hardware stack levels used:    1
 17760 ;; Hardware stack levels required when called:    6
 17761 ;; This function calls:
 17762 ;;		Nothing
 17763 ;; This function is called by:
 17764 ;;		_i2c_open
 17765 ;;		_do_I2C_DO_ADDRESS_NACK
 17766 ;;		_do_I2C_TX
 17767 ;;		_do_I2C_RX
 17768 ;;		_do_I2C_TX_EMPTY
 17769 ;;		i1_do_I2C_DO_ADDRESS_NACK
 17770 ;;		i1_do_I2C_TX
 17771 ;;		i1_do_I2C_RX
 17772 ;;		i1_do_I2C_TX_EMPTY
 17773 ;; This function uses a non-reentrant model
 17774 ;;
 17775                           
 17776                           
 17777                           ;psect for function _returnReset
 17778  1D8B                     _returnReset:	
 17779                           
 17780                           ;Skip over the trampoline to the duplicate function for level 1
 17781  1D8B  1C7E               	btfss	126,0
 17782  1D8C  2D8F               	goto	l3510
 17783  1D8D  319D  2D0D         	ljmp	i1l4512
 17784  1D8F                     _returnReset$intlevel0:	
 17785  1D8F                     l3510:	
 17786                           ;incstack = 0
 17787                           ; Regs used in _returnReset: [wreg]
 17788                           
 17789                           
 17790                           ;i2c_master.c: 450: return i2c_reset_link;
 17791  1D8F  3005               	movlw	5
 17792  1D90  0008               	return
 17793  1D91                     __end_of_returnReset:	
 17794                           
 17795                           	psect	text81
 17796  1D85                     __ptext81:	
 17797 ;; *************** function _returnStop *****************
 17798 ;; Defined at:
 17799 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 17800 ;; Parameters:    Size  Location     Type
 17801 ;;  p               1    9[BANK0 ] PTR void 
 17802 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17803 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17804 ;; Auto vars:     Size  Location     Type
 17805 ;;		None
 17806 ;; Return value:  Size  Location     Type
 17807 ;;                  1    wreg      enum E15143
 17808 ;; Registers used:
 17809 ;;		wreg
 17810 ;; Tracked objects:
 17811 ;;		On entry : 0/0
 17812 ;;		On exit  : 0/0
 17813 ;;		Unchanged: 0/0
 17814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17815 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17818 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17819 ;;Total ram usage:        1 bytes
 17820 ;; Hardware stack levels used:    1
 17821 ;; Hardware stack levels required when called:    6
 17822 ;; This function calls:
 17823 ;;		Nothing
 17824 ;; This function is called by:
 17825 ;;		_i2c_open
 17826 ;;		_setCallBack
 17827 ;;		_do_I2C_DO_ADDRESS_NACK
 17828 ;;		_do_I2C_TX
 17829 ;;		_do_I2C_RX
 17830 ;;		_do_I2C_TX_EMPTY
 17831 ;;		i1_do_I2C_DO_ADDRESS_NACK
 17832 ;;		i1_do_I2C_TX
 17833 ;;		i1_do_I2C_RX
 17834 ;;		i1_do_I2C_TX_EMPTY
 17835 ;; This function uses a non-reentrant model
 17836 ;;
 17837                           
 17838                           
 17839                           ;psect for function _returnStop
 17840  1D85                     _returnStop:	
 17841                           
 17842                           ;Skip over the trampoline to the duplicate function for level 1
 17843  1D85  1C7E               	btfss	126,0
 17844  1D86  2D89               	goto	l3506
 17845  1D87  319D  2D0B         	ljmp	i1l4508
 17846  1D89                     _returnStop$intlevel0:	
 17847  1D89                     l3506:	
 17848                           ;incstack = 0
 17849                           ; Regs used in _returnStop: [wreg]
 17850                           
 17851                           
 17852                           ;i2c_master.c: 445: return i2c_stop;
 17853  1D89  3001               	movlw	1
 17854  1D8A  0008               	return
 17855  1D8B                     __end_of_returnStop:	
 17856                           
 17857                           	psect	text82
 17858  1F91                     __ptext82:	
 17859 ;; *************** function _wr2RegCompleteHandler *****************
 17860 ;; Defined at:
 17861 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17862 ;; Parameters:    Size  Location     Type
 17863 ;;  p               1    9[BANK0 ] PTR void 
 17864 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17865 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17866 ;; Auto vars:     Size  Location     Type
 17867 ;;		None
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  1    wreg      enum E97
 17870 ;; Registers used:
 17871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17872 ;; Tracked objects:
 17873 ;;		On entry : 0/0
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17877 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17880 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17881 ;;Total ram usage:        1 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; Hardware stack levels required when called:    8
 17884 ;; This function calls:
 17885 ;;		_i2c_setBuffer
 17886 ;;		_i2c_setDataCompleteCallback
 17887 ;; This function is called by:
 17888 ;;		_i2c_write2ByteRegister
 17889 ;;		_do_I2C_DO_ADDRESS_NACK
 17890 ;;		_do_I2C_TX
 17891 ;;		_do_I2C_RX
 17892 ;;		_do_I2C_TX_EMPTY
 17893 ;;		i1_do_I2C_DO_ADDRESS_NACK
 17894 ;;		i1_do_I2C_TX
 17895 ;;		i1_do_I2C_RX
 17896 ;;		i1_do_I2C_TX_EMPTY
 17897 ;; This function uses a non-reentrant model
 17898 ;;
 17899                           
 17900                           
 17901                           ;psect for function _wr2RegCompleteHandler
 17902  1F91                     _wr2RegCompleteHandler:	
 17903                           
 17904                           ;Skip over the trampoline to the duplicate function for level 1
 17905  1F91  1C7E               	btfss	126,0
 17906  1F92  2F95               	goto	l3542
 17907  1F93  319F  2F17         	ljmp	i1l4544
 17908  1F95                     _wr2RegCompleteHandler$intlevel0:	
 17909  1F95                     l3542:	
 17910                           ;incstack = 0
 17911 ;; hardware stack exceeded
 17912                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17913                           
 17914                           
 17915                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 17916  1F95  3002               	movlw	2
 17917  1F96  0020               	movlb	0	; select bank0
 17918  1F97  00A0               	movwf	i2c_setBuffer@bufferSize
 17919  1F98  3000               	movlw	0
 17920  1F99  00A1               	movwf	i2c_setBuffer@bufferSize+1
 17921  1F9A  0829               	movf	wr2RegCompleteHandler@p,w
 17922  1F9B  319F  277C  319F   	fcall	_i2c_setBuffer
 17923                           
 17924                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 17925  1F9E  3000               	movlw	0
 17926  1F9F  0020               	movlb	0	; select bank0
 17927  1FA0  00A5               	movwf	i2c_setDataCompleteCallback@cb
 17928  1FA1  00A6               	movwf	i2c_setDataCompleteCallback@cb+1
 17929  1FA2  01A7               	clrf	i2c_setDataCompleteCallback@p
 17930  1FA3  319E  26D1         	fcall	_i2c_setDataCompleteCallback
 17931                           
 17932                           ;i2c_simple_master.c: 114: return i2c_continue;
 17933  1FA5  3004               	movlw	4
 17934  1FA6  0008               	return
 17935  1FA7                     __end_of_wr2RegCompleteHandler:	
 17936                           
 17937                           	psect	text83
 17938  1ED1                     __ptext83:	
 17939 ;; *************** function _i2c_setDataCompleteCallback *****************
 17940 ;; Defined at:
 17941 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 17944 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17945 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 17946 ;;  p               1    7[BANK0 ] PTR void 
 17947 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17948 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17949 ;; Auto vars:     Size  Location     Type
 17950 ;;		None
 17951 ;; Return value:  Size  Location     Type
 17952 ;;                  1    wreg      void 
 17953 ;; Registers used:
 17954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17955 ;; Tracked objects:
 17956 ;;		On entry : 0/0
 17957 ;;		On exit  : 0/0
 17958 ;;		Unchanged: 0/0
 17959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17960 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17963 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17964 ;;Total ram usage:        4 bytes
 17965 ;; Hardware stack levels used:    1
 17966 ;; Hardware stack levels required when called:    7
 17967 ;; This function calls:
 17968 ;;		_setCallBack
 17969 ;; This function is called by:
 17970 ;;		_wr1RegCompleteHandler
 17971 ;;		_i2c_write1ByteRegister
 17972 ;;		_rd1RegCompleteHandler
 17973 ;;		_i2c_read1ByteRegister
 17974 ;;		_rd2RegCompleteHandler
 17975 ;;		_wr2RegCompleteHandler
 17976 ;;		_rdBlkRegCompleteHandler
 17977 ;;		_i2c_read2ByteRegister
 17978 ;;		_i2c_write2ByteRegister
 17979 ;;		_i2c_readDataBlock
 17980 ;; This function uses a non-reentrant model
 17981 ;;
 17982                           
 17983                           
 17984                           ;psect for function _i2c_setDataCompleteCallback
 17985  1ED1                     _i2c_setDataCompleteCallback:	
 17986                           
 17987                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 17988                           
 17989                           ;incstack = 0
 17990                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17991  1ED1  0020               	movlb	0	; select bank0
 17992  1ED2  0826               	movf	i2c_setDataCompleteCallback@cb+1,w
 17993  1ED3  00A1               	movwf	setCallBack@cb+1
 17994  1ED4  0825               	movf	i2c_setDataCompleteCallback@cb,w
 17995  1ED5  00A0               	movwf	setCallBack@cb
 17996  1ED6  0827               	movf	i2c_setDataCompleteCallback@p,w
 17997  1ED7  00A8               	movwf	??_i2c_setDataCompleteCallback
 17998  1ED8  0828               	movf	??_i2c_setDataCompleteCallback,w
 17999  1ED9  00A2               	movwf	setCallBack@p
 18000  1EDA  3000               	movlw	0
 18001  1EDB  3191  2152         	fcall	_setCallBack
 18002  1EDD  0008               	return
 18003  1EDE                     __end_of_i2c_setDataCompleteCallback:	
 18004                           
 18005                           	psect	text84
 18006  1152                     __ptext84:	
 18007 ;; *************** function _setCallBack *****************
 18008 ;; Defined at:
 18009 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 18010 ;; Parameters:    Size  Location     Type
 18011 ;;  idx             1    wreg     enum E15325
 18012 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 18013 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 18014 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 18015 ;;  p               1    2[BANK0 ] PTR void 
 18016 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18017 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18018 ;; Auto vars:     Size  Location     Type
 18019 ;;  idx             1    4[BANK0 ] enum E15325
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  1    wreg      void 
 18022 ;; Registers used:
 18023 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18024 ;; Tracked objects:
 18025 ;;		On entry : 0/0
 18026 ;;		On exit  : 0/0
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18029 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18031 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18032 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18033 ;;Total ram usage:        5 bytes
 18034 ;; Hardware stack levels used:    1
 18035 ;; Hardware stack levels required when called:    6
 18036 ;; This function calls:
 18037 ;;		Nothing
 18038 ;; This function is called by:
 18039 ;;		_i2c_setDataCompleteCallback
 18040 ;;		_i2c_setAddressNACKCallback
 18041 ;;		_i2c_setWriteCollisionCallback
 18042 ;;		_i2c_setDataNACKCallback
 18043 ;;		_i2c_setTimeOutCallback
 18044 ;; This function uses a non-reentrant model
 18045 ;;
 18046                           
 18047                           
 18048                           ;psect for function _setCallBack
 18049  1152                     _setCallBack:	
 18050                           
 18051                           ;incstack = 0
 18052                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 18053                           ;setCallBack@idx stored from wreg
 18054  1152  0020               	movlb	0	; select bank0
 18055  1153  00A4               	movwf	setCallBack@idx
 18056                           
 18057                           ;i2c_master.c: 455: if(cb)
 18058  1154  0820               	movf	setCallBack@cb,w
 18059  1155  0421               	iorwf	setCallBack@cb+1,w
 18060  1156  1903               	btfsc	3,2
 18061  1157  2969               	goto	l3438
 18062                           
 18063                           ;i2c_master.c: 456: {
 18064                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 18065  1158  3524               	lslf	setCallBack@idx,w
 18066  1159  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 18067  115A  0086               	movwf	6
 18068  115B  0187               	clrf	7
 18069  115C  0820               	movf	setCallBack@cb,w
 18070  115D  3FC0               	movwi [0]fsr1
 18071  115E  0821               	movf	setCallBack@cb+1,w
 18072  115F  3FC1               	movwi [1]fsr1
 18073                           
 18074                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 18075  1160  0822               	movf	setCallBack@p,w
 18076  1161  00A3               	movwf	??_setCallBack
 18077  1162  0824               	movf	setCallBack@idx,w
 18078  1163  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 18079  1164  0086               	movwf	6
 18080  1165  0187               	clrf	7
 18081  1166  0823               	movf	??_setCallBack,w
 18082  1167  0081               	movwf	1
 18083                           
 18084                           ;i2c_master.c: 459: }
 18085  1168  0008               	return
 18086  1169                     l3438:	
 18087                           
 18088                           ;i2c_master.c: 460: else
 18089                           ;i2c_master.c: 461: {
 18090                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 18091  1169  3524               	lslf	setCallBack@idx,w
 18092  116A  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 18093  116B  0086               	movwf	6
 18094  116C  0187               	clrf	7
 18095  116D  3085               	movlw	low _returnStop
 18096  116E  3FC0               	movwi [0]fsr1
 18097  116F  301D               	movlw	high _returnStop
 18098  1170  3FC1               	movwi [1]fsr1
 18099                           
 18100                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 18101  1171  0824               	movf	setCallBack@idx,w
 18102  1172  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 18103  1173  0086               	movwf	6
 18104  1174  0187               	clrf	7
 18105  1175  0181               	clrf	1
 18106  1176  0008               	return
 18107  1177                     __end_of_setCallBack:	
 18108                           
 18109                           	psect	text85
 18110  1F7C                     __ptext85:	
 18111 ;; *************** function _i2c_setBuffer *****************
 18112 ;; Defined at:
 18113 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 18114 ;; Parameters:    Size  Location     Type
 18115 ;;  buffer          1    wreg     PTR void 
 18116 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 18117 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 18118 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18119 ;;  bufferSize      2    0[BANK0 ] unsigned int 
 18120 ;; Auto vars:     Size  Location     Type
 18121 ;;  buffer          1    3[BANK0 ] PTR void 
 18122 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 18123 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 18124 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18125 ;; Return value:  Size  Location     Type
 18126 ;;                  1    wreg      void 
 18127 ;; Registers used:
 18128 ;;		wreg
 18129 ;; Tracked objects:
 18130 ;;		On entry : 0/0
 18131 ;;		On exit  : 0/0
 18132 ;;		Unchanged: 0/0
 18133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18136 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18137 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18138 ;;Total ram usage:        4 bytes
 18139 ;; Hardware stack levels used:    1
 18140 ;; Hardware stack levels required when called:    6
 18141 ;; This function calls:
 18142 ;;		Nothing
 18143 ;; This function is called by:
 18144 ;;		_wr1RegCompleteHandler
 18145 ;;		_i2c_write1ByteRegister
 18146 ;;		_rd1RegCompleteHandler
 18147 ;;		_i2c_read1ByteRegister
 18148 ;;		_rd2RegCompleteHandler
 18149 ;;		_wr2RegCompleteHandler
 18150 ;;		_rdBlkRegCompleteHandler
 18151 ;;		_i2c_writeNBytes
 18152 ;;		_i2c_read2ByteRegister
 18153 ;;		_i2c_write2ByteRegister
 18154 ;;		_i2c_readDataBlock
 18155 ;;		_i2c_readNBytes
 18156 ;; This function uses a non-reentrant model
 18157 ;;
 18158                           
 18159                           
 18160                           ;psect for function _i2c_setBuffer
 18161  1F7C                     _i2c_setBuffer:	
 18162                           
 18163                           ;incstack = 0
 18164                           ; Regs used in _i2c_setBuffer: [wreg]
 18165                           ;i2c_setBuffer@buffer stored from wreg
 18166  1F7C  0020               	movlb	0	; select bank0
 18167  1F7D  00A3               	movwf	i2c_setBuffer@buffer
 18168                           
 18169                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 18170  1F7E  0021               	movlb	1	; select bank1
 18171  1F7F  1D47               	btfss	_i2c_status^(0+128),2
 18172  1F80  0008               	return
 18173                           
 18174                           ;i2c_master.c: 187: {
 18175                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 18176  1F81  0020               	movlb	0	; select bank0
 18177  1F82  0823               	movf	i2c_setBuffer@buffer,w
 18178  1F83  00A2               	movwf	??_i2c_setBuffer
 18179  1F84  0822               	movf	??_i2c_setBuffer,w
 18180  1F85  0021               	movlb	1	; select bank1
 18181  1F86  00C9               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 18182                           
 18183                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 18184  1F87  0020               	movlb	0	; select bank0
 18185  1F88  0821               	movf	i2c_setBuffer@bufferSize+1,w
 18186  1F89  0021               	movlb	1	; select bank1
 18187  1F8A  00CB               	movwf	((_i2c_status+1)^(0+128)+3)
 18188  1F8B  0020               	movlb	0	; select bank0
 18189  1F8C  0820               	movf	i2c_setBuffer@bufferSize,w
 18190  1F8D  0021               	movlb	1	; select bank1
 18191  1F8E  00CA               	movwf	(_i2c_status^(0+128)+3)
 18192                           
 18193                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 18194  1F8F  1147               	bcf	_i2c_status^(0+128),2
 18195  1F90  0008               	return
 18196  1F91                     __end_of_i2c_setBuffer:	
 18197                           
 18198                           	psect	text86
 18199  1D33                     __ptext86:	
 18200 ;; *************** function _i2c1_driver_stop *****************
 18201 ;; Defined at:
 18202 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 18203 ;; Parameters:    Size  Location     Type
 18204 ;;		None
 18205 ;; Auto vars:     Size  Location     Type
 18206 ;;		None
 18207 ;; Return value:  Size  Location     Type
 18208 ;;                  1    wreg      void 
 18209 ;; Registers used:
 18210 ;;		None
 18211 ;; Tracked objects:
 18212 ;;		On entry : 0/0
 18213 ;;		On exit  : 0/0
 18214 ;;		Unchanged: 0/0
 18215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18220 ;;Total ram usage:        0 bytes
 18221 ;; Hardware stack levels used:    1
 18222 ;; Hardware stack levels required when called:    6
 18223 ;; This function calls:
 18224 ;;		Nothing
 18225 ;; This function is called by:
 18226 ;;		_do_I2C_SEND_STOP
 18227 ;; This function uses a non-reentrant model
 18228 ;;
 18229                           
 18230                           
 18231                           ;psect for function _i2c1_driver_stop
 18232  1D33                     _i2c1_driver_stop:	
 18233                           
 18234                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 18235                           
 18236                           ;incstack = 0
 18237 ;; hardware stack exceeded
 18238                           ; Regs used in _i2c1_driver_stop: []
 18239  1D33  0023               	movlb	3	; select bank3
 18240  1D34  1511               	bsf	17,2	;volatile
 18241  1D35  0008               	return
 18242  1D36                     __end_of_i2c1_driver_stop:	
 18243                           
 18244                           	psect	text87
 18245  1D30                     __ptext87:	
 18246 ;; *************** function _i2c1_driver_restart *****************
 18247 ;; Defined at:
 18248 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 18249 ;; Parameters:    Size  Location     Type
 18250 ;;		None
 18251 ;; Auto vars:     Size  Location     Type
 18252 ;;		None
 18253 ;; Return value:  Size  Location     Type
 18254 ;;                  1    wreg      void 
 18255 ;; Registers used:
 18256 ;;		None
 18257 ;; Tracked objects:
 18258 ;;		On entry : 0/0
 18259 ;;		On exit  : 0/0
 18260 ;;		Unchanged: 0/0
 18261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18266 ;;Total ram usage:        0 bytes
 18267 ;; Hardware stack levels used:    1
 18268 ;; Hardware stack levels required when called:    6
 18269 ;; This function calls:
 18270 ;;		Nothing
 18271 ;; This function is called by:
 18272 ;;		_do_I2C_SEND_RESTART_READ
 18273 ;;		_do_I2C_SEND_RESTART_WRITE
 18274 ;;		_do_I2C_SEND_RESTART
 18275 ;; This function uses a non-reentrant model
 18276 ;;
 18277                           
 18278                           
 18279                           ;psect for function _i2c1_driver_restart
 18280  1D30                     _i2c1_driver_restart:	
 18281                           
 18282                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 18283                           
 18284                           ;incstack = 0
 18285 ;; hardware stack exceeded
 18286                           ; Regs used in _i2c1_driver_restart: []
 18287  1D30  0023               	movlb	3	; select bank3
 18288  1D31  1491               	bsf	17,1	;volatile
 18289  1D32  0008               	return
 18290  1D33                     __end_of_i2c1_driver_restart:	
 18291                           
 18292                           	psect	text88
 18293  1D63                     __ptext88:	
 18294 ;; *************** function _i2c1_driver_sendACK *****************
 18295 ;; Defined at:
 18296 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 18297 ;; Parameters:    Size  Location     Type
 18298 ;;		None
 18299 ;; Auto vars:     Size  Location     Type
 18300 ;;		None
 18301 ;; Return value:  Size  Location     Type
 18302 ;;                  1    wreg      void 
 18303 ;; Registers used:
 18304 ;;		None
 18305 ;; Tracked objects:
 18306 ;;		On entry : 0/0
 18307 ;;		On exit  : 0/0
 18308 ;;		Unchanged: 0/0
 18309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18314 ;;Total ram usage:        0 bytes
 18315 ;; Hardware stack levels used:    1
 18316 ;; Hardware stack levels required when called:    6
 18317 ;; This function calls:
 18318 ;;		Nothing
 18319 ;; This function is called by:
 18320 ;;		_do_I2C_DO_ACK
 18321 ;;		_do_I2C_RX
 18322 ;; This function uses a non-reentrant model
 18323 ;;
 18324                           
 18325                           
 18326                           ;psect for function _i2c1_driver_sendACK
 18327  1D63                     _i2c1_driver_sendACK:	
 18328                           
 18329                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 18330                           
 18331                           ;incstack = 0
 18332                           ; Regs used in _i2c1_driver_sendACK: []
 18333  1D63  0023               	movlb	3	; select bank3
 18334  1D64  1291               	bcf	17,5	;volatile
 18335                           
 18336                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 18337  1D65  1611               	bsf	17,4	;volatile
 18338  1D66  0008               	return
 18339  1D67                     __end_of_i2c1_driver_sendACK:	
 18340                           
 18341                           	psect	text89
 18342  1D2D                     __ptext89:	
 18343 ;; *************** function _i2c1_driver_start *****************
 18344 ;; Defined at:
 18345 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 18346 ;; Parameters:    Size  Location     Type
 18347 ;;		None
 18348 ;; Auto vars:     Size  Location     Type
 18349 ;;		None
 18350 ;; Return value:  Size  Location     Type
 18351 ;;                  1    wreg      void 
 18352 ;; Registers used:
 18353 ;;		None
 18354 ;; Tracked objects:
 18355 ;;		On entry : 0/0
 18356 ;;		On exit  : 0/0
 18357 ;;		Unchanged: 0/0
 18358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18363 ;;Total ram usage:        0 bytes
 18364 ;; Hardware stack levels used:    1
 18365 ;; Hardware stack levels required when called:    6
 18366 ;; This function calls:
 18367 ;;		Nothing
 18368 ;; This function is called by:
 18369 ;;		_i2c_masterOperation
 18370 ;; This function uses a non-reentrant model
 18371 ;;
 18372                           
 18373                           
 18374                           ;psect for function _i2c1_driver_start
 18375  1D2D                     _i2c1_driver_start:	
 18376                           
 18377                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 18378                           
 18379                           ;incstack = 0
 18380                           ; Regs used in _i2c1_driver_start: []
 18381  1D2D  0023               	movlb	3	; select bank3
 18382  1D2E  1411               	bsf	17,0	;volatile
 18383  1D2F  0008               	return
 18384  1D30                     __end_of_i2c1_driver_start:	
 18385                           
 18386                           	psect	text90
 18387  1039                     __ptext90:	
 18388 ;; *************** function _i2c_close *****************
 18389 ;; Defined at:
 18390 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
 18391 ;; Parameters:    Size  Location     Type
 18392 ;;		None
 18393 ;; Auto vars:     Size  Location     Type
 18394 ;;  ret             1    1[BANK0 ] enum E15138
 18395 ;; Return value:  Size  Location     Type
 18396 ;;                  1    wreg      enum E15138
 18397 ;; Registers used:
 18398 ;;		wreg, status,2, status,0, pclath, cstack
 18399 ;; Tracked objects:
 18400 ;;		On entry : 0/0
 18401 ;;		On exit  : 0/0
 18402 ;;		Unchanged: 0/0
 18403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18407 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18408 ;;Total ram usage:        2 bytes
 18409 ;; Hardware stack levels used:    1
 18410 ;; Hardware stack levels required when called:    7
 18411 ;; This function calls:
 18412 ;;		_mssp1_clearIRQ
 18413 ;;		_mssp1_disableIRQ
 18414 ;; This function is called by:
 18415 ;;		_i2c_write1ByteRegister
 18416 ;;		_i2c_read1ByteRegister
 18417 ;;		_i2c_writeNBytes
 18418 ;;		_i2c_read2ByteRegister
 18419 ;;		_i2c_write2ByteRegister
 18420 ;;		_i2c_readDataBlock
 18421 ;;		_i2c_readNBytes
 18422 ;; This function uses a non-reentrant model
 18423 ;;
 18424                           
 18425                           
 18426                           ;psect for function _i2c_close
 18427  1039                     _i2c_close:	
 18428                           
 18429                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
 18430                           
 18431                           ;incstack = 0
 18432                           ; Regs used in _i2c_close: [wreg+status,2+status,0+pclath+cstack]
 18433  1039  0020               	movlb	0	; select bank0
 18434  103A  01A1               	clrf	i2c_close@ret
 18435  103B  0AA1               	incf	i2c_close@ret,f
 18436                           
 18437                           ;i2c_master.c: 165: if(!i2c_status.busy)
 18438  103C  0021               	movlb	1	; select bank1
 18439  103D  1847               	btfsc	_i2c_status^(0+128),0
 18440  103E  2851               	goto	l224
 18441                           
 18442                           ;i2c_master.c: 166: {
 18443                           ;i2c_master.c: 167: i2c_status.inUse = 0;
 18444  103F  10C7               	bcf	_i2c_status^(0+128),1
 18445                           
 18446                           ;i2c_master.c: 169: i2c_status.address = 0xff;
 18447  1040  30FF               	movlw	255
 18448  1041  0020               	movlb	0	; select bank0
 18449  1042  00A0               	movwf	??_i2c_close
 18450  1043  0820               	movf	??_i2c_close,w
 18451  1044  0021               	movlb	1	; select bank1
 18452  1045  00C8               	movwf	(_i2c_status^(0+128)+1)
 18453                           
 18454                           ;i2c_master.c: 170: mssp1_clearIRQ();
 18455  1046  319D  2527  3190   	fcall	_mssp1_clearIRQ
 18456                           
 18457                           ;i2c_master.c: 171: mssp1_disableIRQ();
 18458  1049  319D  252A         	fcall	_mssp1_disableIRQ
 18459                           
 18460                           ;i2c_master.c: 172: ret = i2c_status.error;
 18461  104B  0021               	movlb	1	; select bank1
 18462  104C  0851               	movf	(_i2c_status^(0+128)+10),w
 18463  104D  0020               	movlb	0	; select bank0
 18464  104E  00A0               	movwf	??_i2c_close
 18465  104F  0820               	movf	??_i2c_close,w
 18466  1050  00A1               	movwf	i2c_close@ret
 18467  1051                     l224:	
 18468                           
 18469                           ;i2c_master.c: 173: }
 18470                           ;i2c_master.c: 174: return ret;
 18471  1051  0020               	movlb	0	; select bank0
 18472  1052  0821               	movf	i2c_close@ret,w
 18473  1053  0008               	return
 18474  1054                     __end_of_i2c_close:	
 18475                           
 18476                           	psect	text91
 18477  1D2A                     __ptext91:	
 18478 ;; *************** function _mssp1_disableIRQ *****************
 18479 ;; Defined at:
 18480 ;;		line 48 in file "mcc_generated_files/i2c1_driver.c"
 18481 ;; Parameters:    Size  Location     Type
 18482 ;;		None
 18483 ;; Auto vars:     Size  Location     Type
 18484 ;;		None
 18485 ;; Return value:  Size  Location     Type
 18486 ;;                  1    wreg      void 
 18487 ;; Registers used:
 18488 ;;		None
 18489 ;; Tracked objects:
 18490 ;;		On entry : 0/0
 18491 ;;		On exit  : 0/0
 18492 ;;		Unchanged: 0/0
 18493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18498 ;;Total ram usage:        0 bytes
 18499 ;; Hardware stack levels used:    1
 18500 ;; Hardware stack levels required when called:    6
 18501 ;; This function calls:
 18502 ;;		Nothing
 18503 ;; This function is called by:
 18504 ;;		_i2c_close
 18505 ;;		_i2c_setTimeOut
 18506 ;; This function uses a non-reentrant model
 18507 ;;
 18508                           
 18509                           
 18510                           ;psect for function _mssp1_disableIRQ
 18511  1D2A                     _mssp1_disableIRQ:	
 18512                           
 18513                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
 18514                           
 18515                           ;incstack = 0
 18516                           ; Regs used in _mssp1_disableIRQ: []
 18517  1D2A  002E               	movlb	14	; select bank14
 18518  1D2B  1019               	bcf	25,0	;volatile
 18519  1D2C  0008               	return
 18520  1D2D                     __end_of_mssp1_disableIRQ:	
 18521                           
 18522                           	psect	text92
 18523  1D27                     __ptext92:	
 18524 ;; *************** function _mssp1_clearIRQ *****************
 18525 ;; Defined at:
 18526 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 18527 ;; Parameters:    Size  Location     Type
 18528 ;;		None
 18529 ;; Auto vars:     Size  Location     Type
 18530 ;;		None
 18531 ;; Return value:  Size  Location     Type
 18532 ;;                  1    wreg      void 
 18533 ;; Registers used:
 18534 ;;		None
 18535 ;; Tracked objects:
 18536 ;;		On entry : 0/0
 18537 ;;		On exit  : 0/0
 18538 ;;		Unchanged: 0/0
 18539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18544 ;;Total ram usage:        0 bytes
 18545 ;; Hardware stack levels used:    1
 18546 ;; Hardware stack levels required when called:    6
 18547 ;; This function calls:
 18548 ;;		Nothing
 18549 ;; This function is called by:
 18550 ;;		_i2c_open
 18551 ;;		_i2c_close
 18552 ;;		_i2c_ISR
 18553 ;; This function uses a non-reentrant model
 18554 ;;
 18555                           
 18556                           
 18557                           ;psect for function _mssp1_clearIRQ
 18558  1D27                     _mssp1_clearIRQ:	
 18559                           
 18560                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
 18561                           
 18562                           ;incstack = 0
 18563                           ; Regs used in _mssp1_clearIRQ: []
 18564  1D27  002E               	movlb	14	; select bank14
 18565  1D28  100F               	bcf	15,0	;volatile
 18566  1D29  0008               	return
 18567  1D2A                     __end_of_mssp1_clearIRQ:	
 18568                           
 18569                           	psect	text93
 18570  1D7F                     __ptext93:	
 18571 ;; *************** function _SPI2_Initialize *****************
 18572 ;; Defined at:
 18573 ;;		line 65 in file "mcc_generated_files/spi2.c"
 18574 ;; Parameters:    Size  Location     Type
 18575 ;;		None
 18576 ;; Auto vars:     Size  Location     Type
 18577 ;;		None
 18578 ;; Return value:  Size  Location     Type
 18579 ;;                  1    wreg      void 
 18580 ;; Registers used:
 18581 ;;		wreg, status,2
 18582 ;; Tracked objects:
 18583 ;;		On entry : 0/0
 18584 ;;		On exit  : 0/0
 18585 ;;		Unchanged: 0/0
 18586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18591 ;;Total ram usage:        0 bytes
 18592 ;; Hardware stack levels used:    1
 18593 ;; Hardware stack levels required when called:    6
 18594 ;; This function calls:
 18595 ;;		Nothing
 18596 ;; This function is called by:
 18597 ;;		_SYSTEM_Initialize
 18598 ;; This function uses a non-reentrant model
 18599 ;;
 18600                           
 18601                           
 18602                           ;psect for function _SPI2_Initialize
 18603  1D7F                     _SPI2_Initialize:	
 18604                           
 18605                           ;spi2.c: 70: SSP2STAT = 0x00;
 18606                           
 18607                           ;incstack = 0
 18608                           ; Regs used in _SPI2_Initialize: [wreg+status,2]
 18609  1D7F  0023               	movlb	3	; select bank3
 18610  1D80  0199               	clrf	25	;volatile
 18611                           
 18612                           ;spi2.c: 73: SSP2CON1 = 0x30;
 18613  1D81  3030               	movlw	48
 18614  1D82  009A               	movwf	26	;volatile
 18615                           
 18616                           ;spi2.c: 76: SSP2ADD = 0x00;
 18617  1D83  0197               	clrf	23	;volatile
 18618  1D84  0008               	return
 18619  1D85                     __end_of_SPI2_Initialize:	
 18620                           
 18621                           	psect	text94
 18622  1DCE                     __ptext94:	
 18623 ;; *************** function _PMD_Initialize *****************
 18624 ;; Defined at:
 18625 ;;		line 73 in file "mcc_generated_files/mcc.c"
 18626 ;; Parameters:    Size  Location     Type
 18627 ;;		None
 18628 ;; Auto vars:     Size  Location     Type
 18629 ;;		None
 18630 ;; Return value:  Size  Location     Type
 18631 ;;                  1    wreg      void 
 18632 ;; Registers used:
 18633 ;;		status,2
 18634 ;; Tracked objects:
 18635 ;;		On entry : 0/0
 18636 ;;		On exit  : 0/0
 18637 ;;		Unchanged: 0/0
 18638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18643 ;;Total ram usage:        0 bytes
 18644 ;; Hardware stack levels used:    1
 18645 ;; Hardware stack levels required when called:    6
 18646 ;; This function calls:
 18647 ;;		Nothing
 18648 ;; This function is called by:
 18649 ;;		_SYSTEM_Initialize
 18650 ;; This function uses a non-reentrant model
 18651 ;;
 18652                           
 18653                           
 18654                           ;psect for function _PMD_Initialize
 18655  1DCE                     _PMD_Initialize:	
 18656                           
 18657                           ;mcc.c: 76: PMD0 = 0x00;
 18658                           
 18659                           ;incstack = 0
 18660                           ; Regs used in _PMD_Initialize: [status,2]
 18661  1DCE  002F               	movlb	15	; select bank15
 18662  1DCF  0196               	clrf	22	;volatile
 18663                           
 18664                           ;mcc.c: 78: PMD1 = 0x00;
 18665  1DD0  0197               	clrf	23	;volatile
 18666                           
 18667                           ;mcc.c: 80: PMD2 = 0x00;
 18668  1DD1  0198               	clrf	24	;volatile
 18669                           
 18670                           ;mcc.c: 82: PMD3 = 0x00;
 18671  1DD2  0199               	clrf	25	;volatile
 18672                           
 18673                           ;mcc.c: 84: PMD4 = 0x00;
 18674  1DD3  019A               	clrf	26	;volatile
 18675                           
 18676                           ;mcc.c: 86: PMD5 = 0x00;
 18677  1DD4  019B               	clrf	27	;volatile
 18678  1DD5  0008               	return
 18679  1DD6                     __end_of_PMD_Initialize:	
 18680                           
 18681                           	psect	text95
 18682  145C                     __ptext95:	
 18683 ;; *************** function _PIN_MANAGER_Initialize *****************
 18684 ;; Defined at:
 18685 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 18686 ;; Parameters:    Size  Location     Type
 18687 ;;		None
 18688 ;; Auto vars:     Size  Location     Type
 18689 ;;		None
 18690 ;; Return value:  Size  Location     Type
 18691 ;;                  1    wreg      void 
 18692 ;; Registers used:
 18693 ;;		wreg, status,2, status,0
 18694 ;; Tracked objects:
 18695 ;;		On entry : 0/0
 18696 ;;		On exit  : 0/0
 18697 ;;		Unchanged: 0/0
 18698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18703 ;;Total ram usage:        0 bytes
 18704 ;; Hardware stack levels used:    1
 18705 ;; Hardware stack levels required when called:    6
 18706 ;; This function calls:
 18707 ;;		Nothing
 18708 ;; This function is called by:
 18709 ;;		_SYSTEM_Initialize
 18710 ;; This function uses a non-reentrant model
 18711 ;;
 18712                           
 18713                           
 18714                           ;psect for function _PIN_MANAGER_Initialize
 18715  145C                     _PIN_MANAGER_Initialize:	
 18716                           
 18717                           ;pin_manager.c: 62: LATE = 0x00;
 18718                           
 18719                           ;incstack = 0
 18720                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 18721  145C  0020               	movlb	0	; select bank0
 18722  145D  019A               	clrf	26	;volatile
 18723                           
 18724                           ;pin_manager.c: 63: LATD = 0x00;
 18725  145E  0199               	clrf	25	;volatile
 18726                           
 18727                           ;pin_manager.c: 64: LATA = 0x08;
 18728  145F  3008               	movlw	8
 18729  1460  0096               	movwf	22	;volatile
 18730                           
 18731                           ;pin_manager.c: 65: LATB = 0x00;
 18732  1461  0197               	clrf	23	;volatile
 18733                           
 18734                           ;pin_manager.c: 66: LATC = 0x00;
 18735  1462  0198               	clrf	24	;volatile
 18736                           
 18737                           ;pin_manager.c: 71: TRISE = 0x07;
 18738  1463  3007               	movlw	7
 18739  1464  0095               	movwf	21	;volatile
 18740                           
 18741                           ;pin_manager.c: 72: TRISA = 0xF7;
 18742  1465  30F7               	movlw	247
 18743  1466  0091               	movwf	17	;volatile
 18744                           
 18745                           ;pin_manager.c: 73: TRISB = 0xF5;
 18746  1467  30F5               	movlw	245
 18747  1468  0092               	movwf	18	;volatile
 18748                           
 18749                           ;pin_manager.c: 74: TRISC = 0xFB;
 18750  1469  30FB               	movlw	251
 18751  146A  0093               	movwf	19	;volatile
 18752                           
 18753                           ;pin_manager.c: 75: TRISD = 0xFE;
 18754  146B  30FE               	movlw	254
 18755  146C  0094               	movwf	20	;volatile
 18756                           
 18757                           ;pin_manager.c: 80: ANSELD = 0xFE;
 18758  146D  30FE               	movlw	254
 18759  146E  003E               	movlb	30	; select bank30
 18760  146F  00D9               	movwf	89	;volatile
 18761                           
 18762                           ;pin_manager.c: 81: ANSELC = 0xC3;
 18763  1470  30C3               	movlw	195
 18764  1471  00CE               	movwf	78	;volatile
 18765                           
 18766                           ;pin_manager.c: 82: ANSELB = 0xE1;
 18767  1472  30E1               	movlw	225
 18768  1473  00C3               	movwf	67	;volatile
 18769                           
 18770                           ;pin_manager.c: 83: ANSELE = 0x07;
 18771  1474  3007               	movlw	7
 18772  1475  00E4               	movwf	100	;volatile
 18773                           
 18774                           ;pin_manager.c: 84: ANSELA = 0xF7;
 18775  1476  30F7               	movlw	247
 18776  1477  00B8               	movwf	56	;volatile
 18777                           
 18778                           ;pin_manager.c: 89: WPUD = 0x00;
 18779  1478  01DA               	clrf	90	;volatile
 18780                           
 18781                           ;pin_manager.c: 90: WPUE = 0x00;
 18782  1479  01E5               	clrf	101	;volatile
 18783                           
 18784                           ;pin_manager.c: 91: WPUB = 0x00;
 18785  147A  01C4               	clrf	68	;volatile
 18786                           
 18787                           ;pin_manager.c: 92: WPUA = 0x00;
 18788  147B  01B9               	clrf	57	;volatile
 18789                           
 18790                           ;pin_manager.c: 93: WPUC = 0x00;
 18791  147C  01CF               	clrf	79	;volatile
 18792                           
 18793                           ;pin_manager.c: 98: ODCONE = 0x00;
 18794  147D  01E6               	clrf	102	;volatile
 18795                           
 18796                           ;pin_manager.c: 99: ODCONA = 0x00;
 18797  147E  01BA               	clrf	58	;volatile
 18798                           
 18799                           ;pin_manager.c: 100: ODCONB = 0x00;
 18800  147F  01C5               	clrf	69	;volatile
 18801                           
 18802                           ;pin_manager.c: 101: ODCONC = 0x00;
 18803  1480  01D0               	clrf	80	;volatile
 18804                           
 18805                           ;pin_manager.c: 102: ODCOND = 0x00;
 18806  1481  01DB               	clrf	91	;volatile
 18807                           
 18808                           ;pin_manager.c: 111: SSP1CLKPPSbits.SSP1CLKPPS = 0x13;
 18809  1482  003D               	movlb	29	; select bank29
 18810  1483  0845               	movf	69,w	;volatile
 18811  1484  39E0               	andlw	-32
 18812  1485  3813               	iorlw	19
 18813  1486  00C5               	movwf	69	;volatile
 18814                           
 18815                           ;pin_manager.c: 112: SSP1DATPPSbits.SSP1DATPPS = 0x14;
 18816  1487  0846               	movf	70,w	;volatile
 18817  1488  39E0               	andlw	-32
 18818  1489  3814               	iorlw	20
 18819  148A  00C6               	movwf	70	;volatile
 18820                           
 18821                           ;pin_manager.c: 113: RB1PPS = 0x16;
 18822  148B  3016               	movlw	22
 18823  148C  003E               	movlb	30	; select bank30
 18824  148D  0099               	movwf	25	;volatile
 18825                           
 18826                           ;pin_manager.c: 114: RC3PPS = 0x14;
 18827  148E  3014               	movlw	20
 18828  148F  00A3               	movwf	35	;volatile
 18829                           
 18830                           ;pin_manager.c: 115: RC4PPS = 0x15;
 18831  1490  3015               	movlw	21
 18832  1491  00A4               	movwf	36	;volatile
 18833                           
 18834                           ;pin_manager.c: 116: RB3PPS = 0x17;
 18835  1492  3017               	movlw	23
 18836  1493  009B               	movwf	27	;volatile
 18837                           
 18838                           ;pin_manager.c: 117: SSP2CLKPPSbits.SSP2CLKPPS = 0x09;
 18839  1494  003D               	movlb	29	; select bank29
 18840  1495  0848               	movf	72,w	;volatile
 18841  1496  39E0               	andlw	-32
 18842  1497  3809               	iorlw	9
 18843  1498  00C8               	movwf	72	;volatile
 18844                           
 18845                           ;pin_manager.c: 118: SSP2DATPPSbits.SSP2DATPPS = 0x0A;
 18846  1499  0849               	movf	73,w	;volatile
 18847  149A  39E0               	andlw	-32
 18848  149B  380A               	iorlw	10
 18849  149C  00C9               	movwf	73	;volatile
 18850  149D  0008               	return
 18851  149E                     __end_of_PIN_MANAGER_Initialize:	
 18852                           
 18853                           	psect	text96
 18854  1E0E                     __ptext96:	
 18855 ;; *************** function _OSCILLATOR_Initialize *****************
 18856 ;; Defined at:
 18857 ;;		line 59 in file "mcc_generated_files/mcc.c"
 18858 ;; Parameters:    Size  Location     Type
 18859 ;;		None
 18860 ;; Auto vars:     Size  Location     Type
 18861 ;;		None
 18862 ;; Return value:  Size  Location     Type
 18863 ;;                  1    wreg      void 
 18864 ;; Registers used:
 18865 ;;		wreg, status,2
 18866 ;; Tracked objects:
 18867 ;;		On entry : 0/0
 18868 ;;		On exit  : 0/0
 18869 ;;		Unchanged: 0/0
 18870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18875 ;;Total ram usage:        0 bytes
 18876 ;; Hardware stack levels used:    1
 18877 ;; Hardware stack levels required when called:    6
 18878 ;; This function calls:
 18879 ;;		Nothing
 18880 ;; This function is called by:
 18881 ;;		_SYSTEM_Initialize
 18882 ;; This function uses a non-reentrant model
 18883 ;;
 18884                           
 18885                           
 18886                           ;psect for function _OSCILLATOR_Initialize
 18887  1E0E                     _OSCILLATOR_Initialize:	
 18888                           
 18889                           ;mcc.c: 62: OSCCON1 = 0x62;
 18890                           
 18891                           ;incstack = 0
 18892                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 18893  1E0E  3062               	movlw	98
 18894  1E0F  0031               	movlb	17	; select bank17
 18895  1E10  008D               	movwf	13	;volatile
 18896                           
 18897                           ;mcc.c: 64: OSCCON3 = 0x00;
 18898  1E11  018F               	clrf	15	;volatile
 18899                           
 18900                           ;mcc.c: 66: OSCEN = 0x00;
 18901  1E12  0191               	clrf	17	;volatile
 18902                           
 18903                           ;mcc.c: 68: OSCFRQ = 0x02;
 18904  1E13  3002               	movlw	2
 18905  1E14  0093               	movwf	19	;volatile
 18906                           
 18907                           ;mcc.c: 70: OSCTUNE = 0x00;
 18908  1E15  0192               	clrf	18	;volatile
 18909  1E16  0008               	return
 18910  1E17                     __end_of_OSCILLATOR_Initialize:	
 18911                           
 18912                           	psect	text97
 18913  0A99                     __ptext97:	
 18914 ;; *************** function _OLED_Initialize *****************
 18915 ;; Defined at:
 18916 ;;		line 24 in file "oled.c"
 18917 ;; Parameters:    Size  Location     Type
 18918 ;;		None
 18919 ;; Auto vars:     Size  Location     Type
 18920 ;;		None
 18921 ;; Return value:  Size  Location     Type
 18922 ;;                  1    wreg      void 
 18923 ;; Registers used:
 18924 ;;		wreg, status,2, status,0, pclath, cstack
 18925 ;; Tracked objects:
 18926 ;;		On entry : 0/0
 18927 ;;		On exit  : 0/0
 18928 ;;		Unchanged: 0/0
 18929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18933 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18934 ;;Total ram usage:        2 bytes
 18935 ;; Hardware stack levels used:    1
 18936 ;; Hardware stack levels required when called:    8
 18937 ;; This function calls:
 18938 ;;		_OLED_Command
 18939 ;; This function is called by:
 18940 ;;		_main
 18941 ;; This function uses a non-reentrant model
 18942 ;;
 18943                           
 18944                           
 18945                           ;psect for function _OLED_Initialize
 18946  0A99                     _OLED_Initialize:	
 18947                           
 18948                           ;oled.c: 28: LATDbits.LATD0 = 0;
 18949                           
 18950                           ;incstack = 0
 18951                           ; Regs used in _OLED_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18952  0A99  0020               	movlb	0	; select bank0
 18953  0A9A  1019               	bcf	25,0	;volatile
 18954                           
 18955                           ;oled.c: 29: _delay((unsigned long)((1000)*(1000000/4000.0)));
 18956  0A9B  3002               	movlw	2
 18957  0A9C  0020               	movlb	0	; select bank0
 18958  0A9D  00A3               	movwf	??_OLED_Initialize+1
 18959  0A9E  3045               	movlw	69
 18960  0A9F  00A2               	movwf	??_OLED_Initialize
 18961  0AA0  30A9               	movlw	169
 18962  0AA1                     u6937:	
 18963  0AA1  0B89               	decfsz	9,f
 18964  0AA2  2AA1               	goto	u6937
 18965  0AA3  0BA2               	decfsz	??_OLED_Initialize,f
 18966  0AA4  2AA1               	goto	u6937
 18967  0AA5  0BA3               	decfsz	??_OLED_Initialize+1,f
 18968  0AA6  2AA1               	goto	u6937
 18969  0AA7  3200               	nop2
 18970                           
 18971                           ;oled.c: 30: LATDbits.LATD0 = 1;
 18972  0AA8  0020               	movlb	0	; select bank0
 18973  0AA9  1419               	bsf	25,0	;volatile
 18974                           
 18975                           ;oled.c: 31: _delay((unsigned long)((1000)*(1000000/4000.0)));
 18976  0AAA  3002               	movlw	2
 18977  0AAB  0020               	movlb	0	; select bank0
 18978  0AAC  00A3               	movwf	??_OLED_Initialize+1
 18979  0AAD  3045               	movlw	69
 18980  0AAE  00A2               	movwf	??_OLED_Initialize
 18981  0AAF  30A9               	movlw	169
 18982  0AB0                     u6947:	
 18983  0AB0  0B89               	decfsz	9,f
 18984  0AB1  2AB0               	goto	u6947
 18985  0AB2  0BA2               	decfsz	??_OLED_Initialize,f
 18986  0AB3  2AB0               	goto	u6947
 18987  0AB4  0BA3               	decfsz	??_OLED_Initialize+1,f
 18988  0AB5  2AB0               	goto	u6947
 18989  0AB6  3200               	nop2
 18990                           
 18991                           ;oled.c: 32: OLED_Command(0xAE);
 18992  0AB7  30AE               	movlw	174
 18993  0AB8  319E  2620  318A   	fcall	_OLED_Command
 18994                           
 18995                           ;oled.c: 33: OLED_Command(0xD5);
 18996  0ABB  30D5               	movlw	213
 18997  0ABC  319E  2620  318A   	fcall	_OLED_Command
 18998                           
 18999                           ;oled.c: 34: OLED_Command(0x80);
 19000  0ABF  3080               	movlw	128
 19001  0AC0  319E  2620  318A   	fcall	_OLED_Command
 19002                           
 19003                           ;oled.c: 35: OLED_Command(0xA8);
 19004  0AC3  30A8               	movlw	168
 19005  0AC4  319E  2620  318A   	fcall	_OLED_Command
 19006                           
 19007                           ;oled.c: 36: OLED_Command(39);
 19008  0AC7  3027               	movlw	39
 19009  0AC8  319E  2620  318A   	fcall	_OLED_Command
 19010                           
 19011                           ;oled.c: 38: OLED_Command(0xA1);
 19012  0ACB  30A1               	movlw	161
 19013  0ACC  319E  2620  318A   	fcall	_OLED_Command
 19014                           
 19015                           ;oled.c: 39: OLED_Command(0xC8);
 19016  0ACF  30C8               	movlw	200
 19017  0AD0  319E  2620  318A   	fcall	_OLED_Command
 19018                           
 19019                           ;oled.c: 40: OLED_Command(0x40);
 19020  0AD3  3040               	movlw	64
 19021  0AD4  319E  2620  318A   	fcall	_OLED_Command
 19022                           
 19023                           ;oled.c: 42: OLED_Command(0xD3);
 19024  0AD7  30D3               	movlw	211
 19025  0AD8  319E  2620  318A   	fcall	_OLED_Command
 19026                           
 19027                           ;oled.c: 43: OLED_Command(0xA4);
 19028  0ADB  30A4               	movlw	164
 19029  0ADC  319E  2620  318A   	fcall	_OLED_Command
 19030                           
 19031                           ;oled.c: 44: OLED_Command(0x8D);
 19032  0ADF  308D               	movlw	141
 19033  0AE0  319E  2620  318A   	fcall	_OLED_Command
 19034                           
 19035                           ;oled.c: 45: OLED_Command(0x14);
 19036  0AE3  3014               	movlw	20
 19037  0AE4  319E  2620  318A   	fcall	_OLED_Command
 19038                           
 19039                           ;oled.c: 46: OLED_Command(0xDA);
 19040  0AE7  30DA               	movlw	218
 19041  0AE8  319E  2620  318A   	fcall	_OLED_Command
 19042                           
 19043                           ;oled.c: 47: OLED_Command(0x12);
 19044  0AEB  3012               	movlw	18
 19045  0AEC  319E  2620  318A   	fcall	_OLED_Command
 19046                           
 19047                           ;oled.c: 48: OLED_Command(0x81);
 19048  0AEF  3081               	movlw	129
 19049  0AF0  319E  2620  318A   	fcall	_OLED_Command
 19050                           
 19051                           ;oled.c: 49: OLED_Command(0xAF);
 19052  0AF3  30AF               	movlw	175
 19053  0AF4  319E  2620  318A   	fcall	_OLED_Command
 19054                           
 19055                           ;oled.c: 50: OLED_Command(0xD9);
 19056  0AF7  30D9               	movlw	217
 19057  0AF8  319E  2620  318A   	fcall	_OLED_Command
 19058                           
 19059                           ;oled.c: 51: OLED_Command(0x25);
 19060  0AFB  3025               	movlw	37
 19061  0AFC  319E  2620  318A   	fcall	_OLED_Command
 19062                           
 19063                           ;oled.c: 52: OLED_Command(0xDB);
 19064  0AFF  30DB               	movlw	219
 19065  0B00  319E  2620  318A   	fcall	_OLED_Command
 19066                           
 19067                           ;oled.c: 53: OLED_Command(0x20);
 19068  0B03  3020               	movlw	32
 19069  0B04  319E  2620  318A   	fcall	_OLED_Command
 19070                           
 19071                           ;oled.c: 54: OLED_Command(0xA4);
 19072  0B07  30A4               	movlw	164
 19073  0B08  319E  2620  318A   	fcall	_OLED_Command
 19074                           
 19075                           ;oled.c: 55: OLED_Command(0xA6);
 19076  0B0B  30A6               	movlw	166
 19077  0B0C  319E  2620  318A   	fcall	_OLED_Command
 19078                           
 19079                           ;oled.c: 56: OLED_Command(0xAF);
 19080  0B0F  30AF               	movlw	175
 19081  0B10  319E  2620         	fcall	_OLED_Command
 19082  0B12  0008               	return
 19083  0B13                     __end_of_OLED_Initialize:	
 19084                           
 19085                           	psect	text98
 19086  1E20                     __ptext98:	
 19087 ;; *************** function _OLED_Command *****************
 19088 ;; Defined at:
 19089 ;;		line 4 in file "oled.c"
 19090 ;; Parameters:    Size  Location     Type
 19091 ;;  temp            1    wreg     unsigned char 
 19092 ;; Auto vars:     Size  Location     Type
 19093 ;;  temp            1    1[BANK0 ] unsigned char 
 19094 ;; Return value:  Size  Location     Type
 19095 ;;                  1    wreg      void 
 19096 ;; Registers used:
 19097 ;;		wreg, status,2, status,0, pclath, cstack
 19098 ;; Tracked objects:
 19099 ;;		On entry : 0/0
 19100 ;;		On exit  : 0/0
 19101 ;;		Unchanged: 0/0
 19102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19106 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19107 ;;Total ram usage:        1 bytes
 19108 ;; Hardware stack levels used:    1
 19109 ;; Hardware stack levels required when called:    7
 19110 ;; This function calls:
 19111 ;;		_SPI2_Exchange8bit
 19112 ;; This function is called by:
 19113 ;;		_OLED_Initialize
 19114 ;;		_OLED_SetRow
 19115 ;;		_OLED_SetColumn
 19116 ;; This function uses a non-reentrant model
 19117 ;;
 19118                           
 19119                           
 19120                           ;psect for function _OLED_Command
 19121  1E20                     _OLED_Command:	
 19122                           
 19123                           ;incstack = 0
 19124                           ; Regs used in _OLED_Command: [wreg+status,2+status,0+pclath+cstack]
 19125                           ;OLED_Command@temp stored from wreg
 19126  1E20  0020               	movlb	0	; select bank0
 19127  1E21  00A1               	movwf	OLED_Command@temp
 19128                           
 19129                           ;oled.c: 8: LATAbits.LATA3 = 0;
 19130  1E22  1196               	bcf	22,3	;volatile
 19131                           
 19132                           ;oled.c: 9: LATCbits.LATC2 = 0;
 19133  1E23  1118               	bcf	24,2	;volatile
 19134                           
 19135                           ;oled.c: 10: SPI2_Exchange8bit( temp);
 19136  1E24  0821               	movf	OLED_Command@temp,w
 19137  1E25  319E  2695         	fcall	_SPI2_Exchange8bit
 19138                           
 19139                           ;oled.c: 11: LATAbits.LATA3 = 1;
 19140  1E27  0020               	movlb	0	; select bank0
 19141  1E28  1596               	bsf	22,3	;volatile
 19142  1E29  0008               	return
 19143  1E2A                     __end_of_OLED_Command:	
 19144                           
 19145                           	psect	text99
 19146  1E95                     __ptext99:	
 19147 ;; *************** function _SPI2_Exchange8bit *****************
 19148 ;; Defined at:
 19149 ;;		line 79 in file "mcc_generated_files/spi2.c"
 19150 ;; Parameters:    Size  Location     Type
 19151 ;;  data            1    wreg     unsigned char 
 19152 ;; Auto vars:     Size  Location     Type
 19153 ;;  data            1    0[BANK0 ] unsigned char 
 19154 ;; Return value:  Size  Location     Type
 19155 ;;                  1    wreg      unsigned char 
 19156 ;; Registers used:
 19157 ;;		wreg
 19158 ;; Tracked objects:
 19159 ;;		On entry : 0/0
 19160 ;;		On exit  : 0/0
 19161 ;;		Unchanged: 0/0
 19162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19166 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19167 ;;Total ram usage:        1 bytes
 19168 ;; Hardware stack levels used:    1
 19169 ;; Hardware stack levels required when called:    6
 19170 ;; This function calls:
 19171 ;;		Nothing
 19172 ;; This function is called by:
 19173 ;;		_OLED_Command
 19174 ;;		_OLED_Data
 19175 ;;		_SPI2_Exchange8bitBuffer
 19176 ;; This function uses a non-reentrant model
 19177 ;;
 19178                           
 19179                           
 19180                           ;psect for function _SPI2_Exchange8bit
 19181  1E95                     _SPI2_Exchange8bit:	
 19182                           
 19183                           ;incstack = 0
 19184                           ; Regs used in _SPI2_Exchange8bit: [wreg]
 19185                           ;SPI2_Exchange8bit@data stored from wreg
 19186  1E95  0020               	movlb	0	; select bank0
 19187  1E96  00A0               	movwf	SPI2_Exchange8bit@data
 19188                           
 19189                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 19190  1E97  0023               	movlb	3	; select bank3
 19191  1E98  139A               	bcf	26,7	;volatile
 19192                           
 19193                           ;spi2.c: 84: SSP2BUF = data;
 19194  1E99  0020               	movlb	0	; select bank0
 19195  1E9A  0820               	movf	SPI2_Exchange8bit@data,w
 19196  1E9B  0023               	movlb	3	; select bank3
 19197  1E9C  0096               	movwf	22	;volatile
 19198  1E9D                     l764:	
 19199                           ;spi2.c: 87: {
 19200                           
 19201                           ;spi2.c: 86: while(SSP2STATbits.BF == 0x0)
 19202                           
 19203  1E9D  1C19               	btfss	25,0	;volatile
 19204  1E9E  2E9D               	goto	l764
 19205                           
 19206                           ;spi2.c: 88: }
 19207                           ;spi2.c: 90: return (SSP2BUF);
 19208  1E9F  0816               	movf	22,w	;volatile
 19209  1EA0  0008               	return
 19210  1EA1                     __end_of_SPI2_Exchange8bit:	
 19211                           
 19212                           	psect	intentry
 19213  0004                     __pintentry:	
 19214 ;; *************** function _INTERRUPT_InterruptManager *****************
 19215 ;; Defined at:
 19216 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 19217 ;; Parameters:    Size  Location     Type
 19218 ;;		None
 19219 ;; Auto vars:     Size  Location     Type
 19220 ;;		None
 19221 ;; Return value:  Size  Location     Type
 19222 ;;                  1    wreg      void 
 19223 ;; Registers used:
 19224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19225 ;; Tracked objects:
 19226 ;;		On entry : 0/0
 19227 ;;		On exit  : 0/0
 19228 ;;		Unchanged: 0/0
 19229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19234 ;;Total ram usage:        1 bytes
 19235 ;; Hardware stack levels used:    1
 19236 ;; Hardware stack levels required when called:    5
 19237 ;; This function calls:
 19238 ;;		Absolute function
 19239 ;;		_i2c_busCollisionISR
 19240 ;;		i1_i2c_ISR
 19241 ;; This function is called by:
 19242 ;;		Interrupt level 1
 19243 ;; This function uses a non-reentrant model
 19244 ;;
 19245                           
 19246  0004                     _INTERRUPT_InterruptManager:	
 19247                           
 19248                           ;incstack = 0
 19249 ;; hardware stack exceeded
 19250  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 19251                           
 19252                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19253  0005  3180               	pagesel	$
 19254  0006  0020               	movlb	0	; select bank0
 19255  0007  087F               	movf	127,w
 19256  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
 19257                           
 19258                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 19259  0009  1F0B               	btfss	11,6	;volatile
 19260  000A  281D               	goto	i1l658
 19261                           
 19262                           ;interrupt_manager.c: 56: {
 19263                           ;interrupt_manager.c: 57: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 19264  000B  002E               	movlb	14	; select bank14
 19265  000C  1899               	btfsc	25,1	;volatile
 19266  000D  1C8F               	btfss	15,1	;volatile
 19267  000E  2815               	goto	i1l653
 19268                           
 19269                           ;interrupt_manager.c: 58: {
 19270                           ;interrupt_manager.c: 59: i2c1_driver_busCollisionISR();
 19271  000F  087D               	movf	_i2c1_driver_busCollisionISR+1,w
 19272  0010  008A               	movwf	10
 19273  0011  087C               	movf	_i2c1_driver_busCollisionISR,w
 19274  0012  000A               	callw
 19275  0013  3180               	pagesel	$
 19276                           
 19277                           ;interrupt_manager.c: 60: }
 19278  0014  281D               	goto	i1l658
 19279  0015                     i1l653:	
 19280                           
 19281                           ;interrupt_manager.c: 61: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 19282  0015  1819               	btfsc	25,0	;volatile
 19283  0016  1C0F               	btfss	15,0	;volatile
 19284  0017  281D               	goto	i1l658
 19285                           
 19286                           ;interrupt_manager.c: 62: {
 19287                           ;interrupt_manager.c: 63: i2c1_driver_i2cISR();
 19288  0018  087B               	movf	_i2c1_driver_i2cISR+1,w
 19289  0019  008A               	movwf	10
 19290  001A  087A               	movf	_i2c1_driver_i2cISR,w
 19291  001B  000A               	callw
 19292  001C  3180               	pagesel	$
 19293  001D                     i1l658:	
 19294                           ;interrupt_manager.c: 70: else
 19295                           ;interrupt_manager.c: 71: {
 19296                           
 19297                           ;interrupt_manager.c: 68: }
 19298                           ;interrupt_manager.c: 69: }
 19299                           
 19300                           ;interrupt_manager.c: 65: else
 19301                           ;interrupt_manager.c: 66: {
 19302                           
 19303                           ;interrupt_manager.c: 64: }
 19304                           
 19305  001D  0877               	movf	??_INTERRUPT_InterruptManager,w
 19306  001E  0020               	movlb	0	; select bank0
 19307  001F  00FF               	movwf	127
 19308  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 19309  0021  0009               	retfie
 19310  0022                     __end_of_INTERRUPT_InterruptManager:	
 19311                           
 19312                           	psect	text101
 19313  1177                     __ptext101:	
 19314 ;; *************** function i1_i2c_ISR *****************
 19315 ;; Defined at:
 19316 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 19317 ;; Parameters:    Size  Location     Type
 19318 ;;		None
 19319 ;; Auto vars:     Size  Location     Type
 19320 ;;		None
 19321 ;; Return value:  Size  Location     Type
 19322 ;;                  1    wreg      void 
 19323 ;; Registers used:
 19324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19325 ;; Tracked objects:
 19326 ;;		On entry : 0/0
 19327 ;;		On exit  : 0/0
 19328 ;;		Unchanged: 0/0
 19329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19332 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19333 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19334 ;;Total ram usage:        3 bytes
 19335 ;; Hardware stack levels used:    1
 19336 ;; Hardware stack levels required when called:    4
 19337 ;; This function calls:
 19338 ;;		i1_do_I2C_DO_ACK
 19339 ;;		i1_do_I2C_DO_ADDRESS_NACK
 19340 ;;		i1_do_I2C_DO_NACK_RESTART
 19341 ;;		i1_do_I2C_DO_NACK_STOP
 19342 ;;		i1_do_I2C_IDLE
 19343 ;;		i1_do_I2C_RCEN
 19344 ;;		i1_do_I2C_RESET
 19345 ;;		i1_do_I2C_RX
 19346 ;;		i1_do_I2C_SEND_ADR_READ
 19347 ;;		i1_do_I2C_SEND_ADR_WRITE
 19348 ;;		i1_do_I2C_SEND_RESTART
 19349 ;;		i1_do_I2C_SEND_RESTART_READ
 19350 ;;		i1_do_I2C_SEND_RESTART_WRITE
 19351 ;;		i1_do_I2C_SEND_STOP
 19352 ;;		i1_do_I2C_TX
 19353 ;;		i1_do_I2C_TX_EMPTY
 19354 ;;		i1_i2c1_driver_isNACK
 19355 ;;		i1_mssp1_clearIRQ
 19356 ;; This function is called by:
 19357 ;; This function uses a non-reentrant model
 19358 ;;
 19359                           
 19360                           
 19361                           ;psect for function i1_i2c_ISR
 19362  1177                     i1_i2c_ISR:	
 19363  1177                     i1l8096:	
 19364                           ;incstack = 0
 19365 ;; hardware stack exceeded
 19366                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19367                           
 19368                           
 19369                           ;i2c_master.c: 421: mssp1_clearIRQ();
 19370  1177  319D  2524  3191   	fcall	i1_mssp1_clearIRQ
 19371                           
 19372                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 19373  117A  0021               	movlb	1	; select bank1
 19374  117B  1DC7               	btfss	_i2c_status^(0+128),3
 19375  117C  2987               	goto	i1l8104
 19376  117D  319D  25BE  3191   	fcall	i1_i2c1_driver_isNACK
 19377  1180  1C03               	btfss	3,0
 19378  1181  2987               	goto	i1l8104
 19379                           
 19380                           ;i2c_master.c: 428: {
 19381                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 19382  1182  300F               	movlw	15
 19383  1183  00F4               	movwf	??i1_i2c_ISR
 19384  1184  0874               	movf	??i1_i2c_ISR,w
 19385  1185  0021               	movlb	1	; select bank1
 19386  1186  00D0               	movwf	(_i2c_status^(0+128)+9)
 19387  1187                     i1l8104:	
 19388                           
 19389                           ;i2c_master.c: 430: }
 19390                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 19391  1187  0021               	movlb	1	; select bank1
 19392  1188  0850               	movf	(_i2c_status^(0+128)+9),w
 19393  1189  00F4               	movwf	??i1_i2c_ISR
 19394  118A  01F5               	clrf	??i1_i2c_ISR+1
 19395  118B  35F4               	lslf	??i1_i2c_ISR,f
 19396  118C  0DF5               	rlf	??i1_i2c_ISR+1,f
 19397  118D  3000               	movlw	low (_fsmStateTable| (0+32768))
 19398  118E  0774               	addwf	??i1_i2c_ISR,w
 19399  118F  0084               	movwf	4
 19400  1190  3098               	movlw	high (_fsmStateTable| (0+32768))
 19401  1191  3D75               	addwfc	??i1_i2c_ISR+1,w
 19402  1192  0085               	movwf	5
 19403  1193  3F01               	moviw [1]fsr0
 19404  1194  008A               	movwf	10
 19405  1195  3F00               	moviw [0]fsr0
 19406  1196  000A               	callw
 19407  1197  3191               	pagesel	$
 19408  1198  00F6               	movwf	??i1_i2c_ISR+2
 19409  1199  0876               	movf	??i1_i2c_ISR+2,w
 19410  119A  0021               	movlb	1	; select bank1
 19411  119B  00D0               	movwf	(_i2c_status^(0+128)+9)
 19412  119C  0008               	return
 19413  119D                     __end_ofi1_i2c_ISR:	
 19414                           
 19415                           	psect	text102
 19416  1D24                     __ptext102:	
 19417 ;; *************** function i1_mssp1_clearIRQ *****************
 19418 ;; Defined at:
 19419 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 19420 ;; Parameters:    Size  Location     Type
 19421 ;;		None
 19422 ;; Auto vars:     Size  Location     Type
 19423 ;;		None
 19424 ;; Return value:  Size  Location     Type
 19425 ;;                  1    wreg      void 
 19426 ;; Registers used:
 19427 ;;		None
 19428 ;; Tracked objects:
 19429 ;;		On entry : 0/0
 19430 ;;		On exit  : 0/0
 19431 ;;		Unchanged: 0/0
 19432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19437 ;;Total ram usage:        0 bytes
 19438 ;; Hardware stack levels used:    1
 19439 ;; This function calls:
 19440 ;;		Nothing
 19441 ;; This function is called by:
 19442 ;;		i1_i2c_ISR
 19443 ;; This function uses a non-reentrant model
 19444 ;;
 19445                           
 19446                           
 19447                           ;psect for function i1_mssp1_clearIRQ
 19448  1D24                     i1_mssp1_clearIRQ:	
 19449                           
 19450                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
 19451                           
 19452                           ;incstack = 0
 19453                           ; Regs used in i1_mssp1_clearIRQ: []
 19454  1D24  002E               	movlb	14	; select bank14
 19455  1D25  100F               	bcf	15,0	;volatile
 19456  1D26  0008               	return
 19457  1D27                     __end_ofi1_mssp1_clearIRQ:	
 19458                           
 19459                           	psect	text103
 19460  141E                     __ptext103:	
 19461 ;; *************** function i1_do_I2C_RX *****************
 19462 ;; Defined at:
 19463 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 19464 ;; Parameters:    Size  Location     Type
 19465 ;;		None
 19466 ;; Auto vars:     Size  Location     Type
 19467 ;;		None
 19468 ;; Return value:  Size  Location     Type
 19469 ;;                  1    wreg      enum E15307
 19470 ;; Registers used:
 19471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19472 ;; Tracked objects:
 19473 ;;		On entry : 0/0
 19474 ;;		On exit  : 0/0
 19475 ;;		Unchanged: 0/0
 19476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19481 ;;Total ram usage:        1 bytes
 19482 ;; Hardware stack levels used:    1
 19483 ;; Hardware stack levels required when called:    3
 19484 ;; This function calls:
 19485 ;;		Absolute function
 19486 ;;		i1_do_I2C_DO_NACK_RESTART
 19487 ;;		i1_do_I2C_DO_NACK_STOP
 19488 ;;		i1_i2c1_driver_getRXData
 19489 ;;		i1_i2c1_driver_sendACK
 19490 ;;		i1_i2c_restartWrite
 19491 ;;		i1_rd1RegCompleteHandler
 19492 ;;		i1_rd2RegCompleteHandler
 19493 ;;		i1_rdBlkRegCompleteHandler
 19494 ;;		i1_returnReset
 19495 ;;		i1_returnStop
 19496 ;;		i1_wr1RegCompleteHandler
 19497 ;;		i1_wr2RegCompleteHandler
 19498 ;; This function is called by:
 19499 ;; This function uses a non-reentrant model
 19500 ;;
 19501                           
 19502                           
 19503                           ;psect for function i1_do_I2C_RX
 19504  141E                     i1_do_I2C_RX:	
 19505  141E                     i1l7998:	
 19506                           ;incstack = 0
 19507 ;; hardware stack exceeded
 19508                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19509                           
 19510                           
 19511                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 19512  141E  319D  251E  3194   	fcall	i1_i2c1_driver_getRXData
 19513  1421  00F0               	movwf	??i1_do_I2C_RX
 19514  1422  0021               	movlb	1	; select bank1
 19515  1423  0849               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 19516  1424  0086               	movwf	6
 19517  1425  0187               	clrf	7
 19518  1426  0870               	movf	??i1_do_I2C_RX,w
 19519  1427  0081               	movwf	1
 19520  1428  3001               	movlw	1
 19521  1429  00F0               	movwf	??i1_do_I2C_RX
 19522  142A  0870               	movf	??i1_do_I2C_RX,w
 19523  142B  07C9               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 19524                           
 19525                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 19526  142C  3001               	movlw	1
 19527  142D  02CA               	subwf	(_i2c_status^(0+128)+3),f
 19528  142E  3000               	movlw	0
 19529  142F  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 19530  1430  084A               	movf	(_i2c_status^(0+128)+3),w
 19531  1431  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 19532  1432  1903               	btfsc	3,2
 19533  1433  2C38               	goto	i1l314
 19534                           
 19535                           ;i2c_master.c: 361: {
 19536                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 19537  1434  319D  253F         	fcall	i1_i2c1_driver_sendACK
 19538                           
 19539                           ;i2c_master.c: 363: return I2C_RCEN;
 19540  1436  3005               	movlw	5
 19541                           
 19542                           ;i2c_master.c: 364: }
 19543  1437  0008               	return
 19544  1438                     i1l314:	
 19545                           
 19546                           ;i2c_master.c: 365: else
 19547                           ;i2c_master.c: 366: {
 19548                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 19549  1438  1547               	bsf	_i2c_status^(0+128),2
 19550                           
 19551                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 19552  1439  2C40               	goto	i1l8022
 19553  143A                     i1l8012:	
 19554                           ;i2c_master.c: 369: {
 19555                           ;i2c_master.c: 370: case i2c_restart_write:
 19556                           
 19557                           
 19558                           ;i2c_master.c: 371: case i2c_restart_read:
 19559                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 19560  143A  319D  255F         	fcall	i1_do_I2C_DO_NACK_RESTART
 19561  143C  0008               	return
 19562  143D                     i1l8016:	
 19563                           ;i2c_master.c: 374: case i2c_continue:
 19564                           
 19565                           ;i2c_master.c: 373: default:
 19566                           
 19567                           
 19568                           ;i2c_master.c: 375: case i2c_stop:
 19569                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 19570  143D  319D  255B         	fcall	i1_do_I2C_DO_NACK_STOP
 19571                           
 19572                           ;i2c_master.c: 377: }
 19573  143F  0008               	return
 19574  1440                     i1l8022:	
 19575  1440  0021               	movlb	1	; select bank1
 19576  1441  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 19577  1442  00F0               	movwf	??i1_do_I2C_RX
 19578  1443  0870               	movf	??i1_do_I2C_RX,w
 19579  1444  00F9               	movwf	i1returnStop@p
 19580  1445  300B               	movlw	11
 19581  1446  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 19582  1447  0086               	movwf	6
 19583  1448  0187               	clrf	7
 19584  1449  3F41               	moviw [1]fsr1
 19585  144A  008A               	movwf	10
 19586  144B  3F40               	moviw [0]fsr1
 19587  144C  000A               	callw
 19588  144D  3194               	pagesel	$
 19589                           
 19590                           ; Switch size 1, requested type "space"
 19591                           ; Number of cases is 4, Range of values is 1 to 4
 19592                           ; switch strategies available:
 19593                           ; Name         Instructions Cycles
 19594                           ; simple_byte           13     7 (average)
 19595                           ; direct_byte           17     9 (fixed)
 19596                           ; jumptable            263     9 (fixed)
 19597                           ;	Chosen strategy is simple_byte
 19598  144E  3A01               	xorlw	1	; case 1
 19599  144F  1903               	skipnz
 19600  1450  2C3D               	goto	i1l8016
 19601  1451  3A03               	xorlw	3	; case 2
 19602  1452  1903               	skipnz
 19603  1453  2C3A               	goto	i1l8012
 19604  1454  3A01               	xorlw	1	; case 3
 19605  1455  1903               	skipnz
 19606  1456  2C3A               	goto	i1l8012
 19607  1457  3A07               	xorlw	7	; case 4
 19608  1458  1903               	skipnz
 19609  1459  2C3D               	goto	i1l8016
 19610  145A  2C3D               	goto	i1l8016
 19611  145B  0008               	return
 19612  145C                     __end_ofi1_do_I2C_RX:	
 19613                           
 19614                           	psect	text104
 19615  156F                     __ptext104:	
 19616 ;; *************** function i1_do_I2C_TX *****************
 19617 ;; Defined at:
 19618 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 19619 ;; Parameters:    Size  Location     Type
 19620 ;;		None
 19621 ;; Auto vars:     Size  Location     Type
 19622 ;;		None
 19623 ;; Return value:  Size  Location     Type
 19624 ;;                  1    wreg      enum E15307
 19625 ;; Registers used:
 19626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19627 ;; Tracked objects:
 19628 ;;		On entry : 0/0
 19629 ;;		On exit  : 0/0
 19630 ;;		Unchanged: 0/0
 19631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19635 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19636 ;;Total ram usage:        3 bytes
 19637 ;; Hardware stack levels used:    1
 19638 ;; Hardware stack levels required when called:    3
 19639 ;; This function calls:
 19640 ;;		Absolute function
 19641 ;;		i1_do_I2C_SEND_RESTART_READ
 19642 ;;		i1_do_I2C_SEND_RESTART_WRITE
 19643 ;;		i1_do_I2C_SEND_STOP
 19644 ;;		i1_i2c1_driver_TXData
 19645 ;;		i1_i2c1_driver_isNACK
 19646 ;;		i1_i2c_restartWrite
 19647 ;;		i1_rd1RegCompleteHandler
 19648 ;;		i1_rd2RegCompleteHandler
 19649 ;;		i1_rdBlkRegCompleteHandler
 19650 ;;		i1_returnReset
 19651 ;;		i1_returnStop
 19652 ;;		i1_wr1RegCompleteHandler
 19653 ;;		i1_wr2RegCompleteHandler
 19654 ;; This function is called by:
 19655 ;; This function uses a non-reentrant model
 19656 ;;
 19657                           
 19658                           
 19659                           ;psect for function i1_do_I2C_TX
 19660  156F                     i1_do_I2C_TX:	
 19661  156F                     i1l7968:	
 19662                           ;incstack = 0
 19663 ;; hardware stack exceeded
 19664                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19665                           
 19666                           
 19667                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 19668  156F  319D  25BE  3195   	fcall	i1_i2c1_driver_isNACK
 19669  1572  1803               	btfsc	3,0
 19670  1573  2D7E               	goto	i1l7986
 19671  1574  2D9A               	goto	i1l298
 19672  1575                     i1l7972:	
 19673                           ;i2c_master.c: 338: {
 19674                           ;i2c_master.c: 339: case i2c_restart_read:
 19675                           
 19676                           ;i2c_master.c: 336: {
 19677                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 19678                           
 19679                           
 19680                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 19681  1575  319D  2547         	fcall	i1_do_I2C_SEND_RESTART_READ
 19682  1577  0008               	return
 19683  1578                     i1l7976:	
 19684                           ;i2c_master.c: 341: case i2c_restart_write:
 19685                           
 19686                           
 19687                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 19688  1578  319D  254B         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 19689  157A  0008               	return
 19690  157B                     i1l7980:	
 19691                           ;i2c_master.c: 344: case i2c_continue:
 19692                           
 19693                           ;i2c_master.c: 343: default:
 19694                           
 19695                           
 19696                           ;i2c_master.c: 345: case i2c_stop:
 19697                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 19698  157B  319D  2553         	fcall	i1_do_I2C_SEND_STOP
 19699                           
 19700                           ;i2c_master.c: 347: }
 19701  157D  0008               	return
 19702  157E                     i1l7986:	
 19703  157E  0021               	movlb	1	; select bank1
 19704  157F  0861               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 19705  1580  00F1               	movwf	??i1_do_I2C_TX
 19706  1581  0871               	movf	??i1_do_I2C_TX,w
 19707  1582  00F9               	movwf	i1returnStop@p
 19708  1583  3011               	movlw	17
 19709  1584  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 19710  1585  0086               	movwf	6
 19711  1586  0187               	clrf	7
 19712  1587  3F41               	moviw [1]fsr1
 19713  1588  008A               	movwf	10
 19714  1589  3F40               	moviw [0]fsr1
 19715  158A  000A               	callw
 19716  158B  3195               	pagesel	$
 19717                           
 19718                           ; Switch size 1, requested type "space"
 19719                           ; Number of cases is 4, Range of values is 1 to 4
 19720                           ; switch strategies available:
 19721                           ; Name         Instructions Cycles
 19722                           ; simple_byte           13     7 (average)
 19723                           ; direct_byte           17     9 (fixed)
 19724                           ; jumptable            263     9 (fixed)
 19725                           ;	Chosen strategy is simple_byte
 19726  158C  3A01               	xorlw	1	; case 1
 19727  158D  1903               	skipnz
 19728  158E  2D7B               	goto	i1l7980
 19729  158F  3A03               	xorlw	3	; case 2
 19730  1590  1903               	skipnz
 19731  1591  2D75               	goto	i1l7972
 19732  1592  3A01               	xorlw	1	; case 3
 19733  1593  1903               	skipnz
 19734  1594  2D78               	goto	i1l7976
 19735  1595  3A07               	xorlw	7	; case 4
 19736  1596  1903               	skipnz
 19737  1597  2D7B               	goto	i1l7980
 19738  1598  2D7B               	goto	i1l7980
 19739                           
 19740                           ;i2c_master.c: 348: }
 19741  1599  0008               	return
 19742  159A                     i1l298:	
 19743                           
 19744                           ;i2c_master.c: 349: else
 19745                           ;i2c_master.c: 350: {
 19746                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 19747  159A  0021               	movlb	1	; select bank1
 19748  159B  11C7               	bcf	_i2c_status^(0+128),3
 19749                           
 19750                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 19751  159C  3002               	movlw	2
 19752  159D  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 19753  159E  0086               	movwf	6
 19754  159F  0187               	clrf	7
 19755  15A0  3F40               	moviw [0]fsr1
 19756  15A1  0084               	movwf	4
 19757  15A2  0185               	clrf	5
 19758  15A3  0A81               	incf	1,f
 19759  15A4  0800               	movf	0,w
 19760  15A5  319D  256F  3195   	fcall	i1_i2c1_driver_TXData
 19761                           
 19762                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 19763  15A8  3001               	movlw	1
 19764  15A9  0021               	movlb	1	; select bank1
 19765  15AA  02CA               	subwf	(_i2c_status^(0+128)+3),f
 19766  15AB  3000               	movlw	0
 19767  15AC  3BCB               	subwfb	((_i2c_status+1)^(0+128)+3),f
 19768  15AD  084A               	movf	(_i2c_status^(0+128)+3),w
 19769  15AE  044B               	iorwf	((_i2c_status+1)^(0+128)+3),w
 19770  15AF  1D03               	btfss	3,2
 19771  15B0  2DB3               	goto	i1l7994
 19772  15B1  3006               	movlw	6
 19773  15B2  2DB4               	goto	L7
 19774  15B3                     i1l7994:	
 19775  15B3  3003               	movlw	3
 19776  15B4                     L7:	
 19777  15B4  00F2               	movwf	i1_do_I2C_TX$723
 19778  15B5  3000               	movlw	0
 19779  15B6  00F3               	movwf	i1_do_I2C_TX$723+1
 19780  15B7  0872               	movf	i1_do_I2C_TX$723,w
 19781  15B8  0008               	return
 19782  15B9                     __end_ofi1_do_I2C_TX:	
 19783                           
 19784                           	psect	text105
 19785  110B                     __ptext105:	
 19786 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 19787 ;; Defined at:
 19788 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 19789 ;; Parameters:    Size  Location     Type
 19790 ;;		None
 19791 ;; Auto vars:     Size  Location     Type
 19792 ;;		None
 19793 ;; Return value:  Size  Location     Type
 19794 ;;                  1    wreg      enum E15307
 19795 ;; Registers used:
 19796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19797 ;; Tracked objects:
 19798 ;;		On entry : 0/0
 19799 ;;		On exit  : 0/0
 19800 ;;		Unchanged: 0/0
 19801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19804 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19806 ;;Total ram usage:        1 bytes
 19807 ;; Hardware stack levels used:    1
 19808 ;; Hardware stack levels required when called:    3
 19809 ;; This function calls:
 19810 ;;		Absolute function
 19811 ;;		i1_do_I2C_SEND_RESTART
 19812 ;;		i1_do_I2C_SEND_STOP
 19813 ;;		i1_i2c_restartWrite
 19814 ;;		i1_rd1RegCompleteHandler
 19815 ;;		i1_rd2RegCompleteHandler
 19816 ;;		i1_rdBlkRegCompleteHandler
 19817 ;;		i1_returnReset
 19818 ;;		i1_returnStop
 19819 ;;		i1_wr1RegCompleteHandler
 19820 ;;		i1_wr2RegCompleteHandler
 19821 ;; This function is called by:
 19822 ;; This function uses a non-reentrant model
 19823 ;;
 19824                           
 19825                           
 19826                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 19827  110B                     i1_do_I2C_DO_ADDRESS_NACK:	
 19828  110B                     i1l7952:	
 19829                           ;incstack = 0
 19830 ;; hardware stack exceeded
 19831                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19832                           
 19833                           
 19834                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 19835  110B  0021               	movlb	1	; select bank1
 19836  110C  11C7               	bcf	_i2c_status^(0+128),3
 19837                           
 19838                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 19839  110D  3002               	movlw	2
 19840  110E  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 19841  110F  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 19842  1110  00D1               	movwf	(_i2c_status^(0+128)+10)
 19843                           
 19844                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 19845  1111  2918               	goto	i1l7966
 19846  1112                     i1l7956:	
 19847                           ;i2c_master.c: 324: {
 19848                           ;i2c_master.c: 325: case i2c_restart_read:
 19849                           
 19850                           
 19851                           ;i2c_master.c: 326: case i2c_restart_write:
 19852                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 19853  1112  319D  254F         	fcall	i1_do_I2C_SEND_RESTART
 19854  1114  0008               	return
 19855  1115                     i1l7960:	
 19856                           ;i2c_master.c: 328: default:
 19857                           
 19858                           
 19859                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 19860  1115  319D  2553         	fcall	i1_do_I2C_SEND_STOP
 19861                           
 19862                           ;i2c_master.c: 330: }
 19863  1117  0008               	return
 19864  1118                     i1l7966:	
 19865  1118  0021               	movlb	1	; select bank1
 19866  1119  0860               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 19867  111A  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 19868  111B  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 19869  111C  00F9               	movwf	i1returnStop@p
 19870  111D  300F               	movlw	15
 19871  111E  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 19872  111F  0086               	movwf	6
 19873  1120  0187               	clrf	7
 19874  1121  3F41               	moviw [1]fsr1
 19875  1122  008A               	movwf	10
 19876  1123  3F40               	moviw [0]fsr1
 19877  1124  000A               	callw
 19878  1125  3191               	pagesel	$
 19879                           
 19880                           ; Switch size 1, requested type "space"
 19881                           ; Number of cases is 2, Range of values is 2 to 3
 19882                           ; switch strategies available:
 19883                           ; Name         Instructions Cycles
 19884                           ; simple_byte            7     4 (average)
 19885                           ; direct_byte           13     9 (fixed)
 19886                           ; jumptable            263     9 (fixed)
 19887                           ;	Chosen strategy is simple_byte
 19888  1126  3A02               	xorlw	2	; case 2
 19889  1127  1903               	skipnz
 19890  1128  2912               	goto	i1l7956
 19891  1129  3A01               	xorlw	1	; case 3
 19892  112A  1903               	skipnz
 19893  112B  2912               	goto	i1l7956
 19894  112C  2915               	goto	i1l7960
 19895  112D  0008               	return
 19896  112E                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 19897                           
 19898                           	psect	text106
 19899  1D5F                     __ptext106:	
 19900 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 19901 ;; Defined at:
 19902 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 19903 ;; Parameters:    Size  Location     Type
 19904 ;;		None
 19905 ;; Auto vars:     Size  Location     Type
 19906 ;;		None
 19907 ;; Return value:  Size  Location     Type
 19908 ;;                  1    wreg      enum E15307
 19909 ;; Registers used:
 19910 ;;		wreg, status,2, status,0, pclath, cstack
 19911 ;; Tracked objects:
 19912 ;;		On entry : 0/0
 19913 ;;		On exit  : 0/0
 19914 ;;		Unchanged: 0/0
 19915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19920 ;;Total ram usage:        0 bytes
 19921 ;; Hardware stack levels used:    1
 19922 ;; Hardware stack levels required when called:    1
 19923 ;; This function calls:
 19924 ;;		i1_i2c1_driver_sendNACK
 19925 ;; This function is called by:
 19926 ;;		i1_do_I2C_RX
 19927 ;; This function uses a non-reentrant model
 19928 ;;
 19929                           
 19930                           
 19931                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 19932  1D5F                     i1_do_I2C_DO_NACK_RESTART:	
 19933  1D5F                     i1l4502:	
 19934                           ;incstack = 0
 19935 ;; hardware stack exceeded
 19936                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 19937                           
 19938                           
 19939                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 19940  1D5F  319D  2543         	fcall	i1_i2c1_driver_sendNACK
 19941                           
 19942                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 19943  1D61  3009               	movlw	9
 19944  1D62  0008               	return
 19945  1D63                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 19946                           
 19947                           	psect	text107
 19948  1D5B                     __ptext107:	
 19949 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 19950 ;; Defined at:
 19951 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 19952 ;; Parameters:    Size  Location     Type
 19953 ;;		None
 19954 ;; Auto vars:     Size  Location     Type
 19955 ;;		None
 19956 ;; Return value:  Size  Location     Type
 19957 ;;                  1    wreg      enum E15307
 19958 ;; Registers used:
 19959 ;;		wreg, status,2, status,0, pclath, cstack
 19960 ;; Tracked objects:
 19961 ;;		On entry : 0/0
 19962 ;;		On exit  : 0/0
 19963 ;;		Unchanged: 0/0
 19964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19969 ;;Total ram usage:        0 bytes
 19970 ;; Hardware stack levels used:    1
 19971 ;; Hardware stack levels required when called:    1
 19972 ;; This function calls:
 19973 ;;		i1_i2c1_driver_sendNACK
 19974 ;; This function is called by:
 19975 ;;		i1_do_I2C_RX
 19976 ;; This function uses a non-reentrant model
 19977 ;;
 19978                           
 19979                           
 19980                           ;psect for function i1_do_I2C_DO_NACK_STOP
 19981  1D5B                     i1_do_I2C_DO_NACK_STOP:	
 19982  1D5B                     i1l4496:	
 19983                           ;incstack = 0
 19984 ;; hardware stack exceeded
 19985                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 19986                           
 19987                           
 19988                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 19989  1D5B  319D  2543         	fcall	i1_i2c1_driver_sendNACK
 19990                           
 19991                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 19992  1D5D  300A               	movlw	10
 19993  1D5E  0008               	return
 19994  1D5F                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 19995                           
 19996                           	psect	text108
 19997  1D57                     __ptext108:	
 19998 ;; *************** function i1_do_I2C_DO_ACK *****************
 19999 ;; Defined at:
 20000 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 20001 ;; Parameters:    Size  Location     Type
 20002 ;;		None
 20003 ;; Auto vars:     Size  Location     Type
 20004 ;;		None
 20005 ;; Return value:  Size  Location     Type
 20006 ;;                  1    wreg      enum E15307
 20007 ;; Registers used:
 20008 ;;		wreg, status,2, status,0, pclath, cstack
 20009 ;; Tracked objects:
 20010 ;;		On entry : 0/0
 20011 ;;		On exit  : 0/0
 20012 ;;		Unchanged: 0/0
 20013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20018 ;;Total ram usage:        0 bytes
 20019 ;; Hardware stack levels used:    1
 20020 ;; Hardware stack levels required when called:    1
 20021 ;; This function calls:
 20022 ;;		i1_i2c1_driver_sendACK
 20023 ;; This function is called by:
 20024 ;; This function uses a non-reentrant model
 20025 ;;
 20026                           
 20027                           
 20028                           ;psect for function i1_do_I2C_DO_ACK
 20029  1D57                     i1_do_I2C_DO_ACK:	
 20030  1D57                     i1l4822:	
 20031                           ;incstack = 0
 20032                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 20033                           
 20034                           
 20035                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 20036  1D57  319D  253F         	fcall	i1_i2c1_driver_sendACK
 20037                           
 20038                           ;i2c_master.c: 302: return I2C_RCEN;
 20039  1D59  3005               	movlw	5
 20040  1D5A  0008               	return
 20041  1D5B                     __end_ofi1_do_I2C_DO_ACK:	
 20042                           
 20043                           	psect	text109
 20044  1D79                     __ptext109:	
 20045 ;; *************** function i1_do_I2C_RCEN *****************
 20046 ;; Defined at:
 20047 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 20048 ;; Parameters:    Size  Location     Type
 20049 ;;		None
 20050 ;; Auto vars:     Size  Location     Type
 20051 ;;		None
 20052 ;; Return value:  Size  Location     Type
 20053 ;;                  1    wreg      enum E15307
 20054 ;; Registers used:
 20055 ;;		wreg, status,2, status,0, pclath, cstack
 20056 ;; Tracked objects:
 20057 ;;		On entry : 0/0
 20058 ;;		On exit  : 0/0
 20059 ;;		Unchanged: 0/0
 20060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20065 ;;Total ram usage:        0 bytes
 20066 ;; Hardware stack levels used:    1
 20067 ;; Hardware stack levels required when called:    1
 20068 ;; This function calls:
 20069 ;;		i1_i2c1_driver_startRX
 20070 ;; This function is called by:
 20071 ;; This function uses a non-reentrant model
 20072 ;;
 20073                           
 20074                           
 20075                           ;psect for function i1_do_I2C_RCEN
 20076  1D79                     i1_do_I2C_RCEN:	
 20077  1D79                     i1l4814:	
 20078                           ;incstack = 0
 20079                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 20080                           
 20081                           
 20082                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 20083  1D79  0021               	movlb	1	; select bank1
 20084  1D7A  11C7               	bcf	_i2c_status^(0+128),3
 20085                           
 20086                           ;i2c_master.c: 295: i2c1_driver_startRX();
 20087  1D7B  319D  251B         	fcall	i1_i2c1_driver_startRX
 20088                           
 20089                           ;i2c_master.c: 296: return I2C_RX;
 20090  1D7D  3004               	movlw	4
 20091  1D7E  0008               	return
 20092  1D7F                     __end_ofi1_do_I2C_RCEN:	
 20093                           
 20094                           	psect	text110
 20095  1DB0                     __ptext110:	
 20096 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 20097 ;; Defined at:
 20098 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 20099 ;; Parameters:    Size  Location     Type
 20100 ;;		None
 20101 ;; Auto vars:     Size  Location     Type
 20102 ;;		None
 20103 ;; Return value:  Size  Location     Type
 20104 ;;                  1    wreg      enum E15307
 20105 ;; Registers used:
 20106 ;;		wreg, status,2, status,0, pclath, cstack
 20107 ;; Tracked objects:
 20108 ;;		On entry : 0/0
 20109 ;;		On exit  : 0/0
 20110 ;;		Unchanged: 0/0
 20111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20116 ;;Total ram usage:        0 bytes
 20117 ;; Hardware stack levels used:    1
 20118 ;; Hardware stack levels required when called:    1
 20119 ;; This function calls:
 20120 ;;		i1_i2c1_driver_TXData
 20121 ;; This function is called by:
 20122 ;; This function uses a non-reentrant model
 20123 ;;
 20124                           
 20125                           
 20126                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 20127  1DB0                     i1_do_I2C_SEND_ADR_WRITE:	
 20128  1DB0                     i1l4806:	
 20129                           ;incstack = 0
 20130                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20131                           
 20132                           
 20133                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 20134  1DB0  0021               	movlb	1	; select bank1
 20135  1DB1  15C7               	bsf	_i2c_status^(0+128),3
 20136                           
 20137                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 20138  1DB2  3548               	lslf	(_i2c_status^(0+128)+1),w
 20139  1DB3  319D  256F         	fcall	i1_i2c1_driver_TXData
 20140                           
 20141                           ;i2c_master.c: 289: return I2C_TX;
 20142  1DB5  3003               	movlw	3
 20143  1DB6  0008               	return
 20144  1DB7                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 20145                           
 20146                           	psect	text111
 20147  1DC6                     __ptext111:	
 20148 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 20149 ;; Defined at:
 20150 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 20151 ;; Parameters:    Size  Location     Type
 20152 ;;		None
 20153 ;; Auto vars:     Size  Location     Type
 20154 ;;		None
 20155 ;; Return value:  Size  Location     Type
 20156 ;;                  1    wreg      enum E15307
 20157 ;; Registers used:
 20158 ;;		wreg, status,2, status,0, pclath, cstack
 20159 ;; Tracked objects:
 20160 ;;		On entry : 0/0
 20161 ;;		On exit  : 0/0
 20162 ;;		Unchanged: 0/0
 20163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20168 ;;Total ram usage:        0 bytes
 20169 ;; Hardware stack levels used:    1
 20170 ;; Hardware stack levels required when called:    1
 20171 ;; This function calls:
 20172 ;;		i1_i2c1_driver_TXData
 20173 ;; This function is called by:
 20174 ;; This function uses a non-reentrant model
 20175 ;;
 20176                           
 20177                           
 20178                           ;psect for function i1_do_I2C_SEND_ADR_READ
 20179  1DC6                     i1_do_I2C_SEND_ADR_READ:	
 20180  1DC6                     i1l4798:	
 20181                           ;incstack = 0
 20182                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 20183                           
 20184                           
 20185                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 20186  1DC6  0021               	movlb	1	; select bank1
 20187  1DC7  15C7               	bsf	_i2c_status^(0+128),3
 20188                           
 20189                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 20190  1DC8  1403               	setc
 20191  1DC9  0D48               	rlf	(_i2c_status^(0+128)+1),w
 20192  1DCA  319D  256F         	fcall	i1_i2c1_driver_TXData
 20193                           
 20194                           ;i2c_master.c: 282: return I2C_RCEN;
 20195  1DCC  3005               	movlw	5
 20196  1DCD  0008               	return
 20197  1DCE                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 20198                           
 20199                           	psect	text112
 20200  1D53                     __ptext112:	
 20201 ;; *************** function i1_do_I2C_SEND_STOP *****************
 20202 ;; Defined at:
 20203 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 20204 ;; Parameters:    Size  Location     Type
 20205 ;;		None
 20206 ;; Auto vars:     Size  Location     Type
 20207 ;;		None
 20208 ;; Return value:  Size  Location     Type
 20209 ;;                  1    wreg      enum E15307
 20210 ;; Registers used:
 20211 ;;		wreg, status,2, status,0, pclath, cstack
 20212 ;; Tracked objects:
 20213 ;;		On entry : 0/0
 20214 ;;		On exit  : 0/0
 20215 ;;		Unchanged: 0/0
 20216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20221 ;;Total ram usage:        0 bytes
 20222 ;; Hardware stack levels used:    1
 20223 ;; Hardware stack levels required when called:    1
 20224 ;; This function calls:
 20225 ;;		i1_i2c1_driver_stop
 20226 ;; This function is called by:
 20227 ;;		i1_do_I2C_DO_ADDRESS_NACK
 20228 ;;		i1_do_I2C_TX
 20229 ;;		i1_do_I2C_TX_EMPTY
 20230 ;; This function uses a non-reentrant model
 20231 ;;
 20232                           
 20233                           
 20234                           ;psect for function i1_do_I2C_SEND_STOP
 20235  1D53                     i1_do_I2C_SEND_STOP:	
 20236  1D53                     i1l4490:	
 20237                           ;incstack = 0
 20238 ;; hardware stack exceeded
 20239                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 20240                           
 20241                           
 20242                           ;i2c_master.c: 274: i2c1_driver_stop();
 20243  1D53  319D  2518         	fcall	i1_i2c1_driver_stop
 20244                           
 20245                           ;i2c_master.c: 275: return I2C_IDLE;
 20246  1D55  3000               	movlw	0
 20247  1D56  0008               	return
 20248  1D57                     __end_ofi1_do_I2C_SEND_STOP:	
 20249                           
 20250                           	psect	text113
 20251  1D4F                     __ptext113:	
 20252 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 20253 ;; Defined at:
 20254 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 20255 ;; Parameters:    Size  Location     Type
 20256 ;;		None
 20257 ;; Auto vars:     Size  Location     Type
 20258 ;;		None
 20259 ;; Return value:  Size  Location     Type
 20260 ;;                  1    wreg      enum E15307
 20261 ;; Registers used:
 20262 ;;		wreg, status,2, status,0, pclath, cstack
 20263 ;; Tracked objects:
 20264 ;;		On entry : 0/0
 20265 ;;		On exit  : 0/0
 20266 ;;		Unchanged: 0/0
 20267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20272 ;;Total ram usage:        0 bytes
 20273 ;; Hardware stack levels used:    1
 20274 ;; Hardware stack levels required when called:    1
 20275 ;; This function calls:
 20276 ;;		i1_i2c1_driver_restart
 20277 ;; This function is called by:
 20278 ;;		i1_do_I2C_DO_ADDRESS_NACK
 20279 ;;		i1_do_I2C_TX_EMPTY
 20280 ;; This function uses a non-reentrant model
 20281 ;;
 20282                           
 20283                           
 20284                           ;psect for function i1_do_I2C_SEND_RESTART
 20285  1D4F                     i1_do_I2C_SEND_RESTART:	
 20286  1D4F                     i1l4484:	
 20287                           ;incstack = 0
 20288 ;; hardware stack exceeded
 20289                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20290                           
 20291                           
 20292                           ;i2c_master.c: 268: i2c1_driver_restart();
 20293  1D4F  319D  2515         	fcall	i1_i2c1_driver_restart
 20294                           
 20295                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 20296  1D51  3001               	movlw	1
 20297  1D52  0008               	return
 20298  1D53                     __end_ofi1_do_I2C_SEND_RESTART:	
 20299                           
 20300                           	psect	text114
 20301  1D4B                     __ptext114:	
 20302 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 20303 ;; Defined at:
 20304 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 20305 ;; Parameters:    Size  Location     Type
 20306 ;;		None
 20307 ;; Auto vars:     Size  Location     Type
 20308 ;;		None
 20309 ;; Return value:  Size  Location     Type
 20310 ;;                  1    wreg      enum E15307
 20311 ;; Registers used:
 20312 ;;		wreg, status,2, status,0, pclath, cstack
 20313 ;; Tracked objects:
 20314 ;;		On entry : 0/0
 20315 ;;		On exit  : 0/0
 20316 ;;		Unchanged: 0/0
 20317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20322 ;;Total ram usage:        0 bytes
 20323 ;; Hardware stack levels used:    1
 20324 ;; Hardware stack levels required when called:    1
 20325 ;; This function calls:
 20326 ;;		i1_i2c1_driver_restart
 20327 ;; This function is called by:
 20328 ;;		i1_do_I2C_TX
 20329 ;; This function uses a non-reentrant model
 20330 ;;
 20331                           
 20332                           
 20333                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 20334  1D4B                     i1_do_I2C_SEND_RESTART_WRITE:	
 20335  1D4B                     i1l4478:	
 20336                           ;incstack = 0
 20337 ;; hardware stack exceeded
 20338                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20339                           
 20340                           
 20341                           ;i2c_master.c: 262: i2c1_driver_restart();
 20342  1D4B  319D  2515         	fcall	i1_i2c1_driver_restart
 20343                           
 20344                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 20345  1D4D  3002               	movlw	2
 20346  1D4E  0008               	return
 20347  1D4F                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 20348                           
 20349                           	psect	text115
 20350  1D47                     __ptext115:	
 20351 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 20352 ;; Defined at:
 20353 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;		None
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;		None
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  1    wreg      enum E15307
 20360 ;; Registers used:
 20361 ;;		wreg, status,2, status,0, pclath, cstack
 20362 ;; Tracked objects:
 20363 ;;		On entry : 0/0
 20364 ;;		On exit  : 0/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20371 ;;Total ram usage:        0 bytes
 20372 ;; Hardware stack levels used:    1
 20373 ;; Hardware stack levels required when called:    1
 20374 ;; This function calls:
 20375 ;;		i1_i2c1_driver_restart
 20376 ;; This function is called by:
 20377 ;;		i1_do_I2C_TX
 20378 ;; This function uses a non-reentrant model
 20379 ;;
 20380                           
 20381                           
 20382                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 20383  1D47                     i1_do_I2C_SEND_RESTART_READ:	
 20384  1D47                     i1l4472:	
 20385                           ;incstack = 0
 20386 ;; hardware stack exceeded
 20387                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 20388                           
 20389                           
 20390                           ;i2c_master.c: 256: i2c1_driver_restart();
 20391  1D47  319D  2515         	fcall	i1_i2c1_driver_restart
 20392                           
 20393                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 20394  1D49  3001               	movlw	1
 20395  1D4A  0008               	return
 20396  1D4B                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 20397                           
 20398                           	psect	text116
 20399  1D74                     __ptext116:	
 20400 ;; *************** function i1_do_I2C_IDLE *****************
 20401 ;; Defined at:
 20402 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 20403 ;; Parameters:    Size  Location     Type
 20404 ;;		None
 20405 ;; Auto vars:     Size  Location     Type
 20406 ;;		None
 20407 ;; Return value:  Size  Location     Type
 20408 ;;                  1    wreg      enum E15307
 20409 ;; Registers used:
 20410 ;;		wreg, status,2
 20411 ;; Tracked objects:
 20412 ;;		On entry : 0/0
 20413 ;;		On exit  : 0/0
 20414 ;;		Unchanged: 0/0
 20415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20420 ;;Total ram usage:        0 bytes
 20421 ;; Hardware stack levels used:    1
 20422 ;; This function calls:
 20423 ;;		Nothing
 20424 ;; This function is called by:
 20425 ;; This function uses a non-reentrant model
 20426 ;;
 20427                           
 20428                           
 20429                           ;psect for function i1_do_I2C_IDLE
 20430  1D74                     i1_do_I2C_IDLE:	
 20431  1D74                     i1l4790:	
 20432                           ;incstack = 0
 20433                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 20434                           
 20435                           
 20436                           ;i2c_master.c: 249: i2c_status.busy = 0;
 20437  1D74  0021               	movlb	1	; select bank1
 20438  1D75  1047               	bcf	_i2c_status^(0+128),0
 20439                           
 20440                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 20441  1D76  01D1               	clrf	(_i2c_status^(0+128)+10)
 20442                           
 20443                           ;i2c_master.c: 251: return I2C_RESET;
 20444  1D77  300E               	movlw	14
 20445  1D78  0008               	return
 20446  1D79                     __end_ofi1_do_I2C_IDLE:	
 20447                           
 20448                           	psect	text117
 20449  1DA9                     __ptext117:	
 20450 ;; *************** function i1_do_I2C_RESET *****************
 20451 ;; Defined at:
 20452 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 20453 ;; Parameters:    Size  Location     Type
 20454 ;;		None
 20455 ;; Auto vars:     Size  Location     Type
 20456 ;;		None
 20457 ;; Return value:  Size  Location     Type
 20458 ;;                  1    wreg      enum E15307
 20459 ;; Registers used:
 20460 ;;		wreg, status,2, status,0, pclath, cstack
 20461 ;; Tracked objects:
 20462 ;;		On entry : 0/0
 20463 ;;		On exit  : 0/0
 20464 ;;		Unchanged: 0/0
 20465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20470 ;;Total ram usage:        0 bytes
 20471 ;; Hardware stack levels used:    1
 20472 ;; Hardware stack levels required when called:    1
 20473 ;; This function calls:
 20474 ;;		i1_i2c1_driver_resetBus
 20475 ;; This function is called by:
 20476 ;; This function uses a non-reentrant model
 20477 ;;
 20478                           
 20479                           
 20480                           ;psect for function i1_do_I2C_RESET
 20481  1DA9                     i1_do_I2C_RESET:	
 20482  1DA9                     i1l4780:	
 20483                           ;incstack = 0
 20484                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 20485                           
 20486                           
 20487                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 20488  1DA9  319D  2508         	fcall	i1_i2c1_driver_resetBus
 20489                           
 20490                           ;i2c_master.c: 242: i2c_status.busy = 0;
 20491  1DAB  0021               	movlb	1	; select bank1
 20492  1DAC  1047               	bcf	_i2c_status^(0+128),0
 20493                           
 20494                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 20495  1DAD  01D1               	clrf	(_i2c_status^(0+128)+10)
 20496                           
 20497                           ;i2c_master.c: 244: return I2C_RESET;
 20498  1DAE  300E               	movlw	14
 20499  1DAF  0008               	return
 20500  1DB0                     __end_ofi1_do_I2C_RESET:	
 20501                           
 20502                           	psect	text118
 20503  119D                     __ptext118:	
 20504 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 20505 ;; Defined at:
 20506 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 20507 ;; Parameters:    Size  Location     Type
 20508 ;;		None
 20509 ;; Auto vars:     Size  Location     Type
 20510 ;;		None
 20511 ;; Return value:  Size  Location     Type
 20512 ;;                  1    wreg      enum E15307
 20513 ;; Registers used:
 20514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20515 ;; Tracked objects:
 20516 ;;		On entry : 0/0
 20517 ;;		On exit  : 0/0
 20518 ;;		Unchanged: 0/0
 20519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20524 ;;Total ram usage:        1 bytes
 20525 ;; Hardware stack levels used:    1
 20526 ;; Hardware stack levels required when called:    3
 20527 ;; This function calls:
 20528 ;;		Absolute function
 20529 ;;		i1_do_I2C_SEND_RESTART
 20530 ;;		i1_do_I2C_SEND_STOP
 20531 ;;		i1_i2c_restartWrite
 20532 ;;		i1_mssp1_setIRQ
 20533 ;;		i1_rd1RegCompleteHandler
 20534 ;;		i1_rd2RegCompleteHandler
 20535 ;;		i1_rdBlkRegCompleteHandler
 20536 ;;		i1_returnReset
 20537 ;;		i1_returnStop
 20538 ;;		i1_wr1RegCompleteHandler
 20539 ;;		i1_wr2RegCompleteHandler
 20540 ;; This function is called by:
 20541 ;; This function uses a non-reentrant model
 20542 ;;
 20543                           
 20544                           
 20545                           ;psect for function i1_do_I2C_TX_EMPTY
 20546  119D                     i1_do_I2C_TX_EMPTY:	
 20547  119D                     i1l8024:	
 20548                           ;incstack = 0
 20549 ;; hardware stack exceeded
 20550                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20551                           
 20552                           
 20553                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 20554  119D  0021               	movlb	1	; select bank1
 20555  119E  1547               	bsf	_i2c_status^(0+128),2
 20556                           
 20557                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 20558  119F  29AA               	goto	i1l8042
 20559  11A0                     i1l8026:	
 20560                           ;i2c_master.c: 386: {
 20561                           ;i2c_master.c: 387: case i2c_restart_read:
 20562                           
 20563                           
 20564                           ;i2c_master.c: 388: case i2c_restart_write:
 20565                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 20566  11A0  319D  254F         	fcall	i1_do_I2C_SEND_RESTART
 20567  11A2  0008               	return
 20568  11A3                     i1l8030:	
 20569                           ;i2c_master.c: 390: case i2c_continue:
 20570                           
 20571                           
 20572                           ;i2c_master.c: 391: mssp1_setIRQ();
 20573  11A3  319D  2521         	fcall	i1_mssp1_setIRQ
 20574                           
 20575                           ;i2c_master.c: 392: return I2C_TX;
 20576  11A5  3003               	movlw	3
 20577  11A6  0008               	return
 20578  11A7                     i1l8036:	
 20579                           ;i2c_master.c: 394: case i2c_stop:
 20580                           
 20581                           ;i2c_master.c: 393: default:
 20582                           
 20583                           
 20584                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 20585  11A7  319D  2553         	fcall	i1_do_I2C_SEND_STOP
 20586                           
 20587                           ;i2c_master.c: 396: }
 20588  11A9  0008               	return
 20589  11AA                     i1l8042:	
 20590  11AA  0021               	movlb	1	; select bank1
 20591  11AB  085E               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 20592  11AC  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 20593  11AD  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 20594  11AE  00F9               	movwf	i1returnStop@p
 20595  11AF  300B               	movlw	11
 20596  11B0  3EC7               	addlw	(low (_i2c_status| 0))& (0+255)
 20597  11B1  0086               	movwf	6
 20598  11B2  0187               	clrf	7
 20599  11B3  3F41               	moviw [1]fsr1
 20600  11B4  008A               	movwf	10
 20601  11B5  3F40               	moviw [0]fsr1
 20602  11B6  000A               	callw
 20603  11B7  3191               	pagesel	$
 20604                           
 20605                           ; Switch size 1, requested type "space"
 20606                           ; Number of cases is 4, Range of values is 1 to 4
 20607                           ; switch strategies available:
 20608                           ; Name         Instructions Cycles
 20609                           ; simple_byte           13     7 (average)
 20610                           ; direct_byte           17     9 (fixed)
 20611                           ; jumptable            263     9 (fixed)
 20612                           ;	Chosen strategy is simple_byte
 20613  11B8  3A01               	xorlw	1	; case 1
 20614  11B9  1903               	skipnz
 20615  11BA  29A7               	goto	i1l8036
 20616  11BB  3A03               	xorlw	3	; case 2
 20617  11BC  1903               	skipnz
 20618  11BD  29A0               	goto	i1l8026
 20619  11BE  3A01               	xorlw	1	; case 3
 20620  11BF  1903               	skipnz
 20621  11C0  29A0               	goto	i1l8026
 20622  11C1  3A07               	xorlw	7	; case 4
 20623  11C2  1903               	skipnz
 20624  11C3  29A3               	goto	i1l8030
 20625  11C4  29A7               	goto	i1l8036
 20626  11C5  0008               	return
 20627  11C6                     __end_ofi1_do_I2C_TX_EMPTY:	
 20628                           
 20629                           	psect	text119
 20630  1D21                     __ptext119:	
 20631 ;; *************** function i1_mssp1_setIRQ *****************
 20632 ;; Defined at:
 20633 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 20634 ;; Parameters:    Size  Location     Type
 20635 ;;		None
 20636 ;; Auto vars:     Size  Location     Type
 20637 ;;		None
 20638 ;; Return value:  Size  Location     Type
 20639 ;;                  1    wreg      void 
 20640 ;; Registers used:
 20641 ;;		None
 20642 ;; Tracked objects:
 20643 ;;		On entry : 0/0
 20644 ;;		On exit  : 0/0
 20645 ;;		Unchanged: 0/0
 20646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20651 ;;Total ram usage:        0 bytes
 20652 ;; Hardware stack levels used:    1
 20653 ;; This function calls:
 20654 ;;		Nothing
 20655 ;; This function is called by:
 20656 ;;		i1_do_I2C_TX_EMPTY
 20657 ;; This function uses a non-reentrant model
 20658 ;;
 20659                           
 20660                           
 20661                           ;psect for function i1_mssp1_setIRQ
 20662  1D21                     i1_mssp1_setIRQ:	
 20663                           
 20664                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 20665                           
 20666                           ;incstack = 0
 20667                           ; Regs used in i1_mssp1_setIRQ: []
 20668  1D21  002E               	movlb	14	; select bank14
 20669  1D22  140F               	bsf	15,0	;volatile
 20670  1D23  0008               	return
 20671  1D24                     __end_ofi1_mssp1_setIRQ:	
 20672                           
 20673                           	psect	text120
 20674  1DBE                     __ptext120:	
 20675 ;; *************** function i1_i2c1_driver_isNACK *****************
 20676 ;; Defined at:
 20677 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 20678 ;; Parameters:    Size  Location     Type
 20679 ;;		None
 20680 ;; Auto vars:     Size  Location     Type
 20681 ;;		None
 20682 ;; Return value:  Size  Location     Type
 20683 ;;		None               void
 20684 ;; Registers used:
 20685 ;;		wreg, status,2, status,0
 20686 ;; Tracked objects:
 20687 ;;		On entry : 0/0
 20688 ;;		On exit  : 0/0
 20689 ;;		Unchanged: 0/0
 20690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20694 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20695 ;;Total ram usage:        1 bytes
 20696 ;; Hardware stack levels used:    1
 20697 ;; This function calls:
 20698 ;;		Nothing
 20699 ;; This function is called by:
 20700 ;;		i1_do_I2C_TX
 20701 ;;		i1_i2c_ISR
 20702 ;; This function uses a non-reentrant model
 20703 ;;
 20704                           
 20705                           
 20706                           ;psect for function i1_i2c1_driver_isNACK
 20707  1DBE                     i1_i2c1_driver_isNACK:	
 20708                           
 20709                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT;
 20710                           
 20711                           ;incstack = 0
 20712                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 20713  1DBE  0023               	movlb	3	; select bank3
 20714  1DBF  0E11               	swapf	17,w	;volatile
 20715  1DC0  0C89               	rrf	9,f
 20716  1DC1  0C89               	rrf	9,f
 20717  1DC2  3901               	andlw	1
 20718  1DC3  00F0               	movwf	??i1_i2c1_driver_isNACK
 20719  1DC4  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 20720  1DC5  0008               	return
 20721  1DC6                     __end_ofi1_i2c1_driver_isNACK:	
 20722                           
 20723                           	psect	text121
 20724  1D6F                     __ptext121:	
 20725 ;; *************** function i1_i2c1_driver_TXData *****************
 20726 ;; Defined at:
 20727 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 20728 ;; Parameters:    Size  Location     Type
 20729 ;;  d               1    wreg     unsigned char 
 20730 ;; Auto vars:     Size  Location     Type
 20731 ;;  d               1    0[COMMON] unsigned char 
 20732 ;; Return value:  Size  Location     Type
 20733 ;;                  1    wreg      void 
 20734 ;; Registers used:
 20735 ;;		wreg
 20736 ;; Tracked objects:
 20737 ;;		On entry : 0/0
 20738 ;;		On exit  : 0/0
 20739 ;;		Unchanged: 0/0
 20740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20745 ;;Total ram usage:        1 bytes
 20746 ;; Hardware stack levels used:    1
 20747 ;; This function calls:
 20748 ;;		Nothing
 20749 ;; This function is called by:
 20750 ;;		i1_do_I2C_SEND_ADR_READ
 20751 ;;		i1_do_I2C_SEND_ADR_WRITE
 20752 ;;		i1_do_I2C_TX
 20753 ;; This function uses a non-reentrant model
 20754 ;;
 20755                           
 20756                           
 20757                           ;psect for function i1_i2c1_driver_TXData
 20758  1D6F                     i1_i2c1_driver_TXData:	
 20759                           
 20760                           ;incstack = 0
 20761                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 20762                           ;i1i2c1_driver_TXData@d stored from wreg
 20763  1D6F  00F0               	movwf	i1i2c1_driver_TXData@d
 20764                           
 20765                           ;i2c1_driver.c: 188: SSP1BUF = d;
 20766  1D70  0870               	movf	i1i2c1_driver_TXData@d,w
 20767  1D71  0023               	movlb	3	; select bank3
 20768  1D72  008C               	movwf	12	;volatile
 20769  1D73  0008               	return
 20770  1D74                     __end_ofi1_i2c1_driver_TXData:	
 20771                           
 20772                           	psect	text122
 20773  1D1E                     __ptext122:	
 20774 ;; *************** function i1_i2c1_driver_getRXData *****************
 20775 ;; Defined at:
 20776 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 20777 ;; Parameters:    Size  Location     Type
 20778 ;;		None
 20779 ;; Auto vars:     Size  Location     Type
 20780 ;;		None
 20781 ;; Return value:  Size  Location     Type
 20782 ;;                  1    wreg      unsigned char 
 20783 ;; Registers used:
 20784 ;;		wreg
 20785 ;; Tracked objects:
 20786 ;;		On entry : 0/0
 20787 ;;		On exit  : 0/0
 20788 ;;		Unchanged: 0/0
 20789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20794 ;;Total ram usage:        0 bytes
 20795 ;; Hardware stack levels used:    1
 20796 ;; This function calls:
 20797 ;;		Nothing
 20798 ;; This function is called by:
 20799 ;;		i1_do_I2C_RX
 20800 ;; This function uses a non-reentrant model
 20801 ;;
 20802                           
 20803                           
 20804                           ;psect for function i1_i2c1_driver_getRXData
 20805  1D1E                     i1_i2c1_driver_getRXData:	
 20806                           
 20807                           ;i2c1_driver.c: 173: return SSP1BUF;
 20808                           
 20809                           ;incstack = 0
 20810                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 20811  1D1E  0023               	movlb	3	; select bank3
 20812  1D1F  080C               	movf	12,w	;volatile
 20813  1D20  0008               	return
 20814  1D21                     __end_ofi1_i2c1_driver_getRXData:	
 20815                           
 20816                           	psect	text123
 20817  1D43                     __ptext123:	
 20818 ;; *************** function i1_i2c1_driver_sendNACK *****************
 20819 ;; Defined at:
 20820 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 20821 ;; Parameters:    Size  Location     Type
 20822 ;;		None
 20823 ;; Auto vars:     Size  Location     Type
 20824 ;;		None
 20825 ;; Return value:  Size  Location     Type
 20826 ;;                  1    wreg      void 
 20827 ;; Registers used:
 20828 ;;		None
 20829 ;; Tracked objects:
 20830 ;;		On entry : 0/0
 20831 ;;		On exit  : 0/0
 20832 ;;		Unchanged: 0/0
 20833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20838 ;;Total ram usage:        0 bytes
 20839 ;; Hardware stack levels used:    1
 20840 ;; This function calls:
 20841 ;;		Nothing
 20842 ;; This function is called by:
 20843 ;;		i1_do_I2C_DO_NACK_STOP
 20844 ;;		i1_do_I2C_DO_NACK_RESTART
 20845 ;; This function uses a non-reentrant model
 20846 ;;
 20847                           
 20848                           
 20849                           ;psect for function i1_i2c1_driver_sendNACK
 20850  1D43                     i1_i2c1_driver_sendNACK:	
 20851                           
 20852                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 20853                           
 20854                           ;incstack = 0
 20855 ;; hardware stack exceeded
 20856                           ; Regs used in i1_i2c1_driver_sendNACK: []
 20857  1D43  0023               	movlb	3	; select bank3
 20858  1D44  1691               	bsf	17,5	;volatile
 20859                           
 20860                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 20861  1D45  1611               	bsf	17,4	;volatile
 20862  1D46  0008               	return
 20863  1D47                     __end_ofi1_i2c1_driver_sendNACK:	
 20864                           
 20865                           	psect	text124
 20866  1D08                     __ptext124:	
 20867 ;; *************** function i1_i2c1_driver_resetBus *****************
 20868 ;; Defined at:
 20869 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 20870 ;; Parameters:    Size  Location     Type
 20871 ;;		None
 20872 ;; Auto vars:     Size  Location     Type
 20873 ;;		None
 20874 ;; Return value:  Size  Location     Type
 20875 ;;                  1    wreg      void 
 20876 ;; Registers used:
 20877 ;;		None
 20878 ;; Tracked objects:
 20879 ;;		On entry : 0/0
 20880 ;;		On exit  : 0/0
 20881 ;;		Unchanged: 0/0
 20882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20887 ;;Total ram usage:        0 bytes
 20888 ;; Hardware stack levels used:    1
 20889 ;; This function calls:
 20890 ;;		Nothing
 20891 ;; This function is called by:
 20892 ;;		i1_do_I2C_RESET
 20893 ;; This function uses a non-reentrant model
 20894 ;;
 20895                           
 20896                           
 20897                           ;psect for function i1_i2c1_driver_resetBus
 20898  1D08                     i1_i2c1_driver_resetBus:	
 20899                           
 20900                           ;incstack = 0
 20901                           ; Regs used in i1_i2c1_driver_resetBus: []
 20902  1D08  0008               	return
 20903  1D09                     __end_ofi1_i2c1_driver_resetBus:	
 20904                           
 20905                           	psect	text125
 20906  1D1B                     __ptext125:	
 20907 ;; *************** function i1_i2c1_driver_startRX *****************
 20908 ;; Defined at:
 20909 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 20910 ;; Parameters:    Size  Location     Type
 20911 ;;		None
 20912 ;; Auto vars:     Size  Location     Type
 20913 ;;		None
 20914 ;; Return value:  Size  Location     Type
 20915 ;;                  1    wreg      void 
 20916 ;; Registers used:
 20917 ;;		None
 20918 ;; Tracked objects:
 20919 ;;		On entry : 0/0
 20920 ;;		On exit  : 0/0
 20921 ;;		Unchanged: 0/0
 20922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20927 ;;Total ram usage:        0 bytes
 20928 ;; Hardware stack levels used:    1
 20929 ;; This function calls:
 20930 ;;		Nothing
 20931 ;; This function is called by:
 20932 ;;		i1_do_I2C_RCEN
 20933 ;; This function uses a non-reentrant model
 20934 ;;
 20935                           
 20936                           
 20937                           ;psect for function i1_i2c1_driver_startRX
 20938  1D1B                     i1_i2c1_driver_startRX:	
 20939                           
 20940                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 20941                           
 20942                           ;incstack = 0
 20943                           ; Regs used in i1_i2c1_driver_startRX: []
 20944  1D1B  0023               	movlb	3	; select bank3
 20945  1D1C  1591               	bsf	17,3	;volatile
 20946  1D1D  0008               	return
 20947  1D1E                     __end_ofi1_i2c1_driver_startRX:	
 20948                           
 20949                           	psect	text126
 20950  1FE9                     __ptext126:	
 20951 ;; *************** function i1_rdBlkRegCompleteHandler *****************
 20952 ;; Defined at:
 20953 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20954 ;; Parameters:    Size  Location     Type
 20955 ;;  p               1    9[COMMON] PTR void 
 20956 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20957 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20958 ;; Auto vars:     Size  Location     Type
 20959 ;;		None
 20960 ;; Return value:  Size  Location     Type
 20961 ;;                  1    wreg      enum E97
 20962 ;; Registers used:
 20963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20964 ;; Tracked objects:
 20965 ;;		On entry : 0/0
 20966 ;;		On exit  : 0/0
 20967 ;;		Unchanged: 0/0
 20968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20969 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20973 ;;Total ram usage:        1 bytes
 20974 ;; Hardware stack levels used:    1
 20975 ;; Hardware stack levels required when called:    2
 20976 ;; This function calls:
 20977 ;;		i1_i2c_setBuffer
 20978 ;;		i1_i2c_setDataCompleteCallback
 20979 ;; This function is called by:
 20980 ;; This function uses a non-reentrant model
 20981 ;;
 20982                           
 20983                           
 20984                           ;psect for function i1_rdBlkRegCompleteHandler
 20985  1FE9                     i1_rdBlkRegCompleteHandler:	
 20986  1FE9                     i1l4552:	
 20987                           ;incstack = 0
 20988 ;; hardware stack exceeded
 20989                           ; Regs used in i1_rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 20990                           
 20991                           
 20992                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 20993  1FE9  0879               	movf	i1rdBlkRegCompleteHandler@p,w
 20994  1FEA  0086               	movwf	6
 20995  1FEB  0187               	clrf	7
 20996  1FEC  3F40               	moviw [0]fsr1
 20997  1FED  00F0               	movwf	i1i2c_setBuffer@bufferSize
 20998  1FEE  3F41               	moviw [1]fsr1
 20999  1FEF  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 21000  1FF0  0879               	movf	i1rdBlkRegCompleteHandler@p,w
 21001  1FF1  3E02               	addlw	2
 21002  1FF2  0086               	movwf	6
 21003  1FF3  0187               	clrf	7
 21004  1FF4  0801               	movf	1,w
 21005  1FF5  319E  26EB  319F   	fcall	i1_i2c_setBuffer
 21006                           
 21007                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 21008  1FF8  3000               	movlw	0
 21009  1FF9  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 21010  1FFA  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 21011  1FFB  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 21012  1FFC  319E  2689         	fcall	i1_i2c_setDataCompleteCallback
 21013                           
 21014                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 21015  1FFE  3002               	movlw	2
 21016  1FFF  0008               	return
 21017  2000                     __end_ofi1_rdBlkRegCompleteHandler:	
 21018                           
 21019                           	psect	text127
 21020  1F47                     __ptext127:	
 21021 ;; *************** function i1_rd2RegCompleteHandler *****************
 21022 ;; Defined at:
 21023 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21024 ;; Parameters:    Size  Location     Type
 21025 ;;  p               1    9[COMMON] PTR void 
 21026 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21027 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21028 ;; Auto vars:     Size  Location     Type
 21029 ;;		None
 21030 ;; Return value:  Size  Location     Type
 21031 ;;                  1    wreg      enum E97
 21032 ;; Registers used:
 21033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21034 ;; Tracked objects:
 21035 ;;		On entry : 0/0
 21036 ;;		On exit  : 0/0
 21037 ;;		Unchanged: 0/0
 21038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21039 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21042 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21043 ;;Total ram usage:        1 bytes
 21044 ;; Hardware stack levels used:    1
 21045 ;; Hardware stack levels required when called:    2
 21046 ;; This function calls:
 21047 ;;		i1_i2c_setBuffer
 21048 ;;		i1_i2c_setDataCompleteCallback
 21049 ;; This function is called by:
 21050 ;; This function uses a non-reentrant model
 21051 ;;
 21052                           
 21053                           
 21054                           ;psect for function i1_rd2RegCompleteHandler
 21055  1F47                     i1_rd2RegCompleteHandler:	
 21056  1F47                     i1l4536:	
 21057                           ;incstack = 0
 21058 ;; hardware stack exceeded
 21059                           ; Regs used in i1_rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 21060                           
 21061                           
 21062                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 21063  1F47  3002               	movlw	2
 21064  1F48  00F0               	movwf	i1i2c_setBuffer@bufferSize
 21065  1F49  3000               	movlw	0
 21066  1F4A  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 21067  1F4B  0879               	movf	i1rd2RegCompleteHandler@p,w
 21068  1F4C  319E  26EB  319F   	fcall	i1_i2c_setBuffer
 21069                           
 21070                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 21071  1F4F  3000               	movlw	0
 21072  1F50  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 21073  1F51  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 21074  1F52  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 21075  1F53  319E  2689         	fcall	i1_i2c_setDataCompleteCallback
 21076                           
 21077                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 21078  1F55  3002               	movlw	2
 21079  1F56  0008               	return
 21080  1F57                     __end_ofi1_rd2RegCompleteHandler:	
 21081                           
 21082                           	psect	text128
 21083  1F37                     __ptext128:	
 21084 ;; *************** function i1_rd1RegCompleteHandler *****************
 21085 ;; Defined at:
 21086 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21087 ;; Parameters:    Size  Location     Type
 21088 ;;  p               1    9[COMMON] PTR void 
 21089 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21090 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21091 ;; Auto vars:     Size  Location     Type
 21092 ;;		None
 21093 ;; Return value:  Size  Location     Type
 21094 ;;                  1    wreg      enum E97
 21095 ;; Registers used:
 21096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21097 ;; Tracked objects:
 21098 ;;		On entry : 0/0
 21099 ;;		On exit  : 0/0
 21100 ;;		Unchanged: 0/0
 21101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21102 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21106 ;;Total ram usage:        1 bytes
 21107 ;; Hardware stack levels used:    1
 21108 ;; Hardware stack levels required when called:    2
 21109 ;; This function calls:
 21110 ;;		i1_i2c_setBuffer
 21111 ;;		i1_i2c_setDataCompleteCallback
 21112 ;; This function is called by:
 21113 ;; This function uses a non-reentrant model
 21114 ;;
 21115                           
 21116                           
 21117                           ;psect for function i1_rd1RegCompleteHandler
 21118  1F37                     i1_rd1RegCompleteHandler:	
 21119  1F37                     i1l4528:	
 21120                           ;incstack = 0
 21121 ;; hardware stack exceeded
 21122                           ; Regs used in i1_rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 21123                           
 21124                           
 21125                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 21126  1F37  3001               	movlw	1
 21127  1F38  00F0               	movwf	i1i2c_setBuffer@bufferSize
 21128  1F39  3000               	movlw	0
 21129  1F3A  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 21130  1F3B  0879               	movf	i1rd1RegCompleteHandler@p,w
 21131  1F3C  319E  26EB  319F   	fcall	i1_i2c_setBuffer
 21132                           
 21133                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 21134  1F3F  3000               	movlw	0
 21135  1F40  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 21136  1F41  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 21137  1F42  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 21138  1F43  319E  2689         	fcall	i1_i2c_setDataCompleteCallback
 21139                           
 21140                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 21141  1F45  3002               	movlw	2
 21142  1F46  0008               	return
 21143  1F47                     __end_ofi1_rd1RegCompleteHandler:	
 21144                           
 21145                           	psect	text129
 21146  1F27                     __ptext129:	
 21147 ;; *************** function i1_wr1RegCompleteHandler *****************
 21148 ;; Defined at:
 21149 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21150 ;; Parameters:    Size  Location     Type
 21151 ;;  p               1    9[COMMON] PTR void 
 21152 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21153 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21154 ;; Auto vars:     Size  Location     Type
 21155 ;;		None
 21156 ;; Return value:  Size  Location     Type
 21157 ;;                  1    wreg      enum E97
 21158 ;; Registers used:
 21159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21160 ;; Tracked objects:
 21161 ;;		On entry : 0/0
 21162 ;;		On exit  : 0/0
 21163 ;;		Unchanged: 0/0
 21164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21165 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21169 ;;Total ram usage:        1 bytes
 21170 ;; Hardware stack levels used:    1
 21171 ;; Hardware stack levels required when called:    2
 21172 ;; This function calls:
 21173 ;;		i1_i2c_setBuffer
 21174 ;;		i1_i2c_setDataCompleteCallback
 21175 ;; This function is called by:
 21176 ;; This function uses a non-reentrant model
 21177 ;;
 21178                           
 21179                           
 21180                           ;psect for function i1_wr1RegCompleteHandler
 21181  1F27                     i1_wr1RegCompleteHandler:	
 21182  1F27                     i1l4520:	
 21183                           ;incstack = 0
 21184 ;; hardware stack exceeded
 21185                           ; Regs used in i1_wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 21186                           
 21187                           
 21188                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 21189  1F27  3001               	movlw	1
 21190  1F28  00F0               	movwf	i1i2c_setBuffer@bufferSize
 21191  1F29  3000               	movlw	0
 21192  1F2A  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 21193  1F2B  0879               	movf	i1wr1RegCompleteHandler@p,w
 21194  1F2C  319E  26EB  319F   	fcall	i1_i2c_setBuffer
 21195                           
 21196                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 21197  1F2F  3000               	movlw	0
 21198  1F30  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 21199  1F31  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 21200  1F32  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 21201  1F33  319E  2689         	fcall	i1_i2c_setDataCompleteCallback
 21202                           
 21203                           ;i2c_simple_master.c: 35: return i2c_continue;
 21204  1F35  3004               	movlw	4
 21205  1F36  0008               	return
 21206  1F37                     __end_ofi1_wr1RegCompleteHandler:	
 21207                           
 21208                           	psect	text130
 21209  0002                     __ptext130:	
 21210 ;; *************** function i1_i2c_restartWrite *****************
 21211 ;; Defined at:
 21212 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 21213 ;; Parameters:    Size  Location     Type
 21214 ;;  p               1    9[COMMON] PTR void 
 21215 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21216 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21217 ;; Auto vars:     Size  Location     Type
 21218 ;;		None
 21219 ;; Return value:  Size  Location     Type
 21220 ;;                  1    wreg      enum E96
 21221 ;; Registers used:
 21222 ;;		wreg
 21223 ;; Tracked objects:
 21224 ;;		On entry : 0/0
 21225 ;;		On exit  : 0/0
 21226 ;;		Unchanged: 0/0
 21227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21228 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21232 ;;Total ram usage:        1 bytes
 21233 ;; Hardware stack levels used:    1
 21234 ;; This function calls:
 21235 ;;		Nothing
 21236 ;; This function is called by:
 21237 ;; This function uses a non-reentrant model
 21238 ;;
 21239                           
 21240                           
 21241                           ;psect for function i1_i2c_restartWrite
 21242  0002                     i1_i2c_restartWrite:	
 21243  0002                     i1l4516:	
 21244                           ;incstack = 0
 21245                           ; Regs used in i1_i2c_restartWrite: [wreg]
 21246                           
 21247                           
 21248                           ;i2c_types.c: 37: return i2c_restart_write;
 21249  0002  3003               	movlw	3
 21250  0003  0008               	return
 21251  0004                     __end_ofi1_i2c_restartWrite:	
 21252                           
 21253                           	psect	text131
 21254  1D0D                     __ptext131:	
 21255 ;; *************** function i1_returnReset *****************
 21256 ;; Defined at:
 21257 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 21258 ;; Parameters:    Size  Location     Type
 21259 ;;  p               1    9[COMMON] PTR void 
 21260 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21261 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21262 ;; Auto vars:     Size  Location     Type
 21263 ;;		None
 21264 ;; Return value:  Size  Location     Type
 21265 ;;                  1    wreg      enum E15143
 21266 ;; Registers used:
 21267 ;;		wreg
 21268 ;; Tracked objects:
 21269 ;;		On entry : 0/0
 21270 ;;		On exit  : 0/0
 21271 ;;		Unchanged: 0/0
 21272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21273 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21277 ;;Total ram usage:        1 bytes
 21278 ;; Hardware stack levels used:    1
 21279 ;; This function calls:
 21280 ;;		Nothing
 21281 ;; This function is called by:
 21282 ;; This function uses a non-reentrant model
 21283 ;;
 21284                           
 21285                           
 21286                           ;psect for function i1_returnReset
 21287  1D0D                     i1_returnReset:	
 21288  1D0D                     i1l4512:	
 21289                           ;incstack = 0
 21290                           ; Regs used in i1_returnReset: [wreg]
 21291                           
 21292                           
 21293                           ;i2c_master.c: 450: return i2c_reset_link;
 21294  1D0D  3005               	movlw	5
 21295  1D0E  0008               	return
 21296  1D0F                     __end_ofi1_returnReset:	
 21297                           
 21298                           	psect	text132
 21299  1D0B                     __ptext132:	
 21300 ;; *************** function i1_returnStop *****************
 21301 ;; Defined at:
 21302 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 21303 ;; Parameters:    Size  Location     Type
 21304 ;;  p               1    9[COMMON] PTR void 
 21305 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21306 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21307 ;; Auto vars:     Size  Location     Type
 21308 ;;		None
 21309 ;; Return value:  Size  Location     Type
 21310 ;;                  1    wreg      enum E15143
 21311 ;; Registers used:
 21312 ;;		wreg
 21313 ;; Tracked objects:
 21314 ;;		On entry : 0/0
 21315 ;;		On exit  : 0/0
 21316 ;;		Unchanged: 0/0
 21317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21318 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21322 ;;Total ram usage:        1 bytes
 21323 ;; Hardware stack levels used:    1
 21324 ;; This function calls:
 21325 ;;		Nothing
 21326 ;; This function is called by:
 21327 ;;		i1_setCallBack
 21328 ;;		_do_I2C_DO_ADDRESS_NACK
 21329 ;;		_do_I2C_TX
 21330 ;;		_do_I2C_RX
 21331 ;;		_do_I2C_TX_EMPTY
 21332 ;;		i1_do_I2C_DO_ADDRESS_NACK
 21333 ;;		i1_do_I2C_TX
 21334 ;;		i1_do_I2C_RX
 21335 ;;		i1_do_I2C_TX_EMPTY
 21336 ;; This function uses a non-reentrant model
 21337 ;;
 21338                           
 21339                           
 21340                           ;psect for function i1_returnStop
 21341  1D0B                     i1_returnStop:	
 21342  1D0B                     i1l4508:	
 21343                           ;incstack = 0
 21344                           ; Regs used in i1_returnStop: [wreg]
 21345                           
 21346                           
 21347                           ;i2c_master.c: 445: return i2c_stop;
 21348  1D0B  3001               	movlw	1
 21349  1D0C  0008               	return
 21350  1D0D                     __end_ofi1_returnStop:	
 21351                           
 21352                           	psect	text133
 21353  1F17                     __ptext133:	
 21354 ;; *************** function i1_wr2RegCompleteHandler *****************
 21355 ;; Defined at:
 21356 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21357 ;; Parameters:    Size  Location     Type
 21358 ;;  p               1    9[COMMON] PTR void 
 21359 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21360 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21361 ;; Auto vars:     Size  Location     Type
 21362 ;;		None
 21363 ;; Return value:  Size  Location     Type
 21364 ;;                  1    wreg      enum E97
 21365 ;; Registers used:
 21366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21367 ;; Tracked objects:
 21368 ;;		On entry : 0/0
 21369 ;;		On exit  : 0/0
 21370 ;;		Unchanged: 0/0
 21371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21372 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21376 ;;Total ram usage:        1 bytes
 21377 ;; Hardware stack levels used:    1
 21378 ;; Hardware stack levels required when called:    2
 21379 ;; This function calls:
 21380 ;;		i1_i2c_setBuffer
 21381 ;;		i1_i2c_setDataCompleteCallback
 21382 ;; This function is called by:
 21383 ;; This function uses a non-reentrant model
 21384 ;;
 21385                           
 21386                           
 21387                           ;psect for function i1_wr2RegCompleteHandler
 21388  1F17                     i1_wr2RegCompleteHandler:	
 21389  1F17                     i1l4544:	
 21390                           ;incstack = 0
 21391 ;; hardware stack exceeded
 21392                           ; Regs used in i1_wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 21393                           
 21394                           
 21395                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 21396  1F17  3002               	movlw	2
 21397  1F18  00F0               	movwf	i1i2c_setBuffer@bufferSize
 21398  1F19  3000               	movlw	0
 21399  1F1A  00F1               	movwf	i1i2c_setBuffer@bufferSize+1
 21400  1F1B  0879               	movf	i1wr2RegCompleteHandler@p,w
 21401  1F1C  319E  26EB  319F   	fcall	i1_i2c_setBuffer
 21402                           
 21403                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 21404  1F1F  3000               	movlw	0
 21405  1F20  00F5               	movwf	i1i2c_setDataCompleteCallback@cb
 21406  1F21  00F6               	movwf	i1i2c_setDataCompleteCallback@cb+1
 21407  1F22  01F7               	clrf	i1i2c_setDataCompleteCallback@p
 21408  1F23  319E  2689         	fcall	i1_i2c_setDataCompleteCallback
 21409                           
 21410                           ;i2c_simple_master.c: 114: return i2c_continue;
 21411  1F25  3004               	movlw	4
 21412  1F26  0008               	return
 21413  1F27                     __end_ofi1_wr2RegCompleteHandler:	
 21414                           
 21415                           	psect	text134
 21416  1E89                     __ptext134:	
 21417 ;; *************** function i1_i2c_setDataCompleteCallback *****************
 21418 ;; Defined at:
 21419 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 21420 ;; Parameters:    Size  Location     Type
 21421 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 21422 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 21423 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 21424 ;;  p               1    7[COMMON] PTR void 
 21425 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21426 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21427 ;; Auto vars:     Size  Location     Type
 21428 ;;		None
 21429 ;; Return value:  Size  Location     Type
 21430 ;;                  1    wreg      void 
 21431 ;; Registers used:
 21432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21433 ;; Tracked objects:
 21434 ;;		On entry : 0/0
 21435 ;;		On exit  : 0/0
 21436 ;;		Unchanged: 0/0
 21437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21438 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21441 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21442 ;;Total ram usage:        4 bytes
 21443 ;; Hardware stack levels used:    1
 21444 ;; Hardware stack levels required when called:    1
 21445 ;; This function calls:
 21446 ;;		i1_setCallBack
 21447 ;; This function is called by:
 21448 ;;		i1_wr1RegCompleteHandler
 21449 ;;		i1_rd1RegCompleteHandler
 21450 ;;		i1_rd2RegCompleteHandler
 21451 ;;		i1_wr2RegCompleteHandler
 21452 ;;		i1_rdBlkRegCompleteHandler
 21453 ;; This function uses a non-reentrant model
 21454 ;;
 21455                           
 21456                           
 21457                           ;psect for function i1_i2c_setDataCompleteCallback
 21458  1E89                     i1_i2c_setDataCompleteCallback:	
 21459                           
 21460                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 21461                           
 21462                           ;incstack = 0
 21463 ;; hardware stack exceeded
 21464                           ; Regs used in i1_i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 21465  1E89  0876               	movf	i1i2c_setDataCompleteCallback@cb+1,w
 21466  1E8A  00F1               	movwf	i1setCallBack@cb+1
 21467  1E8B  0875               	movf	i1i2c_setDataCompleteCallback@cb,w
 21468  1E8C  00F0               	movwf	i1setCallBack@cb
 21469  1E8D  0877               	movf	i1i2c_setDataCompleteCallback@p,w
 21470  1E8E  00F8               	movwf	??i1_i2c_setDataCompleteCallback
 21471  1E8F  0878               	movf	??i1_i2c_setDataCompleteCallback,w
 21472  1E90  00F2               	movwf	i1setCallBack@p
 21473  1E91  3000               	movlw	0
 21474  1E92  3191  212E         	fcall	i1_setCallBack
 21475  1E94  0008               	return
 21476  1E95                     __end_ofi1_i2c_setDataCompleteCallback:	
 21477                           
 21478                           	psect	text135
 21479  112E                     __ptext135:	
 21480 ;; *************** function i1_setCallBack *****************
 21481 ;; Defined at:
 21482 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 21483 ;; Parameters:    Size  Location     Type
 21484 ;;  idx             1    wreg     enum E15325
 21485 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 21486 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 21487 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 21488 ;;  p               1    2[COMMON] PTR void 
 21489 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21490 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21491 ;; Auto vars:     Size  Location     Type
 21492 ;;  idx             1    4[COMMON] enum E15325
 21493 ;; Return value:  Size  Location     Type
 21494 ;;                  1    wreg      void 
 21495 ;; Registers used:
 21496 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21497 ;; Tracked objects:
 21498 ;;		On entry : 0/0
 21499 ;;		On exit  : 0/0
 21500 ;;		Unchanged: 0/0
 21501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21502 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21505 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21506 ;;Total ram usage:        5 bytes
 21507 ;; Hardware stack levels used:    1
 21508 ;; This function calls:
 21509 ;;		Nothing
 21510 ;; This function is called by:
 21511 ;;		i1_i2c_setDataCompleteCallback
 21512 ;; This function uses a non-reentrant model
 21513 ;;
 21514                           
 21515                           
 21516                           ;psect for function i1_setCallBack
 21517  112E                     i1_setCallBack:	
 21518                           
 21519                           ;incstack = 0
 21520 ;; hardware stack exceeded
 21521                           ; Regs used in i1_setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 21522                           ;i1setCallBack@idx stored from wreg
 21523  112E  00F4               	movwf	i1setCallBack@idx
 21524                           
 21525                           ;i2c_master.c: 455: if(cb)
 21526  112F  0870               	movf	i1setCallBack@cb,w
 21527  1130  0471               	iorwf	i1setCallBack@cb+1,w
 21528  1131  1903               	btfsc	3,2
 21529  1132  2944               	goto	i1l3914
 21530                           
 21531                           ;i2c_master.c: 456: {
 21532                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 21533  1133  3574               	lslf	i1setCallBack@idx,w
 21534  1134  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 21535  1135  0086               	movwf	6
 21536  1136  0187               	clrf	7
 21537  1137  0870               	movf	i1setCallBack@cb,w
 21538  1138  3FC0               	movwi [0]fsr1
 21539  1139  0871               	movf	i1setCallBack@cb+1,w
 21540  113A  3FC1               	movwi [1]fsr1
 21541                           
 21542                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 21543  113B  0872               	movf	i1setCallBack@p,w
 21544  113C  00F3               	movwf	??i1_setCallBack
 21545  113D  0874               	movf	i1setCallBack@idx,w
 21546  113E  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 21547  113F  0086               	movwf	6
 21548  1140  0187               	clrf	7
 21549  1141  0873               	movf	??i1_setCallBack,w
 21550  1142  0081               	movwf	1
 21551                           
 21552                           ;i2c_master.c: 459: }
 21553  1143  0008               	return
 21554  1144                     i1l3914:	
 21555                           
 21556                           ;i2c_master.c: 460: else
 21557                           ;i2c_master.c: 461: {
 21558                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 21559  1144  3574               	lslf	i1setCallBack@idx,w
 21560  1145  3ED2               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 21561  1146  0086               	movwf	6
 21562  1147  0187               	clrf	7
 21563  1148  3085               	movlw	low _returnStop
 21564  1149  3FC0               	movwi [0]fsr1
 21565  114A  301D               	movlw	high _returnStop
 21566  114B  3FC1               	movwi [1]fsr1
 21567                           
 21568                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 21569  114C  0874               	movf	i1setCallBack@idx,w
 21570  114D  3EDE               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 21571  114E  0086               	movwf	6
 21572  114F  0187               	clrf	7
 21573  1150  0181               	clrf	1
 21574  1151  0008               	return
 21575  1152                     __end_ofi1_setCallBack:	
 21576                           
 21577                           	psect	text136
 21578  1EEB                     __ptext136:	
 21579 ;; *************** function i1_i2c_setBuffer *****************
 21580 ;; Defined at:
 21581 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 21582 ;; Parameters:    Size  Location     Type
 21583 ;;  buffer          1    wreg     PTR void 
 21584 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 21585 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 21586 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21587 ;;  bufferSize      2    0[COMMON] unsigned int 
 21588 ;; Auto vars:     Size  Location     Type
 21589 ;;  buffer          1    3[COMMON] PTR void 
 21590 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 21591 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 21592 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21593 ;; Return value:  Size  Location     Type
 21594 ;;                  1    wreg      void 
 21595 ;; Registers used:
 21596 ;;		wreg
 21597 ;; Tracked objects:
 21598 ;;		On entry : 0/0
 21599 ;;		On exit  : 0/0
 21600 ;;		Unchanged: 0/0
 21601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21605 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21606 ;;Total ram usage:        4 bytes
 21607 ;; Hardware stack levels used:    1
 21608 ;; This function calls:
 21609 ;;		Nothing
 21610 ;; This function is called by:
 21611 ;;		i1_wr1RegCompleteHandler
 21612 ;;		i1_rd1RegCompleteHandler
 21613 ;;		i1_rd2RegCompleteHandler
 21614 ;;		i1_wr2RegCompleteHandler
 21615 ;;		i1_rdBlkRegCompleteHandler
 21616 ;; This function uses a non-reentrant model
 21617 ;;
 21618                           
 21619                           
 21620                           ;psect for function i1_i2c_setBuffer
 21621  1EEB                     i1_i2c_setBuffer:	
 21622                           
 21623                           ;incstack = 0
 21624 ;; hardware stack exceeded
 21625                           ; Regs used in i1_i2c_setBuffer: [wreg]
 21626                           ;i1i2c_setBuffer@buffer stored from wreg
 21627  1EEB  00F3               	movwf	i1i2c_setBuffer@buffer
 21628                           
 21629                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 21630  1EEC  0021               	movlb	1	; select bank1
 21631  1EED  1D47               	btfss	_i2c_status^(0+128),2
 21632  1EEE  0008               	return
 21633                           
 21634                           ;i2c_master.c: 187: {
 21635                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 21636  1EEF  0873               	movf	i1i2c_setBuffer@buffer,w
 21637  1EF0  00F2               	movwf	??i1_i2c_setBuffer
 21638  1EF1  0872               	movf	??i1_i2c_setBuffer,w
 21639  1EF2  00C9               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 21640                           
 21641                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 21642  1EF3  0871               	movf	i1i2c_setBuffer@bufferSize+1,w
 21643  1EF4  00CB               	movwf	((_i2c_status+1)^(0+128)+3)
 21644  1EF5  0870               	movf	i1i2c_setBuffer@bufferSize,w
 21645  1EF6  00CA               	movwf	(_i2c_status^(0+128)+3)
 21646                           
 21647                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 21648  1EF7  1147               	bcf	_i2c_status^(0+128),2
 21649  1EF8  0008               	return
 21650  1EF9                     __end_ofi1_i2c_setBuffer:	
 21651                           
 21652                           	psect	text137
 21653  1D18                     __ptext137:	
 21654 ;; *************** function i1_i2c1_driver_stop *****************
 21655 ;; Defined at:
 21656 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 21657 ;; Parameters:    Size  Location     Type
 21658 ;;		None
 21659 ;; Auto vars:     Size  Location     Type
 21660 ;;		None
 21661 ;; Return value:  Size  Location     Type
 21662 ;;                  1    wreg      void 
 21663 ;; Registers used:
 21664 ;;		None
 21665 ;; Tracked objects:
 21666 ;;		On entry : 0/0
 21667 ;;		On exit  : 0/0
 21668 ;;		Unchanged: 0/0
 21669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21674 ;;Total ram usage:        0 bytes
 21675 ;; Hardware stack levels used:    1
 21676 ;; This function calls:
 21677 ;;		Nothing
 21678 ;; This function is called by:
 21679 ;;		i1_do_I2C_SEND_STOP
 21680 ;; This function uses a non-reentrant model
 21681 ;;
 21682                           
 21683                           
 21684                           ;psect for function i1_i2c1_driver_stop
 21685  1D18                     i1_i2c1_driver_stop:	
 21686                           
 21687                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 21688                           
 21689                           ;incstack = 0
 21690 ;; hardware stack exceeded
 21691                           ; Regs used in i1_i2c1_driver_stop: []
 21692  1D18  0023               	movlb	3	; select bank3
 21693  1D19  1511               	bsf	17,2	;volatile
 21694  1D1A  0008               	return
 21695  1D1B                     __end_ofi1_i2c1_driver_stop:	
 21696                           
 21697                           	psect	text138
 21698  1D15                     __ptext138:	
 21699 ;; *************** function i1_i2c1_driver_restart *****************
 21700 ;; Defined at:
 21701 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 21702 ;; Parameters:    Size  Location     Type
 21703 ;;		None
 21704 ;; Auto vars:     Size  Location     Type
 21705 ;;		None
 21706 ;; Return value:  Size  Location     Type
 21707 ;;                  1    wreg      void 
 21708 ;; Registers used:
 21709 ;;		None
 21710 ;; Tracked objects:
 21711 ;;		On entry : 0/0
 21712 ;;		On exit  : 0/0
 21713 ;;		Unchanged: 0/0
 21714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21719 ;;Total ram usage:        0 bytes
 21720 ;; Hardware stack levels used:    1
 21721 ;; This function calls:
 21722 ;;		Nothing
 21723 ;; This function is called by:
 21724 ;;		i1_do_I2C_SEND_RESTART_READ
 21725 ;;		i1_do_I2C_SEND_RESTART_WRITE
 21726 ;;		i1_do_I2C_SEND_RESTART
 21727 ;; This function uses a non-reentrant model
 21728 ;;
 21729                           
 21730                           
 21731                           ;psect for function i1_i2c1_driver_restart
 21732  1D15                     i1_i2c1_driver_restart:	
 21733                           
 21734                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 21735                           
 21736                           ;incstack = 0
 21737 ;; hardware stack exceeded
 21738                           ; Regs used in i1_i2c1_driver_restart: []
 21739  1D15  0023               	movlb	3	; select bank3
 21740  1D16  1491               	bsf	17,1	;volatile
 21741  1D17  0008               	return
 21742  1D18                     __end_ofi1_i2c1_driver_restart:	
 21743                           
 21744                           	psect	text139
 21745  1D3F                     __ptext139:	
 21746 ;; *************** function i1_i2c1_driver_sendACK *****************
 21747 ;; Defined at:
 21748 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 21749 ;; Parameters:    Size  Location     Type
 21750 ;;		None
 21751 ;; Auto vars:     Size  Location     Type
 21752 ;;		None
 21753 ;; Return value:  Size  Location     Type
 21754 ;;                  1    wreg      void 
 21755 ;; Registers used:
 21756 ;;		None
 21757 ;; Tracked objects:
 21758 ;;		On entry : 0/0
 21759 ;;		On exit  : 0/0
 21760 ;;		Unchanged: 0/0
 21761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21766 ;;Total ram usage:        0 bytes
 21767 ;; Hardware stack levels used:    1
 21768 ;; This function calls:
 21769 ;;		Nothing
 21770 ;; This function is called by:
 21771 ;;		i1_do_I2C_DO_ACK
 21772 ;;		i1_do_I2C_RX
 21773 ;; This function uses a non-reentrant model
 21774 ;;
 21775                           
 21776                           
 21777                           ;psect for function i1_i2c1_driver_sendACK
 21778  1D3F                     i1_i2c1_driver_sendACK:	
 21779                           
 21780                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 21781                           
 21782                           ;incstack = 0
 21783                           ; Regs used in i1_i2c1_driver_sendACK: []
 21784  1D3F  0023               	movlb	3	; select bank3
 21785  1D40  1291               	bcf	17,5	;volatile
 21786                           
 21787                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 21788  1D41  1611               	bsf	17,4	;volatile
 21789  1D42  0008               	return
 21790  1D43                     __end_ofi1_i2c1_driver_sendACK:	
 21791                           
 21792                           	psect	text140
 21793  1D12                     __ptext140:	
 21794 ;; *************** function _i2c_busCollisionISR *****************
 21795 ;; Defined at:
 21796 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 21797 ;; Parameters:    Size  Location     Type
 21798 ;;		None
 21799 ;; Auto vars:     Size  Location     Type
 21800 ;;		None
 21801 ;; Return value:  Size  Location     Type
 21802 ;;                  1    wreg      void 
 21803 ;; Registers used:
 21804 ;;		status,2, status,0, pclath, cstack
 21805 ;; Tracked objects:
 21806 ;;		On entry : 0/0
 21807 ;;		On exit  : 0/0
 21808 ;;		Unchanged: 0/0
 21809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21814 ;;Total ram usage:        0 bytes
 21815 ;; Hardware stack levels used:    1
 21816 ;; Hardware stack levels required when called:    1
 21817 ;; This function calls:
 21818 ;;		_i2c1_driver_clearBusCollision
 21819 ;; This function is called by:
 21820 ;;		_i2c_open
 21821 ;;		_INTERRUPT_InterruptManager
 21822 ;; This function uses a non-reentrant model
 21823 ;;
 21824                           
 21825                           
 21826                           ;psect for function _i2c_busCollisionISR
 21827  1D12                     _i2c_busCollisionISR:	
 21828                           
 21829                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 21830                           
 21831                           ;incstack = 0
 21832                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 21833  1D12  319D  250F         	fcall	_i2c1_driver_clearBusCollision
 21834  1D14  0008               	return
 21835  1D15                     __end_of_i2c_busCollisionISR:	
 21836                           
 21837                           	psect	text141
 21838  1D0F                     __ptext141:	
 21839 ;; *************** function _i2c1_driver_clearBusCollision *****************
 21840 ;; Defined at:
 21841 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 21842 ;; Parameters:    Size  Location     Type
 21843 ;;		None
 21844 ;; Auto vars:     Size  Location     Type
 21845 ;;		None
 21846 ;; Return value:  Size  Location     Type
 21847 ;;                  1    wreg      void 
 21848 ;; Registers used:
 21849 ;;		None
 21850 ;; Tracked objects:
 21851 ;;		On entry : 0/0
 21852 ;;		On exit  : 0/0
 21853 ;;		Unchanged: 0/0
 21854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21859 ;;Total ram usage:        0 bytes
 21860 ;; Hardware stack levels used:    1
 21861 ;; This function calls:
 21862 ;;		Nothing
 21863 ;; This function is called by:
 21864 ;;		_i2c_busCollisionISR
 21865 ;; This function uses a non-reentrant model
 21866 ;;
 21867                           
 21868                           
 21869                           ;psect for function _i2c1_driver_clearBusCollision
 21870  1D0F                     _i2c1_driver_clearBusCollision:	
 21871                           
 21872                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
 21873                           
 21874                           ;incstack = 0
 21875                           ; Regs used in _i2c1_driver_clearBusCollision: []
 21876  1D0F  002E               	movlb	14	; select bank14
 21877  1D10  108F               	bcf	15,1	;volatile
 21878  1D11  0008               	return
 21879  1D12                     __end_of_i2c1_driver_clearBusCollision:	
 21880  007E                     btemp	set	126	;btemp
 21881  007E                     int$flags	set	126
 21882  007E                     wtemp0	set	126


Data Sizes:
    Strings     90
    Constant    1004
    Data        487
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     74      80
    BANK1            80     39      80
    BANK2            80      0      59
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            33      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$2709$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$2715$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2721$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_ISR$2727	const PTR FTN()enum E15307 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$2726	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2721	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$2720	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$2715	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$2714	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX$2709	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S519$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 12
		 -> main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_2(CODE[31]), main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), main@timeStr(BANK1[0]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), main@timeStr(BANK1[0]), NULL(NULL[0]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), main@timeStr(BANK1[0]), NULL(NULL[0]), 

    mktime@timeptr	PTR struct tm size(1) Largest target is 18
		 -> rtc6_GetTime@tm_t(BANK1[18]), 

    memset@p1	PTR void  size(2) Largest target is 18
		 -> gmtime@tim(BANK2[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    memset@p	PTR unsigned char  size(2) Largest target is 18
		 -> gmtime@tim(BANK2[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    sp__ctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK2[27]), 

    sp__asctime	PTR unsigned char  size(1) Largest target is 27
		 -> asctime@buf(BANK2[27]), 

    gmtime@tp	PTR const long  size(1) Largest target is 4
		 -> localtime@t(BANK0[4]), 

    sp__gmtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    localtime@tp	PTR const long  size(1) Largest target is 4
		 -> main@getTime(BANK1[4]), rtc6_example@getTime(COMMON[4]), rtc6_SetTime@t(BANK0[4]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(COMMON[1]), 

    _doprnt@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> _doprnt@c(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_2(CODE[31]), main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), STR_1(CODE[31]), 

    S1708__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S1708__prbuf$ptr	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), main@timeStr(BANK1[0]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), main@timeStr(BANK1[0]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 4
		 -> sprintf@pb(BANK0[4]), printf@pb(COMMON[4]), 

    Modify_Data@c	PTR unsigned char  size(2) Largest target is 100
		 -> CharacterArray(BIGRAM[100]), 

    Write_String@message	PTR unsigned char  size(2) Largest target is 12
		 -> main@timeStr(BANK1[0]), main@welcomeMsg(BANK1[12]), 

    OLED_PutPicture@pic	PTR const unsigned char  size(2) Largest target is 475
		 -> emptyArray(CODE[475]), displayArray(BIGRAM[475]), 

    main@tm_t	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S980$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    sp__localtime	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    sp__memset	PTR void  size(2) Largest target is 18
		 -> gmtime@tim(BANK2[18]), rtc6_GetTime@tm_t(BANK1[18]), 

    rtc6_SetTime@tm_t	PTR struct tm size(1) Largest target is 18
		 -> gmtime@tim(BANK2[18]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E15307[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E15143 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S519$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S519$callbackTable	PTR FTN(PTR void ,)enum E15143[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E15143[6] size(2) Largest target is 1
		 -> i1_returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> returnReset(), returnStop(), 

    S519$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->i1_i2c_ISR
    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    i1_wr2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_wr1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rdBlkRegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd2RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_rd1RegCompleteHandler->i1_i2c_setDataCompleteCallback
    i1_i2c_setDataCompleteCallback->i1_setCallBack

Critical Paths under _main in BANK0

    _main->_rtc6_GetTime
    _rtc6_SetTime->_localtime
    _rtc6_SetComponent->_rtcc_read
    _localtime->_gmtime
    _gmtime->_dylen
    _dylen->___lwmod
    _rtc6_GetTime->_mktime
    _rtc6_GetComponent->_rtcc_read
    _mktime->_ymd_to_scalar
    _ymd_to_scalar->_years_to_days
    _years_to_days->___lwdiv
    _months_to_days->___lwdiv
    _isleap->___lwmod
    _Write_String->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _OLED_Clear->_OLED_PutPicture
    _OLED_PutPicture->_OLED_SetColumn
    _OLED_PutPicture->_OLED_SetRow
    _OLED_SetRow->_OLED_Command
    _OLED_SetColumn->_OLED_Command
    _OLED_Data->_SPI2_Exchange8bit
    _Modify_Data->___wmul
    _SYSTEM_Initialize->_rtc6_Initialize
    _rtc6_Initialize->_rtcc_read
    _rtcc_write->_i2c_write1ByteRegister
    _rtcc_read->_i2c_read1ByteRegister
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _OLED_Initialize->_OLED_Command
    _OLED_Command->_SPI2_Exchange8bit

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rtc6_GetTime

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               105   105      0  495139
                                             70 BANK0      4     4      0
                                             18 BANK1     21    21      0
                    _OLED_Initialize
                  _SYSTEM_Initialize
                       _Write_String
                          _localtime
                             _memset
                       _rtc6_GetTime
                       _rtc6_SetTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _rtc6_SetTime                                         8     4      4  186190
                                             44 BANK0      8     4      4
                            ___awmod
                          _localtime
                             _memset
                  _rtc6_SetComponent
 ---------------------------------------------------------------------------------
 (2) _rtc6_SetComponent                                   10     8      2  178519
                                             19 BANK0     10     8      2
                            ___awdiv
                            ___awmod
                          _rtcc_read
                         _rtcc_write
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     580
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _localtime                                           13    13      0    4868
                                             31 BANK0     13    13      0
                             ___lmul
                             _gmtime
 ---------------------------------------------------------------------------------
 (3) _gmtime                                               7     7      0    3988
                                             24 BANK0      7     7      0
                            ___aldiv
                            ___almod
                            ___awmod
                              _dylen
 ---------------------------------------------------------------------------------
 (4) _dylen                                                4     2      2    1213
                                             20 BANK0      4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1006
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___almod                                             11     3      8     752
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     756
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _rtc6_GetTime                                        25    21      4   96368
                                             63 BANK0      7     3      4
                                              0 BANK1     18    18      0
                             _memset
                             _mktime
                  _rtc6_GetComponent
 ---------------------------------------------------------------------------------
 (2) _rtc6_GetComponent                                    6     5      1   87117
                                             19 BANK0      6     5      1
                             ___bmul
                          _rtcc_read
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _mktime                                              15    11      4    7666
                                             48 BANK0     15    11      4
                             ___lmul
                      _ymd_to_scalar
 ---------------------------------------------------------------------------------
 (3) _ymd_to_scalar                                       16    10      6    6661
                                             32 BANK0     16    10      6
                             _isleap
                     _months_to_days
                      _years_to_days
 ---------------------------------------------------------------------------------
 (4) _years_to_days                                       18    14      4    1636
                                             14 BANK0     18    14      4
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     702
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _months_to_days                                       2     0      2    3324
                                             14 BANK0      2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isleap                                               5     3      2    1085
                                             20 BANK0      5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     840
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _Write_String                                         4     2      2   17779
                                             61 BANK0      4     2      2
                        _Modify_Data
                         _OLED_Clear
                    _OLED_PutPicture
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22     6     16   12743
                                             39 BANK0     22     6     16
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             23    18      5   11037
                                             20 BANK0     19    14      5
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     424
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     919
                                             14 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _OLED_Clear                                           6     6      0     915
                                             10 BANK0      6     6      0
                          _OLED_Data
                    _OLED_PutPicture
                     _OLED_SetColumn
                        _OLED_SetRow
 ---------------------------------------------------------------------------------
 (2) _OLED_PutPicture                                      6     4      2     511
                                              4 BANK0      6     4      2
                          _OLED_Data
                     _OLED_SetColumn
                        _OLED_SetRow
 ---------------------------------------------------------------------------------
 (3) _OLED_SetRow                                          2     2      0      89
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_SetColumn                                       2     2      0      89
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_Data                                            1     1      0      44
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _Modify_Data                                         21    15      6    2931
                                              6 BANK0     21    15      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2456
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0  174885
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI2_Initialize
                    _rtc6_Initialize
 ---------------------------------------------------------------------------------
 (2) _rtc6_Initialize                                      3     3      0  174885
                                             19 BANK0      3     3      0
                          _rtcc_read
                         _rtcc_write
 ---------------------------------------------------------------------------------
 (3) _rtcc_write                                           4     3      1   89050
                                             14 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               4     2      2   86030
                                             10 BANK0      4     2      2
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _rtcc_read                                            2     2      0   85720
                                             17 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                7     6      1   85650
                                             10 BANK0      7     6      1
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _i2c_setAddressNACKCallback                           4     1      3    1870
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (5) _i2c_open                                             3     3      0     366
                                              2 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_setI2cISR                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_setBusCollisionISR                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_masterWrite                                      0     0      0   78362
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (6) _i2c_masterOperation                                  3     3      0   78362
                                              7 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (7) _mssp1_IRQisEnabled                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _i2c_poller                                           0     0      0   78192
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (8) _mssp1_waitForEvent                                   1     1      0      50
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _i2c_ISR                                              3     3      0   78142
                                              4 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX_EMPTY                                      1     1      0   19494
                                              0 BANK0      1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX                                            3     3      0   19616
                                              1 BANK0      3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_TXData                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RX                                            1     1      0   19494
                                              0 BANK0      1     1      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ADDRESS_NACK                               1     1      0   19494
                                              0 BANK0      1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _returnStop                                          1     0      1      76
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _returnReset                                         1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4010
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 BANK0      4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (6) _setCallBack                                          5     2      3     914
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (5) _i2c_setBuffer                                        4     2      2    1352
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (10) _i2c_restartWrite                                    1     0      1       0
                                              9 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_close                                            2     2      0      24
                                              0 BANK0      2     2      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (6) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OLED_Initialize                                      2     2      0      44
                                              2 BANK0      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (4) _OLED_Command                                         1     1      0      44
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI2_Exchange8bit                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          1     1      0   14790
                                              7 COMMON     1     1      0
                   Absolute function *
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (14) i1_i2c_ISR                                           3     3      0   14790
                                              4 COMMON     3     3      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (15) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_TX_EMPTY                                   1     1      0    3656
                                              0 COMMON     1     1      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
                     i1_mssp1_setIRQ
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_TX                                         3     3      0    3778
                                              1 COMMON     3     3      0
                   Absolute function *
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_ADR_READ                              0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_TXData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_RX                                         1     1      0    3656
                                              0 COMMON     1     1      0
                   Absolute function *
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0    3656
                                              0 COMMON     1     1      0
                   Absolute function *
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                 i1_i2c_restartWrite *
            i1_rd1RegCompleteHandler *
            i1_rd2RegCompleteHandler *
          i1_rdBlkRegCompleteHandler *
                      i1_returnReset *
                       i1_returnStop *
            i1_wr1RegCompleteHandler *
            i1_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i1_wr2RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_wr1RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_returnStop                                        1     0      1      76
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (16) i1_returnReset                                       1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (16) i1_rdBlkRegCompleteHandler                           1     0      1     756
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_rd2RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i1_rd1RegCompleteHandler                             1     0      1     706
                                              9 COMMON     1     0      1
                    i1_i2c_setBuffer
      i1_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i1_i2c_setDataCompleteCallback                       4     1      3     510
                                              5 COMMON     4     1      3
                      i1_setCallBack
 ---------------------------------------------------------------------------------
 (18) i1_setCallBack                                       5     2      3     206
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (17) i1_i2c_setBuffer                                     4     2      2     174
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (16) i1_i2c_restartWrite                                  1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (17) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (15) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OLED_Initialize
     _OLED_Command
       _SPI2_Exchange8bit
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI2_Initialize
     _rtc6_Initialize
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
       _rtcc_write
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_write1ByteRegister (ARG)
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _Write_String
     _Modify_Data
       ___wmul
     _OLED_Clear
       _OLED_Data
         _SPI2_Exchange8bit
       _OLED_PutPicture
         _OLED_Data
           _SPI2_Exchange8bit
         _OLED_SetColumn
           _OLED_Command
             _SPI2_Exchange8bit
         _OLED_SetRow
           _OLED_Command
             _SPI2_Exchange8bit
       _OLED_SetColumn
         _OLED_Command
           _SPI2_Exchange8bit
       _OLED_SetRow
         _OLED_Command
           _SPI2_Exchange8bit
     _OLED_PutPicture
       _OLED_Data
         _SPI2_Exchange8bit
       _OLED_SetColumn
         _OLED_Command
           _SPI2_Exchange8bit
       _OLED_SetRow
         _OLED_Command
           _SPI2_Exchange8bit
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
           ___wmul (ARG)
         ___lwmod *
           ___lwdiv (ARG)
             ___wmul (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _strlen
   _localtime
     ___lmul
     _gmtime
       ___aldiv
       ___almod
       ___awmod
       _dylen
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
   _memset
   _rtc6_GetTime
     _memset
     _mktime
       ___lmul
       _ymd_to_scalar
         _isleap
           ___lwmod
             ___lwdiv (ARG)
               ___wmul (ARG)
         _months_to_days
           ___lwdiv
             ___wmul (ARG)
           ___wmul
         _years_to_days
           ___lmul
           ___lwdiv
             ___wmul (ARG)
     _rtc6_GetComponent
       ___bmul
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _rtc6_SetTime
     ___awmod
     _localtime
       ___lmul
       _gmtime
         ___aldiv
         ___almod
         ___awmod
         _dylen
           ___lwmod
             ___lwdiv (ARG)
               ___wmul (ARG)
     _memset
     _rtc6_SetComponent
       ___awdiv
       ___awmod
       _rtcc_read
         _i2c_read1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
       _rtcc_write
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_write1ByteRegister (ARG)
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
         ___wmul (ARG)
       ___lwmod *
         ___lwdiv (ARG)
           ___wmul (ARG)
       ___wmul *
       _isdigit *
       _putch *

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       Absolute function(Fake) *
       i1_do_I2C_DO_NACK_RESTART *
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP *
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData *
       i1_i2c1_driver_sendACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART_READ *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData *
       i1_i2c1_driver_isNACK *
       i1_i2c_restartWrite *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i1_do_I2C_SEND_RESTART *
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP *
         i1_i2c1_driver_stop
       i1_i2c_restartWrite *
       i1_mssp1_setIRQ *
       i1_rd1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rd2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_rdBlkRegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_returnReset *
       i1_returnStop *
       i1_wr1RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
       i1_wr2RegCompleteHandler *
         i1_i2c_setBuffer
         i1_i2c_setDataCompleteCallback
           i1_setCallBack
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     27      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3B       9       73.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               21      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 26 21:46:24 2018

                           returnReset@p 0029                            _years_to_days 09B8  
              rtc6_SetComponent@location 003C                        _rtc6_SetTime$2707 0052  
                         ___bmul@product 0022            _do_I2C_SEND_RESTART$intlevel0 1DEA  
                            __CFG_CP$OFF 0000                                       l53 1E6B  
                           ___awdiv@sign 0026                      months_to_days@month 002E  
                    ??_rtc6_SetComponent 0035                     __size_of_do_I2C_IDLE 0009  
                    _do_I2C_SEND_RESTART 1DE6                     __size_of_do_I2C_RCEN 000A  
                    ___wmul@multiplicand 0022                     __end_ofi1_returnStop 1D0D  
                          rtcc_read@addr 0032                              i1_do_I2C_RX 141E  
                            i1_do_I2C_TX 156F                              __CFG_LVP$ON 0000  
                                    l224 1051                                      l217 1604  
                                    l314 1504                                      l298 1685  
                                    l764 1E9D                                      l908 0205  
                                    l856 0A2B                                      l877 00BB  
                           __CFG_CPD$OFF 0000                 i1_do_I2C_DO_NACK_RESTART 1D5F  
                      ??_OLED_Initialize 0022                         ??_OLED_SetColumn 0022  
           __size_of_i2c_masterOperation 0024                     _returnStop$intlevel0 1D89  
          i2c_setDataCompleteCallback@cb 0025                  __size_of_PMD_Initialize 0008  
                           ___awmod@sign 0026                 ?i1_rd2RegCompleteHandler 0079  
                  __size_of_do_I2C_RESET 000B                             __CFG_BORV$LO 0000  
                                    wreg 0009                    __end_ofi1_returnReset 1D0F  
                        ?i1_mssp1_setIRQ 0070                         OLED_Command@temp 0021  
               ?i1_wr2RegCompleteHandler 0079                       i1_i2c1_driver_stop 1D18  
        i2c1_driver_setBusCollisionISR@f 0020          ??i1_i2c_setDataCompleteCallback 0078  
                            main@getTime 00C3                             __CFG_ZCD$OFF 0000  
                                   l1017 105D                  ??_rd2RegCompleteHandler 002A  
                                   l1072 0BA4                                     l1085 095B  
                                   l1427 1732                                     l4020 0BFE  
                                   l4006 0BC5                                     l4120 1337  
                                   l4024 0C0C                                     l4016 0BF3  
                                   l4008 0BD3                                     l4104 13A2  
                                   l4122 1338                                     l4042 0970  
                                   l3500 1E0A                                     l4044 097E  
                                   l4052 09A1                                     l4036 0968  
                                   l4108 13A7                                     l3510 1D8F  
                                   l3600 1DFA                                     l4056 09AF  
                                   l4048 0996                                     l4080 1541  
                                   l4072 153B                                     l3506 1D89  
                                   l3514 1D95                                     l4170 13C8  
                                   l4082 154D                                     l4090 1562  
                          i1returnStop@p 0079                                     l4068 1534  
                                   l3438 1169                                     l3542 1F95  
                                   l3518 1FAB                                     l3526 1FC1  
                                   l3534 1FD7                                     l3550 1074  
                                   l3470 1DDA                                     l4350 1F60  
                                   l4094 156A                                     l4086 1559  
                                   l4424 0F80                                     l3482 1DEA  
                                   l4178 13E0                                     l4346 1F5A  
                                   l4434 0FC9                                     l4426 0FB1  
                                   l3476 1DE2                                     l4604 0DB6  
                                   l4436 0FF9                                     l4372 16BB  
                                   l3558 1E56                                     l3494 1E02  
                                   l3902 123C                                     l4606 0DBF  
                                   l4390 16E1                                     l4382 16C3  
                                   l4366 16B0                                     l3568 1004  
                                   l3488 1DF2                                     l3576 1EA5  
                                   l3584 1E61                                     l3592 1E2E  
                                   l4448 171D                                     l4384 16CF  
                                   l3906 1245                                     l3850 1281  
                                   l4394 16EA                                     l3836 1057  
                                   l4732 17C8                                     l4742 17DD  
                                   l4726 17BB                                     l4718 17AD  
                                   l3854 128B                                     l4398 16F2  
                                   l4736 17D0                                     l3880 1367  
                                   l3872 1349                                     l3874 1355  
                                   l4754 1092                                     l4586 1025  
                                   l4748 17F8                                     l3884 1370  
                                   l4756 109E                                     l7600 1251  
                                   l4776 0A94                                     l4768 0A3C  
                                   l3896 1224                                     l3984 1F15  
                                   l7610 1258                                     l7530 11D3  
                                   l3898 1230                                     l7604 1254  
                                   l7540 11D9                                     l7534 11D6  
                                   l7526 11CA                                     l7550 1662  
                                   l7542 1659                                     l7702 1615  
                                   l3998 0BB5                                     l7616 125B  
                                   l7560 1668                                     l7712 163E  
                                   l7554 1665                                     l7546 165F  
                                   l7626 1205                                     l7618 11F4  
                                   l7634 1E73                                     l7722 1653  
                                   l7810 019B                                     l7802 0170  
                                   l8258 0D02                                     l7572 14E7  
                                   l7652 0947                                     l7900 0353  
                                   l7590 1509                                     l7646 0937  
                                   l7830 01DA                                     l7814 01A4  
                                   l7568 169E                                     l7648 093D  
                                   l7728 12AA                                     l7904 030B  
                                   l7824 01D4                                     l7808 0190  
                                   l7816 01BC                                     l7760 00B7  
                                   l7586 1506                                     l7738 12D3  
                                   l7930 179C                                     l7906 006E  
                                   l7596 150C                                     l7844 0221  
                                   l7836 01F9                                     l7780 0105  
                                   l7908 036C                                     l7772 00D6  
                                   l7756 009E                                     l7598 124E  
                                   l7854 0242                                     l7870 0295  
                                   l7846 0224                                     l7790 0137  
                                   l7766 00C0                                     l7928 178B  
                                   l7880 02C9                                     l7872 0299  
                                   l7864 0277                                     l7784 0113  
                                   l7768 00C9                                     l7882 02D2  
                                   l7858 025A                                     l7794 0115  
                                   l7876 02B1                                     l7868 028F  
                                   l7892 0306                                     l7796 0150  
                                   l7888 02EE                                     STR_1 1820  
                                   STR_2 1820                                     STR_3 183F  
                                   STR_4 054B                              ?_OLED_Clear 0070  
                                   u2105 1293                                     u2205 1227  
                                   _LATA 0016                                     _LATB 0017  
                                   u2055 105E                                     u2135 134C  
                                   _LATC 0018                                     _LATD 0019  
                                   u2065 1063                                     u2225 1236  
                                   u3105 16C6                                     _LATE 001A  
                                   u2155 1356                                     u2235 123D  
                                   u2165 1360                                     u3125 16D0  
                                   u2335 1012                                     u2175 1368  
                                   u2095 128C                                     u2415 0BD4  
                                   u3135 16DA                                     u2425 0BE8  
                                   u3145 16E2                                     u3315 17DB  
                                   u2435 0BF4                                     u2515 098C  
                                   u3325 17F6                                     u2525 0997  
                                   u2605 1553                                     u3255 0DA0  
                                   u2615 155A                                     u3175 0F97  
                                   u3265 0DB4                                     u3185 0FE4  
                                   u2395 0BC8                                     u3365 0A31  
                                   u2495 0973                                     u2585 1544  
                                   _PMD0 0796                                     _PMD1 0797  
                                   _PMD2 0798                                     _PMD3 0799  
                                   _PMD4 079A                                     u6305 010C  
                                   _PMD5 079B                                     u6415 0214  
                                   u6375 01EF                     ?_do_I2C_SEND_RESTART 0070  
                                   u6575 1402                                     u6585 1101  
                                   u6907 0D85                                     u6917 1F78  
                                   u6870 0CAE                                     u6927 1E6F  
                                   u6937 0AA1                                     u6947 0AB0  
                                   u6887 0CBF                                     u6897 0CFE  
              __end_of_rtc6_SetComponent 141E                                     _WPUA 0F39  
                                   _WPUB 0F44                                     _WPUC 0F4F  
                                   _WPUD 0F5A                                     _WPUE 0F65  
                ??_wr2RegCompleteHandler 002A                             __CFG_WRT$OFF 0000  
                          __CFG_FCMEN$ON 0000        __size_of_do_I2C_SEND_RESTART_READ 0008  
                    ?i1_i2c1_driver_stop 0070                ?_do_I2C_SEND_RESTART_READ 0070  
                            main@setTime 00BE                                     _main 0C9D  
              __size_of_do_I2C_SEND_STOP 0008                   __size_of_do_I2C_DO_ACK 0008  
                                   fsr0h 0005                                     fsr1h 0007  
                                   indf0 0000                                     fsr0l 0004  
                                   indf1 0001                                     fsr1l 0006  
                                   btemp 007E                              main@timeStr 00B2  
                  __size_of_Write_String 0032                        ??i1_do_I2C_DO_ACK 0070  
                          __CFG_BOREN$ON 0000                  i1_i2c1_driver_getRXData 1D1E  
                  ?_do_I2C_SEND_ADR_READ 0070          ??_i2c1_driver_clearBusCollision 0070  
                                   start 0022                            _i2c_setBuffer 1F7C  
                          __CFG_CSWEN$ON 0000                        ___bmul@multiplier 0023  
                          __CFG_MCLRE$ON 0000                          __end_of_i2c_ISR 121D  
                         ?_years_to_days 002E         __size_of_rdBlkRegCompleteHandler 001D  
               ??_do_I2C_DO_NACK_RESTART 0020                       __size_of_OLED_Data 000A  
                          i1_do_I2C_IDLE 1D74                __size_of_mssp1_disableIRQ 0003  
                          i1_do_I2C_RCEN 1D79                             _do_I2C_RESET 1E52  
                         i1returnReset@p 0079                   _i2c_write1ByteRegister 12A8  
         __size_of_OSCILLATOR_Initialize 0009              i2c_setAddressNACKCallback@p 0027  
          __end_of_OSCILLATOR_Initialize 1E17                     ??i1_i2c1_driver_stop 0070  
                        __end_of___aldiv 0C15                          __end_of___almod 09B8  
               __end_of_i2c1_driver_open 1E3E                                    ?_main 0070  
                 __size_of_ymd_to_scalar 0057                          __end_of___awdiv 16F7  
               __end_of_i2c1_driver_stop 1D36                            __CFG_WDTE$OFF 0000  
                        __end_of___awmod 156F                          ___awdiv@divisor 0020  
             __end_of_i2c1_driver_TXData 1D9D                           __CFG_DEBUG$OFF 0000  
                        __end_of___lwdiv 1375                                    i1l314 1438  
                        __end_of___lwmod 124A                                    i1l298 159A  
                                  i1l653 0015                                    i1l658 001D  
                        ___awdiv@counter 0025                                    _OSCEN 0891  
                        __end_of__doprnt 0370                                    _TRISA 0011  
                                  _TRISB 0012                                    _TRISC 0013  
                                  _TRISD 0014                                    _TRISE 0015  
                    ___lmul@multiplicand 0024                             ?_OLED_SetRow 0070  
                            i2c_open@ret 0024                        ??_OLED_PutPicture 0026  
                     __size_ofi1_i2c_ISR 0026                             _Write_String 12DA  
             __end_of_i2c1_driver_isNACK 1E20                          __end_of_dpowers 186B  
                                  _dylen 1375                          __end_of_isdigit 1F17  
           ?i1_do_I2C_SEND_RESTART_WRITE 0070               ?_do_I2C_SEND_RESTART_WRITE 0070  
                                  _putch 1D0A                    ??_do_I2C_SEND_RESTART 0020  
                  _i2c_read1ByteRegister 1607                        ?i1_mssp1_clearIRQ 0070  
 __end_of_i2c1_driver_setBusCollisionISR 1DA3  __size_of_i2c1_driver_setBusCollisionISR 0006  
         _i2c1_driver_setBusCollisionISR 1D9D                          __end_of_moninit 1861  
                                  pclath 000A                      Write_String@message 005D  
                __size_of_mssp1_clearIRQ 0003                     i1_i2c1_driver_TXData 1D6F  
                       ymd_to_scalar@day 0044                i2c_write1ByteRegister@reg 002A  
                 ?_do_I2C_SEND_ADR_WRITE 0070                                    status 0003  
                     ??i1_mssp1_clearIRQ 0070                                    wtemp0 007E  
                        __end_of_sprintf 10EB                            ??_Modify_Data 002C  
                        years_to_days@yr 002E                           ?_i2c_setBuffer 0020  
                           ?_setCallBack 0020                     i1_i2c1_driver_isNACK 1DBE  
                          _fsmStateTable 1800                          __initialization 0024  
         __size_ofi1_do_I2C_SEND_RESTART 0004                               _i2c_poller 1E73  
          __end_ofi1_do_I2C_SEND_RESTART 1D53                        _SPI2_Exchange8bit 1E95  
                             _i2c_status 00C7                           ?i1_do_I2C_IDLE 0070  
                           __end_of_main 0D8D                           ?i1_do_I2C_RCEN 0070  
             __end_ofi1_do_I2C_SEND_STOP 1D57                         __end_of_i2c_open 1607  
                     ?_SPI2_Exchange8bit 0070              ?_INTERRUPT_InterruptManager 0070  
                          rtc6_SetTime@t 004C          __end_ofi1_rd2RegCompleteHandler 1F57  
                    __size_of_OLED_Clear 0059                            setCallBack@cb 0020  
                         i1_do_I2C_RESET 1DA9                            _do_I2C_DO_ACK 1DF6  
                                 ??_main 0066                            _do_I2C_TX$723 0022  
                      ?_i2c_restartWrite 0029          __end_ofi1_wr2RegCompleteHandler 1F27  
                     OLED_PutPicture@pic 0024            __size_of_i2c1_driver_sendNACK 0004  
                           i2c_close@ret 0021                 __size_of_SPI2_Initialize 0006  
                    ??_SPI2_Exchange8bit 0020                       ??_i2c_restartWrite 002A  
          __size_of_i2c1_driver_resetBus 0001                  ?_do_I2C_DO_ADDRESS_NACK 0070  
                                 ?_dylen 0034                         ___awdiv@dividend 0022  
        i1i2c_setDataCompleteCallback@cb 0075                                   _ANSELA 0F38  
                                 ?_putch 0020                                   _ANSELB 0F43  
                                 _ANSELC 0F4E                                   _ANSELD 0F59  
                      __end_of_OLED_Data 1E52                                   _ANSELE 0F64  
                     __CFG_RSTOSC$HFINT1 0000                  ?i1_do_I2C_SEND_ADR_READ 0070  
                  ?i1_i2c1_driver_TXData 0070                                   _RB1PPS 0F19  
                         rtcc_write@addr 0031                                   _RB3PPS 0F1B  
                                 _RC3PPS 0F23                           rtcc_write@data 002E  
                                 _RC4PPS 0F24                                   _ODCONA 0F3A  
                                 _ODCONB 0F45                                   _ODCONC 0F50  
                                 _ODCOND 0F5B                                   _ODCONE 0F66  
                                 i1l4502 1D5F                                   i1l4512 1D0D  
                                 i1l4520 1F27                                   i1l4508 1D0B  
                                 i1l4516 0002                                   i1l4544 1F17  
                                 i1l4528 1F37                                   i1l4536 1F47  
                                 i1l4552 1FE9                                   i1l4472 1D47  
                         __CFG_WDTCCS$SC 0000                                   i1l3914 1144  
                                 i1l4490 1D53                                   i1l4484 1D4F  
                                 i1l8012 143A                                   i1l8030 11A3  
                                 i1l4478 1D4B                                   i1l4806 1DB0  
                                 i1l4814 1D79                                   i1l4822 1D57  
                                 i1l8022 1440                                   i1l8024 119D  
                                 i1l4496 1D5B                                   i1l8016 143D  
                                 i1l8104 1187                                   i1l8026 11A0  
                                 i1l8042 11AA                                   i1l8036 11A7  
                                 i1l4780 1DA9                                   i1l4790 1D74  
              ??i1_i2c1_driver_getRXData 0070               __size_of_rtc6_SetComponent 0039  
                                 i1l4798 1DC6                                   i1l8096 1177  
                                 i1l7960 1115                                   i1l7952 110B  
                                 i1l7956 1112                                   i1l7980 157B  
                                 i1l7972 1575                                   i1l7966 1118  
                                 i1l7976 1578                                   i1l7968 156F  
                                 i1l7994 15B3                                   i1l7986 157E  
                                 i1l7998 141E            ??i1_do_I2C_SEND_RESTART_WRITE 0070  
                     __size_of_i2c_close 001B                                   _OSCFRQ 0893  
                          ?_OLED_Command 0070                  i1_rd1RegCompleteHandler 1F37  
                          _ymd_to_scalar 16F7                   ??_do_I2C_SEND_ADR_READ 0021  
                                 _STATUS 0003                 rdBlkRegCompleteHandler@p 0029  
                              ??_i2c_ISR 0024                  i1_wr1RegCompleteHandler 1F27  
                       rtc6_SetTime@tm_t 0053              ??i1_rdBlkRegCompleteHandler 007A  
                     rtc6_Initialize@reg 0035                    ?i1_i2c1_driver_isNACK 0070  
                         __CFG_PWRTE$OFF 0000                          ??_years_to_days 0032  
              __end_of_SPI2_Exchange8bit 1EA1                    _i2c1_driver_getRXData 1D39  
                    _do_I2C_RX$intlevel0 14E7                                   ___bmul 1F57  
                  __size_ofi1_returnStop 0002              __end_of_do_I2C_DO_NACK_STOP 1E06  
                      __end_ofi1_i2c_ISR 119D      __end_of_i2c_setDataCompleteCallback 1EDE  
            _i2c_setDataCompleteCallback 1ED1                                   ___lmul 1278  
                              ??___aldiv 0028                                ??___almod 0028  
                                 ___wmul 1054                          _i2c_masterWrite 1D6B  
                    __end_of_Modify_Data 0A99                                ??___awdiv 0024  
  __end_of_i2c1_driver_clearBusCollision 1D12   __size_of_i2c1_driver_clearBusCollision 0003  
          _i2c1_driver_clearBusCollision 1D0F                           __CFG_STVREN$ON 0000  
                              ??___awmod 0024          __size_of_do_I2C_DO_NACK_RESTART 0008  
                              ??___lwdiv 002A                                ??___lwmod 0032  
                 __end_ofi1_do_I2C_RESET 1DB0                          i1_i2c_setBuffer 1EEB  
                                 _gmtime 0EAE                                ??__doprnt 0039  
                                 _memset 1020                                   _isleap 130C  
                            OLED_Clear@i 002F                              OLED_Clear@j 002C  
                       ___awdiv@quotient 0027                           ?_do_I2C_DO_ACK 0070  
                                 _mktime 0D8D                          ___awmod@divisor 0020  
                                 _lookup 074B              __size_ofi1_i2c_restartWrite 0002  
                           __doprnt@flag 0043                          ___awmod@counter 0025  
                           __doprnt@prec 003D                                   _strlen 108D  
               rtc6_GetComponent@working 0038                   i2c1_driver_setI2cISR@f 0020  
                           __pdataBIGRAM 21B1              __end_of_i2c1_driver_sendACK 1D67  
                         _PMD_Initialize 1DCE           __end_of_do_I2C_DO_ADDRESS_NACK 11F0  
                              ??_isdigit 0020               i2c_write1ByteRegister@data 002B  
            ?_i2c_setAddressNACKCallback 0025              __end_of_i2c1_driver_restart 1D33  
                           ?_returnReset 0029            _do_I2C_DO_NACK_STOP$intlevel0 1E02  
             i1rdBlkRegCompleteHandler@p 0079                    _i2c1_driver_setI2cISR 1DA3  
            __end_of_i2c1_driver_startRX 1D39                                   putch@c 0020  
                 ?_i2c_read1ByteRegister 002A        __size_ofi1_do_I2C_DO_ADDRESS_NACK 0023  
         __end_ofi1_do_I2C_SEND_ADR_READ 1DCE                            ?_rtc6_GetTime 005F  
              ?i1_do_I2C_DO_ADDRESS_NACK 0070                                ??_sprintf 0057  
                            localtime@tp 004B                           ??_OLED_Command 0021  
                      i1_do_I2C_TX_EMPTY 119D                           ?_ymd_to_scalar 0040  
                      _SYSTEM_Initialize 1EF9                  __end_of__initialization 006A  
                          ?_rtc6_SetTime 004C                          ??_i2c_setBuffer 0022  
         _do_I2C_SEND_ADR_READ$intlevel0 1EA5                         _do_I2C_SEND_STOP 1DEE  
                           i1_returnStop 1D0B                    i1_do_I2C_DO_NACK_STOP 1D5B  
                     __size_of_do_I2C_RX 0046                       __size_of_do_I2C_TX 0050  
                     ?i1_do_I2C_TX_EMPTY 0070                       ?_SYSTEM_Initialize 0070  
             __end_of_mssp1_IRQisEnabled 1DBE        _rdBlkRegCompleteHandler$intlevel0 1074  
                    _i2c_masterOperation 0926                 __size_of_do_I2C_TX_EMPTY 002E  
                    ___bmul@multiplicand 0020                          ??i1_do_I2C_IDLE 0070  
                        ??i1_do_I2C_RCEN 0070                  _rdBlkRegCompleteHandler 1070  
             __end_of_mssp1_waitForEvent 1E73                              ?_i2c_poller 0070  
                        _OLED_Initialize 0A99                           __pcstackCOMMON 0070  
             ??i1_do_I2C_DO_NACK_RESTART 0070                      _do_I2C_TX$intlevel0 1659  
                    ??i1_do_I2C_TX_EMPTY 0070                             __pidataBANK1 1EC5  
                    ??_SYSTEM_Initialize 0036                         _mssp1_disableIRQ 1D2A  
                  i1_i2c1_driver_sendACK 1D3F                            __end_of_dylen 13AC  
                  i1i2c1_driver_TXData@d 0070                          ?i1_do_I2C_RESET 0070  
                          __end_of_putch 1D0B                    i1_i2c1_driver_restart 1D15  
                 __end_of_PMD_Initialize 1DD6                        __end_of_i2c_close 1054  
                           ?i1_do_I2C_RX 0070                             ?i1_do_I2C_TX 0070  
                  i1_i2c1_driver_startRX 1D1B                         ??i1_mssp1_setIRQ 0070  
                    i1i2c_restartWrite@p 0079                i1_rdBlkRegCompleteHandler 1FE9  
                   ?_i2c_masterOperation 0070           i1i2c_setDataCompleteCallback@p 0077  
           ??i1_do_I2C_SEND_RESTART_READ 0070                  __size_of_months_to_days 001F  
                 __size_ofi1_setCallBack 0024                          i1setCallBack@cb 0070  
               i1rd1RegCompleteHandler@p 0079                          i1_do_I2C_DO_ACK 1D57  
                         ??_rtc6_GetTime 0063                          i1_do_I2C_TX$723 0072  
                             __doprnt@ap 0038                               __doprnt@cp 003E  
                             __doprnt@pb 0034                           setCallBack@idx 0024  
              __end_ofi1_do_I2C_TX_EMPTY 11C6                   _do_I2C_DO_NACK_RESTART 1E06  
                 ??i1_i2c1_driver_TXData 0070                                  ??_dylen 0036  
              __end_of_SYSTEM_Initialize 1F08                     __size_of_OLED_SetRow 000B  
              ??i1_rd1RegCompleteHandler 007A                                  ??_putch 0021  
                           ??_OLED_Clear 002A                        ??_SPI2_Initialize 0020  
                         _mssp1_clearIRQ 1D27                               __pbssBANK0 006A  
                             __pbssBANK1 00C7                               __pbssBANK2 0120  
              ??i1_wr1RegCompleteHandler 007A                           ??_rtc6_SetTime 0050  
         __size_of_rd2RegCompleteHandler 0016                                ?_i2c_open 0070  
          __end_of_rd2RegCompleteHandler 1FE9                 ??i1_i2c1_driver_sendNACK 0070  
         __size_of_wr2RegCompleteHandler 0016                   ??i1_i2c1_driver_isNACK 0070  
       __size_ofi1_rd2RegCompleteHandler 0010            __end_of_wr2RegCompleteHandler 1FA7  
                __end_of_i2c_masterWrite 1D6F                              _Modify_Data 0A28  
               i1wr1RegCompleteHandler@p 0079                    _rd1RegCompleteHandler 1FBD  
                 ?_i2c1_driver_getRXData 0070                 ??i1_i2c1_driver_resetBus 0070  
               __size_of_rtc6_Initialize 0059                  __end_ofi1_i2c_setBuffer 1EF9  
                     __size_of_localtime 0045               __size_of_SPI2_Exchange8bit 000C  
       __size_ofi1_wr2RegCompleteHandler 0010                    _do_I2C_IDLE$intlevel0 1004  
                  _wr1RegCompleteHandler 1FA7                           _SSP1DATPPSbits 0EC6  
           __size_of_i2c_busCollisionISR 0003          _wr1RegCompleteHandler$intlevel0 1FAB  
        _rd1RegCompleteHandler$intlevel0 1FC1                               __pmaintext 0C9D  
                          ??_do_I2C_IDLE 0020                  ?_i2c_write1ByteRegister 002A  
                   __size_of_setCallBack 0025                            ??_do_I2C_RCEN 0020  
                                ?___bmul 0020                                  ?___lmul 0020  
                                ?___wmul 0020                          __CFG_PPS1WAY$ON 0000  
                        ??_do_I2C_DO_ACK 0020                               __pintentry 0004  
                        _OLED_PutPicture 13AC                                  ?_gmtime 0070  
                                ?_memset 0020                                  ?_isleap 0034  
                         ___lmul@product 0028                      i2c_setBuffer@buffer 0023  
                                ?_mktime 0050                           _SSP2DATPPSbits 0EC9  
                         _SSP1CLKPPSbits 0EC5                          ?_PMD_Initialize 0070  
                     __end_of_OLED_Clear 1800           ?_i2c1_driver_clearBusCollision 0070  
                                ?_strlen 0020                    ??_i2c_masterOperation 0027  
                      ?_i2c1_driver_open 0070                        __end_of_do_I2C_RX 1529  
                      __end_of_do_I2C_TX 16A5                        ?_i2c1_driver_stop 0070  
               ?i1_do_I2C_SEND_ADR_WRITE 0070                       __size_of_rtcc_read 000A  
                 ?_i2c1_driver_setI2cISR 0020                       ??_i2c1_driver_open 0020  
                     ??_i2c1_driver_stop 0020                                  _OSCCON1 088D  
                                _OSCCON3 088F                            ?_mssp1_setIRQ 0070  
                         _SSP2CLKPPSbits 0EC8                                  _OSCTUNE 0892  
                                _SSP1ADD 018D                                  _SSP2ADD 0197  
                                _SSP1BUF 018C                   __end_of_mssp1_clearIRQ 1D2A  
                                _SSP2BUF 0196                                  _SSP1MSK 018E  
                    __size_of_i2c_poller 000B                          ??_ymd_to_scalar 0046  
                ??_do_I2C_SEND_ADR_WRITE 0021            i2c_write1ByteRegister@address 002D  
    _do_I2C_SEND_RESTART_WRITE$intlevel0 1DE2              ??_do_I2C_SEND_RESTART_WRITE 0020  
                 ?i1_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_TXData 1D97  
                             ??_i2c_open 0022                       _i2c1_driver_i2cISR 007A  
                __end_of_OLED_Initialize 0B13                                  _i2c_ISR 11F0  
              ??_rdBlkRegCompleteHandler 002A                               _emptyArray 0370  
         __end_of_i2c_write1ByteRegister 12DA                    _returnReset$intlevel0 1D8F  
                  _do_I2C_RCEN$intlevel0 1E2E                            i1_setCallBack 112E  
                     _i2c1_driver_isNACK 1E17                      ?_i2c1_driver_TXData 0070  
       _do_I2C_DO_ADDRESS_NACK$intlevel0 11CA                   ?i1_i2c1_driver_sendACK 0070  
                   __CFG_SCANE$available 0000      __size_of_i2c_setAddressNACKCallback 000D  
                                ___aldiv 0B93                          __size_of___bmul 0012  
                                ___almod 094A                   __size_ofi1_returnReset 0002  
                                ___awdiv 16A5                          __size_of___lmul 0030  
                                ___awmod 1529                __size_ofi1_mssp1_clearIRQ 0003  
                        __size_of___wmul 001C                                  ___lwdiv 1340  
                 ?i1_i2c1_driver_restart 0070                                  ___lwmod 121D  
                      ??_do_I2C_TX_EMPTY 0020                                  __doprnt 006E  
                    ?_i2c1_driver_isNACK 0070                   ?i1_i2c1_driver_startRX 0070  
                        __size_of_gmtime 0152                          __size_of_memset 0019  
                        __size_of_isleap 0034                     __end_of_OLED_Command 1E2A  
                __end_ofi1_do_I2C_DO_ACK 1D5B                          __size_of_mktime 0121  
                                __ptext1 0B13                                  __ptext2 13E5  
                                __ptext3 16A5                                  __ptext4 149E  
                                __ptext5 0EAE                                  __ptext6 1375  
                                __ptext7 1529                                  __ptext8 094A  
                                __ptext9 0B93              __size_ofi1_i2c1_driver_stop 0003  
                    __end_of_do_I2C_IDLE 1009                      __end_of_do_I2C_RCEN 1E34  
                        __size_of_strlen 001F                                  _dpowers 1861  
                  _OSCILLATOR_Initialize 1E0E                                  _isdigit 1F08  
            __end_of_do_I2C_SEND_RESTART 1DEE                           ??_mssp1_setIRQ 0020  
                       ___awmod@dividend 0022                             Modify_Data@c 0026  
                       ___aldiv@dividend 0024                             Modify_Data@j 0039  
                           Modify_Data@p 0037                     ??_i2c1_driver_TXData 0020  
                      __end_of_localtime 14E3                            mktime@timeptr 005E  
               ??_PIN_MANAGER_Initialize 0020                                  _moninit 1855  
                 i2c_masterOperation@ret 0029                       i1_do_I2C_SEND_STOP 1D53  
                        ?_mssp1_clearIRQ 0070               _do_I2C_SEND_STOP$intlevel0 1DF2  
             __size_ofi1_do_I2C_TX_EMPTY 0029                 _do_I2C_SEND_RESTART_READ 1DD6  
             __size_of_SYSTEM_Initialize 000F                  i2c_read1ByteRegister@d2 0030  
                                _sprintf 10CB                                  clrloop0 1EAE  
                          __doprnt@width 0044                     __size_of_returnReset 0006  
                   end_of_initialization 006A                     ??_i2c1_driver_isNACK 0020  
                __size_of_OLED_SetColumn 0017                                  dylen@yr 0034  
              __size_of_i2c_restartWrite 0006                                  init_ram 1EB9  
                                memset@c 0022             __end_of_i2c1_driver_sendNACK 1D6B  
                    ?i1_do_I2C_SEND_STOP 0070                                  memset@n 0024  
                                memset@p 0026                   ?_rd1RegCompleteHandler 0029  
                                initloop 1EBA          __size_ofi1_i2c1_driver_sendNACK 0004  
                         main@welcomeMsg 00B2                                _OLED_Data 1E48  
                       ?_i2c_masterWrite 0070                   ?_wr1RegCompleteHandler 0029  
           __end_of_i2c1_driver_resetBus 1D0A                           ?i1_setCallBack 0070  
                __end_of_OLED_PutPicture 13E5                        __end_of_rtcc_read 1E48  
                       ?i1_i2c_setBuffer 0070          __size_ofi1_i2c1_driver_resetBus 0001  
                       ___aldiv@quotient 002B                     __end_of_rtc6_GetTime 0C9D  
              _do_I2C_SEND_RESTART_WRITE 1DDE                               main@F15397 00E4  
                      ??_rtc6_Initialize 0033                    i1_do_I2C_SEND_RESTART 1D4F  
       __end_ofi1_do_I2C_DO_ADDRESS_NACK 112E          __end_ofi1_do_I2C_SEND_ADR_WRITE 1DB7  
                  __CFG_WDTCPS$WDTCPS_31 0000                                  strlen@s 0020  
                              i1_i2c_ISR 1177                     ??i1_do_I2C_SEND_STOP 0070  
                           _displayArray 21B1                     __end_of_rtc6_SetTime 0B93  
                             _returnStop 1D85          __end_of_rdBlkRegCompleteHandler 108D  
               __end_of_do_I2C_SEND_STOP 1DF6       __end_ofi1_do_I2C_SEND_RESTART_READ 1D4B  
             i1_do_I2C_SEND_RESTART_READ 1D47                               _rtcc_write 1F69  
                ??_i2c_read1ByteRegister 002B                     __size_ofi1_do_I2C_RX 003E  
                   __size_ofi1_do_I2C_TX 004A                           _months_to_days 10AC  
                             asctime@buf 012E     __size_of_i2c_setDataCompleteCallback 000D  
                          i1_returnReset 1D0D                              returnStop@p 0029  
                       __CFG_FEXTOSC$OFF 0000                 __end_of_mssp1_disableIRQ 1D2D  
     __size_ofi1_rdBlkRegCompleteHandler 0017             i2c_setDataCompleteCallback@p 0027  
                     OLED_SetRow@address 0023                  i1_rd2RegCompleteHandler 1F47  
                       ?_OLED_Initialize 0070                               ?_OLED_Data 0070  
                i1_wr2RegCompleteHandler 1F17                    SPI2_Exchange8bit@data 0020  
          __size_of_do_I2C_SEND_ADR_READ 000C                         ??i1_do_I2C_RESET 0070  
                           ??_i2c_poller 0027                    __end_of_years_to_days 0A28  
                            _do_I2C_IDLE 1000                         OLED_PutPicture@i 0028  
                       OLED_PutPicture@j 0026                              _do_I2C_RCEN 1E2A  
             __end_ofi1_i2c_restartWrite 0004                           __end_of___bmul 1F69  
                         __end_of___lmul 12A8                            __pidataBIGRAM 0570  
                         __end_of___wmul 1070                               ?i1_i2c_ISR 0070  
                     _mssp1_IRQisEnabled 1DB7                   i1_i2c1_driver_sendNACK 1D43  
                       ?i1_do_I2C_DO_ACK 0070                           __end_of_gmtime 1000  
                 ?_OSCILLATOR_Initialize 0070                           __end_of_memset 1039  
                         __end_of_isleap 1340                   __end_of_months_to_days 10CB  
                        _SPI2_Initialize 1D7F                           __end_of_mktime 0EAE  
           __size_of_do_I2C_DO_NACK_STOP 0008                           __end_of_lookup 0926  
                        ymd_to_scalar@mo 0042                          ymd_to_scalar@yr 0040  
                     _mssp1_waitForEvent 1E68                   i1_i2c1_driver_resetBus 1D08  
                         __end_of_strlen 10AC                  ?_do_I2C_DO_NACK_RESTART 0070  
                    start_initialization 0024                                _i2c_close 1039  
                    _i2c_busCollisionISR 1D12          __size_of_PIN_MANAGER_Initialize 0042  
                    ?_mssp1_IRQisEnabled 0070                           ?i1_returnReset 0079  
               ?i1_i2c1_driver_getRXData 0070      __end_ofi1_do_I2C_SEND_RESTART_WRITE 1D4F  
            i1_do_I2C_SEND_RESTART_WRITE 1D4B                      ?_mssp1_waitForEvent 0070  
                           setCallBack@p 0022                       __end_of_i2c_poller 1E7E  
           __size_of_i2c1_driver_sendACK 0004                          i2c_open@address 0023  
                i2c_setBuffer@bufferSize 0020                  ??_i2c1_driver_getRXData 0020  
                      _rtc6_GetComponent 10EB                   rd1RegCompleteHandler@p 0029  
           __size_of_i2c1_driver_restart 0003                          ??i1_setCallBack 0073  
           __size_of_i2c1_driver_startRX 0003                             ?_Modify_Data 0026  
                     ?_rtc6_GetComponent 0033                    __end_of_i2c_setBuffer 1F91  
                      __size_of_i2c_open 004E    __end_ofi1_i2c_setDataCompleteCallback 1E95  
 __size_ofi1_i2c_setDataCompleteCallback 000C            i1_i2c_setDataCompleteCallback 1E89  
                       ?_OLED_PutPicture 0024                     ?_i2c_busCollisionISR 0070  
                       __CFG_LPBOREN$OFF 0000                     __end_of_mssp1_setIRQ 1D3F  
                   ??_mssp1_IRQisEnabled 0020                         i1setCallBack@idx 0074  
                  __size_of_OLED_Command 000A                                 ??___bmul 0021  
                       ??_PMD_Initialize 0020                    __end_ofi1_do_I2C_IDLE 1D79  
                               ??___lmul 0028             i2c_read1ByteRegister@address 002C  
                  __end_ofi1_do_I2C_RCEN 1D7F                i1i2c_setBuffer@bufferSize 0070  
                               ??___wmul 0024                   ?i1_do_I2C_SEND_RESTART 0070  
                    ??_rtc6_GetComponent 0034                     ??_mssp1_waitForEvent 0020  
                       i1_mssp1_clearIRQ 1D24                   wr1RegCompleteHandler@p 0029  
                            __doprnt@len 003F                              __doprnt@val 0041  
                          ?_do_I2C_RESET 0070                              __pdataBANK1 00E4  
                               ??_gmtime 0038                                 ??_memset 0026  
                               ??_isleap 0036                _do_I2C_TX_EMPTY$intlevel0 124E  
                               ??_mktime 0054                              ?_returnStop 0029  
                ??_i2c1_driver_setI2cISR 0022                                 ??_strlen 0022  
         __end_of_do_I2C_DO_NACK_RESTART 1E0E                              ?_rtcc_write 002E  
                        ?_months_to_days 002E                               localtime@t 0047  
                   _i2c1_driver_sendNACK 1D67                              __pbssBIGRAM 238C  
               i1_do_I2C_DO_ADDRESS_NACK 110B                            ??_OLED_SetRow 0022  
                            __pbssCOMMON 007A                               ?_i2c_close 0070  
                              ___latbits 0002                     _i2c1_driver_resetBus 1D09  
                          __pcstackBANK0 0020                            __pcstackBANK1 00A0  
      __size_ofi1_do_I2C_DO_NACK_RESTART 0004                 i1rd2RegCompleteHandler@p 0079  
                              _do_I2C_RX 14E3                ?i1_do_I2C_DO_NACK_RESTART 0070  
                              _do_I2C_TX 1655                            ?_Write_String 005D  
                ??i1_do_I2C_DO_NACK_STOP 0070                             _isdigit$2071 0020  
              ??i1_rd2RegCompleteHandler 007A                __end_of_rtc6_GetComponent 110B  
                         _OLED_SetColumn 1009           __size_of_do_I2C_SEND_ADR_WRITE 000B  
              ??i1_wr2RegCompleteHandler 007A            __size_ofi1_i2c1_driver_TXData 0005  
          __end_of_do_I2C_SEND_ADR_WRITE 1E68                           i1setCallBack@p 0072  
                       _i2c_restartWrite 1D91                                __doprnt@c 0046  
                              __doprnt@f 0036               _i2c_restartWrite$intlevel0 1D95  
                           _OLED_Command 1E20                __size_of_i2c1_driver_open 000A  
              __size_of_i2c1_driver_stop 0003                                 ?_i2c_ISR 0070  
        _do_I2C_SEND_ADR_WRITE$intlevel0 1E61         __size_ofi1_do_I2C_SEND_ADR_WRITE 0007  
                            ??_OLED_Data 0021                          _do_I2C_TX_EMPTY 124A  
                          ??_setCallBack 0023                    __size_of_rtc6_GetTime 0088  
                  OLED_SetColumn@address 0023                 i1wr2RegCompleteHandler@p 0079  
                ??i1_i2c1_driver_sendACK 0070                    _rd2RegCompleteHandler 1FD3  
                  ??_i2c_busCollisionISR 0070                    __end_of_fsmStateTable 1820  
          __size_ofi1_i2c1_driver_isNACK 0008                         ___lwdiv@dividend 0028  
                 _PIN_MANAGER_Initialize 145C                    _wr2RegCompleteHandler 1F91  
                ??i1_i2c1_driver_restart 0070                  ??i1_i2c1_driver_startRX 0070  
                  __size_of_rtc6_SetTime 0080                                 ?___aldiv 0020  
                __end_of_SPI2_Initialize 1D85                                 ?___almod 0020  
                         ??_do_I2C_RESET 0020                                 ?___awdiv 0020  
                              __ptext101 1177                                __ptext110 1DB0  
                              __ptext102 1D24                                __ptext111 1DC6  
                              __ptext103 141E                                __ptext120 1DBE  
                              __ptext112 1D53                                __ptext104 156F  
                              __ptext121 1D6F                                __ptext113 1D4F  
                              __ptext105 110B                                __ptext130 0002  
                              __ptext122 1D1E                                __ptext114 1D4B  
                              __ptext106 1D5F                                __ptext131 1D0D  
                              __ptext123 1D43                                __ptext115 1D47  
                              __ptext107 1D5B                                __ptext140 1D12  
                              __ptext132 1D0B                                __ptext124 1D08  
                              __ptext116 1D74                                __ptext108 1D57  
                              __ptext141 1D0F                                __ptext133 1F17  
                              __ptext125 1D1B                                __ptext117 1DA9  
                              __ptext109 1D79                                __ptext134 1E89  
                              __ptext126 1FE9                                __ptext118 119D  
                              __ptext135 112E                                __ptext127 1F47  
                              __ptext119 1D21                                __ptext136 1EEB  
                              __ptext128 1F37                                __ptext137 1D18  
                              __ptext129 1F27                                __ptext138 1D15  
                              __ptext139 1D3F                                 ?___awmod 0020  
            __end_of_i2c_masterOperation 094A                                 ?___lwdiv 0026  
               ??_do_I2C_DO_ADDRESS_NACK 0020                                 ?___lwmod 002E  
            _i2c1_driver_busCollisionISR 007C                                 ?__doprnt 0034  
                  __end_of_do_I2C_DO_ACK 1DFE                              ??i1_i2c_ISR 0074  
           ??_INTERRUPT_InterruptManager 0077                         ___almod@dividend 0024  
             ??_do_I2C_SEND_RESTART_READ 0020                    ?_i2c1_driver_sendNACK 0070  
        __end_ofi1_i2c1_driver_getRXData 1D21                 ??i1_do_I2C_SEND_ADR_READ 0071  
                       ??_mssp1_clearIRQ 0020                          ??i1_returnReset 007A  
                               ?_isdigit 0070                    ?_i2c1_driver_resetBus 0070  
               ?i1_rd1RegCompleteHandler 0079       __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                         ??_Write_String 005F                 ?i1_wr1RegCompleteHandler 0079  
                             ?_do_I2C_RX 0070                               ?_do_I2C_TX 0070  
                       ___lwdiv@quotient 002B                   __end_of_OLED_SetColumn 1020  
                      _i2c1_driver_start 1D2D                                 ?_sprintf 0047  
                           _rtc6_GetTime 0C15                           __size_of_dylen 0037  
                ??_rd1RegCompleteHandler 002A                                _localtime 149E  
                __size_ofi1_mssp1_setIRQ 0003                           __size_of_putch 0001  
                      _i2c_ISR$intlevel0 11F4                       ?_i2c1_driver_start 0070  
                    __end_of_OLED_SetRow 1E89                    __end_of_ymd_to_scalar 174E  
                ??_wr1RegCompleteHandler 002A                          ___aldiv@divisor 0020  
                        ___aldiv@counter 0029                           ___wmul@product 0024  
                           _rtc6_SetTime 0B13                   i2c_read1ByteRegister@e 002D  
                               _LATAbits 0016                   i2c_read1ByteRegister@x 002E  
                               _LATCbits 0018                                 _LATDbits 0019  
                        _rtc6_Initialize 174E                      __size_of_returnStop 0006  
                              clear_ram0 1EAD                                 _PIE3bits 0719  
                    __size_of_rtcc_write 0013                      ??_i2c1_driver_start 0020  
    __size_of_INTERRUPT_InterruptManager 001E                                 _PIR3bits 070F  
                               _SSP1CON1 0190                                 _SSP1CON2 0191  
                               _SSP2CON1 019A                                _time_zone 006E  
           ?_i2c_setDataCompleteCallback 0025           ?i1_i2c_setDataCompleteCallback 0075  
                              _rtcc_read 1E3E                                 _SSP1STAT 018F  
                               _SSP2STAT 0199                      __end_of_setCallBack 1177  
             __end_ofi1_i2c1_driver_stop 1D1B                        ___wmul@multiplier 0020  
           i2c_setAddressNACKCallback@cb 0025                          Write_String@len 005F  
                      ?_do_I2C_SEND_STOP 0070              ?i1_do_I2C_SEND_RESTART_READ 0070  
                         _CharacterArray 238C                              ??_i2c_close 0020  
              __end_of_i2c1_driver_start 1D30                            ??_returnReset 002A  
                     ??_do_I2C_SEND_STOP 0020              __size_of_i2c1_driver_TXData 0006  
         __size_of_i2c_read1ByteRegister 004E             ??_i2c_setAddressNACKCallback 0028  
          __end_of_i2c_read1ByteRegister 1655        __end_of_do_I2C_SEND_RESTART_WRITE 1DE6  
                      Modify_Data@offset 0028                  __end_of_do_I2C_TX_EMPTY 1278  
                        ?_OLED_SetColumn 0070               __size_of_rtc6_GetComponent 0020  
                      ___lmul@multiplier 0020                    rtc6_GetComponent@mask 0033  
                  rtc6_SetComponent@mask 0033                               ?_localtime 0070  
               ?_rdBlkRegCompleteHandler 0029                    rtc6_SetComponent@time 0034  
                      ?_mssp1_disableIRQ 0070             __size_of_do_I2C_SEND_RESTART 0008  
            __size_of_i2c1_driver_isNACK 0009                  _do_I2C_DO_ACK$intlevel0 1DFA  
                               _i2c_open 15B9                            ?i1_returnStop 0079  
                  __size_of_mssp1_setIRQ 0003                         rtc6_GetTime@tm_t 00A0  
                     ??_mssp1_disableIRQ 0020                   ?_rd2RegCompleteHandler 0029  
                    _do_I2C_DO_NACK_STOP 1DFE                         __size_of_i2c_ISR 002D  
                 ?_wr2RegCompleteHandler 0029          _wr2RegCompleteHandler$intlevel0 1F95  
        _rd2RegCompleteHandler$intlevel0 1FD7                                gmtime@tim 0149  
                   __size_of_Modify_Data 0071                             ?_do_I2C_IDLE 0070  
                           ?_do_I2C_RCEN 0070                         ?_SPI2_Initialize 0070  
                ?i1_i2c1_driver_sendNACK 0070                  ??_OSCILLATOR_Initialize 0020  
                             ?_rtcc_read 0070                         __size_of___aldiv 0082  
                       __size_of___almod 006E                      _i2c1_driver_sendACK 1D63  
               __size_of_i2c_masterWrite 0004                         __size_of___awdiv 0052  
                       __size_of___awmod 0046          __size_of_do_I2C_DO_ADDRESS_NACK 002A  
                    i2c1_driver_TXData@d 0020                    i1i2c_setBuffer@buffer 0073  
                       __size_of___lwdiv 0035                   ??_i2c1_driver_sendNACK 0020  
                       __size_of___lwmod 002D            ??_i2c_setDataCompleteCallback 0028  
        __end_ofi1_rd1RegCompleteHandler 1F47                  ?i1_i2c1_driver_resetBus 0070  
               __size_ofi1_i2c_setBuffer 000E         ??_i2c1_driver_setBusCollisionISR 0022  
        ?_i2c1_driver_setBusCollisionISR 0020                            ??i1_do_I2C_RX 0070  
                          ??i1_do_I2C_TX 0071       _do_I2C_SEND_RESTART_READ$intlevel0 1DDA  
                    _i2c1_driver_restart 1D30                         __size_of__doprnt 0302  
            __size_ofi1_do_I2C_SEND_STOP 0004          __end_ofi1_wr1RegCompleteHandler 1F37  
                   ?_do_I2C_DO_NACK_STOP 0070                      _i2c1_driver_startRX 1D36  
           __end_of_do_I2C_SEND_ADR_READ 1EAD                   ??_i2c1_driver_resetBus 0020  
                            _isleap$2139 0038          __size_ofi1_do_I2C_SEND_ADR_READ 0008  
                               _dateTime 0120                         __size_of_isdigit 000F  
                            _OLED_SetRow 1E7E                       i1_i2c_restartWrite 0002  
                        ___lwdiv@divisor 0026                             _mssp1_setIRQ 1D3C  
                            ??_do_I2C_RX 0020                              ??_do_I2C_TX 0021  
                     __end_of_emptyArray 054B                          ___lwdiv@counter 002D  
                               __ptext10 0C15                                 __ptext11 10EB  
                               __ptext20 12DA                                 __ptext12 1F57  
                               __ptext21 108D                                 __ptext13 0D8D  
                               __ptext30 1E7E                                 __ptext22 10CB  
                               __ptext14 16F7                                 __ptext31 1009  
                               __ptext23 006E                                 __ptext15 09B8  
                               __ptext40 1607                                 __ptext32 1E48  
                               __ptext24 1D0A                                 __ptext16 1278  
                               __ptext41 1EDE                                 __ptext33 0A28  
                               __ptext25 1F08                                 __ptext17 10AC  
                               __ptext50 1E68                                 __ptext42 15B9  
                               __ptext34 1054                                 __ptext26 121D  
                               __ptext18 130C                                 __ptext51 11F0  
                               __ptext43 1DA3                                 __ptext35 1EF9  
                               __ptext27 1340                                 __ptext19 1020  
                               __ptext60 1EA1                                 __ptext52 14E3  
                               __ptext44 1D9D                                 __ptext36 174E  
                               __ptext28 17A7                                 __ptext61 1DEE  
                               __ptext53 1655                                 __ptext45 1E34  
                               __ptext37 1F69                                 __ptext29 13AC  
                               __ptext70 1D97                                 __ptext62 1DE6  
                               __ptext54 11C6                                 __ptext46 1D6B  
                               __ptext38 12A8                                 __ptext71 1D39  
                               __ptext63 1DDE                                 __ptext55 1E06  
                               __ptext47 0926                                 __ptext39 1E3E  
                               __ptext80 1D8B                                 __ptext72 1D67  
                               __ptext64 1DD6                                 __ptext56 1DFE  
                               __ptext48 1DB7                                 __ptext81 1D85  
                               __ptext73 1D09                                 __ptext65 1000  
                               __ptext57 1DF6                                 __ptext49 1E73  
                               __ptext90 1039                                 __ptext82 1F91  
                               __ptext74 1D36                                 __ptext66 1E52  
                               __ptext58 1E2A                                 __ptext91 1D2A  
                               __ptext83 1ED1                                 __ptext75 1070  
                               __ptext67 124A                                 __ptext59 1E5D  
                               __ptext92 1D27                                 __ptext84 1152  
                               __ptext76 1FD3                                 __ptext68 1D3C  
                               __ptext93 1D7F                                 __ptext85 1F7C  
                               __ptext77 1FBD                                 __ptext69 1E17  
                               __ptext94 1DCE                                 __ptext86 1D33  
                               __ptext78 1FA7                                 __ptext95 145C  
                               __ptext87 1D30                                 __ptext79 1D91  
                               __ptext96 1E0E                                 __ptext88 1D63  
                               __ptext97 0A99                                 __ptext89 1D2D  
                               __ptext98 1E20                                 __ptext99 1E95  
                           _SSP1CON1bits 0190                             _SSP1CON2bits 0191  
                __end_of_rtc6_Initialize 17A7                 __end_ofi1_mssp1_clearIRQ 1D27  
                           _SSP2CON1bits 019A                     ?_i2c1_driver_sendACK 0070  
                   __end_of_do_I2C_RESET 1E5D                          ___almod@divisor 0020  
                       __size_of_sprintf 0020                          ___almod@counter 0029  
               ??_i2c_write1ByteRegister 002C                           ??i1_returnStop 007A  
                          OLED_Data@temp 0021                         OLED_Clear@j_1694 002D  
                i1_do_I2C_SEND_ADR_WRITE 1DB0                      ?i1_i2c_restartWrite 0079  
                   ?_i2c1_driver_restart 0070                      __end_of_returnReset 1D91  
                       _i2c1_driver_open 1E34                         _i2c1_driver_stop 1D33  
                          __size_of_main 00F0                     ?_i2c1_driver_startRX 0070  
         __size_of_i2c1_driver_getRXData 0003            __end_of_i2c1_driver_getRXData 1D3C  
                   __CFG_WDTCWS$WDTCWS_7 0000                              _setCallBack 1152  
                ??i1_do_I2C_SEND_RESTART 0070         __size_ofi1_i2c1_driver_getRXData 0003  
                i2c_masterOperation@read 0028     __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004  
         __end_ofi1_i2c1_driver_sendNACK 1D47                     __end_of_Write_String 130C  
                               _timezone 006A                                 int$flags 007E  
             ??i1_do_I2C_DO_ADDRESS_NACK 0070                 __size_of_OLED_Initialize 007A  
                       ??_months_to_days 0030         __end_ofi1_do_I2C_DO_NACK_RESTART 1D63  
         __end_ofi1_i2c1_driver_resetBus 1D09       __end_of_INTERRUPT_InterruptManager 0022  
             _INTERRUPT_InterruptManager 0004                             _SSP1STATbits 018F  
                   ??i1_i2c_restartWrite 007A                                 main@tm_t 00C2  
       __end_of_do_I2C_SEND_RESTART_READ 1DDE                 i2c_read1ByteRegister@reg 002A  
                           ??_returnStop 002A                 __end_of_i2c_restartWrite 1D97  
                           _SSP2STATbits 0199                         Modify_Data@limit 002A  
                  ??_do_I2C_DO_NACK_STOP 0020                         Modify_Data@right 0035  
                           ??_rtcc_write 002F                       _ymd_to_scalar$2151 004A  
              mssp1_waitForEvent@timeout 0020           __size_of_i2c1_driver_setI2cISR 0006  
          __end_of_i2c1_driver_setI2cISR 1DA9                               _INTCONbits 000B  
             __size_of_i2c1_driver_start 0003                                 gmtime@tc 003B  
                               gmtime@tp 003A                      __end_ofi1_do_I2C_RX 145C  
                    __end_ofi1_do_I2C_TX 15B9                                 isdigit@c 0021  
                               memset@p1 0020                 __size_ofi1_do_I2C_DO_ACK 0004  
                 __size_of_years_to_days 0070                    ??_i2c1_driver_sendACK 0020  
                               isleap@yr 0034                         ?_do_I2C_TX_EMPTY 0070  
                         i1_mssp1_setIRQ 1D21                              ??_localtime 003F  
                 _do_I2C_DO_ADDRESS_NACK 11C6           __size_ofi1_do_I2C_DO_NACK_STOP 0004  
                               intlevel1 0000            __end_ofi1_do_I2C_DO_NACK_STOP 1D5F  
                             _OLED_Clear 17A7                                sprintf@ap 0058  
                 _do_I2C_RESET$intlevel0 1E56                                sprintf@pb 0059  
                              sprintf@wh 0047                    ??_i2c1_driver_restart 0020  
                 rd2RegCompleteHandler@p 0029                    ??_i2c1_driver_startRX 0020  
                       ___lwmod@dividend 0030                                 mktime@tt 005A  
                ?_PIN_MANAGER_Initialize 0070                        i2c_restartWrite@p 0029  
                 i1_do_I2C_SEND_ADR_READ 1DC6                        __CFG_CLKOUTEN$OFF 0000  
             ?i1_rdBlkRegCompleteHandler 0079                       __end_of_returnStop 1D8B  
                  __end_ofi1_setCallBack 1152                      ymd_to_scalar@scalar 004C  
                     __end_of_rtcc_write 1F7C      __size_ofi1_do_I2C_SEND_RESTART_READ 0004  
         __size_ofi1_i2c1_driver_sendACK 0004            __end_ofi1_i2c1_driver_sendACK 1D43  
            __size_of_mssp1_IRQisEnabled 0007           __size_ofi1_i2c1_driver_restart 0003  
          __end_ofi1_i2c1_driver_restart 1D18                   wr2RegCompleteHandler@p 0029  
                            ??_rtcc_read 0031              __size_of_mssp1_waitForEvent 000B  
         __size_ofi1_i2c1_driver_startRX 0003             __end_ofi1_i2c1_driver_TXData 1D74  
          __end_ofi1_i2c1_driver_startRX 1D1E                 __size_of_OLED_PutPicture 0039  
                          __pstringtext1 074B                            __pstringtext2 1800  
                          __pstringtext3 1855                            __pstringtext4 1861  
                          __pstringtext5 0370                            __pstringtext6 1820  
                          __pstringtext7 183F                            __pstringtext8 0000  
                __size_ofi1_do_I2C_RESET 0007                                 sprintf@f 0049  
           __end_ofi1_i2c1_driver_isNACK 1DC6                          ___lwmod@divisor 002E  
                               strlen@cp 0024                        ??_i2c_masterWrite 002A  
     __end_of_i2c_setAddressNACKCallback 1EEB               _i2c_setAddressNACKCallback 1EDE  
                        ___lwmod@counter 0033                   __size_of_i2c_setBuffer 0015  
                           ___aldiv@sign 002A                   __end_ofi1_mssp1_setIRQ 1D24  
                      ??i1_i2c_setBuffer 0072                              _returnReset 1D8B  
       _do_I2C_DO_NACK_RESTART$intlevel0 1E0A                ??i1_do_I2C_SEND_ADR_WRITE 0071  
                       ?_rtc6_Initialize 0070                   __size_ofi1_do_I2C_IDLE 0005  
                 __size_ofi1_do_I2C_RCEN 0006           __end_of_PIN_MANAGER_Initialize 149E  
            __end_of_i2c_busCollisionISR 1D15                             ___almod@sign 002A  
         __size_of_rd1RegCompleteHandler 0016          __size_of_i2c_write1ByteRegister 0032  
          __end_of_rd1RegCompleteHandler 1FD3                rtc6_SetComponent@inMemory 003B  
         __size_of_wr1RegCompleteHandler 0016                        _rtc6_SetComponent 13E5  
       __size_ofi1_rd1RegCompleteHandler 0010            __end_of_wr1RegCompleteHandler 1FBD  
                  _do_I2C_SEND_ADR_WRITE 1E5D                     _do_I2C_SEND_ADR_READ 1EA1  
      __end_ofi1_rdBlkRegCompleteHandler 2000         __size_ofi1_wr1RegCompleteHandler 0010  
                     ?_rtc6_SetComponent 0033                rtc6_GetComponent@location 0037  
